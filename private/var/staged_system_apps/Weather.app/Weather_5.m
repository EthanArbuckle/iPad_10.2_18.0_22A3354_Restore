__n128 sub_100274138@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,char a25)
{
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  _QWORD *v53;
  uint64_t v54;
  __int128 v55;
  __n128 result;

  type metadata accessor for Date(0);
  sub_1000B2EF0(a9, a1);
  v31 = (int *)sub_1000F40BC();
  v32 = a9 + v31[5];
  v33 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v32, a2, v33);
  sub_1000787D4(a3, a9 + v31[6], &qword_100BCE370);
  *(_QWORD *)(a9 + v31[7]) = a4;
  v34 = sub_100098B2C();
  type metadata accessor for DetailCondition(v34);
  v35 = sub_1000C52AC();
  v36(v35, a5);
  v37 = sub_100098B2C();
  type metadata accessor for DetailChartCondition(v37);
  v38 = sub_1000C52AC();
  v39(v38, a6);
  sub_1000B2EF0(a9 + v31[10], a7);
  *(_BYTE *)(a9 + v31[11]) = a8;
  sub_1000B2EF0(a9 + v31[12], a10);
  v40 = sub_100098B2C();
  type metadata accessor for Location(v40);
  v41 = sub_1000C52AC();
  v42(v41, a11);
  v43 = sub_100098B2C();
  type metadata accessor for Locale(v43);
  v44 = sub_1000C52AC();
  v45(v44, a12);
  sub_1000DB264();
  v46 = sub_1000C52AC();
  v47(v46, a13);
  v48 = sub_100098B2C();
  type metadata accessor for CurrentWeather(v48);
  v49 = sub_1000C52AC();
  v50(v49, a14);
  sub_1000BA294(&qword_100BCB130);
  v51 = sub_1000C52AC();
  v52(v51, a15);
  sub_10007802C(a16, a9 + v31[18], type metadata accessor for WeatherData);
  sub_10007802C(a17, a9 + v31[19], type metadata accessor for NewsDataModel);
  sub_1000787D4(a18, a9 + v31[20], &qword_100BD0B58);
  v53 = (_QWORD *)(a9 + v31[21]);
  *v53 = a19;
  v53[1] = a20;
  sub_1000787D4(a21, a9 + v31[22], &qword_100BCCC48);
  sub_1000787D4(a22, a9 + v31[23], &qword_100BCB9F0);
  v54 = a9 + v31[24];
  v55 = *(_OWORD *)(a23 + 16);
  *(_OWORD *)v54 = *(_OWORD *)a23;
  *(_OWORD *)(v54 + 16) = v55;
  result = *(__n128 *)(a23 + 32);
  *(__n128 *)(v54 + 32) = result;
  *(_BYTE *)(a9 + v31[25]) = a24;
  *(_BYTE *)(a9 + v31[26]) = a25;
  return result;
}

uint64_t sub_10027441C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1000F40BC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  type metadata accessor for ConditionDetailInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100079FBC();
  sub_1000BA294(&qword_100BD0D28);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v15 = v12 - v11 + *(int *)(v14 + 48);
  v16 = sub_1000DF508();
  sub_100080C0C(v16, v17, type metadata accessor for ConditionDetailInput);
  sub_100080C0C(a2, v15, type metadata accessor for ConditionDetailInput);
  sub_100088FC8(v13, 1, v4);
  if (!v21)
  {
    sub_1000860E4(v13, v18, type metadata accessor for ConditionDetailInput);
    v22 = sub_100088FC8(v15, 1, v4);
    if (!v21)
    {
      sub_10007802C(v15, v8, type metadata accessor for ConditionDetailInput.Input);
      v20 = sub_1002734C0(v2, v8);
      sub_1000215BC(v8, type metadata accessor for ConditionDetailInput.Input);
      sub_1000215BC(v2, type metadata accessor for ConditionDetailInput.Input);
      sub_100098AD4(v23, type metadata accessor for ConditionDetailInput);
      return v20 & 1;
    }
    sub_1000878B4(v22, type metadata accessor for ConditionDetailInput.Input);
LABEL_9:
    sub_100021A14(v13, &qword_100BD0D28);
    v20 = 0;
    return v20 & 1;
  }
  v19 = sub_100088FC8(v15, 1, v4);
  if (!v21)
    goto LABEL_9;
  sub_100098AD4(v19, type metadata accessor for ConditionDetailInput);
  v20 = 1;
  return v20 & 1;
}

uint64_t sub_1002745C8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t IsSameDayCache;
  uint64_t v16;

  v3 = v1;
  v5 = type metadata accessor for UnfairLock.Options(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100079FBC();
  sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
  *(_QWORD *)(v1 + 56) = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0x6F697469646E6F43, 0xEF6C69617465446ELL);
  v7 = sub_1000BA294(&qword_100BC28E8);
  v8 = swift_allocObject(v7, ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72), *(unsigned __int8 *)(v6 + 80) | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10097CA50;
  static UnfairLock.Options.dataSynchronization.getter(v8);
  v16 = v8;
  sub_10000F1C8((unint64_t *)&qword_100BC28F0, (uint64_t (*)(uint64_t))&type metadata accessor for UnfairLock.Options);
  v10 = v9;
  v11 = sub_1000BA294(&qword_100BC28F8);
  sub_10003D2DC((unint64_t *)&qword_100BC2900, &qword_100BC28F8);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v11, v12, v5, v10);
  v13 = type metadata accessor for UnfairLock(0);
  sub_1000860C4(v13);
  *(_QWORD *)(v3 + 64) = UnfairLock.init(options:)(v2);
  IsSameDayCache = type metadata accessor for IsSameDayCache(0);
  sub_1000860C4(IsSameDayCache);
  *(_QWORD *)(v3 + 72) = IsSameDayCache.init()();
  sub_10003C800(a1, v3 + 16);
  return v3;
}

void sub_100274784(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  os_log_type_t v136;
  _BOOL4 v137;
  uint64_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(_QWORD);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(_QWORD, _QWORD);
  uint64_t v160;
  os_log_type_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t *v168;
  int EnumCaseMultiPayload;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(_QWORD);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t (*v178)(uint64_t, _QWORD);
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t (*v184)(uint64_t, _QWORD);
  uint64_t v185;
  void (*v186)(_QWORD, _QWORD);
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  os_log_type_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void (*v214)(_QWORD, _QWORD, _QWORD);
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)(_QWORD);
  uint64_t v218;
  uint64_t v219;
  os_log_type_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  void (*v225)(_QWORD, _QWORD, _QWORD);
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t *v246;
  char v247;
  void (*v248)(uint64_t, uint64_t *);
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(uint64_t, uint64_t);
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _QWORD *v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(uint64_t, uint64_t, uint64_t);
  uint64_t v299;
  uint64_t v300;
  int *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  __int128 *v309;
  __int128 v310;
  uint64_t v311;
  void (*v312)(uint64_t, uint64_t *);
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  _QWORD v318[8];
  _QWORD v319[2];
  uint64_t *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  _QWORD v352[3];
  uint64_t v353;
  uint64_t v354;
  void (*v355)(uint64_t, uint64_t, uint64_t);
  uint64_t v356;
  unint64_t v357;
  uint64_t v358;
  _QWORD v359[2];
  uint64_t v360;
  void (*v361)(_QWORD, _QWORD, _QWORD);
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  void (*v370)(_QWORD, _QWORD);
  uint64_t v371;
  uint64_t v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t v375;
  _QWORD *v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char v393[8];
  uint64_t v394;
  char v395[8];
  __int128 v396;
  __int128 v397;
  __int128 v398;
  char v399[8];
  __int128 v400;
  __int128 v401;
  __int128 v402;
  char v403[8];
  uint64_t v404;
  uint64_t v405;

  v389 = a1;
  v388 = a2;
  v4 = type metadata accessor for ConditionDetailChartInputs(0);
  sub_1000B43A4(v4, (uint64_t)&v404);
  v381 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v390 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  sub_100079F7C();
  sub_10009511C(v9);
  sub_1000BA294(&qword_100BCCC48);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  sub_10009511C(v11);
  sub_1000BA294(&qword_100BD0B58);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v14 = sub_1000987B4(v13);
  v15 = type metadata accessor for Locale(v14);
  sub_1000B43A4(v15, (uint64_t)&v364);
  v335 = v16;
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_100088FDC();
  v19 = sub_1000987B4(v18);
  v20 = type metadata accessor for Location(v19);
  sub_1000B43A4(v20, (uint64_t)&v362);
  v334 = v21;
  sub_10009D98C();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v24 = sub_1000987B4(v23);
  v25 = type metadata accessor for DetailChartCondition(v24);
  sub_1000B43A4(v25, (uint64_t)v359);
  v327 = v26;
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_100088FDC();
  v29 = sub_1000987B4(v28);
  v30 = type metadata accessor for DetailCondition(v29);
  sub_1000B43A4(v30, (uint64_t)v399);
  v333 = v31;
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_100088FDC();
  sub_10009511C(v33);
  sub_1000BA294(&qword_100BCE370);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_100088FDC();
  sub_10009511C(v35);
  sub_1000BA294(&qword_100BCB9F8);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_100088FDC();
  v38 = sub_1000987B4(v37);
  type metadata accessor for TimeState(v38);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_100088FDC();
  sub_10009511C(v40);
  v328 = *(_QWORD *)(sub_1000BA294(&qword_100BD0D68) - 8);
  sub_10009D98C();
  __chkstk_darwin(v41);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v42);
  sub_1000860D0();
  v391 = v43;
  sub_10009D2A4();
  __chkstk_darwin(v44);
  sub_100079F7C();
  sub_10009511C(v45);
  sub_1000BA294(&qword_100BD0D70);
  sub_1000B42B0();
  __chkstk_darwin(v46);
  sub_100088FDC();
  sub_10009511C(v47);
  sub_1000BA294(&qword_100BCB9F0);
  sub_1000B42B0();
  __chkstk_darwin(v48);
  sub_100088FDC();
  sub_10009511C(v49);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v50);
  sub_100088FDC();
  v52 = sub_1000987B4(v51);
  v53 = type metadata accessor for DayWeather(v52);
  sub_1000B43A4(v53, (uint64_t)v395);
  v376 = v54;
  sub_10009D98C();
  __chkstk_darwin(v55);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v56);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v57);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v58);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v59);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v60);
  sub_100079F7C();
  sub_10009511C(v61);
  sub_1000BA294(&qword_100BCB130);
  sub_1000B42B0();
  __chkstk_darwin(v62);
  sub_100088FDC();
  v64 = sub_1000987B4(v63);
  v65 = type metadata accessor for CurrentWeather(v64);
  sub_1000B43A4(v65, (uint64_t)&v390);
  v359[0] = v66;
  sub_10009D98C();
  __chkstk_darwin(v67);
  sub_100088FDC();
  v69 = sub_1000987B4(v68);
  v70 = type metadata accessor for Date(v69);
  sub_1000B43A4(v70, (uint64_t)v403);
  v371 = v71;
  sub_10009D98C();
  __chkstk_darwin(v72);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v73);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v74);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v75);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v76);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v77);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v78);
  sub_100079F7C();
  v80 = sub_1000987B4(v79);
  v81 = type metadata accessor for TimeZone(v80);
  sub_1000B43A4(v81, (uint64_t)&v387);
  v356 = v82;
  sub_10009D98C();
  __chkstk_darwin(v83);
  sub_100088FDC();
  v85 = sub_1000987B4(v84);
  v86 = type metadata accessor for Calendar(v85);
  sub_1000B43A4(v86, (uint64_t)&v381);
  v352[0] = v87;
  sub_10009D98C();
  __chkstk_darwin(v88);
  sub_100088FDC();
  v90 = sub_1000987B4(v89);
  type metadata accessor for NewsDataModel(v90);
  sub_1000B42B0();
  __chkstk_darwin(v91);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v92);
  sub_100079F7C();
  v94 = sub_1000987B4(v93);
  v354 = type metadata accessor for WeatherData(v94);
  sub_1000B42B0();
  __chkstk_darwin(v95);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v96);
  sub_100079F7C();
  sub_10009511C(v97);
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v98);
  sub_100079FBC();
  v99 = type metadata accessor for LocationWeatherDataState(0);
  sub_1000B42B0();
  __chkstk_darwin(v100);
  sub_1000986FC();
  sub_1000BA30C();
  v102 = __chkstk_darwin(v101);
  v104 = (char *)&v321 - v103;
  __chkstk_darwin(v102);
  sub_10009511C((uint64_t)&v321 - v105);
  sub_1000BA294(&qword_100BD0D78);
  sub_1000B42B0();
  __chkstk_darwin(v106);
  sub_100098728();
  v109 = v108 - v107;
  v110 = type metadata accessor for ConditionDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v111);
  sub_1000986FC();
  sub_1000BA30C();
  v113 = __chkstk_darwin(v112);
  v115 = (char *)&v321 - v114;
  __chkstk_darwin(v113);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v116);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v117);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v118);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v119);
  v121 = ((char *)&v321 - v120);
  v122 = type metadata accessor for OSSignpostID(0);
  sub_1000B43A4(v122, (uint64_t)&v405);
  v386 = v123;
  sub_10009D98C();
  __chkstk_darwin(v124);
  sub_100098728();
  v127 = v126 - v125;
  v360 = v2;
  v128 = *(id *)(v2 + 56);
  v129 = OSSignpostID.init(log:)(v128);
  v130 = static os_signpost_type_t.begin.getter(v129);
  v384 = (uint64_t)v128;
  v131 = v128;
  v132 = v389;
  v385 = v127;
  os_signpost(_:dso:log:name:signpostID:)(v130, &_mh_execute_header, v131, "Weather:makeConditionDetailInput", 32, 2, v127);
  sub_100276450(v132, v109);
  sub_100088FC8(v109, 1, v110);
  if (v156)
  {
    v133 = v388;
    sub_100021A14(v109, &qword_100BD0D78);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v134 = sub_100098720();
    v135 = sub_1000AECD4(v134, (uint64_t)qword_100CAF0E8);
    Logger.logObject.getter(v135);
    v136 = sub_100094F54();
    v137 = os_log_type_enabled(v121, v136);
    v138 = v384;
    if (v137)
    {
      v139 = (uint8_t *)sub_100098710(2);
      *(_WORD *)v139 = 0;
      _os_log_impl((void *)&_mh_execute_header, v121, v136, "Failed to create condition detail input due to missing conditionDetailViewState", v139, 2u);
      sub_1000986F0((uint64_t)v139);
    }

    v140 = type metadata accessor for ConditionDetailInput.Input(0);
    sub_10009D34C(v133, v141, v142, v140);
    v143 = type metadata accessor for ConditionDetailInput(0);
    v144 = _s7Weather24LocationCompositionStateOwst_0(v133, 0, 1, v143);
    v145 = v387;
    v146 = v386;
    v155 = v385;
    goto LABEL_65;
  }
  v147 = sub_1000DF508();
  sub_10007802C(v147, v148, v149);
  v150 = *(_QWORD *)(v132 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v323 = v110;
  v151 = (uint64_t)v121 + *(int *)(v110 + 20);
  swift_bridgeObjectRetain(v150);
  v153 = Location.id.getter(v152);
  v155 = v154;
  sub_1000EED10(v153, v154, v150);
  swift_bridgeObjectRelease(v155);
  swift_bridgeObjectRelease(v150);
  sub_100088FC8(v3, 1, v99);
  v157 = (uint64_t)v121;
  if (v156)
  {
    sub_100021A14(v3, &qword_100BC3380);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v158 = sub_100098720();
    sub_1000AECD4(v158, (uint64_t)qword_100CAF0E8);
    sub_1000BCF30((uint64_t)v121, (uint64_t)v115);
    v159 = v370;
    sub_1000BCF30((uint64_t)v121, (uint64_t)v370);
    Logger.logObject.getter(v160);
    v161 = sub_100094F54();
    v138 = v161;
    if (os_log_type_enabled((os_log_t)type metadata accessor for ConditionDetailViewState, v161))
    {
      v155 = sub_100098710(22);
      v162 = sub_100098710(64);
      *(_QWORD *)&v396 = v162;
      *(_DWORD *)v155 = 136315394;
      sub_10000F1C8(&qword_100BD0D80, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
      v163 = sub_1000CDEE8();
      v392 = sub_1000C1D88(v163, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v392, v393);
      sub_1000986C4();
      sub_1000215BC((uint64_t)v115, type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v155 + 12) = 2080;
      sub_1000AE8D8();
      v166 = Location.id.getter(v165);
      v392 = sub_1000C1D88(v166, v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v392, v393);
      sub_1000986C4();
      sub_1000215BC((uint64_t)v159, type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)type metadata accessor for ConditionDetailViewState, (os_log_type_t)v138, "Failed to create condition detail input due to missing weather data for location; condition=%s, location=%s",
        (uint8_t *)v155,
        0x16u);
      swift_arrayDestroy(v162, 2);
      sub_1000986F0(v162);
      sub_1000986F0(v155);
    }
    else
    {
      sub_10009EFA8((uint64_t)v115);
      sub_10009EFA8((uint64_t)v159);
    }

    v145 = v388;
    sub_1000CF7E4();
    sub_1000215BC(v157, type metadata accessor for ConditionDetailViewState);
    v144 = sub_1000CDBFC();
    v146 = v386;
    goto LABEL_65;
  }
  v155 = (uint64_t)type metadata accessor for LocationWeatherDataState;
  v168 = v377;
  sub_10007802C(v3, (uint64_t)v377, type metadata accessor for LocationWeatherDataState);
  sub_100080C0C((uint64_t)v168, (uint64_t)v104, type metadata accessor for LocationWeatherDataState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v104);
  if (EnumCaseMultiPayload != 1)
  {
    sub_1000215BC((uint64_t)v104, type metadata accessor for LocationWeatherDataState);
    if (qword_100BC2450 == -1)
    {
LABEL_24:
      v212 = sub_100098720();
      sub_1000AECD4(v212, (uint64_t)qword_100CAF0E8);
      v213 = v353;
      sub_100080C0C(v157, v353, type metadata accessor for ConditionDetailViewState);
      v214 = v361;
      sub_100080C0C(v157, (uint64_t)v361, type metadata accessor for ConditionDetailViewState);
      sub_100280E04();
      sub_100080C0C(v215, v216, v217);
      v138 = Logger.logObject.getter(v218);
      v220 = static os_log_type_t.error.getter(v138, v219);
      if (os_log_type_enabled((os_log_t)v138, v220))
      {
        v221 = sub_100098710(32);
        v391 = sub_100098710(96);
        v392 = v391;
        *(_DWORD *)v221 = 136315650;
        sub_10000F1C8(&qword_100BD0D80, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
        v222 = sub_1000CDEE8();
        *(_QWORD *)&v396 = sub_1000E7BF8(v222, v223);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v396, (char *)&v396 + 8);
        sub_1000986C4();
        sub_1000215BC(v213, type metadata accessor for ConditionDetailViewState);
        *(_WORD *)(v221 + 12) = 2080;
        v224 = v155;
        sub_1000AE8D8();
        v225 = v361;
        v227 = Location.id.getter(v226);
        *(_QWORD *)&v396 = sub_1000E7BF8(v227, v228);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v396, (char *)&v396 + 8);
        sub_1000986C4();
        sub_1000215BC((uint64_t)v225, type metadata accessor for ConditionDetailViewState);
        *(_WORD *)(v221 + 22) = 2080;
        v155 = (uint64_t)&v396;
        sub_10066D398();
        sub_1000BA294(&qword_100BD0D88);
        v229 = String.init<A>(describing:)(&v396);
        *(_QWORD *)&v396 = sub_1000E7BF8(v229, v230);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v396, (char *)&v396 + 8);
        sub_1000986C4();
        sub_100079F9C(v224);
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v138, v220, "Failed to create condition detail input due to missing weather data; condition=%s, location=%s, currentLocationWeather=%s",
          (uint8_t *)v221,
          0x20u);
        v231 = v391;
        swift_arrayDestroy(v391, 3);
        sub_1000986F0(v231);
        sub_1000986F0(v221);

        v232 = (uint64_t)v377;
      }
      else
      {

        sub_10009EFA8(v155);
        v138 = (uint64_t)type metadata accessor for ConditionDetailViewState;
        sub_1000215BC((uint64_t)v214, type metadata accessor for ConditionDetailViewState);
        sub_1000215BC(v213, type metadata accessor for ConditionDetailViewState);
        v232 = (uint64_t)v168;
      }
      sub_1000215BC(v232, type metadata accessor for LocationWeatherDataState);
      sub_1000215BC(v157, type metadata accessor for ConditionDetailViewState);
      v233 = type metadata accessor for ConditionDetailInput(0);
      sub_10009D34C(v388, v234, v235, v233);
LABEL_64:
      v145 = v387;
      v146 = v386;
      sub_1000CF7E4();
LABEL_65:
      v315 = static os_signpost_type_t.end.getter(v144);
      os_signpost(_:dso:log:name:signpostID:)(v315, &_mh_execute_header, v138, "Weather:makeConditionDetailInput", 32, 2, v155);
      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v155, v145);
      sub_100098640();
      return;
    }
LABEL_69:
    swift_once(&qword_100BC2450, sub_1006F3844);
    goto LABEL_24;
  }
  v322 = v157;
  v170 = (uint64_t)&v104[*(int *)(sub_1000BA294(&qword_100BC3358) + 64)];
  sub_100280E04();
  sub_10007802C(v171, v172, v173);
  sub_10007802C(v170, v368, type metadata accessor for NewsDataModel);
  sub_100098AD4(v174, type metadata accessor for PreprocessedWeatherData);
  v175 = (uint64_t)v355;
  v358 = v151;
  Location.timeZone.getter(v176);
  v177 = v375;
  static Calendar.currentCalendar(with:)(v175);
  sub_1000988C4();
  v179 = sub_100094F10(v175, v178);
  v157 = v360;
  v180 = (char *)type metadata accessor for LocationWeatherDataState + *(int *)(v354 + 24);
  v181 = v366;
  v182 = WeatherDataModel.currentWeather.getter(v179);
  v183 = v379;
  CurrentWeather.date.getter(v182);
  sub_1000988C4();
  sub_100094F10(v181, v184);
  IsSameDayCache.startOfDay(_:calendar:)(v183, v177);
  sub_1000988C4();
  v185 = v183;
  v138 = v378;
  v370 = v186;
  v186(v185, v378);
  v187 = v373;
  v188 = Date.wc_addDays(_:calendar:)(-1, v177);
  v359[1] = v180;
  v189 = WeatherDataModel.dailyForecast.getter(v188);
  v168 = &v321;
  __chkstk_darwin(v189);
  v320 = v187;
  sub_1000A855C((uint64_t)sub_100280CD0, (uint64_t)v319);
  v191 = sub_1000F55C4(11, v190, (uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t))sub_1000F59FC, (void (*)(_QWORD))&type metadata accessor for DayWeather);
  v155 = v194 >> 1;
  v195 = (v194 >> 1) - v193;
  if (__OFSUB__(v194 >> 1, v193))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v196 = v191;
  v168 = v365;
  v197 = v383;
  v198 = v352[2];
  if (v195 < 7)
  {
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v199 = sub_100098720();
    sub_1000AECD4(v199, (uint64_t)qword_100CAF0E8);
    v155 = v322;
    v200 = v338;
    sub_1000BCF30(v322, v338);
    v201 = v339;
    sub_1000BCF30(v155, v339);
    v202 = sub_1000FCC58();
    Logger.logObject.getter(v202);
    v203 = sub_100094F54();
    if (os_log_type_enabled((os_log_t)type metadata accessor for ConditionDetailViewState, v203))
    {
      v138 = sub_100098710(32);
      v204 = sub_100098710(64);
      v205 = v196;
      v359[0] = v196;
      v206 = v204;
      *(_QWORD *)&v396 = v204;
      *(_DWORD *)v138 = 134218498;
      v392 = v195;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v392, v393);
      swift_unknownObjectRelease(v205);
      v155 = 2080;
      *(_WORD *)(v138 + 12) = 2080;
      sub_10000F1C8(&qword_100BD0D80, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
      v207 = sub_1000CDEE8();
      v392 = sub_1000C1D88(v207, v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v392, v393);
      sub_1000986C4();
      sub_1000215BC(v200, type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v138 + 22) = 2080;
      sub_1000AE8D8();
      v210 = Location.id.getter(v209);
      v392 = sub_1000C1D88(v210, v211);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v392, v393);
      sub_1000986C4();
      sub_1000215BC(v201, type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)type metadata accessor for ConditionDetailViewState, v203, "Failed to create condition detail input due to missing daily data; dayCount=%ld, condition=%s, location=%s",
        (uint8_t *)v138,
        0x20u);
      swift_arrayDestroy(v206, 2);
      sub_1000986F0(v206);
      sub_1000986F0(v138);
      sub_1000FC610();

    }
    else
    {

      sub_100079F9C(v201);
      sub_100079F9C(v200);
      swift_unknownObjectRelease_n(v196, 2);
    }
    sub_10009EE7C();
    type metadata accessor for ConditionDetailViewState(v369);
    sub_1000B30B8(type metadata accessor for NewsDataModel, (uint64_t)&v397);
    sub_1000B30B8(type metadata accessor for LocationWeatherDataState, (uint64_t)&v402 + 8);
    v145 = v388;
    v146 = v386;
    sub_1000CF7E4();
    sub_1000C65FC();
    sub_1000B30B8(type metadata accessor for WeatherData, (uint64_t)&v401);
    sub_1000B30B8(type metadata accessor for ConditionDetailViewState, (uint64_t)v352);
    v144 = sub_1000CDBFC();
    goto LABEL_65;
  }
  v236 = v193;
  v237 = v193 + 1;
  if (!__OFADD__(v193, 1))
  {
    v357 = v194;
    if (v237 < v193 || v237 >= v155)
      goto LABEL_71;
    v239 = v192;
    v240 = v376[9];
    v361 = (void (*)(_QWORD, _QWORD, _QWORD))v376[2];
    v361(v362, v192 + v240 * v237, v365);
    sub_100037768(v322 + *(int *)(v323 + 24), v198, (uint64_t *)&unk_100BD35A0);
    sub_100088FC8(v198, 1, v138);
    v359[0] = v196;
    if (v156)
    {
      sub_100021A14(v198, (uint64_t *)&unk_100BD35A0);
    }
    else
    {
      v356 = v239;
      v241 = v157;
      v355 = *(void (**)(uint64_t, uint64_t, uint64_t))(v371 + 32);
      v355(v372, v198, v138);
      if (v236 != v155)
      {
        sub_1000FCC58();
        v239 = v356;
        v242 = v356 + v236 * v240;
        v243 = v236;
        v244 = v326;
        v157 = v379;
        while (v243 < v155)
        {
          v245 = sub_1000DC384();
          v246 = v168;
          DayWeather.date.getter(v245);
          v247 = static Date.== infix(_:_:)(v157, v372);
          sub_1000BEE3C();
          if ((v247 & 1) != 0)
          {
            sub_1000CE560();
            v316 = v324;
            sub_10009E64C(v324, v244);
            v317 = v325;
            sub_10009E64C(v325, v316);
            v138 = v378;
            v355(v363, v372, v378);
            sub_10009E64C(v364, v317);
            v197 = v383;
            v157 = v360;
            goto LABEL_47;
          }
          ++v243;
          sub_1000988C4();
          v248(v244, v246);
          v242 += v240;
          v168 = v246;
          v197 = v383;
          if (v155 == v243)
          {
            sub_1000CE560();
            v138 = v378;
            v241 = v360;
            goto LABEL_45;
          }
        }
        __break(1u);
        goto LABEL_68;
      }
LABEL_45:
      sub_1000BEE3C();
      v157 = v241;
      v239 = v356;
    }
    sub_100280E04();
    v249 = sub_1000DC384();
    DayWeather.date.getter(v249);
LABEL_47:
    v250 = v329;
    v251 = sub_100374490();
    sub_1002F6F84(v251, v250);
    sub_1000986C4();
    v252 = v331;
    sub_100088FC8(v250, 1, v331);
    if (v156)
    {
      sub_100021A14(v250, &qword_100BD0D70);
      v253 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
      sub_10009D34C(v340, v254, v255, v253);
    }
    else
    {
      sub_100277B10(v340);
      sub_1000988C4();
      v256(v250, v252);
    }
    v257 = sub_1000FCC58();
    v258 = sub_1002154A4(v257, v239, v236, v357);
    v259 = v330;
    v260 = sub_10003BD0C();
    v261 = v382;
    _s7Weather24LocationCompositionStateOwst_0(v260, v262, 1, v382);
    v263 = v258[2];
    sub_10084B1AC(v259, v263);
    v394 = v264;
    v265 = sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
    __chkstk_darwin(v265);
    v318[2] = v258;
    v318[3] = v362;
    v318[4] = v157;
    v318[5] = v375;
    v266 = v389;
    v318[6] = v389;
    v318[7] = v322;
    v319[0] = v374;
    v319[1] = v364;
    v320 = &v394;
    static OS_dispatch_queue.concurrentPerform(iterations:execute:)(v263, sub_100280CEC, v318);
    swift_bridgeObjectRelease(v258);
    v267 = v379;
    DayWeather.date.getter(v268);
    LODWORD(v372) = static Date.== infix(_:_:)(v267, v363);
    sub_1000BEE3C();
    v269 = v332;
    sub_100080C0C(v266 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v332, type metadata accessor for TimeState);
    v270 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v371 + 32))(v343, v269, v138);
    v271 = WeatherDataModel.hourlyForecast.getter(v270);
    WeatherDataModel.minuteForecast.getter(v271);
    v272 = v394;
    v273 = *(_QWORD *)(v394 + 16);
    if (v273)
    {
      sub_1000BE8D4();
      v275 = v272 + v274;
      v277 = *(_QWORD *)(v276 + 72);
      swift_bridgeObjectRetain(v272);
      v278 = _swiftEmptyArrayStorage;
      v279 = v391;
      do
      {
        sub_100037768(v275, v279, &qword_100BD0D68);
        sub_1000787D4(v279, v197, &qword_100BD0D68);
        sub_100088FC8(v197, 1, v261);
        if (v156)
        {
          sub_100021A14(v197, &qword_100BD0D68);
        }
        else
        {
          v280 = v380;
          sub_10004A31C(v197, v380);
          sub_10004A31C(v280, v390);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v278);
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1000FDA14();
            v278 = v285;
          }
          v282 = v278[2];
          if (v282 >= v278[3] >> 1)
          {
            sub_1000FDA14();
            v278 = v286;
          }
          v278[2] = v282 + 1;
          sub_1000BE8D4();
          sub_10004A31C(v390, (uint64_t)v278 + v283 + *(_QWORD *)(v284 + 72) * v282);
          v261 = v382;
          v197 = v383;
        }
        v275 += v277;
        --v273;
      }
      while (v273);
      sub_1000986C4();
    }
    else
    {
      v278 = _swiftEmptyArrayStorage;
    }
    v287 = v323;
    v288 = v322;
    v289 = sub_1000B3B68(v348, v322, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v333 + 16));
    v290 = v288;
    sub_100374684(v289, v291, v292, v293, v294, v295, v296, v297, v321, v322, v323, v324, v325, v326, v327, v328, v329, v330, v331,
      v332);
    v298 = *(void (**)(uint64_t, uint64_t, uint64_t))(v371 + 16);
    v299 = v378;
    v298(v379, v363, v378);
    v298(v344, (uint64_t)v373, v299);
    sub_1000B3B68(v350, v358, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v334 + 16));
    v300 = v389 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess(v389 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, &v392, 0, 0);
    v301 = (int *)type metadata accessor for EnvironmentState(0);
    sub_1000B3B68(v351, v300 + v301[7], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v335 + 16));
    v302 = sub_1000DC384();
    v303 = WeatherDataModel.currentWeather.getter(v302);
    WeatherDataModel.dailyForecast.getter(v303);
    v155 = v374;
    sub_100080C0C(v374, v341, type metadata accessor for WeatherData);
    v304 = v368;
    sub_100080C0C(v368, v342, type metadata accessor for NewsDataModel);
    v305 = v336;
    sub_100037768(v290 + *(int *)(v287 + 32), v336, &qword_100BD0B58);
    v306 = *(_QWORD *)(v155 + 8);
    v391 = *(_QWORD *)v155;
    swift_bridgeObjectRetain(v306);
    v307 = v337;
    WeatherDataModel.weatherChanges.getter(v308);
    sub_1000FC610();
    v370(v363, v299);
    sub_10011DC78((uint64_t)&v400 + 8);
    sub_10011DC78((uint64_t)&v397 + 8);
    sub_1000215BC(v304, type metadata accessor for NewsDataModel);
    sub_1000B30B8(type metadata accessor for LocationWeatherDataState, (uint64_t)&v402 + 8);
    v309 = (__int128 *)(v300 + v301[16]);
    v310 = v309[1];
    v396 = *v309;
    v397 = v310;
    v398 = v309[2];
    v400 = v396;
    v401 = v310;
    v402 = v398;
    v311 = v322;
    sub_100274138(v343, v346, v347, (uint64_t)v278, v348, v349, v379, v372 & 1, v388, v344, v350, v351, v345, v366, v367, v341, v342, v305, v391,
      v306,
      v307,
      v340,
      (uint64_t)&v396,
      *(_BYTE *)(v322 + *(int *)(v323 + 36)),
      *(_BYTE *)(v300 + v301[11]));
    sub_10009AA24((id *)&v400);
    sub_10009AA24((id *)&v400 + 1);
    sub_10009AA24((id *)&v401);
    sub_10009AA24((id *)&v401 + 1);
    sub_10009AA24((id *)&v402);
    sub_10009AA24((id *)&v402 + 1);
    v312 = (void (*)(uint64_t, uint64_t *))v376[1];
    v138 = (uint64_t)v365;
    v312(v364, v365);
    v312(v362, (uint64_t *)v138);
    sub_1000C65FC();
    sub_1000215BC(v155, type metadata accessor for WeatherData);
    sub_1000215BC(v311, type metadata accessor for ConditionDetailViewState);
    v313 = type metadata accessor for ConditionDetailInput.Input(0);
    sub_1000DC8D8(v313);
    v314 = type metadata accessor for ConditionDetailInput(0);
    sub_1000DC8D8(v314);
    swift_bridgeObjectRelease(v394);
    goto LABEL_64;
  }
  __break(1u);
LABEL_71:
  __break(1u);
}

void sub_100276450(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t EnumCaseMultiPayload;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v69 = a2;
  v66 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_1000986FC();
  v64 = v4;
  sub_10009D2A4();
  __chkstk_darwin(v5);
  sub_100079F7C();
  v67 = v6;
  v7 = sub_10009876C();
  v68 = type metadata accessor for LocationPreviewViewState(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v63 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v65 = v11;
  v12 = sub_10009876C();
  v13 = type metadata accessor for ConditionDetailViewState(v12);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000986FC();
  v61 = v15;
  sub_10009D2A4();
  __chkstk_darwin(v16);
  sub_1000860D0();
  v62 = v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v20 = (char *)&v60 - v19;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_10009883C();
  v24 = v22 - v23;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v60 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v60 - v29;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_10009883C();
  v34 = v32 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v60 - v36;
  v38 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_100080C0C(v38, (uint64_t)v30, type metadata accessor for ModalViewState);
  if (sub_1000988D0((uint64_t)v30) == 5)
  {
    v60 = v13;
    sub_1000C0CEC((uint64_t)v30, (uint64_t)v37);
    sub_1000C0CEC((uint64_t)v37, v34);
    if (!swift_getEnumCaseMultiPayload(v34))
    {
      sub_1000C268C(v34);
      v49 = (uint64_t)v20;
      v48 = v69;
      sub_1000C268C(v49);
      v50 = 0;
      v13 = v60;
      goto LABEL_22;
    }
    sub_1000215BC(v34, type metadata accessor for ModalViewState.LocationDetailModal);
    v13 = v60;
  }
  else
  {
    sub_1000215BC((uint64_t)v30, type metadata accessor for ModalViewState);
  }
  sub_1000860E4(v38, v39, type metadata accessor for ModalViewState);
  v40 = sub_1000988D0((uint64_t)v28);
  v41 = v67;
  if ((_DWORD)v40)
  {
    sub_1000878B4(v40, type metadata accessor for ModalViewState);
    v42 = v68;
  }
  else
  {
    v43 = v13;
    v44 = v65;
    sub_1000C0CEC((uint64_t)v28, v65);
    v42 = v68;
    sub_100080C0C(v44 + *(int *)(v68 + 20), v41, type metadata accessor for LocationPreviewModalViewState);
    sub_100079F9C(v44);
    if (swift_getEnumCaseMultiPayload(v41) == 1)
    {
      v45 = v41;
      v46 = v62;
      sub_1000C268C(v45);
      v47 = v46;
      v48 = v69;
      goto LABEL_19;
    }
    sub_1000215BC(v41, type metadata accessor for LocationPreviewModalViewState);
  }
  sub_100080C0C(v38, v24, type metadata accessor for ModalViewState);
  if (sub_1000988D0(v24) == 4)
  {
    v51 = type metadata accessor for ModalViewState.MapViewModal(0);
    sub_100088FC8(v24, 1, v51);
    if (!v52)
    {
      v43 = v13;
      v53 = v63;
      sub_1000C268C(v24);
      v54 = v53 + *(int *)(v42 + 20);
      v55 = v64;
      sub_1000860E4(v54, v56, type metadata accessor for LocationPreviewModalViewState);
      sub_100079F9C(v53);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v55);
      v48 = v69;
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        sub_1000878B4(EnumCaseMultiPayload, type metadata accessor for LocationPreviewModalViewState);
        v50 = 1;
        goto LABEL_21;
      }
      v58 = v55;
      v59 = v61;
      sub_1000C0CEC(v58, v61);
      v47 = v59;
LABEL_19:
      sub_1000C268C(v47);
      v50 = 0;
LABEL_21:
      v13 = v43;
      goto LABEL_22;
    }
    sub_100021A14(v24, &qword_100BC5F58);
  }
  else
  {
    sub_1000215BC(v24, type metadata accessor for ModalViewState);
  }
  v50 = 1;
  v48 = v69;
LABEL_22:
  _s7Weather24LocationCompositionStateOwst_0(v48, v50, 1, v13);
  sub_100098640();
}

uint64_t sub_100276878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unsigned int *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v60 = a5;
  v61 = a6;
  v50 = a4;
  v57 = a3;
  v55 = a1;
  v7 = type metadata accessor for TimeZone(0);
  __chkstk_darwin(v7);
  v59 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BCB9F8);
  __chkstk_darwin(v9);
  v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for DetailChartCondition(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v54 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v48 - v17;
  v19 = type metadata accessor for ConditionDetailChartHeaderInput.HeaderKind(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v49 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v48 - v24;
  v26 = __chkstk_darwin(v23);
  v48 = (char *)&v48 - v27;
  DayWeather.date.getter(v26);
  v58 = a2;
  v28 = static Date.== infix(_:_:)(v18, a2);
  v52 = v13;
  v29 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  v30 = v29(v18, v12);
  if ((v28 & 1) != 0)
  {
    v31 = &v25[*(int *)(sub_1000BA294(&qword_100BD0D98) + 48)];
    v32 = type metadata accessor for WeatherData(0);
    WeatherDataModel.currentWeather.getter(v32);
    v33 = type metadata accessor for DayWeather(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v50, v33);
    (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v25, enum case for ConditionDetailChartHeaderInput.HeaderKind.today(_:), v19);
  }
  else
  {
    v34 = v50;
    v35 = DayWeather.date.getter(v30);
    DayWeather.date.getter(v35);
    v36 = static Date.< infix(_:_:)(v18, v16);
    v29(v16, v12);
    v29(v18, v12);
    v37 = type metadata accessor for DayWeather(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v25, v34, v37);
    if ((v36 & 1) != 0)
      v38 = (unsigned int *)&enum case for ConditionDetailChartHeaderInput.HeaderKind.pastDay(_:);
    else
      v38 = (unsigned int *)&enum case for ConditionDetailChartHeaderInput.HeaderKind.futureDay(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v25, *v38, v19);
  }
  v39 = v48;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v48, v25, v19);
  v40 = v49;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v49, v39, v19);
  v41 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v54, v55, v53);
  v42 = type metadata accessor for WeatherData(0);
  v43 = v56;
  WeatherDataModel.hourlyForecast.getter(v42);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v18, v58, v12);
  v44 = type metadata accessor for ConditionDetailViewState(0);
  v45 = v59;
  v46 = Location.timeZone.getter(v44);
  ConditionDetailChartHeaderInput.init(kind:condition:hourlyForecast:selectedDate:timeZone:)(v40, v41, v43, v18, v45, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v39, v19);
}

double sub_100276C54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[16];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;

  v53 = a8;
  v49 = a7;
  v48 = a5;
  v47 = a4;
  v46 = a3;
  v45 = a2;
  v52 = a9;
  v11 = type metadata accessor for ConditionDetailChartInput(0);
  v55 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v56 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v54 = (uint64_t)&v43 - v14;
  v51 = type metadata accessor for Date(0);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BCE758);
  v44 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v43 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v43 - v24;
  v26 = sub_100277068();
  v27 = a6;
  v28 = sub_100374490();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 1, 1, v11);
  v29 = *(_QWORD *)(v28 + 16);
  sub_10084B1B8((uint64_t)v25, v29);
  v69 = v30;
  sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
  v58 = v28;
  v59 = v46;
  v60 = a1;
  v61 = v47;
  v62 = v48;
  v63 = v27;
  v64 = v26;
  v65 = v45;
  v66 = v49;
  v67 = v53;
  v68 = &v69;
  static OS_dispatch_queue.concurrentPerform(iterations:execute:)(v29, sub_100280D74, v57);
  swift_bridgeObjectRelease(v28);
  v49 = v16;
  DayWeather.date.getter(v31);
  v33 = *(_QWORD *)(v69 + 16);
  if (v33)
  {
    v34 = v69 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    v35 = *(_QWORD *)(v44 + 72);
    v48 = v69;
    swift_bridgeObjectRetain(v69);
    v36 = _swiftEmptyArrayStorage;
    v53 = v11;
    do
    {
      sub_100037768(v34, (uint64_t)v23, &qword_100BCE758);
      sub_1000787D4((uint64_t)v23, (uint64_t)v20, &qword_100BCE758);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v11) == 1)
      {
        sub_100021A14((uint64_t)v20, &qword_100BCE758);
      }
      else
      {
        v37 = v54;
        sub_10007802C((uint64_t)v20, v54, type metadata accessor for ConditionDetailChartInput);
        sub_10007802C(v37, v56, type metadata accessor for ConditionDetailChartInput);
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        {
          sub_1005FEF74();
          v36 = v39;
        }
        v38 = v36[2];
        if (v38 >= v36[3] >> 1)
        {
          sub_1005FEF74();
          v36 = v40;
        }
        v36[2] = v38 + 1;
        sub_10007802C(v56, (uint64_t)v36+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v38, type metadata accessor for ConditionDetailChartInput);
        v11 = v53;
      }
      v34 += v35;
      --v33;
    }
    while (v33);
    v32 = swift_bridgeObjectRelease(v48);
  }
  else
  {
    v36 = _swiftEmptyArrayStorage;
  }
  v41 = v52;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v50 + 32))(v52, v49, v51, v32);
  *(_QWORD *)(v41 + *(int *)(type metadata accessor for ConditionDetailChartInputs(0) + 20)) = v36;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v69).n128_u64[0];
  return result;
}

uint64_t sub_100277068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v15 - v6;
  v8 = DayWeather.date.getter(v5);
  DayWeather.date.getter(v8);
  v9 = static Date.== infix(_:_:)(v7, v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = ((uint64_t (*)(char *, uint64_t))v10)(v7, v0);
  if ((v9 & 1) != 0)
    return 1;
  v13 = DayWeather.date.getter(v11);
  DayWeather.date.getter(v13);
  v14 = static Date.< infix(_:_:)(v7, v4);
  v10(v4, v0);
  v10(v7, v0);
  if ((v14 & 1) != 0)
    return 0;
  else
    return 2;
}

uint64_t sub_100277194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, char *, char *, char *, uint64_t, _QWORD, char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  void (*v132)(uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v110 = a8;
  v126 = a7;
  v135 = a6;
  v124 = a1;
  v125 = a5;
  v132 = a4;
  v128 = a9;
  v130 = type metadata accessor for ConditionDetailViewState(0);
  v13 = __chkstk_darwin(v130);
  v113 = (uint64_t)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v116 = (uint64_t)&v105 - v15;
  v115 = type metadata accessor for DayWeather(0);
  v112 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v111 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for ConditionDetailChartHeaderInput(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (uint64_t)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BCB9F0);
  __chkstk_darwin(v18);
  v118 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ChartViewModelInterpolationMode(0);
  v122 = *(_QWORD *)(v20 - 8);
  v123 = v20;
  v21 = __chkstk_darwin(v20);
  v105 = (uint64_t)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v120 = (char *)&v105 - v23;
  v24 = type metadata accessor for Location(0);
  v133 = *(_QWORD *)(v24 - 8);
  v134 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000BA294(&qword_100BD0D90);
  __chkstk_darwin(v27);
  v121 = (char *)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for ConditionDetailChartDataInput(0);
  __chkstk_darwin(v119);
  v106 = (uint64_t)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Date(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = __chkstk_darwin(v30);
  v34 = (char *)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v32);
  v37 = (char *)&v105 - v36;
  v38 = __chkstk_darwin(v35);
  v40 = (char *)&v105 - v39;
  DayWeather.date.getter(v38);
  v131 = v40;
  IsSameDayCache.startOfDay(_:calendar:)(v37, v132);
  v41 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v114 = v37;
  v129 = v30;
  v132 = v41;
  v41((uint64_t)v37, v30);
  sub_100043CA8(a2 + 16, (uint64_t)&v137);
  v43 = v138;
  v42 = v139;
  v117 = sub_1000DB418(&v137, v138);
  v44 = v26;
  v45 = v26;
  v46 = (uint64_t)v118;
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v133 + 16))(v45, v135 + *(int *)(v130 + 20), v134);
  v127 = a3;
  DayWeather.date.getter(v47);
  v48 = v124;
  sub_100277B10(v46);
  v49 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v49) == 1)
  {
    sub_100021A14(v46, &qword_100BCB9F0);
    v50 = v122;
    v51 = v123;
    v52 = v120;
    (*(void (**)(char *, _QWORD, uint64_t))(v122 + 104))(v120, enum case for ChartViewModelInterpolationMode.none(_:), v123);
  }
  else
  {
    v53 = v105;
    sub_100277CC8(v105);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v46, v49);
    v50 = v122;
    v52 = v120;
    v54 = v53;
    v51 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 32))(v120, v54, v123);
  }
  v55 = *(void (**)(uint64_t, char *, char *, char *, uint64_t, _QWORD, char *, uint64_t, uint64_t))(v42 + 8);
  v104 = v42;
  v56 = v131;
  v57 = v48;
  v58 = (uint64_t)v121;
  v55(v125, v44, v34, v131, v57, v126, v52, v43, v104);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v51);
  v59 = v129;
  v60 = v132;
  v132((uint64_t)v34, v129);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v44, v134);
  if (_s7Weather24LocationCompositionStateOwet_0(v58, 1, v119) == 1)
  {
    sub_100021A14(v58, &qword_100BD0D90);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v137);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v61 = type metadata accessor for Logger(0);
    sub_1000AECD4(v61, (uint64_t)qword_100CAF0E8);
    v62 = v112;
    v63 = v111;
    v64 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v111, v127, v115);
    v65 = v135;
    v66 = v116;
    sub_100080C0C(v135, v116, type metadata accessor for ConditionDetailViewState);
    v67 = v113;
    sub_100080C0C(v65, v113, type metadata accessor for ConditionDetailViewState);
    v69 = Logger.logObject.getter(v68);
    v71 = static os_log_type_t.error.getter(v69, v70);
    v72 = v71;
    if (os_log_type_enabled(v69, v71))
    {
      v73 = swift_slowAlloc(32, -1);
      v74 = swift_slowAlloc(96, -1);
      v135 = v74;
      v137 = v74;
      *(_DWORD *)v73 = 136315650;
      v75 = v114;
      LODWORD(v134) = v72;
      DayWeather.date.getter(v74);
      sub_10000F1C8((unint64_t *)&qword_100BC52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
      v76 = dispatch thunk of CustomStringConvertible.description.getter(v59);
      v77 = v63;
      v79 = v78;
      v132((uint64_t)v75, v59);
      v136 = sub_1000CE1C8(v76, v79, &v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v136, &v137);
      v80 = swift_bridgeObjectRelease(v79);
      (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v77, v115, v80);
      *(_WORD *)(v73 + 12) = 2080;
      v81 = type metadata accessor for DetailCondition(0);
      sub_10000F1C8(&qword_100BD0D80, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
      v82 = v116;
      v83 = dispatch thunk of CustomStringConvertible.description.getter(v81);
      v85 = v84;
      v136 = sub_1000CE1C8(v83, v84, &v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v136, &v137);
      swift_bridgeObjectRelease(v85);
      sub_1000215BC(v82, type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v73 + 22) = 2080;
      v87 = Location.id.getter(v86);
      v89 = v88;
      v136 = sub_1000CE1C8(v87, v88, &v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v136, &v137);
      swift_bridgeObjectRelease(v89);
      sub_1000215BC(v67, type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v134, "Failed to create chart input for date=%s, condition=%s, location=%s", (uint8_t *)v73, 0x20u);
      v90 = v135;
      swift_arrayDestroy(v135, 3);
      swift_slowDealloc(v90, -1, -1);
      swift_slowDealloc(v73, -1, -1);

      v91 = v131;
      v92 = v129;
    }
    else
    {

      sub_1000215BC(v67, type metadata accessor for ConditionDetailViewState);
      sub_1000215BC(v66, type metadata accessor for ConditionDetailViewState);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
      v91 = v131;
      v92 = v59;
    }
    v132((uint64_t)v91, v92);
    v102 = type metadata accessor for ConditionDetailChartInput(0);
    v100 = v128;
    v101 = 1;
  }
  else
  {
    v93 = v57;
    v94 = v106;
    sub_10007802C(v58, v106, type metadata accessor for ConditionDetailChartDataInput);
    v95 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v137);
    v96 = (uint64_t)v114;
    DayWeather.date.getter(v95);
    v97 = v107;
    sub_100276878(v93, v96, a10, a11, v135, v107);
    v60(v96, v59);
    v60((uint64_t)v56, v59);
    v98 = type metadata accessor for ConditionDetailChartInput(0);
    v99 = v128;
    sub_10007802C(v94, v128 + *(int *)(v98 + 20), type metadata accessor for ConditionDetailChartDataInput);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v99, v97, v109);
    v100 = v99;
    v101 = 0;
    v102 = v98;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v100, v101, 1, v102);
}

uint64_t sub_100277B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for DetailChartCondition(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for DetailChartCondition.humidity(_:) || v8 == enum case for DetailChartCondition.pressure(_:))
    goto LABEL_6;
  if (v8 == enum case for DetailChartCondition.precipitationTotal(_:))
  {
LABEL_9:
    v15 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
    v13 = a1;
    v14 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v13, v14, 1, v15);
  }
  if (v8 == enum case for DetailChartCondition.temperature(_:)
    || v8 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    goto LABEL_6;
  }
  if (v8 == enum case for DetailChartCondition.uvIndex(_:))
  {
LABEL_16:
    v10 = (unsigned int *)&enum case for MidpointInterpolator.InterpolationMode.monotoneCubic(_:);
    goto LABEL_7;
  }
  if (v8 == enum case for DetailChartCondition.visibility(_:))
  {
LABEL_6:
    v10 = (unsigned int *)&enum case for MidpointInterpolator.InterpolationMode.cubic(_:);
LABEL_7:
    v11 = *v10;
    v12 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a1, v11, v12);
    v13 = a1;
    v14 = 0;
    v15 = v12;
    return _s7Weather24LocationCompositionStateOwst_0(v13, v14, 1, v15);
  }
  if (v8 == enum case for DetailChartCondition.wind(_:))
    goto LABEL_16;
  if (v8 == enum case for DetailChartCondition.chanceOfRain(_:))
    goto LABEL_9;
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v4, v4);
  __break(1u);
  return result;
}

uint64_t sub_100277CC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, _QWORD, uint64_t);
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for MidpointInterpolator.InterpolationMode.cubic(_:))
  {
    v9 = enum case for ChartViewModelInterpolationMode.cubic(_:);
    v10 = type metadata accessor for ChartViewModelInterpolationMode(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a1, v9, v10);
  }
  else
  {
    v12 = v8;
    v13 = enum case for MidpointInterpolator.InterpolationMode.monotoneCubic(_:);
    v14 = type metadata accessor for ChartViewModelInterpolationMode(0);
    v15 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
    if (v12 == v13)
    {
      return v15(a1, enum case for ChartViewModelInterpolationMode.monotoneCubic(_:), v14);
    }
    else
    {
      v15(a1, enum case for ChartViewModelInterpolationMode.cubic(_:), v14);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

void sub_100277E00(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE v27[4];
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v20 = sub_1000BA294(&qword_100BCE758);
  __chkstk_darwin(v20);
  v22 = &v27[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > a1)
  {
    v29 = a7;
    v30 = a12;
    v28 = a8;
    v23 = type metadata accessor for DetailChartCondition(0);
    v24 = sub_100277194(a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * a1, a3, a4, a5, a6, v29, v28, a9, (uint64_t)v22, a10, a11);
    v31 = *(_QWORD *)(a3 + 64);
    __chkstk_darwin(v24);
    *(_QWORD *)&v27[-32] = v30;
    *(_QWORD *)&v27[-24] = a1;
    v26 = v22;
    v25 = type metadata accessor for UnfairLock(0);
    swift_retain();
    Lock.sync<A>(_:)(&type metadata for (), sub_100280DB0, &v27[-48], v25, &type metadata for () + 1, &protocol witness table for UnfairLock);
    swift_release(v31);
    sub_100021A14((uint64_t)v22, &qword_100BCE758);
    return;
  }
  __break(1u);
}

void sub_100277FA8(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_100867028();
  v6 = v9;
  *a1 = v9;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v6 + 16) > a2)
  {
    v8 = sub_1000BA294(&qword_100BCE758);
    sub_100280DBC(a3, v6+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a2);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_100278040(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v18 = type metadata accessor for ConditionDetailChartInputs(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > a1)
  {
    v24 = a10;
    v21 = type metadata accessor for DayWeather(0);
    sub_100276C54(a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * a1, a3, a4, a5, a6, a7, a8, a9, (uint64_t)v20);
    v25 = *(_QWORD *)(a4 + 64);
    __chkstk_darwin(v22);
    *(&v24 - 4) = v24;
    *(&v24 - 3) = a1;
    *(&v24 - 2) = (uint64_t)v20;
    v23 = type metadata accessor for UnfairLock(0);
    swift_retain();
    Lock.sync<A>(_:)(&type metadata for (), sub_100280D20, &v24 - 6, v23, &type metadata for () + 1, &protocol witness table for UnfairLock);
    swift_release(v25);
    sub_1000215BC((uint64_t)v20, type metadata accessor for ConditionDetailChartInputs);
    return;
  }
  __break(1u);
}

void sub_1002781CC(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1000BA294(&qword_100BD0D68);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a3, (uint64_t)v9, type metadata accessor for ConditionDetailChartInputs);
  v10 = type metadata accessor for ConditionDetailChartInputs(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v10);
  v11 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_100867038();
  v11 = v13;
  *a1 = v13;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v11 + 16) > a2)
  {
    sub_100280D2C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * a2);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1002782CC()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t sub_100278300()
{
  uint64_t v0;

  sub_1002782CC();
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for ConditionDetailInputFactory()
{
  return objc_opt_self(_TtC7Weather27ConditionDetailInputFactory);
}

uint64_t *sub_100278340(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __n128 v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  v7 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    return a1;
  }
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10((char *)a1, (char *)a2, v9);
  v11 = v7[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = v7[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BCE370);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v20 = v7[7];
  v21 = *(uint64_t *)((char *)a2 + v20);
  *(uint64_t *)((char *)a1 + v20) = v21;
  v22 = v7[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for DetailCondition(0);
  v26 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 16);
  v27 = swift_bridgeObjectRetain(v21);
  v26(v23, v24, v25, v27);
  v28 = v7[9];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  v10((char *)a1 + v7[10], (char *)a2 + v7[10], v9);
  *((_BYTE *)a1 + v7[11]) = *((_BYTE *)a2 + v7[11]);
  v144 = v9;
  v145 = v10;
  v10((char *)a1 + v7[12], (char *)a2 + v7[12], v9);
  v32 = v7[13];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  v36 = v7[14];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = type metadata accessor for Locale(0);
  v143 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  v143(v37, v38, v39);
  v40 = v7[15];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = type metadata accessor for DayWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  v44 = v7[16];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  v48 = v7[17];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  v52 = v7[18];
  v53 = (uint64_t *)((char *)a1 + v52);
  v54 = (char *)a2 + v52;
  v55 = *(uint64_t *)((char *)a2 + v52 + 8);
  *v53 = *(uint64_t *)((char *)a2 + v52);
  v53[1] = v55;
  v56 = (int *)type metadata accessor for WeatherData(0);
  v57 = v56[5];
  v58 = (char *)v53 + v57;
  v59 = &v54[v57];
  swift_bridgeObjectRetain(v55);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v39))
  {
    v60 = sub_1000BA294(&qword_100BC3340);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v143(v58, v59, v39);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v39);
  }
  v61 = v56[6];
  v62 = (char *)v53 + v61;
  v63 = &v54[v61];
  v64 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
  v65 = v56[7];
  v66 = (char *)v53 + v65;
  v67 = &v54[v65];
  v68 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
  {
    v69 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v145(v66, v67, v144);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
  }
  v70 = v56[8];
  v71 = (_QWORD *)((char *)v53 + v70);
  v72 = &v54[v70];
  v73 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v72);
  if (EnumCaseMultiPayload == 1)
  {
    v79 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v71, v72, v79);
    v76 = v71;
    v77 = v73;
    v78 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      goto LABEL_20;
    }
    v75 = *((_QWORD *)v72 + 1);
    *v71 = *(_QWORD *)v72;
    v71[1] = v75;
    swift_bridgeObjectRetain(v75);
    v76 = v71;
    v77 = v73;
    v78 = 0;
  }
  swift_storeEnumTagMultiPayload(v76, v77, v78);
LABEL_20:
  v80 = v56[9];
  v81 = (char *)v53 + v80;
  v82 = &v54[v80];
  v83 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    v84 = sub_1000BA294(&qword_100BC3350);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    v85 = (void (*)(char *, char *, uint64_t, __n128))v145;
  }
  else
  {
    v85 = (void (*)(char *, char *, uint64_t, __n128))v145;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v144))
    {
      v86 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      v145(v81, v82, v144);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v144);
    }
    v87 = *(int *)(v83 + 20);
    v88 = &v81[v87];
    v89 = &v82[v87];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v144))
    {
      v90 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      v145(v88, v89, v144);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v144);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  v91 = v7[19];
  v92 = (uint64_t *)((char *)a1 + v91);
  v93 = (uint64_t *)((char *)a2 + v91);
  v94 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v93) == 1)
  {
    v95 = *v93;
    *v92 = *v93;
    swift_bridgeObjectRetain(v95);
    v96 = v92;
    v97 = v94;
    v98 = 1;
  }
  else
  {
    v99 = type metadata accessor for News(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v92, v93, v99);
    v96 = v92;
    v97 = v94;
    v98 = 0;
  }
  swift_storeEnumTagMultiPayload(v96, v97, v98);
  v100 = v7[20];
  v101 = (uint64_t *)((char *)a1 + v100);
  v102 = (uint64_t *)((char *)a2 + v100);
  v103 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, (uint64_t)v103))
  {
    v104 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    v105 = v102[1];
    *v101 = *v102;
    v101[1] = v105;
    v106 = v103[5];
    v107 = (char *)v101 + v106;
    v108 = (char *)v102 + v106;
    v109 = swift_bridgeObjectRetain(v105);
    v85(v107, v108, v144, v109);
    ((void (*)(char *, char *, uint64_t))v85)((char *)v101 + v103[6], (char *)v102 + v103[6], v144);
    ((void (*)(char *, char *, uint64_t))v85)((char *)v101 + v103[7], (char *)v102 + v103[7], v144);
    *(_QWORD *)((char *)v101 + v103[8]) = *(_QWORD *)((char *)v102 + v103[8]);
    v110 = v103[9];
    v111 = (char *)v101 + v110;
    v112 = (char *)v102 + v110;
    v111[8] = v112[8];
    *(_QWORD *)v111 = *(_QWORD *)v112;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, (uint64_t)v103);
  }
  v113 = v7[21];
  v114 = (uint64_t *)((char *)a1 + v113);
  v115 = (uint64_t *)((char *)a2 + v113);
  v116 = v115[1];
  *v114 = *v115;
  v114[1] = v116;
  v117 = v7[22];
  v118 = (char *)a1 + v117;
  v119 = (char *)a2 + v117;
  v120 = type metadata accessor for WeatherChanges(0);
  swift_bridgeObjectRetain(v116);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
  {
    v121 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v118, v119, v120);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
  }
  v122 = v7[23];
  v123 = (char *)a1 + v122;
  v124 = (char *)a2 + v122;
  v125 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
  {
    v126 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v123, v124, v125);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
  }
  v127 = v7[24];
  v128 = (uint64_t *)((char *)a1 + v127);
  v129 = (char *)a2 + v127;
  v130 = *(void **)v129;
  v131 = (void *)*((_QWORD *)v129 + 1);
  *v128 = *(_QWORD *)v129;
  v128[1] = v131;
  v132 = (void *)*((_QWORD *)v129 + 2);
  v133 = (void *)*((_QWORD *)v129 + 3);
  v128[2] = v132;
  v128[3] = v133;
  v134 = (void *)*((_QWORD *)v129 + 4);
  v135 = (void *)*((_QWORD *)v129 + 5);
  v128[4] = v134;
  v128[5] = v135;
  *((_BYTE *)a1 + v7[25]) = *((_BYTE *)a2 + v7[25]);
  *((_BYTE *)a1 + v7[26]) = *((_BYTE *)a2 + v7[26]);
  v136 = v130;
  v137 = v131;
  v138 = v132;
  v139 = v133;
  v140 = v134;
  v141 = v135;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t type metadata accessor for ConditionDetailInput.Input(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD0C38, (uint64_t)&nominal type descriptor for ConditionDetailInput.Input);
}

void sub_100278C38(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id *v46;

  v2 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2))
  {
    v3 = type metadata accessor for Date(0);
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = a1 + v2[5];
    v6 = sub_1000BA294(&qword_100BCB9F8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = a1 + v2[6];
    v8 = sub_1000BA294(&qword_100BCE378);
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    v9 = a1 + v2[8];
    v10 = type metadata accessor for DetailCondition(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = a1 + v2[9];
    v12 = type metadata accessor for DetailChartCondition(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v4(a1 + v2[10], v3);
    v4(a1 + v2[12], v3);
    v13 = a1 + v2[13];
    v14 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    v15 = a1 + v2[14];
    v16 = type metadata accessor for Locale(0);
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
    v17(v15, v16);
    v18 = a1 + v2[15];
    v19 = type metadata accessor for DayWeather(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    v20 = a1 + v2[16];
    v21 = type metadata accessor for CurrentWeather(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v22 = a1 + v2[17];
    v23 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
    v24 = a1 + v2[18];
    swift_bridgeObjectRelease();
    v25 = (int *)type metadata accessor for WeatherData(0);
    v26 = v24 + v25[5];
    if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v16))
      v17(v26, v16);
    v27 = v24 + v25[6];
    v28 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    v29 = v24 + v25[7];
    v30 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30))
      v4(v29, v3);
    v31 = v24 + v25[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v31);
    if (EnumCaseMultiPayload == 1)
    {
      v33 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v31, v33);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    v34 = v24 + v25[9];
    v35 = type metadata accessor for WeatherDataOverrides(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35))
    {
      if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v3))
        v4(v34, v3);
      v36 = v34 + *(int *)(v35 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v3))
        v4(v36, v3);
    }
    v37 = a1 + v2[19];
    type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v37) == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = type metadata accessor for News(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
    }
    v39 = a1 + v2[20];
    v40 = (int *)type metadata accessor for DetailChartSelection(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, (uint64_t)v40))
    {
      v41 = swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t, __n128))v4)(v39 + v40[5], v3, v41);
      v4(v39 + v40[6], v3);
      v4(v39 + v40[7], v3);
    }
    swift_bridgeObjectRelease();
    v42 = a1 + v2[22];
    v43 = type metadata accessor for WeatherChanges(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v43))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
    v44 = a1 + v2[23];
    v45 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
    v46 = (id *)(a1 + v2[24]);

  }
}

char *sub_10027912C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  int EnumCaseMultiPayload;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __n128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  void (*v141)(char *, char *, uint64_t);
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);

  v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v8(a1, a2, v7);
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_1000BA294(&qword_100BCE370);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v18 = v6[7];
  v19 = *(_QWORD *)&a2[v18];
  *(_QWORD *)&a1[v18] = v19;
  v20 = v6[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for DetailCondition(0);
  v24 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 16);
  v25 = swift_bridgeObjectRetain(v19);
  v24(v21, v22, v23, v25);
  v26 = v6[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v8(&a1[v6[10]], &a2[v6[10]], v7);
  a1[v6[11]] = a2[v6[11]];
  v142 = v7;
  v143 = v8;
  v8(&a1[v6[12]], &a2[v6[12]], v7);
  v30 = v6[13];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  v34 = v6[14];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for Locale(0);
  v141 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v141(v35, v36, v37);
  v38 = v6[15];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = type metadata accessor for DayWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  v42 = v6[16];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = v6[17];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  v50 = v6[18];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *(_QWORD *)&a2[v50 + 8];
  *(_QWORD *)v51 = *(_QWORD *)&a2[v50];
  *((_QWORD *)v51 + 1) = v53;
  v54 = (int *)type metadata accessor for WeatherData(0);
  v55 = v54[5];
  v56 = &v51[v55];
  v57 = &v52[v55];
  swift_bridgeObjectRetain(v53);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v37))
  {
    v58 = sub_1000BA294(&qword_100BC3340);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v141(v56, v57, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v37);
  }
  v59 = v54[6];
  v60 = &v51[v59];
  v61 = &v52[v59];
  v62 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = v54[7];
  v64 = &v51[v63];
  v65 = &v52[v63];
  v66 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
  {
    v67 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v143(v64, v65, v142);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
  }
  v68 = v54[8];
  v69 = &v51[v68];
  v70 = &v52[v68];
  v71 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v70);
  if (EnumCaseMultiPayload == 1)
  {
    v77 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v69, v70, v77);
    v74 = v69;
    v75 = v71;
    v76 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      goto LABEL_18;
    }
    v73 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_QWORD *)v69 + 1) = v73;
    swift_bridgeObjectRetain(v73);
    v74 = v69;
    v75 = v71;
    v76 = 0;
  }
  swift_storeEnumTagMultiPayload(v74, v75, v76);
LABEL_18:
  v78 = v54[9];
  v79 = &v51[v78];
  v80 = &v52[v78];
  v81 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
  {
    v82 = sub_1000BA294(&qword_100BC3350);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    v83 = (void (*)(char *, char *, uint64_t, __n128))v143;
  }
  else
  {
    v83 = (void (*)(char *, char *, uint64_t, __n128))v143;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v142))
    {
      v84 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      v143(v79, v80, v142);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v142);
    }
    v85 = *(int *)(v81 + 20);
    v86 = &v79[v85];
    v87 = &v80[v85];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v142))
    {
      v88 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      v143(v86, v87, v142);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v142);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
  }
  v89 = v6[19];
  v90 = &a1[v89];
  v91 = &a2[v89];
  v92 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v91) == 1)
  {
    v93 = *(_QWORD *)v91;
    *(_QWORD *)v90 = *(_QWORD *)v91;
    swift_bridgeObjectRetain(v93);
    v94 = v90;
    v95 = v92;
    v96 = 1;
  }
  else
  {
    v97 = type metadata accessor for News(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v90, v91, v97);
    v94 = v90;
    v95 = v92;
    v96 = 0;
  }
  swift_storeEnumTagMultiPayload(v94, v95, v96);
  v98 = v6[20];
  v99 = &a1[v98];
  v100 = &a2[v98];
  v101 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, (uint64_t)v101))
  {
    v102 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    v103 = *((_QWORD *)v100 + 1);
    *(_QWORD *)v99 = *(_QWORD *)v100;
    *((_QWORD *)v99 + 1) = v103;
    v104 = v101[5];
    v105 = &v99[v104];
    v106 = &v100[v104];
    v107 = swift_bridgeObjectRetain(v103);
    v83(v105, v106, v142, v107);
    ((void (*)(char *, char *, uint64_t))v83)(&v99[v101[6]], &v100[v101[6]], v142);
    ((void (*)(char *, char *, uint64_t))v83)(&v99[v101[7]], &v100[v101[7]], v142);
    *(_QWORD *)&v99[v101[8]] = *(_QWORD *)&v100[v101[8]];
    v108 = v101[9];
    v109 = &v99[v108];
    v110 = &v100[v108];
    v109[8] = v110[8];
    *(_QWORD *)v109 = *(_QWORD *)v110;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, (uint64_t)v101);
  }
  v111 = v6[21];
  v112 = &a1[v111];
  v113 = &a2[v111];
  v114 = *((_QWORD *)v113 + 1);
  *(_QWORD *)v112 = *(_QWORD *)v113;
  *((_QWORD *)v112 + 1) = v114;
  v115 = v6[22];
  v116 = &a1[v115];
  v117 = &a2[v115];
  v118 = type metadata accessor for WeatherChanges(0);
  swift_bridgeObjectRetain(v114);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
  {
    v119 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v116, v117, v118);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
  }
  v120 = v6[23];
  v121 = &a1[v120];
  v122 = &a2[v120];
  v123 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
  {
    v124 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
  }
  v125 = v6[24];
  v126 = &a1[v125];
  v127 = &a2[v125];
  v128 = *(void **)v127;
  v129 = (void *)*((_QWORD *)v127 + 1);
  *(_QWORD *)v126 = *(_QWORD *)v127;
  *((_QWORD *)v126 + 1) = v129;
  v130 = (void *)*((_QWORD *)v127 + 2);
  v131 = (void *)*((_QWORD *)v127 + 3);
  *((_QWORD *)v126 + 2) = v130;
  *((_QWORD *)v126 + 3) = v131;
  v132 = (void *)*((_QWORD *)v127 + 4);
  v133 = (void *)*((_QWORD *)v127 + 5);
  *((_QWORD *)v126 + 4) = v132;
  *((_QWORD *)v126 + 5) = v133;
  a1[v6[25]] = a2[v6[25]];
  a1[v6[26]] = a2[v6[26]];
  v134 = v128;
  v135 = v129;
  v136 = v130;
  v137 = v131;
  v138 = v132;
  v139 = v133;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

char *sub_1002799EC(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t, __n128);
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  int v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  int EnumCaseMultiPayload;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  __n128 v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  int v224;
  int v225;
  uint64_t v226;
  size_t v227;
  void *v228;
  const void *v229;
  int v230;
  int v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t *v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  int *v250;
  int v251;
  int v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  char *v257;
  void (*v258)(char *, char *, uint64_t, __n128);
  __n128 v259;
  uint64_t v260;
  char *v261;
  char *v262;
  char v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  int v273;
  int v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  int v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  void *v288;
  void *v289;
  id v290;
  void *v291;
  void *v292;
  id v293;
  void *v294;
  void *v295;
  id v296;
  void *v297;
  void *v298;
  id v299;
  void *v300;
  void *v301;
  id v302;
  void *v303;
  void *v304;
  id v305;
  uint64_t v307;
  __n128 v308;
  uint64_t v309;
  char *v310;
  char *v311;
  char v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  int v318;
  void (*v319)(char *, char *, uint64_t);
  void (*v320)(char *, char *, uint64_t);
  void (*v321)(char *, char *, uint64_t);
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  void (*v325)(char *, char *, uint64_t);
  uint64_t v326;

  v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1000215BC((uint64_t)a1, type metadata accessor for ConditionDetailInput.Input);
      goto LABEL_7;
    }
    v20 = type metadata accessor for Date(0);
    v323 = *(_QWORD *)(v20 - 8);
    v21 = *(void (**)(char *, char *, uint64_t))(v323 + 24);
    v21(a1, a2, v20);
    v22 = v6[5];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = sub_1000BA294(&qword_100BCB9F8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
    v26 = v6[6];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_1000BA294(&qword_100BCE378);
    v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
    v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
        goto LABEL_31;
      }
    }
    else
    {
      v99 = *(_QWORD *)(v29 - 8);
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 24))(v27, v28, v29);
LABEL_31:
        v101 = v6[7];
        v102 = *(_QWORD *)&a2[v101];
        *(_QWORD *)&a1[v101] = v102;
        swift_bridgeObjectRetain(v102);
        swift_bridgeObjectRelease();
        v103 = v6[8];
        v104 = &a1[v103];
        v105 = &a2[v103];
        v106 = type metadata accessor for DetailCondition(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 24))(v104, v105, v106);
        v107 = v6[9];
        v108 = &a1[v107];
        v109 = &a2[v107];
        v110 = type metadata accessor for DetailChartCondition(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
        v21(&a1[v6[10]], &a2[v6[10]], v20);
        a1[v6[11]] = a2[v6[11]];
        v326 = v20;
        v319 = v21;
        v21(&a1[v6[12]], &a2[v6[12]], v20);
        v111 = v6[13];
        v112 = &a1[v111];
        v113 = &a2[v111];
        v114 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 24))(v112, v113, v114);
        v115 = v6[14];
        v116 = &a1[v115];
        v117 = &a2[v115];
        v118 = type metadata accessor for Locale(0);
        v322 = *(_QWORD *)(v118 - 8);
        v320 = *(void (**)(char *, char *, uint64_t))(v322 + 24);
        v320(v116, v117, v118);
        v119 = v6[15];
        v120 = &a1[v119];
        v121 = &a2[v119];
        v122 = type metadata accessor for DayWeather(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 24))(v120, v121, v122);
        v123 = v6[16];
        v124 = &a1[v123];
        v125 = &a2[v123];
        v126 = type metadata accessor for CurrentWeather(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 24))(v124, v125, v126);
        v127 = v6[17];
        v128 = &a1[v127];
        v129 = &a2[v127];
        v130 = sub_1000BA294(&qword_100BCB130);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 24))(v128, v129, v130);
        v131 = v6[18];
        v132 = &a1[v131];
        v133 = &a2[v131];
        *(_QWORD *)v132 = *(_QWORD *)&a2[v131];
        v134 = *(_QWORD *)&a2[v131 + 8];
        *((_QWORD *)v132 + 1) = v134;
        swift_bridgeObjectRetain(v134);
        swift_bridgeObjectRelease();
        v135 = (int *)type metadata accessor for WeatherData(0);
        v136 = v135[5];
        v137 = &v132[v136];
        v138 = &v133[v136];
        v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v132[v136], 1, v118);
        v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v138, 1, v118);
        if (v139)
        {
          if (!v140)
          {
            (*(void (**)(char *, char *, uint64_t))(v322 + 16))(v137, v138, v118);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v137, 0, 1, v118);
            goto LABEL_37;
          }
        }
        else
        {
          if (!v140)
          {
            v320(v137, v138, v118);
LABEL_37:
            v142 = v135[6];
            v143 = &v132[v142];
            v144 = &v133[v142];
            v145 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 24))(v143, v144, v145);
            v146 = v135[7];
            v147 = &v132[v146];
            v148 = &v133[v146];
            v149 = sub_1000BA294(&qword_100BC3348);
            v150 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v149);
            v151 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149);
            if (v150)
            {
              if (!v151)
              {
                v152 = v326;
                (*(void (**)(char *, char *, uint64_t))(v323 + 16))(v147, v148, v326);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v149);
                goto LABEL_43;
              }
            }
            else
            {
              if (!v151)
              {
                v152 = v326;
                v319(v147, v148, v326);
LABEL_43:
                if (a1 == a2)
                  goto LABEL_68;
                v154 = v135[8];
                v155 = &v132[v154];
                v156 = &v133[v154];
                sub_1000215BC((uint64_t)&v132[v154], type metadata accessor for WeatherData.WeatherStatisticsState);
                v157 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v156);
                if (EnumCaseMultiPayload == 1)
                {
                  v219 = type metadata accessor for WeatherStatisticsModel(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(v155, v156, v219);
                  v160 = v155;
                  v161 = v157;
                  v162 = 1;
                }
                else
                {
                  if (EnumCaseMultiPayload)
                  {
                    memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
LABEL_68:
                    v220 = v135[9];
                    v221 = &v132[v220];
                    v222 = &v133[v220];
                    v223 = type metadata accessor for WeatherDataOverrides(0);
                    v224 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v223);
                    v225 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v223);
                    if (v224)
                    {
                      if (!v225)
                      {
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v152))
                        {
                          v226 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                          memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(v323 + 16))(v221, v222, v152);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v152);
                        }
                        v232 = *(int *)(v223 + 20);
                        v233 = &v221[v232];
                        v234 = &v222[v232];
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v152))
                        {
                          v235 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                          memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(v323 + 16))(v233, v234, v152);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v233, 0, 1, v152);
                        }
                        v236 = (uint64_t)v221;
                        v237 = v223;
                        goto LABEL_87;
                      }
                      goto LABEL_74;
                    }
                    if (v225)
                    {
                      sub_1000215BC((uint64_t)v221, type metadata accessor for WeatherDataOverrides);
LABEL_74:
                      v227 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
                      v228 = v221;
                      v229 = v222;
                      goto LABEL_75;
                    }
                    v230 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v152);
                    v231 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v152);
                    if (v230)
                    {
                      if (!v231)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v323 + 16))(v221, v222, v152);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v152);
LABEL_119:
                        v314 = *(int *)(v223 + 20);
                        v315 = (uint64_t)&v221[v314];
                        v316 = (uint64_t)&v222[v314];
                        v317 = _s7Weather24LocationCompositionStateOwet_0(v315, 1, v152);
                        v318 = _s7Weather24LocationCompositionStateOwet_0(v316, 1, v152);
                        if (v317)
                        {
                          if (!v318)
                          {
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(v323 + 16))(v315, v316, v152);
                            v236 = v315;
                            v237 = v152;
LABEL_87:
                            _s7Weather24LocationCompositionStateOwst_0(v236, 0, 1, v237);
                            goto LABEL_88;
                          }
                        }
                        else
                        {
                          if (!v318)
                          {
                            v319((char *)v315, (char *)v316, v152);
LABEL_88:
                            if (a1 != a2)
                            {
                              v238 = v6[19];
                              v239 = (uint64_t *)&a1[v238];
                              v240 = (uint64_t *)&a2[v238];
                              sub_1000215BC((uint64_t)&a1[v238], type metadata accessor for NewsDataModel);
                              v241 = type metadata accessor for NewsDataModel(0);
                              if (swift_getEnumCaseMultiPayload(v240) == 1)
                              {
                                v242 = *v240;
                                *v239 = *v240;
                                swift_bridgeObjectRetain(v242);
                                v243 = v239;
                                v244 = v241;
                                v245 = 1;
                              }
                              else
                              {
                                v246 = type metadata accessor for News(0);
                                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(v239, v240, v246);
                                v243 = v239;
                                v244 = v241;
                                v245 = 0;
                              }
                              swift_storeEnumTagMultiPayload(v243, v244, v245);
                            }
                            v247 = v6[20];
                            v248 = &a1[v247];
                            v249 = &a2[v247];
                            v250 = (int *)type metadata accessor for DetailChartSelection(0);
                            v251 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, (uint64_t)v250);
                            v252 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v249, 1, (uint64_t)v250);
                            if (v251)
                            {
                              if (!v252)
                              {
                                *(_QWORD *)v248 = *(_QWORD *)v249;
                                v253 = *((_QWORD *)v249 + 1);
                                *((_QWORD *)v248 + 1) = v253;
                                v254 = v250[5];
                                v255 = &v248[v254];
                                v256 = v152;
                                v257 = &v249[v254];
                                v258 = *(void (**)(char *, char *, uint64_t, __n128))(v323 + 16);
                                v259 = swift_bridgeObjectRetain(v253);
                                v258(v255, v257, v256, v259);
                                ((void (*)(char *, char *, uint64_t))v258)(&v248[v250[6]], &v249[v250[6]], v256);
                                ((void (*)(char *, char *, uint64_t))v258)(&v248[v250[7]], &v249[v250[7]], v256);
                                *(_QWORD *)&v248[v250[8]] = *(_QWORD *)&v249[v250[8]];
                                v260 = v250[9];
                                v261 = &v248[v260];
                                v262 = &v249[v260];
                                v263 = v262[8];
                                *(_QWORD *)v261 = *(_QWORD *)v262;
                                v261[8] = v263;
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v248, 0, 1, (uint64_t)v250);
                                goto LABEL_99;
                              }
                            }
                            else
                            {
                              if (!v252)
                              {
                                *(_QWORD *)v248 = *(_QWORD *)v249;
                                v307 = *((_QWORD *)v249 + 1);
                                *((_QWORD *)v248 + 1) = v307;
                                swift_bridgeObjectRetain(v307);
                                v308 = swift_bridgeObjectRelease();
                                ((void (*)(char *, char *, uint64_t, __n128))v319)(&v248[v250[5]], &v249[v250[5]], v152, v308);
                                v319(&v248[v250[6]], &v249[v250[6]], v152);
                                v319(&v248[v250[7]], &v249[v250[7]], v152);
                                *(_QWORD *)&v248[v250[8]] = *(_QWORD *)&v249[v250[8]];
                                v309 = v250[9];
                                v310 = &v248[v309];
                                v311 = &v249[v309];
                                v312 = v311[8];
                                *(_QWORD *)v310 = *(_QWORD *)v311;
                                v310[8] = v312;
LABEL_99:
                                v265 = v6[21];
                                v266 = &a1[v265];
                                v267 = &a2[v265];
                                *(_QWORD *)v266 = *(_QWORD *)v267;
                                v268 = *((_QWORD *)v267 + 1);
                                *((_QWORD *)v266 + 1) = v268;
                                swift_bridgeObjectRetain(v268);
                                swift_bridgeObjectRelease();
                                v269 = v6[22];
                                v270 = &a1[v269];
                                v271 = &a2[v269];
                                v272 = type metadata accessor for WeatherChanges(0);
                                v273 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v270, 1, v272);
                                v274 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v271, 1, v272);
                                if (v273)
                                {
                                  if (!v274)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v272 - 8) + 16))(v270, v271, v272);
                                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v270, 0, 1, v272);
                                    goto LABEL_105;
                                  }
                                }
                                else
                                {
                                  v275 = *(_QWORD *)(v272 - 8);
                                  if (!v274)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(v275 + 24))(v270, v271, v272);
LABEL_105:
                                    v277 = v6[23];
                                    v278 = &a1[v277];
                                    v279 = &a2[v277];
                                    v280 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
                                    v281 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v278, 1, v280);
                                    v282 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v280);
                                    if (v281)
                                    {
                                      if (!v282)
                                      {
                                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v280 - 8) + 16))(v278, v279, v280);
                                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v280);
LABEL_111:
                                        v285 = v6[24];
                                        v286 = &a1[v285];
                                        v287 = &a2[v285];
                                        v288 = *(void **)&a1[v285];
                                        v289 = *(void **)&a2[v285];
                                        *(_QWORD *)v286 = v289;
                                        v290 = v289;

                                        v291 = (void *)*((_QWORD *)v286 + 1);
                                        v292 = (void *)*((_QWORD *)v287 + 1);
                                        *((_QWORD *)v286 + 1) = v292;
                                        v293 = v292;

                                        v294 = (void *)*((_QWORD *)v286 + 2);
                                        v295 = (void *)*((_QWORD *)v287 + 2);
                                        *((_QWORD *)v286 + 2) = v295;
                                        v296 = v295;

                                        v297 = (void *)*((_QWORD *)v286 + 3);
                                        v298 = (void *)*((_QWORD *)v287 + 3);
                                        *((_QWORD *)v286 + 3) = v298;
                                        v299 = v298;

                                        v300 = (void *)*((_QWORD *)v286 + 4);
                                        v301 = (void *)*((_QWORD *)v287 + 4);
                                        *((_QWORD *)v286 + 4) = v301;
                                        v302 = v301;

                                        v303 = (void *)*((_QWORD *)v286 + 5);
                                        v304 = (void *)*((_QWORD *)v287 + 5);
                                        *((_QWORD *)v286 + 5) = v304;
                                        v305 = v304;

                                        a1[v6[25]] = a2[v6[25]];
                                        a1[v6[26]] = a2[v6[26]];
                                        return a1;
                                      }
                                    }
                                    else
                                    {
                                      v283 = *(_QWORD *)(v280 - 8);
                                      if (!v282)
                                      {
                                        (*(void (**)(char *, char *, uint64_t))(v283 + 24))(v278, v279, v280);
                                        goto LABEL_111;
                                      }
                                      (*(void (**)(char *, uint64_t))(v283 + 8))(v278, v280);
                                    }
                                    v284 = sub_1000BA294(&qword_100BCB9F0);
                                    memcpy(v278, v279, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
                                    goto LABEL_111;
                                  }
                                  (*(void (**)(char *, uint64_t))(v275 + 8))(v270, v272);
                                }
                                v276 = sub_1000BA294(&qword_100BCCC48);
                                memcpy(v270, v271, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
                                goto LABEL_105;
                              }
                              sub_1000215BC((uint64_t)v248, type metadata accessor for DetailChartSelection);
                            }
                            v264 = sub_1000BA294(&qword_100BD0B58);
                            memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
                            goto LABEL_99;
                          }
                          (*(void (**)(uint64_t, uint64_t))(v323 + 8))(v315, v152);
                        }
                        v227 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
                        v228 = (void *)v315;
                        v229 = (const void *)v316;
LABEL_75:
                        memcpy(v228, v229, v227);
                        goto LABEL_88;
                      }
                    }
                    else
                    {
                      if (!v231)
                      {
                        v319(v221, v222, v152);
                        goto LABEL_119;
                      }
                      (*(void (**)(char *, uint64_t))(v323 + 8))(v221, v152);
                    }
                    v313 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                    memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v313 - 8) + 64));
                    goto LABEL_119;
                  }
                  *(_QWORD *)v155 = *(_QWORD *)v156;
                  v159 = *((_QWORD *)v156 + 1);
                  *((_QWORD *)v155 + 1) = v159;
                  swift_bridgeObjectRetain(v159);
                  v160 = v155;
                  v161 = v157;
                  v162 = 0;
                }
                swift_storeEnumTagMultiPayload(v160, v161, v162);
                goto LABEL_68;
              }
              sub_100021A14((uint64_t)v147, &qword_100BC3348);
            }
            v153 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
            v152 = v326;
            goto LABEL_43;
          }
          (*(void (**)(char *, uint64_t))(v322 + 8))(v137, v118);
        }
        v141 = sub_1000BA294(&qword_100BC3340);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        goto LABEL_37;
      }
      (*(void (**)(char *, uint64_t))(v99 + 8))(v27, v29);
    }
    v100 = sub_1000BA294(&qword_100BCE370);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    goto LABEL_31;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(a1, a2, v9);
  v11 = v6[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = v6[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BCE370);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v32 = v6[7];
  v33 = *(_QWORD *)&a2[v32];
  *(_QWORD *)&a1[v32] = v33;
  v34 = v6[8];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for DetailCondition(0);
  v38 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v37 - 8) + 16);
  v39 = swift_bridgeObjectRetain(v33);
  v38(v35, v36, v37, v39);
  v40 = v6[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  v10(&a1[v6[10]], &a2[v6[10]], v9);
  a1[v6[11]] = a2[v6[11]];
  v324 = v9;
  v325 = v10;
  v10(&a1[v6[12]], &a2[v6[12]], v9);
  v44 = v6[13];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  v48 = v6[14];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = type metadata accessor for Locale(0);
  v321 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
  v321(v49, v50, v51);
  v52 = v6[15];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = type metadata accessor for DayWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  v56 = v6[16];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  v60 = v6[17];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
  v64 = v6[18];
  v65 = &a1[v64];
  v66 = &a2[v64];
  *(_QWORD *)v65 = *(_QWORD *)&a2[v64];
  v67 = *(_QWORD *)&a2[v64 + 8];
  *((_QWORD *)v65 + 1) = v67;
  v68 = (int *)type metadata accessor for WeatherData(0);
  v69 = v68[5];
  v70 = &v65[v69];
  v71 = &v66[v69];
  swift_bridgeObjectRetain(v67);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v51))
  {
    v72 = sub_1000BA294(&qword_100BC3340);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    v321(v70, v71, v51);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v51);
  }
  v73 = v68[6];
  v74 = &v65[v73];
  v75 = &v66[v73];
  v76 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
  v77 = v68[7];
  v78 = &v65[v77];
  v79 = &v66[v77];
  v80 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
  {
    v81 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    v325(v78, v79, v324);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
  }
  v82 = v68[8];
  v83 = &v65[v82];
  v84 = &v66[v82];
  v85 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v86 = swift_getEnumCaseMultiPayload(v84);
  if (v86 == 1)
  {
    v91 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v83, v84, v91);
    v88 = v83;
    v89 = v85;
    v90 = 1;
  }
  else
  {
    if (v86)
    {
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      goto LABEL_24;
    }
    *(_QWORD *)v83 = *(_QWORD *)v84;
    v87 = *((_QWORD *)v84 + 1);
    *((_QWORD *)v83 + 1) = v87;
    swift_bridgeObjectRetain(v87);
    v88 = v83;
    v89 = v85;
    v90 = 0;
  }
  swift_storeEnumTagMultiPayload(v88, v89, v90);
LABEL_24:
  v92 = v68[9];
  v93 = &v65[v92];
  v94 = &v66[v92];
  v95 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
  {
    v96 = sub_1000BA294(&qword_100BC3350);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    v97 = v325;
  }
  else
  {
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v324))
    {
      v98 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      v97 = v325;
    }
    else
    {
      v97 = v325;
      v325(v93, v94, v324);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v324);
    }
    v163 = *(int *)(v95 + 20);
    v164 = &v93[v163];
    v165 = &v94[v163];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, v324))
    {
      v166 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
    }
    else
    {
      v97(v164, v165, v324);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v164, 0, 1, v324);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
  }
  v167 = v6[19];
  v168 = (uint64_t *)&a1[v167];
  v169 = (uint64_t *)&a2[v167];
  v170 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v169) == 1)
  {
    v171 = *v169;
    *v168 = *v169;
    swift_bridgeObjectRetain(v171);
    v172 = v168;
    v173 = v170;
    v174 = 1;
  }
  else
  {
    v175 = type metadata accessor for News(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v168, v169, v175);
    v172 = v168;
    v173 = v170;
    v174 = 0;
  }
  swift_storeEnumTagMultiPayload(v172, v173, v174);
  v176 = v6[20];
  v177 = &a1[v176];
  v178 = &a2[v176];
  v179 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v178, 1, (uint64_t)v179))
  {
    v180 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v177 = *(_QWORD *)v178;
    v181 = *((_QWORD *)v178 + 1);
    *((_QWORD *)v177 + 1) = v181;
    v182 = v179[5];
    v183 = &v177[v182];
    v184 = &v178[v182];
    v185 = swift_bridgeObjectRetain(v181);
    ((void (*)(char *, char *, uint64_t, __n128))v97)(v183, v184, v324, v185);
    v97(&v177[v179[6]], &v178[v179[6]], v324);
    v97(&v177[v179[7]], &v178[v179[7]], v324);
    *(_QWORD *)&v177[v179[8]] = *(_QWORD *)&v178[v179[8]];
    v186 = v179[9];
    v187 = &v177[v186];
    v188 = &v178[v186];
    v189 = v188[8];
    *(_QWORD *)v187 = *(_QWORD *)v188;
    v187[8] = v189;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, (uint64_t)v179);
  }
  v190 = v6[21];
  v191 = &a1[v190];
  v192 = &a2[v190];
  *(_QWORD *)v191 = *(_QWORD *)v192;
  v193 = *((_QWORD *)v192 + 1);
  *((_QWORD *)v191 + 1) = v193;
  v194 = v6[22];
  v195 = &a1[v194];
  v196 = &a2[v194];
  v197 = type metadata accessor for WeatherChanges(0);
  swift_bridgeObjectRetain(v193);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v197))
  {
    v198 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v195, v196, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v195, v196, v197);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v197);
  }
  v199 = v6[23];
  v200 = &a1[v199];
  v201 = &a2[v199];
  v202 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v201, 1, v202))
  {
    v203 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v200, v201, v202);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v202);
  }
  v204 = v6[24];
  v205 = &a1[v204];
  v206 = &a2[v204];
  v207 = *(void **)v206;
  *(_QWORD *)v205 = *(_QWORD *)v206;
  v208 = (void *)*((_QWORD *)v206 + 1);
  *((_QWORD *)v205 + 1) = v208;
  v209 = (void *)*((_QWORD *)v206 + 2);
  *((_QWORD *)v205 + 2) = v209;
  v210 = (void *)*((_QWORD *)v206 + 3);
  *((_QWORD *)v205 + 3) = v210;
  v211 = (void *)*((_QWORD *)v206 + 4);
  *((_QWORD *)v205 + 4) = v211;
  v212 = (void *)*((_QWORD *)v206 + 5);
  *((_QWORD *)v205 + 5) = v212;
  a1[v6[25]] = a2[v6[25]];
  a1[v6[26]] = a2[v6[26]];
  v213 = v207;
  v214 = v208;
  v215 = v209;
  v216 = v210;
  v217 = v211;
  v218 = v212;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

char *sub_10027AFB8(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int128 v106;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);

  v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = v6[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_1000BA294(&qword_100BCB9F8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    v13 = v6[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_1000BA294(&qword_100BCE378);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BCE370);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    v18 = v6[8];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for DetailCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    v22 = v6[9];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = type metadata accessor for DetailChartCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    v8(&a1[v6[10]], &a2[v6[10]], v7);
    a1[v6[11]] = a2[v6[11]];
    v108 = v7;
    v109 = v8;
    v8(&a1[v6[12]], &a2[v6[12]], v7);
    v26 = v6[13];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    v30 = v6[14];
    v31 = &a1[v30];
    v32 = &a2[v30];
    v33 = type metadata accessor for Locale(0);
    v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
    v34(v31, v32, v33);
    v35 = v6[15];
    v36 = &a1[v35];
    v37 = &a2[v35];
    v38 = type metadata accessor for DayWeather(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    v39 = v6[16];
    v40 = &a1[v39];
    v41 = &a2[v39];
    v42 = type metadata accessor for CurrentWeather(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
    v43 = v6[17];
    v44 = &a1[v43];
    v45 = &a2[v43];
    v46 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
    v47 = v6[18];
    v48 = &a1[v47];
    v49 = &a2[v47];
    *(_OWORD *)&a1[v47] = *(_OWORD *)&a2[v47];
    v50 = (int *)type metadata accessor for WeatherData(0);
    v51 = v50[5];
    v52 = &v48[v51];
    v53 = &v49[v51];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v49[v51], 1, v33))
    {
      v54 = sub_1000BA294(&qword_100BC3340);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v34(v52, v53, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v33);
    }
    v55 = v50[6];
    v56 = &v48[v55];
    v57 = &v49[v55];
    v58 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
    v59 = v50[7];
    v60 = &v48[v59];
    v61 = &v49[v59];
    v62 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      v63 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      v109(v60, v61, v108);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    v64 = v50[8];
    v65 = &v48[v64];
    v66 = &v49[v64];
    v67 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v66) == 1)
    {
      v68 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v65, v66, v68);
      swift_storeEnumTagMultiPayload(v65, v67, 1);
    }
    else
    {
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    v69 = v50[9];
    v70 = &v48[v69];
    v71 = &v49[v69];
    v72 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
    {
      v73 = sub_1000BA294(&qword_100BC3350);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      v74 = v109;
    }
    else
    {
      v74 = v109;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v108))
      {
        v75 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        v109(v70, v71, v108);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v108);
      }
      v76 = *(int *)(v72 + 20);
      v77 = &v70[v76];
      v78 = &v71[v76];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v108))
      {
        v79 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        v109(v77, v78, v108);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v108);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
    }
    v80 = v6[19];
    v81 = &a1[v80];
    v82 = &a2[v80];
    v83 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v82))
    {
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      v84 = type metadata accessor for News(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v81, v82, v84);
      swift_storeEnumTagMultiPayload(v81, v83, 0);
    }
    v85 = v6[20];
    v86 = &a1[v85];
    v87 = &a2[v85];
    v88 = (int *)type metadata accessor for DetailChartSelection(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, (uint64_t)v88))
    {
      v89 = sub_1000BA294(&qword_100BD0B58);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v86 = *(_OWORD *)v87;
      v74(&v86[v88[5]], &v87[v88[5]], v108);
      v74(&v86[v88[6]], &v87[v88[6]], v108);
      v74(&v86[v88[7]], &v87[v88[7]], v108);
      *(_QWORD *)&v86[v88[8]] = *(_QWORD *)&v87[v88[8]];
      v90 = v88[9];
      v91 = &v86[v90];
      v92 = &v87[v90];
      v91[8] = v92[8];
      *(_QWORD *)v91 = *(_QWORD *)v92;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, (uint64_t)v88);
    }
    *(_OWORD *)&a1[v6[21]] = *(_OWORD *)&a2[v6[21]];
    v93 = v6[22];
    v94 = &a1[v93];
    v95 = &a2[v93];
    v96 = type metadata accessor for WeatherChanges(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
    {
      v97 = sub_1000BA294(&qword_100BCCC48);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
    }
    v98 = v6[23];
    v99 = &a1[v98];
    v100 = &a2[v98];
    v101 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
    {
      v102 = sub_1000BA294(&qword_100BCB9F0);
      memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
    }
    v103 = v6[24];
    v104 = &a1[v103];
    v105 = &a2[v103];
    v106 = *((_OWORD *)v105 + 1);
    *(_OWORD *)v104 = *(_OWORD *)v105;
    *((_OWORD *)v104 + 1) = v106;
    *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
    a1[v6[25]] = a2[v6[25]];
    a1[v6[26]] = a2[v6[26]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

char *sub_10027B7F4(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  int *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  int v152;
  int v153;
  uint64_t v154;
  size_t v155;
  void *v156;
  const void *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  int *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  __int128 v188;
  int v189;
  int v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  int *v205;
  int v206;
  int v207;
  void (*v208)(char *, char *, uint64_t);
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  int v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  int v230;
  int v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  void *v237;
  void *v238;
  void *v239;
  void *v240;
  void *v241;
  void *v242;
  uint64_t v244;
  __n128 v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  int v254;
  void (*v255)(char *, char *, uint64_t);
  void (*v256)(char *, char *, uint64_t);
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  uint64_t v261;

  v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1000215BC((uint64_t)a1, type metadata accessor for ConditionDetailInput.Input);
      goto LABEL_7;
    }
    v20 = type metadata accessor for Date(0);
    v258 = *(_QWORD *)(v20 - 8);
    v21 = *(void (**)(char *, char *, uint64_t))(v258 + 40);
    v21(a1, a2, v20);
    v22 = v6[5];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = sub_1000BA294(&qword_100BCB9F8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
    v26 = v6[6];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_1000BA294(&qword_100BCE378);
    v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
    v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
        goto LABEL_28;
      }
    }
    else
    {
      v90 = *(_QWORD *)(v29 - 8);
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 40))(v27, v28, v29);
LABEL_28:
        *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
        swift_bridgeObjectRelease();
        v92 = v6[8];
        v93 = &a1[v92];
        v94 = &a2[v92];
        v95 = type metadata accessor for DetailCondition(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 40))(v93, v94, v95);
        v96 = v6[9];
        v97 = &a1[v96];
        v98 = &a2[v96];
        v99 = type metadata accessor for DetailChartCondition(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v97, v98, v99);
        v21(&a1[v6[10]], &a2[v6[10]], v20);
        a1[v6[11]] = a2[v6[11]];
        v261 = v20;
        v255 = v21;
        v21(&a1[v6[12]], &a2[v6[12]], v20);
        v100 = v6[13];
        v101 = &a1[v100];
        v102 = &a2[v100];
        v103 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 40))(v101, v102, v103);
        v104 = v6[14];
        v105 = &a1[v104];
        v106 = &a2[v104];
        v107 = type metadata accessor for Locale(0);
        v257 = *(_QWORD *)(v107 - 8);
        v256 = *(void (**)(char *, char *, uint64_t))(v257 + 40);
        v256(v105, v106, v107);
        v108 = v6[15];
        v109 = &a1[v108];
        v110 = &a2[v108];
        v111 = type metadata accessor for DayWeather(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 40))(v109, v110, v111);
        v112 = v6[16];
        v113 = &a1[v112];
        v114 = &a2[v112];
        v115 = type metadata accessor for CurrentWeather(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 40))(v113, v114, v115);
        v116 = v6[17];
        v117 = &a1[v116];
        v118 = &a2[v116];
        v119 = sub_1000BA294(&qword_100BCB130);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 40))(v117, v118, v119);
        v120 = v6[18];
        v121 = &a1[v120];
        v122 = &a2[v120];
        v123 = *(_QWORD *)&a2[v120 + 8];
        *(_QWORD *)v121 = *(_QWORD *)&a2[v120];
        *((_QWORD *)v121 + 1) = v123;
        swift_bridgeObjectRelease();
        v124 = (int *)type metadata accessor for WeatherData(0);
        v125 = v124[5];
        v126 = &v121[v125];
        v127 = &v122[v125];
        v128 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v121[v125], 1, v107);
        v129 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v107);
        if (v128)
        {
          if (!v129)
          {
            (*(void (**)(char *, char *, uint64_t))(v257 + 32))(v126, v127, v107);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v107);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v129)
          {
            v256(v126, v127, v107);
LABEL_34:
            v131 = v124[6];
            v132 = &v121[v131];
            v133 = &v122[v131];
            v134 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 40))(v132, v133, v134);
            v135 = v124[7];
            v136 = &v121[v135];
            v137 = &v122[v135];
            v138 = sub_1000BA294(&qword_100BC3348);
            v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v138);
            v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138);
            if (v139)
            {
              if (!v140)
              {
                v141 = v261;
                (*(void (**)(char *, char *, uint64_t))(v258 + 32))(v136, v137, v261);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v140)
              {
                v141 = v261;
                v255(v136, v137, v261);
LABEL_40:
                if (a1 != a2)
                {
                  v143 = v124[8];
                  v144 = &v121[v143];
                  v145 = &v122[v143];
                  sub_1000215BC((uint64_t)&v121[v143], type metadata accessor for WeatherData.WeatherStatisticsState);
                  v146 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  if (swift_getEnumCaseMultiPayload(v145) == 1)
                  {
                    v147 = type metadata accessor for WeatherStatisticsModel(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v144, v145, v147);
                    swift_storeEnumTagMultiPayload(v144, v146, 1);
                  }
                  else
                  {
                    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
                  }
                }
                v148 = v124[9];
                v149 = &v121[v148];
                v150 = &v122[v148];
                v151 = type metadata accessor for WeatherDataOverrides(0);
                v152 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v151);
                v153 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v151);
                if (v152)
                {
                  if (!v153)
                  {
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v141))
                    {
                      v154 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                      memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v258 + 32))(v149, v150, v141);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v141);
                    }
                    v191 = *(int *)(v151 + 20);
                    v192 = &v149[v191];
                    v193 = &v150[v191];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v141))
                    {
                      v194 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                      memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v258 + 32))(v192, v193, v141);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v141);
                    }
                    v195 = (uint64_t)v149;
                    v196 = v151;
                    goto LABEL_81;
                  }
                  goto LABEL_50;
                }
                if (v153)
                {
                  sub_1000215BC((uint64_t)v149, type metadata accessor for WeatherDataOverrides);
LABEL_50:
                  v155 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
                  v156 = v149;
                  v157 = v150;
                  goto LABEL_51;
                }
                v189 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v141);
                v190 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v141);
                if (v189)
                {
                  if (!v190)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v258 + 32))(v149, v150, v141);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v141);
LABEL_112:
                    v250 = *(int *)(v151 + 20);
                    v251 = (uint64_t)&v149[v250];
                    v252 = (uint64_t)&v150[v250];
                    v253 = _s7Weather24LocationCompositionStateOwet_0(v251, 1, v141);
                    v254 = _s7Weather24LocationCompositionStateOwet_0(v252, 1, v141);
                    if (v253)
                    {
                      if (!v254)
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v258 + 32))(v251, v252, v141);
                        v195 = v251;
                        v196 = v141;
LABEL_81:
                        _s7Weather24LocationCompositionStateOwst_0(v195, 0, 1, v196);
                        goto LABEL_82;
                      }
                    }
                    else
                    {
                      if (!v254)
                      {
                        v255((char *)v251, (char *)v252, v141);
LABEL_82:
                        if (a1 != a2)
                        {
                          v197 = v6[19];
                          v198 = &a1[v197];
                          v199 = &a2[v197];
                          sub_1000215BC((uint64_t)&a1[v197], type metadata accessor for NewsDataModel);
                          v200 = type metadata accessor for NewsDataModel(0);
                          if (swift_getEnumCaseMultiPayload(v199))
                          {
                            memcpy(v198, v199, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
                          }
                          else
                          {
                            v201 = type metadata accessor for News(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v198, v199, v201);
                            swift_storeEnumTagMultiPayload(v198, v200, 0);
                          }
                        }
                        v202 = v6[20];
                        v203 = &a1[v202];
                        v204 = &a2[v202];
                        v205 = (int *)type metadata accessor for DetailChartSelection(0);
                        v206 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, (uint64_t)v205);
                        v207 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, (uint64_t)v205);
                        if (v206)
                        {
                          if (!v207)
                          {
                            *(_OWORD *)v203 = *(_OWORD *)v204;
                            v208 = *(void (**)(char *, char *, uint64_t))(v258 + 32);
                            v208(&v203[v205[5]], &v204[v205[5]], v141);
                            v208(&v203[v205[6]], &v204[v205[6]], v141);
                            v208(&v203[v205[7]], &v204[v205[7]], v141);
                            *(_QWORD *)&v203[v205[8]] = *(_QWORD *)&v204[v205[8]];
                            v209 = v205[9];
                            v210 = &v203[v209];
                            v211 = &v204[v209];
                            v210[8] = v211[8];
                            *(_QWORD *)v210 = *(_QWORD *)v211;
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, (uint64_t)v205);
                            goto LABEL_92;
                          }
                        }
                        else
                        {
                          if (!v207)
                          {
                            v244 = *((_QWORD *)v204 + 1);
                            *(_QWORD *)v203 = *(_QWORD *)v204;
                            *((_QWORD *)v203 + 1) = v244;
                            v245 = swift_bridgeObjectRelease();
                            ((void (*)(char *, char *, uint64_t, __n128))v255)(&v203[v205[5]], &v204[v205[5]], v141, v245);
                            v255(&v203[v205[6]], &v204[v205[6]], v141);
                            v255(&v203[v205[7]], &v204[v205[7]], v141);
                            *(_QWORD *)&v203[v205[8]] = *(_QWORD *)&v204[v205[8]];
                            v246 = v205[9];
                            v247 = &v203[v246];
                            v248 = &v204[v246];
                            v247[8] = v248[8];
                            *(_QWORD *)v247 = *(_QWORD *)v248;
LABEL_92:
                            v213 = v6[21];
                            v214 = &a1[v213];
                            v215 = (uint64_t *)&a2[v213];
                            v217 = *v215;
                            v216 = v215[1];
                            *(_QWORD *)v214 = v217;
                            *((_QWORD *)v214 + 1) = v216;
                            swift_bridgeObjectRelease();
                            v218 = v6[22];
                            v219 = &a1[v218];
                            v220 = &a2[v218];
                            v221 = type metadata accessor for WeatherChanges(0);
                            v222 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v219, 1, v221);
                            v223 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v220, 1, v221);
                            if (v222)
                            {
                              if (!v223)
                              {
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 32))(v219, v220, v221);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v219, 0, 1, v221);
                                goto LABEL_98;
                              }
                            }
                            else
                            {
                              v224 = *(_QWORD *)(v221 - 8);
                              if (!v223)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v224 + 40))(v219, v220, v221);
LABEL_98:
                                v226 = v6[23];
                                v227 = &a1[v226];
                                v228 = &a2[v226];
                                v229 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
                                v230 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v227, 1, v229);
                                v231 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v229);
                                if (v230)
                                {
                                  if (!v231)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v227, v228, v229);
                                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v229);
LABEL_104:
                                    v234 = v6[24];
                                    v235 = &a1[v234];
                                    v236 = &a2[v234];
                                    v237 = *(void **)&a1[v234];
                                    *(_QWORD *)v235 = *(_QWORD *)v236;

                                    v238 = (void *)*((_QWORD *)v235 + 1);
                                    *((_QWORD *)v235 + 1) = *((_QWORD *)v236 + 1);

                                    v239 = (void *)*((_QWORD *)v235 + 2);
                                    *((_QWORD *)v235 + 2) = *((_QWORD *)v236 + 2);

                                    v240 = (void *)*((_QWORD *)v235 + 3);
                                    *((_QWORD *)v235 + 3) = *((_QWORD *)v236 + 3);

                                    v241 = (void *)*((_QWORD *)v235 + 4);
                                    *((_QWORD *)v235 + 4) = *((_QWORD *)v236 + 4);

                                    v242 = (void *)*((_QWORD *)v235 + 5);
                                    *((_QWORD *)v235 + 5) = *((_QWORD *)v236 + 5);

                                    a1[v6[25]] = a2[v6[25]];
                                    a1[v6[26]] = a2[v6[26]];
                                    return a1;
                                  }
                                }
                                else
                                {
                                  v232 = *(_QWORD *)(v229 - 8);
                                  if (!v231)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(v232 + 40))(v227, v228, v229);
                                    goto LABEL_104;
                                  }
                                  (*(void (**)(char *, uint64_t))(v232 + 8))(v227, v229);
                                }
                                v233 = sub_1000BA294(&qword_100BCB9F0);
                                memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
                                goto LABEL_104;
                              }
                              (*(void (**)(char *, uint64_t))(v224 + 8))(v219, v221);
                            }
                            v225 = sub_1000BA294(&qword_100BCCC48);
                            memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
                            goto LABEL_98;
                          }
                          sub_1000215BC((uint64_t)v203, type metadata accessor for DetailChartSelection);
                        }
                        v212 = sub_1000BA294(&qword_100BD0B58);
                        memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
                        goto LABEL_92;
                      }
                      (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v251, v141);
                    }
                    v155 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
                    v156 = (void *)v251;
                    v157 = (const void *)v252;
LABEL_51:
                    memcpy(v156, v157, v155);
                    goto LABEL_82;
                  }
                }
                else
                {
                  if (!v190)
                  {
                    v255(v149, v150, v141);
                    goto LABEL_112;
                  }
                  (*(void (**)(char *, uint64_t))(v258 + 8))(v149, v141);
                }
                v249 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
                goto LABEL_112;
              }
              sub_100021A14((uint64_t)v136, &qword_100BC3348);
            }
            v142 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
            v141 = v261;
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v257 + 8))(v126, v107);
        }
        v130 = sub_1000BA294(&qword_100BC3340);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v27, v29);
    }
    v91 = sub_1000BA294(&qword_100BCE370);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(a1, a2, v9);
  v11 = v6[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v6[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BCE370);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  v32 = v6[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
  v36 = v6[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  v10(&a1[v6[10]], &a2[v6[10]], v9);
  a1[v6[11]] = a2[v6[11]];
  v259 = v9;
  v260 = v10;
  v10(&a1[v6[12]], &a2[v6[12]], v9);
  v40 = v6[13];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  v44 = v6[14];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = type metadata accessor for Locale(0);
  v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32);
  v48(v45, v46, v47);
  v49 = v6[15];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = type metadata accessor for DayWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
  v53 = v6[16];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
  v57 = v6[17];
  v58 = &a1[v57];
  v59 = &a2[v57];
  v60 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
  v61 = v6[18];
  v62 = &a1[v61];
  v63 = &a2[v61];
  *(_OWORD *)&a1[v61] = *(_OWORD *)&a2[v61];
  v64 = (int *)type metadata accessor for WeatherData(0);
  v65 = v64[5];
  v66 = &v62[v65];
  v67 = &v63[v65];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v63[v65], 1, v47))
  {
    v68 = sub_1000BA294(&qword_100BC3340);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    v48(v66, v67, v47);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v47);
  }
  v69 = v64[6];
  v70 = &v62[v69];
  v71 = &v63[v69];
  v72 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v70, v71, v72);
  v73 = v64[7];
  v74 = &v62[v73];
  v75 = &v63[v73];
  v76 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
  {
    v77 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    v260(v74, v75, v259);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
  }
  v78 = v64[8];
  v79 = &v62[v78];
  v80 = &v63[v78];
  v81 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload(v80) == 1)
  {
    v82 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v79, v80, v82);
    swift_storeEnumTagMultiPayload(v79, v81, 1);
  }
  else
  {
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  v83 = v64[9];
  v84 = &v62[v83];
  v85 = &v63[v83];
  v86 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    v87 = sub_1000BA294(&qword_100BC3350);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    v88 = v260;
  }
  else
  {
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v259))
    {
      v89 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      v88 = v260;
    }
    else
    {
      v88 = v260;
      v260(v84, v85, v259);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v259);
    }
    v158 = *(int *)(v86 + 20);
    v159 = &v84[v158];
    v160 = &v85[v158];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v259))
    {
      v161 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    }
    else
    {
      v88(v159, v160, v259);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v259);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  v162 = v6[19];
  v163 = &a1[v162];
  v164 = &a2[v162];
  v165 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v164))
  {
    memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
  }
  else
  {
    v166 = type metadata accessor for News(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v163, v164, v166);
    swift_storeEnumTagMultiPayload(v163, v165, 0);
  }
  v167 = v6[20];
  v168 = &a1[v167];
  v169 = &a2[v167];
  v170 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, (uint64_t)v170))
  {
    v171 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v168 = *(_OWORD *)v169;
    v88(&v168[v170[5]], &v169[v170[5]], v259);
    v88(&v168[v170[6]], &v169[v170[6]], v259);
    v88(&v168[v170[7]], &v169[v170[7]], v259);
    *(_QWORD *)&v168[v170[8]] = *(_QWORD *)&v169[v170[8]];
    v172 = v170[9];
    v173 = &v168[v172];
    v174 = &v169[v172];
    v173[8] = v174[8];
    *(_QWORD *)v173 = *(_QWORD *)v174;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, (uint64_t)v170);
  }
  *(_OWORD *)&a1[v6[21]] = *(_OWORD *)&a2[v6[21]];
  v175 = v6[22];
  v176 = &a1[v175];
  v177 = &a2[v175];
  v178 = type metadata accessor for WeatherChanges(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
  {
    v179 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v178);
  }
  v180 = v6[23];
  v181 = &a1[v180];
  v182 = &a2[v180];
  v183 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v182, 1, v183))
  {
    v184 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v181, v182, v183);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v181, 0, 1, v183);
  }
  v185 = v6[24];
  v186 = &a1[v185];
  v187 = &a2[v185];
  v188 = *((_OWORD *)v187 + 1);
  *(_OWORD *)v186 = *(_OWORD *)v187;
  *((_OWORD *)v186 + 1) = v188;
  *((_OWORD *)v186 + 2) = *((_OWORD *)v187 + 2);
  a1[v6[25]] = a2[v6[25]];
  a1[v6[26]] = a2[v6[26]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_10027CC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027CC78);
}

uint64_t sub_10027CC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000F40BC();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_10027CCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027CCC4);
}

uint64_t sub_10027CCC4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for ConditionDetailInput.Input(0);
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_10027CD04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConditionDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_10027CD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for ConditionDetailInput(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD0BD0, (uint64_t)&nominal type descriptor for ConditionDetailInput);
}

uint64_t sub_10027CD80(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for ConditionDetailInput.Input(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

char *sub_10027CDD4(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __n128 v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;
  void (*v146)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v8(a1, a2, v7);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_1000BA294(&qword_100BCE370);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = *(_QWORD *)&a2[v19];
  *(_QWORD *)&a1[v19] = v21;
  v22 = &a1[v20];
  v23 = &a2[v20];
  v24 = type metadata accessor for DetailCondition(0);
  v25 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
  v26 = swift_bridgeObjectRetain(v21);
  v25(v22, v23, v24, v26);
  v27 = a3[9];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v8(&a1[a3[10]], &a2[a3[10]], v7);
  v31 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  v145 = v7;
  v146 = v8;
  v8(&a1[v31], &a2[v31], v7);
  v32 = a3[13];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  v36 = a3[14];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for Locale(0);
  v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  v144(v37, v38, v39);
  v40 = a3[15];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = type metadata accessor for DayWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  v44 = a3[16];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  v48 = a3[17];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  v52 = a3[18];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = *(_QWORD *)&a2[v52 + 8];
  *(_QWORD *)v53 = *(_QWORD *)&a2[v52];
  *((_QWORD *)v53 + 1) = v55;
  v56 = (int *)type metadata accessor for WeatherData(0);
  v57 = v56[5];
  v58 = &v53[v57];
  v59 = &v54[v57];
  swift_bridgeObjectRetain(v55);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v39))
  {
    v60 = sub_1000BA294(&qword_100BC3340);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v144(v58, v59, v39);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v39);
  }
  v61 = v56[6];
  v62 = &v53[v61];
  v63 = &v54[v61];
  v64 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
  v65 = v56[7];
  v66 = &v53[v65];
  v67 = &v54[v65];
  v68 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
  {
    v69 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v146(v66, v67, v145);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
  }
  v70 = v56[8];
  v71 = &v53[v70];
  v72 = &v54[v70];
  v73 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v72);
  if (EnumCaseMultiPayload == 1)
  {
    v79 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v71, v72, v79);
    v76 = v71;
    v77 = v73;
    v78 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      goto LABEL_18;
    }
    v75 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v75;
    swift_bridgeObjectRetain(v75);
    v76 = v71;
    v77 = v73;
    v78 = 0;
  }
  swift_storeEnumTagMultiPayload(v76, v77, v78);
LABEL_18:
  v80 = v56[9];
  v81 = &v53[v80];
  v82 = &v54[v80];
  v83 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    v84 = sub_1000BA294(&qword_100BC3350);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    v85 = (void (*)(char *, char *, uint64_t, __n128))v146;
  }
  else
  {
    v85 = (void (*)(char *, char *, uint64_t, __n128))v146;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v145))
    {
      v86 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      v146(v81, v82, v145);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v145);
    }
    v87 = *(int *)(v83 + 20);
    v88 = &v81[v87];
    v89 = &v82[v87];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v145))
    {
      v90 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      v146(v88, v89, v145);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v145);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  v91 = a3[19];
  v92 = (uint64_t *)&a1[v91];
  v93 = (uint64_t *)&a2[v91];
  v94 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v93) == 1)
  {
    v95 = *v93;
    *v92 = *v93;
    swift_bridgeObjectRetain(v95);
    v96 = v92;
    v97 = v94;
    v98 = 1;
  }
  else
  {
    v99 = type metadata accessor for News(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v92, v93, v99);
    v96 = v92;
    v97 = v94;
    v98 = 0;
  }
  swift_storeEnumTagMultiPayload(v96, v97, v98);
  v100 = a3[20];
  v101 = &a1[v100];
  v102 = &a2[v100];
  v103 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, (uint64_t)v103))
  {
    v104 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    v105 = *((_QWORD *)v102 + 1);
    *(_QWORD *)v101 = *(_QWORD *)v102;
    *((_QWORD *)v101 + 1) = v105;
    v106 = v103[5];
    v107 = &v101[v106];
    v108 = &v102[v106];
    v109 = swift_bridgeObjectRetain(v105);
    v85(v107, v108, v145, v109);
    ((void (*)(char *, char *, uint64_t))v85)(&v101[v103[6]], &v102[v103[6]], v145);
    ((void (*)(char *, char *, uint64_t))v85)(&v101[v103[7]], &v102[v103[7]], v145);
    *(_QWORD *)&v101[v103[8]] = *(_QWORD *)&v102[v103[8]];
    v110 = v103[9];
    v111 = &v101[v110];
    v112 = &v102[v110];
    v111[8] = v112[8];
    *(_QWORD *)v111 = *(_QWORD *)v112;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, (uint64_t)v103);
  }
  v113 = a3[21];
  v114 = a3[22];
  v115 = &a1[v113];
  v116 = &a2[v113];
  v117 = *((_QWORD *)v116 + 1);
  *(_QWORD *)v115 = *(_QWORD *)v116;
  *((_QWORD *)v115 + 1) = v117;
  v118 = &a1[v114];
  v119 = &a2[v114];
  v120 = type metadata accessor for WeatherChanges(0);
  swift_bridgeObjectRetain(v117);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
  {
    v121 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v118, v119, v120);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
  }
  v122 = a3[23];
  v123 = &a1[v122];
  v124 = &a2[v122];
  v125 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
  {
    v126 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v123, v124, v125);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
  }
  v127 = a3[24];
  v128 = a3[25];
  v129 = &a1[v127];
  v130 = &a2[v127];
  v131 = *(void **)v130;
  v132 = (void *)*((_QWORD *)v130 + 1);
  *(_QWORD *)v129 = *(_QWORD *)v130;
  *((_QWORD *)v129 + 1) = v132;
  v133 = (void *)*((_QWORD *)v130 + 2);
  v134 = (void *)*((_QWORD *)v130 + 3);
  *((_QWORD *)v129 + 2) = v133;
  *((_QWORD *)v129 + 3) = v134;
  v135 = (void *)*((_QWORD *)v130 + 4);
  v136 = (void *)*((_QWORD *)v130 + 5);
  *((_QWORD *)v129 + 4) = v135;
  *((_QWORD *)v129 + 5) = v136;
  a1[v128] = a2[v128];
  a1[a3[26]] = a2[a3[26]];
  v137 = v131;
  v138 = v132;
  v139 = v133;
  v140 = v134;
  v141 = v135;
  v142 = v136;
  return a1;
}

void sub_10027D664(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id *v47;

  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[6];
  v9 = sub_1000BA294(&qword_100BCE378);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[8];
  v11 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[9];
  v13 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v5(a1 + a2[10], v4);
  v5(a1 + a2[12], v4);
  v14 = a1 + a2[13];
  v15 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = a1 + a2[14];
  v17 = type metadata accessor for Locale(0);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
  v18(v16, v17);
  v19 = a1 + a2[15];
  v20 = type metadata accessor for DayWeather(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[16];
  v22 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[17];
  v24 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[18];
  swift_bridgeObjectRelease();
  v26 = (int *)type metadata accessor for WeatherData(0);
  v27 = v25 + v26[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v17))
    v18(v27, v17);
  v28 = v25 + v26[6];
  v29 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  v30 = v25 + v26[7];
  v31 = sub_1000BA294(&qword_100BC3348);
  if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31))
    v5(v30, v4);
  v32 = v25 + v26[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v32);
  if (EnumCaseMultiPayload == 1)
  {
    v34 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v32, v34);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  v35 = v25 + v26[9];
  v36 = type metadata accessor for WeatherDataOverrides(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
  {
    if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v4))
      v5(v35, v4);
    v37 = v35 + *(int *)(v36 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v4))
      v5(v37, v4);
  }
  v38 = a1 + a2[19];
  type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v38) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = type metadata accessor for News(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
  }
  v40 = a1 + a2[20];
  v41 = (int *)type metadata accessor for DetailChartSelection(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, (uint64_t)v41))
  {
    v42 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v5)(v40 + v41[5], v4, v42);
    v5(v40 + v41[6], v4);
    v5(v40 + v41[7], v4);
  }
  swift_bridgeObjectRelease();
  v43 = a1 + a2[22];
  v44 = type metadata accessor for WeatherChanges(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v44))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
  v45 = a1 + a2[23];
  v46 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
  v47 = (id *)(a1 + a2[24]);

}

uint64_t sub_10027DB20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  char *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  int EnumCaseMultiPayload;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __n128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  void *v116;
  const void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  const void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  void (*v144)(char *, const void *, uint64_t);

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_1000BA294(&qword_100BCE370);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[7];
  v18 = a3[8];
  v19 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v19;
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = type metadata accessor for DetailCondition(0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
  v24 = swift_bridgeObjectRetain(v19);
  v23(v20, v21, v22, v24);
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v29 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v143 = v6;
  v144 = (void (*)(char *, const void *, uint64_t))v7;
  v7(a1 + v29, a2 + v29, v6);
  v30 = a3[13];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  v34 = a3[14];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = type metadata accessor for Locale(0);
  v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v142(v35, v36, v37);
  v38 = a3[15];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = type metadata accessor for DayWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  v42 = a3[16];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = a3[17];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  v50 = a3[18];
  v51 = (_QWORD *)(a1 + v50);
  v52 = a2 + v50;
  v53 = *(_QWORD *)(a2 + v50 + 8);
  *v51 = *(_QWORD *)(a2 + v50);
  v51[1] = v53;
  v54 = (int *)type metadata accessor for WeatherData(0);
  v55 = v54[5];
  v56 = (char *)v51 + v55;
  v57 = (const void *)(v52 + v55);
  swift_bridgeObjectRetain(v53);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v37))
  {
    v58 = sub_1000BA294(&qword_100BC3340);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v142((uint64_t)v56, (uint64_t)v57, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v37);
  }
  v59 = v54[6];
  v60 = (char *)v51 + v59;
  v61 = v52 + v59;
  v62 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = v54[7];
  v64 = (char *)v51 + v63;
  v65 = (const void *)(v52 + v63);
  v66 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
  {
    v67 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v144(v64, v65, v143);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
  }
  v68 = v54[8];
  v69 = (_QWORD *)((char *)v51 + v68);
  v70 = (_QWORD *)(v52 + v68);
  v71 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v70);
  if (EnumCaseMultiPayload == 1)
  {
    v77 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v69, v70, v77);
    v74 = v69;
    v75 = v71;
    v76 = 1;
    goto LABEL_14;
  }
  if (!EnumCaseMultiPayload)
  {
    v73 = v70[1];
    *v69 = *v70;
    v69[1] = v73;
    swift_bridgeObjectRetain(v73);
    v74 = v69;
    v75 = v71;
    v76 = 0;
LABEL_14:
    swift_storeEnumTagMultiPayload(v74, v75, v76);
    goto LABEL_16;
  }
  memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
LABEL_16:
  v78 = v54[9];
  v79 = (char *)v51 + v78;
  v80 = (char *)(v52 + v78);
  v81 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
  {
    v82 = sub_1000BA294(&qword_100BC3350);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    v83 = (void (*)(char *, char *, uint64_t, __n128))v144;
  }
  else
  {
    v83 = (void (*)(char *, char *, uint64_t, __n128))v144;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v143))
    {
      v84 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      v144(v79, v80, v143);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v143);
    }
    v85 = *(int *)(v81 + 20);
    v86 = &v79[v85];
    v87 = &v80[v85];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v143))
    {
      v88 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      v144(v86, v87, v143);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v143);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
  }
  v89 = a3[19];
  v90 = (uint64_t *)(a1 + v89);
  v91 = (uint64_t *)(a2 + v89);
  v92 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v91) == 1)
  {
    v93 = *v91;
    *v90 = *v91;
    swift_bridgeObjectRetain(v93);
    v94 = v90;
    v95 = v92;
    v96 = 1;
  }
  else
  {
    v97 = type metadata accessor for News(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v90, v91, v97);
    v94 = v90;
    v95 = v92;
    v96 = 0;
  }
  swift_storeEnumTagMultiPayload(v94, v95, v96);
  v98 = a3[20];
  v99 = (_QWORD *)(a1 + v98);
  v100 = (_QWORD *)(a2 + v98);
  v101 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, (uint64_t)v101))
  {
    v102 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    v103 = v100[1];
    *v99 = *v100;
    v99[1] = v103;
    v104 = v101[5];
    v105 = (char *)v99 + v104;
    v106 = (char *)v100 + v104;
    v107 = swift_bridgeObjectRetain(v103);
    v83(v105, v106, v143, v107);
    ((void (*)(char *, char *, uint64_t))v83)((char *)v99 + v101[6], (char *)v100 + v101[6], v143);
    ((void (*)(char *, char *, uint64_t))v83)((char *)v99 + v101[7], (char *)v100 + v101[7], v143);
    *(_QWORD *)((char *)v99 + v101[8]) = *(_QWORD *)((char *)v100 + v101[8]);
    v108 = v101[9];
    v109 = (char *)v99 + v108;
    v110 = (char *)v100 + v108;
    v109[8] = v110[8];
    *(_QWORD *)v109 = *(_QWORD *)v110;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, (uint64_t)v101);
  }
  v111 = a3[21];
  v112 = a3[22];
  v113 = (_QWORD *)(a1 + v111);
  v114 = (_QWORD *)(a2 + v111);
  v115 = v114[1];
  *v113 = *v114;
  v113[1] = v115;
  v116 = (void *)(a1 + v112);
  v117 = (const void *)(a2 + v112);
  v118 = type metadata accessor for WeatherChanges(0);
  swift_bridgeObjectRetain(v115);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
  {
    v119 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v116, v117, v118);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
  }
  v120 = a3[23];
  v121 = (void *)(a1 + v120);
  v122 = (const void *)(a2 + v120);
  v123 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
  {
    v124 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
  }
  v125 = a3[24];
  v126 = a3[25];
  v127 = (_QWORD *)(a1 + v125);
  v128 = a2 + v125;
  v129 = *(void **)v128;
  v130 = *(void **)(v128 + 8);
  *v127 = *(_QWORD *)v128;
  v127[1] = v130;
  v131 = *(void **)(v128 + 16);
  v132 = *(void **)(v128 + 24);
  v127[2] = v131;
  v127[3] = v132;
  v133 = *(void **)(v128 + 32);
  v134 = *(void **)(v128 + 40);
  v127[4] = v133;
  v127[5] = v134;
  *(_BYTE *)(a1 + v126) = *(_BYTE *)(a2 + v126);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v135 = v129;
  v136 = v130;
  v137 = v131;
  v138 = v132;
  v139 = v133;
  v140 = v134;
  return a1;
}

uint64_t sub_10027E384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  const void *v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  const void *v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  int EnumCaseMultiPayload;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int v89;
  int v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  int *v122;
  int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  void (*v129)(char *, char *, uint64_t, __n128);
  __n128 v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  const void *v142;
  uint64_t v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  const void *v150;
  uint64_t v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  void *v159;
  void *v160;
  id v161;
  void *v162;
  void *v163;
  id v164;
  void *v165;
  void *v166;
  id v167;
  void *v168;
  void *v169;
  id v170;
  void *v171;
  void *v172;
  id v173;
  void *v174;
  void *v175;
  id v176;
  uint64_t v178;
  __n128 v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char v183;
  void (*v184)(char *, const void *, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;

  v6 = type metadata accessor for Date(0);
  v185 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v185 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1000BA294(&qword_100BCE378);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_1000BA294(&qword_100BCE370);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  v20 = a3[7];
  v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  v7(a1 + a3[10], a2 + a3[10], v6);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v187 = v6;
  v184 = (void (*)(char *, const void *, uint64_t))v7;
  v7(a1 + a3[12], a2 + a3[12], v6);
  v30 = a3[13];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = a3[14];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = type metadata accessor for Locale(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = a2;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 24);
  v40(v35, v36, v37);
  v41 = a3[15];
  v42 = a1 + v41;
  v43 = v39 + v41;
  v44 = type metadata accessor for DayWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
  v45 = a3[16];
  v46 = a1 + v45;
  v47 = v39 + v45;
  v48 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
  v49 = a3[17];
  v50 = a1 + v49;
  v51 = v39 + v49;
  v52 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
  v188 = a3;
  v53 = a3[18];
  v54 = (_QWORD *)(a1 + v53);
  v186 = v39;
  v55 = v39 + v53;
  *v54 = *(_QWORD *)(v39 + v53);
  v56 = *(_QWORD *)(v39 + v53 + 8);
  v54[1] = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease();
  v57 = (int *)type metadata accessor for WeatherData(0);
  v58 = v57[5];
  v59 = (char *)v54 + v58;
  v60 = (const void *)(v55 + v58);
  v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54 + v58, 1, v37);
  v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v37);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, const void *, uint64_t))(v38 + 16))(v59, v60, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v37);
LABEL_12:
    v63 = sub_1000BA294(&qword_100BC3340);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_13;
  }
  v40((uint64_t)v59, (uint64_t)v60, v37);
LABEL_13:
  v64 = v57[6];
  v65 = (char *)v54 + v64;
  v66 = v55 + v64;
  v67 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 24))(v65, v66, v67);
  v68 = v57[7];
  v69 = (char *)v54 + v68;
  v70 = (const void *)(v55 + v68);
  v71 = sub_1000BA294(&qword_100BC3348);
  v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v71);
  v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, const void *, uint64_t))(v185 + 16))(v69, v70, v187);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v73)
  {
    sub_100021A14((uint64_t)v69, &qword_100BC3348);
LABEL_18:
    v74 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_19;
  }
  v184(v69, v70, v187);
LABEL_19:
  if (a1 == v186)
    goto LABEL_26;
  v75 = v57[8];
  v76 = (_QWORD *)((char *)v54 + v75);
  v77 = (_QWORD *)(v55 + v75);
  sub_1000215BC((uint64_t)v54 + v75, type metadata accessor for WeatherData.WeatherStatisticsState);
  v78 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v77);
  if (EnumCaseMultiPayload == 1)
  {
    v84 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v76, v77, v84);
    v81 = v76;
    v82 = v78;
    v83 = 1;
    goto LABEL_24;
  }
  if (!EnumCaseMultiPayload)
  {
    *v76 = *v77;
    v80 = v77[1];
    v76[1] = v80;
    swift_bridgeObjectRetain(v80);
    v81 = v76;
    v82 = v78;
    v83 = 0;
LABEL_24:
    swift_storeEnumTagMultiPayload(v81, v82, v83);
    goto LABEL_26;
  }
  memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
LABEL_26:
  v85 = v57[9];
  v86 = (char *)v54 + v85;
  v87 = (char *)(v55 + v85);
  v88 = type metadata accessor for WeatherDataOverrides(0);
  v89 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v88);
  v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88);
  if (v89)
  {
    if (!v90)
    {
      v91 = v188;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v187))
      {
        v92 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v86, v87, v187);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v187);
      }
      v97 = *(int *)(v88 + 20);
      v98 = &v86[v97];
      v99 = &v87[v97];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v187))
      {
        v100 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v98, v99, v187);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v187);
      }
      v101 = (uint64_t)v86;
      v102 = v88;
      goto LABEL_44;
    }
LABEL_32:
    v93 = sub_1000BA294(&qword_100BC3350);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    v91 = v188;
    goto LABEL_55;
  }
  if (v90)
  {
    sub_1000215BC((uint64_t)v86, type metadata accessor for WeatherDataOverrides);
    goto LABEL_32;
  }
  v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v187);
  v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v187);
  if (v94)
  {
    if (v95)
    {
      v96 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v86, v87, v187);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v187);
    }
    v91 = v188;
  }
  else
  {
    v91 = v188;
    if (v95)
    {
      (*(void (**)(char *, uint64_t))(v185 + 8))(v86, v187);
      v103 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    }
    else
    {
      v184(v86, v87, v187);
    }
  }
  v104 = *(int *)(v88 + 20);
  v105 = &v86[v104];
  v106 = &v87[v104];
  v107 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v187);
  v108 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v187);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v105, v106, v187);
      v101 = (uint64_t)v105;
      v102 = v187;
LABEL_44:
      _s7Weather24LocationCompositionStateOwst_0(v101, 0, 1, v102);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v108)
  {
    (*(void (**)(char *, uint64_t))(v185 + 8))(v105, v187);
LABEL_54:
    v109 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    goto LABEL_55;
  }
  v184(v105, v106, v187);
LABEL_55:
  if (a1 != v186)
  {
    v110 = v91[19];
    v111 = (uint64_t *)(a1 + v110);
    v112 = (uint64_t *)(v186 + v110);
    sub_1000215BC(a1 + v110, type metadata accessor for NewsDataModel);
    v113 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v112) == 1)
    {
      v114 = *v112;
      *v111 = *v112;
      swift_bridgeObjectRetain(v114);
      v115 = v111;
      v116 = v113;
      v117 = 1;
    }
    else
    {
      v118 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v111, v112, v118);
      v115 = v111;
      v116 = v113;
      v117 = 0;
    }
    swift_storeEnumTagMultiPayload(v115, v116, v117);
  }
  v119 = v91[20];
  v120 = (_QWORD *)(a1 + v119);
  v121 = (_QWORD *)(v186 + v119);
  v122 = (int *)type metadata accessor for DetailChartSelection(0);
  v123 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, (uint64_t)v122);
  v124 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, (uint64_t)v122);
  if (v123)
  {
    if (!v124)
    {
      *v120 = *v121;
      v125 = v121[1];
      v120[1] = v125;
      v126 = v122[5];
      v127 = (char *)v120 + v126;
      v128 = (char *)v121 + v126;
      v129 = *(void (**)(char *, char *, uint64_t, __n128))(v185 + 16);
      v130 = swift_bridgeObjectRetain(v125);
      v129(v127, v128, v187, v130);
      ((void (*)(char *, char *, uint64_t))v129)((char *)v120 + v122[6], (char *)v121 + v122[6], v187);
      ((void (*)(char *, char *, uint64_t))v129)((char *)v120 + v122[7], (char *)v121 + v122[7], v187);
      *(_QWORD *)((char *)v120 + v122[8]) = *(_QWORD *)((char *)v121 + v122[8]);
      v131 = v122[9];
      v132 = (char *)v120 + v131;
      v133 = (char *)v121 + v131;
      v134 = v133[8];
      *(_QWORD *)v132 = *(_QWORD *)v133;
      v132[8] = v134;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v120, 0, 1, (uint64_t)v122);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v124)
  {
    sub_1000215BC((uint64_t)v120, type metadata accessor for DetailChartSelection);
LABEL_65:
    v135 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
    goto LABEL_66;
  }
  *v120 = *v121;
  v178 = v121[1];
  v120[1] = v178;
  swift_bridgeObjectRetain(v178);
  v179 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v184)((char *)v120 + v122[5], (char *)v121 + v122[5], v187, v179);
  v184((char *)v120 + v122[6], (char *)v121 + v122[6], v187);
  v184((char *)v120 + v122[7], (char *)v121 + v122[7], v187);
  *(_QWORD *)((char *)v120 + v122[8]) = *(_QWORD *)((char *)v121 + v122[8]);
  v180 = v122[9];
  v181 = (char *)v120 + v180;
  v182 = (char *)v121 + v180;
  v183 = v182[8];
  *(_QWORD *)v181 = *(_QWORD *)v182;
  v181[8] = v183;
LABEL_66:
  v136 = v91[21];
  v137 = (_QWORD *)(a1 + v136);
  v138 = (_QWORD *)(v186 + v136);
  *v137 = *v138;
  v139 = v138[1];
  v137[1] = v139;
  swift_bridgeObjectRetain(v139);
  swift_bridgeObjectRelease();
  v140 = v91[22];
  v141 = (void *)(a1 + v140);
  v142 = (const void *)(v186 + v140);
  v143 = type metadata accessor for WeatherChanges(0);
  v144 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v143);
  v145 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v143);
  if (v144)
  {
    if (!v145)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v143);
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  v146 = *(_QWORD *)(v143 - 8);
  if (v145)
  {
    (*(void (**)(void *, uint64_t))(v146 + 8))(v141, v143);
LABEL_71:
    v147 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(void *, const void *, uint64_t))(v146 + 24))(v141, v142, v143);
LABEL_72:
  v148 = v91[23];
  v149 = (void *)(a1 + v148);
  v150 = (const void *)(v186 + v148);
  v151 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  v152 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v151);
  v153 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v151);
  if (!v152)
  {
    v154 = *(_QWORD *)(v151 - 8);
    if (!v153)
    {
      (*(void (**)(void *, const void *, uint64_t))(v154 + 24))(v149, v150, v151);
      goto LABEL_78;
    }
    (*(void (**)(void *, uint64_t))(v154 + 8))(v149, v151);
    goto LABEL_77;
  }
  if (v153)
  {
LABEL_77:
    v155 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
    goto LABEL_78;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v151);
LABEL_78:
  v156 = v91[24];
  v157 = (_QWORD *)(a1 + v156);
  v158 = (_QWORD *)(v186 + v156);
  v159 = *(void **)(a1 + v156);
  v160 = *(void **)(v186 + v156);
  *v157 = v160;
  v161 = v160;

  v162 = (void *)v157[1];
  v163 = (void *)v158[1];
  v157[1] = v163;
  v164 = v163;

  v165 = (void *)v157[2];
  v166 = (void *)v158[2];
  v157[2] = v166;
  v167 = v166;

  v168 = (void *)v157[3];
  v169 = (void *)v158[3];
  v157[3] = v169;
  v170 = v169;

  v171 = (void *)v157[4];
  v172 = (void *)v158[4];
  v157[4] = v172;
  v173 = v172;

  v174 = (void *)v157[5];
  v175 = (void *)v158[5];
  v157[5] = v175;
  v176 = v175;

  *(_BYTE *)(a1 + v91[25]) = *(_BYTE *)(v186 + v91[25]);
  *(_BYTE *)(a1 + v91[26]) = *(_BYTE *)(v186 + v91[26]);
  return a1;
}

uint64_t sub_10027F0A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  _OWORD *v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  void *v94;
  const void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  const void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _OWORD *v105;
  _OWORD *v106;
  __int128 v107;
  uint64_t v109;
  void (*v110)(void *, const void *, uint64_t);

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_1000BA294(&qword_100BCE370);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v109 = v6;
  v110 = (void (*)(void *, const void *, uint64_t))v7;
  v7(a1 + v25, a2 + v25, v6);
  v26 = a3[13];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = a3[14];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = type metadata accessor for Locale(0);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
  v34(v31, v32, v33);
  v35 = a3[15];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = type metadata accessor for DayWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[16];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[17];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[18];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  v50 = (int *)type metadata accessor for WeatherData(0);
  v51 = v50[5];
  v52 = (void *)(v48 + v51);
  v53 = (const void *)(v49 + v51);
  if (_s7Weather24LocationCompositionStateOwet_0(v49 + v51, 1, v33))
  {
    v54 = sub_1000BA294(&qword_100BC3340);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v34((uint64_t)v52, (uint64_t)v53, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v33);
  }
  v55 = v50[6];
  v56 = v48 + v55;
  v57 = v49 + v55;
  v58 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = v50[7];
  v60 = (void *)(v48 + v59);
  v61 = (const void *)(v49 + v59);
  v62 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    v63 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    v110(v60, v61, v109);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  v64 = v50[8];
  v65 = (void *)(v48 + v64);
  v66 = (const void *)(v49 + v64);
  v67 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload(v66) == 1)
  {
    v68 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v65, v66, v68);
    swift_storeEnumTagMultiPayload(v65, v67, 1);
  }
  else
  {
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  v69 = v50[9];
  v70 = (char *)(v48 + v69);
  v71 = (char *)(v49 + v69);
  v72 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
  {
    v73 = sub_1000BA294(&qword_100BC3350);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    v74 = (void (*)(char *, char *, uint64_t))v110;
  }
  else
  {
    v74 = (void (*)(char *, char *, uint64_t))v110;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v109))
    {
      v75 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      v110(v70, v71, v109);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v109);
    }
    v76 = *(int *)(v72 + 20);
    v77 = &v70[v76];
    v78 = &v71[v76];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v109))
    {
      v79 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      v110(v77, v78, v109);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v109);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
  }
  v80 = a3[19];
  v81 = (void *)(a1 + v80);
  v82 = (const void *)(a2 + v80);
  v83 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v82))
  {
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    v84 = type metadata accessor for News(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v81, v82, v84);
    swift_storeEnumTagMultiPayload(v81, v83, 0);
  }
  v85 = a3[20];
  v86 = (_OWORD *)(a1 + v85);
  v87 = (_OWORD *)(a2 + v85);
  v88 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, (uint64_t)v88))
  {
    v89 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    *v86 = *v87;
    v74((char *)v86 + v88[5], (char *)v87 + v88[5], v109);
    v74((char *)v86 + v88[6], (char *)v87 + v88[6], v109);
    v74((char *)v86 + v88[7], (char *)v87 + v88[7], v109);
    *(_QWORD *)((char *)v86 + v88[8]) = *(_QWORD *)((char *)v87 + v88[8]);
    v90 = v88[9];
    v91 = (char *)v86 + v90;
    v92 = (char *)v87 + v90;
    v91[8] = v92[8];
    *(_QWORD *)v91 = *(_QWORD *)v92;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, (uint64_t)v88);
  }
  v93 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  v94 = (void *)(a1 + v93);
  v95 = (const void *)(a2 + v93);
  v96 = type metadata accessor for WeatherChanges(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
  {
    v97 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
  }
  v98 = a3[23];
  v99 = (void *)(a1 + v98);
  v100 = (const void *)(a2 + v98);
  v101 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
  {
    v102 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
  }
  v103 = a3[24];
  v104 = a3[25];
  v105 = (_OWORD *)(a1 + v103);
  v106 = (_OWORD *)(a2 + v103);
  v107 = v106[1];
  *v105 = *v106;
  v105[1] = v107;
  v105[2] = v106[2];
  *(_BYTE *)(a1 + v104) = *(_BYTE *)(a2 + v104);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  return a1;
}

uint64_t sub_10027F880(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  const void *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  const void *v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  const void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  size_t v86;
  void *v87;
  const void *v88;
  int v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  const void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int *v105;
  int v106;
  int v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  const void *v120;
  uint64_t v121;
  int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  const void *v128;
  uint64_t v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  uint64_t v143;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  int v155;
  void (*v156)(char *, const void *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;

  v6 = type metadata accessor for Date(0);
  v157 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v157 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1000BA294(&qword_100BCE378);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_1000BA294(&qword_100BCE370);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v28 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v159 = v6;
  v156 = (void (*)(char *, const void *, uint64_t))v7;
  v7(a1 + v28, a2 + v28, v6);
  v29 = a3[13];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  v33 = a3[14];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = type metadata accessor for Locale(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = a2;
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 40);
  v39(v34, v35, v36);
  v40 = a3[15];
  v41 = a1 + v40;
  v42 = v38 + v40;
  v43 = type metadata accessor for DayWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
  v44 = a3[16];
  v45 = a1 + v44;
  v46 = v38 + v44;
  v47 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
  v48 = a3[17];
  v49 = a1 + v48;
  v50 = v38 + v48;
  v51 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
  v160 = a3;
  v52 = a3[18];
  v53 = (_QWORD *)(a1 + v52);
  v158 = v38;
  v54 = v38 + v52;
  v55 = *(_QWORD *)(v38 + v52 + 8);
  *v53 = *(_QWORD *)(v38 + v52);
  v53[1] = v55;
  swift_bridgeObjectRelease();
  v56 = (int *)type metadata accessor for WeatherData(0);
  v57 = v56[5];
  v58 = (char *)v53 + v57;
  v59 = (const void *)(v54 + v57);
  v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53 + v57, 1, v36);
  v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v36);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, const void *, uint64_t))(v37 + 32))(v58, v59, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v58, v36);
LABEL_12:
    v62 = sub_1000BA294(&qword_100BC3340);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_13;
  }
  v39((uint64_t)v58, (uint64_t)v59, v36);
LABEL_13:
  v63 = v56[6];
  v64 = (char *)v53 + v63;
  v65 = v54 + v63;
  v66 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = v56[7];
  v68 = (char *)v53 + v67;
  v69 = (const void *)(v54 + v67);
  v70 = sub_1000BA294(&qword_100BC3348);
  v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v70);
  v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70);
  if (v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, const void *, uint64_t))(v157 + 32))(v68, v69, v159);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v72)
  {
    sub_100021A14((uint64_t)v68, &qword_100BC3348);
LABEL_18:
    v73 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_19;
  }
  v156(v68, v69, v159);
LABEL_19:
  if (a1 != v158)
  {
    v74 = v56[8];
    v75 = (char *)v53 + v74;
    v76 = (const void *)(v54 + v74);
    sub_1000215BC((uint64_t)v53 + v74, type metadata accessor for WeatherData.WeatherStatisticsState);
    v77 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v76) == 1)
    {
      v78 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v75, v76, v78);
      swift_storeEnumTagMultiPayload(v75, v77, 1);
    }
    else
    {
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
  }
  v79 = v56[9];
  v80 = (char *)v53 + v79;
  v81 = (char *)(v54 + v79);
  v82 = type metadata accessor for WeatherDataOverrides(0);
  v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v82);
  v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82);
  if (v83)
  {
    if (!v84)
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v159))
      {
        v85 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v80, v81, v159);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v159);
      }
      v91 = *(int *)(v82 + 20);
      v92 = &v80[v91];
      v93 = &v81[v91];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v159))
      {
        v94 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v92, v93, v159);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v159);
      }
      v95 = (uint64_t)v80;
      v96 = v82;
      goto LABEL_42;
    }
    goto LABEL_29;
  }
  if (v84)
  {
    sub_1000215BC((uint64_t)v80, type metadata accessor for WeatherDataOverrides);
LABEL_29:
    v86 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v87 = v80;
    v88 = v81;
LABEL_30:
    memcpy(v87, v88, v86);
    goto LABEL_43;
  }
  v89 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v159);
  v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v159);
  if (v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v80, v81, v159);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v159);
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v157 + 8))(v80, v159);
LABEL_71:
    v150 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
    goto LABEL_72;
  }
  v156(v80, v81, v159);
LABEL_72:
  v151 = *(int *)(v82 + 20);
  v152 = (uint64_t)&v80[v151];
  v153 = (uint64_t)&v81[v151];
  v154 = _s7Weather24LocationCompositionStateOwet_0(v152, 1, v159);
  v155 = _s7Weather24LocationCompositionStateOwet_0(v153, 1, v159);
  if (v154)
  {
    if (!v155)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v157 + 32))(v152, v153, v159);
      v95 = v152;
      v96 = v159;
LABEL_42:
      _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v96);
      goto LABEL_43;
    }
    goto LABEL_77;
  }
  if (v155)
  {
    (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v152, v159);
LABEL_77:
    v86 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
    v87 = (void *)v152;
    v88 = (const void *)v153;
    goto LABEL_30;
  }
  v156((char *)v152, (const void *)v153, v159);
LABEL_43:
  if (a1 != v158)
  {
    v97 = v160[19];
    v98 = (void *)(a1 + v97);
    v99 = (const void *)(v158 + v97);
    sub_1000215BC(a1 + v97, type metadata accessor for NewsDataModel);
    v100 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v99))
    {
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      v101 = type metadata accessor for News(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v98, v99, v101);
      swift_storeEnumTagMultiPayload(v98, v100, 0);
    }
  }
  v102 = v160[20];
  v103 = (char *)(a1 + v102);
  v104 = (char *)(v158 + v102);
  v105 = (int *)type metadata accessor for DetailChartSelection(0);
  v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, (uint64_t)v105);
  v107 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, (uint64_t)v105);
  if (v106)
  {
    if (!v107)
    {
      *(_OWORD *)v103 = *(_OWORD *)v104;
      v108 = *(void (**)(char *, char *, uint64_t))(v157 + 32);
      v108(&v103[v105[5]], &v104[v105[5]], v159);
      v108(&v103[v105[6]], &v104[v105[6]], v159);
      v108(&v103[v105[7]], &v104[v105[7]], v159);
      *(_QWORD *)&v103[v105[8]] = *(_QWORD *)&v104[v105[8]];
      v109 = v105[9];
      v110 = &v103[v109];
      v111 = &v104[v109];
      v110[8] = v111[8];
      *(_QWORD *)v110 = *(_QWORD *)v111;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, (uint64_t)v105);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v107)
  {
    sub_1000215BC((uint64_t)v103, type metadata accessor for DetailChartSelection);
LABEL_52:
    v112 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    goto LABEL_53;
  }
  v145 = *((_QWORD *)v104 + 1);
  *(_QWORD *)v103 = *(_QWORD *)v104;
  *((_QWORD *)v103 + 1) = v145;
  v146 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v156)(&v103[v105[5]], &v104[v105[5]], v159, v146);
  v156(&v103[v105[6]], &v104[v105[6]], v159);
  v156(&v103[v105[7]], &v104[v105[7]], v159);
  *(_QWORD *)&v103[v105[8]] = *(_QWORD *)&v104[v105[8]];
  v147 = v105[9];
  v148 = &v103[v147];
  v149 = &v104[v147];
  v148[8] = v149[8];
  *(_QWORD *)v148 = *(_QWORD *)v149;
LABEL_53:
  v113 = v160[21];
  v114 = (_QWORD *)(a1 + v113);
  v115 = (uint64_t *)(v158 + v113);
  v117 = *v115;
  v116 = v115[1];
  *v114 = v117;
  v114[1] = v116;
  swift_bridgeObjectRelease();
  v118 = v160[22];
  v119 = (void *)(a1 + v118);
  v120 = (const void *)(v158 + v118);
  v121 = type metadata accessor for WeatherChanges(0);
  v122 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v121);
  v123 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v121);
  if (v122)
  {
    if (!v123)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v121);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  v124 = *(_QWORD *)(v121 - 8);
  if (v123)
  {
    (*(void (**)(void *, uint64_t))(v124 + 8))(v119, v121);
LABEL_58:
    v125 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    goto LABEL_59;
  }
  (*(void (**)(void *, const void *, uint64_t))(v124 + 40))(v119, v120, v121);
LABEL_59:
  v126 = v160[23];
  v127 = (void *)(a1 + v126);
  v128 = (const void *)(v158 + v126);
  v129 = type metadata accessor for MidpointInterpolator.InterpolationMode(0);
  v130 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v129);
  v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129);
  if (!v130)
  {
    v132 = *(_QWORD *)(v129 - 8);
    if (!v131)
    {
      (*(void (**)(void *, const void *, uint64_t))(v132 + 40))(v127, v128, v129);
      goto LABEL_65;
    }
    (*(void (**)(void *, uint64_t))(v132 + 8))(v127, v129);
    goto LABEL_64;
  }
  if (v131)
  {
LABEL_64:
    v133 = sub_1000BA294(&qword_100BCB9F0);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    goto LABEL_65;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v129);
LABEL_65:
  v134 = v160[24];
  v135 = (_QWORD *)(a1 + v134);
  v136 = (_QWORD *)(v158 + v134);
  v137 = *(void **)(a1 + v134);
  *v135 = *v136;

  v138 = (void *)v135[1];
  v135[1] = v136[1];

  v139 = (void *)v135[2];
  v135[2] = v136[2];

  v140 = (void *)v135[3];
  v135[3] = v136[3];

  v141 = (void *)v135[4];
  v135[4] = v136[4];

  v142 = (void *)v135[5];
  v135[5] = v136[5];

  v143 = v160[26];
  *(_BYTE *)(a1 + v160[25]) = *(_BYTE *)(v158 + v160[25]);
  *(_BYTE *)(a1 + v143) = *(_BYTE *)(v158 + v143);
  return a1;
}

uint64_t sub_1002804CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002804D8);
}

uint64_t sub_1002804D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  sub_100098A00();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(&qword_100BCB9F8);
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_47:
    v8 = v4 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(&qword_100BCE370);
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_47;
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    type metadata accessor for DetailCondition(0);
    sub_100088FF0();
    if (v9)
    {
      v7 = v16;
      v11 = a3[8];
    }
    else
    {
      type metadata accessor for DetailChartCondition(0);
      sub_100088FF0();
      if (v17)
      {
        v7 = v18;
        v11 = a3[9];
      }
      else
      {
        type metadata accessor for Location(0);
        sub_100088FF0();
        if (v19)
        {
          v7 = v20;
          v11 = a3[13];
        }
        else
        {
          type metadata accessor for Locale(0);
          sub_100088FF0();
          if (v21)
          {
            v7 = v22;
            v11 = a3[14];
          }
          else
          {
            sub_1000DB264();
            sub_100088FF0();
            if (v23)
            {
              v7 = v24;
              v11 = a3[15];
            }
            else
            {
              type metadata accessor for CurrentWeather(0);
              sub_100088FF0();
              if (v25)
              {
                v7 = v26;
                v11 = a3[16];
              }
              else
              {
                sub_1000BA294(&qword_100BCB130);
                sub_100088FF0();
                if (v27)
                {
                  v7 = v28;
                  v11 = a3[17];
                }
                else
                {
                  type metadata accessor for WeatherData(0);
                  sub_100088FF0();
                  if (v29)
                  {
                    v7 = v30;
                    v11 = a3[18];
                  }
                  else
                  {
                    type metadata accessor for NewsDataModel(0);
                    sub_100088FF0();
                    if (v31)
                    {
                      v7 = v32;
                      v11 = a3[19];
                    }
                    else
                    {
                      sub_1000BA294(&qword_100BD0B58);
                      sub_100088FF0();
                      if (v33)
                      {
                        v7 = v34;
                        v11 = a3[20];
                      }
                      else
                      {
                        sub_1000BA294(&qword_100BCCC48);
                        sub_100088FF0();
                        if (v35)
                        {
                          v7 = v36;
                          v11 = a3[22];
                        }
                        else
                        {
                          v7 = sub_1000BA294(&qword_100BCB9F0);
                          v11 = a3[23];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_47;
  }
  v14 = *(_QWORD *)(v4 + a3[7]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1002806E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002806EC);
}

void sub_1002806EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  sub_100098A00();
  sub_10009D2E8();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    sub_1000BA294(&qword_100BCB9F8);
    sub_10009D2E8();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      sub_1000BA294(&qword_100BCE370);
      sub_10009D2E8();
      if (v14)
      {
        v9 = v15;
        v13 = a4[6];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(v5 + a4[7]) = (v4 - 1);
          return;
        }
        type metadata accessor for DetailCondition(0);
        sub_10009D2E8();
        if (v11)
        {
          v9 = v16;
          v13 = a4[8];
        }
        else
        {
          type metadata accessor for DetailChartCondition(0);
          sub_10009D2E8();
          if (v17)
          {
            v9 = v18;
            v13 = a4[9];
          }
          else
          {
            type metadata accessor for Location(0);
            sub_10009D2E8();
            if (v19)
            {
              v9 = v20;
              v13 = a4[13];
            }
            else
            {
              type metadata accessor for Locale(0);
              sub_10009D2E8();
              if (v21)
              {
                v9 = v22;
                v13 = a4[14];
              }
              else
              {
                sub_1000DB264();
                sub_10009D2E8();
                if (v23)
                {
                  v9 = v24;
                  v13 = a4[15];
                }
                else
                {
                  type metadata accessor for CurrentWeather(0);
                  sub_10009D2E8();
                  if (v25)
                  {
                    v9 = v26;
                    v13 = a4[16];
                  }
                  else
                  {
                    sub_1000BA294(&qword_100BCB130);
                    sub_10009D2E8();
                    if (v27)
                    {
                      v9 = v28;
                      v13 = a4[17];
                    }
                    else
                    {
                      type metadata accessor for WeatherData(0);
                      sub_10009D2E8();
                      if (v29)
                      {
                        v9 = v30;
                        v13 = a4[18];
                      }
                      else
                      {
                        type metadata accessor for NewsDataModel(0);
                        sub_10009D2E8();
                        if (v31)
                        {
                          v9 = v32;
                          v13 = a4[19];
                        }
                        else
                        {
                          sub_1000BA294(&qword_100BD0B58);
                          sub_10009D2E8();
                          if (v33)
                          {
                            v9 = v34;
                            v13 = a4[20];
                          }
                          else
                          {
                            sub_1000BA294(&qword_100BCCC48);
                            sub_10009D2E8();
                            if (v35)
                            {
                              v9 = v36;
                              v13 = a4[22];
                            }
                            else
                            {
                              v9 = sub_1000BA294(&qword_100BCB9F0);
                              v13 = a4[23];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = v5 + v13;
  }
  sub_1000987C4(v10, v4, v4, v9);
}

void sub_1002808E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD v33[23];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v33[0] = v4;
    sub_10015B530(319);
    if (v6 <= 0x3F)
    {
      v33[1] = *(_QWORD *)(v5 - 8) + 64;
      sub_100280B3C(319);
      if (v8 <= 0x3F)
      {
        v33[2] = *(_QWORD *)(v7 - 8) + 64;
        v33[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v9 = type metadata accessor for DetailCondition(319);
        if (v10 <= 0x3F)
        {
          v33[4] = *(_QWORD *)(v9 - 8) + 64;
          v11 = type metadata accessor for DetailChartCondition(319);
          if (v12 <= 0x3F)
          {
            v33[5] = *(_QWORD *)(v11 - 8) + 64;
            v33[6] = v4;
            v33[7] = &unk_10098D6F0;
            v33[8] = v4;
            v13 = type metadata accessor for Location(319);
            if (v14 <= 0x3F)
            {
              v33[9] = *(_QWORD *)(v13 - 8) + 64;
              v15 = type metadata accessor for Locale(319);
              if (v16 <= 0x3F)
              {
                v33[10] = *(_QWORD *)(v15 - 8) + 64;
                v17 = type metadata accessor for DayWeather(319);
                if (v18 <= 0x3F)
                {
                  v33[11] = *(_QWORD *)(v17 - 8) + 64;
                  v19 = type metadata accessor for CurrentWeather(319);
                  if (v20 <= 0x3F)
                  {
                    v33[12] = *(_QWORD *)(v19 - 8) + 64;
                    sub_10015B600(319);
                    if (v22 <= 0x3F)
                    {
                      v33[13] = *(_QWORD *)(v21 - 8) + 64;
                      v23 = type metadata accessor for WeatherData(319);
                      if (v24 <= 0x3F)
                      {
                        v33[14] = *(_QWORD *)(v23 - 8) + 64;
                        v25 = type metadata accessor for NewsDataModel(319);
                        if (v26 <= 0x3F)
                        {
                          v33[15] = *(_QWORD *)(v25 - 8) + 64;
                          sub_1001345CC(319, (unint64_t *)&qword_100BD0C90, type metadata accessor for DetailChartSelection);
                          if (v28 <= 0x3F)
                          {
                            v33[16] = *(_QWORD *)(v27 - 8) + 64;
                            v33[17] = &unk_10098D708;
                            sub_1001345CC(319, (unint64_t *)&qword_100BD0C98, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherChanges);
                            if (v30 <= 0x3F)
                            {
                              v33[18] = *(_QWORD *)(v29 - 8) + 64;
                              sub_1001345CC(319, (unint64_t *)&unk_100BD0CA0, (uint64_t (*)(uint64_t))&type metadata accessor for MidpointInterpolator.InterpolationMode);
                              if (v32 <= 0x3F)
                              {
                                v33[19] = *(_QWORD *)(v31 - 8) + 64;
                                v33[20] = &unk_10098D720;
                                v33[21] = &unk_10098D6F0;
                                v33[22] = &unk_10098D6F0;
                                swift_initStructMetadata(a1, 256, 23, v33, a1 + 16);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100280B3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BD0C68)
  {
    v2 = sub_100075EB0(&qword_100BCE378);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BD0C68);
  }
}

uint64_t sub_100280B94(uint64_t a1, uint64_t a2)
{
  return sub_1000F55C4(a1, a2, (uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t))sub_1000F59FC, (void (*)(_QWORD))&type metadata accessor for Location.Identifier);
}

uint64_t sub_100280BA8(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1000F59FC(0, result, v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_100280C14(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v4 = a2;
    v5 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v5 = 11;
    v6 = v5 | (v4 << 16);
    v7 = String.index(_:offsetBy:limitedBy:)(15, result, v6, a2, a3);
    if ((v8 & 1) != 0)
      v9 = v6;
    else
      v9 = v7;
    v10 = String.subscript.getter(15, v9);
    swift_bridgeObjectRelease(a3);
    return v10;
  }
  return result;
}

BOOL sub_100280CD0(uint64_t a1)
{
  uint64_t v1;

  return sub_1007EA688(a1, *(_QWORD *)(v1 + 16));
}

void sub_100280CEC(unint64_t a1)
{
  uint64_t v1;

  sub_100278040(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(char **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

void sub_100280D20()
{
  uint64_t v0;

  sub_1002781CC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100280D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD0D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100280D74(unint64_t a1)
{
  uint64_t v1;

  sub_100277E00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

void sub_100280DB0()
{
  uint64_t v0;

  sub_100277FA8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100280DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCE758);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100280E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  swift_bridgeObjectRetain(a2);
  result = sub_100280E50(a1, a2);
  *(_BYTE *)(v2 + 16) = result;
  return result;
}

uint64_t sub_100280E50(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_100B59608, a1, a2, &unk_100BC2888);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x21)
    return 33;
  else
    return v3;
}

uint64_t type metadata accessor for LegacyPerformanceTestManager()
{
  return objc_opt_self(_TtC7Weather28LegacyPerformanceTestManager);
}

uint64_t getEnumTagSinglePayload for LegacyPerformanceTest(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE0)
  {
    if (a2 + 32 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 32) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 33;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x21;
  v5 = v6 - 33;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyPerformanceTest(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 32 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 32) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDF)
    return ((uint64_t (*)(void))((char *)&loc_100280F94 + 4 * byte_10098D7E5[v4]))();
  *a1 = a2 + 32;
  return ((uint64_t (*)(void))((char *)sub_100280FC8 + 4 * byte_10098D7E0[v4]))();
}

uint64_t sub_100280FC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100280FD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100280FD8);
  return result;
}

uint64_t sub_100280FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100280FECLL);
  *(_BYTE *)result = a2 + 32;
  return result;
}

uint64_t sub_100280FF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100280FF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyPerformanceTest()
{
  return &type metadata for LegacyPerformanceTest;
}

uint64_t sub_100281014(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100281054 + 4 * byte_10098D7EA[a1]))(0x776569567473694CLL, 0xEE006C6C6F726353);
}

unint64_t sub_100281054()
{
  return 0xD000000000000012;
}

void sub_100281334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_10068ACCC(*a1, *a2);
}

void sub_100281340()
{
  unsigned __int8 *v0;

  sub_1004A74A0(*v0);
}

double sub_100281348(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D8790(a1, *v1);
}

void sub_100281350(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D9FEC(a1, *v1);
}

uint64_t sub_100281358@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100280E50(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100281384@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100281014(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1002813B0()
{
  unint64_t result;

  result = qword_100BD0E40;
  if (!qword_100BD0E40)
  {
    result = swift_getWitnessTable(&unk_10098D8F0, &type metadata for LegacyPerformanceTest);
    atomic_store(result, (unint64_t *)&qword_100BD0E40);
  }
  return result;
}

BOOL sub_1002813EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  _BOOL8 result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  BOOL v49;
  _QWORD v50[4];

  sub_10009985C();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = (unsigned __int8 *)(v6 - v5);
  v8 = sub_1000BA294(&qword_100BC4B48);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  v14 = __chkstk_darwin(v13);
  v16 = (unsigned __int8 *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)v50 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)v50 - v20;
  if ((static WeatherMapOverlayKind.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v22 = (int *)sub_100098B38();
  sub_10009C55C();
  if ((v23 & 1) == 0)
    return 0;
  sub_10094907C();
  if ((v24 & 1) == 0)
    return 0;
  v25 = v22[7];
  v26 = *(_QWORD *)(a1 + v25);
  v27 = *(_QWORD *)(a1 + v25 + 8);
  v28 = (_QWORD *)(a2 + v25);
  v29 = v28[1];
  v30 = v26 == *v28 && v27 == v29;
  if (v30
    || (v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, *v28, v29, 0), result = 0, (v31 & 1) != 0))
  {
    v33 = v22[8];
    v34 = *(_QWORD *)(a1 + v33);
    v35 = *(_QWORD *)(a1 + v33 + 8);
    v36 = *(_QWORD *)(a1 + v33 + 16);
    v37 = *(_QWORD *)(a1 + v33 + 24);
    v38 = (uint64_t *)(a2 + v33);
    v39 = *v38;
    v40 = v38[1];
    v41 = v38[2];
    v50[2] = v38[3];
    v50[3] = v37;
    v42 = v34 == v39 && v35 == v40;
    if (v42
      || (v50[0] = v41,
          v50[1] = v36,
          v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v39, v40, 0),
          result = 0,
          (v43 & 1) != 0))
    {
      sub_10009E970();
      if ((v44 & 1) == 0)
        return 0;
      sub_10009B6B0();
      if ((v45 & 1) == 0)
        return 0;
      sub_1000B4318();
      if (!v30)
        return 0;
      sub_1000B4318();
      if (!v30)
        return 0;
      sub_1000FF648();
      if ((v46 & 1) == 0)
        return 0;
      sub_1000B4318();
      if (!v30)
        return 0;
      sub_100283DD0(a1 + v22[13], (uint64_t)v21);
      sub_100283DD0(a2 + v22[13], (uint64_t)v19);
      v47 = v12 + *(int *)(v8 + 48);
      sub_100283DD0((uint64_t)v21, v12);
      sub_100283DD0((uint64_t)v19, v47);
      sub_100098750(v12);
      if (v30)
      {
        sub_1000DCC88((uint64_t)v19);
        sub_1000DCC88((uint64_t)v21);
        sub_100098750(v47);
        if (v30)
        {
          sub_1000FF448(v12, &qword_100BC3620);
          return 1;
        }
      }
      else
      {
        sub_100283DD0(v12, (uint64_t)v16);
        sub_100098750(v47);
        if (!v48)
        {
          sub_10007802C(v47, (uint64_t)v7, type metadata accessor for ContentStatusBanner);
          v49 = sub_10007BDA4(v16, v7);
          sub_10006BD5C((uint64_t)v7, type metadata accessor for ContentStatusBanner);
          sub_1000DCC88((uint64_t)v19);
          sub_1000DCC88((uint64_t)v21);
          sub_10006BD5C((uint64_t)v16, type metadata accessor for ContentStatusBanner);
          sub_1000DCC88(v12);
          return v49;
        }
        sub_1000FF448((uint64_t)v19, &qword_100BC3620);
        sub_1000FF448((uint64_t)v21, &qword_100BC3620);
        sub_10006BD5C((uint64_t)v16, type metadata accessor for ContentStatusBanner);
      }
      sub_1000FF448(v12, &qword_100BC4B48);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100281750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD v104[2];
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120[3];
  uint64_t v121;
  uint64_t v122;

  v118 = a2;
  v3 = type metadata accessor for Logger(0);
  v115 = *(_QWORD *)(v3 - 8);
  v116 = v3;
  __chkstk_darwin(v3);
  sub_1000986FC();
  v117 = v4;
  __chkstk_darwin(v5);
  v109 = (char *)v104 - v6;
  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v105 = v8;
  v9 = type metadata accessor for WeatherMapOverlayKind(0);
  v112 = *(_QWORD *)(v9 - 8);
  v113 = v9;
  __chkstk_darwin(v9);
  sub_100088FDC();
  v111 = v10;
  v108 = sub_10009E654();
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000986FC();
  v114 = v12;
  __chkstk_darwin(v13);
  v110 = (uint64_t)v104 - v14;
  v15 = type metadata accessor for Location.Identifier(0);
  v106 = *(_QWORD *)(v15 - 8);
  v107 = (_QWORD *)v15;
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  v104[1] = sub_1000BA294(&qword_100BD0F98);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v104[0] = v20;
  __chkstk_darwin(v21);
  v23 = (char *)v104 - v22;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100098728();
  v27 = (uint64_t *)(v26 - v25);
  v28 = (int *)type metadata accessor for ViewState(0);
  sub_1000B42B0();
  v30 = __chkstk_darwin(v29);
  v32 = (char *)v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v34 = (char *)v104 - v33;
  v35 = a1;
  v36 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_100080C0C(v36, (uint64_t)v104 - v33, v37);
  sub_100080C0C((uint64_t)&v34[v28[5]], (uint64_t)v27, type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload(v27) == 1)
  {
    v114 = v36;
    sub_10006BD5C((uint64_t)v27, type metadata accessor for ViewState.SecondaryViewState);
LABEL_12:
    v79 = v35;
    sub_10006BD5C((uint64_t)v34, type metadata accessor for ViewState);
    static Logger.map.getter(v80);
    sub_1000CD584(v35);
    v81 = v119;
    v82 = sub_1000CD584(v119);
    v83 = Logger.logObject.getter(v82);
    v85 = static os_log_type_t.error.getter(v83, v84);
    if (os_log_type_enabled(v83, v85))
    {
      v86 = sub_100098710(18);
      v87 = sub_100098710(32);
      v120[0] = v87;
      *(_DWORD *)v86 = 136446466;
      v88 = 0xED00006C61646F4DLL;
      v89 = 0xD000000000000012;
      if (*(_BYTE *)(v81 + 16) == 1)
        v89 = 0x776569566E69616DLL;
      else
        v88 = 0x80000001009F79C0;
      if (*(_BYTE *)(v81 + 16))
        v90 = v89;
      else
        v90 = 0x776569566E69616DLL;
      if (*(_BYTE *)(v81 + 16))
        v91 = v88;
      else
        v91 = 0xE800000000000000;
      v121 = sub_1000CE1C8(v90, v91, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      sub_1000C4684(v81);
      swift_bridgeObjectRelease(v91);
      *(_WORD *)(v86 + 12) = 1026;
      sub_100080C0C(v114, (uint64_t)v32, type metadata accessor for ViewState);
      v92 = *(_QWORD *)&v32[v28[9] + 8];
      sub_10006BD5C((uint64_t)v32, type metadata accessor for ViewState);
      sub_10009D330();
      LODWORD(v121) = v92 == 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, (char *)&v121 + 4);
      sub_10009D330();
      _os_log_impl((void *)&_mh_execute_header, v83, v85, "Unable to obtain locationViewerState for InteractiveMapInput.\npresentationContext=%{public}s\nisCompact=%{BOOL,public}d,", (uint8_t *)v86, 0x12u);
      swift_arrayDestroy(v87, 1);
      sub_1000986F0(v87);
      sub_1000986F0(v86);

      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v117, v116);
      v93 = v118;
    }
    else
    {

      sub_1000C4684(v81);
      sub_1000C4684(v35);
      sub_1000C51C8(v115);
      v93 = v118;
    }
    sub_100282100(v79, v93);
    goto LABEL_27;
  }
  v38 = *v27;
  if (*(_QWORD *)&v34[v28[9] + 8] == 1)
  {
    v39 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    objc_msgSend(v39, "userInterfaceIdiom");

    if ((v34[v28[7]] & 1) == 0)
    {
      v114 = v36;
      sub_10009D330();
      goto LABEL_12;
    }
  }
  sub_10006BD5C((uint64_t)v34, type metadata accessor for ViewState);
  v40 = v35;
  sub_1008C3EC4();
  v41 = type metadata accessor for PresentedLocation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v41) == 1)
  {
    sub_1000FF448((uint64_t)v23, &qword_100BD0F98);
    v42 = v109;
    static Logger.map.getter(v43);
    v44 = sub_1000CD584(v35);
    v45 = Logger.logObject.getter(v44);
    v47 = static os_log_type_t.error.getter(v45, v46);
    if (os_log_type_enabled(v45, v47))
    {
      v48 = sub_100098710(22);
      v49 = sub_100098710(32);
      v120[0] = v49;
      *(_DWORD *)v48 = 141558275;
      v121 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      *(_WORD *)(v48 + 12) = 2081;
      v50 = v104[0];
      sub_1008C3EC4();
      v51 = String.init<A>(describing:)(v50);
      v53 = v52;
      v121 = sub_1000CE1C8(v51, v52, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      sub_1000C4684(v35);
      swift_bridgeObjectRelease(v53);
      _os_log_impl((void *)&_mh_execute_header, v45, v47, "Failed to get selected location id from presentedLocation=%{private,mask.hash}s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy(v49, 1);
      sub_1000986F0(v49);
      sub_1000986F0(v48);

    }
    else
    {

      sub_1000C4684(v35);
    }
    (*(void (**)(char *, uint64_t))(v115 + 8))(v42, v116);
    v93 = v118;
    sub_100282100(v35, v118);
    sub_10009D330();
LABEL_27:
    v94 = (int *)sub_100098B38();
    return _s7Weather24LocationCompositionStateOwst_0(v93, 0, 1, (uint64_t)v94);
  }
  v116 = v38;
  sub_1003EA750(v18);
  sub_10006BD5C((uint64_t)v23, type metadata accessor for PresentedLocation);
  v115 = Location.Identifier.id.getter(v54);
  v109 = v55;
  (*(void (**)(uint64_t, _QWORD *))(v106 + 8))(v18, v107);
  v107 = sub_100282430(v35);
  v56 = v110;
  sub_100080C0C(v36 + v28[10], v110, type metadata accessor for WeatherMapPresentationState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v111, v56 + *(int *)(v108 + 24), v113);
  v57 = v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v58 = *(_QWORD *)(v57 + *(int *)(type metadata accessor for LocationsState(0) + 28));
  v59 = v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
  v60 = *(_QWORD *)(v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v117 = *(_QWORD *)(v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v61 = *(_QWORD *)(v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v62 = *(_QWORD *)(v59 + 24);
  v63 = v40 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v40 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v120, 0, 0);
  v64 = v40;
  v65 = *(unsigned __int8 *)(v63 + 2);
  v66 = *(unsigned __int8 *)(v63 + 1);
  sub_100080C0C(v56, v114, type metadata accessor for WeatherMapPresentationState);
  v67 = *(unsigned __int8 *)(v119 + 16);
  v68 = *(_QWORD *)(v64 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  v69 = *(_QWORD *)(v68 + 16);
  v108 = v60;
  if (v69)
  {
    LODWORD(v119) = v66;
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v68);
    v70 = sub_1000F9020(0, 1);
    if ((v71 & 1) != 0)
    {
      v72 = v70;
      v73 = *(_QWORD *)(v68 + 56);
      v74 = sub_10009985C();
      v60 = v105;
      sub_100080C0C(v73 + *(_QWORD *)(*(_QWORD *)(v74 - 8) + 72) * v72, v105, type metadata accessor for ContentStatusBanner);
      v75 = v60;
      v76 = 0;
      v77 = 1;
      v78 = v74;
    }
    else
    {
      sub_10009985C();
      v75 = sub_1000C52C0();
    }
    _s7Weather24LocationCompositionStateOwst_0(v75, v76, v77, v78);
    v93 = v118;
    v66 = v119;
  }
  else
  {
    sub_10009985C();
    v96 = sub_1000C52C0();
    _s7Weather24LocationCompositionStateOwst_0(v96, v97, v98, v99);
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v68);
    v93 = v118;
  }
  swift_release(v116);
  swift_bridgeObjectRelease(v68);
  sub_10006BD5C(v110, type metadata accessor for WeatherMapPresentationState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 32))(v93, v111, v113);
  v94 = (int *)sub_100098B38();
  *(_QWORD *)(v93 + v94[5]) = v107;
  *(_QWORD *)(v93 + v94[6]) = v58;
  v100 = (_QWORD *)(v93 + v94[7]);
  v101 = v109;
  *v100 = v115;
  v100[1] = v101;
  v102 = (uint64_t *)(v93 + v94[8]);
  v103 = v117;
  *v102 = v108;
  v102[1] = v103;
  v102[2] = v61;
  v102[3] = v62;
  *(_BYTE *)(v93 + v94[9]) = v65 == 4;
  *(_BYTE *)(v93 + v94[10]) = (v66 - 1) < 2;
  sub_10007802C(v114, v93 + v94[11], type metadata accessor for WeatherMapPresentationState);
  *(_BYTE *)(v93 + v94[12]) = v67 == 0;
  sub_100283E18(v60, v93 + v94[13]);
  return _s7Weather24LocationCompositionStateOwst_0(v93, 0, 1, (uint64_t)v94);
}

uint64_t sub_100282100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _WORD *v18;
  int *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t);
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];

  v35 = a1;
  v34 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v40 = *(_QWORD *)(v6 - 8);
  v7 = v40;
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
  v33 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
  v11 = type metadata accessor for WeatherMapPrecipitationOverlayKind(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104);
  v32(v9, v10, v11);
  v12 = enum case for WeatherMapOverlayKind.precipitation(_:);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v31(v9, enum case for WeatherMapOverlayKind.precipitation(_:), v6);
  type metadata accessor for LocationWeatherDataState(0);
  v39 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  type metadata accessor for LocationAvailableDataSetState(0);
  v38 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v13 = UUID.init()(v38);
  v14 = UUID.uuidString.getter(v13);
  v36 = v15;
  v37 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v34);
  v16 = v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v42, 0, 0);
  LODWORD(v35) = *(unsigned __int8 *)(v16 + 2) == 4;
  LODWORD(v34) = *(unsigned __int8 *)(v16 + 1) - 1 < 2;
  v17 = (int *)type metadata accessor for InteractiveMapInput(0);
  v18 = (_WORD *)(a2 + v17[11]);
  v19 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  v20 = (char *)v18 + v19[6];
  v32(v20, v33, v11);
  v31(v20, v12, v6);
  v21 = (uint64_t)v18 + v19[8];
  v22 = sub_1000BA294(&qword_100BC5FD0);
  _s7Weather24LocationCompositionStateOwst_0(v21, 3, 3, v22);
  *v18 = 16643;
  v23 = (_QWORD *)((char *)v18 + v19[7]);
  *v23 = 0;
  v23[1] = 0;
  *((_BYTE *)v18 + v19[9]) = 1;
  LOBYTE(v21) = *(_BYTE *)(v41 + 16) == 0;
  v24 = a2 + v17[13];
  v25 = type metadata accessor for ContentStatusBanner(0);
  _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v25);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(a2, v9, v6);
  *(_QWORD *)(a2 + v17[5]) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + v17[6]) = _swiftEmptyArrayStorage;
  v27 = (_QWORD *)(a2 + v17[7]);
  *v27 = 0;
  v27[1] = 0xE000000000000000;
  v28 = (uint64_t *)(a2 + v17[8]);
  v29 = v36;
  *v28 = v37;
  v28[1] = v29;
  v30 = v38;
  v28[2] = v39;
  v28[3] = v30;
  *(_BYTE *)(a2 + v17[9]) = v35;
  *(_BYTE *)(a2 + v17[10]) = v34;
  *(_BYTE *)(a2 + v17[12]) = v21;
  return result;
}

_QWORD *sub_100282430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t, __n128);
  uint64_t v36;

  v2 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Location(0);
  v36 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v34 = (char *)&v29 - v9;
  v10 = type metadata accessor for LocationModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v15 = *(_QWORD *)(v14 + *(int *)(type metadata accessor for LocationsState(0) + 24));
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
    return _swiftEmptyArrayStorage;
  v17 = v15 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v18 = *(_QWORD *)(v11 + 72);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v30 = v15;
  v19 = swift_bridgeObjectRetain(v15);
  v20 = _swiftEmptyArrayStorage;
  v32 = v11;
  v33 = v8;
  v31 = v18;
  do
  {
    v21 = v35(v13, v17, v10, v19);
    LocationModel.coalesceLocation.getter(v21);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
    {
      sub_1000FF448((uint64_t)v4, &qword_100BC35F8);
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v23 = v34;
      v22(v34, v4, v5);
      v22(v8, v23, v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      {
        sub_10009ADAC();
        v20 = v26;
      }
      v24 = v20[2];
      if (v24 >= v20[3] >> 1)
      {
        sub_10009ADAC();
        v20 = v27;
      }
      v20[2] = v24 + 1;
      v25 = (unint64_t)v20
          + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))
          + *(_QWORD *)(v36 + 72) * v24;
      v8 = v33;
      v22((char *)v25, v33, v5);
      v18 = v31;
      v11 = v32;
    }
    v17 += v18;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease(v30);
  return v20;
}

uint64_t type metadata accessor for InteractiveMapInputFactory()
{
  return objc_opt_self(_TtC7Weather26InteractiveMapInputFactory);
}

_QWORD *sub_1002826F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, char *, uint64_t, __n128);
  uint64_t v54;
  int *v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v52 = type metadata accessor for WeatherMapOverlayKind(0);
    v53 = *(void (**)(_BYTE *, char *, uint64_t, __n128))(*(_QWORD *)(v52 - 8) + 16);
    ((void (*)(_QWORD *, _QWORD *, uint64_t))v53)(a1, a2, v52);
    v7 = a3[5];
    v8 = a3[6];
    v9 = *(_QWORD *)((char *)a2 + v7);
    *(_QWORD *)((char *)a1 + v7) = v9;
    v54 = *(_QWORD *)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v54;
    v10 = a3[7];
    v11 = a3[8];
    v12 = (_QWORD *)((char *)a1 + v10);
    v13 = (_QWORD *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (_QWORD *)((char *)a1 + v11);
    v16 = (_QWORD *)((char *)a2 + v11);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v16[2];
    v51 = v16[3];
    v15[2] = v18;
    v15[3] = v51;
    v19 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    v20 = a3[11];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    *v21 = *((_BYTE *)a2 + v20);
    v21[1] = *((_BYTE *)a2 + v20 + 1);
    v23 = (int *)type metadata accessor for WeatherMapPresentationState(0);
    v24 = v23[6];
    v49 = &v22[v24];
    v50 = &v21[v24];
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    v25 = swift_bridgeObjectRetain(v51);
    v53(v50, v49, v52, v25);
    v26 = v23[7];
    v27 = &v21[v26];
    v28 = &v22[v26];
    v29 = *((_QWORD *)v28 + 1);
    *v27 = *(_QWORD *)v28;
    v27[1] = v29;
    v55 = v23;
    v30 = v23[8];
    v31 = &v21[v30];
    v32 = &v22[v30];
    swift_bridgeObjectRetain(v29);
    v33 = sub_1000BA294(&qword_100BC5FD0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 3, v33))
    {
      v34 = type metadata accessor for WeatherMapTrackingState(0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      *v31 = *v32;
      ((void (*)(char *, char *, uint64_t))v53)(&v31[*(int *)(v33 + 48)], &v32[*(int *)(v33 + 48)], v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 3, v33);
    }
    v21[v55[9]] = v22[v55[9]];
    v36 = a3[13];
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v37 = (_QWORD *)((char *)a1 + v36);
    v38 = (_QWORD *)((char *)a2 + v36);
    v39 = type metadata accessor for ContentStatusBanner(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      v40 = sub_1000BA294(&qword_100BC3620);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      *(_BYTE *)v37 = *(_BYTE *)v38;
      v41 = v38 + 1;
      v42 = v38[2];
      if (v42 >= 2)
      {
        v37[1] = *v41;
        v37[2] = v42;
        swift_bridgeObjectRetain(v42);
      }
      else
      {
        *(_OWORD *)(v37 + 1) = *(_OWORD *)v41;
      }
      v43 = *(int *)(v39 + 24);
      v44 = (char *)v37 + v43;
      v45 = (char *)v38 + v43;
      v46 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        v47 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
  }
  return a1;
}

uint64_t sub_100282A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for WeatherMapOverlayKind(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 44);
  v7 = type metadata accessor for WeatherMapPresentationState(0);
  v5(v6 + *(int *)(v7 + 24), v4);
  swift_bridgeObjectRelease();
  v8 = v6 + *(int *)(v7 + 32);
  v9 = sub_1000BA294(&qword_100BC5FD0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 3, v9))
    v5(v8 + *(int *)(v9 + 48), v4);
  v10 = a1 + *(int *)(a2 + 52);
  v11 = type metadata accessor for ContentStatusBanner(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v10, 1, v11);
  if (!(_DWORD)result)
  {
    if (*(_QWORD *)(v10 + 16) >= 2uLL)
      swift_bridgeObjectRelease();
    v13 = v10 + *(int *)(v11 + 24);
    v14 = type metadata accessor for Date(0);
    result = _s7Weather24LocationCompositionStateOwet_0(v13, 1, v14);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  return result;
}

uint64_t sub_100282BC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v55 = v6;
  v54(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v53 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v53;
  v10 = a3[7];
  v11 = a3[8];
  v12 = (_QWORD *)(a1 + v10);
  v13 = (_QWORD *)(a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)(a1 + v11);
  v16 = (_QWORD *)(a2 + v11);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v19 = v16[2];
  v18 = v16[3];
  v15[2] = v19;
  v15[3] = v18;
  v20 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[11];
  v56 = a1;
  v22 = (_BYTE *)(a1 + v21);
  v23 = a2 + v21;
  *v22 = *(_BYTE *)(a2 + v21);
  v22[1] = *(_BYTE *)(a2 + v21 + 1);
  v24 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  v25 = v24[6];
  v51 = v23 + v25;
  v52 = &v22[v25];
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v17);
  v26 = v19;
  v27 = v24;
  swift_bridgeObjectRetain(v26);
  v28 = swift_bridgeObjectRetain(v18);
  ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v54)(v52, v51, v55, v28);
  v29 = v24[7];
  v30 = &v22[v29];
  v31 = (_QWORD *)(v23 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = v24[8];
  v34 = &v22[v33];
  v35 = (_BYTE *)(v23 + v33);
  swift_bridgeObjectRetain(v32);
  v36 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 3, v36))
  {
    v37 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *v34 = *v35;
    v54((uint64_t)&v34[*(int *)(v36 + 48)], (uint64_t)&v35[*(int *)(v36 + 48)], v55);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 3, v36);
  }
  v22[v27[9]] = *(_BYTE *)(v23 + v27[9]);
  v38 = a3[13];
  *(_BYTE *)(v56 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v39 = (_QWORD *)(v56 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
  {
    v42 = sub_1000BA294(&qword_100BC3620);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    *(_BYTE *)v39 = *(_BYTE *)v40;
    v43 = v40 + 1;
    v44 = v40[2];
    if (v44 >= 2)
    {
      v39[1] = *v43;
      v39[2] = v44;
      swift_bridgeObjectRetain(v44);
    }
    else
    {
      *(_OWORD *)(v39 + 1) = *(_OWORD *)v43;
    }
    v45 = *(int *)(v41 + 24);
    v46 = (char *)v39 + v45;
    v47 = (char *)v40 + v45;
    v48 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
    {
      v49 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
  }
  return v56;
}

_BYTE *sub_100282ED8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  size_t v43;
  void *v44;
  const void *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, _BYTE *, uint64_t);

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v65 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = *(_QWORD *)&a2[v8];
  *(_QWORD *)&a1[v8] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = *(_QWORD *)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *v13 = *v14;
  v15 = v14[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *v17 = *(_QWORD *)&a2[v16];
  v19 = *(_QWORD *)&a2[v16 + 8];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v18 + 2);
  v17[2] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)v18 + 3);
  v17[3] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  v22 = a3[11];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *v23 = a2[v22];
  v23[1] = a2[v22 + 1];
  v25 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  v66 = v6;
  v67 = v7;
  v7(&v23[v25[6]], &v24[v25[6]], v6);
  v26 = v25[7];
  v27 = &v23[v26];
  v28 = &v24[v26];
  *v27 = *v28;
  v29 = v28[1];
  v27[1] = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease();
  v30 = v25[8];
  v31 = &v23[v30];
  v32 = &v24[v30];
  v33 = sub_1000BA294(&qword_100BC5FD0);
  v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 3, v33);
  v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 3, v33);
  if (v34)
  {
    if (!v35)
    {
      *v31 = *v32;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 16))(&v31[*(int *)(v33 + 48)], &v32[*(int *)(v33 + 48)], v66);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 3, v33);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v35)
  {
    sub_1000FF448((uint64_t)v31, &qword_100BC5FD0);
LABEL_6:
    v36 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  *v31 = *v32;
  v67(&v31[*(int *)(v33 + 48)], &v32[*(int *)(v33 + 48)], v66);
LABEL_7:
  v23[v25[9]] = v24[v25[9]];
  a1[a3[12]] = a2[a3[12]];
  v37 = a3[13];
  v38 = (uint64_t)&a1[v37];
  v39 = (uint64_t)&a2[v37];
  v40 = type metadata accessor for ContentStatusBanner(0);
  v41 = _s7Weather24LocationCompositionStateOwet_0(v38, 1, v40);
  v42 = _s7Weather24LocationCompositionStateOwet_0(v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      *(_BYTE *)v38 = *(_BYTE *)v39;
      if (*(_QWORD *)(v39 + 16) >= 2uLL)
      {
        *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
        v48 = *(_QWORD *)(v39 + 16);
        *(_QWORD *)(v38 + 16) = v48;
        swift_bridgeObjectRetain(v48);
      }
      else
      {
        *(_OWORD *)(v38 + 8) = *(_OWORD *)(v39 + 8);
      }
      v49 = *(int *)(v40 + 24);
      v50 = (void *)(v38 + v49);
      v51 = (const void *)(v39 + v49);
      v52 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        v53 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      }
      v54 = v38;
      v55 = v40;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v42)
  {
    sub_10006BD5C(v38, type metadata accessor for ContentStatusBanner);
LABEL_13:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v44 = (void *)v38;
    v45 = (const void *)v39;
    goto LABEL_14;
  }
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v46 = *(_QWORD *)(v39 + 16);
  if (*(_QWORD *)(v38 + 16) >= 2uLL)
  {
    if (v46 >= 2)
    {
      *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
      v57 = *(_QWORD *)(v39 + 16);
      *(_QWORD *)(v38 + 16) = v57;
      swift_bridgeObjectRetain(v57);
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    sub_1001A27B4(v38 + 8);
    goto LABEL_28;
  }
  if (v46 < 2)
  {
LABEL_28:
    *(_OWORD *)(v38 + 8) = *(_OWORD *)(v39 + 8);
    goto LABEL_30;
  }
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  v47 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 16) = v47;
  swift_bridgeObjectRetain(v47);
LABEL_30:
  v58 = *(int *)(v40 + 24);
  v59 = v38 + v58;
  v60 = v39 + v58;
  v61 = type metadata accessor for Date(0);
  v62 = _s7Weather24LocationCompositionStateOwet_0(v59, 1, v61);
  v63 = _s7Weather24LocationCompositionStateOwet_0(v60, 1, v61);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v54 = v59;
      v55 = v61;
LABEL_24:
      _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v55);
      return a1;
    }
  }
  else
  {
    v64 = *(_QWORD *)(v61 - 8);
    if (!v63)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 24))(v59, v60, v61);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v59, v61);
  }
  v43 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v44 = (void *)v59;
  v45 = (const void *)v60;
LABEL_14:
  memcpy(v44, v45, v43);
  return a1;
}

_BYTE *sub_100283400(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v13] = a2[v13];
  v14 = a3[11];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *v15 = a2[v14];
  v15[1] = a2[v14 + 1];
  v17 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  v34 = v7;
  v7(&v15[v17[6]], &v16[v17[6]], v6);
  *(_OWORD *)&v15[v17[7]] = *(_OWORD *)&v16[v17[7]];
  v18 = v17[8];
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 3, v21))
  {
    v22 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v34(&v19[*(int *)(v21 + 48)], &v20[*(int *)(v21 + 48)], v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 3, v21);
  }
  v15[v17[9]] = v16[v17[9]];
  v23 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    v27 = sub_1000BA294(&qword_100BC3620);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    *(_OWORD *)(v24 + 8) = *(_OWORD *)(v25 + 8);
    v28 = *(int *)(v26 + 24);
    v29 = &v24[v28];
    v30 = &v25[v28];
    v31 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      v32 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  return a1;
}

_BYTE *sub_10028368C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  void *v46;
  const void *v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_BYTE *, _BYTE *, uint64_t);

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v60 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 40);
  v7(a1, a2, v6);
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = &a1[v8];
  v10 = (uint64_t *)&a2[v8];
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)&a2[v13 + 8];
  *v14 = *(_QWORD *)&a2[v13];
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v14[2] = *((_QWORD *)v15 + 2);
  swift_bridgeObjectRelease();
  v14[3] = *((_QWORD *)v15 + 3);
  swift_bridgeObjectRelease();
  v17 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v17] = a2[v17];
  v18 = a3[11];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_WORD *)&a1[v18] = *(_WORD *)&a2[v18];
  v21 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  v61 = v6;
  v62 = v7;
  v7(&v19[v21[6]], &v20[v21[6]], v6);
  v22 = v21[7];
  v23 = &v19[v22];
  v24 = (uint64_t *)&v20[v22];
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = v21[8];
  v28 = &v19[v27];
  v29 = &v20[v27];
  v30 = sub_1000BA294(&qword_100BC5FD0);
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 3, v30);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 3, v30);
  if (v31)
  {
    if (!v32)
    {
      *v28 = *v29;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 32))(&v28[*(int *)(v30 + 48)], &v29[*(int *)(v30 + 48)], v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 3, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v32)
  {
    sub_1000FF448((uint64_t)v28, &qword_100BC5FD0);
LABEL_6:
    v33 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  *v28 = *v29;
  v62(&v28[*(int *)(v30 + 48)], &v29[*(int *)(v30 + 48)], v61);
LABEL_7:
  v19[v21[9]] = v20[v21[9]];
  v34 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  v35 = (uint64_t)&a1[v34];
  v36 = (uint64_t)&a2[v34];
  v37 = type metadata accessor for ContentStatusBanner(0);
  v38 = _s7Weather24LocationCompositionStateOwet_0(v35, 1, v37);
  v39 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      *(_BYTE *)v35 = *(_BYTE *)v36;
      *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
      v40 = *(int *)(v37 + 24);
      v41 = (void *)(v35 + v40);
      v42 = (const void *)(v36 + v40);
      v43 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
      {
        v44 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      }
      v50 = v35;
      v51 = v37;
      goto LABEL_22;
    }
    goto LABEL_13;
  }
  if (v39)
  {
    sub_10006BD5C(v35, type metadata accessor for ContentStatusBanner);
LABEL_13:
    v45 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v46 = (void *)v35;
    v47 = (const void *)v36;
    goto LABEL_14;
  }
  *(_BYTE *)v35 = *(_BYTE *)v36;
  v48 = (_QWORD *)(v36 + 8);
  if (*(_QWORD *)(v35 + 16) >= 2uLL)
  {
    v49 = *(_QWORD *)(v36 + 16);
    if (v49 >= 2)
    {
      *(_QWORD *)(v35 + 8) = *v48;
      *(_QWORD *)(v35 + 16) = v49;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_1001A27B4(v35 + 8);
  }
  *(_OWORD *)(v35 + 8) = *(_OWORD *)v48;
LABEL_25:
  v53 = *(int *)(v37 + 24);
  v54 = v35 + v53;
  v55 = v36 + v53;
  v56 = type metadata accessor for Date(0);
  v57 = _s7Weather24LocationCompositionStateOwet_0(v54, 1, v56);
  v58 = _s7Weather24LocationCompositionStateOwet_0(v55, 1, v56);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
      v50 = v54;
      v51 = v56;
LABEL_22:
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, v51);
      return a1;
    }
  }
  else
  {
    v59 = *(_QWORD *)(v56 - 8);
    if (!v58)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 40))(v54, v55, v56);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v54, v56);
  }
  v45 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v46 = (void *)v54;
  v47 = (const void *)v55;
LABEL_14:
  memcpy(v46, v47, v45);
  return a1;
}

uint64_t sub_100283AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100283B04);
}

uint64_t sub_100283B04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1000C2698();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    v11 = sub_10009E654();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v11;
      v12 = a3[11];
    }
    else
    {
      v7 = sub_1000BA294(&qword_100BC3620);
      v12 = a3[13];
    }
    v8 = v4 + v12;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + a3[5]);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100283BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100283BC4);
}

uint64_t sub_100283BC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1000C2698();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + a4[5]) = (v4 - 1);
      return result;
    }
    v11 = sub_10009E654();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[11];
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BC3620);
      v12 = a4[13];
    }
    v10 = v5 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t type metadata accessor for InteractiveMapInput(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD0F40;
  if (!qword_100BD0F40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InteractiveMapInput);
  return result;
}

void sub_100283CAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  v2 = type metadata accessor for WeatherMapOverlayKind(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[3] = &unk_10098D998;
    v8[4] = &unk_10098D9B0;
    v8[5] = &unk_10098D9C8;
    v8[6] = &unk_10098D9C8;
    v4 = type metadata accessor for WeatherMapPresentationState(319);
    if (v5 <= 0x3F)
    {
      v8[7] = *(_QWORD *)(v4 - 8) + 64;
      v8[8] = &unk_10098D9C8;
      sub_100283D7C(319);
      if (v7 <= 0x3F)
      {
        v8[9] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 10, v8, a1 + 16);
      }
    }
  }
}

void sub_100283D7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BC4B10)
  {
    v2 = type metadata accessor for ContentStatusBanner(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BC4B10);
  }
}

uint64_t sub_100283DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC3620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100283E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC3620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100283E60@<X0>(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  Swift::String v13;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v13._countAndFlagsBits = 0xD000000000000030;
  v13._object = (void *)0x80000001009F7A50;
  v3._object = (void *)0x80000001009F7A30;
  v3._countAndFlagsBits = 0xD000000000000014;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v13);

  *(Swift::String *)a1 = v5;
  strcpy((char *)(a1 + 16), "location.fill");
  *(_WORD *)(a1 + 30) = -4864;
  *(_BYTE *)(a1 + 32) = 0;
  v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  swift_storeEnumTagMultiPayload(a1, v6, 4);
  v7 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v8 = a1 + v7[5];
  v9 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v8, v9, 19);
  v10 = a1 + v7[7];
  v11 = type metadata accessor for LocationComponentAction(0);
  result = _s7Weather24LocationCompositionStateOwst_0(v10, 1, 1, v11);
  *(_WORD *)(a1 + v7[6]) = 258;
  return result;
}

uint64_t type metadata accessor for NotificationsResubscriptionComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather52NotificationsResubscriptionComponentViewModelFactory);
}

__int128 *initializeBufferWithCopyOfBuffer for NotificationsResubscriptionComponentView(__int128 *a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t destroy for NotificationsResubscriptionComponentView(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t *assignWithCopy for NotificationsResubscriptionComponentView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  return a1;
}

_QWORD *assignWithTake for NotificationsResubscriptionComponentView(_QWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *a2;
  return a1;
}

ValueMetadata *type metadata accessor for NotificationsResubscriptionComponentView()
{
  return &type metadata for NotificationsResubscriptionComponentView;
}

uint64_t sub_100284090(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAE934, 1);
}

uint64_t sub_1002840A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;

  v19 = sub_100945704();
  v7 = v6;
  v8 = sub_100945740();
  v10 = v9;
  v11 = sub_100945774();
  v13 = v12;
  v14 = sub_1000BA418((uint64_t)&unk_100B682E8);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = sub_1000BA418((uint64_t)&unk_100B68310);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = (_QWORD *)(a3 + *(int *)(type metadata accessor for TipView(0) + 32));
  *v16 = swift_getKeyPath(&unk_10098DB30);
  v17 = sub_1000BA294(&qword_100BC2908);
  swift_storeEnumTagMultiPayload(v16, v17, 0);
  *(_QWORD *)(a3 + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(a3 + 40) = 0x80000001009F19C0;
  *(_BYTE *)(a3 + 48) = 1;
  *(_QWORD *)(a3 + 56) = v19;
  *(_QWORD *)(a3 + 64) = v7;
  *(_QWORD *)(a3 + 72) = v8;
  *(_QWORD *)(a3 + 80) = v10;
  *(_QWORD *)(a3 + 88) = v11;
  *(_QWORD *)(a3 + 96) = v13;
  *(_BYTE *)a3 = 1;
  *(_QWORD *)(a3 + 8) = 0x4044000000000000;
  *(_QWORD *)(a3 + 16) = 0;
  *(_WORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 104) = sub_100284208;
  *(_QWORD *)(a3 + 112) = v14;
  *(_QWORD *)(a3 + 120) = sub_100284228;
  *(_QWORD *)(a3 + 128) = v15;
  return swift_unknownObjectRetain_n(a1, 2);
}

uint64_t sub_1002841DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1002840A0(*v1, v1[1], a1);
}

uint64_t sub_1002841E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100284208()
{
  return sub_1006BECE8();
}

void sub_100284228()
{
  sub_1006BE58C();
}

unint64_t sub_100284254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD1038;
  if (!qword_100BD1038)
  {
    v1 = type metadata accessor for TipView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TipView, v1);
    atomic_store(result, (unint64_t *)&qword_100BD1038);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SwipeDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002842E8 + 4 * byte_10098DB65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10028431C + 4 * byte_10098DB60[v4]))();
}

uint64_t sub_10028431C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100284324(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10028432CLL);
  return result;
}

uint64_t sub_100284338(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100284340);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100284344(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028434C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SwipeDirection()
{
  return &type metadata for SwipeDirection;
}

unint64_t sub_10028436C()
{
  unint64_t result;

  result = qword_100BD1040;
  if (!qword_100BD1040)
  {
    result = swift_getWitnessTable(&unk_10098DBC8, &type metadata for SwipeDirection);
    atomic_store(result, (unint64_t *)&qword_100BD1040);
  }
  return result;
}

uint64_t *sub_1002843A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for TimeZone(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11, v13);
    v14 = a3[6];
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[7];
    v19 = a3[8];
    v20 = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)v7 + v18) = v20;
    v21 = (uint64_t *)((char *)v7 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    swift_bridgeObjectRetain(v20);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v23))
    {
      v24 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      v25 = v23[5];
      v26 = (char *)v21 + v25;
      v27 = (char *)v22 + v25;
      v28 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *(_QWORD *)((char *)v21 + v23[6]) = *(_QWORD *)((char *)v22 + v23[6]);
      *(_QWORD *)((char *)v21 + v23[7]) = *(_QWORD *)((char *)v22 + v23[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
    }
    v29 = a3[9];
    v30 = (char *)v7 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for Date(0);
    v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    v33(v30, v31, v32);
    v33((char *)v7 + a3[10], (char *)a2 + a3[10], v32);
    v34 = a3[11];
    v35 = (char *)v7 + v34;
    v36 = (char *)a2 + v34;
    v37 = sub_1000BA294(&qword_100BCB238);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  }
  return v7;
}

uint64_t sub_1002845B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  v9 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
  {
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[9];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(a1 + a2[10], v13);
  v15 = a1 + a2[11];
  v16 = sub_1000BA294(&qword_100BCB238);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

char *sub_1002846E4(char *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TimeZone(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10, v12);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Locale(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = *(uint64_t *)((char *)a2 + v17);
  *(_QWORD *)&a1[v17] = v19;
  v20 = &a1[v18];
  v21 = (uint64_t *)((char *)a2 + v18);
  v22 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  swift_bridgeObjectRetain(v19);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, (uint64_t)v22))
  {
    v23 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v20 = *v21;
    v24 = v22[5];
    v25 = &v20[v24];
    v26 = (char *)v21 + v24;
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    *(_QWORD *)&v20[v22[6]] = *(_QWORD *)((char *)v21 + v22[6]);
    *(_QWORD *)&v20[v22[7]] = *(_QWORD *)((char *)v21 + v22[7]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
  }
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for Date(0);
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v32(v29, v30, v31);
  v32(&a1[a3[10]], (char *)a2 + a3[10], v31);
  v33 = a3[11];
  v34 = &a1[v33];
  v35 = (char *)a2 + v33;
  v36 = sub_1000BA294(&qword_100BCB238);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  return a1;
}

char *sub_1002848C4(char *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  int *v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Locale(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(uint64_t *)((char *)a2 + v15);
  *(_QWORD *)&a1[v15] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = (uint64_t *)((char *)a2 + v17);
  v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, (uint64_t)v20);
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, (uint64_t)v20);
  if (!v21)
  {
    if (!v22)
    {
      *(_QWORD *)v18 = *v19;
      v38 = v20[5];
      v39 = &v18[v38];
      v40 = (char *)v19 + v38;
      v41 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
      *(_QWORD *)&v18[v20[6]] = *(_QWORD *)((char *)v19 + v20[6]);
      *(_QWORD *)&v18[v20[7]] = *(_QWORD *)((char *)v19 + v20[7]);
      goto LABEL_7;
    }
    sub_100284B28((uint64_t)v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v27 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v18 = *v19;
  v23 = v20[5];
  v24 = &v18[v23];
  v25 = (char *)v19 + v23;
  v26 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  *(_QWORD *)&v18[v20[6]] = *(_QWORD *)((char *)v19 + v20[6]);
  *(_QWORD *)&v18[v20[7]] = *(_QWORD *)((char *)v19 + v20[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
LABEL_7:
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for Date(0);
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 24);
  v32(v29, v30, v31);
  v32(&a1[a3[10]], (char *)a2 + a3[10], v31);
  v33 = a3[11];
  v34 = &a1[v33];
  v35 = (char *)a2 + v33;
  v36 = sub_1000BA294(&qword_100BCB238);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  return a1;
}

uint64_t sub_100284B28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100284B64(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for Locale(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    v18 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v19 = v17[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    *(_QWORD *)&v15[v17[6]] = *(_QWORD *)&v16[v17[6]];
    *(_QWORD *)&v15[v17[7]] = *(_QWORD *)&v16[v17[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for Date(0);
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v27(&a1[a3[10]], &a2[a3[10]], v26);
  v28 = a3[11];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_1000BA294(&qword_100BCB238);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

char *sub_100284D30(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for Locale(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v17);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (!v19)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v35 = v17[5];
      v36 = &v15[v35];
      v37 = &v16[v35];
      v38 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
      *(_QWORD *)&v15[v17[6]] = *(_QWORD *)&v16[v17[6]];
      *(_QWORD *)&v15[v17[7]] = *(_QWORD *)&v16[v17[7]];
      goto LABEL_7;
    }
    sub_100284B28((uint64_t)v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v24 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v20 = v17[5];
  v21 = &v15[v20];
  v22 = &v16[v20];
  v23 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  *(_QWORD *)&v15[v17[6]] = *(_QWORD *)&v16[v17[6]];
  *(_QWORD *)&v15[v17[7]] = *(_QWORD *)&v16[v17[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
LABEL_7:
  v25 = a3[9];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for Date(0);
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v29(&a1[a3[10]], &a2[a3[10]], v28);
  v30 = a3[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_1000BA294(&qword_100BCB238);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t sub_100284F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100284F90);
}

uint64_t sub_100284F90(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_100099928();
    sub_100088FF0();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      sub_1000988FC();
      sub_100088FF0();
      if (v11)
      {
        v9 = v12;
        v10 = a3[6];
      }
      else
      {
        sub_1000BA294(&qword_100BCB0D0);
        sub_100088FF0();
        if (v13)
        {
          v9 = v14;
          v10 = a3[8];
        }
        else
        {
          type metadata accessor for Date(0);
          sub_100088FF0();
          if (v15)
          {
            v9 = v16;
            v10 = a3[9];
          }
          else
          {
            v9 = sub_1000BA294(&qword_100BCB238);
            v10 = a3[11];
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_100285074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100285080);
}

_QWORD *sub_100285080(_QWORD *result, uint64_t a2, int a3, int *a4)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    sub_100099928();
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_1000988FC();
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[6];
      }
      else
      {
        sub_1000BA294(&qword_100BCB0D0);
        sub_10009D2E8();
        if (v12)
        {
          v8 = v13;
          v9 = a4[8];
        }
        else
        {
          type metadata accessor for Date(0);
          sub_10009D2E8();
          if (v14)
          {
            v8 = v15;
            v9 = a4[9];
          }
          else
          {
            v8 = sub_1000BA294(&qword_100BCB238);
            v9 = a4[11];
          }
        }
      }
    }
    return (_QWORD *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + v9, a2, a2, v8);
  }
  return result;
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartInput(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD10A0;
  if (!qword_100BD10A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TemperatureAveragesHeroChartInput);
  return result;
}

void sub_100285198(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v12[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = type metadata accessor for TimeZone(319);
  if (v3 <= 0x3F)
  {
    v12[1] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Locale(319);
    if (v5 <= 0x3F)
    {
      v12[2] = *(_QWORD *)(v4 - 8) + 64;
      v12[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_100158C7C(319, (unint64_t *)&qword_100BCF390, type metadata accessor for DetailHeroChartLollipopPosition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v12[4] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for Date(319);
        if (v9 <= 0x3F)
        {
          v13 = *(_QWORD *)(v8 - 8) + 64;
          v14 = v13;
          sub_100158C7C(319, (unint64_t *)&unk_100BD10B0, (uint64_t (*)(uint64_t))sub_100113B0C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Trend);
          if (v11 <= 0x3F)
          {
            v15 = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 8, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t sub_1002852B4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  int *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v37;

  v4 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  sub_10009D98C();
  __chkstk_darwin(v5);
  v7 = (double *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BCF3D0);
  sub_10009D98C();
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BCB0D0);
  sub_10009D98C();
  v13 = __chkstk_darwin(v12);
  v15 = (double *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v37 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v37 - v19;
  sub_100947FD4();
  if ((v21 & 1) == 0)
    goto LABEL_24;
  v22 = (int *)sub_1000CD670();
  if ((static TimeZone.== infix(_:_:)(a1 + v22[5], a2 + v22[5]) & 1) == 0)
    goto LABEL_24;
  if ((static Locale.== infix(_:_:)(a1 + v22[6], a2 + v22[6]) & 1) == 0)
    goto LABEL_24;
  sub_100949F74();
  if ((v23 & 1) == 0)
    goto LABEL_24;
  sub_100203470(a1 + v22[8], (uint64_t)v20);
  sub_100203470(a2 + v22[8], (uint64_t)v18);
  v24 = (uint64_t)&v11[*(int *)(v8 + 48)];
  sub_100203470((uint64_t)v20, (uint64_t)v11);
  sub_100203470((uint64_t)v18, v24);
  sub_1000BBCA0((uint64_t)v11);
  if (v30)
  {
    sub_100021A68((uint64_t)v18, &qword_100BCB0D0);
    sub_100021A68((uint64_t)v20, &qword_100BCB0D0);
    sub_1000BBCA0(v24);
    if (v30)
    {
      sub_100021A68((uint64_t)v11, &qword_100BCB0D0);
      goto LABEL_10;
    }
    goto LABEL_16;
  }
  sub_100203470((uint64_t)v11, (uint64_t)v15);
  sub_1000BBCA0(v24);
  if (v30)
  {
    sub_1000C26A8((uint64_t)v18);
    sub_1000C26A8((uint64_t)v20);
    sub_1000CFC04();
LABEL_16:
    v31 = &qword_100BCF3D0;
    v32 = (uint64_t)v11;
LABEL_23:
    sub_100021A68(v32, v31);
LABEL_24:
    v29 = 0;
    return v29 & 1;
  }
  sub_1002605D8(v24, (uint64_t)v7);
  if (*v15 != *v7
    || (static Date.== infix(_:_:)((char *)v15 + v4[5], (char *)v7 + v4[5]) & 1) == 0
    || *(double *)((char *)v15 + v4[6]) != *(double *)((char *)v7 + v4[6]))
  {
    sub_100284B28((uint64_t)v7);
    sub_1000C26A8((uint64_t)v18);
    sub_1000C26A8((uint64_t)v20);
    sub_1000CFC04();
    v32 = (uint64_t)v11;
    v31 = &qword_100BCB0D0;
    goto LABEL_23;
  }
  v33 = v4[7];
  v34 = *(double *)((char *)v15 + v33);
  v35 = *(double *)((char *)v7 + v33);
  sub_100284B28((uint64_t)v7);
  sub_1000BBB5C((uint64_t)v18);
  sub_1000BBB5C((uint64_t)v20);
  sub_1000CFC04();
  sub_1000BBB5C((uint64_t)v11);
  if (v34 != v35)
    goto LABEL_24;
LABEL_10:
  if ((sub_1000B4438(v22[9]) & 1) == 0 || (sub_1000B4438(v22[10]) & 1) == 0)
    goto LABEL_24;
  v25 = v22[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_100113B0C();
  v29 = static Trend.== infix(_:_:)(v26, v27, v28);
  return v29 & 1;
}

uint64_t sub_1002855FC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  void (*v84)(uint64_t *, uint64_t, double);
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  int *v92;
  uint64_t *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  void (*v98)(uint64_t *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(_QWORD, uint64_t, uint64_t);
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  uint64_t v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void (*v115)(uint64_t *, uint64_t);
  uint64_t v116;
  uint64_t v118;
  void (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t *v150;
  char *v151;
  uint64_t v152;
  char v153[8];
  _QWORD v154[2];
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char v159[8];
  char v160[8];
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;

  v125 = a6;
  v129 = a5;
  v132 = a3;
  v151 = a2;
  v152 = a1;
  v146 = a7;
  v10 = type metadata accessor for Location(0);
  sub_1000B43A4(v10, (uint64_t)&v162);
  v140 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v13);
  v128 = (char *)&v119 - v14;
  v15 = type metadata accessor for HourWeather(0);
  sub_1000B43A4(v15, (uint64_t)v153);
  v124 = v16;
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v18);
  sub_10009511C((uint64_t)&v119 - v19);
  sub_1000BA294(&qword_100BCB0D0);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v137 = v21;
  v22 = sub_1000988FC();
  sub_1000B43A4(v22, (uint64_t)v160);
  v136 = v23;
  sub_10009D98C();
  __chkstk_darwin(v24);
  sub_100088FDC();
  sub_10009511C(v25);
  v26 = sub_1000BA294(&qword_100BD10F8);
  sub_1000B43A4(v26, (uint64_t)&v156);
  v130 = v27;
  sub_10009D98C();
  __chkstk_darwin(v28);
  sub_100088FDC();
  sub_10009511C(v29);
  sub_1000BA294(&qword_100BD1100);
  sub_10009D98C();
  __chkstk_darwin(v30);
  sub_100088FDC();
  sub_10009511C(v31);
  v32 = sub_1000BA294(&qword_100BCB9F8);
  v33 = *(uint64_t **)(v32 - 8);
  v149 = v32;
  v150 = v33;
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v35);
  sub_1000BA30C();
  v37 = __chkstk_darwin(v36);
  v148 = (char *)&v119 - v38;
  __chkstk_darwin(v37);
  v147 = (char *)&v119 - v39;
  type metadata accessor for TimeState(0);
  sub_10009D98C();
  __chkstk_darwin(v40);
  v41 = sub_10008909C();
  v42 = type metadata accessor for Date(v41);
  v43 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v44);
  sub_1000BA30C();
  v46 = __chkstk_darwin(v45);
  v48 = (uint64_t *)((char *)&v119 - v47);
  __chkstk_darwin(v46);
  v50 = (char *)&v119 - v49;
  v51 = sub_100099928();
  v52 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v54 = (char *)&v119 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for Calendar(0);
  sub_1000B43A4(v55, (uint64_t)&v163);
  v143 = v56;
  sub_10009D98C();
  __chkstk_darwin(v57);
  sub_100099234();
  v142 = a4;
  Location.timeZone.getter(v58);
  static Calendar.currentCalendar(with:)(v54);
  v120 = v52;
  v59 = *(void (**)(char *, uint64_t))(v52 + 8);
  v133 = v54;
  v121 = v51;
  v59(v54, v51);
  sub_10012236C(v152 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v7);
  v144 = v43;
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
  v145 = v42;
  v119 = v60;
  v60(v50, v7, v42);
  Date.wc_addDays(_:calendar:)(1, v8);
  type metadata accessor for WeatherData(0);
  v61 = (uint64_t)v147;
  sub_1000CCA00();
  v155 = v8;
  v156 = v50;
  v151 = v50;
  v62 = v149;
  sub_10084AF74();
  v139 = v63;
  LOBYTE(v42) = v64;
  sub_1000B46B0(v61);
  v65 = (uint64_t)v148;
  sub_1000CCA00();
  v147 = v8;
  v154[0] = v8;
  v154[1] = v48;
  v150 = v48;
  sub_10084AF74();
  v67 = v66;
  LOBYTE(a4) = v42 | v68;
  sub_1000B46B0(v65);
  if ((a4 & 1) != 0)
    goto LABEL_11;
  v69 = v139 - 1;
  if (__OFSUB__(v139, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v69 < 0)
  {
LABEL_11:
    if (qword_100BC2470 != -1)
      swift_once(&qword_100BC2470, sub_1006F38C8);
    v102 = type metadata accessor for Logger(0);
    sub_1000AECD4(v102, (uint64_t)qword_100CAF138);
    sub_1000D1D40();
    v104 = &v161;
    goto LABEL_14;
  }
  v70 = v67 + 1;
  if (__OFADD__(v67, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1000CE578();
  sub_1000CCA00();
  v71 = sub_100286748();
  dispatch thunk of Collection.startIndex.getter(v62, v71);
  dispatch thunk of Collection.endIndex.getter(v62, v71);
  v72 = dispatch thunk of Collection.distance(from:to:)(&v157, &v158, v62, v71);
  sub_1000B46B0((uint64_t)v48);
  if (v70 >= v72)
    goto LABEL_11;
  if (__OFSUB__(v67, v139))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v67 - v139 < 13)
    goto LABEL_11;
  v73 = v138;
  sub_1000CCA00();
  if (v70 >= v69)
  {
    sub_1000CE578();
    sub_10028613C(v69, v67 + 1);
    sub_1000B46B0(v73);
    sub_1006ED29C(v48);
    v75 = v74;
    sub_100021A68((uint64_t)v48, &qword_100BD1100);
    sub_1000CE578();
    WeatherStatisticsModel.hourlyTemperatureStatistics.getter();
    v76 = v131;
    v77 = HourlyWeatherStatistics.hours.getter(v131);
    (*(void (**)(uint64_t *, uint64_t))(v130 + 8))(v48, v76);
    v78 = sub_1002861C0(v77, v75);
    swift_bridgeObjectRelease(v77);
    if (*(_QWORD *)(v75 + 16) == *(_QWORD *)(v78 + 16))
    {
      Location.timeZone.getter(v79);
      v80 = v152 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess(v152 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, &v157, 0, 0);
      v81 = type metadata accessor for EnvironmentState(0);
      sub_1000B3B68(v135, v80 + *(int *)(v81 + 28), *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v136 + 16));
      sub_100203470(v125, v137);
      sub_1000CCA00();
      sub_1000CE578();
      sub_10009D44C(v139);
      v82 = sub_1000B46B0(v73);
      v83 = HourWeather.date.getter(v82);
      v84 = *(void (**)(uint64_t *, uint64_t, double))(v124 + 8);
      v85 = v48;
      v86 = v127;
      v84(v85, v127, v83);
      v87 = v122;
      sub_1000CCA00();
      v88 = v126;
      sub_10009D44C(v67);
      v89 = sub_1000B46B0(v87);
      v90 = v123;
      v91 = HourWeather.date.getter(v89);
      v84(v88, v86, v91);
      v92 = (int *)sub_1000CD670();
      v93 = v146;
      v94 = (char *)v146 + v92[11];
      v95 = sub_1000BA294(&qword_100BCB238);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v94, v129, v95);
      *v93 = v75;
      sub_1000B3B68((uint64_t)v93 + v92[5], (uint64_t)v133, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v120 + 32));
      sub_1000B3B68((uint64_t)v93 + v92[6], v135, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v136 + 32));
      *(uint64_t *)((char *)v93 + v92[7]) = v78;
      sub_100260694(v137, (uint64_t)v93 + v92[8]);
      v96 = v145;
      v97 = v119;
      v119((char *)v93 + v92[9], v134, v145);
      v97((char *)v93 + v92[10], v90, v96);
      v98 = *(void (**)(uint64_t *, uint64_t))(v144 + 8);
      v98(v150, v96);
      v98((uint64_t *)v151, v96);
      sub_1000C468C();
      v99 = (uint64_t)v93;
      v100 = 0;
      v101 = (uint64_t)v92;
      return _s7Weather24LocationCompositionStateOwst_0(v99, v100, 1, v101);
    }
    swift_bridgeObjectRelease(v78);
    swift_release(v75);
    if (qword_100BC2470 == -1)
      goto LABEL_20;
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  swift_once(&qword_100BC2470, sub_1006F38C8);
LABEL_20:
  v118 = type metadata accessor for Logger(0);
  sub_1000AECD4(v118, (uint64_t)qword_100CAF138);
  sub_1000D1D40();
  v104 = v154;
LABEL_14:
  v105 = v141;
  v106 = v103(*(v104 - 32), v142, v141);
  v107 = Logger.logObject.getter(v106);
  v109 = static os_log_type_t.error.getter(v107, v108);
  if (os_log_type_enabled(v107, v109))
  {
    v110 = swift_slowAlloc(22, -1);
    v111 = swift_slowAlloc(32, -1);
    v157 = v111;
    *(_DWORD *)v110 = 141558275;
    v158 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, v159);
    *(_WORD *)(v110 + 12) = 2081;
    sub_1002084DC();
    v112 = dispatch thunk of CustomStringConvertible.description.getter(v105);
    v114 = v113;
    v158 = sub_1000CE1C8(v112, v113, &v157);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, v159);
    swift_bridgeObjectRelease(v114);
    sub_1000CD5D0();
    _os_log_impl((void *)&_mh_execute_header, v107, v109, "Not enough hourly data to create create detail chart; location=%{private,mask.hash}s",
      (uint8_t *)v110,
      0x16u);
    swift_arrayDestroy(v111, 1);
    sub_1000986F0(v111);
    sub_1000986F0(v110);
  }
  else
  {
    sub_1000CD5D0();
  }

  v115 = *(void (**)(uint64_t *, uint64_t))(v144 + 8);
  v116 = v145;
  v115(v150, v145);
  v115((uint64_t *)v151, v116);
  sub_1000C468C();
  v101 = sub_1000CD670();
  v99 = (uint64_t)v146;
  v100 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v99, v100, 1, v101);
}

uint64_t sub_100286040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  char v13;

  v6 = type metadata accessor for Calendar.Component(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = sub_10008909C();
  v9 = type metadata accessor for Date(v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100099234();
  v12 = HourWeather.date.getter(v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(v7 + 104))(v3, enum case for Calendar.Component.day(_:), v6, v12);
  v13 = Calendar.isDate(_:equalTo:toGranularity:)(v4, a3, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v9);
  return v13 & 1;
}

uint64_t sub_10028613C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a2;
  v3 = sub_1000BA294(&qword_100BCB9F8);
  v4 = sub_100286748();
  dispatch thunk of Collection.index(after:)(&v8, &v6, v3, v4);
  v7 = a1;
  return dispatch thunk of Collection.subscript.getter(&v7, v3, v4);
}

uint64_t sub_1002861C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _BOOL8 v32;
  Swift::Int v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;

  v63 = type metadata accessor for HourTemperatureStatistics(0);
  v4 = *(_QWORD *)(v63 - 8);
  v5 = __chkstk_darwin(v63);
  v64 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v62 = (char *)&v51 - v7;
  v8 = sub_1000BA294(&qword_100BCCC50);
  __chkstk_darwin(v8);
  v60 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TimeZone(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v59 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Calendar(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v17 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v53 = v11;
    v54 = v10;
    v55 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v56 = v14;
    v57 = v13;
    v58 = a2;
    v19 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v20 = *(_QWORD *)(v4 + 72);
    v61 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v52 = a1;
    v21 = swift_bridgeObjectRetain(a1);
    v22 = &_swiftEmptyDictionarySingleton;
    v23 = v62;
    v24 = v63;
    while (1)
    {
      v25 = v61;
      v26 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v61)(v23, v19, v24, v21);
      v27 = HourTemperatureStatistics.hour.getter(v26);
      v25(v64, v23, v24);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
      v65 = v22;
      v29 = sub_1000BFD34(v27);
      v31 = v22[2];
      v32 = (v30 & 1) == 0;
      v33 = v31 + v32;
      if (__OFADD__(v31, v32))
        break;
      v34 = v29;
      v35 = v30;
      sub_1000BA294(&qword_100BD1108);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v33))
      {
        v36 = sub_1000BFD34(v27);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_19;
        v34 = v36;
      }
      v38 = v65;
      if ((v35 & 1) != 0)
      {
        v39 = v65[7] + v34 * v20;
        v24 = v63;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 40))(v39, v64, v63);
      }
      else
      {
        v65[(v34 >> 6) + 8] |= 1 << v34;
        *(_QWORD *)(v38[6] + 8 * v34) = v27;
        v40 = v38[7] + v34 * v20;
        v24 = v63;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v40, v64, v63);
        v41 = v38[2];
        v42 = __OFADD__(v41, 1);
        v43 = v41 + 1;
        if (v42)
          goto LABEL_17;
        v38[2] = v43;
      }
      v22 = v65;
      v44 = swift_bridgeObjectRelease(0x8000000000000000);
      v23 = v62;
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v62, v24, v44);
      v19 += v20;
      if (!--v18)
      {
        v16 = swift_bridgeObjectRelease(v52);
        v13 = v57;
        a2 = v58;
        v17 = v55;
        v14 = v56;
        v11 = v53;
        v10 = v54;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    v22 = &_swiftEmptyDictionarySingleton;
LABEL_14:
    v45 = (uint64_t)v60;
    TimeZone.init(secondsFromGMT:)(0, v16);
    if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v10) != 1)
    {
      v46 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v59, v45, v10);
      static Calendar.gregorianCalendar(with:)(v46);
      v47 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v46, v10);
      __chkstk_darwin(v47);
      *(&v51 - 2) = (uint64_t)v17;
      *(&v51 - 1) = (uint64_t)v22;
      sub_100688588((uint64_t)sub_10028678C, (uint64_t)(&v51 - 4), a2);
      v49 = v48;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      swift_bridgeObjectRelease(v22);
      return v49;
    }
  }
  __break(1u);
LABEL_19:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_100286594@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, _QWORD, uint64_t);
  uint64_t v15;
  double v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;

  v21[1] = a2;
  v21[2] = a1;
  v22 = a3;
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar.Component(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v21 - v12;
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v14((char *)v21 - v12, enum case for Calendar.Component.hour(_:), v7);
  v15 = ((uint64_t (*)(char *, _QWORD, uint64_t))v14)(v11, enum case for Calendar.Component.year(_:), v7);
  v16 = HourWeather.date.getter(v15);
  Calendar.ordinality(of:in:for:)(v13, v11, v6, v16);
  LOBYTE(v14) = v17;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  v18(v13, v7);
  if ((v14 & 1) == 0)
    return sub_1007D4BFC();
  v20 = type metadata accessor for HourTemperatureStatistics(0);
  return _s7Weather24LocationCompositionStateOwst_0(v22, 1, 1, v20);
}

uint64_t sub_10028672C(uint64_t a1)
{
  uint64_t v1;

  return sub_100286040(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

unint64_t sub_100286748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BCBA00;
  if (!qword_100BCBA00)
  {
    v1 = sub_100075EB0(&qword_100BCB9F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for Forecast<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BCBA00);
  }
  return result;
}

uint64_t sub_10028678C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100286594(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for TemperatureAveragesHeroChartInputFactory()
{
  return &type metadata for TemperatureAveragesHeroChartInputFactory;
}

uint64_t sub_1002867B4(uint64_t a1)
{
  return sub_10028672C(a1) & 1;
}

ValueMetadata *type metadata accessor for NotificationsResubscriptionListTip()
{
  return &type metadata for NotificationsResubscriptionListTip;
}

uint64_t sub_1002867DC()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD v3[2];

  v3[0] = sub_100945704();
  v3[1] = v0;
  v1 = sub_100114EF8();
  return Text.init<A>(_:)(v3, &type metadata for String, v1);
}

uint64_t sub_100286818()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD v3[2];

  v3[0] = sub_100945740();
  v3[1] = v0;
  v1 = sub_100114EF8();
  return Text.init<A>(_:)(v3, &type metadata for String, v1);
}

uint64_t sub_100286854()
{
  return Image.init(_:bundle:)(0xD00000000000001ELL, 0x80000001009F19C0, 0);
}

_QWORD *sub_100286874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = type metadata accessor for Tips.Action(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_1000BCED8();
  Tips.Action.init(id:perform:_:)(0xD000000000000014, 0x80000001009F1980, LocationSearchEntityFromStringResolver.init(), 0, sub_1002870A8, 0);
  v3 = sub_1000BA294(&qword_100BC5028);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v3, v5 + *(_QWORD *)(v2 + 72), v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_10097CA50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6 + v5, v0, v1);
  v7 = sub_1002870AC(v6);
  swift_setDeallocating(v6);
  sub_10050047C();
  return v7;
}

uint64_t sub_100286978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[2];

  v0 = type metadata accessor for Font.TextStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_100945774();
  v18[1] = v4;
  v5 = sub_100114EF8();
  v6 = Text.init<A>(_:)(v18, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  v13 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.body(_:), v0);
  static Font.Weight.medium.getter(v13);
  v14 = static Font.system(_:weight:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v15 = Text.font(_:)(v14, v6, v8, v12, v10);
  swift_release(v14);
  sub_1000D31B4(v6, v8, v12);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100286AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v33 = sub_1000BA294(&qword_100BC4FE8);
  v34 = *(_QWORD *)(v33 - 8);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100088FDC();
  v31 = v3;
  v29 = sub_1000BA294(&qword_100BC4FF0);
  v32 = *(_QWORD *)(v29 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v27 = v5;
  v6 = type metadata accessor for Tips.IgnoresDisplayFrequency(0);
  v26 = *(_QWORD *)(v6 - 8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  v11 = sub_1000BA294(&qword_100BC4FF8);
  v30 = *(_QWORD *)(v11 - 8);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = type metadata accessor for Tips.MaxDisplayCount(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_1000BCED8();
  v18 = sub_1000BA294(&qword_100BC5000);
  v28 = *(_QWORD *)(v18 - 8);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_10004A2E8();
  Tips.MaxDisplayCount.init(_:)(3);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v0, v16, &protocol witness table for Tips.MaxDisplayCount);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0, v16);
  Tips.IgnoresDisplayFrequency.init(_:)(1);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v10, v6, &protocol witness table for Tips.IgnoresDisplayFrequency);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v10, v6);
  v35 = v16;
  v36 = &protocol witness table for Tips.MaxDisplayCount;
  v20 = sub_10009885C((uint64_t)&v35, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>);
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)(v1, v18, v20);
  v35 = v18;
  v36 = (void *)v20;
  v21 = sub_10009885C((uint64_t)&v35, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>);
  v35 = v6;
  v36 = &protocol witness table for Tips.IgnoresDisplayFrequency;
  v22 = sub_10009885C((uint64_t)&v35, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>);
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)(v27, v15, v29, v11, v21, v22);
  v35 = v29;
  v36 = (void *)v11;
  v37 = v21;
  v38 = v22;
  v23 = sub_10009885C((uint64_t)&v35, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)>>);
  v24 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)(v31, v33, v23);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v31, v33);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v27, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v15, v11);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v1, v18);
  return v24;
}

uint64_t sub_100286D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1000BA294(&qword_100BC3130);
  sub_10004037C(v0, qword_100CAE5D8);
  sub_1000AECD4(v0, (uint64_t)qword_100CAE5D8);
  v5 = 0;
  v1 = sub_1000BA294(&qword_100BC5020);
  v2 = type metadata accessor for Tips.ParameterOption(0);
  v3 = swift_allocObject(v1, ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v2 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) | 7);
  *(_OWORD *)(v3 + 16) = xmmword_10097CA50;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for NotificationsResubscriptionListTip, 0x79616C707369642BLL, 0xEB00000000706954, &v5, v3, &type metadata for Bool, &type metadata for NotificationsResubscriptionListTip, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_100286E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v0 = sub_1000BA294(&qword_100BC3130);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  sub_100098728();
  v4 = v3 - v2;
  v5 = type metadata accessor for Tips.Rule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  if (qword_100BC1F28 != -1)
    swift_once(&qword_100BC1F28, sub_100286D90);
  v10 = sub_1000AECD4(v0, (uint64_t)qword_100CAE5D8);
  swift_beginAccess(v10, v14, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v10, v0);
  Tips.Rule.init<A>(_:_:)(v4, sub_1001AD5F8, 0);
  v11 = static Tips.RuleBuilder.buildExpression(_:)(v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  v12 = static Tips.RuleBuilder.buildPartialBlock(first:)(v11);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100286FF8()
{
  return sub_1002867DC();
}

uint64_t sub_10028702C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_100162D68();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_10028706C()
{
  unint64_t result;

  result = qword_100BD1110;
  if (!qword_100BD1110)
  {
    result = swift_getWitnessTable(&unk_10098DCD4, &type metadata for NotificationsResubscriptionListTip);
    atomic_store(result, (unint64_t *)&qword_100BD1110);
  }
  return result;
}

_QWORD *sub_1002870AC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v28[2];
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;

  v3 = type metadata accessor for Tips.Action(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_10004A2E8();
  v37 = sub_1000BA294(&qword_100BD1118);
  sub_10009D98C();
  __chkstk_darwin(v5);
  v36 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v35 = (_QWORD *)((char *)v28 - v8);
  __chkstk_darwin(v9);
  v11 = (_QWORD *)((char *)v28 - v10);
  v38 = _swiftEmptyArrayStorage;
  sub_100287314(0, 0, 0);
  v12 = v38;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = swift_bridgeObjectRetain(a1);
  v34 = v13;
  v28[1] = a1;
  if (v13)
  {
    v15 = 0;
    v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v30 = *(_QWORD *)(v4 + 72);
    v31 = v16;
    v17 = a1 + v16;
    v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
    v32 = v4;
    v33 = v3;
    do
    {
      v18 = v37;
      v19 = &v36[*(int *)(v37 + 48)];
      v29(v19, v17, v3, v14);
      v20 = (uint64_t)v35;
      v21 = (char *)v35 + *(int *)(v18 + 48);
      *v35 = v15;
      v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v22(v21, v19, v3);
      sub_100287330(v20, (uint64_t)v11);
      Tips.Action.with(index:)(*v11);
      sub_100287378((uint64_t)v11);
      v12 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
      {
        sub_100287314(0, v12[2] + 1, 1);
        v12 = v38;
      }
      v24 = v12[2];
      v23 = v12[3];
      if (v24 >= v23 >> 1)
      {
        sub_100287314(v23 > 1, v24 + 1, 1);
        v12 = v38;
      }
      ++v15;
      v12[2] = v24 + 1;
      v25 = v30;
      v26 = (char *)v12 + v31 + v24 * v30;
      v3 = v33;
      v22(v26, v1, v33);
      v38 = v12;
      v17 += v25;
      v4 = v32;
    }
    while (v34 != v15);
  }
  swift_bridgeObjectRelease();
  return v12;
}

size_t sub_100287314(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_1002873B8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100287330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD1118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100287378(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BD1118);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

size_t sub_1002873B8(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_1000BA294(&qword_100BC5028);
  v11 = *(_QWORD *)(type metadata accessor for Tips.Action(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_24;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Tips.Action(0) - 8) + 80);
  v18 = (v17 + 32) & ~v17;
  if ((v5 & 1) != 0)
  {
    sub_100287508(a4 + v18, v8, (unint64_t)v15 + v18);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy((char *)v15 + v18);
  }
  swift_release(a4);
  return (size_t)v15;
}

uint64_t sub_100287508(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  if (a3 < a1
    || (result = type metadata accessor for Tips.Action(0), a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    v7 = type metadata accessor for Tips.Action(0);
    return swift_arrayInitWithTakeFrontToBack(a3, a1, a2, v7);
  }
  else if (a3 != a1)
  {
    return swift_arrayInitWithTakeBackToFront(a3, a1, a2, result);
  }
  return result;
}

uint64_t sub_1002875A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_sunriseSunsetEventCalculator;
  v2 = type metadata accessor for SunriseSunsetEventCalculator(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0
                                                           + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100287608()
{
  return type metadata accessor for SunriseSunsetComponentViewModelFactory(0);
}

uint64_t sub_100287610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (a5 != a6)
    return 0;
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
}

uint64_t initializeBufferWithCopyOfBuffer for HumidityComponentViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for HumidityComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[2];
  v4 = a1[2];
  a1[2] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for HumidityComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[2];
  v4 = a1[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for HumidityComponentViewModel()
{
  return &type metadata for HumidityComponentViewModel;
}

uint64_t sub_100287700(uint64_t a1, uint64_t a2)
{
  return sub_100287610(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(double *)a1, *(double *)a2);
}

uint64_t destroy for ReportWeatherTracker(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 6);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 11);
}

uint64_t initializeWithCopy for ReportWeatherTracker(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t *, uint64_t, __n128);
  __n128 v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v13 = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = v13;
  v5 = a2[5];
  v14 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 24) = v14;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = a2 + 6;
  v7 = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 72) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t *, uint64_t, __n128))(v7 - 8);
  swift_retain(v4);
  swift_retain(v13);
  swift_retain(v14);
  v10 = swift_retain(v5);
  v9(a1 + 48, v6, v8, v10);
  v11 = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 112) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 88, (uint64_t)(a2 + 11));
  return a1;
}

uint64_t *assignWithCopy for ReportWeatherTracker(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain();
  swift_release(v9);
  sub_100094D04(a1 + 6, a2 + 6);
  sub_100094D04(a1 + 11, a2 + 11);
  return a1;
}

uint64_t *assignWithTake for ReportWeatherTracker(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_release(v5);
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  swift_release(v6);
  v7 = a1[5];
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  swift_release(v7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 6);
  v8 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v8;
  a1[10] = a2[10];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 11);
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  a1[15] = a2[15];
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportWeatherTracker(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherTracker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherTracker()
{
  return &type metadata for ReportWeatherTracker;
}

void sub_100287A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  os_log_type_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  os_log_type_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(uint64_t, _QWORD);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)(uint64_t, _QWORD);
  double v180;
  void (*v181)(uint64_t, uint64_t (*)(uint64_t));
  uint64_t v182;
  uint64_t v183;
  Swift::Int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t (*v197)(uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t (*v209)(uint64_t, uint64_t, _QWORD);
  uint64_t v210;
  uint64_t v211;
  uint64_t (*v212)(uint64_t, uint64_t, _QWORD);
  uint64_t v213;
  uint64_t v214;
  uint64_t (*v215)(uint64_t, uint64_t, _QWORD);
  uint64_t v216;
  uint64_t v217;
  uint64_t (*v218)(uint64_t, uint64_t, _QWORD);
  uint64_t v219;
  uint64_t v220;
  uint64_t (*v221)(uint64_t, uint64_t, _QWORD);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t (*v241)(uint64_t, uint64_t, _QWORD);
  uint64_t v242;
  uint64_t (*v243)(uint64_t, uint64_t, _QWORD);
  uint64_t v244;
  uint64_t (*v245)(uint64_t, uint64_t, _QWORD);
  uint64_t v246;
  void (*v247)(void);
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void (*v258)(uint64_t, uint64_t);
  uint64_t (*v259)(uint64_t, _QWORD);
  uint64_t (*v260)(uint64_t, _QWORD);
  uint64_t (*v261)(uint64_t, _QWORD);
  uint64_t (*v262)(uint64_t, _QWORD);
  void (*v263)(uint64_t, uint64_t);
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  os_log_type_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD v270[6];
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304[2];
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308[2];
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char v315[8];
  uint64_t v316;
  char v317[8];
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t (*v329)(uint64_t);
  uint64_t v330;
  void (*v331)(_QWORD, _QWORD);
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD __dst[25];
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;

  v271 = a1;
  v2 = type metadata accessor for UUID(0);
  sub_1000B43A4(v2, (uint64_t)&v310);
  v274 = v3;
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v6 = sub_1000987B4(v5);
  v7 = type metadata accessor for Session.Kind(v6);
  sub_1000B43A4(v7, (uint64_t)&v307);
  v276 = v8;
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100088FDC();
  sub_10009511C(v10);
  v11 = sub_1000BA294(&qword_100BD11E8);
  sub_1000C26B0(*(_QWORD *)(v11 - 8));
  __chkstk_darwin(v12);
  sub_10003BD18();
  sub_10009511C(v13);
  sub_1000C5C0C((uint64_t)v315);
  __chkstk_darwin(v14);
  sub_100079F7C();
  v16 = sub_1000987B4(v15);
  v17 = type metadata accessor for DescriptionFeedbackData(v16);
  sub_1000B43A4(v17, (uint64_t)&__dst[3]);
  sub_1000C26B0(v18);
  __chkstk_darwin(v19);
  sub_10003BD18();
  sub_10009511C(v20);
  sub_1000C5C0C((uint64_t)&v313);
  __chkstk_darwin(v21);
  sub_100079F7C();
  v23 = sub_1000987B4(v22);
  v24 = type metadata accessor for OtherConditionsFeedbackData(v23);
  sub_1000B43A4(v24, (uint64_t)&__dst[1]);
  sub_1000C26B0(v25);
  __chkstk_darwin(v26);
  sub_10003BD18();
  sub_10009511C(v27);
  sub_1000C5C0C((uint64_t)&v312);
  __chkstk_darwin(v28);
  sub_100079F7C();
  sub_10009511C(v29);
  v30 = sub_1000BA294(&qword_100BD11F0);
  sub_1000C26B0(*(_QWORD *)(v30 - 8));
  __chkstk_darwin(v31);
  sub_10003BD18();
  sub_10009511C(v32);
  sub_1000C5C0C((uint64_t)&v311);
  __chkstk_darwin(v33);
  sub_100079F7C();
  v35 = sub_1000987B4(v34);
  v36 = type metadata accessor for WindFeedbackData(v35);
  sub_1000B43A4(v36, (uint64_t)&v333);
  sub_1000C26B0(v37);
  __chkstk_darwin(v38);
  sub_10003BD18();
  sub_10009511C(v39);
  sub_1000C5C0C((uint64_t)&v309);
  __chkstk_darwin(v40);
  sub_100079F7C();
  v42 = sub_1000987B4(v41);
  v43 = type metadata accessor for TemperatureFeedbackData(v42);
  sub_1000B43A4(v43, (uint64_t)&v331);
  sub_1000C26B0(v44);
  __chkstk_darwin(v45);
  sub_10003BD18();
  sub_10009511C(v46);
  sub_1000C5C0C((uint64_t)v308);
  __chkstk_darwin(v47);
  sub_100079F7C();
  v49 = sub_1000987B4(v48);
  v50 = type metadata accessor for ConditionsFeedbackData(v49);
  sub_1000B43A4(v50, (uint64_t)&__dst[14]);
  sub_1000C26B0(v51);
  __chkstk_darwin(v52);
  sub_10003BD18();
  sub_10009511C(v53);
  sub_1000C5C0C((uint64_t)v304);
  __chkstk_darwin(v54);
  sub_100079F7C();
  v56 = sub_1000987B4(v55);
  v57 = type metadata accessor for ForecastAgeData(v56);
  sub_1000B43A4(v57, (uint64_t)&__dst[11]);
  sub_1000C26B0(v58);
  __chkstk_darwin(v59);
  sub_10003BD18();
  sub_10009511C(v60);
  sub_1000C5C0C((uint64_t)&v303);
  __chkstk_darwin(v61);
  sub_100079F7C();
  v63 = sub_1000987B4(v62);
  v64 = type metadata accessor for CurrentWeather(v63);
  sub_1000B43A4(v64, (uint64_t)&v320);
  v295 = v65;
  sub_10009D98C();
  __chkstk_darwin(v66);
  sub_100088FDC();
  v68 = sub_1000987B4(v67);
  v69 = type metadata accessor for Date(v68);
  sub_1000B43A4(v69, (uint64_t)&v336);
  v294 = v70;
  sub_10009D98C();
  __chkstk_darwin(v71);
  sub_1000986FC();
  v292 = v72;
  __chkstk_darwin(v73);
  sub_100079F7C();
  sub_10009511C(v74);
  sub_1000BA294(&qword_100BD11F8);
  sub_10009D98C();
  __chkstk_darwin(v75);
  sub_100088FDC();
  sub_10009511C(v76);
  v77 = sub_1000BA294(&qword_100BD1200);
  sub_1000C26B0(*(_QWORD *)(v77 - 8));
  __chkstk_darwin(v78);
  sub_10003BD18();
  sub_10009511C(v79);
  sub_1000C5C0C((uint64_t)&v301);
  __chkstk_darwin(v80);
  sub_100079F7C();
  v82 = sub_1000987B4(v81);
  v83 = type metadata accessor for LocationData(v82);
  sub_1000B43A4(v83, (uint64_t)&__dst[8]);
  sub_1000C26B0(v84);
  __chkstk_darwin(v85);
  sub_10003BD18();
  sub_10009511C(v86);
  sub_1000C5C0C((uint64_t)&v299);
  __chkstk_darwin(v87);
  sub_100079F7C();
  v89 = sub_1000987B4(v88);
  v90 = type metadata accessor for UserIdentity(v89);
  sub_1000B43A4(v90, (uint64_t)v317);
  v290 = v91;
  sub_10009D98C();
  __chkstk_darwin(v92);
  sub_100088FDC();
  v94 = sub_1000987B4(v93);
  v95 = type metadata accessor for PrivateUserData(v94);
  sub_1000B43A4(v95, (uint64_t)&__dst[6]);
  sub_1000C26B0(v96);
  __chkstk_darwin(v97);
  sub_10003BD18();
  sub_10009511C(v98);
  sub_1000C5C0C((uint64_t)&v298);
  __chkstk_darwin(v99);
  sub_100079F7C();
  v101 = sub_1000987B4(v100);
  v288 = type metadata accessor for WeatherData(v101);
  sub_10009D98C();
  __chkstk_darwin(v102);
  sub_100088FDC();
  sub_10009511C(v103);
  sub_1000BA294(&qword_100BC3380);
  sub_10009D98C();
  __chkstk_darwin(v104);
  sub_100098728();
  v107 = v106 - v105;
  v331 = (void (*)(_QWORD, _QWORD))type metadata accessor for LocationWeatherDataState(0);
  sub_10009D98C();
  __chkstk_darwin(v108);
  sub_1000986FC();
  v314 = v109;
  __chkstk_darwin(v110);
  sub_100079F7C();
  v112 = sub_1000987B4(v111);
  v113 = type metadata accessor for Location(v112);
  sub_1000B43A4(v113, (uint64_t)&v338);
  v333 = v114;
  sub_10009D98C();
  __chkstk_darwin(v115);
  sub_100088FDC();
  sub_10009511C(v116);
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_10009D98C();
  __chkstk_darwin(v117);
  sub_100098728();
  v120 = (void *)(v119 - v118);
  type metadata accessor for LocationsState(0);
  sub_10009D98C();
  __chkstk_darwin(v121);
  sub_100098728();
  v124 = v123 - v122;
  v125 = type metadata accessor for CurrentLocation(0);
  sub_10009D98C();
  __chkstk_darwin(v126);
  v128 = (char *)v270 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __chkstk_darwin(v129);
  v132 = (char *)v270 - v131;
  v133 = v1;
  (*(void (**)(_QWORD *__return_ptr, __n128))(v1 + 16))(__dst, v130);
  v134 = __dst[0];
  sub_100080C0C(__dst[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v124, type metadata accessor for LocationsState);
  swift_release(v134);
  sub_100037768(v124, (uint64_t)v120, (uint64_t *)&unk_100C0D170);
  sub_1000215BC(v124, type metadata accessor for LocationsState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v125) != 1)
  {
    sub_10007802C((uint64_t)v120, (uint64_t)v132, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    sub_100080C0C((uint64_t)v132, (uint64_t)v128, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    if (swift_getEnumCaseMultiPayload(v128))
    {
      v120 = &type metadata accessor for CurrentLocation;
      sub_1000215BC((uint64_t)v132, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      sub_1000215BC((uint64_t)v128, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      goto LABEL_5;
    }
    v270[1] = v132;
    v139 = v333;
    v140 = v332;
    v141 = sub_1000C6A24(v332, (uint64_t)v128, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v333 + 32));
    v142 = (_QWORD *)v133;
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(v133 + 16))(__dst, v141);
    v143 = __dst[0];
    v144 = *(_QWORD *)(__dst[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain(v144);
    swift_release(v143);
    v146 = Location.id.getter(v145);
    v148 = (void *)v147;
    sub_1000EED10(v146, v147, v144);
    sub_1000986E8();
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0(v107, 1, (uint64_t)v331) == 1)
    {
      sub_100021A14(v107, &qword_100BC3380);
      if (qword_100BC2448 != -1)
        swift_once(&qword_100BC2448, sub_1006F381C);
      v149 = sub_100098720();
      sub_1000AECD4(v149, (uint64_t)qword_100CAF0D0);
      sub_1000999A8();
      v150 = sub_100094F54();
      if (sub_1000B42F4(v150))
      {
        *(_WORD *)sub_10009D340() = 0;
        sub_10009D290((void *)&_mh_execute_header, v151, v152, "Failed to submit report weather data, no weather for the current location");
        sub_1000BD378();
      }

LABEL_25:
      v263 = *(void (**)(uint64_t, uint64_t))(v139 + 8);
      v264 = v140;
      v265 = v124;
      goto LABEL_26;
    }
    v153 = type metadata accessor for LocationWeatherDataState;
    v154 = v107;
    v155 = v330;
    sub_10007802C(v154, v330, type metadata accessor for LocationWeatherDataState);
    v156 = v314;
    sub_100080C0C(v155, v314, type metadata accessor for LocationWeatherDataState);
    if (swift_getEnumCaseMultiPayload(v156) == 1)
    {
      v157 = sub_1000BA294(&qword_100BC3358);
      v158 = v156 + *(int *)(v157 + 48);
      v159 = v156 + *(int *)(v157 + 64);
      v160 = v313;
      sub_10007802C(v156, v313, type metadata accessor for WeatherData);
      sub_1000215BC(v159, type metadata accessor for NewsDataModel);
      sub_1000215BC(v158, type metadata accessor for PreprocessedWeatherData);
      v161 = type metadata accessor for ReportWeatherDNUEvent(0);
      sub_100086DA4(&qword_100BD1208, (uint64_t (*)(uint64_t))&type metadata accessor for ReportWeatherDNUEvent, (uint64_t)&protocol conformance descriptor for ReportWeatherDNUEvent);
      Tracker.submitDiagnosticEvent<A>(_:onlyIfTimed:completion:)(v161, 0, 0, 0, v161, v162);
      v163 = v142[14];
      v164 = v142[15];
      sub_1000DB418(v142 + 11, v163);
      v165 = v289;
      v166 = dispatch thunk of IdentityServiceType.identity.getter(v163, v164);
      v167 = UserIdentity.reportWeatherIdentifier.getter(v166);
      v169 = v168;
      sub_1000988C4();
      sub_100094F10(v165, v170);
      PrivateUserData.init(privateUserID:)(v167, v169);
      v124 = (uint64_t)(v142 + 6);
      sub_1000DB820();
      sub_1004D9BC4();
      v171 = v160 + *(int *)(v288 + 24);
      v172 = type metadata accessor for WeatherDataModel(0);
      v173 = v291;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v291, v171, v172);
      _s7Weather24LocationCompositionStateOwst_0(v173, 0, 1, v172);
      v174 = sub_1008193A0(v173, v328);
      v175 = v327;
      v176 = Date.init()(v174);
      v177 = v293;
      v178 = WeatherDataModel.currentWeather.getter(v176);
      v155 = v292;
      CurrentWeather.date.getter(v178);
      sub_1000988C4();
      sub_100094F10(v177, v179);
      v180 = Date.timeIntervalSince(_:)(v155);
      v181 = *(void (**)(uint64_t, uint64_t (*)(uint64_t)))(v294 + 8);
      v153 = v329;
      v181(v155, v329);
      v181(v175, v153);
      if ((~*(_QWORD *)&v180 & 0x7FF0000000000000) != 0)
      {
        if (v180 > -2147483650.0)
        {
          v331 = (void (*)(_QWORD, _QWORD))v181;
          if (v180 >= 2147483650.0)
          {
            __break(1u);
            return;
          }
          ForecastAgeData.init(fetchDate:)((int)v180);
          sub_1000D0068();
          v182 = v271;
          memcpy(__dst, (const void *)(v271 + 16), 0xC2uLL);
          sub_1001F5330(__dst);
          sub_1004D9C1C((uint64_t)__dst);
          sub_1001F53E4(__dst);
          sub_1000DB820();
          sub_1004D9EC8(*(_BYTE *)(v182 + 232), v171, v319);
          sub_1000DB820();
          sub_1004DA080(*(unsigned __int8 *)(v182 + 256), v171, v320);
          sub_1000DB820();
          sub_1004DA440(*(unsigned __int8 *)(v182 + 296), v171, v321);
          sub_1000D0068();
          v183 = sub_1000C09B4();
          sub_1004DA678(v183);
          sub_1000986E8();
          sub_1000D0068();
          v184 = sub_1000C09B4();
          sub_1004DAC98(v184, v185, v186);
          sub_1000986E8();
          sub_1000DB820();
          sub_1004DB498(v171, v324);
          v187 = *(_QWORD *)(v142[1] + 32);
          swift_retain();
          v296 = v187;
          v314 = SessionManager.tracker.getter(v188);
          v189 = v276;
          v190 = v275;
          v191 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v276 + 104))(v275, enum case for Session.Kind.userEvents(_:), v277);
          v192 = v279;
          v193 = UUID.init()(v191);
          v194 = UUID.uuidString.getter(v193);
          v196 = v195;
          v197 = *(uint64_t (**)(uint64_t, uint64_t))(v274 + 8);
          v198 = v281;
          v199 = v197(v192, v281);
          v200 = v327;
          Date.init()(v199);
          SessionManager.start(for:identifier:startDate:timestampJitter:)(v190, v194, v196, v200, 0);
          swift_bridgeObjectRelease();
          sub_1000CD678();
          v201 = sub_100098B40(v190, *(uint64_t (**)(uint64_t, uint64_t))(v189 + 8));
          v202 = UUID.init()(v201);
          v203 = UUID.uuidString.getter(v202);
          v205 = v204;
          v197(v192, v198);
          Tracker.enterGroup(groupName:contentType:)(v203, v205, 4, 0);
          swift_bridgeObjectRelease();
          v206 = v301;
          sub_1000B3B68(v297, v325, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v301 + 16));
          sub_1000DAE78();
          v208 = v207;
          sub_1000B3B68(v298, v326, v209);
          sub_1000993EC(v328, &qword_100BD1200, (uint64_t)&v322);
          sub_1000DAE78();
          v211 = v210;
          sub_1000B3B68(v300, v316, v212);
          sub_1000DAE78();
          v214 = v213;
          sub_1000B3B68(v302, v318, v215);
          sub_1000DAE78();
          v217 = v216;
          sub_1000B3B68(v304[0], v320, v218);
          sub_1000DAE78();
          v220 = v219;
          sub_1000B3B68(v303, v319, v221);
          sub_1000993EC(v321, &qword_100BD11F0, (uint64_t)&v328);
          v222 = v310;
          sub_1000B3B68(v305, v322, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v310 + 16));
          v223 = v311;
          sub_1000B3B68(v308[0], v323, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v311 + 16));
          sub_1000993EC(v324, &qword_100BD11E8, (uint64_t)&v334);
          v224 = *(unsigned __int8 *)(v206 + 80);
          v225 = (v224 + 16) & ~v224;
          v226 = *(unsigned __int8 *)(v208 + 80);
          v227 = *(unsigned __int8 *)(v270[4] + 80);
          v293 = (v270[3] + v227 + ((v270[2] + v226 + v225) & ~v226)) & ~v227;
          v228 = *(unsigned __int8 *)(v211 + 80);
          v229 = *(unsigned __int8 *)(v214 + 80);
          v230 = *(unsigned __int8 *)(v217 + 80);
          v231 = *(unsigned __int8 *)(v220 + 80);
          v232 = (v280 + v231 + ((v273 + v230 + ((v272 + v229 + ((v270[5] + v228 + v293) & ~v228)) & ~v229)) & ~v230)) & ~v231;
          v233 = *(unsigned __int8 *)(v282 + 80);
          v294 = (v278 + v233 + v232) & ~v233;
          v234 = *(unsigned __int8 *)(v222 + 80);
          v295 = (v283 + v234 + v294) & ~v234;
          v235 = *(unsigned __int8 *)(v223 + 80);
          v236 = (v284 + v235 + v295) & ~v235;
          v237 = *(unsigned __int8 *)(v286 + 80);
          v238 = (v285 + v237 + v236) & ~v237;
          v239 = swift_allocObject(&unk_100B68670, v238 + v287, v224 | v226 | v228 | v227 | v229 | v230 | v231 | v233 | v234 | v235 | v237 | 7);
          sub_1000B3B68(v239 + v225, v297, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v206 + 32));
          sub_1000C6554();
          sub_1000B3B68(v240, v298, v241);
          sub_1000787D4(v299, v239 + v293, &qword_100BD1200);
          sub_1000C6554();
          sub_1000B3B68(v242, v300, v243);
          sub_1000C6554();
          sub_1000B3B68(v244, v302, v245);
          sub_1000C6554();
          v246 = v308[1];
          v247();
          v248 = v306;
          v249 = v307;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v306 + 32))(v239 + v232, v303, v307);
          sub_1000787D4(v304[1], v239 + v294, &qword_100BD11F0);
          v250 = v310;
          sub_1000C6A24(v239 + v295, v305, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v310 + 32));
          v251 = v239 + v236;
          v252 = v311;
          v253 = v312;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v311 + 32))(v251, v308[0], v312);
          sub_1000787D4(v309, v239 + v238, &qword_100BD11E8);
          v254 = v314;
          Tracker.transaction(block:)(sub_100289C9C, v239);
          swift_release(v239);
          v255 = v327;
          Date.init()(v256);
          v257 = v296;
          SessionManager.end(endDate:completion:)(v255, 0, 0);
          swift_release(v257);
          swift_release(v254);
          sub_1000CD678();
          sub_100021A14(v324, &qword_100BD11E8);
          (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v323, v253);
          sub_100098B40(v322, *(uint64_t (**)(uint64_t, uint64_t))(v250 + 8));
          sub_100021A14(v321, &qword_100BD11F0);
          sub_1000988C4();
          v258(v320, v246);
          (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v319, v249);
          sub_1000988C4();
          sub_100094F10(v318, v259);
          sub_1000988C4();
          sub_100094F10(v316, v260);
          sub_100021A14(v328, &qword_100BD1200);
          sub_1000988C4();
          sub_100094F10(v326, v261);
          sub_1000988C4();
          sub_100094F10(v325, v262);
          sub_1000B30B8(type metadata accessor for WeatherData, (uint64_t)&__dst[4]);
          sub_1000B30B8(type metadata accessor for LocationWeatherDataState, (uint64_t)&v337);
          sub_1000988C4();
          v264 = v332;
          v265 = v334;
LABEL_26:
          v263(v264, v265);
          sub_1000B30B8((uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation, (uint64_t)&v297);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      sub_1000215BC(v156, type metadata accessor for LocationWeatherDataState);
      if (qword_100BC2448 == -1)
      {
LABEL_22:
        v266 = sub_100098720();
        sub_1000AECD4(v266, (uint64_t)qword_100CAF0D0);
        sub_1000999A8();
        v267 = sub_100094F54();
        if (sub_1000B42F4(v267))
        {
          *(_WORD *)sub_10009D340() = 0;
          sub_10009D290((void *)&_mh_execute_header, v268, v269, "Failed to submit report weather data, no data for the current location's weather");
          sub_1000BD378();
        }

        sub_1000215BC(v155, type metadata accessor for LocationWeatherDataState);
        goto LABEL_25;
      }
    }
    swift_once(&qword_100BC2448, sub_1006F381C);
    goto LABEL_22;
  }
  sub_100021A14((uint64_t)v120, (uint64_t *)&unk_100C0D170);
LABEL_5:
  if (qword_100BC2448 != -1)
    swift_once(&qword_100BC2448, sub_1006F381C);
  v135 = sub_100098720();
  sub_1000AECD4(v135, (uint64_t)qword_100CAF0D0);
  sub_1000999A8();
  v136 = sub_100094F54();
  if (sub_1000B42F4(v136))
  {
    *(_WORD *)sub_10009D340() = 0;
    sub_10009D290((void *)&_mh_execute_header, v137, v138, "Failed to submit report weather data, no current location");
    sub_1000BD378();
  }

}

void sub_100288E38(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  unsigned int v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  void (*v145)(uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  _OWORD v151[2];

  v135 = a8;
  v133 = a7;
  v132 = a6;
  v131 = a5;
  v130 = a4;
  v129 = a3;
  v143 = a2;
  v139 = a11;
  v140 = a12;
  v138 = a10;
  v136 = a9;
  v13 = sub_1000BA294(&qword_100BD11E8);
  v14 = __chkstk_darwin(v13);
  v141 = (uint64_t)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for WeatherJSONData(0, v14);
  v124 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v123 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BD11F0);
  v18 = __chkstk_darwin(v17);
  v134 = (uint64_t)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for AQIFeedbackData(0, v18);
  v122 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v121 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BD1200);
  __chkstk_darwin(v21);
  v126 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for LocationConditionData(0);
  v128 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v120 = (char *)&v120 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BCDC68);
  v149 = v24;
  v25 = type metadata accessor for DataEventTrait(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = v28 + *(_QWORD *)(v26 + 72);
  v30 = v27 | 7;
  v31 = swift_allocObject(v24, v29, v27 | 7);
  v150 = xmmword_10097CA50;
  *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
  v32 = enum case for DataEventTrait.onlyOnce(_:);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 104);
  v33(v31 + v28, enum case for DataEventTrait.onlyOnce(_:), v25);
  v34 = type metadata accessor for PrivateUserData(0);
  sub_100086DA4(&qword_100BD1210, (uint64_t (*)(uint64_t))&type metadata accessor for PrivateUserData, (uint64_t)&protocol conformance descriptor for PrivateUserData);
  v144 = (unint64_t)"viewModelFactory";
  AccessTracker.push<A>(data:traits:file:line:)(v143, v31, 0xD000000000000066, 0x80000001009F7B10, 121, v34, v35);
  swift_bridgeObjectRelease();
  v143 = v29;
  v146 = v30;
  v36 = swift_allocObject(v149, v29, v30);
  *(_OWORD *)(v36 + 16) = v150;
  v37 = v28;
  v38 = v36 + v28;
  v39 = v32;
  v40 = v32;
  v148 = v25;
  v41 = v25;
  v42 = (uint64_t)v126;
  v43 = v33;
  v33(v38, v40, v41);
  v44 = type metadata accessor for LocationData(0);
  sub_100086DA4(&qword_100BD1218, (uint64_t (*)(uint64_t))&type metadata accessor for LocationData, (uint64_t)&protocol conformance descriptor for LocationData);
  AccessTracker.push<A>(data:traits:file:line:)(v129, v36, 0xD000000000000066, 0x80000001009F7B10, 122, v44, v45);
  v46 = v127;
  swift_bridgeObjectRelease();
  sub_100037768(v130, v42, &qword_100BD1200);
  if (_s7Weather24LocationCompositionStateOwet_0(v42, 1, v46) == 1)
  {
    sub_100021A14(v42, &qword_100BD1200);
    v47 = v37;
    v48 = v143;
    v49 = v146;
    v50 = v39;
    v51 = v43;
    v52 = v148;
  }
  else
  {
    v53 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v120, v42, v46);
    v54 = v146;
    v55 = swift_allocObject(v149, v143, v146);
    *(_OWORD *)(v55 + 16) = v150;
    v47 = v37;
    v56 = v55 + v37;
    v50 = v39;
    v57 = v39;
    v52 = v148;
    v43(v56, v57, v148);
    sub_100086DA4(&qword_100BD1268, (uint64_t (*)(uint64_t))&type metadata accessor for LocationConditionData, (uint64_t)&protocol conformance descriptor for LocationConditionData);
    AccessTracker.push<A>(data:traits:file:line:)(v53, v55, 0xD000000000000066, 0x80000001009F7B10, 124, v46, v58);
    v59 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v128 + 8))(v53, v46, v59);
    v48 = v143;
    v49 = v54;
    v51 = v43;
  }
  v125 = v50;
  v147 = v47;
  v60 = v48;
  v61 = swift_allocObject(v149, v48, v49);
  *(_OWORD *)(v61 + 16) = v150;
  v51(v61 + v47, v50, v52);
  v62 = type metadata accessor for ForecastAgeData(0);
  v145 = v51;
  v63 = v52;
  v64 = v62;
  sub_100086DA4(&qword_100BD1220, (uint64_t (*)(uint64_t))&type metadata accessor for ForecastAgeData, (uint64_t)&protocol conformance descriptor for ForecastAgeData);
  v143 = v144 | 0x8000000000000000;
  AccessTracker.push<A>(data:traits:file:line:)(v131, v61, 0xD000000000000066, v144 | 0x8000000000000000, 126, v64, v65);
  swift_bridgeObjectRelease();
  v66 = v149;
  v67 = v49;
  v68 = swift_allocObject(v149, v60, v49);
  *(_OWORD *)(v68 + 16) = v150;
  v69 = v125;
  v51(v68 + v47, v125, v63);
  v70 = type metadata accessor for ConditionsFeedbackData(0);
  sub_100086DA4(&qword_100BD1228, (uint64_t (*)(uint64_t))&type metadata accessor for ConditionsFeedbackData, (uint64_t)&protocol conformance descriptor for ConditionsFeedbackData);
  v71 = v143;
  AccessTracker.push<A>(data:traits:file:line:)(v132, v68, 0xD000000000000066, v143, 127, v70, v72);
  swift_bridgeObjectRelease();
  v73 = v60;
  v74 = swift_allocObject(v66, v60, v67);
  *(_OWORD *)(v74 + 16) = v150;
  v75 = v69;
  v76 = v69;
  v77 = v148;
  v78 = v145;
  v145(v74 + v47, v75, v148);
  v79 = type metadata accessor for WindFeedbackData(0);
  sub_100086DA4(&qword_100BD1230, (uint64_t (*)(uint64_t))&type metadata accessor for WindFeedbackData, (uint64_t)&protocol conformance descriptor for WindFeedbackData);
  AccessTracker.push<A>(data:traits:file:line:)(v133, v74, 0xD000000000000066, v71, 128, v79, v80);
  swift_bridgeObjectRelease();
  v81 = swift_allocObject(v149, v73, v67);
  *(_OWORD *)(v81 + 16) = v150;
  v82 = v76;
  v78(v81 + v147, v76, v77);
  v83 = type metadata accessor for TemperatureFeedbackData(0);
  sub_100086DA4(&qword_100BD1238, (uint64_t (*)(uint64_t))&type metadata accessor for TemperatureFeedbackData, (uint64_t)&protocol conformance descriptor for TemperatureFeedbackData);
  AccessTracker.push<A>(data:traits:file:line:)(v135, v81, 0xD000000000000066, v71, 129, v83, v84);
  swift_bridgeObjectRelease();
  v85 = v134;
  sub_100037768(v136, v134, &qword_100BD11F0);
  v86 = v137;
  v87 = v73;
  v88 = v82;
  if (_s7Weather24LocationCompositionStateOwet_0(v85, 1, v137) == 1)
  {
    sub_100021A14(v85, &qword_100BD11F0);
  }
  else
  {
    v89 = v122;
    v90 = v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 32))(v121, v85, v86);
    v91 = swift_allocObject(v149, v87, v146);
    *(_OWORD *)(v91 + 16) = v150;
    v78(v91 + v147, v82, v148);
    sub_100086DA4(&qword_100BD1260, (uint64_t (*)(uint64_t))&type metadata accessor for AQIFeedbackData, (uint64_t)&protocol conformance descriptor for AQIFeedbackData);
    AccessTracker.push<A>(data:traits:file:line:)(v90, v91, 0xD000000000000066, v143, 131, v86, v92);
    v93 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v89 + 8))(v90, v86, v93);
  }
  v94 = v149;
  v95 = v146;
  v96 = swift_allocObject(v149, v87, v146);
  *(_OWORD *)(v96 + 16) = v150;
  v97 = v147;
  v98 = v145;
  v145(v96 + v147, v88, v148);
  v99 = type metadata accessor for OtherConditionsFeedbackData(0);
  sub_100086DA4(&qword_100BD1240, (uint64_t (*)(uint64_t))&type metadata accessor for OtherConditionsFeedbackData, (uint64_t)&protocol conformance descriptor for OtherConditionsFeedbackData);
  v100 = v144 | 0x8000000000000000;
  AccessTracker.push<A>(data:traits:file:line:)(v138, v96, 0xD000000000000066, v144 | 0x8000000000000000, 133, v99, v101);
  swift_bridgeObjectRelease();
  v102 = swift_allocObject(v94, v87, v95);
  *(_OWORD *)(v102 + 16) = v150;
  v98(v102 + v97, v88, v148);
  v103 = type metadata accessor for DescriptionFeedbackData(0);
  sub_100086DA4(&qword_100BD1248, (uint64_t (*)(uint64_t))&type metadata accessor for DescriptionFeedbackData, (uint64_t)&protocol conformance descriptor for DescriptionFeedbackData);
  v144 = v100;
  AccessTracker.push<A>(data:traits:file:line:)(v139, v102, 0xD000000000000066, v100, 134, v103, v104);
  swift_bridgeObjectRelease();
  v105 = v141;
  sub_100037768(v140, v141, &qword_100BD11E8);
  v106 = v142;
  if (_s7Weather24LocationCompositionStateOwet_0(v105, 1, v142) == 1)
  {
    sub_100021A14(v105, &qword_100BD11E8);
  }
  else
  {
    v107 = v88;
    v108 = v124;
    v109 = v87;
    v110 = v147;
    v111 = v148;
    v112 = v149;
    v113 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 32))(v123, v105, v106);
    v114 = swift_allocObject(v112, v109, v146);
    *(_OWORD *)(v114 + 16) = v150;
    v145(v114 + v110, v107, v111);
    sub_100086DA4(&qword_100BD1258, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherJSONData, (uint64_t)&protocol conformance descriptor for WeatherJSONData);
    AccessTracker.push<A>(data:traits:file:line:)(v113, v114, 0xD000000000000066, v144, 137, v106, v115);
    v116 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v113, v106, v116);
  }
  v117 = type metadata accessor for ReportWeatherEvent(0);
  memset(v151, 0, sizeof(v151));
  sub_100086DA4(&qword_100BD1250, (uint64_t (*)(uint64_t))&type metadata accessor for ReportWeatherEvent, (uint64_t)&protocol conformance descriptor for ReportWeatherEvent);
  v119 = v118;
  swift_retain();
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v117, 0, v151, j___s12AppAnalytics13AccessTrackerC10leaveGroupyyF, a1, v117, v119);
  swift_release(a1);
  sub_100021A14((uint64_t)v151, &qword_100C0B800);
}

uint64_t sub_10028990C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v51 = type metadata accessor for PrivateUserData(0);
  v1 = *(_QWORD *)(v51 - 8);
  v64 = *(unsigned __int8 *)(v1 + 80);
  v2 = *(_QWORD *)(v1 + 64);
  v47 = type metadata accessor for LocationData(0);
  v3 = *(_QWORD *)(v47 - 8);
  v63 = *(unsigned __int8 *)(v3 + 80);
  v38 = (((v64 + 16) & ~v64) + v2 + v63) & ~v63;
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(sub_1000BA294(&qword_100BD1200) - 8);
  v62 = *(unsigned __int8 *)(v5 + 80);
  v37 = (v38 + v4 + v62) & ~v62;
  v6 = *(_QWORD *)(v5 + 64);
  v53 = type metadata accessor for ForecastAgeData(0);
  v7 = *(_QWORD *)(v53 - 8);
  v61 = *(unsigned __int8 *)(v7 + 80);
  v8 = (v37 + v6 + v61) & ~v61;
  v40 = v7;
  v9 = *(_QWORD *)(v7 + 64);
  v52 = type metadata accessor for ConditionsFeedbackData(0);
  v10 = *(_QWORD *)(v52 - 8);
  v50 = v8;
  v60 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v8 + v9 + v60) & ~v60;
  v12 = *(_QWORD *)(v10 + 64);
  v48 = type metadata accessor for WindFeedbackData(0);
  v13 = *(_QWORD *)(v48 - 8);
  v44 = v11;
  v59 = *(unsigned __int8 *)(v13 + 80);
  v14 = (v11 + v12 + v59) & ~v59;
  v15 = *(_QWORD *)(v13 + 64);
  v43 = type metadata accessor for TemperatureFeedbackData(0);
  v16 = *(_QWORD *)(v43 - 8);
  v41 = v14;
  v58 = *(unsigned __int8 *)(v16 + 80);
  v17 = (v14 + v15 + v58) & ~v58;
  v18 = *(_QWORD *)(v16 + 64);
  v19 = *(_QWORD *)(sub_1000BA294(&qword_100BD11F0) - 8);
  v39 = v17;
  v57 = *(unsigned __int8 *)(v19 + 80);
  v20 = (v17 + v18 + v57) & ~v57;
  v21 = *(_QWORD *)(v19 + 64);
  v49 = type metadata accessor for OtherConditionsFeedbackData(0);
  v22 = *(_QWORD *)(v49 - 8);
  v56 = *(unsigned __int8 *)(v22 + 80);
  v23 = (v20 + v21 + v56) & ~v56;
  v46 = v22;
  v24 = *(_QWORD *)(v22 + 64);
  v45 = type metadata accessor for DescriptionFeedbackData(0);
  v25 = *(_QWORD *)(v45 - 8);
  v42 = v23;
  v55 = *(unsigned __int8 *)(v25 + 80);
  v26 = (v23 + v24 + v55) & ~v55;
  v27 = *(_QWORD *)(v25 + 64);
  v28 = *(_QWORD *)(sub_1000BA294(&qword_100BD11E8) - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = v26 + v27 + v29;
  v54 = *(_QWORD *)(v28 + 64);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + ((v64 + 16) & ~v64), v51);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v38, v47);
  v31 = type metadata accessor for LocationConditionData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v37, 1, v31))
    sub_100098B40(v0 + v37, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8));
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v0 + v50, v53);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v44, v52);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v41, v48);
  v32.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v39, v43);
  v33 = type metadata accessor for AQIFeedbackData(0, v32);
  if (!sub_1000C1D58(v33))
    sub_1000CCA08();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v0 + v42, v49);
  v34.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v25 + 8))(v0 + v26, v45);
  v35 = type metadata accessor for WeatherJSONData(0, v34);
  if (!sub_1000C1D58(v35))
    sub_1000CCA08();
  return swift_deallocObject(v0, (v30 & ~v29) + v54, v64 | v63 | v61 | v62 | v60 | v59 | v58 | v57 | v56 | v55 | v29 | 7);
}

void sub_100289C9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  type metadata accessor for PrivateUserData(0);
  sub_1000C2160();
  v3 = (v2 + 16) & ~v2;
  v43 = v3;
  v5 = *(_QWORD *)(v4 + 64);
  type metadata accessor for LocationData(0);
  sub_1000C2160();
  v42 = (v3 + v5 + v6) & ~v6;
  v8 = *(_QWORD *)(v7 + 64);
  sub_1000BA294(&qword_100BD1200);
  sub_1000C2160();
  v10 = (v42 + v8 + v9) & ~v9;
  v12 = *(_QWORD *)(v11 + 64);
  type metadata accessor for ForecastAgeData(0);
  sub_1000C2160();
  v14 = (v10 + v12 + v13) & ~v13;
  v16 = *(_QWORD *)(v15 + 64);
  type metadata accessor for ConditionsFeedbackData(0);
  sub_1000C2160();
  v18 = (v14 + v16 + v17) & ~v17;
  v20 = *(_QWORD *)(v19 + 64);
  type metadata accessor for WindFeedbackData(0);
  sub_1000C2160();
  v22 = (v18 + v20 + v21) & ~v21;
  v24 = *(_QWORD *)(v23 + 64);
  type metadata accessor for TemperatureFeedbackData(0);
  sub_1000C2160();
  v26 = (v22 + v24 + v25) & ~v25;
  v28 = *(_QWORD *)(v27 + 64);
  sub_1000BA294(&qword_100BD11F0);
  sub_1000C2160();
  v30 = (v26 + v28 + v29) & ~v29;
  v32 = *(_QWORD *)(v31 + 64);
  type metadata accessor for OtherConditionsFeedbackData(0);
  sub_1000C2160();
  v34 = (v30 + v32 + v33) & ~v33;
  v36 = *(_QWORD *)(v35 + 64);
  type metadata accessor for DescriptionFeedbackData(0);
  sub_1000C2160();
  v38 = (v34 + v36 + v37) & ~v37;
  v40 = *(_QWORD *)(v39 + 64);
  v41 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BA294(&qword_100BD11E8) - 8) + 80);
  sub_100288E38(a1, v1 + v43, v1 + v42, v1 + v10, v1 + v14, v1 + v18, v1 + v22, v1 + v26, v1 + v30, v1 + v34, v1 + v38, v1 + ((v38 + v40 + v41) & ~v41));
}

uint64_t type metadata accessor for ConditionDetailLegendViewModelFactory()
{
  return objc_opt_self(_TtC7Weather37ConditionDetailLegendViewModelFactory);
}

uint64_t sub_100289E88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD v44[3];
  uint64_t v45;
  _QWORD *v46;
  _QWORD v47[3];
  uint64_t v48;
  _UNKNOWN **v49;
  _QWORD v50[5];
  _QWORD v51[3];
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC4448);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = result;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1000BA294(&qword_100BD13C8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (!v54)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v45 = v8;
  v46 = a2;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BD13B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (v52)
  {
    v15 = sub_100068EB4((uint64_t)v53, v54);
    v44[2] = v44;
    v16 = __chkstk_darwin(v15);
    v18 = (_QWORD *)((char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    v20 = sub_100068EB4((uint64_t)v51, v52);
    v44[1] = v44;
    v21 = __chkstk_darwin(v20);
    v23 = (_QWORD *)((char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
    v25 = *v18;
    v26 = *v23;
    v27 = type metadata accessor for ReportWeatherInteractor();
    v50[3] = v27;
    v50[4] = &off_100B87FA0;
    v50[0] = v25;
    v28 = type metadata accessor for ReportWeatherViewModelFactory();
    v48 = v28;
    v49 = &off_100B887A0;
    v47[0] = v26;
    v29 = type metadata accessor for ReportWeatherModule();
    v30 = (_QWORD *)swift_allocObject(v29, 104, 7);
    v31 = sub_100068EB4((uint64_t)v50, v27);
    v32 = __chkstk_darwin(v31);
    v34 = (_QWORD *)((char *)v44 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v35 + 16))(v34, v32);
    v36 = sub_100068EB4((uint64_t)v47, v48);
    v37 = __chkstk_darwin(v36);
    v39 = (_QWORD *)((char *)v44 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v40 + 16))(v39, v37);
    v41 = *v34;
    v42 = *v39;
    v30[6] = v27;
    v30[7] = &off_100B87FA0;
    v30[8] = v42;
    v30[11] = v28;
    v30[12] = &off_100B887A0;
    v30[2] = v45;
    v30[3] = v41;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v47);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v50);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v51);
    result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v53);
    v43 = v46;
    v46[3] = v29;
    v43[4] = &off_100B887C0;
    *v43 = v30;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_10028A1C8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  uint64_t v27;

  v0 = type metadata accessor for Scope(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = ProxyContainer.public.getter(v2);
  v6 = type metadata accessor for Tracker(0);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0xD000000000000013, 0x80000001009F7BF0, sub_10028A42C, 0, v6);
  v8 = swift_release(v5);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, enum case for Scope.containerSingleton(_:), v0, v8);
  v9 = Definition.inScope(_:)(v4);
  swift_release(v9);
  v10 = swift_release(v7);
  (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v10);
  v11 = type metadata accessor for SessionManager(0);
  v12 = RegistrationContainer.register<A>(_:name:factory:)(v11, 0xD000000000000012, 0x80000001009F7C10, sub_10028A4BC, 0, v11);
  v13 = Definition.thenConfigure(_:)(sub_10028A770, 0);
  swift_release(v13);
  swift_release(v12);
  v14 = type metadata accessor for SessionEventsAndDataCoordinator(0);
  v15 = RegistrationContainer.register<A>(_:name:factory:)(v14, 0xD000000000000012, 0x80000001009F7C10, sub_10028AA00, 0, v14);
  swift_release(v15);
  v16 = sub_1000BA294(&qword_100BD13B8);
  v17 = RegistrationContainer.register<A>(_:name:factory:)(v16, 0, 0, sub_10028ACCC, 0, v16);
  swift_release(v17);
  v18 = sub_1000BA294(&qword_100BD13C0);
  v19 = RegistrationContainer.register<A>(_:name:factory:)(v18, 0, 0, sub_10028AED8, 0, v18);
  swift_release(v19);
  v20 = sub_1000BA294(&qword_100BD13C8);
  v21 = RegistrationContainer.register<A>(_:name:factory:)(v20, 0, 0, sub_10028AFD0, 0, v20);
  swift_release(v21);
  v22 = sub_1000BA294(&qword_100BC4448);
  v23 = RegistrationContainer.register<A>(_:name:factory:)(v22, 0, 0, sub_10028B248, 0, v22);
  swift_release(v23);
  v24 = sub_1000BA294(&qword_100BD13D0);
  v25 = RegistrationContainer.register<A>(_:name:factory:)(v24, 0, 0, sub_10028B500, 0, v24);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

uint64_t sub_10028A42C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = a1[3];
  v2 = a1[4];
  sub_1000DB418(a1, v1);
  v3 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v3, v3, v1, v2);
  if (result)
  {
    v5 = result;
    v6 = Tracker.chain(name:identifier:)(0x655774726F706572, 0xED00007265687461, 0, 0);
    swift_release(v5);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10028A4BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];

  v2 = sub_1000BA294(&qword_100BD1420);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SessionManager.Options(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for SessionManagerConfiguration(0);
  v9 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD1428);
  v13 = swift_allocObject(v12, ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 2 * *(_QWORD *)(v6 + 72), *(unsigned __int8 *)(v6 + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_10097DA20;
  v14 = static SessionManager.Options.gracefulNoSessionEventSubmission.getter();
  static SessionManager.Options.gracefulEventCreation.getter(v14);
  v37[0] = v13;
  v15 = sub_10028B610();
  v16 = sub_1000BA294(&qword_100BD1438);
  v17 = sub_100121144();
  dispatch thunk of SetAlgebra.init<A>(_:)(v37, v16, v17, v5, v15);
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = type metadata accessor for FlushProcessor(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v18, v19);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v22 = result;
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = type metadata accessor for TimestampJitter(0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v25);
  if ((_DWORD)result == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v26 = a1[3];
  v27 = a1[4];
  sub_1000DB418(a1, v26);
  v28 = sub_1000BA294(&qword_100BD1448);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
  if (!v37[0])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)(v8, v22, v4, v37[0], v37[1]);
  v29 = a1[3];
  v30 = a1[4];
  sub_1000DB418(a1, v29);
  v31 = type metadata accessor for AppSessionManager(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v31, v31, v29, v30);
  if (result)
  {
    v32 = result;
    v33 = AppSessionManager.createSessionManager(with:)(v11);
    v34 = swift_release(v32);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v36, v34);
    return v33;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_10028A770(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;

  v3 = type metadata accessor for LoggingEventProcessorFormat(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1000BA294(&qword_100BD1410);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2[3];
  v11 = a2[4];
  sub_1000DB418(a2, v10);
  v12 = type metadata accessor for Configuration(0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v12) == 1)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = Configuration.isEnabled.getter();
  v14 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9, v12);
  if ((v13 & 1) == 0)
    return;
  v15 = SessionManager.processorManager.getter(v14);
  type metadata accessor for LoggingEventProcessor(0);
  *v6 = 11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LoggingEventProcessorFormat.json(_:), v3);
  v16 = LoggingEventProcessor.__allocating_init(logFormat:)(v6);
  ProcessorManager.add(eventProcessor:)(v17);
  swift_release(v15);
  swift_release(v16);
  v19 = SessionManager.processorManager.getter(v18);
  v20 = a2[3];
  v21 = a2[4];
  sub_1000DB418(a2, v20);
  v22 = type metadata accessor for Client(0);
  v23 = dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (!v23)
    goto LABEL_9;
  v24 = v23;
  v25 = a2[3];
  v26 = a2[4];
  sub_1000DB418(a2, v25);
  v27 = sub_1000BA294(&qword_100BD1418);
  v28 = dispatch thunk of ResolverType.resolve<A>(_:)(v27, v27, v25, v26);
  if (!v28)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v29 = v28;
  v30 = a2[3];
  v31 = a2[4];
  sub_1000DB418(a2, v30);
  v32 = type metadata accessor for UploadBatchEventConfig(0);
  v33 = dispatch thunk of ResolverType.resolve<A>(_:)(v32, v32, v30, v31);
  if (!v33)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v34 = v33;
  type metadata accessor for UploadBatchEventProcessor(0);
  v35 = UploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)(v24, v29, 0, v34);
  ProcessorManager.add(eventProcessor:)(v36);
  swift_release(v19);
  swift_release(v35);
}

void sub_10028AA00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;
  _BYTE v48[24];
  uint64_t v49;
  _BYTE v50[24];
  uint64_t v51;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = type metadata accessor for SessionManager(0);
  v5 = dispatch thunk of ResolverType.resolve<A>(_:name:)(v4, 0xD000000000000012, 0x80000001009F7C10, v4, v2, v3);
  if (!v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  v6 = v5;
  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = type metadata accessor for Client(0);
  v10 = dispatch thunk of ResolverType.resolve<A>(_:)(v9, v9, v7, v8);
  if (!v10)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v11 = v10;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BD13E8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!v51)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1000BA294(&qword_100BD13E0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v17, v17, v15, v16);
  if (!v49)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = sub_1000BA294(&qword_100BD13F0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v18, v19);
  if (!v47)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v21 = a1[3];
  v22 = a1[4];
  sub_1000DB418(a1, v21);
  v23 = sub_1000BA294(&qword_100BD13F8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v23, v23, v21, v22);
  if (!v45)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = a1[3];
  v25 = a1[4];
  sub_1000DB418(a1, v24);
  v26 = sub_1000BA294(&qword_100BD1400);
  dispatch thunk of ResolverType.resolve<A>(_:)(v26, v26, v24, v25);
  if (!v43)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v27 = a1[3];
  v28 = a1[4];
  sub_1000DB418(a1, v27);
  v29 = sub_1000BA294(&qword_100BCF678);
  dispatch thunk of ResolverType.resolve<A>(_:)(v29, v29, v27, v28);
  if (!v39)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v30 = a1[3];
  v31 = a1[4];
  sub_1000DB418(a1, v30);
  v32 = sub_1000BA294(&qword_100BD1408);
  dispatch thunk of ResolverType.resolve<A>(_:)(v32, v32, v30, v31);
  if (v36)
  {
    v33 = type metadata accessor for SessionEventsAndDataCoordinator(0);
    swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
    LOBYTE(v34) = 0;
    sub_10003B214(0, v6, v11, (uint64_t)v50, (uint64_t)v48, (uint64_t)v46, (uint64_t)v44, (uint64_t)&v41, (uint64_t)v38, (uint64_t)v35, v34, v35[0], v35[1], v35[2], v36, v37, v38[0], v38[1], v38[2],
      v39,
      v40,
      v41,
      v42);
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_10028ACCC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v6, 0xD000000000000013, 0x80000001009F7BF0, v6, v4, v5);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = result;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = type metadata accessor for SessionEventsAndDataCoordinator(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v11, 0xD000000000000012, 0x80000001009F7C10, v11, v9, v10);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v12 = result;
  v27 = v8;
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  v16 = v32;
  if (!v32)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v18 = v34;
  v17 = v35;
  v19 = v33;
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BD13D0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (!v31)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BD13E8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  if (v29)
  {
    a2[3] = &type metadata for ReportWeatherTracker;
    a2[4] = &off_100B68640;
    v26 = (_QWORD *)swift_allocObject(&unk_100B68720, 144, 7);
    *a2 = v26;
    v26[2] = v27;
    v26[3] = v12;
    v26[4] = v16;
    v26[5] = v19;
    v26[6] = v18;
    v26[7] = v17;
    sub_10003C800(&v30, (uint64_t)(v26 + 8));
    return sub_10003C800(&v28, (uint64_t)(v26 + 13));
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10028AED8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BD13E0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (v16)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1000DB418(a1, v8);
    v10 = sub_1000BA294(&qword_100BCF678);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
    if (v14)
    {
      v11 = type metadata accessor for ReportWeatherSubmissionTracker();
      v12 = swift_allocObject(v11, 96, 7);
      sub_10003C800(&v15, v12 + 56);
      result = sub_10003C800(&v13, v12 + 16);
      a2[3] = v11;
      a2[4] = (uint64_t)&off_100B72BD8;
      *a2 = v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10028AFD0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  ValueWitnessTable *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v35;
  if (!v35)
  {
    __break(1u);
    goto LABEL_6;
  }
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1000BA294(&qword_100BD13B8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (!v34)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v29 = v36;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BD13C0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (v32)
  {
    v15 = sub_100068EB4((uint64_t)v33, v34);
    v16 = __chkstk_darwin(v15);
    v18 = (char *)&v30[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
    v30[3] = &type metadata for ReportWeatherTracker;
    v30[4] = &off_100B68640;
    v30[0] = swift_allocObject(&unk_100B68720, 144, 7);
    memcpy((void *)(v30[0] + 16), v18, 0x80uLL);
    v20 = type metadata accessor for ReportWeatherInteractor();
    v21 = (_QWORD *)swift_allocObject(v20, 112, 7);
    v22 = sub_100068EB4((uint64_t)v30, (uint64_t)&type metadata for ReportWeatherTracker);
    __chkstk_darwin(v22);
    v24 = (char *)&v30[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    ((void (*)(uint64_t, uint64_t *))v25->initializeWithCopy)((uint64_t)v24, v26);
    v21[7] = &type metadata for ReportWeatherTracker;
    v21[8] = &off_100B68640;
    v27 = swift_allocObject(&unk_100B68720, 144, 7);
    v21[4] = v27;
    memcpy((void *)(v27 + 16), v24, 0x80uLL);
    v28 = v29;
    v21[2] = v8;
    v21[3] = v28;
    sub_10003C800(&v31, (uint64_t)(v21 + 9));
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
    result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v33);
    a2[3] = v20;
    a2[4] = &off_100B87FA0;
    *a2 = v21;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10028B248(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18[2];
  _QWORD v19[5];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v22;
  if (v22)
  {
    v8 = v24;
    v7 = v25;
    v9 = v23;
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BD13B0);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v21)
    {
      v13 = *sub_1000DB418(v20, v21);
      v19[3] = type metadata accessor for ReportWeatherViewModelFactory();
      v19[4] = &off_100B887A0;
      v19[0] = v13;
      sub_100043CA8((uint64_t)v19, (uint64_t)v18);
      v14 = swift_allocObject(&unk_100B686A8, 56, 7);
      sub_10003C800(v18, v14 + 16);
      swift_retain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v19);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v20);
      v15 = swift_allocObject(&unk_100B686D0, 32, 7);
      *(_QWORD *)(v15 + 16) = sub_10028B540;
      *(_QWORD *)(v15 + 24) = v14;
      v16 = swift_allocObject(&unk_100B686F8, 32, 7);
      *(_QWORD *)(v16 + 16) = sub_10028B56C;
      *(_QWORD *)(v16 + 24) = v15;
      v17 = sub_1000BA294(&qword_100BC4448);
      swift_allocObject(v17, 121, 7);
      return sub_1001832BC(v6, v9, v8, v7, sub_100182F48, 0, sub_10019CEF0, 0, sub_10028B574, v16);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10028B418@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  _OWORD v6[6];

  sub_1000DB418(a2, a2[3]);
  sub_100684258(a1, 1, v6);
  return sub_1001C4B3C(v6, a3);
}

double sub_10028B478@<D0>(void (*a1)(_OWORD *__return_ptr)@<X1>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[6];

  a1(v9);
  result = *(double *)v9;
  v4 = v9[1];
  v5 = v9[2];
  v6 = v9[3];
  v7 = v9[4];
  v8 = v9[5];
  *a2 = v9[0];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  a2[5] = v8;
  return result;
}

uint64_t sub_10028B4C0@<X0>(_QWORD *a1@<X0>, void (*a2)(_QWORD *__return_ptr, _QWORD)@<X1>, uint64_t a3@<X8>)
{
  _QWORD v5[12];

  a2(v5, *a1);
  return sub_10028B57C((uint64_t)v5, a3);
}

uint64_t sub_10028B500@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for ReportWeatherDataFactory, (uint64_t)&off_100B78608, a1);
}

double sub_10028B514()
{
  return sub_10028A1C8();
}

uint64_t sub_10028B51C()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

void *sub_10028B540@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;

  return sub_10028B418(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10028B548()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10028B56C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10028B478(*(void (**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_10028B574@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10028B4C0(a1, *(void (**)(_QWORD *__return_ptr, _QWORD))(v2 + 16), a2);
}

uint64_t sub_10028B57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD13D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028B5C4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 13);
  return swift_deallocObject(v0, 144, 7);
}

unint64_t sub_10028B610()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD1430;
  if (!qword_100BD1430)
  {
    v1 = type metadata accessor for SessionManager.Options(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SessionManager.Options, v1);
    atomic_store(result, (unint64_t *)&qword_100BD1430);
  }
  return result;
}

uint64_t *sub_10028B654(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = a3[9];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
    {
      v29 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v8((_QWORD *)((char *)v26 + v28[5]), (_QWORD *)((char *)v27 + v28[5]), v7);
      *(_QWORD *)((char *)v26 + v28[6]) = *(_QWORD *)((char *)v27 + v28[6]);
      *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)((char *)v27 + v28[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
    }
  }
  return a1;
}

uint64_t sub_10028B830(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16)(uint64_t, uint64_t);

  v4 = type metadata accessor for Date(0);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v16(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for WeatherStatisticsModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  v12 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  v14 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v13, 1, v14);
  if (!(_DWORD)result)
    return v16(v13 + *(int *)(v14 + 20), v4);
  return result;
}

char *sub_10028B964(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for WeatherStatisticsModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for Locale(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v27))
  {
    v28 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v7(&v25[v27[5]], &v26[v27[5]], v6);
    *(_QWORD *)&v25[v27[6]] = *(_QWORD *)&v26[v27[6]];
    *(_QWORD *)&v25[v27[7]] = *(_QWORD *)&v26[v27[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
  }
  return a1;
}

uint64_t sub_10028BB14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  int v29;
  uint64_t v30;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for WeatherStatisticsModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  LODWORD(v23) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (!(_DWORD)v23)
  {
    if (!v29)
    {
      *v26 = *v27;
      v8((uint64_t)v26 + v28[5], (uint64_t)v27 + v28[5], v6);
      *(_QWORD *)((char *)v26 + v28[6]) = *(_QWORD *)((char *)v27 + v28[6]);
      *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)((char *)v27 + v28[7]);
      return a1;
    }
    sub_100284B28((uint64_t)v26);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v30 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v26 = *v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v26 + v28[5], (char *)v27 + v28[5], v6);
  *(_QWORD *)((char *)v26 + v28[6]) = *(_QWORD *)((char *)v27 + v28[6]);
  *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)((char *)v27 + v28[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  return a1;
}

char *sub_10028BD24(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for WeatherStatisticsModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for Locale(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v27))
  {
    v28 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v7(&v25[v27[5]], &v26[v27[5]], v6);
    *(_QWORD *)&v25[v27[6]] = *(_QWORD *)&v26[v27[6]];
    *(_QWORD *)&v25[v27[7]] = *(_QWORD *)&v26[v27[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
  }
  return a1;
}

uint64_t sub_10028BED4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  int v29;
  uint64_t v30;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for WeatherStatisticsModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  LODWORD(v23) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (!(_DWORD)v23)
  {
    if (!v29)
    {
      *v26 = *v27;
      v8((uint64_t)v26 + v28[5], (uint64_t)v27 + v28[5], v6);
      *(_QWORD *)((char *)v26 + v28[6]) = *(_QWORD *)((char *)v27 + v28[6]);
      *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)((char *)v27 + v28[7]);
      return a1;
    }
    sub_100284B28((uint64_t)v26);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v30 = sub_1000BA294(&qword_100BCB0D0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v26 = *v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v26 + v28[5], (char *)v27 + v28[5], v6);
  *(_QWORD *)((char *)v26 + v28[6]) = *(_QWORD *)((char *)v27 + v28[6]);
  *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)((char *)v27 + v28[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  return a1;
}

uint64_t sub_10028C0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10028C0F0);
}

uint64_t sub_10028C0F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  sub_100098A00();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    type metadata accessor for WeatherStatisticsModel(0);
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      sub_1000BA294(&qword_100BCB130);
      sub_100088FF0();
      if (v12)
      {
        v7 = v13;
        v11 = a3[6];
      }
      else
      {
        type metadata accessor for TimeZone(0);
        sub_100088FF0();
        if (v14)
        {
          v7 = v15;
          v11 = a3[7];
        }
        else
        {
          type metadata accessor for Locale(0);
          sub_100088FF0();
          if (v16)
          {
            v7 = v17;
            v11 = a3[8];
          }
          else
          {
            v7 = sub_1000BA294(&qword_100BCB0D0);
            v11 = a3[9];
          }
        }
      }
    }
    v8 = v4 + v11;
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_10028C1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10028C1C8);
}

uint64_t sub_10028C1C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  sub_100098A00();
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    type metadata accessor for WeatherStatisticsModel(0);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1000BA294(&qword_100BCB130);
      sub_10009D2E8();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        type metadata accessor for TimeZone(0);
        sub_10009D2E8();
        if (v15)
        {
          v8 = v16;
          v12 = a4[7];
        }
        else
        {
          type metadata accessor for Locale(0);
          sub_10009D2E8();
          if (v17)
          {
            v8 = v18;
            v12 = a4[8];
          }
          else
          {
            v8 = sub_1000BA294(&qword_100BCB0D0);
            v12 = a4[9];
          }
        }
      }
    }
    v9 = v5 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v9, v4, v4, v8);
}

uint64_t type metadata accessor for PrecipitationAveragesHeroChartInput(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD14A8;
  if (!qword_100BD14A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrecipitationAveragesHeroChartInput);
  return result;
}

void sub_10028C2D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[6];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v14[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for WeatherStatisticsModel(319);
    if (v5 <= 0x3F)
    {
      v14[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10015B600(319);
      if (v7 <= 0x3F)
      {
        v14[2] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for TimeZone(319);
        if (v9 <= 0x3F)
        {
          v14[3] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for Locale(319);
          if (v11 <= 0x3F)
          {
            v14[4] = *(_QWORD *)(v10 - 8) + 64;
            sub_100127FCC(319);
            if (v13 <= 0x3F)
            {
              v14[5] = *(_QWORD *)(v12 - 8) + 64;
              swift_initStructMetadata(a1, 256, 6, v14, a1 + 16);
            }
          }
        }
      }
    }
  }
}

BOOL sub_10028C3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v35;
  char v36;
  uint64_t *v37;
  double *v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  double *v43;
  double *v44;
  char *v45;
  int *v46;
  char *v47;

  v4 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  v7 = (double *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BCF3D0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BCB0D0);
  sub_1000B42B0();
  v13 = __chkstk_darwin(v12);
  v15 = (double *)((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v42 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v42 - v19;
  if ((static Date.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v21 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
  if ((static WeatherStatisticsModel.== infix(_:_:)(a1 + v21[5], a2 + v21[5]) & 1) == 0)
    return 0;
  v44 = v15;
  v45 = v20;
  v43 = v7;
  v46 = (int *)v4;
  v47 = v11;
  v22 = v21[6];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for DayWeather(0);
  v26 = sub_10015BA54(&qword_100BD0C78, (uint64_t)&protocol conformance descriptor for DayWeather);
  v27 = sub_10015BA54(&qword_100BD0C80, (uint64_t)&protocol conformance descriptor for DayWeather);
  v28 = sub_10015BA54(&qword_100BD0C88, (uint64_t)&protocol conformance descriptor for DayWeather);
  if ((static Forecast.== infix(_:_:)(v23, v24, v25, v26, v27, v28) & 1) == 0)
    return 0;
  v29 = static TimeZone.== infix(_:_:)(a1 + v21[7], a2 + v21[7]);
  v30 = v46;
  v31 = (uint64_t)v47;
  v32 = (uint64_t)v45;
  if ((v29 & 1) == 0 || (static Locale.== infix(_:_:)(a1 + v21[8], a2 + v21[8]) & 1) == 0)
    return 0;
  sub_100203470(a1 + v21[9], v32);
  sub_100203470(a2 + v21[9], (uint64_t)v18);
  v33 = v31 + *(int *)(v8 + 48);
  sub_100203470(v32, v31);
  sub_100203470((uint64_t)v18, v33);
  sub_100098750(v31);
  if (v36)
  {
    sub_1000C26A8((uint64_t)v18);
    sub_1000C26A8(v32);
    sub_100098750(v33);
    if (v36)
    {
      sub_100021A68(v31, &qword_100BCB0D0);
      return 1;
    }
    v37 = &qword_100BCF3D0;
  }
  else
  {
    v35 = v44;
    sub_100203470(v31, (uint64_t)v44);
    sub_100098750(v33);
    if (v36)
    {
      v37 = &qword_100BCF3D0;
    }
    else
    {
      v38 = v43;
      sub_1002605D8(v33, (uint64_t)v43);
      if (*v35 == *v38
        && (static Date.== infix(_:_:)((char *)v35 + v30[5], (char *)v38 + v30[5]) & 1) != 0
        && *(double *)((char *)v35 + v30[6]) == *(double *)((char *)v38 + v30[6]))
      {
        v39 = v30[7];
        v40 = *(double *)((char *)v35 + v39);
        v41 = *(double *)((char *)v38 + v39);
        sub_100284B28((uint64_t)v38);
        sub_1000C26A8((uint64_t)v18);
        sub_1000C26A8(v32);
        sub_100284B28((uint64_t)v35);
        sub_1000C26A8(v31);
        return v40 == v41;
      }
      sub_100284B28((uint64_t)v38);
      v37 = &qword_100BCB0D0;
    }
    sub_1000C26A8((uint64_t)v18);
    sub_1000C26A8(v32);
    sub_100284B28((uint64_t)v35);
  }
  sub_100021A68(v31, v37);
  return 0;
}

ValueMetadata *type metadata accessor for PrecipitationAveragesHeroChartInputFactory()
{
  return &type metadata for PrecipitationAveragesHeroChartInputFactory;
}

void sub_10028C76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_1000878BC();
  sub_1000B42B0();
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v17 - v8;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_10009E540();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v18 = v16;
  swift_release(v15);
  sub_100098A1C(a1 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_map, v1);
  sub_1000C661C();
  sub_100098B50();
  _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v3);
  sub_100098A1C(a1 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_newsArticle, v1);
  sub_1000C661C();
  sub_100098B50();
  sub_100098A1C(a1 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_nextHourPrecipitation, v1);
  sub_1000C661C();
  sub_100098B50();
  sub_1001EC630(v18, v14, (uint64_t)v9, (uint64_t)v7);
  sub_100098640();
}

void sub_10028C8F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 *v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 *v60;
  __n128 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  _BYTE v107[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = sub_1000878BC();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_10009E540();
  v9 = a1;
  v10 = a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map, (uint64_t)v107);
  sub_10003773C(v10, v6, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7) == 1)
  {
    sub_100021A14(v6, &qword_100BC4A98);
    v11 = sub_1000BA294(&qword_100BCC750);
    v12 = swift_allocObject(v11, 248, 7);
    *(_OWORD *)(v12 + 16) = xmmword_10098E040;
    v13 = sub_1000BA294(&qword_100BCC758);
    v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = *(_QWORD *)(v8 + 72);
    v16 = v13;
    v17 = (__n128 *)sub_1000BA6B8(v13);
    v18 = sub_100099954(v17, (__n128)xmmword_10097CA50);
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v18 + v14);
    *(_QWORD *)(v12 + 32) = sub_1000B4580();
    *(_QWORD *)(v12 + 40) = v19;
    *(_QWORD *)(v12 + 48) = v20;
    v21 = sub_1000BA6B8(v16);
    *(_OWORD *)(v21 + 16) = v106;
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle, v21 + v14);
    *(_QWORD *)(v12 + 56) = sub_1000B4580();
    *(_QWORD *)(v12 + 64) = v22;
    *(_QWORD *)(v12 + 72) = v23;
    v24 = (__n128 *)sub_1000BA6B8(v16);
    sub_10009D458(v24);
    sub_10009F7F4(v25 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v26);
    *(_QWORD *)(v12 + 80) = sub_1000B4580();
    *(_QWORD *)(v12 + 88) = v27;
    *(_QWORD *)(v12 + 96) = v28;
    v29 = (__n128 *)sub_1000BA6B8(v16);
    sub_10009D458(v29);
    sub_10009F7F4(v30 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v31);
    *(_QWORD *)(v12 + 104) = sub_100080C44((uint64_t)v29);
    *(_QWORD *)(v12 + 112) = v32;
    *(_QWORD *)(v12 + 120) = v33;
    v34 = (__n128 *)sub_1000C2514(v16, v14 + 2 * v15);
    v35 = (char *)sub_100099954(v34, (__n128)xmmword_10097DA20) + v14;
    v36 = *(_QWORD *)(a1 + 16);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v35);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 128) = sub_1000B4580();
    *(_QWORD *)(v12 + 136) = v37;
    *(_QWORD *)(v12 + 144) = v38;
    v39 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v39);
    sub_100095B78(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v35, type metadata accessor for LocationComponentContainerViewModel);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 152) = sub_1000B4580();
    *(_QWORD *)(v12 + 160) = v40;
    *(_QWORD *)(v12 + 168) = v41;
    v42 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v42);
    sub_100098A1C(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v35);
    sub_100098A1C(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 176) = sub_1000B4580();
    *(_QWORD *)(v12 + 184) = v43;
    *(_QWORD *)(v12 + 192) = v44;
    v45 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v45);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v35);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 200) = sub_1000B4580();
    *(_QWORD *)(v12 + 208) = v46;
    *(_QWORD *)(v12 + 216) = v47;
    v48 = sub_1000BA6B8(v16);
    *(_OWORD *)(v48 + 16) = v106;
    v49 = *(_QWORD *)(a1 + 16);
    sub_10009D3BC(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v14);
    sub_10009D3BC(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v14 + v15);
    *(_QWORD *)(v12 + 224) = sub_100080C44(v48);
    *(_QWORD *)(v12 + 232) = v50;
    *(_QWORD *)(v12 + 240) = v51;
  }
  else
  {
    sub_10007C77C(v6, v1, type metadata accessor for LocationComponentContainerViewModel);
    v52 = sub_1000BA294(&qword_100BCC750);
    v53 = swift_allocObject(v52, 272, 7);
    *(_OWORD *)(v53 + 16) = xmmword_10097FA60;
    v54 = sub_1000BA294(&qword_100BCC758);
    v55 = *(_QWORD *)(v8 + 72);
    v56 = *(unsigned __int8 *)(v8 + 80);
    v57 = (v56 + 32) & ~v56;
    v105 = v1;
    v58 = v56 | 7;
    v59 = v54;
    v60 = (__n128 *)swift_allocObject(v54, v57 + v55, v56 | 7);
    v61 = sub_100099954(v60, (__n128)xmmword_10097CA50);
    sub_1000B4590(v9 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v61 + v57);
    *(_QWORD *)(v53 + 32) = sub_1000B4588();
    *(_QWORD *)(v53 + 40) = v62;
    *(_QWORD *)(v53 + 48) = v63;
    v64 = sub_1000BA5D8();
    *(_OWORD *)(v64 + 16) = v106;
    sub_1000B4590(v9 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle, v64 + v57);
    *(_QWORD *)(v53 + 56) = sub_1000B4588();
    *(_QWORD *)(v53 + 64) = v65;
    *(_QWORD *)(v53 + 72) = v66;
    v67 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v67);
    sub_1000B4590(v68 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v69);
    *(_QWORD *)(v53 + 80) = sub_1000B4588();
    *(_QWORD *)(v53 + 88) = v70;
    *(_QWORD *)(v53 + 96) = v71;
    v72 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v72);
    sub_1000B4590(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v74);
    *(_QWORD *)(v53 + 104) = sub_1000B4588();
    *(_QWORD *)(v53 + 112) = v75;
    *(_QWORD *)(v53 + 120) = v76;
    v77 = sub_1000BA5D8();
    *(_OWORD *)(v77 + 16) = v106;
    sub_1000B4590(v1, v77 + v57);
    *(_QWORD *)(v53 + 128) = sub_1000B4580();
    *(_QWORD *)(v53 + 136) = v78;
    *(_QWORD *)(v53 + 144) = v79;
    v80 = v9;
    v81 = (__n128 *)swift_allocObject(v59, v57 + 2 * v55, v58);
    v82 = (char *)sub_100099954(v81, (__n128)xmmword_10097DA20) + v57;
    v83 = *(_QWORD *)(v80 + 16);
    v103 = v80;
    sub_1000B4590(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v82);
    v104 = v55;
    sub_1000B4590(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 152) = sub_1000B4588();
    *(_QWORD *)(v53 + 160) = v84;
    *(_QWORD *)(v53 + 168) = v85;
    v86 = (__n128 *)sub_1000C2514(v59, v57 + 2 * v55);
    sub_1000C52D8(v86);
    v87 = *(_QWORD *)(v80 + 16);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v82);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 176) = sub_1000B4588();
    *(_QWORD *)(v53 + 184) = v88;
    *(_QWORD *)(v53 + 192) = v89;
    v90 = v57 + 2 * v55;
    v91 = (__n128 *)sub_1000C2514(v59, v90);
    sub_1000C52D8(v91);
    v92 = *(_QWORD *)(v103 + 16);
    sub_1000B4590(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v82);
    sub_100098A1C(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 200) = sub_1000B4588();
    *(_QWORD *)(v53 + 208) = v93;
    *(_QWORD *)(v53 + 216) = v94;
    v95 = (__n128 *)sub_1000C2514(v59, v90);
    sub_1000C52D8(v95);
    v96 = *(_QWORD *)(v103 + 16);
    sub_100095B78(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v82, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v82[v55], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v53 + 224) = sub_1000B4588();
    *(_QWORD *)(v53 + 232) = v97;
    *(_QWORD *)(v53 + 240) = v98;
    v99 = swift_allocObject(v59, v90, v58);
    *(_OWORD *)(v99 + 16) = v106;
    v100 = *(_QWORD *)(v103 + 16);
    sub_100098B48(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v99 + v57);
    sub_100098B48(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v57 + v104);
    *(_QWORD *)(v53 + 248) = sub_100080C44(v99);
    *(_QWORD *)(v53 + 256) = v101;
    *(_QWORD *)(v53 + 264) = v102;
    sub_1000215BC(v105, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_10028D034(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  char *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE v103[32];

  v102 = a3;
  v101 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000986FC();
  v100 = v5;
  sub_10009D2A4();
  __chkstk_darwin(v6);
  v99 = (uint64_t)&v81 - v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  v98 = (uint64_t)&v81 - v9;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v83 = (uint64_t)&v81 - v18;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v97 = v20;
  sub_10009D2A4();
  __chkstk_darwin(v21);
  v96 = (uint64_t)&v81 - v22;
  sub_10009D2A4();
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  v94 = v26;
  v95 = (uint64_t)&v81 - v25;
  if (a1)
  {
    v27 = v13;
    sub_1000DB83C();
    v37 = v28 + 46;
    v38 = v28 + 47;
    v39 = v28 + 48;
    v40 = v28 + 53;
    v41 = v28 + 54;
    v42 = v28 + 55;
    v43 = v28 + 56;
    v44 = (char *)(v28 + 20);
  }
  else
  {
    sub_1000DB83C();
    v37 = v28 + 46;
    v38 = v28 + 47;
    v39 = v28 + 48;
    v40 = v28 + 53;
    v41 = v28 + 54;
    v42 = v28 + 55;
    v43 = v28 + 56;
    v44 = (char *)(v28 + 20);
    v27 = v13;
  }
  v45 = *v44;
  v46 = *v28;
  v47 = *v29;
  v85 = *v30;
  v84 = *v31;
  v48 = *v32;
  v49 = *v33;
  v50 = *v34;
  v51 = *v35;
  v52 = *v36;
  v88 = *v37;
  v89 = v52;
  v53 = *v38;
  v86 = *v39;
  v87 = v53;
  v54 = *v40;
  v92 = *v41;
  v93 = v54;
  v55 = *v42;
  v90 = *v43;
  v91 = v55;
  v56 = v102 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map;
  sub_1000992EC(v102 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map, (uint64_t)v103);
  sub_10003773C(v56, v27, &qword_100BC4A98);
  v57 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v57) == 1)
  {
    sub_100021A14(v27, &qword_100BC4A98);
    v58 = 1;
    v59 = v94;
  }
  else
  {
    v82 = v51;
    sub_10009D3BC(v27 + *(int *)(v57 + 20), (uint64_t)v16);
    sub_1000215BC(v27, type metadata accessor for LocationComponentContainerViewModel);
    v60 = v83;
    sub_10007C77C((uint64_t)v16, v83, type metadata accessor for LocationComponentViewModel);
    if ((v45 & 1) != 0)
    {
      sub_1000215BC(v60, type metadata accessor for LocationComponentViewModel);
      v58 = 1;
      v59 = v94;
    }
    else
    {
      v59 = v94;
      sub_10007C77C(v60, v94, type metadata accessor for LocationComponentViewModel);
      v58 = 0;
      v61 = (_QWORD *)(v59 + *(int *)(v101 + 20));
      *v61 = v48;
      v61[1] = v49;
      v62 = v82;
      v61[2] = v50;
      v61[3] = v62;
    }
  }
  v63 = v101;
  _s7Weather24LocationCompositionStateOwst_0(v59, v58, 1, v101);
  v64 = v95;
  sub_1002228F0(v59, v95);
  v65 = v96;
  _s7Weather24LocationCompositionStateOwst_0(v96, 1, 1, v63);
  v66 = sub_1000CD630(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v67 = v98;
  sub_100098A1C(v66, v98);
  v68 = (_QWORD *)(v67 + *(int *)(v63 + 20));
  *v68 = v46;
  v68[1] = v47;
  v69 = v84;
  v68[2] = v85;
  v68[3] = v69;
  v70 = v97;
  sub_10003773C(v64, v97, &qword_100BCC760);
  v71 = sub_1000CD630(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v72 = v99;
  sub_100098A1C(v71, v99);
  v73 = (_QWORD *)(v72 + *(int *)(v63 + 20));
  v74 = v88;
  *v73 = v89;
  v73[1] = v74;
  v75 = v86;
  v73[2] = v87;
  v73[3] = v75;
  v76 = sub_1000CD630(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v77 = v100;
  sub_100098A1C(v76, v100);
  v78 = (_QWORD *)(v77 + *(int *)(v63 + 20));
  v79 = v92;
  *v78 = v93;
  v78[1] = v79;
  v80 = v90;
  v78[2] = v91;
  v78[3] = v80;
  sub_10087CED0(v65, v67, v70, v72, v77);
  sub_100021A14(v64, &qword_100BCC760);
  sub_100098640();
}

void sub_10028D52C(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetail;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((static Location.== infix(_:_:)(a1, a2) & 1) == 0)
    goto LABEL_4;
  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  v5 = *(int *)(HourPrecipitationDetail + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for MinuteWeather(0);
  sub_1000D1694(&qword_100BD2000, v9, (uint64_t)&protocol conformance descriptor for MinuteWeather);
  v11 = v10;
  sub_1000D1694(&qword_100BD2008, v12, (uint64_t)&protocol conformance descriptor for MinuteWeather);
  v14 = v13;
  sub_1000D1694((unint64_t *)&unk_100BD2010, v15, (uint64_t)&protocol conformance descriptor for MinuteWeather);
  if ((static Forecast.== infix(_:_:)(v6, v7, v8, v11, v14, v16) & 1) != 0)
    sub_1000FAF2C((uint64_t *)(a1 + *(int *)(HourPrecipitationDetail + 24)), (uint64_t *)(a2 + *(int *)(HourPrecipitationDetail + 24)));
  else
LABEL_4:
    sub_100098640();
}

void sub_10028D61C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t HourPrecipitationDetail;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  type metadata accessor for NextHourPrecipitationDetailInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BD2048);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100079F58();
  v16 = v2 + *(int *)(v15 + 48);
  sub_100080C0C(a1, v2, type metadata accessor for NextHourPrecipitationDetailInput);
  sub_100080C0C(a2, v16, type metadata accessor for NextHourPrecipitationDetailInput);
  sub_100088FC8(v2, 1, HourPrecipitationDetail);
  if (!v18)
  {
    sub_100080C0C(v2, v13, type metadata accessor for NextHourPrecipitationDetailInput);
    sub_100088FC8(v16, 1, HourPrecipitationDetail);
    if (!v18)
    {
      sub_10007802C(v16, v9, type metadata accessor for NextHourPrecipitationDetailInput.Input);
      v19 = static Location.== infix(_:_:)(v13, v9);
      if ((v19 & 1) == 0)
        goto LABEL_14;
      v20 = *(int *)(HourPrecipitationDetail + 20);
      v21 = v13 + v20;
      v22 = v9 + v20;
      v23 = type metadata accessor for MinuteWeather(0);
      sub_1000D94F8(&qword_100BD2000, v24, (uint64_t)&protocol conformance descriptor for MinuteWeather);
      v26 = v25;
      sub_1000D94F8(&qword_100BD2008, v27, (uint64_t)&protocol conformance descriptor for MinuteWeather);
      v29 = v28;
      sub_1000D94F8((unint64_t *)&unk_100BD2010, v30, (uint64_t)&protocol conformance descriptor for MinuteWeather);
      if ((static Forecast.== infix(_:_:)(v21, v22, v23, v26, v29, v31) & 1) == 0
        || (sub_1000FAF2C((uint64_t *)(v13 + *(int *)(HourPrecipitationDetail + 24)), (uint64_t *)(v9 + *(int *)(HourPrecipitationDetail + 24))), (v32 & 1) == 0))
      {
LABEL_14:
        sub_1000B3B44(v9);
        sub_1000B3B44(v13);
        sub_100098AD4(v33, type metadata accessor for NextHourPrecipitationDetailInput);
        goto LABEL_15;
      }
      sub_1000B3B44(v9);
      sub_1000B3B44(v13);
      goto LABEL_5;
    }
    sub_1000215BC(v13, type metadata accessor for NextHourPrecipitationDetailInput.Input);
LABEL_9:
    sub_100021A14(v2, &qword_100BD2048);
    goto LABEL_15;
  }
  v17 = sub_100088FC8(v16, 1, HourPrecipitationDetail);
  if (!v18)
    goto LABEL_9;
LABEL_5:
  sub_100098AD4(v17, type metadata accessor for NextHourPrecipitationDetailInput);
LABEL_15:
  sub_100098640();
}

uint64_t sub_10028D878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t HourPrecipitationDetailViewState;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t HourPrecipitationDetail;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t HourPrecipitationDetailInput;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v77 = a2;
  sub_1000BA294(&qword_100BCE370);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v76 = sub_1000BA294(&qword_100BCE378);
  v74 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  sub_100098728();
  v75 = v9 - v8;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100079F58();
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = sub_1000C2148();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  sub_1000BA294(&qword_100BD2050);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState(0);
  sub_1000B42B0();
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v74 - v29;
  sub_10028DE80(a1, v23);
  sub_100088FC8(v23, 1, HourPrecipitationDetailViewState);
  if (v49)
  {
    sub_100021A14(v23, &qword_100BD2050);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_1000AECD4(v31, (uint64_t)qword_100CAF0E8);
    v33 = Logger.logObject.getter(v32);
    v35 = static os_log_type_t.error.getter(v33, v34);
    v36 = os_log_type_enabled(v33, v35);
    v37 = v77;
    if (v36)
    {
      v38 = (uint8_t *)sub_100098710(2);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v35, "Unable to make NextHourPrecipitationDetailInput due to missing nextHourPrecipitationDetail.", v38, 2u);
      sub_1000986F0((uint64_t)v38);
    }

    HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
    v40 = v37;
    v41 = 1;
    goto LABEL_8;
  }
  sub_10007802C(v23, (uint64_t)v30, type metadata accessor for NextHourPrecipitationDetailViewState);
  v43 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain(v43);
  v45 = Location.id.getter(v44);
  v47 = v46;
  sub_1000EED10(v45, v46, v43);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v43);
  v48 = type metadata accessor for LocationWeatherDataState(0);
  sub_100088FC8(v2, 1, v48);
  if (v49)
  {
    sub_100021A14(v2, &qword_100BC3380);
    _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v15);
LABEL_14:
    v52 = &qword_100BC3460;
    v53 = v14;
    goto LABEL_15;
  }
  sub_1000EADE8();
  sub_100098AD4(v50, type metadata accessor for LocationWeatherDataState);
  sub_100088FC8(v14, 1, v15);
  if (v51)
    goto LABEL_14;
  sub_10007802C(v14, v19, type metadata accessor for WeatherData);
  WeatherDataModel.minuteForecast.getter(v67);
  v68 = v76;
  sub_100088FC8(v7, 1, v76);
  if (!v69)
  {
    v70 = v75;
    v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32);
    v71(v75, v7, v68);
    v72 = sub_1000992C4();
    v37 = v77;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v77, v30, v72);
    v73 = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
    v71(v37 + *(int *)(v73 + 20), v70, v68);
    sub_10007802C(v19, v37 + *(int *)(v73 + 24), type metadata accessor for WeatherData);
    v40 = v37;
    v41 = 0;
    HourPrecipitationDetail = v73;
LABEL_8:
    _s7Weather24LocationCompositionStateOwst_0(v40, v41, 1, HourPrecipitationDetail);
    v42 = 0;
    goto LABEL_21;
  }
  sub_1000215BC(v19, type metadata accessor for WeatherData);
  v52 = &qword_100BCE370;
  v53 = v7;
LABEL_15:
  sub_100021A14(v53, v52);
  if (qword_100BC2450 != -1)
    swift_once(&qword_100BC2450, sub_1006F3844);
  v54 = type metadata accessor for Logger(0);
  sub_1000AECD4(v54, (uint64_t)qword_100CAF0E8);
  sub_100080C0C((uint64_t)v30, (uint64_t)v28, type metadata accessor for NextHourPrecipitationDetailViewState);
  v56 = Logger.logObject.getter(v55);
  v58 = static os_log_type_t.error.getter(v56, v57);
  if (os_log_type_enabled(v56, v58))
  {
    v59 = (uint8_t *)sub_100098710(12);
    v60 = sub_100098710(32);
    v79 = v60;
    *(_DWORD *)v59 = 136315138;
    v61 = sub_1000992C4();
    sub_100086DA4((unint64_t *)&qword_100BC5FE0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    v62 = dispatch thunk of CustomStringConvertible.description.getter(v61);
    v64 = v63;
    v78 = sub_1000CE1C8(v62, v63, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
    swift_bridgeObjectRelease(v64);
    sub_1000215BC((uint64_t)v28, type metadata accessor for NextHourPrecipitationDetailViewState);
    _os_log_impl((void *)&_mh_execute_header, v56, v58, "Failed to create next hour precipitation detail input due to missing weather data; location=%s",
      v59,
      0xCu);
    v42 = 1;
    swift_arrayDestroy(v60, 1);
    sub_1000986F0(v60);
    sub_1000986F0((uint64_t)v59);

    sub_1000215BC((uint64_t)v30, type metadata accessor for NextHourPrecipitationDetailViewState);
  }
  else
  {

    sub_1000215BC((uint64_t)v28, type metadata accessor for NextHourPrecipitationDetailViewState);
    sub_1000215BC((uint64_t)v30, type metadata accessor for NextHourPrecipitationDetailViewState);
    v42 = 1;
  }
  v37 = v77;
LABEL_21:
  HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  return _s7Weather24LocationCompositionStateOwst_0(v37, v42, 1, HourPrecipitationDetailInput);
}

uint64_t sub_10028DE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t HourPrecipitationDetailViewState;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a2;
  v57 = type metadata accessor for LocationPreviewModalViewState(0);
  v3 = __chkstk_darwin(v57);
  v54 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v56 = (uint64_t)&v50 - v5;
  v58 = type metadata accessor for LocationPreviewViewState(0);
  v6 = __chkstk_darwin(v58);
  v53 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v55 = (uint64_t)&v50 - v8;
  HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState(0);
  v10 = __chkstk_darwin(HourPrecipitationDetailViewState);
  v51 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v52 = (uint64_t)&v50 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v50 - v14;
  v16 = type metadata accessor for ModalViewState(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v50 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v50 - v23;
  v25 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v50 - v29;
  v31 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_100080C0C(v31, (uint64_t)v24, type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload(v24, v16) != 5)
  {
    sub_1000215BC((uint64_t)v24, type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  v50 = HourPrecipitationDetailViewState;
  sub_10007802C((uint64_t)v24, (uint64_t)v30, type metadata accessor for ModalViewState.LocationDetailModal);
  sub_10007802C((uint64_t)v30, (uint64_t)v28, type metadata accessor for ModalViewState.LocationDetailModal);
  if (swift_getEnumCaseMultiPayload(v28, v25) != 2)
  {
    sub_1000215BC((uint64_t)v28, type metadata accessor for ModalViewState.LocationDetailModal);
    HourPrecipitationDetailViewState = v50;
LABEL_6:
    sub_100080C0C(v31, (uint64_t)v22, type metadata accessor for ModalViewState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v16);
    v36 = v58;
    if (EnumCaseMultiPayload)
    {
      sub_1000215BC((uint64_t)v22, type metadata accessor for ModalViewState);
    }
    else
    {
      v37 = HourPrecipitationDetailViewState;
      v38 = v55;
      sub_10007802C((uint64_t)v22, v55, type metadata accessor for LocationPreviewViewState);
      v39 = v56;
      sub_100080C0C(v38 + *(int *)(v36 + 20), v56, type metadata accessor for LocationPreviewModalViewState);
      sub_1000215BC(v38, type metadata accessor for LocationPreviewViewState);
      if (swift_getEnumCaseMultiPayload(v39, v57) == 3)
      {
        v40 = v39;
        v41 = v52;
        sub_10007802C(v40, v52, type metadata accessor for NextHourPrecipitationDetailViewState);
        v42 = v41;
        v33 = v59;
        goto LABEL_18;
      }
      sub_1000215BC(v39, type metadata accessor for LocationPreviewModalViewState);
    }
    sub_100080C0C(v31, (uint64_t)v19, type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload(v19, v16) != 4)
    {
      sub_1000215BC((uint64_t)v19, type metadata accessor for ModalViewState);
      goto LABEL_15;
    }
    v43 = type metadata accessor for ModalViewState.MapViewModal(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v43) == 1)
    {
      sub_100021A14((uint64_t)v19, &qword_100BC5F58);
LABEL_15:
      v34 = 1;
      v33 = v59;
      return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, HourPrecipitationDetailViewState);
    }
    v37 = HourPrecipitationDetailViewState;
    v44 = v53;
    sub_10007802C((uint64_t)v19, v53, type metadata accessor for LocationPreviewViewState);
    v45 = v54;
    sub_100080C0C(v44 + *(int *)(v36 + 20), v54, type metadata accessor for LocationPreviewModalViewState);
    sub_1000215BC(v44, type metadata accessor for LocationPreviewViewState);
    v46 = swift_getEnumCaseMultiPayload(v45, v57);
    v33 = v59;
    if (v46 != 3)
    {
      sub_1000215BC(v45, type metadata accessor for LocationPreviewModalViewState);
      v34 = 1;
      goto LABEL_20;
    }
    v47 = v45;
    v48 = v51;
    sub_10007802C(v47, v51, type metadata accessor for NextHourPrecipitationDetailViewState);
    v42 = v48;
LABEL_18:
    sub_10007802C(v42, v33, type metadata accessor for NextHourPrecipitationDetailViewState);
    v34 = 0;
LABEL_20:
    HourPrecipitationDetailViewState = v37;
    return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, HourPrecipitationDetailViewState);
  }
  sub_10007802C((uint64_t)v28, (uint64_t)v15, type metadata accessor for NextHourPrecipitationDetailViewState);
  v32 = (uint64_t)v15;
  v33 = v59;
  sub_10007802C(v32, v59, type metadata accessor for NextHourPrecipitationDetailViewState);
  v34 = 0;
  HourPrecipitationDetailViewState = v50;
  return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, HourPrecipitationDetailViewState);
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInputFactory()
{
  return objc_opt_self(_TtC7Weather39NextHourPrecipitationDetailInputFactory);
}

uint64_t *sub_10028E3BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t HourPrecipitationDetail;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetail))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    return a1;
  }
  v9 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(HourPrecipitationDetail + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = *(int *)(HourPrecipitationDetail + 24);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (char *)a2 + v14;
  v17 = *(uint64_t *)((char *)a2 + v14 + 8);
  *v15 = *(uint64_t *)((char *)a2 + v14);
  v15[1] = v17;
  v18 = (int *)type metadata accessor for WeatherData(0);
  v19 = v18[5];
  v20 = (char *)v15 + v19;
  v21 = &v16[v19];
  v22 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v17);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    v23 = sub_1000BA294(&qword_100BC3340);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  v24 = v18[6];
  v25 = (char *)v15 + v24;
  v26 = &v16[v24];
  v27 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  v28 = v18[7];
  v29 = (char *)v15 + v28;
  v30 = &v16[v28];
  v31 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    v32 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v29, v30, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  v34 = v18[8];
  v35 = (_QWORD *)((char *)v15 + v34);
  v36 = &v16[v34];
  v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36);
  if (EnumCaseMultiPayload == 1)
  {
    v43 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v35, v36, v43);
    v40 = v35;
    v41 = v37;
    v42 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      goto LABEL_17;
    }
    v39 = *((_QWORD *)v36 + 1);
    *v35 = *(_QWORD *)v36;
    v35[1] = v39;
    swift_bridgeObjectRetain(v39);
    v40 = v35;
    v41 = v37;
    v42 = 0;
  }
  swift_storeEnumTagMultiPayload(v40, v41, v42);
LABEL_17:
  v44 = v18[9];
  v45 = (char *)v15 + v44;
  v46 = &v16[v44];
  v47 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
  {
    v48 = sub_1000BA294(&qword_100BC3350);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v49 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v49))
    {
      v50 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v45, v46, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v49);
    }
    v51 = *(int *)(v47 + 20);
    v52 = &v45[v51];
    v53 = &v46[v51];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v49))
    {
      v54 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v52, v53, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v49);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, HourPrecipitationDetail);
  return a1;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInput.Input(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD1FE8, (uint64_t)&nominal type descriptor for NextHourPrecipitationDetailInput.Input);
}

uint64_t sub_10028E804(uint64_t a1)
{
  uint64_t HourPrecipitationDetail;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(HourPrecipitationDetail + 20);
    v6 = sub_1000BA294(&qword_100BCE378);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = a1 + *(int *)(HourPrecipitationDetail + 24);
    swift_bridgeObjectRelease();
    v8 = (int *)type metadata accessor for WeatherData(0);
    v9 = v7 + v8[5];
    v10 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = v7 + v8[6];
    v12 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = v7 + v8[7];
    v14 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    {
      v15 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    }
    v16 = v7 + v8[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16);
    if (EnumCaseMultiPayload == 1)
    {
      v18 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    v19 = v7 + v8[9];
    v20 = type metadata accessor for WeatherDataOverrides(0);
    result = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
    if (!(_DWORD)result)
    {
      v21 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v21))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
      v22 = v19 + *(int *)(v20 + 20);
      result = _s7Weather24LocationCompositionStateOwet_0(v22, 1, v21);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
    }
  }
  return result;
}

char *sub_10028EA34(char *a1, char *a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetail))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v7 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = *(int *)(HourPrecipitationDetail + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(HourPrecipitationDetail + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 8];
  *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
  *((_QWORD *)v13 + 1) = v15;
  v16 = (int *)type metadata accessor for WeatherData(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v15);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_1000BA294(&qword_100BC3340);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v22 = v16[6];
  v23 = &v13[v22];
  v24 = &v14[v22];
  v25 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = v16[7];
  v27 = &v13[v26];
  v28 = &v14[v26];
  v29 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v27, v28, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  v32 = v16[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v34);
  if (EnumCaseMultiPayload == 1)
  {
    v41 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v33, v34, v41);
    v38 = v33;
    v39 = v35;
    v40 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      goto LABEL_15;
    }
    v37 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v37;
    swift_bridgeObjectRetain(v37);
    v38 = v33;
    v39 = v35;
    v40 = 0;
  }
  swift_storeEnumTagMultiPayload(v38, v39, v40);
LABEL_15:
  v42 = v16[9];
  v43 = &v13[v42];
  v44 = &v14[v42];
  v45 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
  {
    v46 = sub_1000BA294(&qword_100BC3350);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v47))
    {
      v48 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v47);
    }
    v49 = *(int *)(v45 + 20);
    v50 = &v43[v49];
    v51 = &v44[v49];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v47))
    {
      v52 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v50, v51, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v47);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, HourPrecipitationDetail);
  return a1;
}

uint64_t sub_10028EE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  int EnumCaseMultiPayload;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  const void *v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  int v122;
  uint64_t v123;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, HourPrecipitationDetail);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(HourPrecipitationDetail + 20);
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = sub_1000BA294(&qword_100BCE378);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      v14 = *(int *)(HourPrecipitationDetail + 24);
      v15 = (_QWORD *)(a1 + v14);
      v16 = a2 + v14;
      *v15 = *(_QWORD *)(a2 + v14);
      v17 = *(_QWORD *)(a2 + v14 + 8);
      v15[1] = v17;
      v18 = (int *)type metadata accessor for WeatherData(0);
      v19 = v18[5];
      v20 = (char *)v15 + v19;
      v21 = (const void *)(v16 + v19);
      v22 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v17);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        v23 = sub_1000BA294(&qword_100BC3340);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      v43 = v18[6];
      v44 = (char *)v15 + v43;
      v45 = v16 + v43;
      v46 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      v47 = v18[7];
      v48 = (char *)v15 + v47;
      v49 = (const void *)(v16 + v47);
      v50 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
      {
        v51 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v52 = type metadata accessor for Date(0);
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v48, v49, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
      }
      v53 = v18[8];
      v54 = (_QWORD *)((char *)v15 + v53);
      v55 = (_QWORD *)(v16 + v53);
      v56 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v55);
      if (EnumCaseMultiPayload == 1)
      {
        v62 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v54, v55, v62);
        v59 = v54;
        v60 = v56;
        v61 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          goto LABEL_23;
        }
        *v54 = *v55;
        v58 = v55[1];
        v54[1] = v58;
        swift_bridgeObjectRetain(v58);
        v59 = v54;
        v60 = v56;
        v61 = 0;
      }
      swift_storeEnumTagMultiPayload(v59, v60, v61);
LABEL_23:
      v63 = v18[9];
      v64 = (char *)v15 + v63;
      v65 = (char *)(v16 + v63);
      v66 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
      {
        v67 = sub_1000BA294(&qword_100BC3350);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        v68 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v68))
        {
          v69 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v64, v65, v68);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v68);
        }
        v93 = *(int *)(v66 + 20);
        v94 = &v64[v93];
        v95 = &v65[v93];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v68))
        {
          v96 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v94, v95, v68);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v68);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      }
      v97 = a1;
      v98 = HourPrecipitationDetail;
      goto LABEL_46;
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    v27 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(a1, a2, v27);
    v28 = *(int *)(HourPrecipitationDetail + 20);
    v29 = a1 + v28;
    v30 = a2 + v28;
    v31 = sub_1000BA294(&qword_100BCE378);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
    v32 = *(int *)(HourPrecipitationDetail + 24);
    v33 = (_QWORD *)(a1 + v32);
    v34 = a2 + v32;
    *v33 = *(_QWORD *)(a2 + v32);
    v35 = *(_QWORD *)(a2 + v32 + 8);
    v33[1] = v35;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRelease();
    v36 = (int *)type metadata accessor for WeatherData(0);
    v37 = v36[5];
    v38 = (char *)v33 + v37;
    v39 = (const void *)(v34 + v37);
    v40 = type metadata accessor for Locale(0);
    v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
    v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
        goto LABEL_30;
      }
    }
    else
    {
      v70 = *(_QWORD *)(v40 - 8);
      if (!v42)
      {
        (*(void (**)(char *, const void *, uint64_t))(v70 + 24))(v38, v39, v40);
LABEL_30:
        v72 = v36[6];
        v73 = (char *)v33 + v72;
        v74 = v34 + v72;
        v75 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
        v76 = v36[7];
        v77 = (char *)v33 + v76;
        v78 = (const void *)(v34 + v76);
        v79 = sub_1000BA294(&qword_100BC3348);
        v80 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v79);
        v81 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79);
        if (v80)
        {
          if (!v81)
          {
            v82 = type metadata accessor for Date(0);
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v77, v78, v82);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
            goto LABEL_36;
          }
        }
        else
        {
          if (!v81)
          {
            v109 = type metadata accessor for Date(0);
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v109 - 8) + 24))(v77, v78, v109);
LABEL_36:
            if (a1 == a2)
              goto LABEL_51;
            v84 = v36[8];
            v85 = (_QWORD *)((char *)v33 + v84);
            v86 = (_QWORD *)(v34 + v84);
            sub_1000215BC((uint64_t)v33 + v84, type metadata accessor for WeatherData.WeatherStatisticsState);
            v87 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v88 = swift_getEnumCaseMultiPayload(v86);
            if (v88 == 1)
            {
              v100 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v85, v86, v100);
              v90 = v85;
              v91 = v87;
              v92 = 1;
            }
            else
            {
              if (v88)
              {
                memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
LABEL_51:
                v101 = v36[9];
                v102 = (char *)v33 + v101;
                v103 = (char *)(v34 + v101);
                v104 = type metadata accessor for WeatherDataOverrides(0);
                v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v104);
                v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104);
                if (v105)
                {
                  if (!v106)
                  {
                    v107 = type metadata accessor for Date(0);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v107))
                    {
                      v108 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v102, v103, v107);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v107);
                    }
                    v113 = *(int *)(v104 + 20);
                    v114 = &v102[v113];
                    v115 = &v103[v113];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v107))
                    {
                      v116 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                      memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v114, v115, v107);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v107);
                    }
                    v97 = (uint64_t)v102;
                    v98 = v104;
                    goto LABEL_46;
                  }
LABEL_57:
                  v24 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
                  v25 = v102;
                  v26 = v103;
                  goto LABEL_9;
                }
                if (v106)
                {
                  sub_1000215BC((uint64_t)v102, type metadata accessor for WeatherDataOverrides);
                  goto LABEL_57;
                }
                v110 = type metadata accessor for Date(0);
                v111 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v110);
                v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v110);
                if (v111)
                {
                  if (!v112)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v102, v103, v110);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v110);
                    goto LABEL_71;
                  }
                }
                else
                {
                  v117 = *(_QWORD *)(v110 - 8);
                  if (!v112)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v117 + 24))(v102, v103, v110);
LABEL_71:
                    v119 = *(int *)(v104 + 20);
                    v120 = (uint64_t)&v102[v119];
                    a2 = (uint64_t)&v103[v119];
                    v121 = _s7Weather24LocationCompositionStateOwet_0(v120, 1, v110);
                    v122 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v110);
                    if (v121)
                    {
                      if (!v122)
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v120, a2, v110);
                        v97 = v120;
                        v98 = v110;
LABEL_46:
                        _s7Weather24LocationCompositionStateOwst_0(v97, 0, 1, v98);
                        return a1;
                      }
                    }
                    else
                    {
                      v123 = *(_QWORD *)(v110 - 8);
                      if (!v122)
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 24))(v120, a2, v110);
                        return a1;
                      }
                      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v120, v110);
                    }
                    v24 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
                    v25 = (void *)v120;
                    goto LABEL_8;
                  }
                  (*(void (**)(char *, uint64_t))(v117 + 8))(v102, v110);
                }
                v118 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
                goto LABEL_71;
              }
              *v85 = *v86;
              v89 = v86[1];
              v85[1] = v89;
              swift_bridgeObjectRetain(v89);
              v90 = v85;
              v91 = v87;
              v92 = 0;
            }
            swift_storeEnumTagMultiPayload(v90, v91, v92);
            goto LABEL_51;
          }
          sub_100021A14((uint64_t)v77, &qword_100BC3348);
        }
        v83 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v40);
    }
    v71 = sub_1000BA294(&qword_100BC3340);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_30;
  }
  sub_1000215BC(a1, type metadata accessor for NextHourPrecipitationDetailInput.Input);
LABEL_7:
  v24 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
  v25 = (void *)a1;
LABEL_8:
  v26 = (const void *)a2;
LABEL_9:
  memcpy(v25, v26, v24);
  return a1;
}

char *sub_10028F864(char *a1, char *a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetail))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(HourPrecipitationDetail + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1000BA294(&qword_100BCE378);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    v12 = *(int *)(HourPrecipitationDetail + 24);
    v13 = &a1[v12];
    v14 = &a2[v12];
    *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
    v15 = (int *)type metadata accessor for WeatherData(0);
    v16 = v15[5];
    v17 = &v13[v16];
    v18 = &v14[v16];
    v19 = type metadata accessor for Locale(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      v20 = sub_1000BA294(&qword_100BC3340);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    v21 = v15[6];
    v22 = &v13[v21];
    v23 = &v14[v21];
    v24 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    v25 = v15[7];
    v26 = &v13[v25];
    v27 = &v14[v25];
    v28 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      v29 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v26, v27, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    v31 = v15[8];
    v32 = &v13[v31];
    v33 = &v14[v31];
    v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v33) == 1)
    {
      v35 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload(v32, v34, 1);
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    v36 = v15[9];
    v37 = &v13[v36];
    v38 = &v14[v36];
    v39 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      v40 = sub_1000BA294(&qword_100BC3350);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
      {
        v42 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v37, v38, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
      }
      v43 = *(int *)(v39 + 20);
      v44 = &v37[v43];
      v45 = &v38[v43];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v41))
      {
        v46 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v44, v45, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v41);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, HourPrecipitationDetail);
  }
  return a1;
}

uint64_t sub_10028FC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  const void *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  const void *v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  const void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  uint64_t v112;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, HourPrecipitationDetail);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = *(int *)(HourPrecipitationDetail + 20);
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = sub_1000BA294(&qword_100BCE378);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = *(int *)(HourPrecipitationDetail + 24);
      v15 = a1 + v14;
      v16 = a2 + v14;
      *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
      v17 = (int *)type metadata accessor for WeatherData(0);
      v18 = v17[5];
      v19 = (void *)(v15 + v18);
      v20 = (const void *)(v16 + v18);
      v21 = type metadata accessor for Locale(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        v22 = sub_1000BA294(&qword_100BC3340);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
      v42 = v17[6];
      v43 = v15 + v42;
      v44 = v16 + v42;
      v45 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      v46 = v17[7];
      v47 = (void *)(v15 + v46);
      v48 = (const void *)(v16 + v46);
      v49 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        v50 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v51 = type metadata accessor for Date(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v47, v48, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      }
      v52 = v17[8];
      v53 = (void *)(v15 + v52);
      v54 = (const void *)(v16 + v52);
      v55 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v54) == 1)
      {
        v56 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v53, v54, v56);
        swift_storeEnumTagMultiPayload(v53, v55, 1);
      }
      else
      {
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      v57 = v17[9];
      v58 = (char *)(v15 + v57);
      v59 = (char *)(v16 + v57);
      v60 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        v61 = sub_1000BA294(&qword_100BC3350);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        v62 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v62))
        {
          v63 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v58, v59, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v62);
        }
        v91 = *(int *)(v60 + 20);
        v92 = &v58[v91];
        v93 = &v59[v91];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v62))
        {
          v94 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v92, v93, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v62);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      v95 = a1;
      v96 = HourPrecipitationDetail;
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    v26 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(a1, a2, v26);
    v27 = *(int *)(HourPrecipitationDetail + 20);
    v28 = a1 + v27;
    v29 = a2 + v27;
    v30 = sub_1000BA294(&qword_100BCE378);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
    v31 = *(int *)(HourPrecipitationDetail + 24);
    v32 = (_QWORD *)(a1 + v31);
    v33 = a2 + v31;
    v34 = *(_QWORD *)(a2 + v31 + 8);
    *v32 = *(_QWORD *)(a2 + v31);
    v32[1] = v34;
    swift_bridgeObjectRelease();
    v35 = (int *)type metadata accessor for WeatherData(0);
    v36 = v35[5];
    v37 = (char *)v32 + v36;
    v38 = (const void *)(v33 + v36);
    v39 = type metadata accessor for Locale(0);
    v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
    v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
        goto LABEL_27;
      }
    }
    else
    {
      v64 = *(_QWORD *)(v39 - 8);
      if (!v41)
      {
        (*(void (**)(char *, const void *, uint64_t))(v64 + 40))(v37, v38, v39);
LABEL_27:
        v66 = v35[6];
        v67 = (char *)v32 + v66;
        v68 = v33 + v66;
        v69 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
        v70 = v35[7];
        v71 = (char *)v32 + v70;
        v72 = (const void *)(v33 + v70);
        v73 = sub_1000BA294(&qword_100BC3348);
        v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v73);
        v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73);
        if (v74)
        {
          if (!v75)
          {
            v76 = type metadata accessor for Date(0);
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v71, v72, v76);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
            goto LABEL_33;
          }
        }
        else
        {
          if (!v75)
          {
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v98 - 8) + 40))(v71, v72, v98);
LABEL_33:
            if (a1 != a2)
            {
              v78 = v35[8];
              v79 = (char *)v32 + v78;
              v80 = (const void *)(v33 + v78);
              sub_1000215BC((uint64_t)v32 + v78, type metadata accessor for WeatherData.WeatherStatisticsState);
              v81 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload(v80) == 1)
              {
                v82 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v79, v80, v82);
                swift_storeEnumTagMultiPayload(v79, v81, 1);
              }
              else
              {
                memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
              }
            }
            v83 = v35[9];
            v84 = (char *)v32 + v83;
            v85 = (char *)(v33 + v83);
            v86 = type metadata accessor for WeatherDataOverrides(0);
            v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v86);
            v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86);
            if (v87)
            {
              if (!v88)
              {
                v89 = type metadata accessor for Date(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v89))
                {
                  v90 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v84, v85, v89);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v89);
                }
                v102 = *(int *)(v86 + 20);
                v103 = &v84[v102];
                v104 = &v85[v102];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v89))
                {
                  v105 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v103, v104, v89);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v89);
                }
                v95 = (uint64_t)v84;
                v96 = v86;
                goto LABEL_50;
              }
              goto LABEL_43;
            }
            if (v88)
            {
              sub_1000215BC((uint64_t)v84, type metadata accessor for WeatherDataOverrides);
LABEL_43:
              v23 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
              v24 = v84;
              v25 = v85;
              goto LABEL_9;
            }
            v99 = type metadata accessor for Date(0);
            v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v99);
            v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v99);
            if (v100)
            {
              if (!v101)
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v84, v85, v99);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v99);
LABEL_65:
                v108 = *(int *)(v86 + 20);
                v109 = (uint64_t)&v84[v108];
                a2 = (uint64_t)&v85[v108];
                v110 = _s7Weather24LocationCompositionStateOwet_0(v109, 1, v99);
                v111 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v99);
                if (v110)
                {
                  if (!v111)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v109, a2, v99);
                    v95 = v109;
                    v96 = v99;
LABEL_50:
                    _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v96);
                    return a1;
                  }
                }
                else
                {
                  v112 = *(_QWORD *)(v99 - 8);
                  if (!v111)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 40))(v109, a2, v99);
                    return a1;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v109, v99);
                }
                v23 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
                v24 = (void *)v109;
                goto LABEL_8;
              }
            }
            else
            {
              v106 = *(_QWORD *)(v99 - 8);
              if (!v101)
              {
                (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v84, v85, v99);
                goto LABEL_65;
              }
              (*(void (**)(char *, uint64_t))(v106 + 8))(v84, v99);
            }
            v107 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
            goto LABEL_65;
          }
          sub_100021A14((uint64_t)v71, &qword_100BC3348);
        }
        v77 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
    }
    v65 = sub_1000BA294(&qword_100BC3340);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_27;
  }
  sub_1000215BC(a1, type metadata accessor for NextHourPrecipitationDetailInput.Input);
LABEL_7:
  v23 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
  v24 = (void *)a1;
LABEL_8:
  v25 = (const void *)a2;
LABEL_9:
  memcpy(v24, v25, v23);
  return a1;
}

uint64_t sub_1002905F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100290600);
}

uint64_t sub_100290600(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetail;
  unsigned int v5;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, HourPrecipitationDetail);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_100290644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100290650);
}

uint64_t sub_100290650(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t HourPrecipitationDetail;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  return sub_1000987C4(a1, v5, a3, HourPrecipitationDetail);
}

uint64_t sub_100290690(uint64_t a1)
{
  uint64_t HourPrecipitationDetail;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
}

uint64_t sub_1002906C0(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetail;

  HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, HourPrecipitationDetail);
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInput(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD1F80, (uint64_t)&nominal type descriptor for NextHourPrecipitationDetailInput);
}

uint64_t sub_10029070C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for NextHourPrecipitationDetailInput.Input(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t *sub_100290760(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t *)((char *)a2 + v12 + 8);
  *v13 = *(uint64_t *)((char *)a2 + v12);
  v13[1] = v15;
  v16 = (int *)type metadata accessor for WeatherData(0);
  v17 = v16[5];
  v18 = (char *)v13 + v17;
  v19 = &v14[v17];
  v20 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v15);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_1000BA294(&qword_100BC3340);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v23 = v16[6];
  v24 = (char *)v13 + v23;
  v25 = &v14[v23];
  v26 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = v16[7];
  v28 = (char *)v13 + v27;
  v29 = &v14[v27];
  v30 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v28, v29, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  v33 = v16[8];
  v34 = (_QWORD *)((char *)v13 + v33);
  v35 = &v14[v33];
  v36 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v35);
  if (EnumCaseMultiPayload == 1)
  {
    v42 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v34, v35, v42);
    v39 = v34;
    v40 = v36;
    v41 = 1;
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    v38 = *((_QWORD *)v35 + 1);
    *v34 = *(_QWORD *)v35;
    v34[1] = v38;
    swift_bridgeObjectRetain(v38);
    v39 = v34;
    v40 = v36;
    v41 = 0;
LABEL_13:
    swift_storeEnumTagMultiPayload(v39, v40, v41);
    goto LABEL_15;
  }
  memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_15:
  v43 = v16[9];
  v44 = (char *)v13 + v43;
  v45 = &v14[v43];
  v46 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
  {
    v47 = sub_1000BA294(&qword_100BC3350);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v48 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v48))
    {
      v49 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v44, v45, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v48);
    }
    v50 = *(int *)(v46 + 20);
    v51 = &v44[v50];
    v52 = &v45[v50];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v48))
    {
      v53 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v51, v52, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v48);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
  }
  return a1;
}

uint64_t sub_100290B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for WeatherData(0);
  v9 = v7 + v8[5];
  v10 = type metadata accessor for Locale(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[6];
  v12 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v7 + v8[7];
  v14 = sub_1000BA294(&qword_100BC3348);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
  {
    v15 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  v16 = v7 + v8[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16);
  if (EnumCaseMultiPayload == 1)
  {
    v18 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  v19 = v7 + v8[9];
  v20 = type metadata accessor for WeatherDataOverrides(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
  if (!(_DWORD)result)
  {
    v22 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v19, v22);
    v23 = v19 + *(int *)(v20 + 20);
    result = _s7Weather24LocationCompositionStateOwet_0(v23, 1, v22);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v23, v22);
  }
  return result;
}

uint64_t sub_100290D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = v14;
  v15 = (int *)type metadata accessor for WeatherData(0);
  v16 = v15[5];
  v17 = (char *)v12 + v16;
  v18 = (const void *)(v13 + v16);
  v19 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v14);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_1000BA294(&qword_100BC3340);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v21 = v15[6];
  v22 = (char *)v12 + v21;
  v23 = v13 + v21;
  v24 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = v15[7];
  v26 = (char *)v12 + v25;
  v27 = (const void *)(v13 + v25);
  v28 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for Date(0);
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v26, v27, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v31 = v15[8];
  v32 = (_QWORD *)((char *)v12 + v31);
  v33 = (_QWORD *)(v13 + v31);
  v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v33);
  if (EnumCaseMultiPayload == 1)
  {
    v40 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v32, v33, v40);
    v37 = v32;
    v38 = v34;
    v39 = 1;
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    v36 = v33[1];
    *v32 = *v33;
    v32[1] = v36;
    swift_bridgeObjectRetain(v36);
    v37 = v32;
    v38 = v34;
    v39 = 0;
LABEL_11:
    swift_storeEnumTagMultiPayload(v37, v38, v39);
    goto LABEL_13;
  }
  memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
LABEL_13:
  v41 = v15[9];
  v42 = (char *)v12 + v41;
  v43 = (char *)(v13 + v41);
  v44 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    v45 = sub_1000BA294(&qword_100BC3350);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v46))
    {
      v47 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v42, v43, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v46);
    }
    v48 = *(int *)(v44 + 20);
    v49 = &v42[v48];
    v50 = &v43[v48];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v46))
    {
      v51 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v49, v50, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v46);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  return a1;
}

uint64_t sub_100291118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  size_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  v15 = (int *)type metadata accessor for WeatherData(0);
  v16 = v15[5];
  v17 = (char *)v12 + v16;
  v18 = (const void *)(v13 + v16);
  v19 = type metadata accessor for Locale(0);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19);
  v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v22 = *(_QWORD *)(v19 - 8);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v19);
LABEL_6:
    v23 = sub_1000BA294(&qword_100BC3340);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v22 + 24))(v17, v18, v19);
LABEL_7:
  v24 = v15[6];
  v25 = (char *)v12 + v24;
  v26 = v13 + v24;
  v27 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = v15[7];
  v29 = (char *)v12 + v28;
  v30 = (const void *)(v13 + v28);
  v31 = sub_1000BA294(&qword_100BC3348);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      v34 = type metadata accessor for Date(0);
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v29, v30, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_100021A14((uint64_t)v29, &qword_100BC3348);
LABEL_12:
    v35 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v57 = type metadata accessor for Date(0);
  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v29, v30, v57);
LABEL_13:
  if (a1 == a2)
    goto LABEL_20;
  v36 = v15[8];
  v37 = (_QWORD *)((char *)v12 + v36);
  v38 = (_QWORD *)(v13 + v36);
  sub_1000215BC((uint64_t)v12 + v36, type metadata accessor for WeatherData.WeatherStatisticsState);
  v39 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v38);
  if (EnumCaseMultiPayload == 1)
  {
    v45 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v37, v38, v45);
    v42 = v37;
    v43 = v39;
    v44 = 1;
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *v37 = *v38;
    v41 = v38[1];
    v37[1] = v41;
    swift_bridgeObjectRetain(v41);
    v42 = v37;
    v43 = v39;
    v44 = 0;
LABEL_18:
    swift_storeEnumTagMultiPayload(v42, v43, v44);
    goto LABEL_20;
  }
  memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
LABEL_20:
  v46 = v15[9];
  v47 = (char *)v12 + v46;
  v48 = (char *)(v13 + v46);
  v49 = type metadata accessor for WeatherDataOverrides(0);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      v52 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v52))
      {
        v53 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v47, v48, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v52);
      }
      v61 = *(int *)(v49 + 20);
      v62 = &v47[v61];
      v63 = &v48[v61];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v52))
      {
        v64 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v62, v63, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v52);
      }
      v65 = (uint64_t)v47;
      v66 = v49;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v51)
  {
    sub_1000215BC((uint64_t)v47, type metadata accessor for WeatherDataOverrides);
LABEL_26:
    v54 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v55 = v47;
    v56 = v48;
    goto LABEL_27;
  }
  v58 = type metadata accessor for Date(0);
  v59 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v58);
  v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v58);
  if (!v59)
  {
    v68 = *(_QWORD *)(v58 - 8);
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 24))(v47, v48, v58);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v47, v58);
    goto LABEL_42;
  }
  if (v60)
  {
LABEL_42:
    v69 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v47, v48, v58);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v58);
LABEL_43:
  v70 = *(int *)(v49 + 20);
  v71 = (uint64_t)&v47[v70];
  v72 = (uint64_t)&v48[v70];
  v73 = _s7Weather24LocationCompositionStateOwet_0(v71, 1, v58);
  v74 = _s7Weather24LocationCompositionStateOwet_0(v72, 1, v58);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v71, v72, v58);
      v65 = v71;
      v66 = v58;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v65, 0, 1, v66);
      return a1;
    }
  }
  else
  {
    v75 = *(_QWORD *)(v58 - 8);
    if (!v74)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 24))(v71, v72, v58);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v71, v58);
  }
  v54 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v55 = (void *)v71;
  v56 = (const void *)v72;
LABEL_27:
  memcpy(v55, v56, v54);
  return a1;
}

uint64_t sub_10029173C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for WeatherData(0);
  v15 = v14[5];
  v16 = (void *)(v12 + v15);
  v17 = (const void *)(v13 + v15);
  v18 = type metadata accessor for Locale(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BC3340);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v20 = v14[6];
  v21 = v12 + v20;
  v22 = v13 + v20;
  v23 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = v14[7];
  v25 = (void *)(v12 + v24);
  v26 = (const void *)(v13 + v24);
  v27 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    v28 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v25, v26, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  v30 = v14[8];
  v31 = (void *)(v12 + v30);
  v32 = (const void *)(v13 + v30);
  v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload(v32) == 1)
  {
    v34 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload(v31, v33, 1);
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v35 = v14[9];
  v36 = (char *)(v12 + v35);
  v37 = (char *)(v13 + v35);
  v38 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
  {
    v39 = sub_1000BA294(&qword_100BC3350);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v40))
    {
      v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v36, v37, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v40);
    }
    v42 = *(int *)(v38 + 20);
    v43 = &v36[v42];
    v44 = &v37[v42];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v40))
    {
      v45 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v43, v44, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v40);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
  }
  return a1;
}

uint64_t sub_100291AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1000BA294(&qword_100BCE378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v15 = (int *)type metadata accessor for WeatherData(0);
  v16 = v15[5];
  v17 = (char *)v12 + v16;
  v18 = (const void *)(v13 + v16);
  v19 = type metadata accessor for Locale(0);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19);
  v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v22 = *(_QWORD *)(v19 - 8);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v19);
LABEL_6:
    v23 = sub_1000BA294(&qword_100BC3340);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v22 + 40))(v17, v18, v19);
LABEL_7:
  v24 = v15[6];
  v25 = (char *)v12 + v24;
  v26 = v13 + v24;
  v27 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = v15[7];
  v29 = (char *)v12 + v28;
  v30 = (const void *)(v13 + v28);
  v31 = sub_1000BA294(&qword_100BC3348);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      v34 = type metadata accessor for Date(0);
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v29, v30, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_100021A14((uint64_t)v29, &qword_100BC3348);
LABEL_12:
    v35 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v52 = type metadata accessor for Date(0);
  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v29, v30, v52);
LABEL_13:
  if (a1 != a2)
  {
    v36 = v15[8];
    v37 = (char *)v12 + v36;
    v38 = (const void *)(v13 + v36);
    sub_1000215BC((uint64_t)v12 + v36, type metadata accessor for WeatherData.WeatherStatisticsState);
    v39 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v38) == 1)
    {
      v40 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload(v37, v39, 1);
    }
    else
    {
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
  }
  v41 = v15[9];
  v42 = (char *)v12 + v41;
  v43 = (char *)(v13 + v41);
  v44 = type metadata accessor for WeatherDataOverrides(0);
  v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      v47 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v47))
      {
        v48 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v42, v43, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v47);
      }
      v56 = *(int *)(v44 + 20);
      v57 = &v42[v56];
      v58 = &v43[v56];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v47))
      {
        v59 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v57, v58, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v47);
      }
      v60 = (uint64_t)v42;
      v61 = v44;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v46)
  {
    sub_1000215BC((uint64_t)v42, type metadata accessor for WeatherDataOverrides);
LABEL_23:
    v49 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v50 = v42;
    v51 = v43;
    goto LABEL_24;
  }
  v53 = type metadata accessor for Date(0);
  v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v53);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v53);
  if (!v54)
  {
    v63 = *(_QWORD *)(v53 - 8);
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v42, v43, v53);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v53);
    goto LABEL_39;
  }
  if (v55)
  {
LABEL_39:
    v64 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v42, v43, v53);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v53);
LABEL_40:
  v65 = *(int *)(v44 + 20);
  v66 = (uint64_t)&v42[v65];
  v67 = (uint64_t)&v43[v65];
  v68 = _s7Weather24LocationCompositionStateOwet_0(v66, 1, v53);
  v69 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v53);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v66, v67, v53);
      v60 = v66;
      v61 = v53;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v60, 0, 1, v61);
      return a1;
    }
  }
  else
  {
    v70 = *(_QWORD *)(v53 - 8);
    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 40))(v66, v67, v53);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v66, v53);
  }
  v49 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v50 = (void *)v66;
  v51 = (const void *)v67;
LABEL_24:
  memcpy(v50, v51, v49);
  return a1;
}

uint64_t sub_1002920BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002920C8);
}

uint64_t sub_1002920C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1000992C4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v9 = sub_1000BA294(&qword_100BCE378);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = sub_1000C2148();
      v10 = *(int *)(a3 + 24);
    }
    v8 = a1 + v10;
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_100292150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029215C);
}

uint64_t sub_10029215C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1000992C4();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v11 = sub_1000BA294(&qword_100BCE378);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_1000C2148();
      v12 = *(int *)(a4 + 24);
    }
    v10 = a1 + v12;
  }
  return sub_1000987C4(v10, a2, a2, v9);
}

void sub_1002921E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  v2 = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015B460(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for WeatherData(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
      }
    }
  }
}

id sub_100292284()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t **v4;
  uint64_t v5;
  id v6;
  _QWORD v9[5];

  sub_100043CA8(v0, (uint64_t)v9);
  v1 = sub_100068EB4((uint64_t)v9, v9[3]);
  v2 = __chkstk_darwin(v1);
  v4 = (uint64_t **)((char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t **, __n128))(v5 + 16))(v4, v2);
  v6 = sub_100292B74(*v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9);
  return v6;
}

id sub_100292318()
{
  id v0;
  id v1;
  id v2;
  objc_class *v3;
  NSBundle v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  NSBundle v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  objc_class *v22;
  NSBundle v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  objc_class *v34;
  NSBundle v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v45;
  id v46;
  void *v47;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 60.0);
  v1 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithFont:scale:", v0, -1);

  sub_100120444();
  v46 = v1;
  v2 = sub_100292720(0x6E6F697461636F6CLL, 0xED00006C6C69662ELL, v1);
  v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000BA330();
  v4.super.isa = v3;
  v8 = sub_1000BA340(0xD000000000000015, 0x80000001009F7CF0, 0, 0, v4, v5, v6, v7);
  v10 = v9;

  v11 = (objc_class *)sub_1000C26C0();
  sub_1000BA330();
  v12.super.isa = v11;
  v16 = sub_1000BA340(0x1000000000000071, 0x80000001009F7D50, 0, 0, v12, v13, v14, v15);
  v18 = v17;

  v19 = objc_allocWithZone((Class)OBWelcomeController);
  v45 = v2;
  v20 = sub_100292A78(v8, v10, v16, v18, v2);
  v21 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v22 = (objc_class *)sub_1000C26C0();
  sub_1000BA330();
  v23.super.isa = v22;
  v27 = sub_1000BA340(0x65756E69746E6F43, 0xE800000000000000, 0, 0, v23, v24, v25, v26);
  v29 = v28;

  sub_100292B14(v27, v29, 0, v21);
  v30 = sub_1000BA294(&qword_100BD20A0);
  UIViewControllerRepresentableContext.coordinator.getter(&v47, v30);
  v31 = v47;
  objc_msgSend(v21, "addTarget:action:forControlEvents:", v47, "continueButtonTapped", 64);

  v32 = objc_msgSend(v20, "buttonTray");
  objc_msgSend(v32, "addButton:", v21);

  v33 = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
  v34 = (objc_class *)sub_1000C26C0();
  sub_1000BA330();
  v35.super.isa = v34;
  v39 = sub_1000BA340(0x776F4E20746F4ELL, 0xE700000000000000, 0, 0, v35, v36, v37, v38);
  v41 = v40;

  sub_100292B14(v39, v41, 0, v33);
  UIViewControllerRepresentableContext.coordinator.getter(&v47, v30);
  v42 = v47;
  objc_msgSend(v33, "addTarget:action:forControlEvents:", v47, "notNowButtonTapped", 64);

  v43 = objc_msgSend(v20, "buttonTray");
  objc_msgSend(v43, "addButton:", v33);

  objc_msgSend(v20, "setModalPresentationStyle:", 2);
  return v20;
}

id sub_100292720(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  NSString v6;
  id v7;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "systemImageNamed:withConfiguration:", v6, a3);

  return v7;
}

id sub_10029278C()
{
  return sub_100292318();
}

id sub_1002927A8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_100292284();
  *a1 = result;
  return result;
}

uint64_t sub_1002927D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100292A3C();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100292824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100292A3C();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100292874(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100292A3C();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_100292898()
{
  uint64_t v0;

  sub_1000DB418((_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor), *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor + 24));
  sub_1002B815C();
}

uint64_t sub_100292900()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor + 32);
  sub_1000DB418(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 16))(v2);
}

void sub_100292978()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.Coordinator", 19, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for NotificationsOptInLocationPermissionView.Coordinator()
{
  return objc_opt_self(_TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator);
}

ValueMetadata *type metadata accessor for NotificationsOptInLocationPermissionView()
{
  return &type metadata for NotificationsOptInLocationPermissionView;
}

unint64_t sub_1002929F4()
{
  unint64_t result;

  result = qword_100BD2088;
  if (!qword_100BD2088)
  {
    result = swift_getWitnessTable(&unk_10098E1F4, &type metadata for NotificationsOptInLocationPermissionView);
    atomic_store(result, (unint64_t *)&qword_100BD2088);
  }
  return result;
}

void *sub_100292A30()
{
  return &protocol witness table for Never;
}

unint64_t sub_100292A3C()
{
  unint64_t result;

  result = qword_100BD2090;
  if (!qword_100BD2090)
  {
    result = swift_getWitnessTable(&unk_10098E17C, &type metadata for NotificationsOptInLocationPermissionView);
    atomic_store(result, (unint64_t *)&qword_100BD2090);
  }
  return result;
}

id sub_100292A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v5;
  NSString v9;
  unint64_t v10;
  NSString v11;
  id v12;

  v9 = String._bridgeToObjectiveC()();
  v10 = swift_bridgeObjectRelease(a2).n128_u64[0];
  if (a4)
  {
    v11 = String._bridgeToObjectiveC()();
    v10 = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(v5, "initWithTitle:detailText:icon:", v9, v11, a5, *(double *)&v10);

  return v12;
}

void sub_100292B14(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v7;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(a4, "setTitle:forState:", v7, a3, swift_bridgeObjectRelease(a2).n128_f64[0]);

}

id sub_100292B74(uint64_t *a1)
{
  uint64_t v1;
  objc_class *v2;
  id v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  _QWORD v13[5];
  _QWORD v14[3];
  uint64_t v15;
  _UNKNOWN **v16;

  v15 = *a1;
  v1 = v15;
  v16 = &off_100B6A4A0;
  v14[0] = a1;
  v2 = (objc_class *)type metadata accessor for NotificationsOptInLocationPermissionView.Coordinator();
  v3 = objc_allocWithZone(v2);
  v4 = sub_100068EB4((uint64_t)v14, v15);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
  v9 = *v7;
  v13[3] = v1;
  v13[4] = &off_100B6A4A0;
  v13[0] = v9;
  sub_100043CA8((uint64_t)v13, (uint64_t)v3 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor);
  v12.receiver = v3;
  v12.super_class = v2;
  v10 = objc_msgSendSuper2(&v12, "init");
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v14);
  return v10;
}

uint64_t sub_100292C60@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[3];
  uint64_t v31;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BD2150);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v31)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BC4480);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = type metadata accessor for ConditionDetailDynamicContentViewBuilder();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (result)
  {
    v15 = result;
    v16 = sub_100068EB4((uint64_t)v30, v31);
    __chkstk_darwin(v16);
    v18 = (_QWORD *)((char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v19 + 16))(v18);
    v20 = *v18;
    v21 = type metadata accessor for ConditionDetailInteractor();
    v29[3] = v21;
    v29[4] = &off_100B65250;
    v29[0] = v20;
    v22 = type metadata accessor for ConditionDetailModule();
    v23 = (_QWORD *)swift_allocObject(v22, 72, 7);
    v24 = sub_100068EB4((uint64_t)v29, v21);
    __chkstk_darwin(v24);
    v26 = (_QWORD *)((char *)v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v27 + 16))(v26);
    v28 = *v26;
    v23[5] = v21;
    v23[6] = &off_100B65250;
    v23[2] = v28;
    v23[7] = v11;
    v23[8] = v15;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
    result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
    a2[3] = v22;
    a2[4] = &off_100B903F8;
    *a2 = v23;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_100292E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;

  v0 = type metadata accessor for ConditionDetailDynamicContentViewBuilder();
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_1002931E0, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BD2148);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_100293200, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BD2150);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_100293340, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BD2158);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_100293560, 0, v6);
  swift_release(v7);
  v8 = sub_1000BA294(&qword_100BD2160);
  v9 = RegistrationContainer.register<A>(_:name:factory:)(v8, 0, 0, sub_1002935FC, 0, v8);
  swift_release(v9);
  v10 = sub_1000BA294(&qword_100BD2168);
  v11 = RegistrationContainer.register<A>(_:name:factory:)(v10, 0, 0, sub_100293D20, 0, v10);
  swift_release(v11);
  v12 = sub_1000BA294(&qword_100BD2170);
  v13 = RegistrationContainer.register<A>(_:name:factory:)(v12, 0, 0, sub_100293FEC, 0, v12);
  swift_release(v13);
  v14 = sub_1000BA294(&qword_100BD2178);
  v15 = RegistrationContainer.register<A>(_:name:factory:)(v14, 0, 0, sub_100294528, 0, v14);
  swift_release(v15);
  v16 = sub_1000BA294(&qword_100BD2180);
  v17 = RegistrationContainer.register<A>(_:name:factory:)(v16, 0, 0, sub_1002945CC, 0, v16);
  swift_release(v17);
  v18 = sub_1000BA294(&qword_100BD2188);
  v19 = RegistrationContainer.register<A>(_:name:factory:)(v18, 0, 0, sub_100294608, 0, v18);
  swift_release(v19);
  v20 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for TemperatureComparisonTextBuilder, 0, 0, LocationSearchEntityFromStringResolver.init(), 0, &type metadata for TemperatureComparisonTextBuilder);
  swift_release(v20);
  v21 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for HumidityComparisonTextBuilder, 0, 0, LocationSearchEntityFromStringResolver.init(), 0, &type metadata for HumidityComparisonTextBuilder);
  swift_release(v21);
  v22 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for VisibilityComparisonTextBuilder, 0, 0, sub_1002946A8, 0, &type metadata for VisibilityComparisonTextBuilder);
  swift_release(v22);
  v23 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for WindComparisonTextBuilder, 0, 0, LocationSearchEntityFromStringResolver.init(), 0, &type metadata for WindComparisonTextBuilder);
  swift_release(v23);
  v24 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for UVIndexComparisonTextBuilder, 0, 0, LocationSearchEntityFromStringResolver.init(), 0, &type metadata for UVIndexComparisonTextBuilder);
  swift_release(v24);
  v25 = sub_1000BA294(&qword_100BC4480);
  v26 = RegistrationContainer.register<A>(_:name:factory:)(v25, 0, 0, sub_100294700, 0, v25);
  swift_release(v26);
  v27 = sub_1000BA294(&qword_100BD2190);
  v28 = RegistrationContainer.register<A>(_:name:factory:)(v27, 0, 0, sub_1002949E8, 0, v27);
  swift_release(v28);
  v29 = sub_1000BA294(&qword_100BD2198);
  v30 = RegistrationContainer.register<A>(_:name:factory:)(v29, 0, 0, sub_100294A28, 0, v29);
  swift_release(v30);
  v31 = sub_1000BA294(&qword_100BCF668);
  v32 = RegistrationContainer.register<A>(_:name:factory:)(v31, 0, 0, sub_100294AC8, 0, v31);
  swift_release(v32);
  v33 = sub_1000BA294(&qword_100BD21A0);
  v34 = RegistrationContainer.register<A>(_:name:factory:)(v33, 0, 0, sub_100294B68, 0, v33);
  *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  return result;
}

uint64_t sub_1002931E0()
{
  uint64_t v0;

  v0 = type metadata accessor for ConditionDetailDynamicContentViewBuilder();
  return swift_allocObject(v0, 16, 7);
}

uint64_t sub_100293200@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v6, 0x6E6F697461636F4CLL, 0xEE00656C75646F4DLL, v6, v4, v5);
  if (result)
  {
    v8 = result;
    v9 = Tracker.chain(name:identifier:)(0x6F697469646E6F63, 0xEF6C69617465446ELL, 0, 0);
    swift_release(v8);
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BC43F8);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v15)
    {
      a2[3] = (uint64_t)&type metadata for ConditionDetailTracker;
      a2[4] = (uint64_t)&off_100B91540;
      v13 = swift_allocObject(&unk_100B68A08, 64, 7);
      *a2 = v13;
      *(_QWORD *)(v13 + 16) = v9;
      return sub_10003C800(&v14, v13 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100293340@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  ValueWitnessTable *v23;
  uint64_t *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v32;
  if (v32)
  {
    v28 = v33;
    v9 = a1[3];
    v10 = a1[4];
    sub_1000DB418(a1, v9);
    v11 = sub_1000BA294(&qword_100BD2148);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
    if (v31)
    {
      v12 = sub_100068EB4((uint64_t)v30, v31);
      __chkstk_darwin(v12);
      v14 = (_OWORD *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v15 + 16))(v14);
      v29[3] = &type metadata for ConditionDetailTracker;
      v29[4] = &off_100B91540;
      v16 = (_OWORD *)swift_allocObject(&unk_100B68A08, 64, 7);
      v29[0] = v16;
      v17 = v14[1];
      v16[1] = *v14;
      v16[2] = v17;
      v16[3] = v14[2];
      v18 = type metadata accessor for ConditionDetailInteractor();
      v19 = (_QWORD *)swift_allocObject(v18, 72, 7);
      v20 = sub_100068EB4((uint64_t)v29, (uint64_t)&type metadata for ConditionDetailTracker);
      __chkstk_darwin(v20);
      v22 = (_OWORD *)((char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      ((void (*)(uint64_t, uint64_t *))v23->initializeWithCopy)((uint64_t)v22, v24);
      v19[7] = &type metadata for ConditionDetailTracker;
      v19[8] = &off_100B91540;
      v25 = (_OWORD *)swift_allocObject(&unk_100B68A08, 64, 7);
      v26 = v22[1];
      v25[1] = *v22;
      v25[2] = v26;
      v25[3] = v22[2];
      v19[2] = v8;
      v19[3] = v28;
      v19[4] = v25;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
      a2[3] = v18;
      a2[4] = &off_100B65250;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100293560@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BCF650);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v9)
  {
    v7 = type metadata accessor for ConditionDetailInputFactory();
    swift_allocObject(v7, 80, 7);
    result = sub_1002745C8(&v8);
    a2[3] = v7;
    a2[4] = (uint64_t)&off_100B680E0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002935FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t **v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD v84[9];
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD v88[3];
  uint64_t v89;
  _QWORD v90[3];
  uint64_t v91;
  _QWORD v92[3];
  uint64_t v93;
  _QWORD v94[3];
  uint64_t v95;
  _QWORD v96[3];
  uint64_t v97;
  _QWORD v98[5];
  _QWORD v99[5];
  char v100[24];
  uint64_t v101;
  _QWORD v102[3];
  uint64_t v103;
  _QWORD v104[3];
  uint64_t v105;
  _QWORD v106[3];
  uint64_t v107;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BCF660);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v107)
  {
    __break(1u);
    goto LABEL_15;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BD2168);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!v105)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BD21F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v14 = result;
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1000BA294(&qword_100BD2170);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v17, v17, v15, v16);
  if (!v103)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = sub_1000BA294(&qword_100BCF670);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v18, v19);
  if (!v101)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v21 = type metadata accessor for ConditionDetailLegendViewModelFactory();
  v22 = swift_allocObject(v21, 16, 7);
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BCF680);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  if (!v99[3])
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v26 = a1[3];
  v27 = a1[4];
  sub_1000DB418(a1, v26);
  v28 = sub_1000BA294(&qword_100BD21F8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
  if (!v98[3])
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v29 = a1[3];
  v30 = a1[4];
  sub_1000DB418(a1, v29);
  v31 = sub_1000BA294(&qword_100BC43E8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v31, v31, v29, v30);
  if (!v97)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v32 = a1[3];
  v33 = a1[4];
  sub_1000DB418(a1, v32);
  v34 = sub_1000BA294(&qword_100BD2198);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v34, v34, v32, v33);
  if (!v95)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v35 = a1[3];
  v36 = a1[4];
  sub_1000DB418(a1, v35);
  v37 = sub_1000BA294(&qword_100BCF668);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v37, v37, v35, v36);
  if (!v93)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v38 = a1[3];
  v39 = a1[4];
  sub_1000DB418(a1, v38);
  v40 = sub_1000BA294(&qword_100BD21A0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v40, v40, v38, v39);
  if (!v91)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v85 = v22;
  v86 = v14;
  v87 = a2;
  v41 = a1[3];
  v42 = a1[4];
  sub_1000DB418(a1, v41);
  v43 = sub_1000BA294(&qword_100BD2178);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v43, v43, v41, v42);
  if (v89)
  {
    v44 = sub_100068EB4((uint64_t)v106, v107);
    v84[8] = v84;
    __chkstk_darwin(v44);
    v46 = (_QWORD *)((char *)v84 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v47 + 16))(v46);
    v48 = sub_100068EB4((uint64_t)v104, v105);
    v84[7] = v84;
    __chkstk_darwin(v48);
    v50 = (_QWORD *)((char *)v84 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v51 + 16))(v50);
    v52 = sub_100068EB4((uint64_t)v102, v103);
    v84[6] = v84;
    __chkstk_darwin(v52);
    v54 = (_QWORD *)((char *)v84 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v55 + 16))(v54);
    v56 = sub_100068EB4((uint64_t)v96, v97);
    v84[5] = v84;
    __chkstk_darwin(v56);
    v58 = (_QWORD *)((char *)v84 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v59 + 16))(v58);
    v60 = sub_100068EB4((uint64_t)v94, v95);
    v84[4] = v84;
    __chkstk_darwin(v60);
    v62 = (char *)v84 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v63 + 16))(v62);
    v64 = sub_100068EB4((uint64_t)v92, v93);
    v84[3] = v84;
    __chkstk_darwin(v64);
    v66 = (char *)v84 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v67 + 16))(v66);
    v68 = sub_100068EB4((uint64_t)v90, v91);
    v84[2] = v84;
    __chkstk_darwin(v68);
    v70 = (char *)v84 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v71 + 16))(v70);
    v72 = sub_100068EB4((uint64_t)v88, v89);
    v84[1] = v84;
    __chkstk_darwin(v72);
    v74 = (uint64_t **)((char *)v84 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v75 + 16))(v74);
    v76 = *v46;
    v77 = *v50;
    v78 = *v54;
    v79 = *v58;
    v80 = *v74;
    v81 = v85;
    swift_retain();
    v82 = sub_100295260(v76, v77, v86, v78, (uint64_t)v100, v81, (uint64_t)v99, (uint64_t)v98, v79, (uint64_t)v62, (uint64_t)v66, (uint64_t)v70, v80);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v88);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v90);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v92);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v94);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v96);
    swift_release(v81);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v102);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v104);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v106);
    result = type metadata accessor for ConditionDetailViewModelFactory(0);
    v83 = v87;
    v87[3] = result;
    v83[4] = &off_100B969F0;
    *v83 = v82;
    return result;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100293D20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  char v45[24];
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  void *v49;

  v4 = type metadata accessor for ChanceOfRainChartHeaderStringBuilder(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v39 - v9;
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BD2190);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (v48)
  {
    v42 = v8;
    v43 = v4;
    v44 = a2;
    v15 = type metadata accessor for HumidityChartHeaderStringBuilder(0);
    swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    v16 = HumidityChartHeaderStringBuilder.init(humidityTitleStringBuilder:)(&v47);
    v48 = v15;
    v49 = &protocol witness table for HumidityChartHeaderStringBuilder;
    *(_QWORD *)&v47 = v16;
    v17 = a1[3];
    v18 = a1[4];
    sub_1000DB418(a1, v17);
    v19 = sub_1000BA294(&qword_100BD21E8);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
    if (v46)
    {
      v20 = type metadata accessor for PrecipitationTotalChartHeaderStringBuilder(0);
      swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      v41 = PrecipitationTotalChartHeaderStringBuilder.init(precipitationTotalHeroStringBuilder:)(v45);
      v21 = type metadata accessor for PressureChartHeaderStringBuilder(0);
      swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      v40 = PressureChartHeaderStringBuilder.init()();
      v22 = type metadata accessor for TemperatureChartHeaderStringBuilder(0);
      swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      v39 = TemperatureChartHeaderStringBuilder.init()();
      v23 = type metadata accessor for TemperatureFeelsLikeChartHeaderStringBuilder(0);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      v24 = TemperatureFeelsLikeChartHeaderStringBuilder.init()();
      v25 = type metadata accessor for UVIndexChartHeaderStringBuilder(0);
      swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
      v26 = UVIndexChartHeaderStringBuilder.init()();
      v27 = type metadata accessor for VisibilityChartHeaderStringBuilder(0);
      swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
      v28 = VisibilityChartHeaderStringBuilder.init()();
      v29 = type metadata accessor for WindChartHeaderStringBuilder(0);
      swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
      v30 = WindChartHeaderStringBuilder.init()();
      ChanceOfRainChartHeaderStringBuilder.init()();
      v31 = type metadata accessor for ConditionDetailChartHeaderViewModelFactory();
      v32 = (_QWORD *)swift_allocObject(v31, 376, 7);
      v33 = v5;
      v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v36 = (uint64_t)v42;
      v35 = v43;
      v34(v42, v10, v43);
      v37 = sub_100295788(&v47, v41, v40, v39, v24, v26, v28, v30, v36, v32);
      result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, v35);
      v38 = v44;
      v44[3] = v31;
      v38[4] = &off_100B90628;
      *v38 = v37;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_100293FEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[6];
  char v54;
  __int128 v55;
  ValueMetadata *v56;
  _UNKNOWN **v57;
  uint64_t v58;
  _QWORD v59[5];
  char v60;
  _QWORD v61[5];
  char v62;
  _QWORD v63[5];
  _QWORD v64[5];
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  __int128 v79;
  uint64_t v80;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BD21B8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v80)
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BD2188);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!v78)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BD21C0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (!v76)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = a1[3];
  v15 = a1[4];
  sub_1000DB418(a1, v14);
  v16 = sub_1000BA294(&qword_100BD21C8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v16, v16, v14, v15);
  if (!v74)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BD21D0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (!v72)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BD21D8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (!v70)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BD21E0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  if (!v68)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v26 = a1[3];
  v27 = a1[4];
  sub_1000DB418(a1, v26);
  v28 = sub_1000BA294(&qword_100BCF670);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
  if (!v66)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v29 = a1[3];
  v30 = a1[4];
  sub_1000DB418(a1, v29);
  v31 = sub_1000BA294(&qword_100BCF678);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v31, v31, v29, v30);
  if (!v64[3])
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v32 = a1[3];
  v33 = a1[4];
  sub_1000DB418(a1, v32);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(&type metadata for TemperatureComparisonTextBuilder, &type metadata for TemperatureComparisonTextBuilder, v32, v33);
  if ((v62 & 1) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v63[3] = &type metadata for TemperatureComparisonTextBuilder;
  v63[4] = &off_100B89F90;
  v34 = a1[3];
  v35 = a1[4];
  sub_1000DB418(a1, v34);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(&type metadata for HumidityComparisonTextBuilder, &type metadata for HumidityComparisonTextBuilder, v34, v35);
  if ((v60 & 1) != 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v61[3] = &type metadata for HumidityComparisonTextBuilder;
  v61[4] = &off_100B6BE50;
  v36 = a1[3];
  v37 = a1[4];
  sub_1000DB418(a1, v36);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(&type metadata for VisibilityComparisonTextBuilder, &type metadata for VisibilityComparisonTextBuilder, v36, v37);
  if (!v58)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v59[4] = &off_100B8D600;
  v59[3] = &type metadata for VisibilityComparisonTextBuilder;
  v59[0] = v58;
  v38 = a1[3];
  v39 = a1[4];
  sub_1000DB418(a1, v38);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(&type metadata for WindComparisonTextBuilder, &type metadata for WindComparisonTextBuilder, v38, v39);
  if ((v54 & 1) != 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v56 = &type metadata for WindComparisonTextBuilder;
  v57 = &off_100B6D860;
  v40 = a1[3];
  v41 = a1[4];
  sub_1000DB418(a1, v40);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(&type metadata for UVIndexComparisonTextBuilder, &type metadata for UVIndexComparisonTextBuilder, v40, v41);
  if ((v53[0] & 0x100) != 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)((char *)&v53[3] + 2) = &type metadata for UVIndexComparisonTextBuilder;
  *(_QWORD *)((char *)&v53[4] + 2) = &off_100B9CB48;
  v42 = a1[3];
  v43 = a1[4];
  sub_1000DB418(a1, v42);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v53, &type metadata for Bool, 0xD000000000000012, 0x80000001009F5CF0, &type metadata for Bool, v42, v43);
  v44 = v53[0];
  if (LOBYTE(v53[0]) != 2)
  {
    v45 = sub_100068EB4((uint64_t)v77, v78);
    __chkstk_darwin(v45);
    v47 = (char *)&v52 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v48 + 16))(v47);
    *(_QWORD *)&v51 = v61;
    *((_QWORD *)&v51 + 1) = v59;
    *(_QWORD *)&v50 = v64;
    *((_QWORD *)&v50 + 1) = v63;
    v49 = sub_1002958D4(&v79, (uint64_t)v47, &v75, &v73, &v71, &v69, &v67, &v65, v50, v51, &v55, (__int128 *)((char *)v53 + 2), v44 & 1);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v77);
    result = (_QWORD *)type metadata accessor for ConditionDetailPlatterViewModelFactory();
    a2[3] = (uint64_t)result;
    a2[4] = (uint64_t)&off_100B66998;
    *a2 = v49;
    return result;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100294528@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BD21B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v10)
  {
    v7 = type metadata accessor for PrecipitationTotalConditionDetailPlatterViewModelFactory();
    v8 = swift_allocObject(v7, 57, 7);
    *(_BYTE *)(v8 + 56) = 0;
    result = sub_10003C800(&v9, v8 + 16);
    a2[3] = v7;
    a2[4] = (uint64_t)&off_100B7EA30;
    *a2 = v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002945CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for ConstantConditionsStringBuilder(0);
  result = ConstantConditionsStringBuilder.__allocating_init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for ConstantConditionsStringBuilder;
  *a1 = result;
  return result;
}

uint64_t sub_100294608@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BD21A8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v9)
  {
    a2[3] = (uint64_t)&type metadata for UVIDescriptorViewModelFactory;
    a2[4] = (uint64_t)&off_100B5FBB0;
    v7 = swift_allocObject(&unk_100B689E0, 56, 7);
    *a2 = v7;
    return sub_10003C800(&v8, v7 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002946A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = type metadata accessor for VisibilityFormatter(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

uint64_t sub_100294700(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v30;
  v7 = v31;
  v9 = v29;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BD2158);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v26, v27);
  v24 = type metadata accessor for ConditionDetailInputFactory();
  v25 = &off_100B680E0;
  v23[0] = v13;
  sub_100043CA8((uint64_t)v23, (uint64_t)v22);
  v14 = swift_allocObject(&unk_100B68968, 56, 7);
  sub_10003C800(v22, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  v15 = swift_allocObject(&unk_100B68990, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100294C2C;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BD2160);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v27)
  {
    v19 = *sub_1000DB418(v26, v27);
    v24 = type metadata accessor for ConditionDetailViewModelFactory(0);
    v25 = &off_100B969F0;
    v23[0] = v19;
    sub_100043CA8((uint64_t)v23, (uint64_t)v22);
    v20 = swift_allocObject(&unk_100B689B8, 56, 7);
    sub_10003C800(v22, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
    v21 = sub_1000BA294(&qword_100BC4480);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    return sub_1001833E8(v6, v9, v8, v7, sub_100182F48, 0, sub_1000A22C0, v15, sub_100294C58, v20);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100294958(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  sub_100274784(a1, a3);
}

uint64_t sub_1002949A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_10084C388(a1, a3);
}

uint64_t sub_1002949E8@<X0>(_QWORD *a1@<X8>)
{
  a1[3] = type metadata accessor for HumidityTitleStringBuilder(0);
  a1[4] = &protocol witness table for HumidityTitleStringBuilder;
  sub_10005F164(a1);
  return HumidityTitleStringBuilder.init()();
}

uint64_t sub_100294A28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BD2190);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v9)
  {
    a2[3] = (uint64_t)&type metadata for LollipopDetailViewModelFactory;
    a2[4] = (uint64_t)&off_100B6DB80;
    v7 = swift_allocObject(&unk_100B68940, 56, 7);
    *a2 = v7;
    return sub_10003C800(&v8, v7 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100294AC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BCF670);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v9)
  {
    a2[3] = (uint64_t)&type metadata for LollipopDataFactory;
    a2[4] = (uint64_t)&off_100B90A38;
    v7 = swift_allocObject(&unk_100B68918, 56, 7);
    *a2 = v7;
    return sub_10003C800(&v8, v7 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100294B68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BD2188);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v9)
  {
    a2[3] = (uint64_t)&type metadata for ConditionDetailLollipopPlatterViewModelFactory;
    a2[4] = (uint64_t)&off_100B9C3E8;
    v7 = swift_allocObject(&unk_100B688F0, 56, 7);
    *a2 = v7;
    return sub_10003C800(&v8, v7 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100294C08()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100294C2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100294958(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100294C34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100294C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002949A0(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100294C60(__int128 *a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, __int128 *a6, __int128 *a7, __int128 *a8, __int128 *a9, __int128 *a10, __int128 *a11, __int128 *a12, __int128 *a13, __int128 *a14, char a15, uint64_t a16)
{
  uint64_t v23;
  __int128 v24;

  *(_QWORD *)(a16 + 80) = &type metadata for UVIDescriptorViewModelFactory;
  *(_QWORD *)(a16 + 88) = &off_100B5FBB0;
  v23 = swift_allocObject(&unk_100B689E0, 56, 7);
  *(_QWORD *)(a16 + 56) = v23;
  v24 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 48) = *(_QWORD *)(a2 + 32);
  sub_10003C800(a1, a16 + 16);
  sub_10003C800(a3, a16 + 96);
  sub_10003C800(a4, a16 + 136);
  sub_10003C800(a5, a16 + 176);
  sub_10003C800(a6, a16 + 216);
  sub_10003C800(a7, a16 + 256);
  sub_10003C800(a8, a16 + 496);
  sub_10003C800(a9, a16 + 536);
  sub_10003C800(a10, a16 + 296);
  sub_10003C800(a11, a16 + 336);
  sub_10003C800(a12, a16 + 376);
  sub_10003C800(a13, a16 + 416);
  sub_10003C800(a14, a16 + 456);
  *(_BYTE *)(a16 + 576) = a15;
  return a16;
}

_QWORD *sub_100294DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  _UNKNOWN **v58;
  __int128 v59;
  ValueMetadata *v60;
  _UNKNOWN **v61;
  _QWORD v62[5];
  _QWORD v63[5];
  _QWORD v64[5];
  _QWORD v65[5];
  _QWORD v66[5];
  _QWORD v67[5];
  _QWORD v68[6];

  v53 = (_QWORD *)a7;
  v54 = (_QWORD *)a8;
  v51 = a3;
  v52 = (_QWORD *)a5;
  v47 = a13;
  v50 = type metadata accessor for UnfairLock.Options(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68[3] = type metadata accessor for DetailChartViewModelFactory();
  v68[4] = &off_100B64C00;
  v68[0] = a1;
  v67[3] = type metadata accessor for ConditionDetailChartHeaderViewModelFactory();
  v67[4] = &off_100B90628;
  v67[0] = a2;
  v66[3] = type metadata accessor for ConditionDetailPlatterViewModelFactory();
  v66[4] = &off_100B66998;
  v66[0] = a4;
  v65[3] = type metadata accessor for ConditionDetailLegendViewModelFactory();
  v65[4] = &off_100B68688;
  v65[0] = a6;
  v64[3] = type metadata accessor for NewsArticleComponentViewModelFactory();
  v64[4] = &off_100B7D058;
  v64[0] = a9;
  v63[3] = &type metadata for LollipopDetailViewModelFactory;
  v63[4] = &off_100B6DB80;
  v19 = swift_allocObject(&unk_100B68940, 56, 7);
  v63[0] = v19;
  v20 = *(_OWORD *)(a10 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a10;
  *(_OWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 48) = *(_QWORD *)(a10 + 32);
  v62[3] = &type metadata for LollipopDataFactory;
  v62[4] = &off_100B90A38;
  v21 = swift_allocObject(&unk_100B68918, 56, 7);
  v62[0] = v21;
  v22 = *(_OWORD *)(a11 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a11;
  *(_OWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(a11 + 32);
  v60 = &type metadata for ConditionDetailLollipopPlatterViewModelFactory;
  v61 = &off_100B9C3E8;
  v23 = swift_allocObject(&unk_100B688F0, 56, 7);
  *(_QWORD *)&v59 = v23;
  v24 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a12;
  *(_OWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 48) = *(_QWORD *)(a12 + 32);
  v57 = type metadata accessor for PrecipitationTotalConditionDetailPlatterViewModelFactory();
  v58 = &off_100B7EA30;
  *(_QWORD *)&v56 = v47;
  sub_100120350();
  a14[65] = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0x6F697469646E6F43, 0xEF6C69617465446ELL);
  v25 = sub_1000BA294(&qword_100BC28E8);
  v26 = swift_allocObject(v25, ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72), *(unsigned __int8 *)(v48 + 80) | 7);
  *(_OWORD *)(v26 + 16) = xmmword_10097CA50;
  static UnfairLock.Options.dataSynchronization.getter(v26);
  v55 = v26;
  v27 = sub_100295A38();
  v28 = sub_1000BA294(&qword_100BC28F8);
  v29 = sub_100121100();
  v30 = v49;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v28, v29, v50, v27);
  v31 = type metadata accessor for UnfairLock(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  a14[66] = UnfairLock.init(options:)(v30);
  v32 = (uint64_t)a14 + OBJC_IVAR____TtC7Weather31ConditionDetailViewModelFactory_cachedModel;
  v33 = type metadata accessor for ConditionDetailViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0(v32, 1, 1, v33);
  v34 = (uint64_t)a14 + OBJC_IVAR____TtC7Weather31ConditionDetailViewModelFactory_cachedChartModelInputs;
  v35 = type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs(0);
  _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v35);
  sub_100043CA8((uint64_t)v68, (uint64_t)(a14 + 2));
  sub_100043CA8((uint64_t)v67, (uint64_t)(a14 + 7));
  v36 = v51;
  a14[12] = v51;
  sub_100043CA8((uint64_t)v66, (uint64_t)(a14 + 13));
  v37 = v52;
  sub_100043CA8((uint64_t)v52, (uint64_t)(a14 + 18));
  sub_100043CA8((uint64_t)v65, (uint64_t)(a14 + 23));
  v38 = v53;
  sub_100043CA8((uint64_t)v53, (uint64_t)(a14 + 28));
  v39 = v54;
  sub_100043CA8((uint64_t)v54, (uint64_t)(a14 + 33));
  sub_100043CA8((uint64_t)v64, (uint64_t)(a14 + 38));
  sub_100043CA8((uint64_t)v63, (uint64_t)(a14 + 43));
  sub_100043CA8((uint64_t)v62, (uint64_t)(a14 + 48));
  v40 = sub_1000BA294(&qword_100BD2200);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  v41 = swift_retain();
  a14[53] = Cache.init()(v41);
  v42 = sub_1000BA294(&qword_100BD2208);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v44 = Cache.init()(v43);
  swift_release(v36);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v62);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v63);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v39);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v65);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v66);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v67);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v68);
  a14[54] = v44;
  sub_10003C800(&v59, (uint64_t)(a14 + 55));
  sub_10003C800(&v56, (uint64_t)(a14 + 60));
  return a14;
}

_QWORD *sub_100295260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  _QWORD *v70;
  _UNKNOWN **v71;
  _QWORD v72[3];
  ValueMetadata *v73;
  _UNKNOWN **v74;
  _QWORD v75[3];
  ValueMetadata *v76;
  _UNKNOWN **v77;
  _QWORD v78[3];
  ValueMetadata *v79;
  _UNKNOWN **v80;
  _QWORD v81[3];
  uint64_t v82;
  _UNKNOWN **v83;
  _QWORD v84[3];
  uint64_t v85;
  _UNKNOWN **v86;
  _QWORD v87[3];
  uint64_t v88;
  _UNKNOWN **v89;
  _QWORD v90[3];
  uint64_t v91;
  _UNKNOWN **v92;
  _QWORD v93[6];

  v67 = a7;
  v68 = a8;
  v65 = a3;
  v66 = a5;
  v17 = (_QWORD *)*a13;
  v63 = a13;
  v64 = v17;
  v18 = type metadata accessor for DetailChartViewModelFactory();
  v93[3] = v18;
  v93[4] = &off_100B64C00;
  v93[0] = a1;
  v91 = type metadata accessor for ConditionDetailChartHeaderViewModelFactory();
  v92 = &off_100B90628;
  v90[0] = a2;
  v88 = type metadata accessor for ConditionDetailPlatterViewModelFactory();
  v89 = &off_100B66998;
  v87[0] = a4;
  v85 = type metadata accessor for ConditionDetailLegendViewModelFactory();
  v86 = &off_100B68688;
  v84[0] = a6;
  v82 = type metadata accessor for NewsArticleComponentViewModelFactory();
  v83 = &off_100B7D058;
  v81[0] = a9;
  v79 = &type metadata for LollipopDetailViewModelFactory;
  v80 = &off_100B6DB80;
  v19 = swift_allocObject(&unk_100B68940, 56, 7);
  v78[0] = v19;
  v20 = *(_OWORD *)(a10 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a10;
  *(_OWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 48) = *(_QWORD *)(a10 + 32);
  v76 = &type metadata for LollipopDataFactory;
  v77 = &off_100B90A38;
  v21 = swift_allocObject(&unk_100B68918, 56, 7);
  v75[0] = v21;
  v22 = *(_OWORD *)(a11 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a11;
  *(_OWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(a11 + 32);
  v73 = &type metadata for ConditionDetailLollipopPlatterViewModelFactory;
  v74 = &off_100B9C3E8;
  v23 = swift_allocObject(&unk_100B688F0, 56, 7);
  v72[0] = v23;
  v24 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a12;
  *(_OWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 48) = *(_QWORD *)(a12 + 32);
  v70 = v64;
  v71 = &off_100B7EA30;
  v69[0] = v63;
  v25 = type metadata accessor for ConditionDetailViewModelFactory(0);
  v64 = (_QWORD *)swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = sub_100068EB4((uint64_t)v93, v18);
  __chkstk_darwin(v26);
  v63 = (uint64_t *)((char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void))(v28 + 16))();
  v29 = sub_100068EB4((uint64_t)v90, v91);
  __chkstk_darwin(v29);
  v31 = (uint64_t *)((char *)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  v33 = sub_100068EB4((uint64_t)v87, v88);
  __chkstk_darwin(v33);
  v35 = (uint64_t *)((char *)&v63 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v36 + 16))(v35);
  v37 = sub_100068EB4((uint64_t)v84, v85);
  __chkstk_darwin(v37);
  v39 = (uint64_t *)((char *)&v63 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v40 + 16))(v39);
  v41 = sub_100068EB4((uint64_t)v81, v82);
  __chkstk_darwin(v41);
  v43 = (uint64_t *)((char *)&v63 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v44 + 16))(v43);
  v45 = sub_100068EB4((uint64_t)v78, (uint64_t)v79);
  __chkstk_darwin(v45);
  v47 = (char *)&v63 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v48 + 16))(v47);
  v49 = sub_100068EB4((uint64_t)v75, (uint64_t)v76);
  __chkstk_darwin(v49);
  v51 = (char *)&v63 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v52 + 16))(v51);
  v53 = sub_100068EB4((uint64_t)v72, (uint64_t)v73);
  __chkstk_darwin(v53);
  v55 = (char *)&v63 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v56 + 16))(v55);
  v57 = sub_100068EB4((uint64_t)v69, (uint64_t)v70);
  __chkstk_darwin(v57);
  v59 = (uint64_t *)((char *)&v63 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v60 + 16))(v59);
  v61 = sub_100294DD4(*v63, *v31, v65, *v35, v66, *v39, v67, v68, *v43, (uint64_t)v47, (uint64_t)v51, (uint64_t)v55, *v59, v64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v69);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v75);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v78);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v81);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v84);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v87);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v90);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v93);
  return v61;
}

_QWORD *sub_100295788(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v18;
  _QWORD *v19;

  a10[10] = type metadata accessor for PrecipitationTotalChartHeaderStringBuilder(0);
  a10[11] = &protocol witness table for PrecipitationTotalChartHeaderStringBuilder;
  a10[7] = a2;
  a10[15] = type metadata accessor for PressureChartHeaderStringBuilder(0);
  a10[16] = &protocol witness table for PressureChartHeaderStringBuilder;
  a10[12] = a3;
  a10[20] = type metadata accessor for TemperatureChartHeaderStringBuilder(0);
  a10[21] = &protocol witness table for TemperatureChartHeaderStringBuilder;
  a10[17] = a4;
  a10[25] = type metadata accessor for TemperatureFeelsLikeChartHeaderStringBuilder(0);
  a10[26] = &protocol witness table for TemperatureFeelsLikeChartHeaderStringBuilder;
  a10[22] = a5;
  a10[30] = type metadata accessor for UVIndexChartHeaderStringBuilder(0);
  a10[31] = &protocol witness table for UVIndexChartHeaderStringBuilder;
  a10[27] = a6;
  a10[35] = type metadata accessor for VisibilityChartHeaderStringBuilder(0);
  a10[36] = &protocol witness table for VisibilityChartHeaderStringBuilder;
  a10[32] = a7;
  a10[40] = type metadata accessor for WindChartHeaderStringBuilder(0);
  a10[41] = &protocol witness table for WindChartHeaderStringBuilder;
  a10[37] = a8;
  v18 = type metadata accessor for ChanceOfRainChartHeaderStringBuilder(0);
  a10[45] = v18;
  a10[46] = &protocol witness table for ChanceOfRainChartHeaderStringBuilder;
  v19 = sub_10005F164(a10 + 42);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v19, a9, v18);
  sub_10003C800(a1, (uint64_t)(a10 + 2));
  return a10;
}

uint64_t sub_1002958D4(__int128 *a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, __int128 *a6, __int128 *a7, __int128 *a8, __int128 a9, __int128 a10, __int128 *a11, __int128 *a12, char a13)
{
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  ValueWitnessTable *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  __int128 v30;
  __int128 *v31;
  __int128 *v32;
  __int128 *v33;
  _QWORD v34[5];

  v32 = a7;
  v33 = a8;
  v31 = a6;
  v29 = a10;
  v30 = a9;
  v34[3] = &type metadata for UVIDescriptorViewModelFactory;
  v34[4] = &off_100B5FBB0;
  v18 = swift_allocObject(&unk_100B689E0, 56, 7);
  v34[0] = v18;
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(a2 + 32);
  v20 = type metadata accessor for ConditionDetailPlatterViewModelFactory();
  v21 = swift_allocObject(v20, 577, 7);
  v22 = sub_100068EB4((uint64_t)v34, (uint64_t)&type metadata for UVIDescriptorViewModelFactory);
  __chkstk_darwin(v22);
  v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(uint64_t, uint64_t))v25->initializeWithCopy)((uint64_t)v24, v26);
  v27 = sub_100294C60(a1, (uint64_t)v24, a3, a4, a5, v31, v32, v33, (__int128 *)v30, *((__int128 **)&v30 + 1), (__int128 *)v29, *((__int128 **)&v29 + 1), a11, a12, a13, v21);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v34);
  return v27;
}

unint64_t sub_100295A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC28F0;
  if (!qword_100BC28F0)
  {
    v1 = type metadata accessor for UnfairLock.Options(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UnfairLock.Options, v1);
    atomic_store(result, (unint64_t *)&qword_100BC28F0);
  }
  return result;
}

uint64_t sub_100295A78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100295AB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[3];
  uint64_t v27;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BD22B8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (v27)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1000DB418(a1, v8);
    v10 = sub_1000BA294(&qword_100BC44A8);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
    if (result)
    {
      v11 = result;
      v12 = sub_100068EB4((uint64_t)v26, v27);
      __chkstk_darwin(v12);
      v14 = (_QWORD *)((char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v15 + 16))(v14);
      v16 = *v14;
      v17 = type metadata accessor for UnitsConfigurationInteractor();
      v25[3] = v17;
      v25[4] = &off_100B84A60;
      v25[0] = v16;
      v18 = type metadata accessor for UnitsConfigurationModule();
      v19 = (_QWORD *)swift_allocObject(v18, 64, 7);
      v20 = sub_100068EB4((uint64_t)v25, v17);
      __chkstk_darwin(v20);
      v22 = (_QWORD *)((char *)v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v19[5] = v17;
      v19[6] = &off_100B84A60;
      v19[2] = v24;
      v19[7] = v11;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v25);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
      a2[3] = v18;
      a2[4] = &off_100B95660;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_100295C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v0 = sub_1000BA294(&qword_100BD22B8);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_100295D58, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BD22C0);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_100295DF0, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BD22C8);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_100295E04, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC44A8);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_100295E18, 0, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_100295D58@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v8)
  {
    v7 = type metadata accessor for UnitsConfigurationInteractor();
    result = swift_allocObject(v7, 32, 7);
    *(_QWORD *)(result + 16) = v8;
    *(_QWORD *)(result + 24) = v9;
    a2[3] = v7;
    a2[4] = (uint64_t)&off_100B84A60;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100295DF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for UnitsConfigurationInputFactory, (uint64_t)&off_100B8DC38, a1);
}

uint64_t sub_100295E04@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for UnitsConfigurationViewModelFactory, (uint64_t)&off_100B79618, a1);
}

uint64_t sub_100295E18(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v29;
  if (!v29)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v31;
  v7 = v32;
  v9 = v30;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BD22C0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v28)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v27, v28);
  v25 = type metadata accessor for UnitsConfigurationInputFactory();
  v26 = &off_100B8DC38;
  v24[0] = v13;
  sub_100043CA8((uint64_t)v24, (uint64_t)v23);
  v14 = swift_allocObject(&unk_100B68A40, 56, 7);
  sub_10003C800(v23, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
  v15 = swift_allocObject(&unk_100B68A68, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1002961A0;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BD22C8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v28)
  {
    v19 = *sub_1000DB418(v27, v28);
    v25 = type metadata accessor for UnitsConfigurationViewModelFactory();
    v26 = &off_100B79618;
    v24[0] = v19;
    sub_100043CA8((uint64_t)v24, (uint64_t)v23);
    v20 = swift_allocObject(&unk_100B68A90, 56, 7);
    sub_10003C800(v23, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
    v21 = swift_allocObject(&unk_100B68AB8, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_1002961D4;
    *(_QWORD *)(v21 + 24) = v20;
    v22 = sub_1000BA294(&qword_100BC44A8);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    return sub_100183500(v6, v9, v8, v7, sub_100182F48, 0, sub_1002961CC, v15, sub_1002961DC, v21);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100296098@<X0>(char *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v6[64];

  sub_1000DB418(a2, a2[3]);
  sub_100739988(a1, (uint64_t)v6);
  return sub_100296220((uint64_t)v6, a3);
}

uint64_t sub_1002960F4@<X0>(_QWORD *a1@<X0>, void (*a2)(_QWORD *__return_ptr, _QWORD)@<X1>, uint64_t a3@<X8>)
{
  _QWORD v5[8];

  a2(v5, *a1);
  return sub_100296220((uint64_t)v5, a3);
}

uint64_t sub_100296134@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_1004EF054(a1, a3);
}

uint64_t sub_10029617C()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002961A0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100296098(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1002961A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002961CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002960F4(a1, *(void (**)(_QWORD *__return_ptr, _QWORD))(v2 + 16), a2);
}

uint64_t sub_1002961D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100296134(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1002961DC(_OWORD *a1)
{
  uint64_t v1;
  uint64_t (*v2)(_OWORD *);
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];

  v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 10) = *(_OWORD *)((char *)a1 + 42);
  return v2(v5);
}

uint64_t sub_100296220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD22D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100296270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for LocationModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NotificationLocation(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084050(a1, (uint64_t)v10, v11);
  v12 = 1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v4) != 1)
  {
    v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    LocationModel.identifier.getter(v13);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = 0;
  }
  v14 = type metadata accessor for Location.Identifier(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, v12, 1, v14);
}

double sub_10029638C@<D0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v4 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038D20(a1, (uint64_t)v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_100021A14((uint64_t)v6, &qword_100BD4280);
    v11 = 6;
  }
  else
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v12(v10, v6, v7);
    v12(a2, v10, v7);
    v13 = type metadata accessor for ModalViewState.LocationDetailModal(0);
    swift_storeEnumTagMultiPayload(a2, v13, 6);
    v11 = 5;
  }
  v14 = type metadata accessor for ModalViewState(0);
  *(_QWORD *)&result = swift_storeEnumTagMultiPayload(a2, v14, v11).n128_u64[0];
  return result;
}

uint64_t sub_1002964C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100296508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  id v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  objc_super v27;
  uint64_t v28;

  type metadata accessor for TimeState(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  v11 = type metadata accessor for PresetAppState(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = (double *)(v14 - v13);
  v16 = v4;
  sub_1000DB868();
  sub_100084050(v28 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v10, type metadata accessor for TimeState);
  v17 = sub_10009880C();
  v18 = Date.timeIntervalSince1970.getter(v17);
  v19 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v10, v19);
  sub_1000DB868();
  sub_100084050(v28 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v15 + *(int *)(v11 + 20), type metadata accessor for LocationsState);
  sub_10009880C();
  sub_1000DB868();
  v21 = *(_QWORD *)(v28 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v20 = *(_QWORD *)(v28 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v22 = *(_QWORD *)(v28 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v23 = *(_QWORD *)(v28 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  sub_10009880C();
  *v15 = v18;
  v24 = (_QWORD *)((char *)v15 + *(int *)(v11 + 24));
  *v24 = v21;
  v24[1] = v20;
  v24[2] = v22;
  v24[3] = v23;
  sub_100298440((uint64_t)v15, (uint64_t)v16 + OBJC_IVAR____TtC7Weather26LocalPresetsViewController_currentAppState);

  v27.receiver = v16;
  v27.super_class = (Class)sub_1000B46D0();
  v25 = objc_msgSendSuper2(&v27, "initWithStyle:", 2);
  swift_release(a4);
  swift_release(a2);
  return v25;
}

void sub_1002966D4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x706F2D6F4ELL, 0xE500000000000000, "Weather/LocalPresetsViewController.swift", 40, 2);
  __break(1u);
}

void sub_100296730()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  NSString v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  _QWORD v12[4];
  objc_super v13;

  v1 = (objc_class *)sub_1000B46D0();
  v13.receiver = v0;
  v13.super_class = v1;
  v2 = objc_msgSendSuper2(&v13, "viewDidLoad");
  v3 = sub_1000C45D0((uint64_t)v2, "tableView");
  if (v3)
  {
    v4 = v3;
    v5 = sub_100079FE8((uint64_t)v3, (unint64_t *)&qword_100BD35E0, UITableViewCell_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
    v7 = sub_1000B4550();
    objc_msgSend(v4, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v7);

    sub_1001207F8(0xD000000000000017, 0x80000001009F8080, v0);
    v12[3] = v1;
    v12[0] = v0;
    objc_allocWithZone((Class)UILongPressGestureRecognizer);
    v8 = v0;
    v9 = sub_100298484(v12, (uint64_t)"didLongPressWithLongPressGesture:");
    objc_msgSend(v9, "setMinimumPressDuration:", 0.5, v12[0]);
    v10 = objc_msgSend(v8, "tableView");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "addGestureRecognizer:", v9);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002968C0(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    sub_1000D1190();
    sub_1000DD8A8();
    swift_bridgeObjectRelease();
  }
  sub_10004A298();
}

uint64_t sub_100296944(uint64_t a1, uint64_t a2)
{
  if (a2)
    return 0;
  else
    return 0x7250206465766153;
}

unint64_t sub_1002969B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 == 1)
    return 0xD00000000000002FLL;
  if (a2)
    return 0;
  sub_1000D1190();
  sub_1000DD8A8();
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (v3)
    return 0xD000000000000033;
  else
    return 0;
}

id sub_100296AB4(void *a1)
{
  NSString v2;
  Class isa;
  id v4;
  __n128 v5;
  unint64_t v6;

  v2 = sub_1000B4550();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v2, isa);

  if (IndexPath.section.getter(v5))
  {
    sub_100297A58();
  }
  else
  {
    v6 = IndexPath.row.getter();
    sub_1002977C8((uint64_t)v4, v6);
  }
  return v4;
}

void sub_100296C08(uint64_t a1, void (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;

  sub_1000BA294(&qword_100BD23E0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = type metadata accessor for PresetAppState(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v68 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - v12;
  v14 = sub_10009896C();
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_1000C0CD0();
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - v17;
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v64 - v21;
  if (IndexPath.section.getter(v20))
  {
    if (IndexPath.section.getter(v23) == 1)
    {
      v24 = v68;
      v25 = v69;
      sub_100084050((uint64_t)v69 + OBJC_IVAR____TtC7Weather26LocalPresetsViewController_currentAppState, v68, type metadata accessor for PresetAppState);
      v26 = objc_allocWithZone((Class)type metadata accessor for LocalPresetLocationsViewController(0));
      v27 = sub_10021B728(0, 0, v24);
      v28 = objc_msgSend(v25, "navigationController");
      if (v28)
      {
        v29 = v28;
        objc_msgSend(v28, "pushViewController:animated:", v27, 1);

      }
    }
    goto LABEL_17;
  }
  v65 = v13;
  v66 = v2;
  v67 = v14;
  type metadata accessor for LocalPreset(0);
  sub_1000DD8A8();
  v31 = v30;
  v32 = IndexPath.row.getter();
  if ((v32 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v32 >= *(_QWORD *)(v31 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v33 = v31
      + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
      + *(_QWORD *)(v15 + 72) * v32;
  a2 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
  v34 = v22;
  v35 = v22;
  v36 = v67;
  a2(v34, v33, v67);
  v37 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))a2)(v18, v35, v36, v37);
  sub_10048EDC0((uint64_t)v18, v7);
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    v22 = v35;
    sub_100021AA4(v7, &qword_100BD23E0);
    if (qword_100BC24C8 == -1)
    {
LABEL_10:
      v38 = type metadata accessor for Logger(0);
      sub_1000AECD4(v38, (uint64_t)qword_100CAF240);
      v39 = v66;
      v40 = ((uint64_t (*)(uint64_t, char *, uint64_t))a2)(v66, v22, v67);
      v41 = Logger.logObject.getter(v40);
      v43 = static os_log_type_t.error.getter(v41, v42);
      if (os_log_type_enabled(v41, v43))
      {
        v44 = sub_100098710(12);
        v69 = v22;
        v45 = v39;
        v46 = (uint8_t *)v44;
        v47 = sub_100098710(32);
        v71 = v47;
        *(_DWORD *)v46 = 136315138;
        v48 = URL.absoluteString.getter(v47);
        v70 = sub_1000CE1C8(v48, v49, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
        sub_1000986C4();
        sub_1000C0D7C(v45);
        _os_log_impl((void *)&_mh_execute_header, v41, v43, "failed to load local preset app state from url: %s", v46, 0xCu);
        swift_arrayDestroy(v47, 1);
        sub_1000986F0(v47);
        sub_1000986F0((uint64_t)v46);

        v50 = (uint64_t)v69;
      }
      else
      {

        sub_1000C0D7C(v39);
        v50 = (uint64_t)v22;
      }
      sub_1000C0D7C(v50);
      goto LABEL_17;
    }
LABEL_20:
    swift_once(&qword_100BC24C8, sub_1006F3984);
    goto LABEL_10;
  }
  v51 = (uint64_t)v65;
  v52 = sub_100298440(v7, (uint64_t)v65);
  v53 = v35;
  v54 = URL.deletingPathExtension()(v52);
  v55 = URL.lastPathComponent.getter(v54);
  v57 = v56;
  v58 = *(void (**)(char *, uint64_t))(v15 + 8);
  v58(v18, v36);
  v59 = v68;
  sub_100084050(v51, v68, type metadata accessor for PresetAppState);
  v60 = objc_allocWithZone((Class)type metadata accessor for LocalPresetLocationsViewController(0));
  v61 = sub_10021B728(v55, v57, v59);
  v62 = objc_msgSend(v69, "navigationController");
  if (v62)
  {
    v63 = v62;
    objc_msgSend(v62, "pushViewController:animated:", v61, 1);

    v61 = v63;
  }

  sub_100298610(v51);
  v58(v53, v36);
LABEL_17:
  sub_100098640();
}

void sub_100297144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSURL *v39;
  void *v40;
  void *v41;
  unsigned int v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Class isa;
  uint64_t v71;
  void (*v72)(char *, unint64_t, uint64_t);
  uint64_t v73;
  void *v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  id v78;
  unint64_t v79;

  v4 = v3;
  v7 = sub_10009896C();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - v12;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v71 - v16;
  if (a2 != 1 || IndexPath.section.getter(v15))
    goto LABEL_25;
  type metadata accessor for LocalPreset(0);
  sub_1000DD8A8();
  v19 = v18;
  v20 = *(_QWORD *)(v18 + 16);
  if (IndexPath.row.getter() >= v20)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v21 = IndexPath.row.getter();
  if ((v21 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v21 < *(_QWORD *)(v19 + 16))
  {
    v22 = v19
        + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
        + *(_QWORD *)(v8 + 72) * v21;
    v72 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v72(v17, v22, v7);
    sub_1000CC8C8();
    if (qword_100BC2218 == -1)
      goto LABEL_7;
    goto LABEL_28;
  }
  __break(1u);
LABEL_28:
  swift_once(&qword_100BC2218, sub_10001075C);
LABEL_7:
  v23 = qword_100CAED98;
  v24 = sub_1000B46D0();
  sub_1002985D4(&qword_100BD23C0, (uint64_t)&unk_10098E35C);
  v73 = v24;
  v74 = v4;
  v26 = Configurable.setting<A>(_:)(v23, v24, v25);
  v28 = v78;
  v27 = v79;
  v29 = URL.deletingPathExtension()(v26);
  v30 = URL.lastPathComponent.getter(v29);
  v32 = v31;
  v75 = *(void (**)(char *, uint64_t))(v8 + 8);
  v75(v13, v7);
  if (v28 == (id)v30 && v27 == v32)
  {
    swift_bridgeObjectRelease_n(v27, 2);
    v35 = v74;
    goto LABEL_15;
  }
  v34 = sub_1000D9500((uint64_t)v28, v27, v30);
  swift_bridgeObjectRelease();
  sub_1000986C4();
  v35 = v74;
  if ((v34 & 1) != 0)
  {
LABEL_15:
    v36 = qword_100CAED98;
    v78 = 0;
    v79 = 0xE000000000000000;
    sub_1002985D4(&qword_100BD23D0, (uint64_t)&unk_10098E39C);
    Updatable.save<A>(setting:value:)(v36, &v78, v73, v37);
  }
  v38 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v39);
  v41 = v40;
  v78 = 0;
  v42 = objc_msgSend(v38, "removeItemAtURL:error:", v40, &v78);

  v43 = v78;
  if (v42)
  {
    v44 = v78;
  }
  else
  {
    v45 = v78;
    v46 = _convertNSErrorToError(_:)(v43);

    swift_willThrow(v47, v48);
    if (qword_100BC24C8 != -1)
      swift_once(&qword_100BC24C8, sub_1006F3984);
    v49 = type metadata accessor for Logger(0);
    sub_1000AECD4(v49, (uint64_t)qword_100CAF240);
    v72(v10, (unint64_t)v17, v7);
    sub_1000C6630();
    v50 = sub_1000C6630();
    v51 = Logger.logObject.getter(v50);
    v53 = static os_log_type_t.error.getter(v51, v52);
    v54 = v53;
    if (os_log_type_enabled(v51, v53))
    {
      v55 = sub_100098710(22);
      v56 = (void *)sub_100098710(64);
      v73 = (uint64_t)v56;
      v78 = v56;
      *(_DWORD *)v55 = 136315394;
      LODWORD(v72) = v54;
      v57 = URL.lastPathComponent.getter(v56);
      v76 = sub_1000CE1C8(v57, v58, (uint64_t *)&v78);
      v35 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);
      sub_1000986C4();
      sub_1000DF52C((uint64_t)v10);
      *(_WORD *)(v55 + 12) = 2080;
      v76 = v46;
      sub_1000C6630();
      sub_1000BA294(&qword_100BD7910);
      v59 = String.init<A>(describing:)(&v76);
      v76 = sub_1000CE1C8(v59, v60, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);
      swift_bridgeObjectRelease();
      sub_1000C26CC();
      sub_1000C26CC();
      _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v72, "Failed to delete local preset named '%s'. error=%s", (uint8_t *)v55, 0x16u);
      v61 = v73;
      swift_arrayDestroy(v73, 2);
      sub_1000986F0(v61);
      sub_1000986F0(v55);

      sub_1000C26CC();
    }
    else
    {
      sub_1000C26CC();
      sub_1000DF52C((uint64_t)v10);
      sub_1000C26CC();
      sub_1000C26CC();

    }
  }
  v62 = objc_msgSend(v35, "tableView");
  if (v62)
  {
    v63 = v62;
    v64 = sub_1000BA294(&qword_100BD23D8);
    v65 = type metadata accessor for IndexPath(0);
    v66 = *(_QWORD *)(v65 - 8);
    v67 = *(unsigned __int8 *)(v66 + 80);
    v68 = (v67 + 32) & ~v67;
    v69 = swift_allocObject(v64, v68 + *(_QWORD *)(v66 + 72), v67 | 7);
    *(_OWORD *)(v69 + 16) = xmmword_10097CA50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v69 + v68, a3, v65);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v63, "deleteRowsAtIndexPaths:withRowAnimation:", isa, 100, swift_bridgeObjectRelease().n128_f64[0]);

    sub_1000DF52C((uint64_t)v17);
LABEL_25:
    sub_100098640();
    return;
  }
  __break(1u);
}

void sub_1002977C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  Swift::String v24;
  id v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = sub_10009896C();
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_1000BEDA4();
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  sub_1000D1190();
  sub_1000DD8A8();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v13 + 16) > a2)
  {
    v29 = (void *)a1;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * a2, v8);
    sub_1000986C4();
    v15 = URL.deletingPathExtension()(v14);
    a1 = URL.lastPathComponent.getter(v15);
    a2 = v16;
    v17 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v17(v3, v8);
    v17((uint64_t)v12, v8);
    if (qword_100BC2218 == -1)
      goto LABEL_4;
    goto LABEL_15;
  }
  __break(1u);
LABEL_15:
  swift_once(&qword_100BC2218, sub_10001075C);
LABEL_4:
  v18 = qword_100CAED98;
  v19 = sub_1000B46D0();
  sub_1002985D4(&qword_100BD23C0, (uint64_t)&unk_10098E35C);
  Configurable.setting<A>(_:)(v18, v19, v20);
  if (a1 == v30 && a2 == v31)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = sub_1000D9500(a1, a2, v30);
    sub_1000986C4();
    if ((v22 & 1) == 0)
      goto LABEL_12;
  }
  v30 = 42;
  v31 = 0xE100000000000000;
  v24._countAndFlagsBits = a1;
  v24._object = (void *)a2;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  a1 = v30;
  a2 = v31;
LABEL_12:
  static UIListContentConfiguration.subtitleCell()(v23);
  UIListContentConfiguration.text.setter(a1);
  v25 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  UIListContentConfiguration.textProperties.modify(&v30);
  sub_1000CD690();
  ((void (*)(uint64_t *, _QWORD))a2)(&v30, 0);
  v32 = v6;
  v33 = &protocol witness table for UIListContentConfiguration;
  v26 = sub_10005F164(&v30);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 16))(v26, v2, v6);
  v27 = v29;
  UITableViewCell.contentConfiguration.setter(&v30);
  objc_msgSend(v27, "setAccessoryType:", 1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  sub_100098640();
}

uint64_t sub_100297A58()
{
  uint64_t v0;
  void (*v1)(_QWORD *, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  _QWORD v8[5];

  v2 = type metadata accessor for UIListContentConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100079FBC();
  static UIListContentConfiguration.subtitleCell()(v4);
  UIListContentConfiguration.text.setter(0x736572502077654ELL);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "greenColor");
  UIListContentConfiguration.textProperties.modify(v8);
  sub_1000CD690();
  v1(v8, 0);
  v8[3] = v2;
  v8[4] = &protocol witness table for UIListContentConfiguration;
  v6 = sub_10005F164(v8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 16))(v6, v0, v2);
  UITableViewCell.contentConfiguration.setter(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
}

void sub_100297B60(void *a1)
{
  void (**v1)(_QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  __n128 v27;
  void (**v28)(_QWORD, _QWORD);
  double (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  void (**v51)(_QWORD, _QWORD);
  id v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void (**v60)(_QWORD, _QWORD);
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  void (**v65)(_QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v64 = sub_10009896C();
  v5 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  sub_1000C0CD0();
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - v7;
  sub_1000BA294(&qword_100BD23C8);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v13 = type metadata accessor for IndexPath(0);
  v66 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  __chkstk_darwin(v13);
  sub_1000BEDA4();
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - v15;
  v18 = sub_1000C45D0(v17, "tableView");
  objc_msgSend(a1, "locationInView:", v18);
  v20 = v19;
  v22 = v21;

  v65 = v1;
  v24 = sub_1000C45D0(v23, "tableView");
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, "indexPathForRowAtPoint:", v20, v22);

    if (v26)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

      v28 = (void (**)(_QWORD, _QWORD))v66;
      v29 = *(double (**)(uint64_t, uint64_t, uint64_t))(v66 + 32);
      v30 = v3;
      v31 = v67;
      v29(v12, v30, v67);
      _s7Weather24LocationCompositionStateOwst_0(v12, 0, 1, v31);
      if (_s7Weather24LocationCompositionStateOwet_0(v12, 1, v31) != 1)
      {
        v32 = v12;
        v33 = v16;
        v34.n128_f64[0] = v29((uint64_t)v16, v32, v31);
        if (IndexPath.section.getter(v34) || objc_msgSend(a1, "state") != (id)1)
        {
          ((void (**)(char *, uint64_t))v28)[1](v16, v31);
          return;
        }
        sub_1000D1190();
        sub_1000DD8A8();
        v36 = v35;
        v37 = IndexPath.row.getter();
        if ((v37 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          v28 = v65;
          if (v37 < *(_QWORD *)(v36 + 16))
          {
            v38 = v64;
            (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, v36+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v37, v64);
            sub_1000CC8C8();
            v40 = URL.deletingPathExtension()(v39);
            v31 = URL.lastPathComponent.getter(v40);
            v36 = v41;
            v42 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
            v42(v2, v38);
            v42((uint64_t)v8, v38);
            if (qword_100BC2218 == -1)
              goto LABEL_9;
            goto LABEL_23;
          }
        }
        __break(1u);
LABEL_23:
        swift_once(&qword_100BC2218, sub_10001075C);
LABEL_9:
        v43 = qword_100CAED98;
        v44 = sub_1000B46D0();
        sub_1002985D4(&qword_100BD23C0, (uint64_t)&unk_10098E35C);
        Configurable.setting<A>(_:)(v43, v44, v45);
        if (v31 == v68 && v36 == v69)
        {
          sub_1000CC8C8();
        }
        else
        {
          v47 = sub_1000D9500(v31, v36, v68);
          sub_1000986C4();
          if ((v47 & 1) == 0)
          {
            sub_100079FE8(v48, &qword_100BCBB30, UIAlertController_ptr);
            sub_1000C46A8();
            sub_1000D9C40((uint64_t)"Do you wish to apply the preset named '");
            sub_1000993F4();
            sub_1000DAE84(0xD00000000000002CLL, (uint64_t)"'? Doing so will require Weather to restart.");
            v49 = sub_1000DA520(0x50207463656C6553, 0xED00007465736572, v68, v69);
            sub_100079FE8((uint64_t)v49, &qword_100BCBB38, UIAlertAction_ptr);
            v50 = (_QWORD *)swift_allocObject(&unk_100B68B00, 40, 7);
            v50[2] = v28;
            v50[3] = v31;
            v50[4] = v36;
            v51 = v28;
            v52 = v49;
            v53 = sub_10029859C;
            v54 = 0x7463656C6553;
            v55 = 0xE600000000000000;
LABEL_20:
            v61 = sub_10055134C(v54, v55, 0, (uint64_t)v53, (uint64_t)v50);
            objc_msgSend(v52, "addAction:", v61);

            sub_100079FE8(v62, &qword_100BCBB38, UIAlertAction_ptr);
            v63 = sub_10055134C(0x6C65636E6143, 0xE600000000000000, 1, 0, 0);
            objc_msgSend(v52, "addAction:", v63);

            objc_msgSend(v28, "presentViewController:animated:completion:", v52, 1, 0);
            (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v67);
            return;
          }
        }
        sub_100079FE8(v48, &qword_100BCBB30, UIAlertController_ptr);
        sub_1000C46A8();
        sub_1000D9C40((uint64_t)"Do you wish deselect the preset named '");
        sub_1000993F4();
        sub_1000CC8C8();
        sub_1000DAE84(0xD00000000000002CLL, (uint64_t)"'? Doing so will require Weather to restart.");
        v56 = sub_1000D0074();
        v59 = sub_1000DA520(v56, 0xEF74657365725020, v57, v58);
        sub_100079FE8((uint64_t)v59, &qword_100BCBB38, UIAlertAction_ptr);
        v50 = (_QWORD *)swift_allocObject(&unk_100B68B28, 24, 7);
        v50[2] = v28;
        v52 = v59;
        v60 = v28;
        v54 = sub_1000D0074();
        v55 = 0xE800000000000000;
        goto LABEL_20;
      }
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(v12, 1, 1, v67);
    }
    sub_100021AA4(v12, &qword_100BD23C8);
    return;
  }
  __break(1u);
}

void sub_1002980F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  if (qword_100BC2218 != -1)
    swift_once(&qword_100BC2218, sub_10001075C);
  v0 = qword_100CAED98;
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  v1 = type metadata accessor for LocalPresetsViewController(0);
  sub_1002985D4(&qword_100BD23D0, (uint64_t)&unk_10098E39C);
  Updatable.save<A>(setting:value:)(v0, v3, v1, v2);
  exit(0);
}

void sub_100298180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  if (qword_100BC2218 != -1)
    swift_once(&qword_100BC2218, sub_10001075C);
  v6 = qword_100CAED98;
  v9[0] = a3;
  v9[1] = a4;
  v7 = type metadata accessor for LocalPresetsViewController(0);
  sub_1002985D4(&qword_100BD23D0, (uint64_t)&unk_10098E39C);
  Updatable.save<A>(setting:value:)(v6, v9, v7, v8);
  exit(0);
}

void sub_100298264()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.LocalPresetsViewController", 34, "init(style:)", 12, 0);
  __break(1u);
}

void sub_10029829C()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.LocalPresetsViewController", 34, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_1002982EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1000B46D0();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LocalPresetsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD23B0;
  if (!qword_100BD23B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LocalPresetsViewController);
  return result;
}

uint64_t sub_100298364(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for PresetAppState(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002983D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Updatable.save<A>(setting:value:)(a1, a2, a5, a6);
}

uint64_t sub_1002983DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Updatable.reset<A>(setting:)(a1, a4, a5);
}

uint64_t sub_1002983EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Configurable.setting<A>(_:)(a1, a4, a5);
}

uint64_t sub_1002983F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Configurable.setting<A>(_:defaultValue:)(a1, a2, a5, a6);
}

uint64_t sub_100298404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Configurable.setting<A>(_:_:)(a1, a2, a3, a6, a7);
}

uint64_t sub_100298410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, a7, a8);
}

void sub_10029841C()
{
  sub_1002985D4(&qword_100BD23C0, (uint64_t)&unk_10098E35C);
}

uint64_t sub_100298440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PresetAppState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100298484(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v4 = a1[3];
  if (v4)
  {
    v6 = sub_1000DB418(a1, a1[3]);
    v7 = *(_QWORD *)(v4 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v4);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(v2, "initWithTarget:action:", v11, a2);
  swift_unknownObjectRelease(v11);
  return v12;
}

uint64_t sub_100298570()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10029859C(uint64_t a1)
{
  uint64_t *v1;

  sub_100298180(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002985A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002985CC()
{
  sub_1002980F4();
}

void sub_1002985D4(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for LocalPresetsViewController(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

uint64_t sub_100298610(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PresetAppState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_10029864C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC5FD0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = *(int *)(v7 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_100298724(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1000BA294(&qword_100BC5FD0);
  result = _s7Weather24LocationCompositionStateOwet_0(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + *(int *)(v2 + 48);
    v5 = type metadata accessor for WeatherMapOverlayKind(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_BYTE *sub_100298790(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;

  v6 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(v6 + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 3, v6);
  }
  return a1;
}

_BYTE *sub_100298844(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  v6 = sub_1000BA294(&qword_100BC5FD0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 3, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 3, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v14 = *(int *)(v6 + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BC5FD0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = *(int *)(v6 + 48);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 3, v6);
  return a1;
}

_BYTE *sub_100298964(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;

  v6 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(v6 + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 3, v6);
  }
  return a1;
}

_BYTE *sub_100298A18(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  v6 = sub_1000BA294(&qword_100BC5FD0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 3, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 3, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v14 = *(int *)(v6 + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BC5FD0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = *(int *)(v6 + 48);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 3, v6);
  return a1;
}

uint64_t sub_100298B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000BA294(&qword_100BC5FD0);
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t sub_100298B80(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = sub_1000BA294(&qword_100BC5FD0);
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_100298BC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC5FD0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 3, v2);
}

uint64_t sub_100298BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5FD0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 3, v4);
}

_QWORD *sub_100298C38(_WORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for WeatherMapOverlayKind(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[7];
    v13 = a3[8];
    v14 = (_QWORD *)((char *)v4 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)v4 + v13;
    v18 = (char *)a2 + v13;
    swift_bridgeObjectRetain(v16);
    v19 = sub_1000BA294(&qword_100BC5FD0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 3, v19))
    {
      v20 = type metadata accessor for WeatherMapTrackingState(0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *v17 = *v18;
      v11(&v17[*(int *)(v19 + 48)], &v18[*(int *)(v19 + 48)], v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 3, v19);
    }
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return v4;
}

_BYTE *sub_100298D7C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for WeatherMapOverlayKind(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *v13 = *v14;
  v15 = v14[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_1000BA294(&qword_100BC5FD0);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 3, v19);
  v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 3, v19);
  if (!v20)
  {
    if (!v21)
    {
      *v17 = *v18;
      v11(&v17[*(int *)(v19 + 48)], &v18[*(int *)(v19 + 48)], v9);
      goto LABEL_7;
    }
    sub_100021A14((uint64_t)v17, &qword_100BC5FD0);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *v17 = *v18;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(&v17[*(int *)(v19 + 48)], &v18[*(int *)(v19 + 48)], v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 3, v19);
LABEL_7:
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

_WORD *sub_100298F0C(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for WeatherMapOverlayKind(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 3, v14))
  {
    v15 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10(&v12[*(int *)(v14 + 48)], &v13[*(int *)(v14 + 48)], v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 3, v14);
  }
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_WORD *sub_100299018(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for WeatherMapOverlayKind(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_1000BA294(&qword_100BC5FD0);
  v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 3, v20);
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 3, v20);
  if (!v21)
  {
    if (!v22)
    {
      *v18 = *v19;
      v11(&v18[*(int *)(v20 + 48)], &v19[*(int *)(v20 + 48)], v9);
      goto LABEL_7;
    }
    sub_100021A14((uint64_t)v18, &qword_100BC5FD0);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  *v18 = *v19;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(&v18[*(int *)(v20 + 48)], &v19[*(int *)(v20 + 48)], v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 3, v20);
LABEL_7:
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

void sub_100299190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1000B4608();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = *(int *)(a3 + 24);
  }
  else
  {
    if ((_DWORD)a2 == 2147483646)
    {
      sub_100079F70();
      return;
    }
    v7 = sub_1000DC694();
    v8 = *(int *)(a3 + 32);
  }
  _s7Weather24LocationCompositionStateOwet_0(a1 + v8, a2, v7);
}

void sub_10029922C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1000B4608();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[6];
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[7] + 8) = a2;
      sub_100079F70();
      return;
    }
    v9 = sub_1000DC694();
    v10 = a4[8];
  }
  sub_1000987C4(a1 + v10, a2, a2, v9);
}

void sub_1002992B0(_WORD *a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = (int *)sub_10009E654();
  v3 = type metadata accessor for WeatherMapPrecipitationOverlayKind(0);
  sub_1000BF13C(v3);
  v4 = sub_1000B4608();
  sub_1000BF13C(v4);
  v5 = (uint64_t)a1 + v2[8];
  v6 = sub_1000BA294(&qword_100BC5FD0);
  _s7Weather24LocationCompositionStateOwst_0(v5, 3, 3, v6);
  *a1 = -32764;
  v7 = (_QWORD *)((char *)a1 + v2[7]);
  *v7 = 0;
  v7[1] = 0;
  *((_BYTE *)a1 + v2[9]) = 1;
  sub_100079F70();
}

uint64_t sub_100299350(unsigned __int8 a1, uint64_t a2)
{
  int v2;
  int v4;
  char IsSlow;

  v2 = a1;
  if (a1 >= 0xFEu)
    return *(unsigned __int8 *)(a2 + *(int *)(type metadata accessor for WeatherMapPresentationState(0) + 36));
  v4 = *(unsigned __int8 *)(a2 + 1);
  IsSlow = DeviceIsSlow();
  if ((v2 & 0xFFFFFFC1) == 0x40)
    return 0;
  if ((IsSlow & 1) != 0)
    return 0;
  return (v4 & 0xFFFFFFC1) != 64;
}

uint64_t sub_1002993BC(char a1, char a2)
{
  if (a1 == 5)
  {
    if (a2 == 5)
      return 1;
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if (a1 == 4)
  {
    if (a2 != 4)
      return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    return 1;
  }
  if ((a2 & 0xFE) == 4)
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  return sub_10029FC24();
}

uint64_t sub_100299408(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  char v12;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001009F8230)
  {
    v4 = 0x80000001009F8230;
LABEL_6:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001009F8230, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
    goto LABEL_6;
  }
  if (a1 == 0xD000000000000011)
  {
    v6 = 0x80000001009F8250;
    if (a2 == 0x80000001009F8250)
      goto LABEL_11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001009F8250, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if (a1 == 0x4B79616C7265766FLL && a2 == 0xEB00000000646E69)
  {
    v8 = 0xEB00000000646E69;
    goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4B79616C7265766FLL, 0xEB00000000646E69, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001009F8270)
  {
    v9 = 0x80000001009F8270;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x80000001009F8270, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x676E696B63617274 && a2 == 0xED00006574617453)
  {
    v11 = 0xED00006574617453;
    goto LABEL_33;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676E696B63617274, 0xED00006574617453, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_33:
    swift_bridgeObjectRelease(v11);
    return 4;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x80000001009F8290)
  {
    swift_bridgeObjectRelease(0x80000001009F8290);
    return 5;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001009F8290, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_10029969C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1002996D8 + 4 * byte_10098E3EA[a1]))(0xD000000000000012, 0x80000001009F8230);
}

unint64_t sub_1002996D8()
{
  return 0xD000000000000011;
}

uint64_t sub_10029975C(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  char v10;

  if (a1 == 0xD000000000000012)
  {
    v4 = 0x80000001009F82B0;
    if (a2 == 0x80000001009F82B0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001009F82B0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x536E6F6973736573 && a2 == 0xEE00646574726174)
  {
    v7 = 0xEE00646574726174;
    goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x536E6F6973736573, 0xEE00646574726174, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD000000000000010)
  {
    v8 = 0x80000001009F82D0;
    if (a2 == 0x80000001009F82D0)
      goto LABEL_18;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001009F82D0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_18:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0x456E6F6973736573 && a2 == 0xEC0000006465646ELL)
  {
    swift_bridgeObjectRelease(0xEC0000006465646ELL);
    return 3;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x456E6F6973736573, 0xEC0000006465646ELL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_10029993C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100299978 + 4 * byte_10098E3F0[a1]))(0xD000000000000012, 0x80000001009F82B0);
}

uint64_t sub_100299978()
{
  return 0x536E6F6973736573;
}

unint64_t sub_10029999C()
{
  return 0xD000000000000010;
}

uint64_t sub_1002999B8()
{
  return 0x456E6F6973736573;
}

uint64_t sub_1002999D8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x736C6C7546736177 && a2 == 0xED00006E65657263)
  {
    v5 = 0xED00006E65657263;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736C6C7546736177, 0xED00006E65657263, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x4B79616C7265766FLL && a2 == 0xEB00000000646E69)
  {
    swift_bridgeObjectRelease(0xEB00000000646E69);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x4B79616C7265766FLL, 0xEB00000000646E69, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100299B00(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4B79616C7265766FLL;
  else
    return 0x736C6C7546736177;
}

BOOL sub_100299B4C()
{
  return sub_10029FC24();
}

uint64_t sub_100299B58(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  char v12;

  if (a1 == 0x6F74747542726162 && a2 == 0xE90000000000006ELL)
  {
    v5 = 0xE90000000000006ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F74747542726162, 0xE90000000000006ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x614D656E696C6E69 && a2 == 0xE900000000000070)
  {
    v8 = 0xE900000000000070;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x614D656E696C6E69, 0xE900000000000070, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x614D64656E6E6970 && a2 == 0xE900000000000070)
  {
    v10 = 0xE900000000000070;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x614D64656E6E6970, 0xE900000000000070, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x6C616E7265747865 && a2 == 0xED00006574617453)
  {
    swift_bridgeObjectRelease(0xED00006574617453);
    return 3;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C616E7265747865, 0xED00006574617453, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100299D3C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100299D78 + 4 * byte_10098E3F4[a1]))(0x6F74747542726162, 0xE90000000000006ELL);
}

uint64_t sub_100299D78()
{
  return 0x614D656E696C6E69;
}

uint64_t sub_100299DA4()
{
  return 0x6C616E7265747865;
}

uint64_t sub_100299DC8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x7465656873 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7465656873, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C616373, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100299EAC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C616373;
  else
    return 0x7465656873;
}

uint64_t sub_100299ED8()
{
  unsigned __int8 *v0;

  return sub_10029969C(*v0);
}

uint64_t sub_100299EE0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100299408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100299F04(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DD48();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100299F2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DD48();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100299F54()
{
  unsigned __int8 *v0;

  return sub_10029993C(*v0);
}

uint64_t sub_100299F5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10029975C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100299F80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E39C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100299FA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E39C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100299FD0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E3D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100299FF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E3D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A020()
{
  char *v0;

  return sub_100299B00(*v0);
}

uint64_t sub_10029A028@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002999D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10029A04C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E414();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A074(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E414();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A09C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E48C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A0C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E48C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A0EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E450();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A114(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E450();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A13C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E0CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A164(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E0CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A18C()
{
  unsigned __int8 *v0;

  return sub_100299D3C(*v0);
}

uint64_t sub_10029A194@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100299B58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10029A1B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DFDC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A1E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DFDC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A208(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E018();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A230(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E018();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A258(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E090();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A280(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E090();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A2A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E054();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A2D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E054();
  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_10029A2F8()
{
  return sub_100299B4C();
}

uint64_t sub_10029A304(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DE74();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A32C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DE74();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A35C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DEB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A384(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DEB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A3AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DF64();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A3D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DF64();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A3FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DF28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A424(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029DF28();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A44C()
{
  char *v0;

  return sub_100299EAC(*v0);
}

uint64_t sub_10029A454@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100299DC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10029A478(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E2E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A4A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E2E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A4C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E324();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A4F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E324();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A518(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E360();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A540(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E360();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10029A568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;

  v4 = a1 == 0x656E696C6E69 && a2 == 0xE600000000000000;
  if (v4
    || (sub_10009E50C(), (sub_1000DC128(0x656E696C6E69, 0xE600000000000000, v3) & 1) != 0)
    || (v3 == 0x64656E6E6970 ? (v5 = v2 == 0xE600000000000000) : (v5 = 0),
        v5
     || (sub_1000DC128(0x64656E6E6970, 0xE600000000000000, v3) & 1) != 0
     || (v3 == 0x657263736C6C7566 ? (v6 = v2 == 0xEA00000000006E65) : (v6 = 0), v6)))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000DC128(0x657263736C6C7566, 0xEA00000000006E65, v3);
    sub_10009DED8();
  }
  sub_100079F70();
}

uint64_t sub_10029A68C(char a1)
{
  if (!a1)
    return 0x656E696C6E69;
  if (a1 == 1)
    return 0x64656E6E6970;
  return 0x657263736C6C7566;
}

uint64_t sub_10029A6E0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    sub_1000DC128(12383, 0xE200000000000000, a1);
    sub_10009DED8();
    v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10029A73C()
{
  return 12383;
}

void sub_10029A748(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  v1 = sub_10009C0C8(a1);
  sub_10004A324(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_10007A148();
  sub_100098918();
}

uint64_t sub_10029A76C()
{
  char *v0;

  return sub_10029A68C(*v0);
}

void sub_10029A774(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_10029A568(a1, a2);
  *a3 = v4;
}

uint64_t sub_10029A798(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E108();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A7C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E108();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A7E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E144();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A810(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E144();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A838(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E234();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A860(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E234();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10029A888()
{
  _QWORD v0[9];

  Hasher.init(_seed:)(v0);
  sub_1000C1CFC();
  sub_10007A148();
  sub_100098918();
}

uint64_t sub_10029A8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10029A6E0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10029A8D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E1BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029A900(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E1BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029A928(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 7368564 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7368564, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x676E696C69617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676E696C69617274, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10029AA04(char a1)
{
  if ((a1 & 1) != 0)
    return 0x676E696C69617274;
  else
    return 7368564;
}

void sub_10029AA34()
{
  unsigned __int8 *v0;

  _s7Weather18ListSessionTriggerO9hashValueSivg_0(*v0);
}

uint64_t sub_10029AA4C()
{
  char *v0;

  return sub_10029AA04(*v0);
}

uint64_t sub_10029AA54@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10029A928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10029AA78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E4C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029AAA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E4C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029AAC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E540();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029AAF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E540();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029AB18(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E504();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029AB40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E504();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029AB6C(char *a1, char *a2)
{
  return sub_1002993BC(*a1, *a2);
}

void sub_10029AB78(uint64_t a1, unsigned __int8 a2)
{
  Swift::UInt v3;
  Swift::UInt v4;

  if (a2 >> 6)
  {
    if (a2 >> 6 != 1)
    {
      v4 = 0;
      goto LABEL_7;
    }
    v3 = 2;
  }
  else
  {
    v3 = 1;
  }
  Hasher._combine(_:)(v3);
  v4 = a2 & 1;
LABEL_7:
  Hasher._combine(_:)(v4);
}

void sub_10029ABC8(uint64_t a1)
{
  unsigned __int8 v1;
  _BYTE v2[72];

  v1 = a1;
  sub_1000C4480(a1);
  sub_10029AB78((uint64_t)v2, v1);
  sub_10007A148();
  sub_100098918();
}

void sub_10029ABF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  sub_1000B4608();
  sub_1000ED258();
  __chkstk_darwin(v1);
  sub_1000DC694();
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100079FBC();
  sub_1000FFAB4();
  v3 = sub_1000BA294(&qword_100BC5FD0);
  v4 = (char *)sub_10029ACAC + 4 * byte_10098E3FC[_s7Weather24LocationCompositionStateOwet_0(v0, 3, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10029ACAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt8 *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::UInt8 v6;
  uint64_t v7;

  v6 = *v3;
  (*(void (**)(uint64_t, Swift::UInt8 *, uint64_t))(v5 + 32))(v2, &v3[*(int *)(v4 + 48)], v0);
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v6);
  sub_100086DA4(&qword_100BD2540, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind, (uint64_t)&protocol conformance descriptor for WeatherMapOverlayKind);
  dispatch thunk of Hashable.hash(into:)(v1, v0, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v0);
}

void sub_10029AD50(uint64_t a1)
{
  sub_1000C4480(a1);
  sub_10029ABF8();
  sub_10007A148();
  sub_100098918();
}

void _s7Weather18ListSessionTriggerO9hashValueSivg_0(uint64_t a1)
{
  char v1;

  v1 = a1;
  sub_1000C4480(a1);
  Hasher._combine(_:)(v1 & 1);
  sub_10007A148();
  sub_100098918();
}

uint64_t sub_10029ADA8(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v5 = v1;
  v7 = sub_1000BA294(&qword_100BD2578);
  sub_100099300();
  __chkstk_darwin(v8);
  sub_100079FBC();
  v9 = a1[3];
  v10 = a1[4];
  sub_1000BE73C(a1);
  v11 = sub_10029DD48();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationState.CodingKeys, &type metadata for WeatherMapPresentationState.CodingKeys, v11, v9, v10);
  v33 = *v5;
  v32 = 0;
  v12 = sub_10029DDFC();
  sub_1000C26D4((uint64_t)&v33, (uint64_t)&v32, v7, (uint64_t)&unk_100B69540, v12);
  if (!v2)
  {
    v31 = v5[1];
    sub_1000B3290();
    v13 = sub_10029DE38();
    sub_1000C26D4((uint64_t)&v31, (uint64_t)&v30, v7, (uint64_t)&unk_100B68C30, v13);
    v14 = (int *)type metadata accessor for WeatherMapPresentationState(0);
    v15 = (uint64_t)&v5[v14[6]];
    v29 = 2;
    v16 = sub_1000B4608();
    sub_100086DA4(&qword_100BD2590, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind, (uint64_t)&protocol conformance descriptor for WeatherMapOverlayKind);
    sub_1000C26D4(v15, (uint64_t)&v29, v7, v16, v17);
    v18 = (uint64_t *)&v5[v14[7]];
    v19 = *v18;
    v20 = v18[1];
    v28 = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v28, v7);
    v21 = (uint64_t)&v5[v14[8]];
    v27 = 4;
    v22 = type metadata accessor for WeatherMapTrackingState(0);
    sub_100086DA4(&qword_100BD2598, type metadata accessor for WeatherMapTrackingState, (uint64_t)&unk_10098E8A4);
    sub_1000C26D4(v21, (uint64_t)&v27, v7, v22, v23);
    v24 = v5[v14[9]];
    v26 = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v24, &v26, v7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v7);
}

void sub_10029AFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  _BYTE *v53;

  sub_100099310();
  a26 = v30;
  a27 = v31;
  v33 = v32;
  v34 = type metadata accessor for WeatherMapTrackingState(0);
  sub_10009D98C();
  __chkstk_darwin(v35);
  sub_100079FBC();
  v36 = sub_1000B4608();
  v50 = *(_QWORD *)(v36 - 8);
  v51 = v36;
  sub_10009D98C();
  __chkstk_darwin(v37);
  sub_10007A130();
  v49 = sub_1000BA294(&qword_100BD2548);
  sub_1000C6D9C();
  __chkstk_darwin(v38);
  sub_10009E540();
  v39 = type metadata accessor for WeatherMapPresentationState(0);
  sub_10009C934(v39);
  sub_10009D98C();
  __chkstk_darwin(v40);
  sub_100088FDC();
  v53 = v41;
  v43 = v33[3];
  v42 = v33[4];
  sub_1000DB418(v33, v43);
  v44 = sub_10029DD48();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationState.CodingKeys, &type metadata for WeatherMapPresentationState.CodingKeys, v44, v43, v42);
  if (v27)
  {
    sub_10009EE88();
  }
  else
  {
    a16 = 0;
    sub_10029DD84();
    sub_1000B3108((uint64_t)&unk_100B69540, (uint64_t)&a16, v49, (uint64_t)&unk_100B69540);
    *v53 = a17;
    sub_1000B3290();
    sub_10029DDC0();
    sub_1000B3108((uint64_t)&unk_100B68C30, (uint64_t)&a14, v49, (uint64_t)&unk_100B68C30);
    v53[1] = a15;
    a13 = 2;
    sub_100086DA4(&qword_100BD2568, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind, (uint64_t)&protocol conformance descriptor for WeatherMapOverlayKind);
    sub_1000B3108(v51, (uint64_t)&a13, v49, v51);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v50 + 32))(&v53[v52[6]], v29, v51);
    a12 = 3;
    v45 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&a12, v49);
    v46 = (uint64_t *)&v53[v52[7]];
    *v46 = v45;
    v46[1] = v47;
    a11 = 4;
    sub_100086DA4(&qword_100BD2570, type metadata accessor for WeatherMapTrackingState, (uint64_t)&unk_10098E8CC);
    sub_1000B3108(v34, (uint64_t)&a11, v49, v34);
    sub_1001521AC(v28, (uint64_t)&v53[v52[8]]);
    a10 = 5;
    v48 = KeyedDecodingContainer.decode(_:forKey:)(&a10, v49);
    sub_1000C5C48();
    v53[v52[9]] = v48 & 1;
    sub_1000FFAB4();
    sub_10009EE88();
    sub_1000215BC((uint64_t)v53, type metadata accessor for WeatherMapPresentationState);
  }
  sub_1000B44B0();
}

void sub_10029B368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, char a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_100099310();
  a24 = v30;
  a25 = v31;
  sub_1000FC490(v32, v33);
  sub_1000BA294(&qword_100BD25E8);
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_1000CE53C(v35, v48);
  v36 = sub_1000BA294(&qword_100BD25F0);
  v49 = *(_QWORD *)(v36 - 8);
  v50 = v36;
  sub_10009D98C();
  __chkstk_darwin(v37);
  sub_10007A130();
  sub_1000BA294(&qword_100BD25F8);
  sub_1000ED258();
  __chkstk_darwin(v38);
  sub_10004A2E8();
  sub_1000BA294(&qword_100BD2600);
  sub_10009D98C();
  __chkstk_darwin(v39);
  sub_100098694();
  v40 = v26[3];
  v41 = v26[4];
  sub_1000DB418(v26, v40);
  v42 = sub_10029DE74();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationIntent.CodingKeys, &type metadata for WeatherMapPresentationIntent.CodingKeys, v42, v40, v41);
  if (a10 == 5)
  {
    sub_100087904();
    sub_1000BA504((uint64_t)&type metadata for WeatherMapPresentationIntent.PinnedCodingKeys, (uint64_t)&a13);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v29, v50);
  }
  else
  {
    if (a10 != 4)
    {
      sub_100110718();
      sub_1000BA504((uint64_t)&type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys, (uint64_t)&a15);
      a14 = a10;
      v43 = sub_10029DFA0();
      sub_1000F40C4((uint64_t)&a14, v44, v45, (uint64_t)&unk_100B694B0, v43);
      v46 = sub_100086154();
      sub_1000BE774(v46, v47);
      sub_1000CCA58();
      goto LABEL_7;
    }
    a12 = 0;
    sub_10029DF64();
    sub_1000BA504((uint64_t)&type metadata for WeatherMapPresentationIntent.InlineCodingKeys, (uint64_t)&a12);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v25);
  }
  sub_1000CCA58();
LABEL_7:
  sub_10009C884();
  sub_1000B44B0();
}

void sub_10029B538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;

  sub_100099310();
  a23 = v27;
  a24 = v28;
  sub_10003BD3C();
  v69 = sub_1000BA294(&qword_100BD25A0);
  sub_10009D98C();
  __chkstk_darwin(v29);
  sub_1000DC160(v30, v66);
  sub_1000BA294(&qword_100BD25A8);
  sub_10009D98C();
  __chkstk_darwin(v31);
  sub_1000986CC(v32, v67);
  v68 = sub_1000BA294(&qword_100BD25B0);
  sub_1000C6D9C();
  __chkstk_darwin(v33);
  sub_100098694();
  v34 = sub_1000BA294(&qword_100BD25B8);
  sub_100098B6C();
  __chkstk_darwin(v35);
  sub_100079FBC();
  v37 = v25[3];
  v36 = v25[4];
  sub_1000DB418(v25, v37);
  v38 = sub_10029DE74();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationIntent.CodingKeys, &type metadata for WeatherMapPresentationIntent.CodingKeys, v38, v37, v36);
  if (v70)
    goto LABEL_9;
  v71 = v25;
  v39 = v24;
  KeyedDecodingContainer.allKeys.getter(v34);
  sub_1000ED24C();
  v40 = v34;
  if (!v41)
  {
LABEL_8:
    v55 = sub_1000C09D0();
    sub_10009D46C(v55, (uint64_t)&protocol witness table for DecodingError);
    v57 = v56;
    sub_1000BA294(&qword_100BC6CF8);
    *v57 = &unk_100B69540;
    v58 = KeyedDecodingContainer.codingPath.getter(v40);
    v60 = sub_10003BD2C(v58, v59, 0x80000001009F2600);
    v61 = sub_10009D478(v60, enum case for DecodingError.typeMismatch(_:));
    swift_willThrow(v61, v62);
    sub_100099400();
    sub_1000BE774(v39, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
LABEL_9:
    sub_1000C52EC();
    goto LABEL_10;
  }
  v42 = *(unsigned __int8 *)(v26 + 32);
  v43 = sub_100099408();
  sub_10055FF58(v43, v44, v45, v46, v47, v48);
  v50 = v49;
  v52 = v51;
  sub_100098738();
  if (v50 != v52 >> 1)
  {
    v39 = v24;
    goto LABEL_8;
  }
  if (v42)
  {
    if (v42 == 1)
    {
      sub_100087904();
      sub_1000D09A4((uint64_t)&type metadata for WeatherMapPresentationIntent.PinnedCodingKeys, (uint64_t)&a12);
      v53 = sub_10011738C();
      v54(v53);
      sub_100099400();
      sub_1000BE774(v50, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    }
    else
    {
      sub_100110718();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys, &a14, v40, &type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys);
      sub_10029DEEC();
      KeyedDecodingContainer.decode<A>(_:forKey:)(&unk_100B694B0, v65, v69, &unk_100B694B0);
      sub_1000BEA54();
      sub_100099400();
      sub_1000BE774(v24, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    }
  }
  else
  {
    a11 = 0;
    sub_10029DF64();
    sub_1000D09A4((uint64_t)&type metadata for WeatherMapPresentationIntent.InlineCodingKeys, (uint64_t)&a11);
    v63 = sub_10011738C();
    v64(v63, v68);
    sub_100099400();
    sub_1000BE774(v50, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v71);
LABEL_10:
  sub_1000B44B0();
}

void sub_10029B8B0()
{
  char v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_100099310();
  v15 = v0;
  v2 = v1;
  sub_1000BA294(&qword_100BD2660);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_1000AE8A8(v4, v13);
  sub_1000BA294(&qword_100BD2668);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100098678(v6, v14);
  sub_1000BA294(&qword_100BD2670);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100098694();
  sub_1000BA294(&qword_100BD2678);
  sub_100098B6C();
  __chkstk_darwin(v8);
  sub_10004A2E8();
  sub_1000BA294(&qword_100BD2680);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100094EC4();
  v11 = v2[3];
  v10 = v2[4];
  sub_1000BE73C(v2);
  v12 = sub_10029DFDC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys, v12, v11, v10);
  __asm { BR              X10 }
}

void sub_10029B9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_10029E0CC();
  sub_100098B5C((uint64_t)&type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.BarButtonCodingKeys, v4 - 68);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_100098748(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8));
  sub_1000B44B0();
}

void sub_10029BAB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_100099310();
  sub_10003BD3C();
  sub_1000BA294(&qword_100BD2610);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_1000D9C54(v5, v35);
  sub_1000BA294(&qword_100BD2618);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_1000986CC(v7, v36);
  sub_1000BA294(&qword_100BD2620);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_1000CE53C(v9, v37);
  sub_1000BA294(&qword_100BD2628);
  sub_1000C0120();
  __chkstk_darwin(v10);
  sub_100098694();
  sub_1000BA294(&qword_100BD2630);
  sub_1000952B8();
  __chkstk_darwin(v11);
  sub_10007A130();
  v13 = v1[3];
  v12 = v1[4];
  sub_1000DB418(v1, v13);
  v14 = sub_10029DFDC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys, v14, v13, v12);
  if (!v38)
  {
    v39 = v0;
    KeyedDecodingContainer.allKeys.getter(v2);
    sub_1000ED24C();
    if (v15)
    {
      v16 = *(unsigned __int8 *)(v3 + 32);
      v17 = sub_100099408();
      sub_10055FF58(v17, v18, v19, v20, v21, v22);
      v24 = v23;
      v26 = v25;
      sub_100098738();
      if (v24 == v26 >> 1)
        __asm { BR              X9 }
    }
    v27 = sub_1000C09D0();
    sub_10009D46C(v27, (uint64_t)&protocol witness table for DecodingError);
    v29 = v28;
    sub_1000BA294(&qword_100BC6CF8);
    *v29 = &unk_100B694B0;
    v30 = KeyedDecodingContainer.codingPath.getter(v2);
    v32 = sub_10003BD2C(v30, v31, 0x80000001009F2600);
    v33 = sub_10009D478(v32, enum case for DecodingError.typeMismatch(_:));
    swift_willThrow(v33, v34);
    sub_100099400();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v3, v2);
  }
  sub_1000C52EC();
  sub_1000B44B0();
}

void sub_10029BD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  sub_10029FC18();
  sub_1000C0D84((uint64_t)&type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.InlineMapCodingKeys, v1 - 67);
  if (!v0)
  {
    v2 = sub_1000D0088();
    v3(v2);
    sub_100099400();
    sub_1000C46C0();
    JUMPOUT(0x10029BE34);
  }
  sub_100099400();
  sub_1000C46C0();
  JUMPOUT(0x10029BD38);
}

void sub_10029BD84()
{
  uint64_t v0;
  uint64_t v1;

  sub_10011E7B8();
  sub_1000C0D84((uint64_t)&type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.PinnedMapCodingKeys, v1 - 66);
  if (v0)
    JUMPOUT(0x10029BDACLL);
  JUMPOUT(0x10029BE00);
}

void sub_10029BDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  sub_10011E5F4();
  sub_1000C0D84((uint64_t)&type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.ExternalStateCodingKeys, v1 - 65);
  *(_QWORD *)(v1 - 184) = v0;
  if (v0)
  {
    sub_100099400();
    sub_1000C46C0();
    JUMPOUT(0x10029BD38);
  }
  v2 = sub_10011738C();
  v3(v2, *(_QWORD *)(v1 - 128));
  sub_100099400();
  sub_1000C46C0();
  JUMPOUT(0x10029BE34);
}

void sub_10029BE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;

  sub_100099310();
  a25 = v29;
  a26 = v30;
  v54 = v31;
  v33 = v32;
  sub_1000BA294(&qword_100BD26D8);
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_1000AE8A8(v35, v51);
  v36 = sub_1000BA294(&qword_100BD26E0);
  v52 = *(_QWORD *)(v36 - 8);
  v53 = v36;
  sub_10009D98C();
  __chkstk_darwin(v37);
  sub_10007A130();
  v38 = sub_1000BA294(&qword_100BD26E8);
  sub_100099300();
  __chkstk_darwin(v39);
  sub_100094EC4();
  sub_1000BA294(&qword_100BD26F0);
  sub_10009D98C();
  __chkstk_darwin(v40);
  sub_100098694();
  v42 = v33[3];
  v41 = v33[4];
  sub_1000DB418(v33, v42);
  v43 = sub_10029E108();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationStyle.CodingKeys, &type metadata for WeatherMapPresentationStyle.CodingKeys, v43, v42, v41);
  if (v54 >> 6)
  {
    if (v54 >> 6 != 1)
    {
      a12 = 0;
      sub_10029E234();
      sub_1000BA504((uint64_t)&type metadata for WeatherMapPresentationStyle.InlineCodingKeys, (uint64_t)&a12);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v38);
      sub_1000CCA58();
      goto LABEL_7;
    }
    sub_1000FCC60();
    sub_1000BA504((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenCodingKeys, (uint64_t)&a16);
    a15 = v54 & 1;
    v44 = sub_10029E270();
    sub_1000F40C4((uint64_t)&a15, v45, v46, (uint64_t)&unk_100B695D0, v44);
    v47 = sub_100086154();
  }
  else
  {
    sub_100075E14();
    sub_1000BA504((uint64_t)&type metadata for WeatherMapPresentationStyle.PinnedCodingKeys, (uint64_t)&a14);
    a13 = v54 & 1;
    v49 = sub_10029E2AC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&a13, v50, v53, &unk_100B69660, v49);
    v48 = *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8);
    v47 = v28;
  }
  sub_1000BE774(v47, v48);
  sub_1000CCA58();
LABEL_7:
  sub_10009C884();
  sub_1000B44B0();
}

void sub_10029C04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;

  sub_100099310();
  a25 = v29;
  a26 = v30;
  v32 = v31;
  v33 = sub_1000BA294(&qword_100BD2688);
  v73 = *(_QWORD *)(v33 - 8);
  v74 = v33;
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_1000DC160(v35, v69);
  v36 = sub_1000BA294(&qword_100BD2690);
  sub_10009C934(v36);
  v72 = v37;
  sub_10009D98C();
  __chkstk_darwin(v38);
  sub_1000CE53C(v39, v70);
  sub_1000BA294(&qword_100BD2698);
  sub_1000C6D9C();
  __chkstk_darwin(v40);
  sub_100079FBC();
  v41 = sub_1000BA294(&qword_100BD26A0);
  sub_1000AE898();
  __chkstk_darwin(v42);
  sub_10009E540();
  v43 = v32[3];
  v44 = v32[4];
  v78 = v32;
  sub_10009D48C();
  v45 = sub_10029E108();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WeatherMapPresentationStyle.CodingKeys, &type metadata for WeatherMapPresentationStyle.CodingKeys, v45, v43, v44);
  if (v26)
  {
    v46 = v32;
    goto LABEL_13;
  }
  v71 = v27;
  v79 = v28;
  v47 = KeyedDecodingContainer.allKeys.getter(v41);
  v48 = v47;
  v49 = *(_QWORD *)(v47 + 16);
  v50 = v41;
  if (!v49)
  {
    v46 = v32;
LABEL_10:
    v56 = sub_1000C09D0();
    sub_10009D46C(v56, (uint64_t)&protocol witness table for DecodingError);
    v58 = v57;
    sub_1000BA294(&qword_100BC6CF8);
    *v58 = &unk_100B68C30;
    v59 = KeyedDecodingContainer.codingPath.getter(v50);
    sub_10003BD2C(v59, v60, 0x80000001009F2600);
    v61 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v58, enum case for DecodingError.typeMismatch(_:), v56);
    swift_willThrow(v61, v62);
    sub_100099400();
    sub_1000C5C48();
    goto LABEL_13;
  }
  v51 = *(unsigned __int8 *)(v47 + 32);
  sub_10055FF58(1, v49, v47, v47 + 32, 0, (2 * v49) | 1);
  v53 = v52;
  v55 = v54;
  swift_bridgeObjectRelease();
  if (v53 != v55 >> 1)
  {
    v46 = v78;
    v50 = v41;
    goto LABEL_10;
  }
  if (v51)
  {
    if (v51 == 1)
    {
      sub_100075E14();
      sub_1000C216C((uint64_t)&type metadata for WeatherMapPresentationStyle.PinnedCodingKeys, (uint64_t)&a14);
      sub_10029E1F8();
      KeyedDecodingContainer.decode<A>(_:forKey:)(&unk_100B69660, v63, v76);
      v46 = v78;
      sub_1000BE774(v75, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
      sub_1000D0C3C();
      v67 = sub_1000890B8();
      v68(v67);
    }
    else
    {
      sub_1000FCC60();
      sub_1000C216C((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenCodingKeys, (uint64_t)&a16);
      sub_10029E180();
      KeyedDecodingContainer.decode<A>(_:forKey:)(&unk_100B695D0, v66, v74);
      v46 = v78;
      sub_1000BE774(v77, *(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));
      sub_1000D0C3C();
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v48, v41);
    }
  }
  else
  {
    a12 = 0;
    sub_10029E234();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for WeatherMapPresentationStyle.InlineCodingKeys, &a12, v41, &type metadata for WeatherMapPresentationStyle.InlineCodingKeys);
    v64 = sub_1000D0088();
    v65(v64);
    sub_1000D0C3C();
    sub_1000BE774(v79, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
    v46 = v78;
  }
LABEL_13:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v46);
  sub_10009C884();
  sub_1000B44B0();
}

void sub_10029C4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  _QWORD v42[4];

  sub_100099310();
  a23 = v27;
  a24 = v28;
  sub_1000FC490(v29, v30);
  v31 = sub_1000BA294(&qword_100BD2738);
  v42[1] = *(_QWORD *)(v31 - 8);
  v42[2] = v31;
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_10009E540();
  v42[0] = sub_1000BA294(&qword_100BD2740);
  sub_1000C6D9C();
  __chkstk_darwin(v33);
  sub_10007A130();
  sub_1000BA294(&qword_100BD2748);
  sub_1000AE898();
  __chkstk_darwin(v34);
  v36 = (char *)v42 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D48C();
  v37 = sub_10029E2E8();
  sub_1000BD9D4((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys, v38, v37);
  if ((a10 & 1) != 0)
  {
    sub_1000DC05C();
    sub_100098B5C((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.ScaleCodingKeys, (uint64_t)&a14);
    v39 = sub_100086154();
    v41(v39, v40);
  }
  else
  {
    a13 = 0;
    sub_10029E360();
    sub_100098B5C((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.SheetCodingKeys, (uint64_t)&a13);
    (*(void (**)(uint64_t, _QWORD))(v25 + 8))(v26, v42[0]);
  }
  sub_100098748((uint64_t)v36, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_1000B44B0();
}

void sub_10029C5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64[10];

  sub_100099310();
  a22 = v27;
  a23 = v28;
  sub_10003BD3C();
  v29 = sub_1000BA294(&qword_100BD2708);
  v64[7] = *(_QWORD *)(v29 - 8);
  v64[8] = v29;
  sub_10009D98C();
  __chkstk_darwin(v30);
  sub_1000986CC(v31, v64[0]);
  v64[5] = sub_1000BA294(&qword_100BD2710);
  sub_1000C0120();
  __chkstk_darwin(v32);
  sub_100079FBC();
  v33 = sub_1000BA294(&qword_100BD2718);
  sub_100099300();
  __chkstk_darwin(v34);
  v36 = (char *)v64 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BE73C(v26);
  v37 = sub_10029E2E8();
  sub_1000EAF74((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys, v38, v37);
  if (v24)
    goto LABEL_8;
  sub_1000C1D94();
  sub_1000ED24C();
  if (!v39
    || (v64[0] = 0,
        v40 = *(_BYTE *)(v33 + 32),
        v41 = sub_100099408(),
        v47 = sub_10055FF58(v41, v42, v43, v44, v45, v46),
        v49 = v48,
        v51 = v50,
        sub_100098738(),
        v49 != v51 >> 1))
  {
    v52 = sub_1000C09D0();
    sub_10009D46C(v52, (uint64_t)&protocol witness table for DecodingError);
    sub_1000BA294(&qword_100BC6CF8);
    v53 = sub_1000DC8EC((uint64_t)&unk_100B695D0);
    v55 = sub_10003BD2C(v53, v54, 0x80000001009F2600);
    v56 = sub_10009DA6C(v55, enum case for DecodingError.typeMismatch(_:));
    swift_willThrow(v56, v57);
    sub_100099400();
    v58 = sub_1000890B8();
    v60(v58, v59);
LABEL_8:
    sub_1000C52EC();
    goto LABEL_9;
  }
  if ((v40 & 1) != 0)
  {
    sub_1000DC05C();
    sub_1000B46D8((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.ScaleCodingKeys, (uint64_t)&a13);
    sub_10029FBF4();
    (*(void (**)(uint64_t, _QWORD *))(v23 + 8))(v25, v26);
  }
  else
  {
    a12 = 0;
    sub_10029E360();
    sub_1000B46D8((uint64_t)&type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.SheetCodingKeys, (uint64_t)&a12);
    sub_10029FBF4();
    v61 = sub_10007A00C();
    v63(v61, v62);
  }
  sub_100099400();
  sub_100098B40((uint64_t)v36, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)v64[3]);
LABEL_9:
  sub_1000B44B0();
}

void sub_10029C83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  sub_100099310();
  v2 = v1;
  sub_1000BA294(&qword_100BD27A0);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  sub_1000BA294(&qword_100BD27A8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100098678(v5, v18);
  sub_1000B4608();
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_10009DA80(v7, v19);
  sub_1000BA294(&qword_100BD27B0);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_10007A130();
  sub_1000BA294(&qword_100BD27B8);
  sub_1000952B8();
  __chkstk_darwin(v9);
  type metadata accessor for WeatherMapTrackingState(0);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_10004A2E8();
  v11 = sub_1000BA294(&qword_100BD27C0);
  sub_10009C934(v11);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098694();
  v13 = *(_QWORD *)(v2 + 24);
  v14 = *(_QWORD *)(v2 + 32);
  sub_10009D48C();
  v15 = sub_10029E39C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WeatherMapTrackingState.CodingKeys, &type metadata for WeatherMapTrackingState.CodingKeys, v15, v13, v14);
  sub_1000FFAB4();
  v16 = sub_1000BA294(&qword_100BC5FD0);
  v17 = (char *)sub_10029C9FC
      + 4 * byte_10098E408[_s7Weather24LocationCompositionStateOwet_0(v0, 3, v16)];
  __asm { BR              X10 }
}

void sub_10029C9FC()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *v1;
  v4 = &v1[*(int *)(v0 + 48)];
  v5 = *(_QWORD *)(v2 - 144);
  v6 = *(_QWORD *)(v2 - 160);
  v7 = *(_QWORD *)(v2 - 128);
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v5 + 32))(v6, v4, v7);
  sub_10011E6AC();
  v8 = *(_QWORD *)(v2 - 152);
  sub_1000BA504((uint64_t)&type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys, v2 - 66);
  *(_BYTE *)(v2 - 67) = 0;
  v9 = v3;
  v10 = *(_QWORD *)(v2 - 120);
  v11 = *(_QWORD *)(v2 - 104);
  KeyedEncodingContainer.encode(_:forKey:)(v9, v2 - 67, v10);
  if (!v11)
  {
    sub_1000B3290();
    sub_100086DA4(&qword_100BD2590, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind, (uint64_t)&protocol conformance descriptor for WeatherMapOverlayKind);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v6, v2 - 68, v10, v7, v12);
  }
  sub_1000BE774(v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8));
  sub_100098B40(v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1000CCA58();
  sub_10009C884();
  sub_1000B44B0();
}

void sub_10029CB94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[13];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  sub_100099310();
  v59 = v0;
  v4 = v3;
  v54[12] = v5;
  v6 = sub_1000BA294(&qword_100BD2750);
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v54[10] = v8;
  v9 = sub_1000BA294(&qword_100BD2758);
  v54[6] = *(_QWORD *)(v9 - 8);
  v54[7] = v9;
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v54[11] = v11;
  v55 = sub_1000BA294(&qword_100BD2760);
  v54[5] = *(_QWORD *)(v55 - 8);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098678(v13, v54[0]);
  v14 = sub_1000BA294(&qword_100BD2768);
  v54[3] = *(_QWORD *)(v14 - 8);
  v54[4] = v14;
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_10009DA80(v16, v54[0]);
  v17 = sub_1000BA294(&qword_100BD2770);
  sub_100098B6C();
  __chkstk_darwin(v18);
  sub_100098694();
  v19 = type metadata accessor for WeatherMapTrackingState(0);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_10009883C();
  v23 = v21 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)v54 - v25;
  v28 = v4[3];
  v27 = v4[4];
  v58 = v4;
  sub_1000DB418(v4, v28);
  v29 = sub_10029E39C();
  v30 = v59;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WeatherMapTrackingState.CodingKeys, &type metadata for WeatherMapTrackingState.CodingKeys, v29, v28, v27);
  if (!v30)
  {
    v31 = v19;
    v54[1] = v23;
    v54[2] = (uint64_t)v26;
    v59 = v2;
    v32 = v1;
    KeyedDecodingContainer.allKeys.getter(v17);
    sub_1000ED24C();
    v33 = v17;
    if (v34)
    {
      v54[0] = 0;
      v35 = *(unsigned __int8 *)(v2 + 32);
      v36 = sub_100099408();
      sub_10055FF58(v36, v37, v38, v39, v40, v41);
      v43 = v42;
      v45 = v44;
      sub_100098738();
      if (v43 == v45 >> 1)
        __asm { BR              X9 }
      v33 = v17;
      v32 = v1;
    }
    v46 = sub_1000C09D0();
    sub_10009D46C(v46, (uint64_t)&protocol witness table for DecodingError);
    v48 = v47;
    sub_1000BA294(&qword_100BC6CF8);
    *v48 = v31;
    v49 = KeyedDecodingContainer.codingPath.getter(v33);
    v51 = sub_10003BD2C(v49, v50, 0x80000001009F2600);
    v52 = sub_10009D478(v51, enum case for DecodingError.typeMismatch(_:));
    swift_willThrow(v52, v53);
    sub_100099400();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v32, v33);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v58);
  sub_1000B44B0();
}

void sub_10029CEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10011E51C();
  v4 = *(_QWORD *)(v3 - 152);
  sub_1000DA52C((uint64_t)&type metadata for WeatherMapTrackingState.SessionStartedCodingKeys, v3 - 69);
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 8))(v4, v2);
    sub_100099400();
    sub_1000D1D54(*(_QWORD *)(v3 - 88));
    sub_1000BA294(&qword_100BC5FD0);
    v5 = sub_10011DB40();
    _s7Weather24LocationCompositionStateOwst_0(v5, 2, 3, v6);
    sub_1001521AC(v0, *(_QWORD *)(v3 - 128));
    JUMPOUT(0x10029CE98);
  }
  sub_100099400();
  JUMPOUT(0x10029CE90);
}

void sub_10029CF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  sub_10011E6AC();
  v3 = v0;
  v4 = v1;
  v5 = *(_QWORD *)(v2 - 224);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys, v2 - 66, v0, &type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys);
  if (!v5)
  {
    *(_BYTE *)(v2 - 67) = 0;
    v6 = *(_QWORD *)(v2 - 168);
    v7 = KeyedDecodingContainer.decode(_:forKey:)(v2 - 67, v6);
    *(_QWORD *)(v2 - 104) = sub_1000BA294(&qword_100BC5FD0);
    v8 = *(_BYTE **)(v2 - 216);
    *v8 = v7 & 1;
    v9 = sub_1000B4608();
    sub_1000B3290();
    sub_100086DA4(&qword_100BD2568, v10, (uint64_t)&protocol conformance descriptor for WeatherMapOverlayKind);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v9, v2 - 68, v6, v9);
    v11 = *(_QWORD *)(v2 - 88);
    sub_1000C09C0(*(_QWORD *)(v2 - 176));
    sub_100099400();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v3);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 3, *(_QWORD *)(v2 - 104));
    sub_1001521AC((uint64_t)v8, *(_QWORD *)(v2 - 208));
    JUMPOUT(0x10029D000);
  }
  sub_100099400();
  JUMPOUT(0x10029CE8CLL);
}

void sub_10029CF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10029FC00();
  v3 = *(_QWORD *)(v2 - 144);
  sub_1000DA52C((uint64_t)&type metadata for WeatherMapTrackingState.SessionEndedCodingKeys, v2 - 65);
  if (v0)
    JUMPOUT(0x10029CFB4);
  sub_100098748(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_100099400();
  sub_1000D1D54(*(_QWORD *)(v2 - 88));
  sub_1000BA294(&qword_100BC5FD0);
  sub_10011DB40();
  JUMPOUT(0x10029CFF8);
}

void sub_10029D0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  _QWORD v42[4];

  sub_100099310();
  a23 = v27;
  a24 = v28;
  sub_1000FC490(v29, v30);
  v31 = sub_1000BA294(&qword_100BD27F8);
  v42[1] = *(_QWORD *)(v31 - 8);
  v42[2] = v31;
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_10009E540();
  v42[0] = sub_1000BA294(&qword_100BD2800);
  sub_1000C6D9C();
  __chkstk_darwin(v33);
  sub_10007A130();
  sub_1000BA294(&qword_100BD2808);
  sub_1000AE898();
  __chkstk_darwin(v34);
  v36 = (char *)v42 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D48C();
  v37 = sub_10029E4C8();
  sub_1000BD9D4((uint64_t)&type metadata for PinnedWeatherMapPlacement.CodingKeys, v38, v37);
  if ((a10 & 1) != 0)
  {
    sub_10011E470();
    sub_100098B5C((uint64_t)&type metadata for PinnedWeatherMapPlacement.TrailingCodingKeys, (uint64_t)&a14);
    v39 = sub_100086154();
    v41(v39, v40);
  }
  else
  {
    a13 = 0;
    sub_10029E540();
    sub_100098B5C((uint64_t)&type metadata for PinnedWeatherMapPlacement.TopCodingKeys, (uint64_t)&a13);
    (*(void (**)(uint64_t, _QWORD))(v25 + 8))(v26, v42[0]);
  }
  sub_100098748((uint64_t)v36, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_1000B44B0();
}

void sub_10029D220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64[10];

  sub_100099310();
  a22 = v27;
  a23 = v28;
  sub_10003BD3C();
  v29 = sub_1000BA294(&qword_100BD27C8);
  v64[7] = *(_QWORD *)(v29 - 8);
  v64[8] = v29;
  sub_10009D98C();
  __chkstk_darwin(v30);
  sub_1000986CC(v31, v64[0]);
  v64[5] = sub_1000BA294(&qword_100BD27D0);
  sub_1000C0120();
  __chkstk_darwin(v32);
  sub_100079FBC();
  v33 = sub_1000BA294(&qword_100BD27D8);
  sub_100099300();
  __chkstk_darwin(v34);
  v36 = (char *)v64 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BE73C(v26);
  v37 = sub_10029E4C8();
  sub_1000EAF74((uint64_t)&type metadata for PinnedWeatherMapPlacement.CodingKeys, v38, v37);
  if (v24)
    goto LABEL_8;
  sub_1000C1D94();
  sub_1000ED24C();
  if (!v39
    || (v64[0] = 0,
        v40 = *(_BYTE *)(v33 + 32),
        v41 = sub_100099408(),
        v47 = sub_10055FF58(v41, v42, v43, v44, v45, v46),
        v49 = v48,
        v51 = v50,
        sub_100098738(),
        v49 != v51 >> 1))
  {
    v52 = sub_1000C09D0();
    sub_10009D46C(v52, (uint64_t)&protocol witness table for DecodingError);
    sub_1000BA294(&qword_100BC6CF8);
    v53 = sub_1000DC8EC((uint64_t)&unk_100B69660);
    v55 = sub_10003BD2C(v53, v54, 0x80000001009F2600);
    v56 = sub_10009DA6C(v55, enum case for DecodingError.typeMismatch(_:));
    swift_willThrow(v56, v57);
    sub_100099400();
    v58 = sub_1000890B8();
    v60(v58, v59);
LABEL_8:
    sub_1000C52EC();
    goto LABEL_9;
  }
  if ((v40 & 1) != 0)
  {
    sub_10011E470();
    sub_1000B46D8((uint64_t)&type metadata for PinnedWeatherMapPlacement.TrailingCodingKeys, (uint64_t)&a13);
    sub_10029FBF4();
    (*(void (**)(uint64_t, _QWORD *))(v23 + 8))(v25, v26);
  }
  else
  {
    a12 = 0;
    sub_10029E540();
    sub_1000B46D8((uint64_t)&type metadata for PinnedWeatherMapPlacement.TopCodingKeys, (uint64_t)&a12);
    sub_10029FBF4();
    v61 = sub_10007A00C();
    v63(v61, v62);
  }
  sub_100099400();
  sub_100098B40((uint64_t)v36, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)v64[3]);
LABEL_9:
  sub_1000B44B0();
}

void sub_10029D46C()
{
  unsigned __int8 *v0;

  sub_10029ABC8(*v0);
}

void sub_10029D474(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_10029AB78(a1, *v1);
}

Swift::Int sub_10029D47C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  sub_10029AB78((uint64_t)v3, v1);
  return Hasher._finalize()();
}

Swift::Int sub_10029D4C4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_10029ABF8();
  return Hasher._finalize()();
}

#error "10029D504: call analysis failed (funcsize=5)"

uint64_t sub_10029D510(_QWORD *a1)
{
  return sub_10029ADA8(a1);
}

#error "10029D534: call analysis failed (funcsize=10)"

#error "10029D558: call analysis failed (funcsize=6)"

void sub_10029D564(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_10029BAB4();
  if (!v1)
    *a1 = v3;
}

void sub_10029D58C()
{
  sub_10029B8B0();
}

#error "10029D5B4: call analysis failed (funcsize=10)"

#error "10029D5D8: call analysis failed (funcsize=6)"

#error "10029D5F4: call analysis failed (funcsize=11)"

#error "10029D61C: call analysis failed (funcsize=6)"

void sub_10029D628()
{
  sub_10029CB94();
}

void sub_10029D63C()
{
  sub_10029C83C();
}

#error "10029D660: call analysis failed (funcsize=11)"

#error "10029D688: call analysis failed (funcsize=6)"

void sub_10029D694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1006927D4(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_10029D6A8(uint64_t a1)
{
  sub_100692984(a1);
}

void sub_10029D6BC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_100692A78(a1);
  if (!v2)
    *a2 = v4;
}

void sub_10029D6E4(uint64_t a1)
{
  char *v1;

  sub_100692B34(a1, *v1);
}

void sub_10029D6FC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_100692BD0(a1);
  if (!v2)
    *a2 = v4;
}

void sub_10029D724(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_100692CAC(a1, *v1);
}

void sub_10029D73C(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  static ListSessionTrigger.read(from:)(a1);
  if (!v2)
    *a2 = v4 & 1;
}

void sub_10029D768(uint64_t a1)
{
  ListSessionTrigger.write(to:)(a1);
}

void sub_10029D780()
{
  sub_100692D74();
}

void sub_10029D794()
{
  sub_100692F00();
}

uint64_t sub_10029D7A8@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a2[3] = sub_1000BA294(&qword_100BD2810);
  sub_10029E5F4(&qword_100BD2818, &qword_100BD2810);
  a2[4] = v5;
  sub_10005F164(a2);
  if ((a1 & 1) != 0)
  {
    v6 = 0x80000001009F80D0;
    v7 = 0xD000000000000022;
  }
  else
  {
    v6 = 0x80000001009F8100;
    v7 = 0xD00000000000001DLL;
  }
  return ShortDescription.init(name:_:)(v7, v6, v4, &unk_100B69660);
}

uint64_t sub_10029D894@<X0>(_QWORD *a1@<X8>)
{
  char *v1;

  return sub_10029D7A8(*v1, a1);
}

uint64_t sub_10029D89C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E57C();
  return ShortDescribable.description.getter(a1, v2);
}

void sub_10029D8C4(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a2[3] = sub_1000BA294(&qword_100BD2828);
  sub_10029E5F4(&qword_100BD2830, &qword_100BD2828);
  a2[4] = v5;
  sub_10005F164(a2);
  if ((a1 & 1) != 0)
    v6 = 0x80000001009F8160;
  else
    v6 = 0x80000001009F8120;
  ShortDescription.init(name:_:)(0xD00000000000003BLL, v6, v4, &unk_100B695D0);
  sub_100079F70();
}

void sub_10029D984(_QWORD *a1@<X8>)
{
  char *v1;

  sub_10029D8C4(*v1, a1);
}

uint64_t sub_10029D98C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E5B8();
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_10029D9B4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v4;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  if (a1 >> 6)
  {
    if (a1 >> 6 != 1)
    {
      v13 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
      *(_QWORD *)(a2 + 24) = sub_1000BA294(&qword_100BD2840);
      sub_10029E5F4(&qword_100BD2848, &qword_100BD2840);
      sub_1000BBEC4(v14);
      v11 = 0x80000001009F8200;
      v10 = 0xD000000000000022;
      v12 = v13;
      return ShortDescription.init(name:_:)(v10, v11, v12, &unk_100B68C30);
    }
    sub_1000FD910();
    _StringGuts.grow(_:)(42);
    v18 = v16;
    v19 = v17;
    sub_1000B25C0(0xD000000000000027, (uint64_t)"WeatherMapPresentationStyle.fullscreen(");
    sub_10029D8C4(v2, &v16);
  }
  else
  {
    sub_1000FD910();
    _StringGuts.grow(_:)(38);
    v18 = v16;
    v19 = v17;
    sub_1000B25C0(0xD000000000000023, (uint64_t)"WeatherMapPresentationStyle.pinned(");
    sub_10029D7A8(v2, &v16);
  }
  v4 = sub_1000BA294(&qword_100BD0D88);
  _print_unlocked<A, B>(_:_:)(&v16, &v18, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v16);
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = v18;
  v7 = v19;
  v8 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  *(_QWORD *)(a2 + 24) = sub_1000BA294(&qword_100BD2840);
  sub_10029E5F4(&qword_100BD2848, &qword_100BD2840);
  sub_1000BBEC4(v9);
  v10 = v6;
  v11 = v7;
  v12 = v8;
  return ShortDescription.init(name:_:)(v10, v11, v12, &unk_100B68C30);
}

uint64_t sub_10029DBA8@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_10029D9B4(*v1, a1);
}

uint64_t sub_10029DBB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10029E630();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_10029DBDC()
{
  unint64_t result;

  result = qword_100BD2508;
  if (!qword_100BD2508)
  {
    result = swift_getWitnessTable(&unk_10098E51C, &unk_100B68C30);
    atomic_store(result, (unint64_t *)&qword_100BD2508);
  }
  return result;
}

unint64_t sub_10029DC1C()
{
  unint64_t result;

  result = qword_100BD2510;
  if (!qword_100BD2510)
  {
    result = swift_getWitnessTable(&unk_10098E574, &unk_100B695D0);
    atomic_store(result, (unint64_t *)&qword_100BD2510);
  }
  return result;
}

unint64_t sub_10029DC5C()
{
  unint64_t result;

  result = qword_100BD2518;
  if (!qword_100BD2518)
  {
    result = swift_getWitnessTable(&unk_10098E5CC, &unk_100B69660);
    atomic_store(result, (unint64_t *)&qword_100BD2518);
  }
  return result;
}

unint64_t sub_10029DC9C()
{
  unint64_t result;

  result = qword_100BD2520;
  if (!qword_100BD2520)
  {
    result = swift_getWitnessTable(&unk_10098EB84, &unk_100B69660);
    atomic_store(result, (unint64_t *)&qword_100BD2520);
  }
  return result;
}

void sub_10029DCD8()
{
  sub_100086DA4(&qword_100BD2528, type metadata accessor for WeatherMapTrackingState, (uint64_t)&unk_10098EBAC);
}

unint64_t sub_10029DD08()
{
  unint64_t result;

  result = qword_100BD2530;
  if (!qword_100BD2530)
  {
    result = swift_getWitnessTable(&unk_10098EBD4, &unk_100B695D0);
    atomic_store(result, (unint64_t *)&qword_100BD2530);
  }
  return result;
}

unint64_t sub_10029DD48()
{
  unint64_t result;

  result = qword_100BD2550;
  if (!qword_100BD2550)
  {
    result = swift_getWitnessTable(&unk_1009902DC, &type metadata for WeatherMapPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2550);
  }
  return result;
}

unint64_t sub_10029DD84()
{
  unint64_t result;

  result = qword_100BD2558;
  if (!qword_100BD2558)
  {
    result = swift_getWitnessTable(&unk_10098EA0C, &unk_100B69540);
    atomic_store(result, (unint64_t *)&qword_100BD2558);
  }
  return result;
}

unint64_t sub_10029DDC0()
{
  unint64_t result;

  result = qword_100BD2560;
  if (!qword_100BD2560)
  {
    result = swift_getWitnessTable(&unk_10098E96C, &unk_100B68C30);
    atomic_store(result, (unint64_t *)&qword_100BD2560);
  }
  return result;
}

unint64_t sub_10029DDFC()
{
  unint64_t result;

  result = qword_100BD2580;
  if (!qword_100BD2580)
  {
    result = swift_getWitnessTable(&unk_10098E9E4, &unk_100B69540);
    atomic_store(result, (unint64_t *)&qword_100BD2580);
  }
  return result;
}

unint64_t sub_10029DE38()
{
  unint64_t result;

  result = qword_100BD2588;
  if (!qword_100BD2588)
  {
    result = swift_getWitnessTable(&unk_10098E944, &unk_100B68C30);
    atomic_store(result, (unint64_t *)&qword_100BD2588);
  }
  return result;
}

unint64_t sub_10029DE74()
{
  unint64_t result;

  result = qword_100BD25C0;
  if (!qword_100BD25C0)
  {
    result = swift_getWitnessTable(&unk_10099028C, &type metadata for WeatherMapPresentationIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD25C0);
  }
  return result;
}

unint64_t sub_10029DEB0()
{
  unint64_t result;

  result = qword_100BD25C8;
  if (!qword_100BD25C8)
  {
    result = swift_getWitnessTable(&unk_10099023C, &type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD25C8);
  }
  return result;
}

unint64_t sub_10029DEEC()
{
  unint64_t result;

  result = qword_100BD25D0;
  if (!qword_100BD25D0)
  {
    result = swift_getWitnessTable(&unk_10098E9BC, &unk_100B694B0);
    atomic_store(result, (unint64_t *)&qword_100BD25D0);
  }
  return result;
}

unint64_t sub_10029DF28()
{
  unint64_t result;

  result = qword_100BD25D8;
  if (!qword_100BD25D8)
  {
    result = swift_getWitnessTable(&unk_1009901EC, &type metadata for WeatherMapPresentationIntent.PinnedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD25D8);
  }
  return result;
}

unint64_t sub_10029DF64()
{
  unint64_t result;

  result = qword_100BD25E0;
  if (!qword_100BD25E0)
  {
    result = swift_getWitnessTable(&unk_10099019C, &type metadata for WeatherMapPresentationIntent.InlineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD25E0);
  }
  return result;
}

unint64_t sub_10029DFA0()
{
  unint64_t result;

  result = qword_100BD2608;
  if (!qword_100BD2608)
  {
    result = swift_getWitnessTable(&unk_10098E994, &unk_100B694B0);
    atomic_store(result, (unint64_t *)&qword_100BD2608);
  }
  return result;
}

unint64_t sub_10029DFDC()
{
  unint64_t result;

  result = qword_100BD2638;
  if (!qword_100BD2638)
  {
    result = swift_getWitnessTable(&unk_10099014C, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2638);
  }
  return result;
}

unint64_t sub_10029E018()
{
  unint64_t result;

  result = qword_100BD2640;
  if (!qword_100BD2640)
  {
    result = swift_getWitnessTable(&unk_1009900FC, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.ExternalStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2640);
  }
  return result;
}

unint64_t sub_10029E054()
{
  unint64_t result;

  result = qword_100BD2648;
  if (!qword_100BD2648)
  {
    result = swift_getWitnessTable(&unk_1009900AC, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.PinnedMapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2648);
  }
  return result;
}

unint64_t sub_10029E090()
{
  unint64_t result;

  result = qword_100BD2650;
  if (!qword_100BD2650)
  {
    result = swift_getWitnessTable(&unk_10099005C, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.InlineMapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2650);
  }
  return result;
}

unint64_t sub_10029E0CC()
{
  unint64_t result;

  result = qword_100BD2658;
  if (!qword_100BD2658)
  {
    result = swift_getWitnessTable(&unk_10099000C, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.BarButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2658);
  }
  return result;
}

unint64_t sub_10029E108()
{
  unint64_t result;

  result = qword_100BD26A8;
  if (!qword_100BD26A8)
  {
    result = swift_getWitnessTable(&unk_10098FFBC, &type metadata for WeatherMapPresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD26A8);
  }
  return result;
}

unint64_t sub_10029E144()
{
  unint64_t result;

  result = qword_100BD26B0;
  if (!qword_100BD26B0)
  {
    result = swift_getWitnessTable(&unk_10098FF6C, &type metadata for WeatherMapPresentationStyle.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD26B0);
  }
  return result;
}

unint64_t sub_10029E180()
{
  unint64_t result;

  result = qword_100BD26B8;
  if (!qword_100BD26B8)
  {
    result = swift_getWitnessTable(&unk_10098E91C, &unk_100B695D0);
    atomic_store(result, (unint64_t *)&qword_100BD26B8);
  }
  return result;
}

unint64_t sub_10029E1BC()
{
  unint64_t result;

  result = qword_100BD26C0;
  if (!qword_100BD26C0)
  {
    result = swift_getWitnessTable(&unk_10098FF1C, &type metadata for WeatherMapPresentationStyle.PinnedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD26C0);
  }
  return result;
}

unint64_t sub_10029E1F8()
{
  unint64_t result;

  result = qword_100BD26C8;
  if (!qword_100BD26C8)
  {
    result = swift_getWitnessTable(&unk_10098E87C, &unk_100B69660);
    atomic_store(result, (unint64_t *)&qword_100BD26C8);
  }
  return result;
}

unint64_t sub_10029E234()
{
  unint64_t result;

  result = qword_100BD26D0;
  if (!qword_100BD26D0)
  {
    result = swift_getWitnessTable(&unk_10098FECC, &type metadata for WeatherMapPresentationStyle.InlineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD26D0);
  }
  return result;
}

unint64_t sub_10029E270()
{
  unint64_t result;

  result = qword_100BD26F8;
  if (!qword_100BD26F8)
  {
    result = swift_getWitnessTable(&unk_10098E8F4, &unk_100B695D0);
    atomic_store(result, (unint64_t *)&qword_100BD26F8);
  }
  return result;
}

unint64_t sub_10029E2AC()
{
  unint64_t result;

  result = qword_100BD2700;
  if (!qword_100BD2700)
  {
    result = swift_getWitnessTable(&unk_10098E854, &unk_100B69660);
    atomic_store(result, (unint64_t *)&qword_100BD2700);
  }
  return result;
}

unint64_t sub_10029E2E8()
{
  unint64_t result;

  result = qword_100BD2720;
  if (!qword_100BD2720)
  {
    result = swift_getWitnessTable(&unk_10098FE7C, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2720);
  }
  return result;
}

unint64_t sub_10029E324()
{
  unint64_t result;

  result = qword_100BD2728;
  if (!qword_100BD2728)
  {
    result = swift_getWitnessTable(&unk_10098FE2C, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.ScaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2728);
  }
  return result;
}

unint64_t sub_10029E360()
{
  unint64_t result;

  result = qword_100BD2730;
  if (!qword_100BD2730)
  {
    result = swift_getWitnessTable(&unk_10098FDDC, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.SheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2730);
  }
  return result;
}

unint64_t sub_10029E39C()
{
  unint64_t result;

  result = qword_100BD2778;
  if (!qword_100BD2778)
  {
    result = swift_getWitnessTable(&unk_10098FD8C, &type metadata for WeatherMapTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2778);
  }
  return result;
}

unint64_t sub_10029E3D8()
{
  unint64_t result;

  result = qword_100BD2780;
  if (!qword_100BD2780)
  {
    result = swift_getWitnessTable(&unk_10098FD3C, &type metadata for WeatherMapTrackingState.SessionEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2780);
  }
  return result;
}

unint64_t sub_10029E414()
{
  unint64_t result;

  result = qword_100BD2788;
  if (!qword_100BD2788)
  {
    result = swift_getWitnessTable(&unk_10098FCEC, &type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2788);
  }
  return result;
}

unint64_t sub_10029E450()
{
  unint64_t result;

  result = qword_100BD2790;
  if (!qword_100BD2790)
  {
    result = swift_getWitnessTable(&unk_10098FC9C, &type metadata for WeatherMapTrackingState.SessionStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2790);
  }
  return result;
}

unint64_t sub_10029E48C()
{
  unint64_t result;

  result = qword_100BD2798;
  if (!qword_100BD2798)
  {
    result = swift_getWitnessTable(&unk_10098FC4C, &type metadata for WeatherMapTrackingState.SessionShouldStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2798);
  }
  return result;
}

unint64_t sub_10029E4C8()
{
  unint64_t result;

  result = qword_100BD27E0;
  if (!qword_100BD27E0)
  {
    result = swift_getWitnessTable(&unk_10098FBFC, &type metadata for PinnedWeatherMapPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD27E0);
  }
  return result;
}

unint64_t sub_10029E504()
{
  unint64_t result;

  result = qword_100BD27E8;
  if (!qword_100BD27E8)
  {
    result = swift_getWitnessTable(&unk_10098FBAC, &type metadata for PinnedWeatherMapPlacement.TrailingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD27E8);
  }
  return result;
}

unint64_t sub_10029E540()
{
  unint64_t result;

  result = qword_100BD27F0;
  if (!qword_100BD27F0)
  {
    result = swift_getWitnessTable(&unk_10098FB5C, &type metadata for PinnedWeatherMapPlacement.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD27F0);
  }
  return result;
}

unint64_t sub_10029E57C()
{
  unint64_t result;

  result = qword_100BD2820;
  if (!qword_100BD2820)
  {
    result = swift_getWitnessTable(&unk_10098E5F4, &unk_100B69660);
    atomic_store(result, (unint64_t *)&qword_100BD2820);
  }
  return result;
}

unint64_t sub_10029E5B8()
{
  unint64_t result;

  result = qword_100BD2838;
  if (!qword_100BD2838)
  {
    result = swift_getWitnessTable(&unk_10098E59C, &unk_100B695D0);
    atomic_store(result, (unint64_t *)&qword_100BD2838);
  }
  return result;
}

void sub_10029E5F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_100075EB0(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v3), a1);
  }
  sub_10004A298();
}

unint64_t sub_10029E630()
{
  unint64_t result;

  result = qword_100BD2850;
  if (!qword_100BD2850)
  {
    result = swift_getWitnessTable(&unk_10098E544, &unk_100B68C30);
    atomic_store(result, (unint64_t *)&qword_100BD2850);
  }
  return result;
}

ValueMetadata *type metadata accessor for PinnedWeatherMapPlacement.CodingKeys()
{
  return &type metadata for PinnedWeatherMapPlacement.CodingKeys;
}

ValueMetadata *type metadata accessor for PinnedWeatherMapPlacement.TopCodingKeys()
{
  return &type metadata for PinnedWeatherMapPlacement.TopCodingKeys;
}

ValueMetadata *type metadata accessor for PinnedWeatherMapPlacement.TrailingCodingKeys()
{
  return &type metadata for PinnedWeatherMapPlacement.TrailingCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapTrackingState.CodingKeys()
{
  return &type metadata for WeatherMapTrackingState.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapTrackingState.SessionShouldStartCodingKeys()
{
  return &type metadata for WeatherMapTrackingState.SessionShouldStartCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapTrackingState.SessionStartedCodingKeys()
{
  return &type metadata for WeatherMapTrackingState.SessionStartedCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapTrackingState.SessionShouldEndCodingKeys()
{
  return &type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapTrackingState.SessionEndedCodingKeys()
{
  return &type metadata for WeatherMapTrackingState.SessionEndedCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys()
{
  return &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationStyle.FullscreenTransitionStyle.SheetCodingKeys()
{
  return &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.SheetCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationStyle.FullscreenTransitionStyle.ScaleCodingKeys()
{
  return &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.ScaleCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationStyle.CodingKeys()
{
  return &type metadata for WeatherMapPresentationStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationStyle.InlineCodingKeys()
{
  return &type metadata for WeatherMapPresentationStyle.InlineCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationStyle.PinnedCodingKeys()
{
  return &type metadata for WeatherMapPresentationStyle.PinnedCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationStyle.FullscreenCodingKeys()
{
  return &type metadata for WeatherMapPresentationStyle.FullscreenCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.FullscreenPresentationSource.BarButtonCodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.BarButtonCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.FullscreenPresentationSource.InlineMapCodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.InlineMapCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.FullscreenPresentationSource.PinnedMapCodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.PinnedMapCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.FullscreenPresentationSource.ExternalStateCodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.ExternalStateCodingKeys;
}

uint64_t _s7Weather27WeatherMapPresentationStyleO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10029E810 + 4 * byte_10098E415[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10029E844 + 4 * byte_10098E410[v4]))();
}

uint64_t sub_10029E848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10029E850);
  return result;
}

_BYTE *sub_10029E858(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x10029E860);
  return sub_1000951D4((_BYTE *)a1, a2 + 2);
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.CodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.InlineCodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.InlineCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.PinnedCodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.PinnedCodingKeys;
}

uint64_t _s7Weather27WeatherMapPresentationStyleO16PinnedCodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s7Weather27WeatherMapPresentationStyleO16PinnedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10029E92C + 4 * byte_10098E41A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10029E94C + 4 * byte_10098E41F[v4]))();
}

_BYTE *sub_10029E92C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10029E94C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10029E954(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10029E95C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10029E964(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10029E96C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationIntent.FullscreenCodingKeys()
{
  return &type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys;
}

uint64_t storeEnumTagSinglePayload for WeatherMapPresentationState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10029E9D4 + 4 * byte_10098E429[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10029EA08 + 4 * byte_10098E424[v4]))();
}

uint64_t sub_10029EA08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10029EA10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10029EA18);
  return result;
}

uint64_t sub_10029EA24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10029EA2CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10029EA30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10029EA38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherMapPresentationState.CodingKeys()
{
  return &type metadata for WeatherMapPresentationState.CodingKeys;
}

uint64_t _s7Weather23WeatherMapTrackingStateO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10029EAA0 + 4 * byte_10098E433[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10029EAD4 + 4 * byte_10098E42E[v4]))();
}

uint64_t sub_10029EAD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10029EAE0);
  return result;
}

_BYTE *sub_10029EAE8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x10029EAF0);
  return sub_1000951D4((_BYTE *)a1, a2 + 3);
}

uint64_t sub_10029EB00(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 4)
    return v1 - 3;
  else
    return 0;
}

_BYTE *sub_10029EB14(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 3;
  return result;
}

uint64_t _s7Weather25PinnedWeatherMapPlacementO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_10009C7E0(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_10009C7E0((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_10009C7E0((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_10009C7E0((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_10009C7E0(v8);
}

uint64_t _s7Weather25PinnedWeatherMapPlacementO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10029EBF4 + 4 * byte_10098E44C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10029EC28 + 4 * byte_10098E447[v4]))();
}

uint64_t sub_10029EC2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10029EC34);
  return result;
}

_BYTE *sub_10029EC3C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x10029EC44);
  return sub_1000951D4((_BYTE *)a1, a2 + 1);
}

unint64_t sub_10029EC58()
{
  unint64_t result;

  result = qword_100BD2858;
  if (!qword_100BD2858)
  {
    result = swift_getWitnessTable(&unk_10098EEEC, &unk_100B694B0);
    atomic_store(result, (unint64_t *)&qword_100BD2858);
  }
  return result;
}

unint64_t sub_10029EC98()
{
  unint64_t result;

  result = qword_100BD2860;
  if (!qword_100BD2860)
  {
    result = swift_getWitnessTable(&unk_10098EFA4, &type metadata for WeatherMapPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2860);
  }
  return result;
}

unint64_t sub_10029ECD8()
{
  unint64_t result;

  result = qword_100BD2868;
  if (!qword_100BD2868)
  {
    result = swift_getWitnessTable(&unk_10098F05C, &type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2868);
  }
  return result;
}

unint64_t sub_10029ED18()
{
  unint64_t result;

  result = qword_100BD2870;
  if (!qword_100BD2870)
  {
    result = swift_getWitnessTable(&unk_10098F1B4, &type metadata for WeatherMapPresentationIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2870);
  }
  return result;
}

unint64_t sub_10029ED58()
{
  unint64_t result;

  result = qword_100BD2878;
  if (!qword_100BD2878)
  {
    result = swift_getWitnessTable(&unk_10098F3AC, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2878);
  }
  return result;
}

unint64_t sub_10029ED98()
{
  unint64_t result;

  result = qword_100BD2880;
  if (!qword_100BD2880)
  {
    result = swift_getWitnessTable(&unk_10098F464, &type metadata for WeatherMapPresentationStyle.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2880);
  }
  return result;
}

unint64_t sub_10029EDD8()
{
  unint64_t result;

  result = qword_100BD2888;
  if (!qword_100BD2888)
  {
    result = swift_getWitnessTable(&unk_10098F51C, &type metadata for WeatherMapPresentationStyle.PinnedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2888);
  }
  return result;
}

unint64_t sub_10029EE18()
{
  unint64_t result;

  result = qword_100BD2890;
  if (!qword_100BD2890)
  {
    result = swift_getWitnessTable(&unk_10098F624, &type metadata for WeatherMapPresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2890);
  }
  return result;
}

unint64_t sub_10029EE58()
{
  unint64_t result;

  result = qword_100BD2898;
  if (!qword_100BD2898)
  {
    result = swift_getWitnessTable(&unk_10098F77C, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2898);
  }
  return result;
}

unint64_t sub_10029EE98()
{
  unint64_t result;

  result = qword_100BD28A0;
  if (!qword_100BD28A0)
  {
    result = swift_getWitnessTable(&unk_10098F884, &type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28A0);
  }
  return result;
}

unint64_t sub_10029EED8()
{
  unint64_t result;

  result = qword_100BD28A8;
  if (!qword_100BD28A8)
  {
    result = swift_getWitnessTable(&unk_10098F9DC, &type metadata for WeatherMapTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28A8);
  }
  return result;
}

unint64_t sub_10029EF18()
{
  unint64_t result;

  result = qword_100BD28B0;
  if (!qword_100BD28B0)
  {
    result = swift_getWitnessTable(&unk_10098FB34, &type metadata for PinnedWeatherMapPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28B0);
  }
  return result;
}

unint64_t sub_10029EF58()
{
  unint64_t result;

  result = qword_100BD28B8;
  if (!qword_100BD28B8)
  {
    result = swift_getWitnessTable(&unk_10098FA54, &type metadata for PinnedWeatherMapPlacement.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28B8);
  }
  return result;
}

unint64_t sub_10029EF98()
{
  unint64_t result;

  result = qword_100BD28C0;
  if (!qword_100BD28C0)
  {
    result = swift_getWitnessTable(&unk_10098FA7C, &type metadata for PinnedWeatherMapPlacement.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28C0);
  }
  return result;
}

unint64_t sub_10029EFD8()
{
  unint64_t result;

  result = qword_100BD28C8;
  if (!qword_100BD28C8)
  {
    result = swift_getWitnessTable(&unk_10098FA04, &type metadata for PinnedWeatherMapPlacement.TrailingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28C8);
  }
  return result;
}

unint64_t sub_10029F018()
{
  unint64_t result;

  result = qword_100BD28D0;
  if (!qword_100BD28D0)
  {
    result = swift_getWitnessTable(&unk_10098FA2C, &type metadata for PinnedWeatherMapPlacement.TrailingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28D0);
  }
  return result;
}

unint64_t sub_10029F058()
{
  unint64_t result;

  result = qword_100BD28D8;
  if (!qword_100BD28D8)
  {
    result = swift_getWitnessTable(&unk_10098FAA4, &type metadata for PinnedWeatherMapPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28D8);
  }
  return result;
}

unint64_t sub_10029F098()
{
  unint64_t result;

  result = qword_100BD28E0;
  if (!qword_100BD28E0)
  {
    result = swift_getWitnessTable(&unk_10098FACC, &type metadata for PinnedWeatherMapPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28E0);
  }
  return result;
}

unint64_t sub_10029F0D8()
{
  unint64_t result;

  result = qword_100BD28E8;
  if (!qword_100BD28E8)
  {
    result = swift_getWitnessTable(&unk_10098F8FC, &type metadata for WeatherMapTrackingState.SessionShouldStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28E8);
  }
  return result;
}

unint64_t sub_10029F118()
{
  unint64_t result;

  result = qword_100BD28F0;
  if (!qword_100BD28F0)
  {
    result = swift_getWitnessTable(&unk_10098F924, &type metadata for WeatherMapTrackingState.SessionShouldStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28F0);
  }
  return result;
}

unint64_t sub_10029F158()
{
  unint64_t result;

  result = qword_100BD28F8;
  if (!qword_100BD28F8)
  {
    result = swift_getWitnessTable(&unk_10098F8AC, &type metadata for WeatherMapTrackingState.SessionStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD28F8);
  }
  return result;
}

unint64_t sub_10029F198()
{
  unint64_t result;

  result = qword_100BD2900;
  if (!qword_100BD2900)
  {
    result = swift_getWitnessTable(&unk_10098F8D4, &type metadata for WeatherMapTrackingState.SessionStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2900);
  }
  return result;
}

unint64_t sub_10029F1D8()
{
  unint64_t result;

  result = qword_100BD2908;
  if (!qword_100BD2908)
  {
    result = swift_getWitnessTable(&unk_10098F7F4, &type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2908);
  }
  return result;
}

unint64_t sub_10029F218()
{
  unint64_t result;

  result = qword_100BD2910;
  if (!qword_100BD2910)
  {
    result = swift_getWitnessTable(&unk_10098F81C, &type metadata for WeatherMapTrackingState.SessionShouldEndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2910);
  }
  return result;
}

unint64_t sub_10029F258()
{
  unint64_t result;

  result = qword_100BD2918;
  if (!qword_100BD2918)
  {
    result = swift_getWitnessTable(&unk_10098F7A4, &type metadata for WeatherMapTrackingState.SessionEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2918);
  }
  return result;
}

unint64_t sub_10029F298()
{
  unint64_t result;

  result = qword_100BD2920;
  if (!qword_100BD2920)
  {
    result = swift_getWitnessTable(&unk_10098F7CC, &type metadata for WeatherMapTrackingState.SessionEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2920);
  }
  return result;
}

unint64_t sub_10029F2D8()
{
  unint64_t result;

  result = qword_100BD2928;
  if (!qword_100BD2928)
  {
    result = swift_getWitnessTable(&unk_10098F94C, &type metadata for WeatherMapTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2928);
  }
  return result;
}

unint64_t sub_10029F318()
{
  unint64_t result;

  result = qword_100BD2930;
  if (!qword_100BD2930)
  {
    result = swift_getWitnessTable(&unk_10098F974, &type metadata for WeatherMapTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2930);
  }
  return result;
}

unint64_t sub_10029F358()
{
  unint64_t result;

  result = qword_100BD2938;
  if (!qword_100BD2938)
  {
    result = swift_getWitnessTable(&unk_10098F69C, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.SheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2938);
  }
  return result;
}

unint64_t sub_10029F398()
{
  unint64_t result;

  result = qword_100BD2940;
  if (!qword_100BD2940)
  {
    result = swift_getWitnessTable(&unk_10098F6C4, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.SheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2940);
  }
  return result;
}

unint64_t sub_10029F3D8()
{
  unint64_t result;

  result = qword_100BD2948;
  if (!qword_100BD2948)
  {
    result = swift_getWitnessTable(&unk_10098F64C, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.ScaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2948);
  }
  return result;
}

unint64_t sub_10029F418()
{
  unint64_t result;

  result = qword_100BD2950;
  if (!qword_100BD2950)
  {
    result = swift_getWitnessTable(&unk_10098F674, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.ScaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2950);
  }
  return result;
}

unint64_t sub_10029F458()
{
  unint64_t result;

  result = qword_100BD2958;
  if (!qword_100BD2958)
  {
    result = swift_getWitnessTable(&unk_10098F6EC, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2958);
  }
  return result;
}

unint64_t sub_10029F498()
{
  unint64_t result;

  result = qword_100BD2960;
  if (!qword_100BD2960)
  {
    result = swift_getWitnessTable(&unk_10098F714, &type metadata for WeatherMapPresentationStyle.FullscreenTransitionStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2960);
  }
  return result;
}

unint64_t sub_10029F4D8()
{
  unint64_t result;

  result = qword_100BD2968;
  if (!qword_100BD2968)
  {
    result = swift_getWitnessTable(&unk_10098F544, &type metadata for WeatherMapPresentationStyle.InlineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2968);
  }
  return result;
}

unint64_t sub_10029F518()
{
  unint64_t result;

  result = qword_100BD2970;
  if (!qword_100BD2970)
  {
    result = swift_getWitnessTable(&unk_10098F56C, &type metadata for WeatherMapPresentationStyle.InlineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2970);
  }
  return result;
}

unint64_t sub_10029F558()
{
  unint64_t result;

  result = qword_100BD2978;
  if (!qword_100BD2978)
  {
    result = swift_getWitnessTable(&unk_10098F48C, &type metadata for WeatherMapPresentationStyle.PinnedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2978);
  }
  return result;
}

unint64_t sub_10029F598()
{
  unint64_t result;

  result = qword_100BD2980;
  if (!qword_100BD2980)
  {
    result = swift_getWitnessTable(&unk_10098F4B4, &type metadata for WeatherMapPresentationStyle.PinnedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2980);
  }
  return result;
}

unint64_t sub_10029F5D8()
{
  unint64_t result;

  result = qword_100BD2988;
  if (!qword_100BD2988)
  {
    result = swift_getWitnessTable(&unk_10098F3D4, &type metadata for WeatherMapPresentationStyle.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2988);
  }
  return result;
}

unint64_t sub_10029F618()
{
  unint64_t result;

  result = qword_100BD2990;
  if (!qword_100BD2990)
  {
    result = swift_getWitnessTable(&unk_10098F3FC, &type metadata for WeatherMapPresentationStyle.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2990);
  }
  return result;
}

unint64_t sub_10029F658()
{
  unint64_t result;

  result = qword_100BD2998;
  if (!qword_100BD2998)
  {
    result = swift_getWitnessTable(&unk_10098F594, &type metadata for WeatherMapPresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2998);
  }
  return result;
}

unint64_t sub_10029F698()
{
  unint64_t result;

  result = qword_100BD29A0;
  if (!qword_100BD29A0)
  {
    result = swift_getWitnessTable(&unk_10098F5BC, &type metadata for WeatherMapPresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29A0);
  }
  return result;
}

unint64_t sub_10029F6D8()
{
  unint64_t result;

  result = qword_100BD29A8;
  if (!qword_100BD29A8)
  {
    result = swift_getWitnessTable(&unk_10098F2CC, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.BarButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29A8);
  }
  return result;
}

unint64_t sub_10029F718()
{
  unint64_t result;

  result = qword_100BD29B0;
  if (!qword_100BD29B0)
  {
    result = swift_getWitnessTable(&unk_10098F2F4, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.BarButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29B0);
  }
  return result;
}

unint64_t sub_10029F758()
{
  unint64_t result;

  result = qword_100BD29B8;
  if (!qword_100BD29B8)
  {
    result = swift_getWitnessTable(&unk_10098F27C, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.InlineMapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29B8);
  }
  return result;
}

unint64_t sub_10029F798()
{
  unint64_t result;

  result = qword_100BD29C0;
  if (!qword_100BD29C0)
  {
    result = swift_getWitnessTable(&unk_10098F2A4, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.InlineMapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29C0);
  }
  return result;
}

unint64_t sub_10029F7D8()
{
  unint64_t result;

  result = qword_100BD29C8;
  if (!qword_100BD29C8)
  {
    result = swift_getWitnessTable(&unk_10098F22C, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.PinnedMapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29C8);
  }
  return result;
}

unint64_t sub_10029F818()
{
  unint64_t result;

  result = qword_100BD29D0;
  if (!qword_100BD29D0)
  {
    result = swift_getWitnessTable(&unk_10098F254, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.PinnedMapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29D0);
  }
  return result;
}

unint64_t sub_10029F858()
{
  unint64_t result;

  result = qword_100BD29D8;
  if (!qword_100BD29D8)
  {
    result = swift_getWitnessTable(&unk_10098F1DC, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.ExternalStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29D8);
  }
  return result;
}

unint64_t sub_10029F898()
{
  unint64_t result;

  result = qword_100BD29E0;
  if (!qword_100BD29E0)
  {
    result = swift_getWitnessTable(&unk_10098F204, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.ExternalStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29E0);
  }
  return result;
}

unint64_t sub_10029F8D8()
{
  unint64_t result;

  result = qword_100BD29E8;
  if (!qword_100BD29E8)
  {
    result = swift_getWitnessTable(&unk_10098F31C, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29E8);
  }
  return result;
}

unint64_t sub_10029F918()
{
  unint64_t result;

  result = qword_100BD29F0;
  if (!qword_100BD29F0)
  {
    result = swift_getWitnessTable(&unk_10098F344, &type metadata for WeatherMapPresentationIntent.FullscreenPresentationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29F0);
  }
  return result;
}

unint64_t sub_10029F958()
{
  unint64_t result;

  result = qword_100BD29F8;
  if (!qword_100BD29F8)
  {
    result = swift_getWitnessTable(&unk_10098F0D4, &type metadata for WeatherMapPresentationIntent.InlineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD29F8);
  }
  return result;
}

unint64_t sub_10029F998()
{
  unint64_t result;

  result = qword_100BD2A00;
  if (!qword_100BD2A00)
  {
    result = swift_getWitnessTable(&unk_10098F0FC, &type metadata for WeatherMapPresentationIntent.InlineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A00);
  }
  return result;
}

unint64_t sub_10029F9D8()
{
  unint64_t result;

  result = qword_100BD2A08;
  if (!qword_100BD2A08)
  {
    result = swift_getWitnessTable(&unk_10098F084, &type metadata for WeatherMapPresentationIntent.PinnedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A08);
  }
  return result;
}

unint64_t sub_10029FA18()
{
  unint64_t result;

  result = qword_100BD2A10;
  if (!qword_100BD2A10)
  {
    result = swift_getWitnessTable(&unk_10098F0AC, &type metadata for WeatherMapPresentationIntent.PinnedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A10);
  }
  return result;
}

unint64_t sub_10029FA58()
{
  unint64_t result;

  result = qword_100BD2A18;
  if (!qword_100BD2A18)
  {
    result = swift_getWitnessTable(&unk_10098EFCC, &type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A18);
  }
  return result;
}

unint64_t sub_10029FA98()
{
  unint64_t result;

  result = qword_100BD2A20;
  if (!qword_100BD2A20)
  {
    result = swift_getWitnessTable(&unk_10098EFF4, &type metadata for WeatherMapPresentationIntent.FullscreenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A20);
  }
  return result;
}

unint64_t sub_10029FAD8()
{
  unint64_t result;

  result = qword_100BD2A28;
  if (!qword_100BD2A28)
  {
    result = swift_getWitnessTable(&unk_10098F124, &type metadata for WeatherMapPresentationIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A28);
  }
  return result;
}

unint64_t sub_10029FB18()
{
  unint64_t result;

  result = qword_100BD2A30;
  if (!qword_100BD2A30)
  {
    result = swift_getWitnessTable(&unk_10098F14C, &type metadata for WeatherMapPresentationIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A30);
  }
  return result;
}

unint64_t sub_10029FB58()
{
  unint64_t result;

  result = qword_100BD2A38;
  if (!qword_100BD2A38)
  {
    result = swift_getWitnessTable(&unk_10098EF14, &type metadata for WeatherMapPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A38);
  }
  return result;
}

unint64_t sub_10029FB98()
{
  unint64_t result;

  result = qword_100BD2A40;
  if (!qword_100BD2A40)
  {
    result = swift_getWitnessTable(&unk_10098EF3C, &type metadata for WeatherMapPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A40);
  }
  return result;
}

unint64_t sub_10029FC00()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_10029E3D8();
}

void sub_10029FC0C()
{
  sub_1000FFAB4();
}

unint64_t sub_10029FC18()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_10029E090();
}

BOOL sub_10029FC24()
{
  char v0;

  return v0 != 0;
}

void sub_10029FC2C(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  sub_10004A298();
}

void sub_10029FC4C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_10029FC2C(a1, *v1);
}

_QWORD *sub_10029FC54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  char v14;

  v3 = sub_1000BA294(&qword_100BD2A50);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100098728();
  v7 = v6 - v5;
  v8 = a1[3];
  v9 = a1[4];
  v10 = sub_1000DB418(a1, v8);
  v11 = sub_1002A026C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NetworkInterface.CodingKeys, &type metadata for NetworkInterface.CodingKeys, v11, v8, v9);
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    sub_1002A02A8();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for NetworkInterface.CodingType, v12, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    v10 = (_QWORD *)(0x3020001u >> (8 * v14));
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  return v10;
}

void sub_10029FD7C(_QWORD *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = sub_1000BA294(&qword_100BD2A68);
  __chkstk_darwin(v4);
  sub_100098728();
  v5 = a1[3];
  v6 = a1[4];
  sub_1000DB418(a1, v5);
  v7 = sub_1002A026C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NetworkInterface.CodingKeys, &type metadata for NetworkInterface.CodingKeys, v7, v5, v6);
  __asm { BR              X10 }
}

uint64_t sub_10029FE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 67) = 1;
  v4 = sub_1002A02E4();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3 - 67, v5, v0, &type metadata for NetworkInterface.CodingType, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

BOOL sub_10029FEE8(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59AA8, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

BOOL sub_10029FF2C(Swift::String a1)
{
  return sub_10029FEE8(a1);
}

uint64_t sub_10029FF44()
{
  return 1701869940;
}

unint64_t sub_10029FF54(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59AE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_10029FF9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10029FFC8 + 4 * byte_100990334[a1]))(1768319351, 0xE400000000000000);
}

uint64_t sub_10029FFC8()
{
  return 0x72616C756C6C6563;
}

uint64_t sub_10029FFE0()
{
  return 0x726568746FLL;
}

uint64_t sub_10029FFF4()
{
  return 0x6E776F6E6B6E75;
}

BOOL sub_1002A001C@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_10029FEE8(*a1);
  *a2 = result;
  return result;
}

void sub_1002A004C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_10029FF44();
  a1[1] = v2;
  sub_10004A298();
}

BOOL sub_1002A0070@<W0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_10029FF2C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002A0098(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002A026C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A00C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002A026C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002A00E8()
{
  sub_10068B268();
}

void sub_1002A00F4()
{
  unsigned __int8 *v0;

  sub_1004A74B0(*v0);
}

void sub_1002A00FC()
{
  sub_1001D8AD4();
}

void sub_1002A0104(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D9E54(a1, *v1);
}

unint64_t sub_1002A010C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10029FF54(*a1);
  *a2 = result;
  return result;
}

void sub_1002A0138(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_10029FF9C(*v1);
  a1[1] = v3;
  sub_10004A298();
}

uint64_t sub_1002A015C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002A0618();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1002A01B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002A0618();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

_QWORD *sub_1002A0204@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_10029FC54(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

void sub_1002A022C(_QWORD *a1)
{
  char *v1;

  sub_10029FD7C(a1, *v1);
}

uint64_t sub_1002A0244(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002A0320();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1002A026C()
{
  unint64_t result;

  result = qword_100BD2A58;
  if (!qword_100BD2A58)
  {
    result = swift_getWitnessTable(&unk_1009906C4, &type metadata for NetworkInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2A58);
  }
  return result;
}

unint64_t sub_1002A02A8()
{
  unint64_t result;

  result = qword_100BD2A60;
  if (!qword_100BD2A60)
  {
    result = swift_getWitnessTable(&unk_10099069C, &type metadata for NetworkInterface.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD2A60);
  }
  return result;
}

unint64_t sub_1002A02E4()
{
  unint64_t result;

  result = qword_100BD2A70;
  if (!qword_100BD2A70)
  {
    result = swift_getWitnessTable(&unk_100990674, &type metadata for NetworkInterface.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD2A70);
  }
  return result;
}

unint64_t sub_1002A0320()
{
  unint64_t result;

  result = qword_100BD2A88;
  if (!qword_100BD2A88)
  {
    result = swift_getWitnessTable(&unk_1009903C8, &type metadata for NetworkInterface);
    atomic_store(result, (unint64_t *)&qword_100BD2A88);
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterface.CodingType()
{
  return &type metadata for NetworkInterface.CodingType;
}

uint64_t storeEnumTagSinglePayload for NetworkInterface.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002A03B0 + 4 * byte_10099033C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002A03D0 + 4 * byte_100990341[v4]))();
}

_BYTE *sub_1002A03B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002A03D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002A03D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002A03E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002A03E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002A03F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterface.CodingKeys()
{
  return &type metadata for NetworkInterface.CodingKeys;
}

uint64_t _s7Weather16NetworkInterfaceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1002A0458 + 4 * byte_10099034B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002A048C + 4 * byte_100990346[v4]))();
}

uint64_t sub_1002A048C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A0494(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002A049CLL);
  return result;
}

uint64_t sub_1002A04A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002A04B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1002A04B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A04BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterface()
{
  return &type metadata for NetworkInterface;
}

unint64_t sub_1002A04DC()
{
  unint64_t result;

  result = qword_100BD2A98;
  if (!qword_100BD2A98)
  {
    result = swift_getWitnessTable(&unk_100990448, &type metadata for NetworkInterface);
    atomic_store(result, (unint64_t *)&qword_100BD2A98);
  }
  return result;
}

unint64_t sub_1002A051C()
{
  unint64_t result;

  result = qword_100BD2AA0;
  if (!qword_100BD2AA0)
  {
    result = swift_getWitnessTable(&unk_1009905AC, &type metadata for NetworkInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2AA0);
  }
  return result;
}

unint64_t sub_1002A055C()
{
  unint64_t result;

  result = qword_100BD2AA8;
  if (!qword_100BD2AA8)
  {
    result = swift_getWitnessTable(&unk_10099064C, &type metadata for NetworkInterface.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD2AA8);
  }
  return result;
}

unint64_t sub_1002A059C()
{
  unint64_t result;

  result = qword_100BD2AB0;
  if (!qword_100BD2AB0)
  {
    result = swift_getWitnessTable(&unk_1009904E4, &type metadata for NetworkInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2AB0);
  }
  return result;
}

unint64_t sub_1002A05DC()
{
  unint64_t result;

  result = qword_100BD2AB8;
  if (!qword_100BD2AB8)
  {
    result = swift_getWitnessTable(&unk_10099050C, &type metadata for NetworkInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD2AB8);
  }
  return result;
}

unint64_t sub_1002A0618()
{
  unint64_t result;

  result = qword_100BD2AC0;
  if (!qword_100BD2AC0)
  {
    result = swift_getWitnessTable(&unk_1009905D4, &type metadata for NetworkInterface.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD2AC0);
  }
  return result;
}

uint64_t sub_1002A0654@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[3];
  uint64_t v27;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BD2B70);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (v27)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1000DB418(a1, v8);
    v10 = sub_1000BA294(&qword_100BC44E0);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
    if (result)
    {
      v11 = result;
      v12 = sub_100068EB4((uint64_t)v26, v27);
      __chkstk_darwin(v12);
      v14 = (_QWORD *)((char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v15 + 16))(v14);
      v16 = *v14;
      v17 = type metadata accessor for DayPickerInteractor();
      v25[3] = v17;
      v25[4] = &off_100B65F40;
      v25[0] = v16;
      v18 = type metadata accessor for DayPickerModule();
      v19 = (_QWORD *)swift_allocObject(v18, 64, 7);
      v20 = sub_100068EB4((uint64_t)v25, v17);
      __chkstk_darwin(v20);
      v22 = (_QWORD *)((char *)v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v19[5] = v17;
      v19[6] = &off_100B65F40;
      v19[2] = v24;
      v19[7] = v11;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v25);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
      a2[3] = v18;
      a2[4] = &off_100B75010;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1002A082C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v0 = sub_1000BA294(&qword_100BD2B68);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_1002A08F4, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BD2B70);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_1002A0908, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BD2B78);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1002A09A0, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC44E0);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_1002A09B4, 0, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1002A08F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for DayPickerInputFactory, (uint64_t)&off_100B732C8, a1);
}

uint64_t sub_1002A0908@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v8)
  {
    v7 = type metadata accessor for DayPickerInteractor();
    result = swift_allocObject(v7, 32, 7);
    *(_QWORD *)(result + 16) = v8;
    *(_QWORD *)(result + 24) = v9;
    a2[3] = v7;
    a2[4] = (uint64_t)&off_100B65F40;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A09A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for DayPickerViewModelFactory, (uint64_t)&off_100B887D8, a1);
}

uint64_t sub_1002A09B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v30;
  v7 = v31;
  v9 = v29;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BD2B68);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v26, v27);
  v24 = type metadata accessor for DayPickerInputFactory();
  v25 = &off_100B732C8;
  v23[0] = v13;
  sub_100043CA8((uint64_t)v23, (uint64_t)v22);
  v14 = swift_allocObject(&unk_100B69A20, 56, 7);
  sub_10003C800(v22, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  v15 = swift_allocObject(&unk_100B69A48, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1002A0CE8;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BD2B78);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v27)
  {
    v19 = *sub_1000DB418(v26, v27);
    v24 = type metadata accessor for DayPickerViewModelFactory();
    v25 = &off_100B887D8;
    v23[0] = v19;
    sub_100043CA8((uint64_t)v23, (uint64_t)v22);
    v20 = swift_allocObject(&unk_100B69A70, 56, 7);
    sub_10003C800(v22, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
    v21 = sub_1000BA294(&qword_100BC44E0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    return sub_100183618(v6, v9, v8, v7, sub_1002A0C0C, 0, sub_1000A22C0, v15, sub_1002A0D14, v20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1002A0C0C()
{
  sub_1008C47FC();
  return 0;
}

uint64_t sub_1002A0C34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_100415414(a1, a3);
}

uint64_t sub_1002A0C7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_100688B9C(a1, a3);
}

uint64_t sub_1002A0CC4()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002A0CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002A0C34(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1002A0CF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A0D14@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1002A0C7C(a1, (_QWORD *)(v2 + 16), a2);
}

void sub_1002A0D20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 64);
  if (v1)
    objc_msgSend(v1, "invalidate");
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v2);
  swift_release(*(_QWORD *)(v0 + 56));

  sub_10004A298();
}

uint64_t sub_1002A0D78()
{
  uint64_t v0;

  sub_1002A0D20();
  return swift_deallocClassInstance(v0, 88, 7);
}

double sub_1002A0D98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  double result;
  _OWORD v14[2];
  uint64_t v15;

  v3 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100BC2458 != -1)
    swift_once(&qword_100BC2458, sub_100159808);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_1000AECD4(v6, (uint64_t)qword_100CAF100);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Timer fired", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(uint64_t (**)(uint64_t))(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  swift_storeEnumTagMultiPayload(v5, v3, 19);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  swift_retain();
  sub_1000A5EBC((uint64_t)v5, (uint64_t)v14, v11);
  sub_100159C94((uint64_t)v14);
  sub_1000A0AA4((uint64_t)v5);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

id sub_1002A0F04(uint64_t a1, void *a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, __n128);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, __n128);
  uint64_t v55;
  __n128 v57;
  char *v58;
  uint64_t v59;
  char *v60;
  double v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint8_t *v69;
  uint64_t (*v70)(uint64_t);
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  _OWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v79 = a2;
  v76 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v76);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TimeState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v78 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v74 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v74 - v19;
  (*(void (**)(_OWORD *__return_ptr, __n128))(a1 + 16))(v80, v18);
  v21 = *(_QWORD *)&v80[0];
  sub_10012236C(*(_QWORD *)&v80[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v7);
  v22 = swift_release(v21);
  v23 = v9;
  v24 = v7;
  v25 = v8;
  (*(void (**)(char *, char *, uint64_t, __n128))(v9 + 32))(v20, v24, v8, v22);
  if (*(_QWORD *)(a1 + 64))
  {
    if (qword_100BC2458 != -1)
      swift_once(&qword_100BC2458, sub_100159808);
    v26 = type metadata accessor for Logger(0);
    sub_1000AECD4(v26, (uint64_t)qword_100CAF100);
    v27 = v9;
    v28 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
    v29 = v78;
    v30 = v28(v78, v20, v8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = v8;
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v80[0] = v35;
      *(_DWORD *)v34 = 136446210;
      v77 = v20;
      sub_10005329C((unint64_t *)&qword_100BC52F0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v36 = dispatch thunk of CustomStringConvertible.description.getter(v33);
      v82 = sub_1000CE1C8(v36, v37, (uint64_t *)v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83);
      v38 = swift_bridgeObjectRelease();
      v39 = *(void (**)(char *, uint64_t, __n128))(v27 + 8);
      v39(v29, v33, v38);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Skipping adding timer to run loop as the timer already exists; currentTime=%{public}s",
        v34,
        0xCu);
      swift_arrayDestroy(v35, 1);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      v40 = v77;
      v41 = v33;
    }
    else
    {

      v39 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
      ((void (*)(char *, uint64_t))v39)(v29, v8);
      v40 = v20;
      v41 = v8;
    }
    return (id)((uint64_t (*)(char *, uint64_t))v39)(v40, v41);
  }
  else
  {
    v75 = v13;
    v78 = v4;
    if (qword_100BC2458 != -1)
      swift_once(&qword_100BC2458, sub_100159808);
    v42 = type metadata accessor for Logger(0);
    sub_1000AECD4(v42, (uint64_t)qword_100CAF100);
    v43 = v9;
    v44 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v45 = v16;
    v77 = v20;
    v44(v16, v20, v8);
    v46 = a1;
    swift_retain();
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc(18, -1);
      v74 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v80[0] = v74;
      *(_DWORD *)v50 = 67240450;
      LODWORD(v82) = *(unsigned __int8 *)(a1 + 72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, (char *)&v82 + 4);
      swift_release(a1);
      *(_WORD *)(v50 + 8) = 2082;
      sub_10005329C((unint64_t *)&qword_100BC52F0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v51 = dispatch thunk of CustomStringConvertible.description.getter(v8);
      v82 = sub_1000CE1C8(v51, v52, (uint64_t *)v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83);
      v53 = swift_bridgeObjectRelease();
      v54 = *(void (**)(char *, uint64_t, __n128))(v43 + 8);
      v54(v45, v8, v53);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Adding timer to run loop; firstLaunch=%{BOOL,public}d, currentTime=%{public}s",
        (uint8_t *)v50,
        0x12u);
      v55 = v74;
      swift_arrayDestroy(v74, 1);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v50, -1, -1);
    }
    else
    {
      v57 = swift_release(a1);
      v54 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
      v54(v45, v8, v57);
    }

    v58 = v75;
    static Date.now.getter(v59);
    v60 = v77;
    v61 = Date.timeIntervalSince(_:)(v77);
    v62 = ((uint64_t (*)(char *, uint64_t))v54)(v58, v8);
    v63 = *(_BYTE *)(v46 + 72) == 1 && v61 < 60.0;
    v64 = (uint64_t)v78;
    v65 = v76;
    if (!v63)
    {
      v66 = Logger.logObject.getter(v62);
      v67 = static os_log_type_t.default.getter(v66);
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v68 = 134349056;
        *(double *)v80 = v61;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8);
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "Will update time; currentTimeAge=%{public}f", v68, 0xCu);
        v69 = v68;
        v64 = (uint64_t)v78;
        swift_slowDealloc(v69, -1, -1);
      }

      v70 = *(uint64_t (**)(uint64_t))(v46 + 48);
      v71 = *(_QWORD *)(v46 + 56);
      swift_storeEnumTagMultiPayload(v64, v65, 19);
      v81 = 0;
      memset(v80, 0, sizeof(v80));
      swift_retain();
      sub_1000A5EBC(v64, (uint64_t)v80, v70);
      sub_100159C94((uint64_t)v80);
      sub_1000A0AA4(v64);
      swift_release(v71);
      v25 = v8;
    }
    *(_BYTE *)(v46 + 72) = 0;
    v72 = objc_msgSend((id)objc_opt_self(NSRunLoop), "currentRunLoop");
    objc_msgSend(v72, "addTimer:forMode:", v79, NSDefaultRunLoopMode);

    ((void (*)(char *, uint64_t))v54)(v60, v25);
    v73 = *(void **)(v46 + 64);
    *(_QWORD *)(v46 + 64) = v79;

    return v79;
  }
}

void sub_1002A1624()
{
  _QWORD *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  if (qword_100BC2458 != -1)
    swift_once(&qword_100BC2458, sub_100159808);
  v1 = sub_100098720();
  sub_1000AECD4(v1, (uint64_t)qword_100CAF100);
  sub_1000999A8();
  v2 = sub_10009C0A4();
  if (sub_1000C23F4(v2))
  {
    *(_WORD *)sub_10009D340() = 0;
    sub_1000BA6F4((void *)&_mh_execute_header, v3, v4, "applicationDidEnterBackground - will invalidate timer");
    sub_1000BBED0();
  }

  v5 = (void *)v0[8];
  if (v5)
  {
    objc_msgSend(v5, "invalidate");
    v5 = (void *)v0[8];
  }
  v0[8] = 0;

}

uint64_t type metadata accessor for StubTimeMonitor()
{
  return objc_opt_self(_TtC7Weather15StubTimeMonitor);
}

void sub_1002A16F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_10005329C(&qword_100BD2CD8, a2, (uint64_t (*)(uint64_t))type metadata accessor for StubTimeMonitor, (uint64_t)&unk_1009907C4);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1002A1730(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_10005329C(&qword_100BD2CE0, a2, (uint64_t (*)(uint64_t))type metadata accessor for TimeMonitor, (uint64_t)&unk_100990818);
  *(_QWORD *)(a1 + 8) = v3;
}

uint64_t sub_1002A176C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1002A1790(uint64_t a1)
{
  uint64_t v1;

  return sub_1002A0D98(a1, v1);
}

uint64_t sub_1002A1798()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

id sub_1002A17C4()
{
  uint64_t v0;

  return sub_1002A0F04(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002A17D8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1009909F0);
  v2 = swift_getKeyPath(&unk_100990A18);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1002A1848(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_1009909F0);
  v4 = swift_getKeyPath(&unk_100990A18);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t sub_1002A18B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_9A32B94519ECCF9215D0EE93B787E8EC29RecordPinnedMapAnimatingState__previousMapPresentationStyle;
  v2 = sub_1000BA294(&qword_100BD2DC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002A1908()
{
  return type metadata accessor for RecordPinnedMapAnimatingState(0);
}

uint64_t type metadata accessor for RecordPinnedMapAnimatingState(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD2D20;
  if (!qword_100BD2D20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RecordPinnedMapAnimatingState);
  return result;
}

void sub_1002A1948(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1009908A0;
  sub_1002A19C0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_1002A19C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BD2D30)
  {
    v2 = sub_100075EB0((uint64_t *)&unk_100BD2D38);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BD2D30);
  }
}

uint64_t sub_1002A1A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v1 = sub_1000BA294(&qword_100BD2DC0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v0 + 16) = 0;
  v5 = v0
     + OBJC_IVAR____TtC7WeatherP33_9A32B94519ECCF9215D0EE93B787E8EC29RecordPinnedMapAnimatingState__previousMapPresentationStyle;
  v9 = -2;
  v6 = sub_1000BA294((uint64_t *)&unk_100BD2D38);
  Published.init(initialValue:)(&v9, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

void sub_1002A1AD0()
{
  uint64_t v0;

  v0 = type metadata accessor for RecordPinnedMapAnimatingState(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  sub_1002A1A18();
  sub_10004A298();
}

uint64_t sub_1002A1B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  char v19;
  uint64_t v20;
  char v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double (**v36)();
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v41 = sub_1000BA294(&qword_100BD2DD0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v39 = v6;
  v42 = sub_1000BA294(&qword_100BD2DD8);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v43 = v8;
  v44 = sub_1000BA294(&qword_100BD2DE0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v45 = v10;
  KeyPath = swift_getKeyPath(&unk_1009909C8);
  v11 = *(_QWORD *)(v2 + 16);
  v12 = *(_QWORD *)(v2 + 24);
  v13 = *(unsigned __int8 *)(v2 + 32);
  v14 = type metadata accessor for RecordPinnedMapAnimatingState(0);
  sub_10000F1C8(&qword_100BD2DE8, type metadata accessor for RecordPinnedMapAnimatingState);
  v16 = v15;
  v17 = sub_1000BBEE0();
  v18 = sub_1002A17D8();
  swift_release(v17);
  if (v18 <= 0xFD)
  {
    v38 = a1;
    v20 = *(_QWORD *)v3;
    v21 = *(_BYTE *)(v3 + 8);
    sub_10008D47C(*(_QWORD *)v3, v21);
    sub_10011567C();
    v23 = v22;
    sub_1000B15F8(v20, v21);
    v24 = sub_1000BBEE0();
    v25 = sub_1002A17D8();
    swift_release(v24);
    if (v25 <= 0xFDu && (sub_10011CD38(v23, v25) & 1) != 0)
    {
      v19 = 0;
    }
    else
    {
      v26 = StateObject.wrappedValue.getter(v11, v12, v13, v14, v16);
      v19 = *(_BYTE *)(v26 + 16);
      swift_release(v26);
    }
    a1 = v38;
  }
  else
  {
    v19 = 0;
  }
  v27 = sub_1000BA294(&qword_100BD2DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v39, a1, v27);
  v28 = v39 + *(int *)(v41 + 36);
  *(_QWORD *)v28 = KeyPath;
  *(_BYTE *)(v28 + 8) = v19;
  v29 = *(_QWORD *)v3;
  v30 = *(_BYTE *)(v3 + 8);
  sub_1000C26E0();
  sub_10011567C();
  v32 = v31;
  sub_1000B15F8(v29, v30);
  v33 = sub_1000DD8B0((uint64_t)&unk_100B69C28);
  sub_1000DCCD4(v33);
  sub_10007EBC8(v39, v43, &qword_100BD2DD0);
  v34 = v43 + *(int *)(v42 + 36);
  *(_BYTE *)v34 = v32;
  *(_QWORD *)(v34 + 8) = sub_1002A2894;
  *(_QWORD *)(v34 + 16) = v33;
  sub_1000C26E0();
  sub_100037094(v11, v12);
  sub_100021AA4(v39, &qword_100BD2DD0);
  v35 = sub_1000DD8B0((uint64_t)&unk_100B69C50);
  sub_1000DCCD4(v35);
  sub_10007EBC8(v43, v45, &qword_100BD2DD8);
  v36 = (double (**)())(v45 + *(int *)(v44 + 36));
  *v36 = sub_1002A28A0;
  v36[1] = (double (*)())v35;
  v36[2] = 0;
  v36[3] = 0;
  sub_1000C26E0();
  sub_100037094(v11, v12);
  sub_100021AA4(v43, &qword_100BD2DD8);
  return sub_1002A28A8(v45, a2);
}

uint64_t sub_1002A1E28()
{
  unsigned __int8 v1;

  sub_1002A1E98();
  EnvironmentValues.subscript.getter(&_s28IsMapAnimatingEnvironmentKeyVN, &_s28IsMapAnimatingEnvironmentKeyVN);
  return v1;
}

uint64_t sub_1002A1E60(char a1)
{
  char v2;

  v2 = a1;
  sub_1002A1E98();
  return EnvironmentValues.subscript.setter(&v2, &_s28IsMapAnimatingEnvironmentKeyVN, &_s28IsMapAnimatingEnvironmentKeyVN);
}

unint64_t sub_1002A1E98()
{
  unint64_t result;

  result = qword_100BD2DC8;
  if (!qword_100BD2DC8)
  {
    result = swift_getWitnessTable(&unk_100990910, &_s28IsMapAnimatingEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_100BD2DC8);
  }
  return result;
}

ValueMetadata *_s28IsMapAnimatingEnvironmentKeyVMa()
{
  return &_s28IsMapAnimatingEnvironmentKeyVN;
}

void sub_1002A1EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  char v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  void *v46;
  uint64_t v47;
  __n128 v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _OWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD aBlock[5];
  uint64_t v78;

  v76 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  __chkstk_darwin(v3);
  v73 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  __chkstk_darwin(v5);
  v70 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTimeInterval(0);
  v66 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  __chkstk_darwin(v7);
  v65 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = type metadata accessor for DispatchTime(0);
  v64 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v63 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v68 = (char *)&v58 - v12;
  v62 = type metadata accessor for AnimationCompletionCriteria(0, v11);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(unsigned __int8 *)(a2 + 32);
  v17 = type metadata accessor for RecordPinnedMapAnimatingState(0);
  sub_10000F1C8(&qword_100BD2DE8, type metadata accessor for RecordPinnedMapAnimatingState);
  v19 = v18;
  v20 = StateObject.wrappedValue.getter(v14, v15, v16, v17, v18);
  v21 = sub_1002A17D8();
  swift_release(v20);
  v22 = *(_QWORD *)a2;
  v59 = (_OWORD *)a2;
  v23 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(v22, v23);
  sub_10011567C();
  v25 = v24;
  sub_1000B15F8(v22, v23);
  if (v21 <= 0xFDu
    && (sub_10011CD38(v21, v25) & 1) != 0
    && (v26 = StateObject.wrappedValue.getter(v14, v15, v16, v17, v19),
        v27 = *(_BYTE *)(v26 + 16),
        swift_release(v26),
        (v27 & 1) == 0))
  {
    Transaction.disablesAnimations.setter(1);
  }
  else
  {
    v28 = StateObject.wrappedValue.getter(v14, v15, v16, v17, v19);
    *(_BYTE *)(v28 + 16) = 1;
    swift_release(v28);
    sub_10008D47C(v22, v23);
    sub_10011567C();
    v30 = v29;
    sub_1000B15F8(v22, v23);
    v31 = swift_allocObject(&unk_100B69C78, 17, 7);
    *(_BYTE *)(v31 + 16) = 0;
    v32 = v31;
    v33 = swift_allocObject(&unk_100B69CA0, 65, 7);
    *(_QWORD *)(v33 + 16) = v32;
    v58 = v32;
    *(_BYTE *)(v33 + 24) = v30;
    v34 = v59;
    v35 = v59[1];
    *(_OWORD *)(v33 + 32) = *v59;
    *(_OWORD *)(v33 + 48) = v35;
    *(_BYTE *)(v33 + 64) = *((_BYTE *)v34 + 32);
    sub_10008D47C(v22, v23);
    swift_retain();
    v36 = sub_100037094(v14, v15);
    v37 = v60;
    static AnimationCompletionCriteria.logicallyComplete.getter(v36);
    Transaction.addAnimationCompletion(criteria:_:)(v37, sub_1002A2988, v33);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v62);
    v38 = sub_10009FFE0();
    v76 = static OS_dispatch_queue.main.getter(v38);
    v39 = v63;
    static DispatchTime.now()(v76);
    v41 = v65;
    v40 = v66;
    *v65 = 1;
    v42 = v67;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v40 + 104))(v41, enum case for DispatchTimeInterval.seconds(_:), v67);
    v43 = v68;
    + infix(_:_:)(v39, v41);
    (*(void (**)(_QWORD *, uint64_t))(v40 + 8))(v41, v42);
    v44 = *(void (**)(char *, uint64_t))(v64 + 8);
    v45 = v69;
    v44(v39, v69);
    aBlock[4] = sub_1002A2988;
    v78 = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100121D84;
    aBlock[3] = &unk_100B69CB8;
    v46 = _Block_copy(aBlock);
    v47 = v78;
    swift_retain();
    v48 = swift_release(v47);
    v49 = v70;
    static DispatchQoS.unspecified.getter(v48);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    v51 = v50;
    v52 = sub_1000BA294(&qword_100BD4F10);
    sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
    v53 = v73;
    v54 = v52;
    v55 = v75;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v54, v56, v75, v51);
    v57 = (void *)v76;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v43, v49, v53, v46);
    _Block_release(v46);
    swift_release(v33);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v55);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v49, v72);
    v44(v43, v45);
    swift_release(v58);
  }
}

double sub_1002A2448(uint64_t a1, char a2, uint64_t a3)
{
  _BYTE *v6;
  double result;
  uint64_t v8;
  char v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v6 = (_BYTE *)(a1 + 16);
  swift_beginAccess(a1 + 16, v21, 0, 0);
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    swift_beginAccess(v6, &v20, 1, 0);
    *v6 = 1;
    v8 = *(_QWORD *)a3;
    v9 = *(_BYTE *)(a3 + 8);
    sub_10008D47C(*(_QWORD *)a3, v9);
    sub_10011567C();
    v11 = v10;
    sub_1000B15F8(v8, v9);
    if ((sub_10011CD38(a2, v11) & 1) != 0)
    {
      v12 = *(_QWORD *)(a3 + 16);
      v13 = *(_QWORD *)(a3 + 24);
      v14 = *(unsigned __int8 *)(a3 + 32);
      v15 = type metadata accessor for RecordPinnedMapAnimatingState(0);
      sub_10000F1C8(&qword_100BD2DE8, type metadata accessor for RecordPinnedMapAnimatingState);
      v17 = v16;
      v18 = StateObject.wrappedValue.getter(v12, v13, v14, v15, v16);
      *(_BYTE *)(v18 + 16) = 0;
      swift_release(v18);
      v19 = StateObject.wrappedValue.getter(v12, v13, v14, v15, v17);
      sub_1002A1848(a2);
      *(_QWORD *)&result = swift_release(v19).n128_u64[0];
    }
  }
  return result;
}

double sub_1002A2580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double result;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = type metadata accessor for RecordPinnedMapAnimatingState(0);
  sub_10000F1C8(&qword_100BD2DE8, type metadata accessor for RecordPinnedMapAnimatingState);
  v7 = StateObject.wrappedValue.getter(v2, v3, v4, v5, v6);
  v8 = *(_QWORD *)v1;
  LOBYTE(v1) = *(_BYTE *)(v1 + 8);
  sub_10008D47C(v8, v1);
  sub_10011567C();
  LOBYTE(v4) = v9;
  sub_1000B15F8(v8, v1);
  sub_1002A1848(v4);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void *sub_1002A2638()
{
  return &unk_100BD2CE8;
}

_BYTE *sub_1002A2644@<X0>(_BYTE *a1@<X8>)
{
  _BYTE *result;

  result = sub_1002A2638();
  *a1 = *result;
  return result;
}

uint64_t destroy for RecordPinnedMapAnimatingViewModifier(uint64_t a1)
{
  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return sub_1000BF398(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for RecordPinnedMapAnimatingViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_100037094(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v2;
  return a1;
}

uint64_t assignWithCopy for RecordPinnedMapAnimatingViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_100037094(v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v2;
  sub_1000BF398(v10, v11);
  return a1;
}

uint64_t assignWithTake for RecordPinnedMapAnimatingViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *((_BYTE *)a2 + 32);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1000BF398(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordPinnedMapAnimatingViewModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordPinnedMapAnimatingViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordPinnedMapAnimatingViewModifier()
{
  return &type metadata for RecordPinnedMapAnimatingViewModifier;
}

uint64_t sub_1002A2878(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAF470, 1);
}

void sub_1002A2894(uint64_t a1)
{
  uint64_t v1;

  sub_1002A1EE4(a1, v1 + 16);
}

double sub_1002A28A0()
{
  uint64_t v0;

  return sub_1002A2580(v0 + 16);
}

uint64_t sub_1002A28A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD2DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A28F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1002A17D8();
  *a1 = result;
  return result;
}

uint64_t sub_1002A2918(char *a1)
{
  return sub_1002A1848(*a1);
}

uint64_t sub_1002A293C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002A294C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1000B15F8(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_1000BF398(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 65, 7);
}

double sub_1002A2988()
{
  uint64_t v0;

  return sub_1002A2448(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + 32);
}

unint64_t sub_1002A299C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2DF8;
  if (!qword_100BD2DF8)
  {
    v1 = sub_100075EB0(&qword_100BD2DE0);
    sub_1002A2A08();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2DF8);
  }
  return result;
}

unint64_t sub_1002A2A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2E00;
  if (!qword_100BD2E00)
  {
    v1 = sub_100075EB0(&qword_100BD2DD8);
    sub_1002A2A8C();
    sub_10003D2DC(&qword_100BD2E18, &qword_100BD2E20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2E00);
  }
  return result;
}

unint64_t sub_1002A2A8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2E08;
  if (!qword_100BD2E08)
  {
    v1 = sub_100075EB0(&qword_100BD2DD0);
    sub_10003D2DC(&qword_100BD2E10, &qword_100BD2DF0);
    sub_10003D2DC((unint64_t *)&unk_100C0A590, &qword_100BD0658);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2E08);
  }
  return result;
}

void sub_1002A2B28(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000BA294(&qword_100BD2E28);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  sub_1002A2BBC();
  sub_100037768(v5, a1, &qword_100BD2E28);
  *(_BYTE *)(a1 + *(int *)(sub_1000BA294(&qword_100BD2E30) + 36)) = 1;
  sub_100021AA4(v5, &qword_100BD2E28);
}

void sub_1002A2BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v20[9];
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;

  v25 = sub_1000BA294(&qword_100BD2E38);
  __chkstk_darwin(v25);
  v27 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BD2E40);
  __chkstk_darwin(v22);
  v23 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1000BA294(&qword_100BD2E48);
  __chkstk_darwin(v26);
  v24 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1000BA294(&qword_100BD2E50);
  __chkstk_darwin(v38);
  v28 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD2E58);
  v20[5] = *(_QWORD *)(v5 - 8);
  v20[6] = v5;
  __chkstk_darwin(v5);
  v20[4] = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BD2E60);
  __chkstk_darwin(v21);
  v20[3] = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v20[8] = (char *)v20 - v9;
  v10 = sub_1000BA294(&qword_100BD2E68);
  v20[1] = *(_QWORD *)(v10 - 8);
  v20[2] = v10;
  __chkstk_darwin(v10);
  v30 = sub_1000BA294(&qword_100BD2E70);
  __chkstk_darwin(v30);
  __chkstk_darwin(v11);
  v20[7] = (char *)v20 - v12;
  v29 = sub_1000BA294(&qword_100BD2E78);
  __chkstk_darwin(v29);
  v33 = sub_1000BA294(&qword_100BD2E80);
  __chkstk_darwin(v33);
  v31 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000BA294(&qword_100BD2E88);
  __chkstk_darwin(v40);
  v42 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1000BA294(&qword_100BD2E90);
  __chkstk_darwin(v35);
  v37 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000BA294(&qword_100BD2E98);
  __chkstk_darwin(v32);
  v36 = sub_1000BA294(&qword_100BD2EA0);
  __chkstk_darwin(v36);
  v34 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1000BA294(&qword_100BD2EA8);
  __chkstk_darwin(v41);
  v39 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v0 + 8);
  swift_retain();
  v19 = sub_10017B5B4();
  swift_release(v18);
  swift_retain();
  sub_10017B5B4();
  swift_release(v18);
  __asm { BR              X10 }
}

_QWORD *sub_1002A3028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  sub_100043CA8(v2 + 32, v0 + 248);
  sub_1002A57D8(v0 + 248, v0 + 344);
  *(_BYTE *)(v0 + 384) = 0;
  v4 = sub_1002929F4();
  v5 = sub_1002A51D0();
  _ConditionalContent<>.init(storage:)(v0 + 344, &type metadata for NotificationsOptInLocationPermissionView, &type metadata for NotificationsOptInNotificationPermissionView, v4, v5);
  sub_100037768(v3 - 192, v1, &qword_100BD2ED0);
  swift_storeEnumTagMultiPayload(v1, *(_QWORD *)(v0 + 160), 0);
  v6 = sub_1000BA294(&qword_100BD2ED0);
  v7 = sub_1002A5164();
  v8 = sub_1002A520C();
  v9 = *(_QWORD *)(v0 + 176);
  _ConditionalContent<>.init(storage:)(v1, v6, *(_QWORD *)(v0 + 168), v7, v8);
  sub_100021AA4(v3 - 192, &qword_100BD2ED0);
  v10 = *(_QWORD *)(v0 + 200);
  sub_100037768(v9, v10, &qword_100BD2EA0);
  swift_storeEnumTagMultiPayload(v10, *(_QWORD *)(v0 + 184), 0);
  v11 = sub_1002A50F8();
  v12 = sub_1002A52D4();
  v13 = *(_QWORD *)(v0 + 216);
  _ConditionalContent<>.init(storage:)(v10, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 208), v11, v12);
  sub_100021AA4(v9, &qword_100BD2EA0);
  v14 = *(_QWORD *)(v0 + 240);
  sub_100037768(v13, v14, &qword_100BD2EA8);
  swift_storeEnumTagMultiPayload(v14, *(_QWORD *)(v0 + 224), 0);
  v15 = sub_1000BA294(&qword_100BD2EB0);
  v16 = sub_1002A508C();
  v17 = sub_1002A565C();
  _ConditionalContent<>.init(storage:)(v14, *(_QWORD *)(v0 + 232), v15, v16, v17);
  sub_100021AA4(v13, &qword_100BD2EA8);
  return sub_1002A5814((_QWORD *)(v0 + 248));
}

double sub_1002A436C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v7[72];
  _BYTE __src[72];

  sub_1002A5054(a1, (uint64_t)__src);
  v4 = swift_allocObject(&unk_100B69FD8, 88, 7);
  memcpy((void *)(v4 + 16), __src, 0x48uLL);
  sub_1002A5054(a1, (uint64_t)v7);
  v5 = swift_allocObject(&unk_100B6A000, 88, 7);
  memcpy((void *)(v5 + 16), v7, 0x48uLL);
  sub_1002A4434(4, (uint64_t)sub_1002A5AA0, v4, (uint64_t)sub_1002A591C, v5, a2);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_1002A4434(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  char v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  Swift::String v80;
  Swift::String v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  Swift::String v106;
  Swift::String v107;

  v99 = a4;
  v100 = a5;
  LODWORD(v101) = a1;
  v105 = a6;
  sub_1000BA294(&qword_100BD0980);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100098728();
  v98 = v10 - v9;
  v102 = type metadata accessor for Alert.Button(0);
  v104 = *(_QWORD *)(v102 - 8);
  sub_10009D98C();
  v12 = __chkstk_darwin(v11);
  v97 = (char *)&v107._object - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v96 = (char *)&v107._object - v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v107._object - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v107._object - v19;
  v21 = LocalizedStringKey.init(stringLiteral:)(19279, 0xE200000000000000);
  v28 = sub_1000C2638(v21, v23, v22 & 1, v24, v25, v26, v27, (uint64_t)"Button acknowledging/dismissing the location prompt");
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  v35 = sub_100098740((uint64_t)&unk_100B69D70, 32);
  *(_QWORD *)(v35 + 16) = a2;
  *(_QWORD *)(v35 + 24) = a3;
  v36 = swift_retain();
  v103 = v20;
  static Alert.Button.default(_:action:)(v28, v30, v34, v32, sub_1002A5AA8, v35, v36);
  swift_release(v35);
  v37 = v34;
  v38 = v18;
  sub_1000D31B4(v28, v30, v37);
  swift_bridgeObjectRelease(v32);
  v39 = LocalizedStringKey.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  v46 = sub_1000C2638(v39, v41, v40 & 1, v42, v43, v44, v45, (uint64_t)"Button that opens the Settings app");
  v48 = v47;
  v50 = v49;
  v52 = v51 & 1;
  v53 = sub_100098740((uint64_t)&unk_100B69D98, 32);
  *(_QWORD *)(v53 + 16) = v99;
  *(_QWORD *)(v53 + 24) = v100;
  v54 = swift_retain();
  static Alert.Button.default(_:action:)(v46, v48, v52, v50, sub_1002A4E0C, v53, v54);
  swift_release(v53);
  sub_1000D31B4(v46, v48, v52);
  swift_bridgeObjectRelease(v50);
  v55 = v101 == 4;
  if (v101 >= 4u)
  {
    v68 = v96;
    v101 = v18;
    v64 = v102;
    if (v55)
    {
      v69 = (void *)objc_opt_self(NSBundle);
      v70 = sub_1000DB874(v69);
      sub_1000989C4();
      sub_1000BBEF8(v71, v72, (uint64_t)"Weather needs permission to always use your location to send you notifications about local weather. You can enable this in Settings.");
      sub_1000C52F4();
      v77 = sub_1000C13C8();
      sub_1000989C4();
      v78 = 0x6E6F697461636F4CLL;
      v79 = 0xEF64656465654E20;
    }
    else
    {
      v73 = (void *)objc_opt_self(NSBundle);
      v74 = sub_1000DB874(v73);
      sub_1000989C4();
      sub_1000BBEF8(v75, v76, (uint64_t)"Weather needs your permission to send you notifications. You can enable this in Settings.");
      sub_1000C52F4();
      v77 = sub_1000C13C8();
      sub_1000989C4();
      v79 = 0x80000001009F8590;
    }
    v80._countAndFlagsBits = 0;
    v80._object = (void *)0xE000000000000000;
    v107._countAndFlagsBits = 0xD00000000000003DLL;
    v81 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v78, (Swift::String_optional)0, (NSBundle)v77, v80, v107);

    v106 = v81;
    sub_100114EF8();
    v102 = sub_1000DCCE8();
    v99 = v83;
    v100 = v82;
    LODWORD(v98) = v84;
    v106._countAndFlagsBits = (uint64_t)v18;
    v106._object = v18;
    v95 = sub_1000DCCE8();
    v86 = v85;
    v88 = v87;
    v90 = v89 & 1;
    v66 = v104;
    v91 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    v92 = v68;
    v38 = v101;
    v91(v68, v101, v64);
    v93 = v97;
    v67 = v103;
    v91(v97, v103, v64);
    Alert.init(title:message:primaryButton:secondaryButton:)(v102, v100, v98 & 1, v99, v93, v86, v90, v88, v92, v93);
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)(0x1000000000000023, 0x80000001009F86E0);
    sub_1000C5C58();
    Text.init(_:tableName:bundle:comment:)(v56, v57, v58, v59, v60, v61, v62, v63);
    v64 = v102;
    _s7Weather24LocationCompositionStateOwst_0(v98, 1, 1, v102);
    sub_1000C5C58();
    Alert.init(title:message:dismissButton:)(v65);
    v67 = v103;
    v66 = v104;
  }
  v94 = *(void (**)(char *, uint64_t))(v66 + 8);
  v94(v38, v64);
  v94(v67, v64);
  sub_100098640();
}

double sub_1002A4940@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v7[72];
  _BYTE __src[72];

  sub_1002A5054(a1, (uint64_t)__src);
  v4 = swift_allocObject(&unk_100B6A078, 88, 7);
  memcpy((void *)(v4 + 16), __src, 0x48uLL);
  sub_1002A5054(a1, (uint64_t)v7);
  v5 = swift_allocObject(&unk_100B6A0A0, 88, 7);
  memcpy((void *)(v5 + 16), v7, 0x48uLL);
  sub_1002A4434(5, (uint64_t)sub_1002A5944, v4, (uint64_t)sub_1002A5994, v5, a2);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_1002A4A08(uint64_t a1, void (*a2)(void))
{
  sub_1000DB418((_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
  a2();
  sub_10004A298();
}

void sub_1002A4A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  __n128 v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;
  _QWORD __src[10];

  v34 = a4;
  v32 = a3;
  v31 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v5 - 8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = type metadata accessor for DispatchTime(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v30 - v20;
  v22 = sub_10009FFE0();
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  static DispatchTime.now()(v23);
  + infix(_:_:)(v18);
  v33 = *(void (**)(char *, uint64_t))(v16 + 8);
  v33(v18, v15);
  sub_1002A5054(a1, (uint64_t)__src);
  v24 = sub_100098740(v31, 88);
  memcpy((void *)(v24 + 16), __src, 0x48uLL);
  aBlock[4] = v32;
  v39 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100121D84;
  aBlock[3] = v34;
  v25 = _Block_copy(aBlock);
  v26 = swift_release(v39);
  static DispatchQoS.unspecified.getter(v26);
  __src[0] = _swiftEmptyArrayStorage;
  v27 = sub_1001221E0();
  v28 = sub_1000BA294(&qword_100BD4F10);
  sub_1002A58E0((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
  dispatch thunk of SetAlgebra.init<A>(_:)(__src, v28, v29, v5, v27);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v21, v14, v9, v25);
  _Block_release(v25);

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v9, v5);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v14, v36);
  v33(v21, v15);
  sub_100098640();
}

uint64_t sub_1002A4CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[9];
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 24);
  v4[1] = *(_BYTE *)(a1 + 16);
  v5 = v1;
  v4[0] = 1;
  v2 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(v4, v2);
}

void sub_1002A4CF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[7];
  v2 = a1[8];
  sub_1000DB418(a1 + 4, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 16))(v1);
  sub_10004A298();
}

uint64_t sub_1002A4D30@<X0>(uint64_t a1@<X0>, char a2@<W1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[9];
  uint64_t v14;

  v8 = sub_1000BA294(&qword_100BC4748);
  sub_1002A58E0(&qword_100BC4750, &qword_100BC4748);
  *(_QWORD *)a4 = ObservedObject.init(wrappedValue:)(a1, v8, v9);
  *(_QWORD *)(a4 + 8) = v10;
  v13[0] = a2;
  State.init(wrappedValue:)(v13, &type metadata for Bool);
  v11 = v14;
  *(_BYTE *)(a4 + 16) = v13[1];
  *(_QWORD *)(a4 + 24) = v11;
  return sub_10003C800(a3, a4 + 32);
}

uint64_t sub_1002A4DE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002A4E0C()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_10004A298();
}

uint64_t destroy for NotificationsOptInView(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 4);
}

uint64_t initializeWithCopy for NotificationsOptInView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = a2 + 32;
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v6 - 8);
  swift_retain(v3);
  v9 = swift_retain(v4);
  v8(a1 + 32, v5, v7, v9);
  return a1;
}

uint64_t assignWithCopy for NotificationsOptInView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release(v5);
  sub_100094D04((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  return a1;
}

uint64_t assignWithTake for NotificationsOptInView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 32));
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationsOptInView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationsOptInView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1002A5044(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAF4B4, 1);
}

uint64_t sub_1002A5054(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NotificationsOptInView(a2, a1);
  return a2;
}

unint64_t sub_1002A508C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2EB8;
  if (!qword_100BD2EB8)
  {
    v1 = sub_100075EB0(&qword_100BD2EA8);
    sub_1002A50F8();
    sub_1002A52D4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2EB8);
  }
  return result;
}

unint64_t sub_1002A50F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2EC0;
  if (!qword_100BD2EC0)
  {
    v1 = sub_100075EB0(&qword_100BD2EA0);
    sub_1002A5164();
    sub_1002A520C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2EC0);
  }
  return result;
}

unint64_t sub_1002A5164()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2EC8;
  if (!qword_100BD2EC8)
  {
    v1 = sub_100075EB0(&qword_100BD2ED0);
    sub_1002929F4();
    sub_1002A51D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2EC8);
  }
  return result;
}

unint64_t sub_1002A51D0()
{
  unint64_t result;

  result = qword_100BD2ED8;
  if (!qword_100BD2ED8)
  {
    result = swift_getWitnessTable(&unk_1009BCB28, &type metadata for NotificationsOptInNotificationPermissionView);
    atomic_store(result, (unint64_t *)&qword_100BD2ED8);
  }
  return result;
}

unint64_t sub_1002A520C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2EE0;
  if (!qword_100BD2EE0)
  {
    v1 = sub_100075EB0(&qword_100BD2E80);
    sub_1002A5298();
    sub_1002A53CC(&qword_100BD2EF0, &qword_100BD2E70, (uint64_t (*)(void))sub_1002929F4, (uint64_t)&type metadata for NotificationsOptInLocationPermissionView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2EE0);
  }
  return result;
}

unint64_t sub_1002A5298()
{
  unint64_t result;

  result = qword_100BD2EE8;
  if (!qword_100BD2EE8)
  {
    result = swift_getWitnessTable(&unk_1009A6564, &type metadata for SevereWeatherFeatureView);
    atomic_store(result, (unint64_t *)&qword_100BD2EE8);
  }
  return result;
}

unint64_t sub_1002A52D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2EF8;
  if (!qword_100BD2EF8)
  {
    v1 = sub_100075EB0(&qword_100BD2E50);
    sub_1002A5340();
    sub_1002A5554();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2EF8);
  }
  return result;
}

unint64_t sub_1002A5340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2F00;
  if (!qword_100BD2F00)
  {
    v1 = sub_100075EB0(&qword_100BD2E48);
    sub_1002A53CC(&qword_100BD2F08, &qword_100BD2E60, (uint64_t (*)(void))sub_1002A51D0, (uint64_t)&type metadata for NotificationsOptInNotificationPermissionView);
    sub_1002A5454();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2F00);
  }
  return result;
}

uint64_t sub_1002A53CC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100075EB0(a2);
    v9[0] = a4;
    v9[1] = a3();
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002A5454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2F10;
  if (!qword_100BD2F10)
  {
    v1 = sub_100075EB0(&qword_100BD2F18);
    sub_1002A54D8(&qword_100BD2F20, &qword_100BD2F28);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2F10);
  }
  return result;
}

uint64_t sub_1002A54D8(unint64_t *a1, uint64_t *a2)
{
  void (*v2)(void);
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1000B4444(0, a2);
    v2();
    sub_1002A58E0(&qword_100BC6718, &qword_100BC6720);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002A5554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2F30;
  if (!qword_100BD2F30)
  {
    v1 = sub_100075EB0(&qword_100BD2F38);
    sub_1002A55D8();
    sub_1002A54D8(&qword_100BD2F60, &qword_100BD2F68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2F30);
  }
  return result;
}

unint64_t sub_1002A55D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2F40;
  if (!qword_100BD2F40)
  {
    v1 = sub_100075EB0(&qword_100BD2F48);
    sub_1002A54D8(&qword_100BD2F50, &qword_100BD2F58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2F40);
  }
  return result;
}

unint64_t sub_1002A565C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2F70;
  if (!qword_100BD2F70)
  {
    v1 = sub_100075EB0(&qword_100BD2EB0);
    sub_1002A58E0(&qword_100BD2F78, &qword_100BD2F80);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2F70);
  }
  return result;
}

uint64_t sub_1002A56EC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SevereWeatherFeatureView(a2, a1);
  return a2;
}

_QWORD *sub_1002A5728(_QWORD *a1)
{
  destroy for UVIDescriptorViewModelFactory(a1);
  return a1;
}

uint64_t sub_1002A5760(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UVIDescriptorViewModelFactory(a2, a1);
  return a2;
}

_QWORD *sub_1002A579C(_QWORD *a1)
{
  destroy for UVIDescriptorViewModelFactory(a1);
  return a1;
}

uint64_t sub_1002A57D8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UVIDescriptorViewModelFactory(a2, a1);
  return a2;
}

_QWORD *sub_1002A5814(_QWORD *a1)
{
  destroy for UVIDescriptorViewModelFactory(a1);
  return a1;
}

double sub_1002A584C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002A4940(*(_QWORD *)(v1 + 16), a1);
}

void sub_1002A5858()
{
  uint64_t v0;

  sub_1002A4A38(v0 + 16, (uint64_t)&unk_100B6A028, (uint64_t)sub_1002A5AA4, (uint64_t)&unk_100B6A040);
}

double sub_1002A5888@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002A436C(*(_QWORD *)(v1 + 16), a1);
}

void sub_1002A5894()
{
  uint64_t v0;

  sub_1002A4A38(v0 + 16, (uint64_t)&unk_100B69F88, (uint64_t)sub_1002A58C8, (uint64_t)&unk_100B69FA0);
}

uint64_t sub_1002A58C8()
{
  uint64_t v0;

  return sub_1002A4CA0(v0 + 16);
}

void sub_1002A58E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_1000B4444(0, a2);
    atomic_store(swift_getWitnessTable(v2, v4), a1);
  }
  sub_10004A298();
}

void sub_1002A591C()
{
  uint64_t v0;

  sub_1002A4A08(v0 + 16, sub_1002B8A8C);
}

void sub_1002A5944()
{
  uint64_t v0;

  sub_1002A4CF4((_QWORD *)(v0 + 16));
}

uint64_t sub_1002A5960()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 6);
  return swift_deallocObject(v0, 88, 7);
}

void sub_1002A5994()
{
  uint64_t v0;

  sub_1002A4A08(v0 + 16, sub_1002B8A94);
}

unint64_t sub_1002A59B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2F88;
  if (!qword_100BD2F88)
  {
    v1 = sub_100075EB0(&qword_100BD2E30);
    sub_1002A5A24();
    sub_1001CDA94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2F88);
  }
  return result;
}

unint64_t sub_1002A5A24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD2F90;
  if (!qword_100BD2F90)
  {
    v1 = sub_100075EB0(&qword_100BD2E28);
    sub_1002A508C();
    sub_1002A565C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD2F90);
  }
  return result;
}

uint64_t NamespaceWrapper.namespace.getter(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return Namespace.wrappedValue.getter(0);
  return result;
}

uint64_t *sub_1002A5AC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t HourPrecipitationDetailView;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t HourPrecipitationChartViewModel;
  void (*v16)(char *, char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  int EnumCaseMultiPayload;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t, __n128);
  __n128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  int *v94;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  HourPrecipitationDetailView = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetailView))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    return a1;
  }
  v9 = a2[1];
  *a1 = *a2;
  a1[1] = v9;
  v10 = a2[3];
  a1[2] = a2[2];
  a1[3] = v10;
  v11 = a2[4];
  a1[4] = v11;
  v12 = *(int *)(HourPrecipitationDetailView + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v16 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 16);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  v17 = swift_bridgeObjectRetain(v11);
  v16(v13, v14, HourPrecipitationChartViewModel, v17);
  v92 = HourPrecipitationDetailView;
  v18 = *(int *)(HourPrecipitationDetailView + 32);
  v19 = (uint64_t *)((char *)a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = *(uint64_t *)((char *)a2 + v18 + 8);
  *v19 = *(uint64_t *)((char *)a2 + v18);
  v19[1] = v21;
  v22 = type metadata accessor for ConditionDetailMapViewModel(0);
  v23 = *(int *)(v22 + 20);
  v24 = (char *)v19 + v23;
  v25 = &v20[v23];
  v26 = type metadata accessor for Location(0);
  v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
  v28 = swift_bridgeObjectRetain(v21);
  v27(v24, v25, v26, v28);
  v93 = v20;
  v94 = (int *)v22;
  v29 = *(int *)(v22 + 24);
  v30 = (_QWORD *)((char *)v19 + v29);
  v31 = &v20[v29];
  v32 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, (uint64_t)v32))
  {
    v91 = v19;
    v34 = *((_QWORD *)v31 + 1);
    *v30 = *(_QWORD *)v31;
    v30[1] = v34;
    v35 = v32[5];
    v36 = (char *)v30 + v35;
    v37 = &v31[v35];
    v38 = type metadata accessor for Locale(0);
    swift_bridgeObjectRetain(v34);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
    {
      v39 = sub_1000BA294(&qword_100BC3340);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
    }
    v40 = v32[6];
    v41 = (char *)v30 + v40;
    v42 = &v31[v40];
    v43 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = v32[7];
    v45 = (char *)v30 + v44;
    v46 = &v31[v44];
    v47 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      v48 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v45, v46, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    v50 = v32[8];
    v51 = (_QWORD *)((char *)v30 + v50);
    v52 = &v31[v50];
    v53 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v52);
    if (EnumCaseMultiPayload == 1)
    {
      v59 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v51, v52, v59);
      v56 = v51;
      v57 = v53;
      v58 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        goto LABEL_19;
      }
      v55 = *((_QWORD *)v52 + 1);
      *v51 = *(_QWORD *)v52;
      v51[1] = v55;
      swift_bridgeObjectRetain(v55);
      v56 = v51;
      v57 = v53;
      v58 = 0;
    }
    swift_storeEnumTagMultiPayload(v56, v57, v58);
LABEL_19:
    v19 = v91;
    v60 = v32[9];
    v61 = (char *)v30 + v60;
    v62 = &v31[v60];
    v63 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
    {
      v64 = sub_1000BA294(&qword_100BC3350);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      v65 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v65))
      {
        v66 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v61, v62, v65);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v65);
      }
      v67 = *(int *)(v63 + 20);
      v68 = &v61[v67];
      v69 = &v62[v67];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v65))
      {
        v70 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v68, v69, v65);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v65);
      }
      v19 = v91;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, (uint64_t)v32);
    goto LABEL_29;
  }
  v33 = sub_1000BA294(&qword_100BC3460);
  memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_29:
  v71 = v94[7];
  v72 = (_QWORD *)((char *)v19 + v71);
  v73 = &v93[v71];
  v74 = *((_QWORD *)v73 + 1);
  *v72 = *(_QWORD *)v73;
  v72[1] = v74;
  v75 = v94[8];
  v76 = (char *)v19 + v75;
  v77 = &v93[v75];
  v78 = type metadata accessor for WeatherMapOverlayKind(0);
  v79 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v78 - 8) + 16);
  v80 = swift_bridgeObjectRetain(v74);
  v79(v76, v77, v78, v80);
  *((_BYTE *)v19 + v94[9]) = v93[v94[9]];
  v81 = *(int *)(v92 + 36);
  v82 = (char *)a1 + v81;
  v83 = (char *)a2 + v81;
  v84 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
  v85 = *(int *)(v92 + 40);
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88))
  {
    v89 = sub_1000BA294(&qword_100BCE370);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v88);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v92);
  return a1;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailViewModel.Model(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD3070, (uint64_t)&nominal type descriptor for NextHourPrecipitationDetailViewModel.Model);
}

uint64_t sub_1002A60E8(uint64_t a1)
{
  int *HourPrecipitationDetailView;
  uint64_t result;
  uint64_t v4;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  HourPrecipitationDetailView = (int *)type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)HourPrecipitationDetailView);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + HourPrecipitationDetailView[7];
    HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 8))(v4, HourPrecipitationChartViewModel);
    v6 = a1 + HourPrecipitationDetailView[8];
    swift_bridgeObjectRelease();
    v7 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
    v8 = v6 + v7[5];
    v9 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v6 + v7[6];
    v11 = (int *)type metadata accessor for WeatherData(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, (uint64_t)v11))
    {
      swift_bridgeObjectRelease();
      v12 = v10 + v11[5];
      v13 = type metadata accessor for Locale(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      v14 = v10 + v11[6];
      v15 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      v16 = v10 + v11[7];
      v17 = sub_1000BA294(&qword_100BC3348);
      if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
      {
        v18 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
      }
      v19 = v10 + v11[8];
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19);
      if (EnumCaseMultiPayload == 1)
      {
        v21 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
      }
      v22 = v10 + v11[9];
      v23 = type metadata accessor for WeatherDataOverrides(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23))
      {
        v24 = type metadata accessor for Date(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v24))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        v25 = v22 + *(int *)(v23 + 20);
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v24))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v25, v24);
      }
    }
    swift_bridgeObjectRelease();
    v26 = v6 + v7[8];
    v27 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    v28 = a1 + HourPrecipitationDetailView[9];
    v29 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
    v30 = a1 + HourPrecipitationDetailView[10];
    v31 = sub_1000BA294(&qword_100BCE378);
    result = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v31);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
  }
  return result;
}

_QWORD *sub_1002A6414(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetailView;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t HourPrecipitationChartViewModel;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  int EnumCaseMultiPayload;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t, __n128);
  __n128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  int *v92;

  HourPrecipitationDetailView = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetailView))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a2[4];
  a1[4] = v9;
  v10 = *(int *)(HourPrecipitationDetailView + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 16);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v15 = swift_bridgeObjectRetain(v9);
  v14(v11, v12, HourPrecipitationChartViewModel, v15);
  v90 = HourPrecipitationDetailView;
  v16 = *(int *)(HourPrecipitationDetailView + 32);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  *v17 = *(_QWORD *)((char *)a2 + v16);
  v17[1] = v19;
  v20 = type metadata accessor for ConditionDetailMapViewModel(0);
  v21 = *(int *)(v20 + 20);
  v22 = (char *)v17 + v21;
  v23 = &v18[v21];
  v24 = type metadata accessor for Location(0);
  v25 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
  v26 = swift_bridgeObjectRetain(v19);
  v25(v22, v23, v24, v26);
  v91 = v18;
  v92 = (int *)v20;
  v27 = *(int *)(v20 + 24);
  v28 = (_QWORD *)((char *)v17 + v27);
  v29 = &v18[v27];
  v30 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
  {
    v89 = v17;
    v32 = *((_QWORD *)v29 + 1);
    *v28 = *(_QWORD *)v29;
    v28[1] = v32;
    v33 = v30[5];
    v34 = (char *)v28 + v33;
    v35 = &v29[v33];
    v36 = type metadata accessor for Locale(0);
    swift_bridgeObjectRetain(v32);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      v37 = sub_1000BA294(&qword_100BC3340);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    v38 = v30[6];
    v39 = (char *)v28 + v38;
    v40 = &v29[v38];
    v41 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    v42 = v30[7];
    v43 = (char *)v28 + v42;
    v44 = &v29[v42];
    v45 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      v46 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v47 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    v48 = v30[8];
    v49 = (_QWORD *)((char *)v28 + v48);
    v50 = &v29[v48];
    v51 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v50);
    if (EnumCaseMultiPayload == 1)
    {
      v57 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v49, v50, v57);
      v54 = v49;
      v55 = v51;
      v56 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        goto LABEL_17;
      }
      v53 = *((_QWORD *)v50 + 1);
      *v49 = *(_QWORD *)v50;
      v49[1] = v53;
      swift_bridgeObjectRetain(v53);
      v54 = v49;
      v55 = v51;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
LABEL_17:
    v17 = v89;
    v58 = v30[9];
    v59 = (char *)v28 + v58;
    v60 = &v29[v58];
    v61 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
    {
      v62 = sub_1000BA294(&qword_100BC3350);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v63))
      {
        v64 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v59, v60, v63);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v63);
      }
      v65 = *(int *)(v61 + 20);
      v66 = &v59[v65];
      v67 = &v60[v65];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v63))
      {
        v68 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v66, v67, v63);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v63);
      }
      v17 = v89;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
    goto LABEL_27;
  }
  v31 = sub_1000BA294(&qword_100BC3460);
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_27:
  v69 = v92[7];
  v70 = (_QWORD *)((char *)v17 + v69);
  v71 = &v91[v69];
  v72 = *((_QWORD *)v71 + 1);
  *v70 = *(_QWORD *)v71;
  v70[1] = v72;
  v73 = v92[8];
  v74 = (char *)v17 + v73;
  v75 = &v91[v73];
  v76 = type metadata accessor for WeatherMapOverlayKind(0);
  v77 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v76 - 8) + 16);
  v78 = swift_bridgeObjectRetain(v72);
  v77(v74, v75, v76, v78);
  *((_BYTE *)v17 + v92[9]) = v91[v92[9]];
  v79 = *(int *)(v90 + 36);
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  v82 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
  v83 = *(int *)(v90 + 40);
  v84 = (char *)a1 + v83;
  v85 = (char *)a2 + v83;
  v86 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    v87 = sub_1000BA294(&qword_100BCE370);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v90);
  return a1;
}

_QWORD *sub_1002A6A00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *HourPrecipitationDetailView;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t HourPrecipitationChartViewModel;
  void (*v16)(char *, char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int *v32;
  uint64_t v33;
  size_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  int *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  size_t v70;
  void *v71;
  const void *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  int EnumCaseMultiPayload;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t, __n128);
  __n128 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  char *v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  int v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  int v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  char *v208;
  uint64_t v209;
  int *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int v229;
  int v230;
  uint64_t v231;
  int *v232;
  char *v233;
  int *v234;
  char *v235;
  int *v236;
  int *v237;
  int *v238;
  _QWORD *v239;
  _QWORD *v240;
  _QWORD *v241;

  HourPrecipitationDetailView = (int *)type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)HourPrecipitationDetailView);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)HourPrecipitationDetailView);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = a2[1];
      a1[1] = v9;
      a1[2] = a2[2];
      v10 = a2[3];
      a1[3] = v10;
      v11 = a2[4];
      a1[4] = v11;
      v12 = HourPrecipitationDetailView[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      v16 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8)
                                                                   + 16);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      v17 = swift_bridgeObjectRetain(v11);
      v16(v13, v14, HourPrecipitationChartViewModel, v17);
      v18 = HourPrecipitationDetailView[8];
      v19 = (_QWORD *)((char *)a1 + v18);
      v239 = a2;
      v20 = (_QWORD *)((char *)a2 + v18);
      *v19 = *v20;
      v21 = v20[1];
      v19[1] = v21;
      v22 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
      v23 = v22[5];
      v24 = (char *)v19 + v23;
      v25 = (char *)v20 + v23;
      v26 = type metadata accessor for Location(0);
      v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
      v28 = swift_bridgeObjectRetain(v21);
      v27(v24, v25, v26, v28);
      v29 = v22[6];
      v30 = (_QWORD *)((char *)v19 + v29);
      v31 = (_QWORD *)((char *)v20 + v29);
      v32 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, (uint64_t)v32))
      {
        v33 = sub_1000BA294(&qword_100BC3460);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_49:
        v130 = v22[7];
        v131 = (_QWORD *)((char *)v19 + v130);
        v132 = (_QWORD *)((char *)v20 + v130);
        *v131 = *v132;
        v133 = v132[1];
        v131[1] = v133;
        v134 = v22[8];
        v135 = (char *)v19 + v134;
        v136 = (char *)v20 + v134;
        v137 = type metadata accessor for WeatherMapOverlayKind(0);
        v138 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v137 - 8) + 16);
        v139 = swift_bridgeObjectRetain(v133);
        v138(v135, v136, v137, v139);
        *((_BYTE *)v19 + v22[9]) = *((_BYTE *)v20 + v22[9]);
        v140 = HourPrecipitationDetailView[9];
        v141 = (char *)a1 + v140;
        v142 = (char *)v239 + v140;
        v143 = type metadata accessor for TimeZone(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
        v144 = HourPrecipitationDetailView[10];
        v145 = (char *)a1 + v144;
        v146 = (char *)v239 + v144;
        v147 = sub_1000BA294(&qword_100BCE378);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, v147))
        {
          v148 = sub_1000BA294(&qword_100BCE370);
          memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v145, 0, 1, v147);
        }
        v149 = (uint64_t)a1;
        v150 = (uint64_t)HourPrecipitationDetailView;
        goto LABEL_53;
      }
      v234 = v22;
      v237 = HourPrecipitationDetailView;
      *v30 = *v31;
      v64 = v31[1];
      v30[1] = v64;
      v65 = v32[5];
      v66 = (char *)v30 + v65;
      v67 = (char *)v31 + v65;
      v68 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v64);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
      {
        v69 = sub_1000BA294(&qword_100BC3340);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      }
      v73 = v32[6];
      v74 = (char *)v30 + v73;
      v75 = (char *)v31 + v73;
      v76 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
      v77 = v32[7];
      v78 = (char *)v30 + v77;
      v79 = (char *)v31 + v77;
      v80 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
      {
        v81 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        v82 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v78, v79, v82);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
      }
      v83 = v32[8];
      v84 = (_QWORD *)((char *)v30 + v83);
      v85 = (_QWORD *)((char *)v31 + v83);
      v86 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v85);
      if (EnumCaseMultiPayload == 1)
      {
        v92 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v84, v85, v92);
        v89 = v84;
        v90 = v86;
        v91 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          goto LABEL_29;
        }
        *v84 = *v85;
        v88 = v85[1];
        v84[1] = v88;
        swift_bridgeObjectRetain(v88);
        v89 = v84;
        v90 = v86;
        v91 = 0;
      }
      swift_storeEnumTagMultiPayload(v89, v90, v91);
LABEL_29:
      v93 = v32[9];
      v94 = (char *)v30 + v93;
      v95 = (char *)v31 + v93;
      v96 = type metadata accessor for WeatherDataOverrides(0);
      HourPrecipitationDetailView = v237;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
      {
        v97 = sub_1000BA294(&qword_100BC3350);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        v98 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v98))
        {
          v99 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v94, v95, v98);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v98);
        }
        v116 = *(int *)(v96 + 20);
        v117 = &v94[v116];
        v118 = &v95[v116];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v98))
        {
          v119 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v117, v118, v98);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v98);
        }
        HourPrecipitationDetailView = v237;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
      }
      v22 = v234;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, (uint64_t)v32);
      goto LABEL_49;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for NextHourPrecipitationDetailViewModel.Model);
LABEL_7:
    v34 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v35 = a1;
    goto LABEL_8;
  }
  *a1 = *a2;
  v36 = a2[1];
  a1[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v37 = a2[3];
  a1[3] = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease();
  v38 = a2[4];
  a1[4] = v38;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRelease();
  v39 = HourPrecipitationDetailView[7];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = HourPrecipitationDetailView[8];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (char *)a2 + v43;
  *v44 = *(_QWORD *)((char *)a2 + v43);
  v46 = *(_QWORD *)((char *)a2 + v43 + 8);
  v44[1] = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease();
  v47 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v48 = v47[5];
  v49 = (char *)v44 + v48;
  v50 = &v45[v48];
  v51 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
  v52 = v47[6];
  v53 = (_QWORD *)((char *)v44 + v52);
  v54 = &v45[v52];
  v55 = (int *)type metadata accessor for WeatherData(0);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, (uint64_t)v55);
  v57 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, (uint64_t)v55);
  if (v56)
  {
    if (!v57)
    {
      v232 = v47;
      v233 = v45;
      v236 = HourPrecipitationDetailView;
      v240 = a2;
      *v53 = *(_QWORD *)v54;
      v58 = *((_QWORD *)v54 + 1);
      v53[1] = v58;
      v59 = v55[5];
      v60 = (char *)v53 + v59;
      v61 = &v54[v59];
      v62 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v58);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        v63 = sub_1000BA294(&qword_100BC3340);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      v107 = v55[6];
      v108 = (char *)v53 + v107;
      v109 = &v54[v107];
      v110 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
      v111 = v55[7];
      v112 = (char *)v53 + v111;
      v113 = &v54[v111];
      v114 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v114))
      {
        v115 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        v120 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v112, v113, v120);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v114);
      }
      v47 = v232;
      v121 = v55[8];
      v122 = (_QWORD *)((char *)v53 + v121);
      v123 = &v54[v121];
      v124 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      v125 = swift_getEnumCaseMultiPayload(v123);
      if (v125 == 1)
      {
        v152 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v122, v123, v152);
        v127 = v122;
        v128 = v124;
        v129 = 1;
      }
      else
      {
        if (v125)
        {
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          goto LABEL_58;
        }
        *v122 = *(_QWORD *)v123;
        v126 = *((_QWORD *)v123 + 1);
        v122[1] = v126;
        swift_bridgeObjectRetain(v126);
        v127 = v122;
        v128 = v124;
        v129 = 0;
      }
      swift_storeEnumTagMultiPayload(v127, v128, v129);
LABEL_58:
      HourPrecipitationDetailView = v236;
      v153 = v55[9];
      v154 = (char *)v53 + v153;
      v155 = &v54[v153];
      v156 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v156))
      {
        v157 = sub_1000BA294(&qword_100BC3350);
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        v158 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v158))
        {
          v159 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v154, v155, v158);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v158);
        }
        v182 = *(int *)(v156 + 20);
        v183 = &v154[v182];
        v184 = &v155[v182];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v158))
        {
          v185 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v183, v184, v158);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v158);
        }
        HourPrecipitationDetailView = v236;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v156);
      }
      a2 = v240;
      v45 = v233;
      v186 = (uint64_t)v53;
      v187 = (uint64_t)v55;
      goto LABEL_81;
    }
    goto LABEL_17;
  }
  if (v57)
  {
    sub_1000215BC((uint64_t)v53, type metadata accessor for WeatherData);
LABEL_17:
    v70 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3460) - 8) + 64);
    v71 = v53;
    v72 = v54;
    goto LABEL_18;
  }
  v235 = v45;
  v238 = HourPrecipitationDetailView;
  v241 = a2;
  *v53 = *(_QWORD *)v54;
  v100 = *((_QWORD *)v54 + 1);
  v53[1] = v100;
  swift_bridgeObjectRetain(v100);
  swift_bridgeObjectRelease();
  v101 = v55[5];
  v102 = (char *)v53 + v101;
  v103 = &v54[v101];
  v104 = type metadata accessor for Locale(0);
  v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v104);
  v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104);
  if (v105)
  {
    if (!v106)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v102, v103, v104);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
      goto LABEL_65;
    }
    goto LABEL_64;
  }
  v160 = *(_QWORD *)(v104 - 8);
  if (v106)
  {
    (*(void (**)(char *, uint64_t))(v160 + 8))(v102, v104);
LABEL_64:
    v161 = sub_1000BA294(&qword_100BC3340);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    goto LABEL_65;
  }
  (*(void (**)(char *, char *, uint64_t))(v160 + 24))(v102, v103, v104);
LABEL_65:
  v162 = v55[6];
  v163 = (char *)v53 + v162;
  v164 = &v54[v162];
  v165 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 24))(v163, v164, v165);
  v166 = v55[7];
  v167 = (char *)v53 + v166;
  v168 = &v54[v166];
  v169 = sub_1000BA294(&qword_100BC3348);
  LODWORD(v164) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v169);
  v170 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169);
  if ((_DWORD)v164)
  {
    if (!v170)
    {
      v171 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v167, v168, v171);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
      goto LABEL_71;
    }
    goto LABEL_70;
  }
  if (v170)
  {
    sub_100021A14((uint64_t)v167, &qword_100BC3348);
LABEL_70:
    v172 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
    goto LABEL_71;
  }
  v198 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 24))(v167, v168, v198);
LABEL_71:
  v45 = v235;
  HourPrecipitationDetailView = v238;
  if (a1 == v241)
    goto LABEL_86;
  v173 = v55[8];
  v174 = (_QWORD *)((char *)v53 + v173);
  v175 = &v54[v173];
  sub_1000215BC((uint64_t)v53 + v173, type metadata accessor for WeatherData.WeatherStatisticsState);
  v176 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v177 = swift_getEnumCaseMultiPayload(v175);
  if (v177 == 1)
  {
    v188 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v174, v175, v188);
    v179 = v174;
    v180 = v176;
    v181 = 1;
  }
  else
  {
    if (v177)
    {
      memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
      goto LABEL_85;
    }
    *v174 = *(_QWORD *)v175;
    v178 = *((_QWORD *)v175 + 1);
    v174[1] = v178;
    swift_bridgeObjectRetain(v178);
    v179 = v174;
    v180 = v176;
    v181 = 0;
  }
  swift_storeEnumTagMultiPayload(v179, v180, v181);
LABEL_85:
  v45 = v235;
  HourPrecipitationDetailView = v238;
LABEL_86:
  v189 = v55[9];
  v190 = (char *)v53 + v189;
  v191 = &v54[v189];
  v192 = type metadata accessor for WeatherDataOverrides(0);
  v193 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v192);
  v194 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192);
  if (v193)
  {
    a2 = v241;
    if (!v194)
    {
      v195 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v195))
      {
        v196 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v190, v191, v195);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v195);
      }
      v202 = *(int *)(v192 + 20);
      v203 = &v190[v202];
      v204 = &v191[v202];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v195))
      {
        v205 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v203, v204, v195);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v195);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
      v45 = v235;
      goto LABEL_103;
    }
    goto LABEL_92;
  }
  a2 = v241;
  if (v194)
  {
    sub_1000215BC((uint64_t)v190, type metadata accessor for WeatherDataOverrides);
LABEL_92:
    v197 = sub_1000BA294(&qword_100BC3350);
    memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
    goto LABEL_103;
  }
  v199 = type metadata accessor for Date(0);
  v200 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v199);
  v201 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v199);
  if (!v200)
  {
    v224 = *(_QWORD *)(v199 - 8);
    if (!v201)
    {
      (*(void (**)(char *, char *, uint64_t))(v224 + 24))(v190, v191, v199);
      goto LABEL_113;
    }
    (*(void (**)(char *, uint64_t))(v224 + 8))(v190, v199);
    goto LABEL_112;
  }
  if (v201)
  {
LABEL_112:
    v225 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
    goto LABEL_113;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 16))(v190, v191, v199);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v199);
LABEL_113:
  v45 = v235;
  v226 = *(int *)(v192 + 20);
  v227 = (uint64_t)&v190[v226];
  v228 = (uint64_t)&v191[v226];
  v229 = _s7Weather24LocationCompositionStateOwet_0(v227, 1, v199);
  v230 = _s7Weather24LocationCompositionStateOwet_0(v228, 1, v199);
  if (v229)
  {
    if (!v230)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 16))(v227, v228, v199);
      v186 = v227;
      v187 = v199;
LABEL_81:
      _s7Weather24LocationCompositionStateOwst_0(v186, 0, 1, v187);
      goto LABEL_103;
    }
  }
  else
  {
    v231 = *(_QWORD *)(v199 - 8);
    if (!v230)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v231 + 24))(v227, v228, v199);
      goto LABEL_103;
    }
    (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v227, v199);
  }
  v70 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v71 = (void *)v227;
  v72 = (const void *)v228;
LABEL_18:
  memcpy(v71, v72, v70);
LABEL_103:
  v206 = v47[7];
  v207 = (_QWORD *)((char *)v44 + v206);
  v208 = &v45[v206];
  *v207 = *(_QWORD *)v208;
  v209 = *((_QWORD *)v208 + 1);
  v210 = v47;
  v207[1] = v209;
  swift_bridgeObjectRetain(v209);
  swift_bridgeObjectRelease();
  v211 = v47[8];
  v212 = (char *)v44 + v211;
  v213 = &v45[v211];
  v214 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 24))(v212, v213, v214);
  *((_BYTE *)v44 + v210[9]) = v45[v210[9]];
  v215 = HourPrecipitationDetailView[9];
  v216 = (char *)a1 + v215;
  v217 = (char *)a2 + v215;
  v218 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 24))(v216, v217, v218);
  v219 = HourPrecipitationDetailView[10];
  v220 = (uint64_t)a1 + v219;
  a2 = (_QWORD *)((char *)a2 + v219);
  v221 = sub_1000BA294(&qword_100BCE378);
  LODWORD(v217) = _s7Weather24LocationCompositionStateOwet_0(v220, 1, v221);
  v222 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v221);
  if ((_DWORD)v217)
  {
    if (!v222)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v220, a2, v221);
      v149 = v220;
      v150 = v221;
LABEL_53:
      _s7Weather24LocationCompositionStateOwst_0(v149, 0, 1, v150);
      return a1;
    }
  }
  else
  {
    v223 = *(_QWORD *)(v221 - 8);
    if (!v222)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v223 + 24))(v220, a2, v221);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v220, v221);
  }
  v34 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BCE370) - 8) + 64);
  v35 = (void *)v220;
LABEL_8:
  memcpy(v35, a2, v34);
  return a1;
}

_OWORD *sub_1002A7BFC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *HourPrecipitationDetailView;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *__dst;
  int *v70;
  char *v71;

  HourPrecipitationDetailView = (int *)type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)HourPrecipitationDetailView))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    v8 = HourPrecipitationDetailView[7];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v9, v10, HourPrecipitationChartViewModel);
    v12 = HourPrecipitationDetailView[8];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
    v15 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
    v16 = v15[5];
    v17 = &v13[v16];
    v18 = &v14[v16];
    v19 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    v20 = v15[6];
    v21 = &v13[v20];
    v22 = &v14[v20];
    v23 = (int *)type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v23))
    {
      v24 = sub_1000BA294(&qword_100BC3460);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v70 = v15;
      v71 = v13;
      *(_OWORD *)v21 = *(_OWORD *)v22;
      v25 = v23[5];
      v26 = &v21[v25];
      v27 = &v22[v25];
      v28 = type metadata accessor for Locale(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
      {
        v29 = sub_1000BA294(&qword_100BC3340);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      }
      v30 = v23[6];
      v31 = &v21[v30];
      v32 = &v22[v30];
      v33 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      v34 = v23[7];
      v35 = &v21[v34];
      v36 = &v22[v34];
      v37 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
      {
        v38 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v39 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v35, v36, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      }
      v40 = v23[8];
      v41 = &v21[v40];
      v42 = &v22[v40];
      v43 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v42) == 1)
      {
        v44 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
        swift_storeEnumTagMultiPayload(v41, v43, 1);
      }
      else
      {
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      v45 = v23[9];
      v46 = &v21[v45];
      v47 = &v22[v45];
      v48 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
      {
        v49 = sub_1000BA294(&qword_100BC3350);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        v50 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v50))
        {
          v51 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v46, v47, v50);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v50);
        }
        v52 = *(int *)(v48 + 20);
        __dst = &v46[v52];
        v53 = &v47[v52];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v50))
        {
          v54 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(__dst, v53, v50);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v50);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
      }
      v15 = v70;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
      v13 = v71;
    }
    *(_OWORD *)&v13[v15[7]] = *(_OWORD *)&v14[v15[7]];
    v55 = v15[8];
    v56 = &v13[v55];
    v57 = &v14[v55];
    v58 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
    v13[v15[9]] = v14[v15[9]];
    v59 = HourPrecipitationDetailView[9];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    v62 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
    v63 = HourPrecipitationDetailView[10];
    v64 = (char *)a1 + v63;
    v65 = (char *)a2 + v63;
    v66 = sub_1000BA294(&qword_100BCE378);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
    {
      v67 = sub_1000BA294(&qword_100BCE370);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)HourPrecipitationDetailView);
  }
  return a1;
}

uint64_t sub_1002A8170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *HourPrecipitationDetailView;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  int *v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  size_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  const void *v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  const void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  const void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  const void *v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  const void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  int v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  int v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  int *__dst;
  char *__dsta;
  uint64_t v204;
  uint64_t v205;
  int *v206;
  int *v207;
  int *v208;

  HourPrecipitationDetailView = (int *)type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)HourPrecipitationDetailView);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)HourPrecipitationDetailView);
  if (v7)
  {
    if (!v8)
    {
      v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v10 = HourPrecipitationDetailView[7];
      v11 = a1 + v10;
      v12 = a2 + v10;
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v11, v12, HourPrecipitationChartViewModel);
      v14 = HourPrecipitationDetailView[8];
      v15 = a1 + v14;
      v16 = a2 + v14;
      *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
      v17 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
      v18 = v17[5];
      v19 = v15 + v18;
      v20 = v16 + v18;
      v21 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      v22 = v17[6];
      v23 = (_OWORD *)(v15 + v22);
      v24 = (_OWORD *)(v16 + v22);
      v25 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v25))
      {
        v26 = sub_1000BA294(&qword_100BC3460);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v204 = a2;
        v207 = HourPrecipitationDetailView;
        *v23 = *v24;
        v57 = v25[5];
        v58 = (char *)v23 + v57;
        v59 = (char *)v24 + v57;
        v60 = type metadata accessor for Locale(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
        {
          v61 = sub_1000BA294(&qword_100BC3340);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
        }
        v65 = v25[6];
        v66 = (char *)v23 + v65;
        v67 = (char *)v24 + v65;
        v68 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
        v69 = v25[7];
        v70 = (char *)v23 + v69;
        v71 = (char *)v24 + v69;
        v72 = sub_1000BA294(&qword_100BC3348);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
        {
          v73 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          v74 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v70, v71, v74);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
        }
        v75 = v25[8];
        v76 = (char *)v23 + v75;
        v77 = (char *)v24 + v75;
        v78 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload(v77) == 1)
        {
          v79 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v76, v77, v79);
          swift_storeEnumTagMultiPayload(v76, v78, 1);
        }
        else
        {
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        v80 = v25[9];
        v81 = (char *)v23 + v80;
        v82 = (char *)v24 + v80;
        v83 = type metadata accessor for WeatherDataOverrides(0);
        a2 = v204;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
        {
          v84 = sub_1000BA294(&qword_100BC3350);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          v85 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v85))
          {
            v86 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v81, v82, v85);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v85);
          }
          v103 = *(int *)(v83 + 20);
          __dsta = &v81[v103];
          v104 = &v82[v103];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v85))
          {
            v105 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(__dsta, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(__dsta, v104, v85);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v85);
          }
          a2 = v204;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
        }
        HourPrecipitationDetailView = v207;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
      }
      *(_OWORD *)(v15 + v17[7]) = *(_OWORD *)(v16 + v17[7]);
      v117 = v17[8];
      v118 = v15 + v117;
      v119 = v16 + v117;
      v120 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
      *(_BYTE *)(v15 + v17[9]) = *(_BYTE *)(v16 + v17[9]);
      v121 = HourPrecipitationDetailView[9];
      v122 = a1 + v121;
      v123 = a2 + v121;
      v124 = type metadata accessor for TimeZone(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v122, v123, v124);
      v125 = HourPrecipitationDetailView[10];
      v126 = (void *)(a1 + v125);
      v127 = (const void *)(a2 + v125);
      v128 = sub_1000BA294(&qword_100BCE378);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
      {
        v129 = sub_1000BA294(&qword_100BCE370);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v126, v127, v128);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
      }
      v130 = a1;
      v131 = (uint64_t)HourPrecipitationDetailView;
      goto LABEL_52;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for NextHourPrecipitationDetailViewModel.Model);
LABEL_7:
    v27 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v28 = (void *)a1;
    v29 = (const void *)a2;
    goto LABEL_8;
  }
  v30 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v30;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v32 = HourPrecipitationDetailView[7];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  v36 = HourPrecipitationDetailView[8];
  v37 = (_QWORD *)(a1 + v36);
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36 + 8);
  *v37 = *(_QWORD *)(a2 + v36);
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v40 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v41 = v40[5];
  v42 = (char *)v37 + v41;
  v43 = v38 + v41;
  v44 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = v40[6];
  v46 = (uint64_t)v37 + v45;
  v47 = v38 + v45;
  v48 = (int *)type metadata accessor for WeatherData(0);
  v49 = _s7Weather24LocationCompositionStateOwet_0(v46, 1, (uint64_t)v48);
  v50 = _s7Weather24LocationCompositionStateOwet_0(v47, 1, (uint64_t)v48);
  if (v49)
  {
    if (!v50)
    {
      v201 = v38;
      __dst = v40;
      v51 = a2;
      v206 = HourPrecipitationDetailView;
      *(_OWORD *)v46 = *(_OWORD *)v47;
      v52 = v48[5];
      v53 = (void *)(v46 + v52);
      v54 = (const void *)(v47 + v52);
      v55 = type metadata accessor for Locale(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
      {
        v56 = sub_1000BA294(&qword_100BC3340);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
      }
      v94 = v48[6];
      v95 = v46 + v94;
      v96 = v47 + v94;
      v97 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
      v98 = v48[7];
      v99 = (void *)(v46 + v98);
      v100 = (const void *)(v47 + v98);
      v101 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
      {
        v102 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        v106 = type metadata accessor for Date(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v99, v100, v106);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
      }
      v107 = v48[8];
      v108 = (void *)(v46 + v107);
      v109 = (const void *)(v47 + v107);
      v110 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v109) == 1)
      {
        v111 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v108, v109, v111);
        swift_storeEnumTagMultiPayload(v108, v110, 1);
      }
      else
      {
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      v112 = v48[9];
      v113 = (char *)(v46 + v112);
      v114 = (char *)(v47 + v112);
      v115 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
      {
        a2 = v51;
        v116 = sub_1000BA294(&qword_100BC3350);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
      }
      else
      {
        v133 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v133))
        {
          v134 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v113, v114, v133);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v133);
        }
        v162 = *(int *)(v115 + 20);
        v163 = &v113[v162];
        v164 = &v114[v162];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v133))
        {
          v165 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v163, v164, v133);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v163, 0, 1, v133);
        }
        a2 = v51;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
      }
      HourPrecipitationDetailView = v206;
      v40 = __dst;
      _s7Weather24LocationCompositionStateOwst_0(v46, 0, 1, (uint64_t)v48);
      goto LABEL_83;
    }
    goto LABEL_17;
  }
  if (!v50)
  {
    v201 = v38;
    v205 = a2;
    v208 = HourPrecipitationDetailView;
    v87 = *(_QWORD *)(v47 + 8);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *(_QWORD *)(v46 + 8) = v87;
    swift_bridgeObjectRelease();
    v88 = v48[5];
    v89 = (void *)(v46 + v88);
    v90 = (const void *)(v47 + v88);
    v91 = type metadata accessor for Locale(0);
    v92 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v91);
    v93 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91);
    if (v92)
    {
      if (!v93)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v91);
        goto LABEL_59;
      }
    }
    else
    {
      v135 = *(_QWORD *)(v91 - 8);
      if (!v93)
      {
        (*(void (**)(void *, const void *, uint64_t))(v135 + 40))(v89, v90, v91);
LABEL_59:
        v137 = v48[6];
        v138 = v46 + v137;
        v139 = v47 + v137;
        v140 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 40))(v138, v139, v140);
        v141 = v48[7];
        v142 = (void *)(v46 + v141);
        v143 = (const void *)(v47 + v141);
        v144 = sub_1000BA294(&qword_100BC3348);
        LODWORD(v139) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v144);
        v145 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, v144);
        if ((_DWORD)v139)
        {
          if (!v145)
          {
            v146 = type metadata accessor for Date(0);
            (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v142, v143, v146);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v144);
            goto LABEL_65;
          }
        }
        else
        {
          if (!v145)
          {
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v185 - 8) + 40))(v142, v143, v185);
LABEL_65:
            a2 = v205;
            HourPrecipitationDetailView = v208;
            if (a1 != v205)
            {
              v148 = v48[8];
              v149 = (void *)(v46 + v148);
              v150 = (const void *)(v47 + v148);
              sub_1000215BC(v46 + v148, type metadata accessor for WeatherData.WeatherStatisticsState);
              v151 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload(v150) == 1)
              {
                v152 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v149, v150, v152);
                swift_storeEnumTagMultiPayload(v149, v151, 1);
              }
              else
              {
                memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
              }
              a2 = v205;
              HourPrecipitationDetailView = v208;
            }
            v153 = v48[9];
            v154 = (char *)(v46 + v153);
            v155 = (char *)(v47 + v153);
            v156 = type metadata accessor for WeatherDataOverrides(0);
            v157 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v156);
            v158 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v156);
            if (v157)
            {
              if (!v158)
              {
                v159 = type metadata accessor for Date(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v159))
                {
                  v160 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v154, v155, v159);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v159);
                }
                v189 = *(int *)(v156 + 20);
                v190 = &v154[v189];
                v191 = &v155[v189];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v159))
                {
                  v192 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v190, v191, v159);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v159);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v156);
                HourPrecipitationDetailView = v208;
                goto LABEL_83;
              }
              goto LABEL_76;
            }
            if (v158)
            {
              sub_1000215BC((uint64_t)v154, type metadata accessor for WeatherDataOverrides);
LABEL_76:
              v161 = sub_1000BA294(&qword_100BC3350);
              memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
LABEL_83:
              v38 = v201;
              goto LABEL_84;
            }
            v186 = type metadata accessor for Date(0);
            v187 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v186);
            v188 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v186);
            if (v187)
            {
              if (!v188)
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v154, v155, v186);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v186);
LABEL_104:
                HourPrecipitationDetailView = v208;
                v195 = *(int *)(v156 + 20);
                v196 = (uint64_t)&v154[v195];
                v197 = (uint64_t)&v155[v195];
                v198 = _s7Weather24LocationCompositionStateOwet_0(v196, 1, v186);
                v199 = _s7Weather24LocationCompositionStateOwet_0(v197, 1, v186);
                v38 = v201;
                if (v198)
                {
                  if (!v199)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v196, v197, v186);
                    _s7Weather24LocationCompositionStateOwst_0(v196, 0, 1, v186);
                    goto LABEL_84;
                  }
                }
                else
                {
                  v200 = *(_QWORD *)(v186 - 8);
                  if (!v199)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v200 + 40))(v196, v197, v186);
                    goto LABEL_84;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v196, v186);
                }
                v62 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
                v63 = (void *)v196;
                v64 = (const void *)v197;
                goto LABEL_18;
              }
            }
            else
            {
              v193 = *(_QWORD *)(v186 - 8);
              if (!v188)
              {
                (*(void (**)(char *, char *, uint64_t))(v193 + 40))(v154, v155, v186);
                goto LABEL_104;
              }
              (*(void (**)(char *, uint64_t))(v193 + 8))(v154, v186);
            }
            v194 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
            goto LABEL_104;
          }
          sub_100021A14((uint64_t)v142, &qword_100BC3348);
        }
        v147 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
        goto LABEL_65;
      }
      (*(void (**)(void *, uint64_t))(v135 + 8))(v89, v91);
    }
    v136 = sub_1000BA294(&qword_100BC3340);
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    goto LABEL_59;
  }
  sub_1000215BC(v46, type metadata accessor for WeatherData);
LABEL_17:
  v62 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3460) - 8) + 64);
  v63 = (void *)v46;
  v64 = (const void *)v47;
LABEL_18:
  memcpy(v63, v64, v62);
LABEL_84:
  v166 = v40[7];
  v167 = (_QWORD *)((char *)v37 + v166);
  v168 = (uint64_t *)(v38 + v166);
  v170 = *v168;
  v169 = v168[1];
  *v167 = v170;
  v167[1] = v169;
  swift_bridgeObjectRelease();
  v171 = v40[8];
  v172 = (char *)v37 + v171;
  v173 = v38 + v171;
  v174 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 40))(v172, v173, v174);
  *((_BYTE *)v37 + v40[9]) = *(_BYTE *)(v38 + v40[9]);
  v175 = HourPrecipitationDetailView[9];
  v176 = a1 + v175;
  v177 = a2 + v175;
  v178 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 40))(v176, v177, v178);
  v179 = HourPrecipitationDetailView[10];
  v180 = a1 + v179;
  v181 = a2 + v179;
  v182 = sub_1000BA294(&qword_100BCE378);
  LODWORD(v177) = _s7Weather24LocationCompositionStateOwet_0(v180, 1, v182);
  v183 = _s7Weather24LocationCompositionStateOwet_0(v181, 1, v182);
  if ((_DWORD)v177)
  {
    if (!v183)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v180, v181, v182);
      v130 = v180;
      v131 = v182;
LABEL_52:
      _s7Weather24LocationCompositionStateOwst_0(v130, 0, 1, v131);
      return a1;
    }
  }
  else
  {
    v184 = *(_QWORD *)(v182 - 8);
    if (!v183)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 40))(v180, v181, v182);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v180, v182);
  }
  v27 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BCE370) - 8) + 64);
  v28 = (void *)v180;
  v29 = (const void *)v181;
LABEL_8:
  memcpy(v28, v29, v27);
  return a1;
}

uint64_t sub_1002A9210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A921C);
}

uint64_t sub_1002A921C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000DF538();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1002A925C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A9268);
}

uint64_t sub_1002A9268(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1000DF538();
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_1002A92A4(uint64_t a1)
{
  uint64_t HourPrecipitationDetailView;

  HourPrecipitationDetailView = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetailView);
}

uint64_t sub_1002A92D4(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetailView;

  HourPrecipitationDetailView = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, HourPrecipitationDetailView);
}

uint64_t type metadata accessor for NextHourPrecipitationDetailViewModel(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD3008, (uint64_t)&nominal type descriptor for NextHourPrecipitationDetailViewModel);
}

uint64_t sub_1002A9320(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

_QWORD *sub_1002A9374(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t HourPrecipitationChartViewModel;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t, __n128);
  __n128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  int *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  v6 = a3;
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a2[4];
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[4] = v9;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 16);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v15 = swift_bridgeObjectRetain(v9);
  v14(v11, v12, HourPrecipitationChartViewModel, v15);
  v16 = v6[8];
  v17 = (_QWORD *)((char *)v4 + v16);
  v91 = a2;
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v21 = v20[5];
  v22 = (char *)v17 + v21;
  v23 = (char *)v18 + v21;
  v24 = type metadata accessor for Location(0);
  v25 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
  v26 = swift_bridgeObjectRetain(v19);
  v25(v22, v23, v24, v26);
  v93 = v17;
  v27 = v20[6];
  v28 = (_QWORD *)((char *)v17 + v27);
  v92 = v18;
  v29 = (_QWORD *)((char *)v18 + v27);
  v30 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
  {
    v90 = v6;
    v33 = v29[1];
    *v28 = *v29;
    v28[1] = v33;
    v34 = v30[5];
    v35 = (char *)v28 + v34;
    v36 = (char *)v29 + v34;
    v37 = type metadata accessor for Locale(0);
    swift_bridgeObjectRetain(v33);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
    {
      v38 = sub_1000BA294(&qword_100BC3340);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
    }
    v39 = v30[6];
    v40 = (char *)v28 + v39;
    v41 = (char *)v29 + v39;
    v42 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    v43 = v30[7];
    v44 = (char *)v28 + v43;
    v45 = (char *)v29 + v43;
    v46 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
    {
      v47 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v48 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v44, v45, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
    }
    v49 = v30[8];
    v50 = (_QWORD *)((char *)v28 + v49);
    v51 = (_QWORD *)((char *)v29 + v49);
    v52 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v51);
    if (EnumCaseMultiPayload == 1)
    {
      v58 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v50, v51, v58);
      v55 = v50;
      v56 = v52;
      v57 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        goto LABEL_17;
      }
      v54 = v51[1];
      *v50 = *v51;
      v50[1] = v54;
      swift_bridgeObjectRetain(v54);
      v55 = v50;
      v56 = v52;
      v57 = 0;
    }
    swift_storeEnumTagMultiPayload(v55, v56, v57);
LABEL_17:
    v6 = v90;
    v59 = v30[9];
    v60 = (char *)v28 + v59;
    v61 = (char *)v29 + v59;
    v62 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      v63 = sub_1000BA294(&qword_100BC3350);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      v64 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v64))
      {
        v65 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v60, v61, v64);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v64);
      }
      v66 = *(int *)(v62 + 20);
      v67 = &v60[v66];
      v68 = &v61[v66];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v64))
      {
        v69 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v67, v68, v64);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v64);
      }
      v6 = v90;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
    goto LABEL_27;
  }
  v31 = sub_1000BA294(&qword_100BC3460);
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_27:
  v70 = v20[7];
  v71 = (_QWORD *)((char *)v93 + v70);
  v72 = (_QWORD *)((char *)v92 + v70);
  v73 = v72[1];
  *v71 = *v72;
  v71[1] = v73;
  v74 = v20[8];
  v75 = (char *)v93 + v74;
  v76 = (char *)v92 + v74;
  v77 = type metadata accessor for WeatherMapOverlayKind(0);
  v78 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v77 - 8) + 16);
  v79 = swift_bridgeObjectRetain(v73);
  v78(v75, v76, v77, v79);
  *((_BYTE *)v93 + v20[9]) = *((_BYTE *)v92 + v20[9]);
  v80 = v6[9];
  v81 = (char *)v4 + v80;
  v82 = (char *)v91 + v80;
  v83 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
  v84 = v6[10];
  v85 = (char *)v4 + v84;
  v86 = (char *)v91 + v84;
  v87 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
  {
    v88 = sub_1000BA294(&qword_100BCE370);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
  }
  return v4;
}

uint64_t sub_1002A9948(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 8))(v4, HourPrecipitationChartViewModel);
  v6 = a1 + a2[8];
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v8 = v6 + v7[5];
  v9 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v6 + v7[6];
  v11 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, (uint64_t)v11))
  {
    swift_bridgeObjectRelease();
    v12 = v10 + v11[5];
    v13 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = v10 + v11[6];
    v15 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    v16 = v10 + v11[7];
    v17 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
    {
      v18 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
    }
    v19 = v10 + v11[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19);
    if (EnumCaseMultiPayload == 1)
    {
      v21 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    v22 = v10 + v11[9];
    v23 = type metadata accessor for WeatherDataOverrides(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23))
    {
      v24 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
      v25 = v22 + *(int *)(v23 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v25, v24);
    }
  }
  swift_bridgeObjectRelease();
  v26 = v6 + v7[8];
  v27 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  v28 = a1 + a2[9];
  v29 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  v30 = a1 + a2[10];
  v31 = sub_1000BA294(&qword_100BCE378);
  result = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v31);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
  return result;
}

_QWORD *sub_1002A9C58(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t HourPrecipitationChartViewModel;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t, __n128);
  __n128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v88;
  int *v89;
  _QWORD *v90;
  _QWORD *v91;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[4];
  a1[4] = v8;
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 16);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v14 = swift_bridgeObjectRetain(v8);
  v13(v10, v11, HourPrecipitationChartViewModel, v14);
  v15 = v3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v90 = a2;
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v20 = v19[5];
  v21 = (char *)v16 + v20;
  v22 = (char *)v17 + v20;
  v23 = type metadata accessor for Location(0);
  v24 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 16);
  v25 = swift_bridgeObjectRetain(v18);
  v24(v21, v22, v23, v25);
  v91 = v17;
  v26 = v19[6];
  v27 = (_QWORD *)((char *)v16 + v26);
  v28 = (_QWORD *)((char *)v17 + v26);
  v29 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
  {
    v30 = sub_1000BA294(&qword_100BC3460);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_25;
  }
  v88 = v16;
  v89 = v3;
  v31 = v28[1];
  *v27 = *v28;
  v27[1] = v31;
  v32 = v29[5];
  v33 = (char *)v27 + v32;
  v34 = (char *)v28 + v32;
  v35 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v31);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
  {
    v36 = sub_1000BA294(&qword_100BC3340);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
  }
  v37 = v29[6];
  v38 = (char *)v27 + v37;
  v39 = (char *)v28 + v37;
  v40 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = v29[7];
  v42 = (char *)v27 + v41;
  v43 = (char *)v28 + v41;
  v44 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    v45 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v42, v43, v46);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  v47 = v29[8];
  v48 = (_QWORD *)((char *)v27 + v47);
  v49 = (_QWORD *)((char *)v28 + v47);
  v50 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49);
  if (EnumCaseMultiPayload == 1)
  {
    v56 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v48, v49, v56);
    v53 = v48;
    v54 = v50;
    v55 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      goto LABEL_15;
    }
    v52 = v49[1];
    *v48 = *v49;
    v48[1] = v52;
    swift_bridgeObjectRetain(v52);
    v53 = v48;
    v54 = v50;
    v55 = 0;
  }
  swift_storeEnumTagMultiPayload(v53, v54, v55);
LABEL_15:
  v3 = v89;
  v57 = v29[9];
  v58 = (char *)v27 + v57;
  v59 = (char *)v28 + v57;
  v60 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
  {
    v61 = sub_1000BA294(&qword_100BC3350);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    v62 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v62))
    {
      v63 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v58, v59, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v62);
    }
    v64 = *(int *)(v60 + 20);
    v65 = &v58[v64];
    v66 = &v59[v64];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v62))
    {
      v67 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v65, v66, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v62);
    }
    v3 = v89;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
  }
  v16 = v88;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
LABEL_25:
  v68 = v19[7];
  v69 = (_QWORD *)((char *)v16 + v68);
  v70 = (_QWORD *)((char *)v91 + v68);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  v72 = v19[8];
  v73 = (char *)v16 + v72;
  v74 = (char *)v91 + v72;
  v75 = type metadata accessor for WeatherMapOverlayKind(0);
  v76 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v75 - 8) + 16);
  v77 = swift_bridgeObjectRetain(v71);
  v76(v73, v74, v75, v77);
  *((_BYTE *)v16 + v19[9]) = *((_BYTE *)v91 + v19[9]);
  v78 = v3[9];
  v79 = (char *)a1 + v78;
  v80 = (char *)v90 + v78;
  v81 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
  v82 = v3[10];
  v83 = (char *)a1 + v82;
  v84 = (char *)v90 + v82;
  v85 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85))
  {
    v86 = sub_1000BA294(&qword_100BCE370);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
  }
  return a1;
}

_QWORD *sub_1002AA1FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  int *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  int EnumCaseMultiPayload;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  size_t v103;
  void *v104;
  const void *v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  int v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  char *__dst;
  char *__dsta;
  char *__dstb;
  int *v146;
  int *v147;
  _QWORD *v148;
  _QWORD *v149;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = a2[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 24))(v10, v11, HourPrecipitationChartViewModel);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (char *)a2 + v13;
  *v14 = *(_QWORD *)((char *)a2 + v13);
  v16 = *(_QWORD *)((char *)a2 + v13 + 8);
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  v17 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v18 = v17[5];
  v19 = (char *)v14 + v18;
  v20 = &v15[v18];
  v21 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = v17[6];
  v23 = (_QWORD *)((char *)v14 + v22);
  v24 = &v15[v22];
  v25 = (int *)type metadata accessor for WeatherData(0);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v25);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v25);
  if (!v26)
  {
    if (v27)
    {
      sub_1000215BC((uint64_t)v23, type metadata accessor for WeatherData);
      goto LABEL_7;
    }
    __dsta = v15;
    v147 = a3;
    v149 = v14;
    *v23 = *(_QWORD *)v24;
    v35 = *((_QWORD *)v24 + 1);
    v23[1] = v35;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRelease();
    v36 = v25[5];
    v37 = (char *)v23 + v36;
    v38 = &v24[v36];
    v39 = type metadata accessor for Locale(0);
    v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
    v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
        goto LABEL_28;
      }
    }
    else
    {
      v69 = *(_QWORD *)(v39 - 8);
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 24))(v37, v38, v39);
LABEL_28:
        v71 = v25[6];
        v72 = (char *)v23 + v71;
        v73 = &v24[v71];
        v74 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
        v75 = v25[7];
        v76 = (char *)v23 + v75;
        v77 = &v24[v75];
        v78 = sub_1000BA294(&qword_100BC3348);
        LODWORD(v72) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v78);
        v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78);
        if ((_DWORD)v72)
        {
          if (!v79)
          {
            v80 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v76, v77, v80);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v78);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v79)
          {
            v106 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 24))(v76, v77, v106);
LABEL_34:
            a3 = v147;
            v14 = v149;
            if (a1 == a2)
              goto LABEL_48;
            v82 = v25[8];
            v83 = (_QWORD *)((char *)v23 + v82);
            v84 = &v24[v82];
            sub_1000215BC((uint64_t)v23 + v82, type metadata accessor for WeatherData.WeatherStatisticsState);
            v85 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v84);
            if (EnumCaseMultiPayload == 1)
            {
              v94 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v83, v84, v94);
              v88 = v83;
              v89 = v85;
              v90 = 1;
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
                goto LABEL_47;
              }
              *v83 = *(_QWORD *)v84;
              v87 = *((_QWORD *)v84 + 1);
              v83[1] = v87;
              swift_bridgeObjectRetain(v87);
              v88 = v83;
              v89 = v85;
              v90 = 0;
            }
            swift_storeEnumTagMultiPayload(v88, v89, v90);
LABEL_47:
            a3 = v147;
            v14 = v149;
LABEL_48:
            v95 = v25[9];
            v96 = (char *)v23 + v95;
            v97 = &v24[v95];
            v98 = type metadata accessor for WeatherDataOverrides(0);
            v99 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v98);
            v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98);
            if (v99)
            {
              if (!v100)
              {
                v101 = type metadata accessor for Date(0);
                v15 = __dsta;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v101))
                {
                  v102 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v96, v97, v101);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v101);
                }
                v110 = *(int *)(v98 + 20);
                v111 = &v96[v110];
                v112 = &v97[v110];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v101))
                {
                  v113 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v111, v112, v101);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v101);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v98);
                a3 = v147;
                goto LABEL_67;
              }
              goto LABEL_54;
            }
            if (v100)
            {
              sub_1000215BC((uint64_t)v96, type metadata accessor for WeatherDataOverrides);
LABEL_54:
              v103 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
              v104 = v96;
              v105 = v97;
              goto LABEL_55;
            }
            v107 = type metadata accessor for Date(0);
            v108 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v107);
            v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v107);
            if (v108)
            {
              if (!v109)
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v96, v97, v107);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v107);
LABEL_78:
                v137 = *(int *)(v98 + 20);
                v138 = (uint64_t)&v96[v137];
                v139 = (uint64_t)&v97[v137];
                v140 = _s7Weather24LocationCompositionStateOwet_0(v138, 1, v107);
                v141 = _s7Weather24LocationCompositionStateOwet_0(v139, 1, v107);
                if (v140)
                {
                  if (!v141)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v138, v139, v107);
                    _s7Weather24LocationCompositionStateOwst_0(v138, 0, 1, v107);
                    goto LABEL_56;
                  }
                }
                else
                {
                  v142 = *(_QWORD *)(v107 - 8);
                  if (!v141)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 24))(v138, v139, v107);
                    goto LABEL_56;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v138, v107);
                }
                v103 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
                v104 = (void *)v138;
                v105 = (const void *)v139;
LABEL_55:
                memcpy(v104, v105, v103);
LABEL_56:
                v15 = __dsta;
                goto LABEL_67;
              }
            }
            else
            {
              v135 = *(_QWORD *)(v107 - 8);
              if (!v109)
              {
                (*(void (**)(char *, char *, uint64_t))(v135 + 24))(v96, v97, v107);
                goto LABEL_78;
              }
              (*(void (**)(char *, uint64_t))(v135 + 8))(v96, v107);
            }
            v136 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
            goto LABEL_78;
          }
          sub_100021A14((uint64_t)v76, &qword_100BC3348);
        }
        v81 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v39);
    }
    v70 = sub_1000BA294(&qword_100BC3340);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_28;
  }
  if (v27)
  {
LABEL_7:
    v34 = sub_1000BA294(&qword_100BC3460);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_67;
  }
  __dst = v15;
  v146 = a3;
  v148 = v14;
  *v23 = *(_QWORD *)v24;
  v28 = *((_QWORD *)v24 + 1);
  v23[1] = v28;
  v29 = v25[5];
  v30 = (char *)v23 + v29;
  v31 = &v24[v29];
  v32 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v28);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    v33 = sub_1000BA294(&qword_100BC3340);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  v42 = v25[6];
  v43 = (char *)v23 + v42;
  v44 = &v24[v42];
  v45 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = v25[7];
  v47 = (char *)v23 + v46;
  v48 = &v24[v46];
  v49 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
  {
    v50 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v47, v48, v51);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
  }
  v15 = __dst;
  v52 = v25[8];
  v53 = (_QWORD *)((char *)v23 + v52);
  v54 = &v24[v52];
  v55 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v56 = swift_getEnumCaseMultiPayload(v54);
  if (v56 == 1)
  {
    v61 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v53, v54, v61);
    v58 = v53;
    v59 = v55;
    v60 = 1;
  }
  else
  {
    if (v56)
    {
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      goto LABEL_21;
    }
    *v53 = *(_QWORD *)v54;
    v57 = *((_QWORD *)v54 + 1);
    v53[1] = v57;
    swift_bridgeObjectRetain(v57);
    v58 = v53;
    v59 = v55;
    v60 = 0;
  }
  swift_storeEnumTagMultiPayload(v58, v59, v60);
LABEL_21:
  v14 = v148;
  v62 = v25[9];
  v63 = (char *)v23 + v62;
  v64 = &v24[v62];
  v65 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
  {
    v66 = sub_1000BA294(&qword_100BC3350);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v67 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v67))
    {
      v68 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v63, v64, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v67);
    }
    v91 = *(int *)(v65 + 20);
    __dstb = &v63[v91];
    v92 = &v64[v91];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v67))
    {
      v93 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(__dstb, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(__dstb, v92, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v67);
    }
    v14 = v148;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
  }
  a3 = v146;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
LABEL_67:
  v114 = v17[7];
  v115 = (_QWORD *)((char *)v14 + v114);
  v116 = &v15[v114];
  *v115 = *(_QWORD *)v116;
  v117 = *((_QWORD *)v116 + 1);
  v118 = v15;
  v115[1] = v117;
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRelease();
  v119 = v17[8];
  v120 = (char *)v14 + v119;
  v121 = &v118[v119];
  v122 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 24))(v120, v121, v122);
  *((_BYTE *)v14 + v17[9]) = v118[v17[9]];
  v123 = a3[9];
  v124 = (char *)a1 + v123;
  v125 = (char *)a2 + v123;
  v126 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 24))(v124, v125, v126);
  v127 = a3[10];
  v128 = (char *)a1 + v127;
  v129 = (char *)a2 + v127;
  v130 = sub_1000BA294(&qword_100BCE378);
  LODWORD(v121) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v130);
  v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130);
  if (!(_DWORD)v121)
  {
    v132 = *(_QWORD *)(v130 - 8);
    if (!v131)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v128, v129, v130);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v132 + 8))(v128, v130);
    goto LABEL_72;
  }
  if (v131)
  {
LABEL_72:
    v133 = sub_1000BA294(&qword_100BCE370);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
  return a1;
}

uint64_t sub_1002AADF8(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  char *__dst;
  int *v69;
  int *v70;

  v3 = a3;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v8, v9, HourPrecipitationChartViewModel);
  v11 = v3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v15 = v14[5];
  v16 = v12 + v15;
  v17 = v13 + v15;
  v18 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = v14[6];
  v20 = (_OWORD *)(v12 + v19);
  v21 = (_OWORD *)(v13 + v19);
  v22 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, (uint64_t)v22))
  {
    v23 = sub_1000BA294(&qword_100BC3460);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v69 = v14;
    v70 = v3;
    *v20 = *v21;
    v24 = v22[5];
    v25 = (char *)v20 + v24;
    v26 = (char *)v21 + v24;
    v27 = type metadata accessor for Locale(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
    {
      v28 = sub_1000BA294(&qword_100BC3340);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
    }
    v29 = v22[6];
    v30 = (char *)v20 + v29;
    v31 = (char *)v21 + v29;
    v32 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    v33 = v22[7];
    v34 = (char *)v20 + v33;
    v35 = (char *)v21 + v33;
    v36 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      v37 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v34, v35, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    v39 = v22[8];
    v40 = (char *)v20 + v39;
    v41 = (char *)v21 + v39;
    v42 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v41) == 1)
    {
      v43 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v40, v41, v43);
      swift_storeEnumTagMultiPayload(v40, v42, 1);
    }
    else
    {
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    v44 = v22[9];
    v45 = (char *)v20 + v44;
    v46 = (char *)v21 + v44;
    v47 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      v48 = sub_1000BA294(&qword_100BC3350);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v49))
      {
        v50 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v49);
      }
      v51 = *(int *)(v47 + 20);
      __dst = &v45[v51];
      v52 = &v46[v51];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v49))
      {
        v53 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(__dst, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(__dst, v52, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v49);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    v14 = v69;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
    v3 = v70;
  }
  *(_OWORD *)(v12 + v14[7]) = *(_OWORD *)(v13 + v14[7]);
  v54 = v14[8];
  v55 = v12 + v54;
  v56 = v13 + v54;
  v57 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
  *(_BYTE *)(v12 + v14[9]) = *(_BYTE *)(v13 + v14[9]);
  v58 = v3[9];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
  v62 = v3[10];
  v63 = (void *)(a1 + v62);
  v64 = (const void *)(a2 + v62);
  v65 = sub_1000BA294(&qword_100BCE378);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
  {
    v66 = sub_1000BA294(&qword_100BCE370);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
  }
  return a1;
}

_QWORD *sub_1002AB320(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  int *v24;
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  size_t v88;
  void *v89;
  const void *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  char *__dst;
  int *v133;
  int *v134;
  int *v135;
  int *v136;
  char *v137;
  char *v138;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 40))(v9, v10, HourPrecipitationChartViewModel);
  v12 = a3[8];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12 + 8);
  *v13 = *(_QWORD *)((char *)a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v17 = v16[5];
  v18 = (char *)v13 + v17;
  v19 = &v14[v17];
  v20 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = v16[6];
  v22 = (_QWORD *)((char *)v13 + v21);
  v23 = &v14[v21];
  v24 = (int *)type metadata accessor for WeatherData(0);
  v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v24);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v24);
  if (v25)
  {
    if (!v26)
    {
      v135 = a3;
      v137 = v14;
      *(_OWORD *)v22 = *(_OWORD *)v23;
      v27 = v24[5];
      v28 = (char *)v22 + v27;
      v29 = &v23[v27];
      v30 = type metadata accessor for Locale(0);
      v133 = v16;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
      {
        v31 = sub_1000BA294(&qword_100BC3340);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      }
      v40 = v24[6];
      v41 = (char *)v22 + v40;
      v42 = &v23[v40];
      v43 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      v44 = v24[7];
      v45 = (char *)v22 + v44;
      v46 = &v23[v44];
      v47 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
      {
        v48 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v49 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
      }
      v16 = v133;
      v50 = v24[8];
      v51 = (char *)v22 + v50;
      v52 = &v23[v50];
      v53 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v52) == 1)
      {
        v54 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v51, v52, v54);
        swift_storeEnumTagMultiPayload(v51, v53, 1);
      }
      else
      {
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      v55 = v24[9];
      v56 = (char *)v22 + v55;
      v57 = &v23[v55];
      v58 = type metadata accessor for WeatherDataOverrides(0);
      v14 = v137;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
      {
        v59 = sub_1000BA294(&qword_100BC3350);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        v60 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v60))
        {
          v61 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v56, v57, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v60);
        }
        v91 = *(int *)(v58 + 20);
        __dst = &v56[v91];
        v92 = &v57[v91];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v60))
        {
          v93 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(__dst, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(__dst, v92, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v60);
        }
        v14 = v137;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
      }
      a3 = v135;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
      goto LABEL_51;
    }
LABEL_7:
    v32 = sub_1000BA294(&qword_100BC3460);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_51;
  }
  if (v26)
  {
    sub_1000215BC((uint64_t)v22, type metadata accessor for WeatherData);
    goto LABEL_7;
  }
  v134 = v16;
  v136 = a3;
  v138 = v14;
  v33 = *((_QWORD *)v23 + 1);
  *v22 = *(_QWORD *)v23;
  v22[1] = v33;
  swift_bridgeObjectRelease();
  v34 = v24[5];
  v35 = (char *)v22 + v34;
  v36 = &v23[v34];
  v37 = type metadata accessor for Locale(0);
  v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37);
  v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v62 = *(_QWORD *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v37);
LABEL_24:
    v63 = sub_1000BA294(&qword_100BC3340);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v35, v36, v37);
LABEL_25:
  v64 = v24[6];
  v65 = (char *)v22 + v64;
  v66 = &v23[v64];
  v67 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  v68 = v24[7];
  v69 = (char *)v22 + v68;
  v70 = &v23[v68];
  v71 = sub_1000BA294(&qword_100BC3348);
  LODWORD(v65) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v71);
  v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71);
  if ((_DWORD)v65)
  {
    if (!v72)
    {
      v73 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v69, v70, v73);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v72)
  {
    sub_100021A14((uint64_t)v69, &qword_100BC3348);
LABEL_30:
    v74 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_31;
  }
  v116 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 40))(v69, v70, v116);
LABEL_31:
  a3 = v136;
  v14 = v138;
  if (a1 != a2)
  {
    v75 = v24[8];
    v76 = (char *)v22 + v75;
    v77 = &v23[v75];
    sub_1000215BC((uint64_t)v22 + v75, type metadata accessor for WeatherData.WeatherStatisticsState);
    v78 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v77) == 1)
    {
      v79 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v76, v77, v79);
      swift_storeEnumTagMultiPayload(v76, v78, 1);
    }
    else
    {
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    a3 = v136;
    v14 = v138;
  }
  v80 = v24[9];
  v81 = (char *)v22 + v80;
  v82 = &v23[v80];
  v83 = type metadata accessor for WeatherDataOverrides(0);
  v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v83);
  v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83);
  if (!v84)
  {
    if (v85)
    {
      sub_1000215BC((uint64_t)v81, type metadata accessor for WeatherDataOverrides);
      goto LABEL_42;
    }
    v117 = type metadata accessor for Date(0);
    v118 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v117);
    v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v117);
    if (v118)
    {
      if (!v119)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v81, v82, v117);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v117);
LABEL_72:
        v126 = *(int *)(v83 + 20);
        v127 = (uint64_t)&v81[v126];
        v128 = (uint64_t)&v82[v126];
        v129 = _s7Weather24LocationCompositionStateOwet_0(v127, 1, v117);
        v130 = _s7Weather24LocationCompositionStateOwet_0(v128, 1, v117);
        if (v129)
        {
          if (!v130)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v127, v128, v117);
            _s7Weather24LocationCompositionStateOwst_0(v127, 0, 1, v117);
            goto LABEL_44;
          }
        }
        else
        {
          v131 = *(_QWORD *)(v117 - 8);
          if (!v130)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 40))(v127, v128, v117);
            goto LABEL_44;
          }
          (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v127, v117);
        }
        v88 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
        v89 = (void *)v127;
        v90 = (const void *)v128;
LABEL_43:
        memcpy(v89, v90, v88);
LABEL_44:
        v16 = v134;
        goto LABEL_51;
      }
    }
    else
    {
      v124 = *(_QWORD *)(v117 - 8);
      if (!v119)
      {
        (*(void (**)(char *, char *, uint64_t))(v124 + 40))(v81, v82, v117);
        goto LABEL_72;
      }
      (*(void (**)(char *, uint64_t))(v124 + 8))(v81, v117);
    }
    v125 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    goto LABEL_72;
  }
  if (v85)
  {
LABEL_42:
    v88 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v89 = v81;
    v90 = v82;
    goto LABEL_43;
  }
  v86 = type metadata accessor for Date(0);
  v16 = v134;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v86))
  {
    v87 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v81, v82, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v86);
  }
  v120 = *(int *)(v83 + 20);
  v121 = &v81[v120];
  v122 = &v82[v120];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v86))
  {
    v123 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v121, v122, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v86);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  a3 = v136;
LABEL_51:
  v94 = v16[7];
  v95 = (_QWORD *)((char *)v13 + v94);
  v96 = &v14[v94];
  v98 = *(_QWORD *)v96;
  v97 = *((_QWORD *)v96 + 1);
  *v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  v99 = v16[8];
  v100 = v16;
  v101 = (char *)v13 + v99;
  v102 = &v14[v99];
  v103 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 40))(v101, v102, v103);
  *((_BYTE *)v13 + v100[9]) = v14[v100[9]];
  v104 = a3[9];
  v105 = (char *)a1 + v104;
  v106 = (char *)a2 + v104;
  v107 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 40))(v105, v106, v107);
  v108 = a3[10];
  v109 = (char *)a1 + v108;
  v110 = (char *)a2 + v108;
  v111 = sub_1000BA294(&qword_100BCE378);
  LODWORD(v102) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v111);
  v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v111);
  if (!(_DWORD)v102)
  {
    v113 = *(_QWORD *)(v111 - 8);
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(v113 + 40))(v109, v110, v111);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v113 + 8))(v109, v111);
    goto LABEL_56;
  }
  if (v112)
  {
LABEL_56:
    v114 = sub_1000BA294(&qword_100BCE370);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v111);
  return a1;
}

uint64_t sub_1002ABE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002ABE70);
}

uint64_t sub_1002ABE70(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for NextHourPrecipitationChartViewModel(0);
    sub_100088FF0();
    if (v11)
    {
      v9 = v8;
      v10 = a3[7];
    }
    else
    {
      type metadata accessor for ConditionDetailMapViewModel(0);
      sub_100088FF0();
      if (v11)
      {
        v9 = v12;
        v10 = a3[8];
      }
      else
      {
        type metadata accessor for TimeZone(0);
        sub_100088FF0();
        if (v13)
        {
          v9 = v14;
          v10 = a3[9];
        }
        else
        {
          v9 = sub_1000BA294(&qword_100BCE370);
          v10 = a3[10];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_1002ABF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002ABF48);
}

void sub_1002ABF48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    type metadata accessor for NextHourPrecipitationChartViewModel(0);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[7];
    }
    else
    {
      type metadata accessor for ConditionDetailMapViewModel(0);
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[8];
      }
      else
      {
        type metadata accessor for TimeZone(0);
        sub_10009D2E8();
        if (v12)
        {
          v8 = v13;
          v9 = a4[9];
        }
        else
        {
          v8 = sub_1000BA294(&qword_100BCE370);
          v9 = a4[10];
        }
      }
    }
    sub_1000987C4(a1 + v9, a2, a2, v8);
  }
}

void sub_1002AC000(uint64_t a1)
{
  uint64_t HourPrecipitationChartViewModel;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];

  v10[0] = &unk_100990B80;
  v10[1] = &unk_100990B80;
  v10[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(319);
  if (v3 <= 0x3F)
  {
    v10[3] = *(_QWORD *)(HourPrecipitationChartViewModel - 8) + 64;
    v4 = type metadata accessor for ConditionDetailMapViewModel(319);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for TimeZone(319);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        sub_100280B3C(319);
        if (v9 <= 0x3F)
        {
          v10[6] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 7, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_1002AC0D8(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t HourPrecipitationChartView;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t HourPrecipitationDetailView;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t active;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v73 = a3;
  v72 = a2;
  v76 = a4;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v75 = v8 - v7;
  v79 = type metadata accessor for Date(0);
  v82 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  sub_1000986FC();
  v78 = v9;
  __chkstk_darwin(v10);
  v71 = (char *)&v70 - v11;
  v77 = type metadata accessor for LollipopDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = (uint64_t *)(v14 - v13);
  v16 = type metadata accessor for LollipopMarkModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_10007A130();
  sub_1000BA294(&qword_100BD30E8);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_1000986FC();
  v74 = v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v70 - v24;
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v27 = *(_QWORD *)(HourPrecipitationChartView - 8);
  __chkstk_darwin(HourPrecipitationChartView);
  sub_100098728();
  v30 = v29 - v28;
  v83 = a1;
  sub_100033A34(a1, (uint64_t)v25, &qword_100BD30E8);
  sub_100088FC8((uint64_t)v25, 1, HourPrecipitationChartView);
  v80 = v27;
  if (v55)
  {
    sub_100021A14((uint64_t)v25, &qword_100BD30E8);
LABEL_8:
    v37 = v78;
    goto LABEL_9;
  }
  v31 = (int *)v16;
  v32 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v30, v25, HourPrecipitationChartView);
  if ((v73 & 1) != 0)
  {
    sub_100098B40(v30, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
    goto LABEL_8;
  }
  v33 = NextHourPrecipitationChartViewModel.Point.value.getter(v32);
  v34 = v81;
  v35 = sub_1002AC5D4(v33);
  v37 = v78;
  if (v36)
  {
    v38 = v4;
    v39 = v35;
    v83 = v36;
    v40 = NextHourPrecipitationChartViewModel.Point.date.getter(v35);
    *(double *)(v38 + v31[5]) = NextHourPrecipitationChartViewModel.Point.value.getter(v40);
    *(_QWORD *)(v38 + v31[6]) = 0;
    *(_QWORD *)(v38 + v31[7]) = 0;
    v41 = v71;
    NextHourPrecipitationChartViewModel.Point.date.getter(v42);
    HourPrecipitationDetailView = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
    v44 = Date.formattedTime(timeZone:)(v34 + *(int *)(HourPrecipitationDetailView + 36));
    v46 = v45;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v79);
    sub_100098B40(v30, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
    *v15 = v44;
    v15[1] = v46;
    v47 = v83;
    v15[2] = v39;
    v15[3] = v47;
    v15[4] = 0;
    v15[5] = 0;
    swift_storeEnumTagMultiPayload(v15, v77, 0);
    v48 = v76;
    *v76 = v72;
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    sub_1000DB674(v38, (uint64_t)v48 + *(int *)(active + 20), type metadata accessor for LollipopMarkModel);
    sub_1000DB674((uint64_t)v15, (uint64_t)v48 + *(int *)(active + 24), type metadata accessor for LollipopDetailViewModel);
    v50 = 1;
    goto LABEL_23;
  }
  sub_100098B40(v30, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
LABEL_9:
  sub_100033A34(v83, (uint64_t)v22, &qword_100BD30E8);
  v51 = sub_100088FC8((uint64_t)v22, 1, HourPrecipitationChartView);
  v52 = v79;
  v53 = v74;
  v54 = v75;
  if (v55)
  {
    sub_100021A14((uint64_t)v22, &qword_100BD30E8);
    v56 = sub_10009E61C(v54, 1);
LABEL_14:
    Date.init()(v56);
    sub_100021A14(v54, (uint64_t *)&unk_100BD35A0);
    goto LABEL_15;
  }
  NextHourPrecipitationChartViewModel.Point.date.getter(v51);
  sub_100098B40((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
  sub_10009E61C(v54, 0);
  v56 = sub_100088FC8(v54, 1, v52);
  if (v55)
    goto LABEL_14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v37, v54, v52);
LABEL_15:
  v57 = v81;
  v58 = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
  v59 = Date.formattedTime(timeZone:)(v57 + *(int *)(v58 + 36));
  v61 = v60;
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v37, v52);
  sub_100033A34(v83, v53, &qword_100BD30E8);
  v62 = sub_100088FC8(v53, 1, HourPrecipitationChartView);
  if (v55)
  {
    sub_100021A14(v53, &qword_100BD30E8);
    v63 = 0.0;
  }
  else
  {
    v63 = NextHourPrecipitationChartViewModel.Point.value.getter(v62);
    sub_100098B40(v53, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
  }
  v48 = v76;
  v64 = v77;
  v65 = sub_1002AC5D4(v63);
  v67 = 32;
  if (v66)
    v67 = v65;
  *v48 = v59;
  v48[1] = v61;
  v68 = 0xE100000000000000;
  if (v66)
    v68 = v66;
  v48[2] = v67;
  v48[3] = v68;
  v48[4] = 0;
  v48[5] = 0;
  swift_storeEnumTagMultiPayload(v48, v64, 0);
  v50 = 0;
LABEL_23:
  v69 = type metadata accessor for DetailHeroChartLollipopModel(0);
  swift_storeEnumTagMultiPayload(v48, v69, v50);
}

uint64_t sub_1002AC5D4(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, unint64_t, uint64_t);
  uint64_t v18;
  double v19;
  id v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t countAndFlagsBits;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  double v34;
  uint64_t v35;
  Swift::String v36;

  v2 = sub_1000BA294(&qword_100BD30F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ApparentPrecipitationIntensityCategory(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v33 - v11;
  if (a1 <= 0.0)
  {
    v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v36._object = (void *)0x80000001009F8710;
    v22._countAndFlagsBits = 1701736270;
    v22._object = (void *)0xE400000000000000;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 0xD000000000000062;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v36)._countAndFlagsBits;

  }
  else
  {
    v13 = static ApparentPrecipitationIntensityCategory.allCases.getter(v10);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v16 = *(_QWORD *)(v6 + 72);
      v17 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v6 + 16);
      while (1)
      {
        v18 = v17(v8, v15, v5);
        if (ApparentPrecipitationIntensityCategory.rangeValue.getter(v18) <= a1 && v19 > a1)
          break;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v15 += v16;
        if (!--v14)
          goto LABEL_10;
      }
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v4, v8, v5);
      v25 = 0;
    }
    else
    {
LABEL_10:
      v25 = 1;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, v25, 1, v5);
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
    {
      sub_100021A14((uint64_t)v4, &qword_100BD30F0);
      if (qword_100BC2450 != -1)
        swift_once(&qword_100BC2450, sub_1006F3844);
      v26 = type metadata accessor for Logger(0);
      v27 = sub_1000AECD4(v26, (uint64_t)qword_100CAF0E8);
      v28 = Logger.logObject.getter(v27);
      v30 = static os_log_type_t.error.getter(v28, v29);
      if (os_log_type_enabled(v28, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v31 = 134217984;
        v34 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
        _os_log_impl((void *)&_mh_execute_header, v28, v30, "Failed to create intensity string for value:%f", v31, 0xCu);
        swift_slowDealloc(v31, -1, -1);
      }

      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
      type metadata accessor for MinuteForecastStringBuilder(0);
      countAndFlagsBits = static MinuteForecastStringBuilder.buildIntensityString(for:)(v12);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    }
  }
  return countAndFlagsBits;
}

BOOL sub_1002AC918(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;

  v5 = sub_1000DF538();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = (_QWORD *)(v8 - v7);
  type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100099864();
  sub_1000BA294(&qword_100BD30C8);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v16 = v13 - v12 + *(int *)(v15 + 48);
  sub_1002ACF24(a1, v13 - v12);
  sub_1002ACF24(a2, v16);
  sub_100088FC8(v14, 1, v5);
  if (!v18)
  {
    sub_1002ACF24(v14, (uint64_t)v2);
    sub_100088FC8(v16, 1, v5);
    if (!v18)
    {
      sub_1000DB674(v16, (uint64_t)v9, type metadata accessor for NextHourPrecipitationDetailViewModel.Model);
      v17 = sub_1002ACAB8(v2, v9);
      sub_1000215BC((uint64_t)v9, type metadata accessor for NextHourPrecipitationDetailViewModel.Model);
      sub_1000215BC((uint64_t)v2, type metadata accessor for NextHourPrecipitationDetailViewModel.Model);
      sub_1000215BC(v14, type metadata accessor for NextHourPrecipitationDetailViewModel);
      return v17;
    }
    sub_1000215BC((uint64_t)v2, type metadata accessor for NextHourPrecipitationDetailViewModel.Model);
LABEL_9:
    sub_100021A14(v14, &qword_100BD30C8);
    return 0;
  }
  sub_100088FC8(v16, 1, v5);
  if (!v18)
    goto LABEL_9;
  sub_1000215BC(v14, type metadata accessor for NextHourPrecipitationDetailViewModel);
  return 1;
}

BOOL sub_1002ACAB8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  _BOOL8 result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  char v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_1000BA294(&qword_100BCE378);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100099864();
  v8 = sub_1000BA294(&qword_100BD0D48);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_10007A130();
  sub_1000BA294(&qword_100BCE370);
  sub_1000B42B0();
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  v22 = (char *)&v43 - v21;
  v23 = a1[1];
  v24 = a2[1];
  v25 = *a1 == *a2 && v23 == v24;
  if (v25 || (v26 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v23, *a2, v24, 0), result = 0, (v26 & 1) != 0))
  {
    v28 = a1[2];
    v29 = a1[3];
    v30 = a2[2];
    v31 = a2[3];
    v32 = v28 == v30 && v29 == v31;
    if (v32
      || (v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v30, v31, 0), result = 0, (v33 & 1) != 0))
    {
      sub_100946D88(a1[4], a2[4], v30, v31, v17, v18, v19, v20, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53,
        v54);
      if ((v34 & 1) != 0)
      {
        v44 = v3;
        v35 = (int *)sub_1000DF538();
        if ((static NextHourPrecipitationChartViewModel.== infix(_:_:)((char *)a1 + v35[7], (char *)a2 + v35[7]) & 1) != 0
          && (sub_10071ECF4((_QWORD *)((char *)a1 + v35[8]), (_QWORD *)((char *)a2 + v35[8])) & 1) != 0
          && (static TimeZone.== infix(_:_:)((char *)a1 + v35[9], (char *)a2 + v35[9]) & 1) != 0)
        {
          sub_1000B46F0((uint64_t)a1 + v35[10], (uint64_t)v22);
          sub_1000B46F0((uint64_t)a2 + v35[10], (uint64_t)v16);
          v36 = *(int *)(v8 + 48);
          v37 = v44;
          v38 = v44 + v36;
          sub_1000B46F0((uint64_t)v22, v44);
          sub_1000B46F0((uint64_t)v16, v38);
          sub_100088FC8(v37, 1, v6);
          if (v25)
          {
            sub_10009E47C((uint64_t)v16);
            sub_10009E47C((uint64_t)v22);
            sub_100088FC8(v38, 1, v6);
            if (v25)
            {
              sub_100021A14(v37, &qword_100BCE370);
              return 1;
            }
          }
          else
          {
            sub_100033A34(v37, (uint64_t)v13, &qword_100BCE370);
            sub_100088FC8(v38, 1, v6);
            if (!v39)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v38, v6);
              sub_10003D2DC(&qword_100BD0D60, &qword_100BCE378);
              v41 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v2, v6, v40);
              v42 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
              v42(v2, v6);
              sub_10009E47C((uint64_t)v16);
              sub_10009E47C((uint64_t)v22);
              v42((uint64_t)v13, v6);
              sub_10009E47C(v37);
              return (v41 & 1) != 0;
            }
            sub_10009E47C((uint64_t)v16);
            sub_10009E47C((uint64_t)v22);
            (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
          }
          sub_100021A14(v37, &qword_100BD0D48);
        }
      }
      return 0;
    }
  }
  return result;
}

void sub_1002ACE00(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t HourPrecipitationDetailViewModel;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BD30D0);
  sub_10003D2DC(&qword_100BD30D8, &qword_100BD30D0);
  a1[4] = v3;
  sub_10005F164(a1);
  HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  ShortDescription.init(name:_:)(0xD000000000000024, 0x8000000100990B30, v2, HourPrecipitationDetailViewModel);
  sub_100079F70();
}

void sub_1002ACEB4(_QWORD *a1@<X8>)
{
  sub_1002ACE00(a1);
}

uint64_t sub_1002ACEC8(uint64_t a1)
{
  uint64_t v2;

  sub_1002ACF68(&qword_100BD30E0);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_1002ACF00()
{
  sub_1002ACF68(&qword_100BD30C0);
}

uint64_t sub_1002ACF24(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetailViewModel;

  HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationDetailViewModel - 8) + 16))(a2, a1, HourPrecipitationDetailViewModel);
  return a2;
}

void sub_1002ACF68(unint64_t *a1)
{
  uint64_t HourPrecipitationDetailViewModel;

  if (!*a1)
  {
    HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(255);
    atomic_store(sub_10003BC38(HourPrecipitationDetailViewModel), a1);
  }
  sub_10004A298();
}

uint64_t *sub_1002ACF9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(a2, 1, v7))
    {
      v9 = *(_QWORD *)a2;
      v10 = *(_QWORD *)(a2 + 8);
      v11 = *(_BYTE *)(a2 + 16);
      sub_1000B2044(*(_QWORD *)a2, v10, v11);
      *a1 = v9;
      a1[1] = v10;
      *((_BYTE *)a1 + 16) = v11;
      v12 = *(_QWORD *)(a2 + 32);
      a1[3] = *(_QWORD *)(a2 + 24);
      a1[4] = v12;
      v13 = *(int *)(v7 + 24);
      v14 = (char *)a1 + v13;
      v15 = (const void *)(a2 + v13);
      v16 = type metadata accessor for WeatherDescription(0);
      swift_bridgeObjectRetain(v12);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_1000BA294(&qword_100BC3368);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v18 = a2 + *(int *)(v7 + 28);
      type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      v19 = (char *)&loc_1002AD114 + 4 * byte_100990C40[swift_getEnumCaseMultiPayload(v18)];
      __asm { BR              X10 }
    }
    memcpy(a1, (const void *)a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_1002AE374(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  void (*v48)(uint64_t, uint64_t, __n128);
  uint64_t v49;
  uint64_t v50;
  int v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v2 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2))
  {
    sub_10006BD8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
    swift_bridgeObjectRelease();
    v3 = a1 + v2[6];
    v4 = type metadata accessor for WeatherDescription(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    v5 = a1 + v2[7];
    v6 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload(v5))
    {
      case 0u:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
        goto LABEL_41;
      case 1u:
        goto LABEL_24;
      case 2u:
        v7 = type metadata accessor for AttributedString(0);
        goto LABEL_40;
      case 3u:
        v7 = sub_1000BA294(&qword_100BD30F8);
        goto LABEL_40;
      case 4u:
        if (*(_QWORD *)(v5 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v8 = type metadata accessor for DetailComponentContainerViewModel(0);
        v9 = v5 + *(int *)(v8 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v9) == 1)
        {
          swift_bridgeObjectRelease();
          v10 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v11 = v9 + v10[5];
          v12 = type metadata accessor for URL(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
          v13 = swift_bridgeObjectRelease();
          v14 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 8);
          v14(v9 + v10[7], v12, v13);
          v15 = v9 + v10[8];
          if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v12))
            ((void (*)(uint64_t, uint64_t))v14)(v15, v12);
        }
        v5 += *(int *)(v8 + 24);
        v16 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v16))
          goto LABEL_41;
        v7 = type metadata accessor for URL(0);
        goto LABEL_40;
      case 5u:
        if (*(_QWORD *)(v5 + 24))
        {
          sub_1000D31B4(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
          swift_bridgeObjectRelease();
        }
        sub_1002387C0(*(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(unsigned __int8 *)(v5 + 88), *(_BYTE *)(v5 + 89));
        goto LABEL_41;
      case 6u:
        v7 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        goto LABEL_40;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5);
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          v18 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
          v19 = v5 + v18[5];
          v20 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
          v21 = v5 + v18[6];
          v22 = (int *)type metadata accessor for WeatherData(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, (uint64_t)v22))
          {
            swift_bridgeObjectRelease();
            v23 = v21 + v22[5];
            v24 = type metadata accessor for Locale(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
            v25 = v21 + v22[6];
            v26 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
            v27 = v21 + v22[7];
            v28 = sub_1000BA294(&qword_100BC3348);
            if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
            {
              v29 = type metadata accessor for Date(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);
            }
            v30 = v21 + v22[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v31 = swift_getEnumCaseMultiPayload(v30);
            if (v31 == 1)
            {
              v32 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
            }
            else if (!v31)
            {
              swift_bridgeObjectRelease();
            }
            v33 = v21 + v22[9];
            v34 = type metadata accessor for WeatherDataOverrides(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
            {
              v35 = type metadata accessor for Date(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v35))
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v33, v35);
              v36 = v33 + *(int *)(v34 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v35))
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v36, v35);
            }
          }
          swift_bridgeObjectRelease();
          v5 += v18[8];
          v7 = type metadata accessor for WeatherMapOverlayKind(0);
LABEL_40:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
LABEL_24:
          swift_bridgeObjectRelease();
        }
LABEL_41:
        v37 = a1 + v2[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload(v37))
          {
            case 0u:
              v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
              v39 = v37;
              v40 = v4;
              goto LABEL_80;
            case 1u:
              goto LABEL_63;
            case 2u:
              v41 = type metadata accessor for AttributedString(0);
              goto LABEL_79;
            case 3u:
              v41 = sub_1000BA294(&qword_100BD30F8);
              goto LABEL_79;
            case 4u:
              if (*(_QWORD *)(v37 + 8))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v42 = type metadata accessor for DetailComponentContainerViewModel(0);
              v43 = v37 + *(int *)(v42 + 20);
              type metadata accessor for NewsArticleComponentViewModel(0);
              if (swift_getEnumCaseMultiPayload(v43) == 1)
              {
                swift_bridgeObjectRelease();
                v44 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                v45 = v43 + v44[5];
                v46 = type metadata accessor for URL(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46))
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
                v47 = swift_bridgeObjectRelease();
                v48 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v46 - 8) + 8);
                v48(v43 + v44[7], v46, v47);
                v49 = v43 + v44[8];
                if (!_s7Weather24LocationCompositionStateOwet_0(v49, 1, v46))
                  ((void (*)(uint64_t, uint64_t))v48)(v49, v46);
              }
              v37 += *(int *)(v42 + 24);
              v50 = type metadata accessor for DetailComponentAction(0);
              if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v50))
                return;
              v41 = type metadata accessor for URL(0);
              goto LABEL_79;
            case 5u:
              if (*(_QWORD *)(v37 + 24))
              {
                sub_1000D31B4(*(_QWORD *)v37, *(_QWORD *)(v37 + 8), *(_BYTE *)(v37 + 16));
                swift_bridgeObjectRelease();
              }
              sub_1002387C0(*(_QWORD *)(v37 + 32), *(_QWORD *)(v37 + 40), *(_QWORD *)(v37 + 48), *(_QWORD *)(v37 + 56), *(_QWORD *)(v37 + 64), *(_QWORD *)(v37 + 72), *(_QWORD *)(v37 + 80), *(unsigned __int8 *)(v37 + 88), *(_BYTE *)(v37 + 89));
              return;
            case 6u:
              v41 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
              goto LABEL_79;
            case 7u:
              type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
              v51 = swift_getEnumCaseMultiPayload(v37);
              if (v51 == 1)
              {
                swift_bridgeObjectRelease();
                v52 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
                v53 = v37 + v52[5];
                v54 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
                v55 = v37 + v52[6];
                v56 = (int *)type metadata accessor for WeatherData(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, (uint64_t)v56))
                {
                  swift_bridgeObjectRelease();
                  v57 = v55 + v56[5];
                  v58 = type metadata accessor for Locale(0);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58))
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
                  v59 = v55 + v56[6];
                  v60 = type metadata accessor for WeatherDataModel(0);
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
                  v61 = v55 + v56[7];
                  v62 = sub_1000BA294(&qword_100BC3348);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
                  {
                    v63 = type metadata accessor for Date(0);
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v61, v63);
                  }
                  v64 = v55 + v56[8];
                  type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  v65 = swift_getEnumCaseMultiPayload(v64);
                  if (v65 == 1)
                  {
                    v66 = type metadata accessor for WeatherStatisticsModel(0);
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v64, v66);
                  }
                  else if (!v65)
                  {
                    swift_bridgeObjectRelease();
                  }
                  v67 = v55 + v56[9];
                  v68 = type metadata accessor for WeatherDataOverrides(0);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v67, 1, v68))
                  {
                    v69 = type metadata accessor for Date(0);
                    if (!_s7Weather24LocationCompositionStateOwet_0(v67, 1, v69))
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v67, v69);
                    v70 = v67 + *(int *)(v68 + 20);
                    if (!_s7Weather24LocationCompositionStateOwet_0(v70, 1, v69))
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v70, v69);
                  }
                }
                swift_bridgeObjectRelease();
                v37 += v52[8];
                v41 = type metadata accessor for WeatherMapOverlayKind(0);
LABEL_79:
                v40 = v41;
                v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8);
                v39 = v37;
LABEL_80:
                v38(v39, v40);
              }
              else if (!v51)
              {
                swift_bridgeObjectRelease();
LABEL_63:
                swift_bridgeObjectRelease();
              }
              break;
            default:
              return;
          }
        }
        break;
      default:
        goto LABEL_41;
    }
  }
}

uint64_t *sub_1002AECBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  v6 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a2, 1, v6))
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_1000B2044(*(_QWORD *)a2, v8, v9);
    *a1 = v7;
    a1[1] = v8;
    *((_BYTE *)a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 32);
    a1[3] = *(_QWORD *)(a2 + 24);
    a1[4] = v10;
    v11 = *(int *)(v6 + 24);
    v12 = (char *)a1 + v11;
    v13 = (const void *)(a2 + v11);
    v14 = type metadata accessor for WeatherDescription(0);
    swift_bridgeObjectRetain(v10);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      v15 = sub_1000BA294(&qword_100BC3368);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    v16 = a2 + *(int *)(v6 + 28);
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v17 = (char *)&loc_1002AEE10 + 4 * byte_100990C60[swift_getEnumCaseMultiPayload(v16)];
    __asm { BR              X10 }
  }
  memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1002B0080(char *a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  const void *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  const void *v40;
  uint64_t v41;
  int v42;
  int v43;
  char *v44;
  uint64_t v45;
  char *v46;

  v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = *(_QWORD *)a2;
      v10 = *(_QWORD *)(a2 + 8);
      v11 = *(_BYTE *)(a2 + 16);
      sub_1000B2044(*(_QWORD *)a2, v10, v11);
      *(_QWORD *)a1 = v9;
      *((_QWORD *)a1 + 1) = v10;
      a1[16] = v11;
      *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
      v12 = *(_QWORD *)(a2 + 32);
      *((_QWORD *)a1 + 4) = v12;
      v13 = v6[6];
      v14 = &a1[v13];
      v15 = (const void *)(a2 + v13);
      v16 = type metadata accessor for WeatherDescription(0);
      swift_bridgeObjectRetain(v12);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_1000BA294(&qword_100BC3368);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v31 = a2 + v6[7];
      type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      v32 = (char *)&loc_1002B02C8 + 4 * byte_100990C70[swift_getEnumCaseMultiPayload(v31)];
      __asm { BR              X10 }
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    v18 = *(_QWORD *)a2;
    v19 = *(_QWORD *)(a2 + 8);
    v20 = *(_BYTE *)(a2 + 16);
    sub_1000B2044(*(_QWORD *)a2, v19, v20);
    v21 = *(_QWORD *)a1;
    v22 = *((_QWORD *)a1 + 1);
    *(_QWORD *)a1 = v18;
    *((_QWORD *)a1 + 1) = v19;
    v23 = a1[16];
    a1[16] = v20;
    sub_10006BD8C(v21, v22, v23);
    *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
    v24 = *(_QWORD *)(a2 + 32);
    *((_QWORD *)a1 + 4) = v24;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease();
    v25 = v6[6];
    v26 = &a1[v25];
    v27 = (const void *)(a2 + v25);
    v28 = type metadata accessor for WeatherDescription(0);
    v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
    v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
    if (v29)
    {
      if (!v30)
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
        goto LABEL_16;
      }
    }
    else
    {
      v33 = *(_QWORD *)(v28 - 8);
      if (!v30)
      {
        (*(void (**)(char *, const void *, uint64_t))(v33 + 24))(v26, v27, v28);
LABEL_16:
        if (a1 != (char *)a2)
        {
          v35 = v6[7];
          v36 = a2 + v35;
          sub_10006BD20((uint64_t)&a1[v35], type metadata accessor for ConditionDetailPlatterViewModel.Body);
          type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
          v37 = (char *)&loc_1002B0374 + 4 * byte_100990C80[swift_getEnumCaseMultiPayload(v36)];
          __asm { BR              X10 }
        }
        v38 = v6[8];
        v39 = &a1[v38];
        v40 = (const void *)(a2 + v38);
        v41 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
        v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v41);
        v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41);
        if (v42)
        {
          if (!v43)
          {
            v44 = (char *)&loc_1002B0644 + 4 * word_100990C88[swift_getEnumCaseMultiPayload(v40)];
            __asm { BR              X10 }
          }
        }
        else
        {
          if (!v43)
          {
            if (a1 != (char *)a2)
            {
              sub_10006BD20((uint64_t)v39, type metadata accessor for ConditionDetailPlatterViewModel.Body);
              v46 = (char *)&loc_1002B06D4 + 4 * word_100990C98[swift_getEnumCaseMultiPayload(v40)];
              __asm { BR              X10 }
            }
            goto LABEL_27;
          }
          sub_10006BD20((uint64_t)v39, type metadata accessor for ConditionDetailPlatterViewModel.Body);
        }
        v45 = sub_1000BA294(&qword_100BD3108);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_27:
        a1[v6[9]] = *(_BYTE *)(a2 + v6[9]);
        a1[v6[10]] = *(_BYTE *)(a2 + v6[10]);
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v28);
    }
    v34 = sub_1000BA294(&qword_100BC3368);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_16;
  }
  sub_10006BD20((uint64_t)a1, type metadata accessor for ConditionDetailPlatterViewModel);
LABEL_7:
  memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1002B3374(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  _OWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  _OWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v174;
  uint64_t v175;
  char *__src;
  char *__srca;
  void (*v178)(char *, char *, uint64_t);
  uint64_t v179;
  uint64_t v180;
  void *v181;
  char *v182;
  char *v183;
  void (*v184)(char *, char *, uint64_t);
  int *v185;
  uint64_t v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;
  int *v190;
  _OWORD *v191;
  uint64_t v192;
  uint64_t v193;
  void *__dst;
  int *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  int *__dste;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
    v7 = v6[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for WeatherDescription(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_1000BA294(&qword_100BC3368);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v12 = v6[7];
    v13 = (_OWORD *)((char *)a1 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload(v14))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v13, v14, v10);
        v16 = v13;
        v17 = v15;
        v18 = 0;
        goto LABEL_50;
      case 2u:
        v19 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v13, v14, v19);
        v16 = v13;
        v17 = v15;
        v18 = 2;
        goto LABEL_50;
      case 3u:
        v20 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
        v16 = v13;
        v17 = v15;
        v18 = 3;
        goto LABEL_50;
      case 4u:
        __dst = (void *)v10;
        v21 = v14[1];
        *v13 = *v14;
        v13[1] = v21;
        v22 = type metadata accessor for DetailComponentContainerViewModel(0);
        v23 = *(int *)(v22 + 20);
        v24 = (char *)v13 + v23;
        v25 = (char *)v14 + v23;
        v26 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v25) == 1)
        {
          v181 = (void *)v22;
          v186 = v26;
          v200 = v15;
          *(_OWORD *)v24 = *(_OWORD *)v25;
          v190 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v27 = v190[5];
          v28 = &v24[v27];
          v29 = &v25[v27];
          v30 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
          {
            v31 = sub_1000BA294(&qword_100BD4280);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
            v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
          }
          else
          {
            v46 = v29;
            v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
            v47(v28, v46, v30);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
            v32 = v47;
          }
          v10 = (uint64_t)__dst;
          *(_OWORD *)&v24[v190[6]] = *(_OWORD *)&v25[v190[6]];
          v178 = v32;
          v32(&v24[v190[7]], &v25[v190[7]], v30);
          v48 = v190[8];
          __dstb = &v24[v48];
          v49 = &v25[v48];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v48], 1, v30))
          {
            v50 = sub_1000BA294(&qword_100BD4280);
            memcpy(__dstb, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            v178(__dstb, v49, v30);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v30);
          }
          v22 = (uint64_t)v181;
          v24[v190[9]] = v25[v190[9]];
          swift_storeEnumTagMultiPayload(v24, v186, 1);
          v15 = v200;
        }
        else
        {
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
          v10 = (uint64_t)__dst;
        }
        v56 = *(int *)(v22 + 24);
        v57 = (char *)v13 + v56;
        v58 = (char *)v14 + v56;
        v59 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
        {
          v60 = sub_1000BA294(&qword_100BD3100);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          v61 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v57, v58, v61);
          v62 = sub_1000BA294(&qword_100BC5FE8);
          v57[*(int *)(v62 + 48)] = v58[*(int *)(v62 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
        }
        v16 = v13;
        v17 = v15;
        v18 = 4;
        goto LABEL_50;
      case 6u:
        v33 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v13, v14, v33);
        v16 = v13;
        v17 = v15;
        v18 = 6;
        goto LABEL_50;
      case 7u:
        v34 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v14) == 1)
        {
          v201 = v15;
          *v13 = *v14;
          v35 = type metadata accessor for ConditionDetailMapViewModel(0);
          v36 = *(int *)(v35 + 20);
          v37 = (char *)v13 + v36;
          v38 = (char *)v14 + v36;
          v39 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
          __dsta = (int *)v35;
          v40 = *(int *)(v35 + 24);
          v41 = (_OWORD *)((char *)v13 + v40);
          v42 = (_OWORD *)((char *)v14 + v40);
          v43 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
          {
            v44 = sub_1000BA294(&qword_100BC3460);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
            v45 = __dsta;
          }
          else
          {
            v179 = v34;
            *v41 = *v42;
            v187 = (int *)v43;
            v191 = v41;
            v51 = *(int *)(v43 + 20);
            v52 = (char *)v41 + v51;
            v53 = (char *)v42 + v51;
            v54 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
            {
              v55 = sub_1000BA294(&qword_100BC3340);
              memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
            }
            v63 = v187[6];
            v182 = (char *)v191 + v63;
            v64 = (char *)v42 + v63;
            v65 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v182, v64, v65);
            v66 = v187[7];
            v67 = (char *)v191 + v66;
            v68 = (char *)v42 + v66;
            v69 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
            {
              v70 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            }
            else
            {
              v71 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v67, v68, v71);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
            }
            v72 = v187[8];
            v73 = (char *)v191 + v72;
            v74 = (char *)v42 + v72;
            v75 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v74) == 1)
            {
              v76 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v73, v74, v76);
              swift_storeEnumTagMultiPayload(v73, v75, 1);
            }
            else
            {
              memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            }
            v78 = (uint64_t)v187;
            v77 = (uint64_t)v191;
            v79 = v187[9];
            v183 = (char *)v191 + v79;
            v80 = (uint64_t)v42 + v79;
            v81 = type metadata accessor for WeatherDataOverrides(0);
            __src = (char *)v80;
            v82 = _s7Weather24LocationCompositionStateOwet_0(v80, 1, v81);
            v34 = v179;
            if (v82)
            {
              v83 = sub_1000BA294(&qword_100BC3350);
              memcpy(v183, __src, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
              v45 = __dsta;
            }
            else
            {
              v175 = v81;
              v84 = type metadata accessor for Date(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__src, 1, v84))
              {
                v85 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                v86 = v183;
                memcpy(v183, __src, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
              }
              else
              {
                v86 = v183;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v183, __src, v84);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v84);
              }
              v87 = *(int *)(v81 + 20);
              v174 = &v86[v87];
              v88 = &__src[v87];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__src[v87], 1, v84))
              {
                v89 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v174, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v174, v88, v84);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v84);
              }
              v45 = __dsta;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v175);
              v78 = (uint64_t)v187;
              v77 = (uint64_t)v191;
            }
            _s7Weather24LocationCompositionStateOwst_0(v77, 0, 1, v78);
          }
          *(_OWORD *)((char *)v13 + v45[7]) = *(_OWORD *)((char *)v14 + v45[7]);
          v90 = v45[8];
          v91 = (char *)v13 + v90;
          v92 = (char *)v14 + v90;
          v93 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
          *((_BYTE *)v13 + v45[9]) = *((_BYTE *)v14 + v45[9]);
          swift_storeEnumTagMultiPayload(v13, v34, 1);
          v15 = v201;
        }
        else
        {
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        v16 = v13;
        v17 = v15;
        v18 = 7;
LABEL_50:
        swift_storeEnumTagMultiPayload(v16, v17, v18);
        break;
      default:
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
    v94 = v6[8];
    v95 = (_OWORD *)((char *)a1 + v94);
    v96 = (_OWORD *)((char *)a2 + v94);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v94, 1, v15))
    {
      v97 = sub_1000BA294(&qword_100BD3108);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v96))
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v95, v96, v10);
          v98 = v95;
          v99 = v15;
          v100 = 0;
          goto LABEL_97;
        case 2u:
          v101 = type metadata accessor for AttributedString(0);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v95, v96, v101);
          v98 = v95;
          v99 = v15;
          v100 = 2;
          goto LABEL_97;
        case 3u:
          v102 = sub_1000BA294(&qword_100BD30F8);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v95, v96, v102);
          v98 = v95;
          v99 = v15;
          v100 = 3;
          goto LABEL_97;
        case 4u:
          v103 = v96[1];
          *v95 = *v96;
          v95[1] = v103;
          v104 = type metadata accessor for DetailComponentContainerViewModel(0);
          v105 = *(int *)(v104 + 20);
          v106 = (char *)v95 + v105;
          v107 = (char *)v96 + v105;
          v108 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload(v107) == 1)
          {
            v188 = v104;
            v192 = v108;
            v202 = v15;
            *(_OWORD *)v106 = *(_OWORD *)v107;
            v109 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            v110 = v109[5];
            __dstc = &v106[v110];
            v111 = &v107[v110];
            v112 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
            {
              v113 = sub_1000BA294(&qword_100BD4280);
              memcpy(__dstc, v111, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
              v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32);
            }
            else
            {
              v127 = v111;
              v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32);
              v114(__dstc, v127, v112);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v112);
            }
            *(_OWORD *)&v106[v109[6]] = *(_OWORD *)&v107[v109[6]];
            v184 = v114;
            v114(&v106[v109[7]], &v107[v109[7]], v112);
            v128 = v109[8];
            __dstd = &v106[v128];
            v129 = &v107[v128];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v107[v128], 1, v112))
            {
              v130 = sub_1000BA294(&qword_100BD4280);
              memcpy(__dstd, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
            }
            else
            {
              v184(__dstd, v129, v112);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v112);
            }
            v104 = v188;
            v106[v109[9]] = v107[v109[9]];
            swift_storeEnumTagMultiPayload(v106, v192, 1);
            v15 = v202;
          }
          else
          {
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          v136 = *(int *)(v104 + 24);
          v137 = (char *)v95 + v136;
          v138 = (char *)v96 + v136;
          v139 = type metadata accessor for DetailComponentAction(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v138, 1, v139))
          {
            v140 = sub_1000BA294(&qword_100BD3100);
            memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
          }
          else
          {
            v141 = type metadata accessor for URL(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v137, v138, v141);
            v142 = sub_1000BA294(&qword_100BC5FE8);
            v137[*(int *)(v142 + 48)] = v138[*(int *)(v142 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v137, 0, 1, v139);
          }
          v98 = v95;
          v99 = v15;
          v100 = 4;
          goto LABEL_97;
        case 6u:
          v115 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v95, v96, v115);
          v98 = v95;
          v99 = v15;
          v100 = 6;
          goto LABEL_97;
        case 7u:
          v116 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
          if (swift_getEnumCaseMultiPayload(v96) == 1)
          {
            v203 = v15;
            *v95 = *v96;
            v117 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
            v118 = v117[5];
            v119 = (char *)v95 + v118;
            v120 = (char *)v96 + v118;
            v121 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
            v122 = v117[6];
            v123 = (_OWORD *)((char *)v95 + v122);
            v124 = (_OWORD *)((char *)v96 + v122);
            v125 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
            {
              v126 = sub_1000BA294(&qword_100BC3460);
              memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            }
            else
            {
              v189 = v116;
              v193 = (uint64_t)v123;
              *v123 = *v124;
              __dste = (int *)v125;
              v131 = *(int *)(v125 + 20);
              v132 = (char *)v123 + v131;
              v133 = (char *)v124 + v131;
              v134 = type metadata accessor for Locale(0);
              v185 = v117;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
              {
                v135 = sub_1000BA294(&qword_100BC3340);
                memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
              }
              v143 = __dste[6];
              v144 = v193 + v143;
              v145 = (char *)v124 + v143;
              v146 = type metadata accessor for WeatherDataModel(0);
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
              v147 = __dste[7];
              v148 = (void *)(v193 + v147);
              v149 = (char *)v124 + v147;
              v150 = sub_1000BA294(&qword_100BC3348);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
              {
                v151 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
              }
              else
              {
                v152 = type metadata accessor for Date(0);
                (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v148, v149, v152);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v150);
              }
              v153 = __dste[8];
              v154 = (void *)(v193 + v153);
              v155 = (char *)v124 + v153;
              v156 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              v117 = v185;
              if (swift_getEnumCaseMultiPayload(v155) == 1)
              {
                v157 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v154, v155, v157);
                swift_storeEnumTagMultiPayload(v154, v156, 1);
              }
              else
              {
                memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
              }
              v158 = __dste[9];
              v159 = (char *)(v193 + v158);
              v160 = (char *)v124 + v158;
              v161 = type metadata accessor for WeatherDataOverrides(0);
              v116 = v189;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v161))
              {
                v162 = sub_1000BA294(&qword_100BC3350);
                memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
              }
              else
              {
                v180 = v161;
                v163 = type metadata accessor for Date(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v163))
                {
                  v164 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v159, v160, v163);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v163);
                }
                v165 = *(int *)(v180 + 20);
                __srca = v159;
                v166 = &v159[v165];
                v167 = &v160[v165];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v160[v165], 1, v163))
                {
                  v168 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v166, v167, v163);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v166, 0, 1, v163);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srca, 0, 1, v180);
                v116 = v189;
              }
              _s7Weather24LocationCompositionStateOwst_0(v193, 0, 1, (uint64_t)__dste);
            }
            *(_OWORD *)((char *)v95 + v117[7]) = *(_OWORD *)((char *)v96 + v117[7]);
            v169 = v117[8];
            v170 = (char *)v95 + v169;
            v171 = (char *)v96 + v169;
            v172 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v170, v171, v172);
            *((_BYTE *)v95 + v117[9]) = *((_BYTE *)v96 + v117[9]);
            swift_storeEnumTagMultiPayload(v95, v116, 1);
            v15 = v203;
          }
          else
          {
            memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          }
          v98 = v95;
          v99 = v15;
          v100 = 7;
LABEL_97:
          swift_storeEnumTagMultiPayload(v98, v99, v100);
          break;
        default:
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v15);
    }
    *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_1002B44F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  _OWORD *v180;
  _OWORD *v181;
  uint64_t v182;
  _OWORD *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  _OWORD *v208;
  _OWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  _OWORD *v265;
  _OWORD *v266;
  uint64_t v267;
  int v268;
  int v269;
  _OWORD *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  _OWORD *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  __int128 v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  void (*v290)(char *, char *, uint64_t);
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  _OWORD *v299;
  _OWORD *v300;
  uint64_t v301;
  uint64_t v302;
  int *v303;
  uint64_t v304;
  uint64_t v305;
  __int128 v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  void (*v317)(char *, char *, uint64_t);
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  _OWORD *v326;
  _OWORD *v327;
  uint64_t v328;
  uint64_t v329;
  int *v330;
  char *v331;
  void (*v332)(char *, char *, uint64_t);
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  char *v352;
  void (*v353)(char *, char *, uint64_t);
  uint64_t v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  char *v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  char *v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  char *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  char *v422;
  char *v423;
  uint64_t v424;
  char *v426;
  _QWORD *v427;
  void (*v428)(char *, char *, uint64_t);
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  void *__src;
  char *__srca;
  char *__srcb;
  _QWORD *__srcc;
  char *__srcd;
  int *v437;
  void (*v438)(char *, char *, uint64_t);
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  char *v442;
  char *v443;
  uint64_t v444;
  uint64_t v445;
  void *v446;
  char *v447;
  char *v448;
  char *v449;
  char *v450;
  void *v451;
  int *v452;
  void (*v453)(char *, char *, uint64_t);
  void *v454;
  void (*v455)(char *, char *, uint64_t);
  void *v456;
  uint64_t v457;
  int *v458;
  int *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  _OWORD *v464;
  _OWORD *v465;
  uint64_t v466;
  uint64_t v467;
  int *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  void (*__dstf)(char *, char *, uint64_t);
  char *__dstg;
  void *__dsth;
  void *__dsti;
  char *__dstj;
  char *__dstk;
  void *v480;
  int *v481;
  void *v482;
  void *v483;
  char *v484;
  int *v485;
  int *v486;
  char *v487;
  char *v488;
  char *v489;
  int *v490;
  char *v491;
  int *v492;
  uint64_t v493;
  uint64_t v494;
  _OWORD *v495;
  int *v496;
  uint64_t v497;
  uint64_t v498;
  int *v499;
  int *v500;
  int *v501;
  int *v502;

  v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_10006BD20(a1, type metadata accessor for ConditionDetailPlatterViewModel);
      goto LABEL_7;
    }
    v14 = *(_BYTE *)(a2 + 16);
    v15 = *(_QWORD *)a1;
    v16 = *(_QWORD *)(a1 + 8);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v17 = *(_BYTE *)(a1 + 16);
    *(_BYTE *)(a1 + 16) = v14;
    sub_10006BD8C(v15, v16, v17);
    v18 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v18;
    swift_bridgeObjectRelease();
    v19 = v6[6];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    v22 = type metadata accessor for WeatherDescription(0);
    v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22);
    v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
        goto LABEL_17;
      }
    }
    else
    {
      v32 = *(_QWORD *)(v22 - 8);
      if (!v24)
      {
        (*(void (**)(void *, const void *, uint64_t))(v32 + 40))(v20, v21, v22);
LABEL_17:
        if (a1 != a2)
        {
          v34 = v6[7];
          v35 = (_OWORD *)(a1 + v34);
          v36 = (_OWORD *)(a2 + v34);
          sub_10006BD20(a1 + v34, type metadata accessor for ConditionDetailPlatterViewModel.Body);
          v37 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
          switch(swift_getEnumCaseMultiPayload(v36))
          {
            case 0u:
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v35, v36, v22);
              v38 = v35;
              v39 = v37;
              v40 = 0;
              goto LABEL_147;
            case 2u:
              v68 = type metadata accessor for AttributedString(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v35, v36, v68);
              v38 = v35;
              v39 = v37;
              v40 = 2;
              goto LABEL_147;
            case 3u:
              v69 = sub_1000BA294(&qword_100BD30F8);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v35, v36, v69);
              v38 = v35;
              v39 = v37;
              v40 = 3;
              goto LABEL_147;
            case 4u:
              v70 = v36[1];
              *v35 = *v36;
              v35[1] = v70;
              v71 = type metadata accessor for DetailComponentContainerViewModel(0);
              v72 = *(int *)(v71 + 20);
              v73 = (char *)v35 + v72;
              v495 = v36;
              v74 = (char *)v36 + v72;
              v75 = type metadata accessor for NewsArticleComponentViewModel(0);
              if (swift_getEnumCaseMultiPayload(v74) == 1)
              {
                __src = (void *)v71;
                v482 = (void *)v37;
                *(_OWORD *)v73 = *(_OWORD *)v74;
                v437 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                v76 = v437[5];
                __dsta = &v73[v76];
                v77 = &v74[v76];
                v78 = type metadata accessor for URL(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78))
                {
                  v79 = sub_1000BA294(&qword_100BD4280);
                  memcpy(__dsta, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
                  v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32);
                }
                else
                {
                  v111 = v77;
                  v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32);
                  v80(__dsta, v111, v78);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v78);
                }
                *(_OWORD *)&v73[v437[6]] = *(_OWORD *)&v74[v437[6]];
                v428 = v80;
                v80(&v73[v437[7]], &v74[v437[7]], v78);
                v112 = v437[8];
                __dstc = &v73[v112];
                v113 = &v74[v112];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v74[v112], 1, v78))
                {
                  v114 = sub_1000BA294(&qword_100BD4280);
                  memcpy(__dstc, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
                }
                else
                {
                  v428(__dstc, v113, v78);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v78);
                }
                v71 = (uint64_t)__src;
                v73[v437[9]] = v74[v437[9]];
                swift_storeEnumTagMultiPayload(v73, v75, 1);
                v37 = (uint64_t)v482;
              }
              else
              {
                memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
              }
              v128 = *(int *)(v71 + 24);
              v129 = (char *)v35 + v128;
              v130 = (char *)v495 + v128;
              v131 = type metadata accessor for DetailComponentAction(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
              {
                v132 = sub_1000BA294(&qword_100BD3100);
                memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
              }
              else
              {
                v133 = type metadata accessor for URL(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v129, v130, v133);
                v134 = sub_1000BA294(&qword_100BC5FE8);
                v129[*(int *)(v134 + 48)] = v130[*(int *)(v134 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
              }
              v38 = v35;
              v39 = v37;
              v40 = 4;
              goto LABEL_147;
            case 6u:
              v81 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v35, v36, v81);
              v38 = v35;
              v39 = v37;
              v40 = 6;
              goto LABEL_147;
            case 7u:
              v82 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
              if (swift_getEnumCaseMultiPayload(v36) == 1)
              {
                v483 = (void *)v37;
                *v35 = *v36;
                v83 = type metadata accessor for ConditionDetailMapViewModel(0);
                v84 = *(int *)(v83 + 20);
                v85 = (char *)v35 + v84;
                v86 = (char *)v36 + v84;
                v87 = type metadata accessor for Location(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
                v496 = (int *)v83;
                v88 = *(int *)(v83 + 24);
                v89 = (_OWORD *)((char *)v35 + v88);
                v90 = (_OWORD *)((char *)v36 + v88);
                v91 = type metadata accessor for WeatherData(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91))
                {
                  v92 = sub_1000BA294(&qword_100BC3460);
                  memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
                  v93 = v496;
                }
                else
                {
                  v440 = v82;
                  *v89 = *v90;
                  v459 = (int *)v91;
                  __dstd = (char *)v89;
                  v115 = *(int *)(v91 + 20);
                  v116 = (char *)v89 + v115;
                  v117 = (char *)v90 + v115;
                  v118 = type metadata accessor for Locale(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
                  {
                    v119 = sub_1000BA294(&qword_100BC3340);
                    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
                  }
                  v151 = v459[6];
                  v449 = &__dstd[v151];
                  v152 = (char *)v90 + v151;
                  v153 = type metadata accessor for WeatherDataModel(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v449, v152, v153);
                  v154 = v459[7];
                  v155 = &__dstd[v154];
                  v156 = (char *)v90 + v154;
                  v157 = sub_1000BA294(&qword_100BC3348);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
                  {
                    v158 = type metadata accessor for WeatherData.CachingState(0);
                    memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
                  }
                  else
                  {
                    v162 = type metadata accessor for Date(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v155, v156, v162);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v157);
                  }
                  v163 = v459[8];
                  v164 = &__dstd[v163];
                  v165 = (char *)v90 + v163;
                  v166 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  if (swift_getEnumCaseMultiPayload(v165) == 1)
                  {
                    v167 = type metadata accessor for WeatherStatisticsModel(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(v164, v165, v167);
                    swift_storeEnumTagMultiPayload(v164, v166, 1);
                  }
                  else
                  {
                    memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
                  }
                  v169 = (uint64_t)v459;
                  v168 = (uint64_t)__dstd;
                  v170 = v459[9];
                  v450 = &__dstd[v170];
                  v171 = (uint64_t)v90 + v170;
                  v172 = type metadata accessor for WeatherDataOverrides(0);
                  __srcb = (char *)v171;
                  v173 = _s7Weather24LocationCompositionStateOwet_0(v171, 1, v172);
                  v82 = v440;
                  if (v173)
                  {
                    v174 = sub_1000BA294(&qword_100BC3350);
                    memcpy(v450, __srcb, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
                    v93 = v496;
                  }
                  else
                  {
                    v430 = v172;
                    v427 = (_QWORD *)type metadata accessor for Date(0);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srcb, 1, (uint64_t)v427))
                    {
                      v228 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                      v229 = v450;
                      memcpy(v450, __srcb, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
                    }
                    else
                    {
                      v229 = v450;
                      (*(void (**)(char *, char *, _QWORD *))(*(v427 - 1) + 32))(v450, __srcb, v427);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v450, 0, 1, (uint64_t)v427);
                    }
                    v252 = *(int *)(v172 + 20);
                    v253 = &v229[v252];
                    v254 = &__srcb[v252];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srcb[v252], 1, (uint64_t)v427))
                    {
                      v255 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                      memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v255 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, _QWORD *))(*(v427 - 1) + 32))(v253, v254, v427);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v253, 0, 1, (uint64_t)v427);
                    }
                    v93 = v496;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v450, 0, 1, v430);
                    v169 = (uint64_t)v459;
                    v168 = (uint64_t)__dstd;
                  }
                  _s7Weather24LocationCompositionStateOwst_0(v168, 0, 1, v169);
                }
                *(_OWORD *)((char *)v35 + v93[7]) = *(_OWORD *)((char *)v36 + v93[7]);
                v260 = v93[8];
                v261 = (char *)v35 + v260;
                v262 = (char *)v36 + v260;
                v263 = type metadata accessor for WeatherMapOverlayKind(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v261, v262, v263);
                *((_BYTE *)v35 + v93[9]) = *((_BYTE *)v36 + v93[9]);
                swift_storeEnumTagMultiPayload(v35, v82, 1);
                v37 = (uint64_t)v483;
              }
              else
              {
                memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
              }
              v38 = v35;
              v39 = v37;
              v40 = 7;
LABEL_147:
              swift_storeEnumTagMultiPayload(v38, v39, v40);
              break;
            default:
              memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
              break;
          }
        }
        v264 = v6[8];
        v265 = (_OWORD *)(a1 + v264);
        v266 = (_OWORD *)(a2 + v264);
        v267 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
        v268 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v265, 1, v267);
        v269 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v266, 1, v267);
        if (v268)
        {
          if (!v269)
          {
            switch(swift_getEnumCaseMultiPayload(v266))
            {
              case 0u:
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v265, v266, v22);
                v270 = v265;
                v271 = v267;
                v272 = 0;
                goto LABEL_241;
              case 2u:
                v277 = type metadata accessor for AttributedString(0);
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v277 - 8) + 32))(v265, v266, v277);
                v270 = v265;
                v271 = v267;
                v272 = 2;
                goto LABEL_241;
              case 3u:
                v278 = sub_1000BA294(&qword_100BD30F8);
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v278 - 8) + 32))(v265, v266, v278);
                v270 = v265;
                v271 = v267;
                v272 = 3;
                goto LABEL_241;
              case 4u:
                v279 = v266[1];
                *v265 = *v266;
                v265[1] = v279;
                v280 = type metadata accessor for DetailComponentContainerViewModel(0);
                v281 = *(int *)(v280 + 20);
                v282 = (char *)v265 + v281;
                v283 = (char *)v266 + v281;
                v284 = type metadata accessor for NewsArticleComponentViewModel(0);
                if (swift_getEnumCaseMultiPayload(v283) == 1)
                {
                  v462 = v280;
                  __dsth = (void *)v284;
                  *(_OWORD *)v282 = *(_OWORD *)v283;
                  v285 = type metadata accessor for NewsArticleComponentContentViewModel(0);
                  v286 = *(int *)(v285 + 20);
                  v487 = &v282[v286];
                  v499 = (int *)v285;
                  v287 = &v283[v286];
                  v288 = type metadata accessor for URL(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v287, 1, v288))
                  {
                    v289 = sub_1000BA294(&qword_100BD4280);
                    memcpy(v487, v287, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
                    v290 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 32);
                  }
                  else
                  {
                    v331 = v287;
                    v332 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 32);
                    v332(v487, v331, v288);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v487, 0, 1, v288);
                    v290 = v332;
                  }
                  *(_OWORD *)&v282[v499[6]] = *(_OWORD *)&v283[v499[6]];
                  v453 = v290;
                  v290(&v282[v499[7]], &v283[v499[7]], v288);
                  v333 = v499[8];
                  v489 = &v282[v333];
                  v334 = &v283[v333];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v283[v333], 1, v288))
                  {
                    v335 = sub_1000BA294(&qword_100BD4280);
                    memcpy(v489, v334, *(_QWORD *)(*(_QWORD *)(v335 - 8) + 64));
                  }
                  else
                  {
                    v453(v489, v334, v288);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v489, 0, 1, v288);
                  }
                  v280 = v462;
                  v282[v499[9]] = v283[v499[9]];
                  swift_storeEnumTagMultiPayload(v282, __dsth, 1);
                }
                else
                {
                  memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
                }
                v341 = *(int *)(v280 + 24);
                v342 = (char *)v265 + v341;
                v343 = (char *)v266 + v341;
                v344 = type metadata accessor for DetailComponentAction(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v343, 1, v344))
                {
                  v345 = sub_1000BA294(&qword_100BD3100);
                  memcpy(v342, v343, *(_QWORD *)(*(_QWORD *)(v345 - 8) + 64));
                }
                else
                {
                  v346 = type metadata accessor for URL(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 32))(v342, v343, v346);
                  v347 = sub_1000BA294(&qword_100BC5FE8);
                  v342[*(int *)(v347 + 48)] = v343[*(int *)(v347 + 48)];
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v342, 0, 1, v344);
                }
                v270 = v265;
                v271 = v267;
                v272 = 4;
                goto LABEL_241;
              case 6u:
                v291 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v265, v266, v291);
                v270 = v265;
                v271 = v267;
                v272 = 6;
                goto LABEL_241;
              case 7u:
                v292 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
                if (swift_getEnumCaseMultiPayload(v266) == 1)
                {
                  *v265 = *v266;
                  v293 = type metadata accessor for ConditionDetailMapViewModel(0);
                  v294 = *(int *)(v293 + 20);
                  v295 = (char *)v265 + v294;
                  v296 = (char *)v266 + v294;
                  v297 = type metadata accessor for Location(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v295, v296, v297);
                  v500 = (int *)v293;
                  v298 = *(int *)(v293 + 24);
                  v299 = (_OWORD *)((char *)v265 + v298);
                  v300 = (_OWORD *)((char *)v266 + v298);
                  v301 = type metadata accessor for WeatherData(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v300, 1, v301))
                  {
                    v302 = sub_1000BA294(&qword_100BC3460);
                    memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
                    v303 = v500;
                  }
                  else
                  {
                    v454 = (void *)v292;
                    *v299 = *v300;
                    __dstj = (char *)v299;
                    v490 = (int *)v301;
                    v336 = *(int *)(v301 + 20);
                    v337 = (char *)v299 + v336;
                    v338 = (char *)v300 + v336;
                    v339 = type metadata accessor for Locale(0);
                    v464 = v300;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v338, 1, v339))
                    {
                      v340 = sub_1000BA294(&qword_100BC3340);
                      memcpy(v337, v338, *(_QWORD *)(*(_QWORD *)(v340 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v339 - 8) + 32))(v337, v338, v339);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v337, 0, 1, v339);
                    }
                    v362 = v490[6];
                    v442 = &__dstj[v362];
                    v363 = (char *)v300 + v362;
                    v364 = type metadata accessor for WeatherDataModel(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v364 - 8) + 32))(v442, v363, v364);
                    v365 = v490[7];
                    v366 = &__dstj[v365];
                    v367 = (char *)v464 + v365;
                    v368 = sub_1000BA294(&qword_100BC3348);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v367, 1, v368))
                    {
                      v369 = type metadata accessor for WeatherData.CachingState(0);
                      memcpy(v366, v367, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
                    }
                    else
                    {
                      v377 = type metadata accessor for Date(0);
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v377 - 8) + 32))(v366, v367, v377);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v366, 0, 1, v368);
                    }
                    v378 = v490[8];
                    v379 = &__dstj[v378];
                    v380 = (char *)v464 + v378;
                    v381 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                    if (swift_getEnumCaseMultiPayload(v380) == 1)
                    {
                      v382 = type metadata accessor for WeatherStatisticsModel(0);
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 32))(v379, v380, v382);
                      swift_storeEnumTagMultiPayload(v379, v381, 1);
                    }
                    else
                    {
                      memcpy(v379, v380, *(_QWORD *)(*(_QWORD *)(v381 - 8) + 64));
                    }
                    v383 = v490[9];
                    v384 = &__dstj[v383];
                    v385 = (char *)v464 + v383;
                    v386 = type metadata accessor for WeatherDataOverrides(0);
                    v292 = (uint64_t)v454;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v386))
                    {
                      v387 = sub_1000BA294(&qword_100BC3350);
                      memcpy(v384, v385, *(_QWORD *)(*(_QWORD *)(v387 - 8) + 64));
                      v303 = v500;
                    }
                    else
                    {
                      v466 = v386;
                      v388 = type metadata accessor for Date(0);
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v388))
                      {
                        v389 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                        memcpy(v384, v385, *(_QWORD *)(*(_QWORD *)(v389 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v388 - 8) + 32))(v384, v385, v388);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v388);
                      }
                      v398 = *(int *)(v466 + 20);
                      v444 = (uint64_t)v384;
                      v399 = &v384[v398];
                      v400 = &v385[v398];
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v385[v398], 1, v388))
                      {
                        v401 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                        memcpy(v399, v400, *(_QWORD *)(*(_QWORD *)(v401 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v388 - 8) + 32))(v399, v400, v388);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v399, 0, 1, v388);
                      }
                      v303 = v500;
                      _s7Weather24LocationCompositionStateOwst_0(v444, 0, 1, v466);
                      v292 = (uint64_t)v454;
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstj, 0, 1, (uint64_t)v490);
                  }
                  *(_OWORD *)((char *)v265 + v303[7]) = *(_OWORD *)((char *)v266 + v303[7]);
                  v412 = v303[8];
                  v413 = (char *)v265 + v412;
                  v414 = (char *)v266 + v412;
                  v415 = type metadata accessor for WeatherMapOverlayKind(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v415 - 8) + 32))(v413, v414, v415);
                  *((_BYTE *)v265 + v303[9]) = *((_BYTE *)v266 + v303[9]);
                  swift_storeEnumTagMultiPayload(v265, v292, 1);
                }
                else
                {
                  memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v292 - 8) + 64));
                }
                v270 = v265;
                v271 = v267;
                v272 = 7;
LABEL_241:
                swift_storeEnumTagMultiPayload(v270, v271, v272);
                break;
              default:
                memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
                break;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v265, 0, 1, v267);
LABEL_254:
            *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
            *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
            return a1;
          }
        }
        else
        {
          if (!v269)
          {
            if (a1 != a2)
            {
              sub_10006BD20((uint64_t)v265, type metadata accessor for ConditionDetailPlatterViewModel.Body);
              switch(swift_getEnumCaseMultiPayload(v266))
              {
                case 0u:
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v265, v266, v22);
                  v274 = v265;
                  v275 = v267;
                  v276 = 0;
                  break;
                case 2u:
                  v304 = type metadata accessor for AttributedString(0);
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v265, v266, v304);
                  v274 = v265;
                  v275 = v267;
                  v276 = 2;
                  break;
                case 3u:
                  v305 = sub_1000BA294(&qword_100BD30F8);
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v265, v266, v305);
                  v274 = v265;
                  v275 = v267;
                  v276 = 3;
                  break;
                case 4u:
                  v306 = v266[1];
                  *v265 = *v266;
                  v265[1] = v306;
                  v307 = type metadata accessor for DetailComponentContainerViewModel(0);
                  v308 = *(int *)(v307 + 20);
                  v309 = (char *)v265 + v308;
                  v310 = (char *)v266 + v308;
                  v311 = type metadata accessor for NewsArticleComponentViewModel(0);
                  if (swift_getEnumCaseMultiPayload(v310) == 1)
                  {
                    v463 = v307;
                    __dsti = (void *)v311;
                    *(_OWORD *)v309 = *(_OWORD *)v310;
                    v312 = type metadata accessor for NewsArticleComponentContentViewModel(0);
                    v313 = *(int *)(v312 + 20);
                    v488 = &v309[v313];
                    v501 = (int *)v312;
                    v314 = &v310[v313];
                    v315 = type metadata accessor for URL(0);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v314, 1, v315))
                    {
                      v316 = sub_1000BA294(&qword_100BD4280);
                      memcpy(v488, v314, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
                      v317 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 32);
                    }
                    else
                    {
                      v352 = v314;
                      v353 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 32);
                      v353(v488, v352, v315);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v488, 0, 1, v315);
                      v317 = v353;
                    }
                    *(_OWORD *)&v309[v501[6]] = *(_OWORD *)&v310[v501[6]];
                    v455 = v317;
                    v317(&v309[v501[7]], &v310[v501[7]], v315);
                    v354 = v501[8];
                    v491 = &v309[v354];
                    v355 = &v310[v354];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v310[v354], 1, v315))
                    {
                      v356 = sub_1000BA294(&qword_100BD4280);
                      memcpy(v491, v355, *(_QWORD *)(*(_QWORD *)(v356 - 8) + 64));
                    }
                    else
                    {
                      v455(v491, v355, v315);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v491, 0, 1, v315);
                    }
                    v307 = v463;
                    v309[v501[9]] = v310[v501[9]];
                    swift_storeEnumTagMultiPayload(v309, __dsti, 1);
                  }
                  else
                  {
                    memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
                  }
                  v370 = *(int *)(v307 + 24);
                  v371 = (char *)v265 + v370;
                  v372 = (char *)v266 + v370;
                  v373 = type metadata accessor for DetailComponentAction(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v372, 1, v373))
                  {
                    v374 = sub_1000BA294(&qword_100BD3100);
                    memcpy(v371, v372, *(_QWORD *)(*(_QWORD *)(v374 - 8) + 64));
                  }
                  else
                  {
                    v375 = type metadata accessor for URL(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v375 - 8) + 32))(v371, v372, v375);
                    v376 = sub_1000BA294(&qword_100BC5FE8);
                    v371[*(int *)(v376 + 48)] = v372[*(int *)(v376 + 48)];
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v371, 0, 1, v373);
                  }
                  v274 = v265;
                  v275 = v267;
                  v276 = 4;
                  break;
                case 6u:
                  v318 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v318 - 8) + 32))(v265, v266, v318);
                  v274 = v265;
                  v275 = v267;
                  v276 = 6;
                  break;
                case 7u:
                  v319 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
                  if (swift_getEnumCaseMultiPayload(v266) == 1)
                  {
                    *v265 = *v266;
                    v320 = type metadata accessor for ConditionDetailMapViewModel(0);
                    v321 = *(int *)(v320 + 20);
                    v322 = (char *)v265 + v321;
                    v323 = (char *)v266 + v321;
                    v324 = type metadata accessor for Location(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v324 - 8) + 32))(v322, v323, v324);
                    v502 = (int *)v320;
                    v325 = *(int *)(v320 + 24);
                    v326 = (_OWORD *)((char *)v265 + v325);
                    v327 = (_OWORD *)((char *)v266 + v325);
                    v328 = type metadata accessor for WeatherData(0);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v327, 1, v328))
                    {
                      v329 = sub_1000BA294(&qword_100BC3460);
                      memcpy(v326, v327, *(_QWORD *)(*(_QWORD *)(v329 - 8) + 64));
                      v330 = v502;
                    }
                    else
                    {
                      v456 = (void *)v319;
                      *v326 = *v327;
                      __dstk = (char *)v326;
                      v492 = (int *)v328;
                      v357 = *(int *)(v328 + 20);
                      v358 = (char *)v326 + v357;
                      v359 = (char *)v327 + v357;
                      v360 = type metadata accessor for Locale(0);
                      v465 = v327;
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v359, 1, v360))
                      {
                        v361 = sub_1000BA294(&qword_100BC3340);
                        memcpy(v358, v359, *(_QWORD *)(*(_QWORD *)(v361 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v360 - 8) + 32))(v358, v359, v360);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v358, 0, 1, v360);
                      }
                      v390 = v492[6];
                      v443 = &__dstk[v390];
                      v391 = (char *)v327 + v390;
                      v392 = type metadata accessor for WeatherDataModel(0);
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 32))(v443, v391, v392);
                      v393 = v492[7];
                      v394 = &__dstk[v393];
                      v395 = (char *)v465 + v393;
                      v396 = sub_1000BA294(&qword_100BC3348);
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v395, 1, v396))
                      {
                        v397 = type metadata accessor for WeatherData.CachingState(0);
                        memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
                      }
                      else
                      {
                        v402 = type metadata accessor for Date(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v402 - 8) + 32))(v394, v395, v402);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v394, 0, 1, v396);
                      }
                      v403 = v492[8];
                      v404 = &__dstk[v403];
                      v405 = (char *)v465 + v403;
                      v406 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                      if (swift_getEnumCaseMultiPayload(v405) == 1)
                      {
                        v407 = type metadata accessor for WeatherStatisticsModel(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v407 - 8) + 32))(v404, v405, v407);
                        swift_storeEnumTagMultiPayload(v404, v406, 1);
                      }
                      else
                      {
                        memcpy(v404, v405, *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64));
                      }
                      v408 = v492[9];
                      v409 = &__dstk[v408];
                      v410 = (char *)v465 + v408;
                      v467 = type metadata accessor for WeatherDataOverrides(0);
                      v319 = (uint64_t)v456;
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v410, 1, v467))
                      {
                        v411 = sub_1000BA294(&qword_100BC3350);
                        memcpy(v409, v410, *(_QWORD *)(*(_QWORD *)(v411 - 8) + 64));
                        v330 = v502;
                      }
                      else
                      {
                        v445 = type metadata accessor for Date(0);
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v410, 1, v445))
                        {
                          v416 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                          memcpy(v409, v410, *(_QWORD *)(*(_QWORD *)(v416 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v445 - 8) + 32))(v409, v410, v445);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v409, 0, 1, v445);
                        }
                        v417 = *(int *)(v467 + 20);
                        __srcd = v409;
                        v418 = &v409[v417];
                        v419 = &v410[v417];
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v410[v417], 1, v445))
                        {
                          v420 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                          memcpy(v418, v419, *(_QWORD *)(*(_QWORD *)(v420 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v445 - 8) + 32))(v418, v419, v445);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v418, 0, 1, v445);
                        }
                        v330 = v502;
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srcd, 0, 1, v467);
                        v319 = (uint64_t)v456;
                      }
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstk, 0, 1, (uint64_t)v492);
                    }
                    *(_OWORD *)((char *)v265 + v330[7]) = *(_OWORD *)((char *)v266 + v330[7]);
                    v421 = v330[8];
                    v422 = (char *)v265 + v421;
                    v423 = (char *)v266 + v421;
                    v424 = type metadata accessor for WeatherMapOverlayKind(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v424 - 8) + 32))(v422, v423, v424);
                    *((_BYTE *)v265 + v330[9]) = *((_BYTE *)v266 + v330[9]);
                    swift_storeEnumTagMultiPayload(v265, v319, 1);
                  }
                  else
                  {
                    memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
                  }
                  v274 = v265;
                  v275 = v267;
                  v276 = 7;
                  break;
                default:
                  v273 = *(_QWORD *)(v267 - 8);
                  goto LABEL_155;
              }
              swift_storeEnumTagMultiPayload(v274, v275, v276);
            }
            goto LABEL_254;
          }
          sub_10006BD20((uint64_t)v265, type metadata accessor for ConditionDetailPlatterViewModel.Body);
        }
        v273 = *(_QWORD *)(sub_1000BA294(&qword_100BD3108) - 8);
LABEL_155:
        memcpy(v265, v266, *(_QWORD *)(v273 + 64));
        goto LABEL_254;
      }
      (*(void (**)(void *, uint64_t))(v32 + 8))(v20, v22);
    }
    v33 = sub_1000BA294(&qword_100BC3368);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v9 = v6[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for WeatherDescription(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    v13 = sub_1000BA294(&qword_100BC3368);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  v25 = v6[7];
  v26 = (_OWORD *)(a1 + v25);
  v27 = (_OWORD *)(a2 + v25);
  v28 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v27))
  {
    case 0u:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v26, v27, v12);
      v29 = v26;
      v30 = v28;
      v31 = 0;
      goto LABEL_95;
    case 2u:
      v41 = type metadata accessor for AttributedString(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v26, v27, v41);
      v29 = v26;
      v30 = v28;
      v31 = 2;
      goto LABEL_95;
    case 3u:
      v42 = sub_1000BA294(&qword_100BD30F8);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v26, v27, v42);
      v29 = v26;
      v30 = v28;
      v31 = 3;
      goto LABEL_95;
    case 4u:
      v480 = (void *)v12;
      v43 = v27[1];
      *v26 = *v27;
      v26[1] = v43;
      v44 = type metadata accessor for DetailComponentContainerViewModel(0);
      v45 = *(int *)(v44 + 20);
      v46 = (char *)v26 + v45;
      v47 = (char *)v27 + v45;
      v48 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v47) == 1)
      {
        v446 = (void *)v44;
        v457 = v48;
        v493 = v28;
        *(_OWORD *)v46 = *(_OWORD *)v47;
        __dst = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v49 = __dst[5];
        v50 = &v46[v49];
        v51 = &v47[v49];
        v52 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          v53 = sub_1000BA294(&qword_100BD4280);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32);
        }
        else
        {
          v94 = v51;
          v95 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32);
          v95(v50, v94, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
          v54 = v95;
        }
        v12 = (uint64_t)v480;
        *(_OWORD *)&v46[__dst[6]] = *(_OWORD *)&v47[__dst[6]];
        v438 = v54;
        v54(&v46[__dst[7]], &v47[__dst[7]], v52);
        v96 = __dst[8];
        v484 = &v46[v96];
        v97 = &v47[v96];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v47[v96], 1, v52))
        {
          v98 = sub_1000BA294(&qword_100BD4280);
          memcpy(v484, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
          v438(v484, v97, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v484, 0, 1, v52);
        }
        v44 = (uint64_t)v446;
        v46[__dst[9]] = v47[__dst[9]];
        swift_storeEnumTagMultiPayload(v46, v457, 1);
        v28 = v493;
      }
      else
      {
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v12 = (uint64_t)v480;
      }
      v104 = *(int *)(v44 + 24);
      v105 = (char *)v26 + v104;
      v106 = (char *)v27 + v104;
      v107 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
      {
        v108 = sub_1000BA294(&qword_100BD3100);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        v109 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v105, v106, v109);
        v110 = sub_1000BA294(&qword_100BC5FE8);
        v105[*(int *)(v110 + 48)] = v106[*(int *)(v110 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
      }
      v29 = v26;
      v30 = v28;
      v31 = 4;
      goto LABEL_95;
    case 6u:
      v55 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v26, v27, v55);
      v29 = v26;
      v30 = v28;
      v31 = 6;
      goto LABEL_95;
    case 7u:
      v56 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      if (swift_getEnumCaseMultiPayload(v27) == 1)
      {
        v494 = v28;
        *v26 = *v27;
        v57 = type metadata accessor for ConditionDetailMapViewModel(0);
        v58 = *(int *)(v57 + 20);
        v59 = (char *)v26 + v58;
        v60 = (char *)v27 + v58;
        v61 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        v481 = (int *)v57;
        v62 = *(int *)(v57 + 24);
        v63 = (_OWORD *)((char *)v26 + v62);
        v64 = (_OWORD *)((char *)v27 + v62);
        v65 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
        {
          v66 = sub_1000BA294(&qword_100BC3460);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          v67 = v481;
        }
        else
        {
          v439 = v56;
          *v63 = *v64;
          v458 = (int *)v65;
          __dstb = (char *)v63;
          v99 = *(int *)(v65 + 20);
          v100 = (char *)v63 + v99;
          v101 = (char *)v64 + v99;
          v102 = type metadata accessor for Locale(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
          {
            v103 = sub_1000BA294(&qword_100BC3340);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
          }
          v120 = v458[6];
          v447 = &__dstb[v120];
          v121 = (char *)v64 + v120;
          v122 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v447, v121, v122);
          v123 = v458[7];
          v124 = &__dstb[v123];
          v125 = (char *)v64 + v123;
          v126 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v126))
          {
            v127 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
          }
          else
          {
            v135 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v124, v125, v135);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v126);
          }
          v136 = v458[8];
          v137 = &__dstb[v136];
          v138 = (char *)v64 + v136;
          v139 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v138) == 1)
          {
            v140 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v137, v138, v140);
            swift_storeEnumTagMultiPayload(v137, v139, 1);
          }
          else
          {
            memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
          }
          v142 = (uint64_t)v458;
          v141 = (uint64_t)__dstb;
          v143 = v458[9];
          v448 = &__dstb[v143];
          v144 = (uint64_t)v64 + v143;
          v145 = type metadata accessor for WeatherDataOverrides(0);
          __srca = (char *)v144;
          v146 = _s7Weather24LocationCompositionStateOwet_0(v144, 1, v145);
          v56 = v439;
          if (v146)
          {
            v147 = sub_1000BA294(&qword_100BC3350);
            memcpy(v448, __srca, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
            v67 = v481;
          }
          else
          {
            v429 = v145;
            v148 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srca, 1, v148))
            {
              v149 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              v150 = v448;
              memcpy(v448, __srca, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
            }
            else
            {
              v150 = v448;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v448, __srca, v148);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v448, 0, 1, v148);
            }
            v159 = *(int *)(v145 + 20);
            v426 = &v150[v159];
            v160 = &__srca[v159];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srca[v159], 1, v148))
            {
              v161 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v426, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v426, v160, v148);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v426, 0, 1, v148);
            }
            v67 = v481;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v448, 0, 1, v429);
            v142 = (uint64_t)v458;
            v141 = (uint64_t)__dstb;
          }
          _s7Weather24LocationCompositionStateOwst_0(v141, 0, 1, v142);
        }
        *(_OWORD *)((char *)v26 + v67[7]) = *(_OWORD *)((char *)v27 + v67[7]);
        v175 = v67[8];
        v176 = (char *)v26 + v175;
        v177 = (char *)v27 + v175;
        v178 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
        *((_BYTE *)v26 + v67[9]) = *((_BYTE *)v27 + v67[9]);
        swift_storeEnumTagMultiPayload(v26, v56, 1);
        v28 = v494;
      }
      else
      {
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      v29 = v26;
      v30 = v28;
      v31 = 7;
LABEL_95:
      swift_storeEnumTagMultiPayload(v29, v30, v31);
      break;
    default:
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      break;
  }
  v179 = v6[8];
  v180 = (_OWORD *)(a1 + v179);
  v181 = (_OWORD *)(a2 + v179);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v179, 1, v28))
  {
    v182 = sub_1000BA294(&qword_100BD3108);
    memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v181))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v180, v181, v12);
        v183 = v180;
        v184 = v28;
        v185 = 0;
        goto LABEL_199;
      case 2u:
        v186 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v180, v181, v186);
        v183 = v180;
        v184 = v28;
        v185 = 2;
        goto LABEL_199;
      case 3u:
        v187 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v180, v181, v187);
        v183 = v180;
        v184 = v28;
        v185 = 3;
        goto LABEL_199;
      case 4u:
        v188 = v181[1];
        *v180 = *v181;
        v180[1] = v188;
        v189 = type metadata accessor for DetailComponentContainerViewModel(0);
        v190 = *(int *)(v189 + 20);
        v191 = (char *)v180 + v190;
        v192 = (char *)v181 + v190;
        v193 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v192) == 1)
        {
          v451 = (void *)v193;
          v497 = v28;
          *(_OWORD *)v191 = *(_OWORD *)v192;
          v194 = type metadata accessor for NewsArticleComponentContentViewModel(0);
          v195 = *(int *)(v194 + 20);
          __dste = &v191[v195];
          v485 = (int *)v194;
          v196 = &v192[v195];
          v197 = type metadata accessor for URL(0);
          v460 = v189;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v197))
          {
            v198 = sub_1000BA294(&qword_100BD4280);
            memcpy(__dste, v196, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
            v199 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32);
          }
          else
          {
            v199 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32);
            v199(__dste, v196, v197);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dste, 0, 1, v197);
          }
          *(_OWORD *)&v191[v485[6]] = *(_OWORD *)&v192[v485[6]];
          __dstf = v199;
          v199(&v191[v485[7]], &v192[v485[7]], v197);
          v212 = v485[8];
          v213 = &v191[v212];
          v214 = &v192[v212];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v192[v212], 1, v197))
          {
            v215 = sub_1000BA294(&qword_100BD4280);
            memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
          }
          else
          {
            __dstf(v213, v214, v197);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 0, 1, v197);
          }
          v191[v485[9]] = v192[v485[9]];
          swift_storeEnumTagMultiPayload(v191, v451, 1);
          v28 = v497;
          v189 = v460;
        }
        else
        {
          memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
        }
        v221 = *(int *)(v189 + 24);
        v222 = (char *)v180 + v221;
        v223 = (char *)v181 + v221;
        v224 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
        {
          v225 = sub_1000BA294(&qword_100BD3100);
          memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
          v226 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v222, v223, v226);
          v227 = sub_1000BA294(&qword_100BC5FE8);
          v222[*(int *)(v227 + 48)] = v223[*(int *)(v227 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
        }
        v183 = v180;
        v184 = v28;
        v185 = 4;
        goto LABEL_199;
      case 6u:
        v200 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v180, v181, v200);
        v183 = v180;
        v184 = v28;
        v185 = 6;
        goto LABEL_199;
      case 7u:
        v201 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v181) == 1)
        {
          v498 = v28;
          *v180 = *v181;
          v202 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
          v203 = v202[5];
          v204 = (char *)v180 + v203;
          v205 = (char *)v181 + v203;
          v206 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
          v207 = v202[6];
          v208 = (_OWORD *)((char *)v180 + v207);
          v209 = (_OWORD *)((char *)v181 + v207);
          v210 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v209, 1, v210))
          {
            v211 = sub_1000BA294(&qword_100BC3460);
            memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
          }
          else
          {
            v461 = v201;
            __dstg = (char *)v208;
            *v208 = *v209;
            v486 = (int *)v210;
            v216 = *(int *)(v210 + 20);
            v217 = (char *)v208 + v216;
            v218 = (char *)v209 + v216;
            v219 = type metadata accessor for Locale(0);
            v452 = v202;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
            {
              v220 = sub_1000BA294(&qword_100BC3340);
              memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v217, v218, v219);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
            }
            v230 = v486[6];
            v231 = &__dstg[v230];
            v232 = (char *)v209 + v230;
            v233 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 32))(v231, v232, v233);
            v234 = v486[7];
            v235 = &__dstg[v234];
            v236 = (char *)v209 + v234;
            v237 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v236, 1, v237))
            {
              v238 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
            }
            else
            {
              v239 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v235, v236, v239);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v235, 0, 1, v237);
            }
            v240 = v486[8];
            v241 = &__dstg[v240];
            v242 = (char *)v209 + v240;
            v243 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v202 = v452;
            if (swift_getEnumCaseMultiPayload(v242) == 1)
            {
              v244 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v241, v242, v244);
              swift_storeEnumTagMultiPayload(v241, v243, 1);
            }
            else
            {
              memcpy(v241, v242, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
            }
            v245 = v486[9];
            v246 = &__dstg[v245];
            v247 = (char *)v209 + v245;
            v248 = type metadata accessor for WeatherDataOverrides(0);
            v201 = v461;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v247, 1, v248))
            {
              v249 = sub_1000BA294(&qword_100BC3350);
              memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
              v250 = (uint64_t)__dstg;
            }
            else
            {
              v441 = v248;
              __srcc = (_QWORD *)type metadata accessor for Date(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v247, 1, (uint64_t)__srcc))
              {
                v251 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, _QWORD *))(*(__srcc - 1) + 32))(v246, v247, __srcc);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v246, 0, 1, (uint64_t)__srcc);
              }
              v250 = (uint64_t)__dstg;
              v256 = *(int *)(v441 + 20);
              v431 = (uint64_t)v246;
              v257 = &v246[v256];
              v258 = &v247[v256];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v247[v256], 1, (uint64_t)__srcc))
              {
                v259 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, _QWORD *))(*(__srcc - 1) + 32))(v257, v258, __srcc);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, (uint64_t)__srcc);
              }
              _s7Weather24LocationCompositionStateOwst_0(v431, 0, 1, v441);
              v201 = v461;
            }
            _s7Weather24LocationCompositionStateOwst_0(v250, 0, 1, (uint64_t)v486);
          }
          *(_OWORD *)((char *)v180 + v202[7]) = *(_OWORD *)((char *)v181 + v202[7]);
          v348 = v202[8];
          v349 = (char *)v180 + v348;
          v350 = (char *)v181 + v348;
          v351 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v351 - 8) + 32))(v349, v350, v351);
          *((_BYTE *)v180 + v202[9]) = *((_BYTE *)v181 + v202[9]);
          swift_storeEnumTagMultiPayload(v180, v201, 1);
          v28 = v498;
        }
        else
        {
          memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
        }
        v183 = v180;
        v184 = v28;
        v185 = 7;
LABEL_199:
        swift_storeEnumTagMultiPayload(v183, v184, v185);
        break;
      default:
        memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v180, 0, 1, v28);
  }
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_1002B7064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B7070);
}

uint64_t sub_1002B7070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000B3B70();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1002B70B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B70BC);
}

uint64_t sub_1002B70BC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1000B3B70();
  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1002B7100(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1002B7130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for MonthlyAveragesChartModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD3180;
  if (!qword_100BD3180)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MonthlyAveragesChartModel);
  return result;
}

uint64_t sub_1002B71A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for ConditionDetailPlatterViewModel(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t sub_1002B71F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  sub_1000B3B70();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  type metadata accessor for MonthlyAveragesChartModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  sub_1000BA294(&qword_100BD3190);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v17 = v14 - v13 + *(int *)(v16 + 48);
  sub_1002B737C(a1, v14 - v13);
  sub_1002B737C(a2, v17);
  sub_1000BA594(v15);
  if (!v19)
  {
    sub_1002B737C(v15, v11);
    sub_1000BA594(v17);
    if (!v19)
    {
      sub_1002B7400(v17, v7);
      sub_1008B5D2C(v11, v7);
      v18 = v20;
      sub_10006BD20(v7, type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10006BD20(v11, type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10006BD20(v15, type metadata accessor for MonthlyAveragesChartModel);
      return v18 & 1;
    }
    sub_10006BD20(v11, type metadata accessor for ConditionDetailPlatterViewModel);
LABEL_9:
    sub_1002B73C0(v15);
    v18 = 0;
    return v18 & 1;
  }
  sub_1000BA594(v17);
  if (!v19)
    goto LABEL_9;
  sub_10006BD20(v15, type metadata accessor for MonthlyAveragesChartModel);
  v18 = 1;
  return v18 & 1;
}

uint64_t sub_1002B737C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MonthlyAveragesChartModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B73C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BD3190);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002B7400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B7444@<X0>(_QWORD *a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v3, &v10);
  *(_OWORD *)(inited + 16) = xmmword_10097DA20;
  *(_QWORD *)(inited + 32) = 1702521203;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  type metadata accessor for CGSize(0);
  *(_OWORD *)(inited + 48) = *v1;
  *(_QWORD *)(inited + 72) = v5;
  strcpy((char *)(inited + 80), "safeAreaInsets");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 120) = &type metadata for EdgeInsets;
  v6 = swift_allocObject(&unk_100B6A220, 48, 7);
  *(_QWORD *)(inited + 96) = v6;
  v7 = v1[2];
  *(_OWORD *)(v6 + 16) = v1[1];
  *(_OWORD *)(v6 + 32) = v7;
  v8 = Dictionary.init(dictionaryLiteral:)(inited);
  a1[3] = sub_1000BA294(&qword_100BD31D0);
  a1[4] = sub_1002B75FC();
  sub_10005F164(a1);
  return ShortDescription.init(name:_:)(0x74654D656E656353, 0xEC00000073636972, v8, &type metadata for SceneMetrics);
}

uint64_t sub_1002B7584(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B7640();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1002B75B0()
{
  unint64_t result;

  result = qword_100BD31C8;
  if (!qword_100BD31C8)
  {
    result = swift_getWitnessTable(&unk_100990D40, &type metadata for SceneMetrics);
    atomic_store(result, (unint64_t *)&qword_100BD31C8);
  }
  return result;
}

uint64_t sub_1002B75EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1002B75FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD31D8;
  if (!qword_100BD31D8)
  {
    v1 = sub_100075EB0(&qword_100BD31D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD31D8);
  }
  return result;
}

unint64_t sub_1002B7640()
{
  unint64_t result;

  result = qword_100BD31E0;
  if (!qword_100BD31E0)
  {
    result = swift_getWitnessTable(&unk_100990D68, &type metadata for SceneMetrics);
    atomic_store(result, (unint64_t *)&qword_100BD31E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SceneMetricsEnvironmentKey()
{
  return &type metadata for SceneMetricsEnvironmentKey;
}

uint64_t sub_1002B7690(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    v5 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_1002B7714(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_1000BA294(&qword_100BD32B0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1002B79B8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInComponent.CodingKeys, &type metadata for NotificationsOptInComponent.CodingKeys, v11, v9, v10);
  v12 = type metadata accessor for Location(0);
  v13 = sub_1002B7DF4(&qword_100BCF410, (uint64_t)&protocol conformance descriptor for Location);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v2, v14, v4, v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1002B7814@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = type metadata accessor for Location(0);
  v20 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_100098728();
  v22 = v5 - v4;
  v6 = sub_1000BA294(&qword_100BD31F8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = type metadata accessor for NotificationsOptInComponent(0);
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1002B79B8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInComponent.CodingKeys, &type metadata for NotificationsOptInComponent.CodingKeys, v17, v15, v16);
  if (!v2)
  {
    sub_1002B7DF4(&qword_100BCF3E8, (uint64_t)&protocol conformance descriptor for Location);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v23, v18, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v14, v22, v23);
    sub_1002B79F4(v14, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
}

unint64_t sub_1002B79B8()
{
  unint64_t result;

  result = qword_100BD3200;
  if (!qword_100BD3200)
  {
    result = swift_getWitnessTable(&unk_100990FAC, &type metadata for NotificationsOptInComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD3200);
  }
  return result;
}

uint64_t sub_1002B79F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationsOptInComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for NotificationsOptInComponent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002B7A78 + 4 * byte_100990E40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002B7A98 + 4 * byte_100990E45[v4]))();
}

_BYTE *sub_1002B7A78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002B7A98(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002B7AA0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002B7AA8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002B7AB0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002B7AB8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInComponent.CodingKeys()
{
  return &type metadata for NotificationsOptInComponent.CodingKeys;
}

uint64_t sub_1002B7AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1002B7B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B7B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B7B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B7BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B7C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B7C2C);
}

uint64_t sub_1002B7C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000988EC();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_1002B7C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B7C60);
}

uint64_t sub_1002B7C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000988EC();
  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t sub_1002B7C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002B7690(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1002B7CB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B79B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002B7CE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B79B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002B7D08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002B7814(a1, a2);
}

uint64_t sub_1002B7D1C(_QWORD *a1)
{
  return sub_1002B7714(a1);
}

unint64_t sub_1002B7D38()
{
  unint64_t result;

  result = qword_100BD3298;
  if (!qword_100BD3298)
  {
    result = swift_getWitnessTable(&unk_100990F84, &type metadata for NotificationsOptInComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD3298);
  }
  return result;
}

unint64_t sub_1002B7D78()
{
  unint64_t result;

  result = qword_100BD32A0;
  if (!qword_100BD32A0)
  {
    result = swift_getWitnessTable(&unk_100990EF4, &type metadata for NotificationsOptInComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD32A0);
  }
  return result;
}

unint64_t sub_1002B7DB8()
{
  unint64_t result;

  result = qword_100BD32A8;
  if (!qword_100BD32A8)
  {
    result = swift_getWitnessTable(&unk_100990F1C, &type metadata for NotificationsOptInComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD32A8);
  }
  return result;
}

uint64_t sub_1002B7DF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Location(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002B7E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v2 = sub_1000BA294(&qword_100BC3340);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for EnvironmentState(0);
  __chkstk_darwin(v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v21[-v9];
  __chkstk_darwin(v11);
  v13 = &v21[-v12];
  v14 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v22, 0, 0);
  sub_10006A788(v14, (uint64_t)v10);
  v15 = type metadata accessor for Locale(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v15);
  v23 = 1;
  v24 = 0u;
  v25 = 0u;
  v26 = 0;
  sub_1007686D0(2u, 0, 3, (uint64_t)v4, 0, 0, 2, 2, v13, 2, 2, 0, 1, 2, 2, (uint64_t)&v23);
  sub_1000AA25C((uint64_t)v4);
  sub_10006A74C((uint64_t)v10);
  sub_10006A788((uint64_t)v13, (uint64_t)v7);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
  {
    sub_1001E9B58();
    v18 = v17;
    swift_release(a1);
    a1 = v18;
  }
  v19 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v21, 33, 0);
  sub_1002B804C((uint64_t)v7, v19);
  swift_endAccess(v21);
  sub_10006A74C((uint64_t)v13);
  return a1;
}

uint64_t sub_1002B804C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EnvironmentState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1002B8090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, __int128 *a8)
{
  _QWORD *v8;

  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v8[6] = a5;
  v8[7] = a6;
  sub_10003C800(a7, (uint64_t)(v8 + 8));
  sub_10003C800(a8, (uint64_t)(v8 + 13));
  sub_10004A298();
}

void sub_1002B80D0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[48];

  v1 = sub_1000C26EC();
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100099864();
  *v0 = 0;
  v3 = sub_1000BBF18();
  sub_1000BA718((uint64_t)v0, v3);
  sub_1000C1A48((uint64_t)v0, v1);
  sub_1000BA720();
  sub_1000CD6A0((uint64_t)v0, (uint64_t)v4);
  sub_100021AA4((uint64_t)v4, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4((uint64_t)v0);
  sub_10009880C();
  sub_100079F70();
}

void sub_1002B815C()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v2 = v1;
  v3 = sub_1000C26EC();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100079F58();
  v5 = v1[11];
  v6 = v1[12];
  sub_1000DB418(v1 + 8, v5);
  dispatch thunk of LocationManagerType.requestAlwaysAuthorization()(v5, v6);
  v7 = (uint64_t (*)(uint64_t))v1[6];
  v8 = v2[7];
  *v0 = 2;
  v9 = sub_1000BBF18();
  sub_1000BA718((uint64_t)v0, v9);
  sub_1000C1A48((uint64_t)v0, v3);
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  swift_retain();
  sub_1000A5EBC((uint64_t)v0, (uint64_t)v10, v7);
  sub_100021AA4((uint64_t)v10, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4((uint64_t)v0);
  swift_release(v8);
  sub_10004A2A0();
}

void sub_1002B8230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = v0[16];
  v2 = v0[17];
  sub_1000DB418(v0 + 13, v1);
  v3 = swift_allocObject(&unk_100B6A4E0, 24, 7);
  swift_weakInit(v3 + 16);
  v4 = swift_retain();
  dispatch thunk of NotificationAuthorizationManagerType.requestAuthorization(_:)(sub_1002B8C64, v3, v1, v2, v4);
  swift_release_n(v3, 2);
  sub_10004A2A0();
}

double sub_1002B82B4(char a1, uint64_t a2)
{
  double result;

  if ((a1 & 1) != 0)
  {
    swift_retain();
    asyncMain(block:)(sub_1002B8C6C, a2);
    *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  }
  return result;
}

double sub_1002B82F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  char v22;
  _OWORD v23[2];
  uint64_t v24;
  _BYTE v25[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v6 = *(uint64_t (**)(uint64_t))(Strong + 48);
    v5 = *(_QWORD *)(Strong + 56);
    swift_retain();
    swift_release(v4);
    v7 = sub_1000BA294(&qword_100BD3370);
    v8 = type metadata accessor for MainAction(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = *(unsigned __int8 *)(v9 + 80);
    v12 = (v11 + 32) & ~v11;
    v13 = swift_allocObject(v7, v12 + 3 * v10, v11 | 7);
    *(_OWORD *)(v13 + 16) = xmmword_10098B610;
    v14 = v13 + v12;
    v15 = type metadata accessor for NotificationsOptInAction(0);
    swift_storeEnumTagMultiPayload(v14, v15, 11);
    swift_storeEnumTagMultiPayload(v14, v8, 5);
    sub_1000BA294(&qword_100BD2378);
    v16 = static NotificationSubscription.Location.current.getter();
    static NotificationSubscription.Kind.all.getter(v16);
    v17 = type metadata accessor for NotificationsAction(0);
    swift_storeEnumTagMultiPayload(v14 + v10, v17, 2);
    swift_storeEnumTagMultiPayload(v14 + v10, v8, 4);
    v18 = (_BYTE *)(v14 + 2 * v10);
    *v18 = 3;
    v19 = type metadata accessor for ModalViewAction(0);
    swift_storeEnumTagMultiPayload(v18, v19, 2);
    swift_storeEnumTagMultiPayload(v18, v8, 7);
    v24 = 0;
    memset(v23, 0, sizeof(v23));
    sub_1000A5F84((uint64_t)v23, (uint64_t)v20);
    v21 = v13;
    v22 = 0;
    swift_bridgeObjectRetain(v13);
    sub_10009FF10((uint64_t)v20, v6);
    sub_100021AA4((uint64_t)v20, &qword_100BD3378);
    swift_bridgeObjectRelease();
    sub_100021AA4((uint64_t)v23, (uint64_t *)&unk_100BFFA10);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_1002B84D4(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  char v45[8];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v2 = v1;
  if (a1 == 2)
  {
    v3 = v1[16];
    v4 = v1[17];
    sub_1000DB418(v1 + 13, v3);
    dispatch thunk of NotificationAuthorizationManagerType.requestAuthorization()(v3, v4);
    v6 = (uint64_t (*)(uint64_t))v1[6];
    v5 = v2[7];
    sub_1000BA294(&qword_100BD3370);
    v7 = sub_1000C26EC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(_QWORD *)(v8 + 72);
    v10 = *(unsigned __int8 *)(v8 + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = (__n128 *)sub_1000D9C70(v11 + 2 * v9, v10);
    v13 = sub_1000CCA6C(v12, (__n128)xmmword_10097DA20);
    sub_1000C5304(v13);
    sub_1000DF540();
    v14 = (_BYTE *)(v11 + v9);
    *v14 = 0;
    v15 = sub_1000BBF18();
    sub_1000BA718((uint64_t)v14, v15);
    v16 = sub_1000C1A48((uint64_t)v14, v7);
    sub_1000BBF20(v16, v17, v18, v19, v20, v21, v22, v23, v44, v45[0], v46, v47, v48, v49, (uint64_t)v50, v51, v52, v53, v54);
    v50 = v12;
    LOBYTE(v51) = 0;
    swift_retain();
  }
  else
  {
    v6 = (uint64_t (*)(uint64_t))v1[6];
    v5 = v2[7];
    sub_1000BA294(&qword_100BD3370);
    v24 = sub_1000C26EC();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(_QWORD *)(v25 + 72);
    v27 = *(unsigned __int8 *)(v25 + 80);
    v28 = (v27 + 32) & ~v27;
    v12 = (__n128 *)sub_1000D9C70(v28 + 3 * v26, v27);
    v29 = sub_1000CCA6C(v12, (__n128)xmmword_10098B610);
    sub_1000C5304(v29);
    sub_1000DF540();
    sub_1000BA294(&qword_100BD2378);
    v30 = swift_retain();
    v31 = static NotificationSubscription.Location.current.getter(v30);
    static NotificationSubscription.Kind.severe.getter(v31);
    v32 = type metadata accessor for NotificationsAction(0);
    sub_1000BA718(v28 + v26, v32);
    swift_storeEnumTagMultiPayload(v28 + v26, v24, 4);
    v33 = (_BYTE *)(v28 + 2 * v26);
    *v33 = 5;
    v34 = sub_1000BBF18();
    sub_1000BA718((uint64_t)v33, v34);
    v35 = sub_1000C1A48((uint64_t)v33, v24);
    sub_1000BBF20(v35, v36, v37, v38, v39, v40, v41, v42, v44, v45[0], v46, v47, v48, v49, (uint64_t)v50, v51, v52, v53, v54);
    v50 = v12;
    LOBYTE(v51) = 0;
  }
  swift_bridgeObjectRetain(v12);
  sub_10009FF10((uint64_t)v45, v6);
  sub_100021AA4((uint64_t)v45, &qword_100BD3378);
  swift_bridgeObjectRelease();
  sub_100021AA4((uint64_t)&v52, (uint64_t *)&unk_100BFFA10);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1002B86F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  void *v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 aBlock;
  __int128 v40;
  double (*v41)();
  uint64_t v42;

  v2 = v0;
  v35 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_100099864();
  v3 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v34 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v13 = sub_1000C26EC();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v18 = *(uint64_t (**)(uint64_t))(v2 + 48);
  v19 = *(_QWORD *)(v2 + 56);
  *(_BYTE *)(v16 - v15) = 0;
  v20 = sub_1000BBF18();
  sub_1000BA718(v17, v20);
  sub_1000C1A48(v17, v13);
  v41 = 0;
  aBlock = 0u;
  v40 = 0u;
  swift_retain();
  sub_1000A5EBC(v17, (uint64_t)&aBlock, v18);
  sub_100021AA4((uint64_t)&aBlock, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4(v17);
  swift_release(v19);
  v21 = sub_10009FFE0();
  v22 = (void *)static OS_dispatch_queue.main.getter(v21);
  static DispatchTime.now()(v22);
  + infix(_:_:)(v9);
  v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24 = v9;
  v25 = v34;
  v23(v24, v34);
  v41 = sub_1002B8C74;
  v42 = v2;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v40 = sub_100121D84;
  *((_QWORD *)&v40 + 1) = &unk_100B6A4F8;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  sub_10009880C();
  static DispatchQoS.unspecified.getter(v27);
  *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
  v28 = sub_1001221E0();
  v29 = sub_1000BA294(&qword_100BD4F10);
  v30 = sub_100121014();
  v31 = v35;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v29, v30, v35, v28);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v6, v1, v26);
  _Block_release(v26);

  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v1, v31);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v6, v37);
  return ((uint64_t (*)(char *, uint64_t))v23)(v12, v25);
}

double sub_1002B89B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  double result;
  _OWORD v9[2];
  uint64_t v10;

  v2 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(uint64_t (**)(uint64_t))(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v7 = type metadata accessor for NotificationsOptInAction(0);
  swift_storeEnumTagMultiPayload(v4, v7, 11);
  swift_storeEnumTagMultiPayload(v4, v2, 5);
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1000A5EBC((uint64_t)v4, (uint64_t)v9, v6);
  sub_100021AA4((uint64_t)v9, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4((uint64_t)v4);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_1002B8A8C()
{
  sub_1002B8A9C(1);
}

void sub_1002B8A94()
{
  sub_1002B8A9C(2);
}

void sub_1002B8A9C(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _BYTE v7[48];

  v3 = sub_1000C26EC();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100079F58();
  sub_10082FB80(a1);
  if ((v5 & 1) != 0)
  {
    *v1 = 1;
    v6 = sub_1000BBF18();
    sub_1000BA718((uint64_t)v1, v6);
    sub_1000C1A48((uint64_t)v1, v3);
    sub_1000BA720();
    sub_1000CD6A0((uint64_t)v1, (uint64_t)v7);
    sub_100021AA4((uint64_t)v7, (uint64_t *)&unk_100BFFA10);
    sub_1000A0AA4((uint64_t)v1);
    sub_10009880C();
  }
  sub_100079F70();
}

void sub_1002B8B3C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[3];
  swift_release(v0[5]);
  swift_release(v1);
  swift_release(v0[7]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 13);
  sub_10004A298();
}

uint64_t sub_1002B8B80()
{
  uint64_t v0;

  sub_1002B8B3C();
  return swift_deallocClassInstance(v0, 144, 7);
}

uint64_t type metadata accessor for NotificationsOptInInteractor()
{
  return objc_opt_self(_TtC7Weather28NotificationsOptInInteractor);
}

void sub_1002B8BC0()
{
  sub_1002B8230();
}

void sub_1002B8BE0()
{
  sub_1002B80D0();
}

double sub_1002B8C00(char a1)
{
  return sub_1002B84D4(a1);
}

uint64_t sub_1002B8C20()
{
  return sub_1002B86F4();
}

uint64_t sub_1002B8C40()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1002B8C64(char a1)
{
  uint64_t v1;

  return sub_1002B82B4(a1, v1);
}

double sub_1002B8C6C()
{
  uint64_t v0;

  return sub_1002B82F4(v0);
}

double sub_1002B8C74()
{
  uint64_t v0;

  return sub_1002B89B4(v0);
}

uint64_t *sub_1002B8C7C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t HourPrecipitationChartViewModel;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8)
                                                                 + 16);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, HourPrecipitationChartViewModel, v13);
    v14 = a3[5];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    LOBYTE(v9) = v16[8];
    sub_10008D47C(*(_QWORD *)v16, (char)v9);
    *(_QWORD *)v15 = v17;
    v15[8] = (char)v9;
    v18 = a3[6];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)v20;
    LOBYTE(v9) = v20[8];
    sub_10008D47C(*(_QWORD *)v20, (char)v9);
    *(_QWORD *)v19 = v21;
    v19[8] = (char)v9;
    v22 = a3[7];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_1000BA294(&qword_100BD3380);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t sub_1002B8DB0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 8))(v4, HourPrecipitationChartViewModel);
  sub_1000B15F8(*(_QWORD *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  v6 = a1 + a2[7];
  v7 = sub_1000BA294(&qword_100BD3380);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_1002B8E58(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t HourPrecipitationChartViewModel;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, HourPrecipitationChartViewModel, v12);
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)v15;
  LOBYTE(v8) = v15[8];
  sub_10008D47C(*(_QWORD *)v15, (char)v8);
  *(_QWORD *)v14 = v16;
  v14[8] = (char)v8;
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v8) = v19[8];
  sub_10008D47C(*(_QWORD *)v19, (char)v8);
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v8;
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_1000BA294(&qword_100BD3380);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

_QWORD *sub_1002B8F60(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 24))(v8, v9, HourPrecipitationChartViewModel);
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v9) = v13[8];
  sub_10008D47C(*(_QWORD *)v13, (char)v9);
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v9;
  sub_1000B15F8(v15, v16);
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v9) = v19[8];
  sub_10008D47C(*(_QWORD *)v19, (char)v9);
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v9;
  sub_1000B15F8(v21, v22);
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1000BA294(&qword_100BD3380);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

_OWORD *sub_1002B9084(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v7, v8, HourPrecipitationChartViewModel);
  v10 = a3[5];
  v11 = a3[6];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1000BA294(&qword_100BD3380);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *sub_1002B915C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 40))(v8, v9, HourPrecipitationChartViewModel);
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  sub_1000B15F8(v15, v16);
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = v19[8];
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v19;
  sub_1000B15F8(v21, v22);
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1000BA294(&qword_100BD3380);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_1002B9258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B9264);
}

uint64_t sub_1002B9264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v6 = sub_1000C26F4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  if ((_DWORD)v3 != 254)
  {
    v7 = sub_1000BA294(&qword_100BD3380);
    v8 = v4 + *(int *)(a3 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  v9 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1002B92F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B9300);
}

uint64_t sub_1002B9300(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_1000C26F4();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(v5 + *(int *)(a4 + 20) + 8) = -(char)v4;
      return result;
    }
    v9 = sub_1000BA294(&qword_100BD3380);
    v10 = v5 + *(int *)(a4 + 28);
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t sub_1002B9390(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAF6D4, 1);
}

uint64_t sub_1002B93A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  v43 = type metadata accessor for AutomationInfo(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = (_QWORD *)(v4 - v3);
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  sub_1000BA294(&qword_100BD3428);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v14 = sub_1000BA294(&qword_100BD3430);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  v40 = sub_1000BA294(&qword_100BD3438);
  v19 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  sub_100098728();
  v22 = v21 - v20;
  *(_QWORD *)v13 = static HorizontalAlignment.center.getter(v23);
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 1;
  v24 = sub_1000BA294(&qword_100BD3440);
  v25 = sub_1002B95FC((char *)v1, (void *)(v13 + *(int *)(v24 + 44)));
  v26 = static Edge.Set.bottom.getter(v25);
  v27 = EdgeInsets.init(_all:)(-3.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_10007EBC8(v13, v18, &qword_100BD3428);
  v34 = v18 + *(int *)(v14 + 36);
  *(_BYTE *)v34 = v26;
  *(double *)(v34 + 8) = v27;
  *(_QWORD *)(v34 + 16) = v29;
  *(_QWORD *)(v34 + 24) = v31;
  *(_QWORD *)(v34 + 32) = v33;
  *(_BYTE *)(v34 + 40) = 0;
  sub_100021AA4(v13, &qword_100BD3428);
  static AccessibilityChildBehavior.contain.getter(v35);
  v36 = sub_1002BA06C();
  View.accessibilityElement(children:)(v9, v14, v36);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v9, v42);
  sub_100021AA4(v18, &qword_100BD3430);
  v37 = *(_QWORD *)(v1 + 8);
  *v5 = *(_QWORD *)v1;
  v5[1] = v37;
  v38 = type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload(v5, v38, 3);
  swift_storeEnumTagMultiPayload(v5, v43, 1);
  sub_100335214();
  swift_bridgeObjectRetain(v37);
  sub_1002BA0F0((uint64_t)v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v22, v40);
}

uint64_t sub_1002B95FC@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t HourPrecipitationChartViewModel;
  __n128 v7;
  uint64_t v8;
  uint64_t HourPrecipitationChartView;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t HourPrecipitationComponentView;
  char *v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char v49;
  __int16 v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t HourPrecipitationComponentViewModel;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _OWORD *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 v84;
  unsigned __int8 v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  void *v94;
  uint64_t v95;
  _QWORD v96[2];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  int v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  int v127;
  _QWORD v128[18];
  uint64_t v129;
  uint64_t v130;
  unsigned __int8 v131;
  _BYTE v132[7];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char v140;
  char v141;
  int v142;
  char v143;
  uint64_t v144;
  char v145;
  _BYTE v146[7];
  char v147;
  _BYTE v148[7];
  double v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  _OWORD v157[2];
  char v158;
  unsigned __int8 v159;
  _BYTE v160[7];
  _BYTE v161[7];
  unsigned __int8 v162;
  int v163;
  char v164;
  unsigned __int8 v165;
  _BYTE v166[7];
  unsigned __int8 v167;
  _BYTE v168[7];
  unsigned __int8 v169;

  v121 = a2;
  v100 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v100);
  v112 = (char *)v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BD3458);
  __chkstk_darwin(v4);
  v110 = (uint64_t)v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v108 = *(_QWORD *)(HourPrecipitationChartViewModel - 8);
  v109 = HourPrecipitationChartViewModel;
  v7 = __chkstk_darwin(HourPrecipitationChartViewModel);
  v107 = (char *)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartView(0, v7);
  v10 = *(_QWORD *)(HourPrecipitationChartView - 8);
  v97 = HourPrecipitationChartView;
  v98 = v10;
  __chkstk_darwin(HourPrecipitationChartView);
  v115 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD3460);
  v103 = *(_QWORD *)(v12 - 8);
  v104 = v12;
  __chkstk_darwin(v12);
  v114 = (char *)v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1000BA294(&qword_100BD3468);
  __chkstk_darwin(v99);
  v106 = (char *)v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BD3470);
  __chkstk_darwin(v15);
  v105 = (char *)v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1000BA294(&qword_100BD3478);
  __chkstk_darwin(v122);
  v102 = (uint64_t)v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v101 = (uint64_t)v96 - v19;
  v20 = sub_1000BA294(&qword_100BD3480);
  __chkstk_darwin(v20);
  v22 = (char *)v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)v96 - v24;
  HourPrecipitationComponentView = type metadata accessor for NextHourPrecipitationComponentView(0);
  v27 = &a1[*(int *)(HourPrecipitationComponentView + 20)];
  v28 = *(_QWORD *)v27;
  v29 = v27[8];
  sub_10008D47C(*(_QWORD *)v27, v29);
  sub_10010BCB4();
  v31 = v30;
  v32 = sub_1000B15F8(v28, v29);
  v113 = v31 & 1;
  v125 = static VerticalAlignment.center.getter(v32);
  sub_1002B9F08(a1, (v31 & 1) == 0, (uint64_t)&v129);
  v123 = v130;
  v124 = v129;
  v33 = v131;
  v117 = v134;
  v118 = v133;
  v116 = v135;
  v34 = v136;
  v126 = BYTE2(v136);
  v127 = BYTE1(v136);
  v119 = v137;
  v35 = v138;
  v120 = static Edge.Set.bottom.getter(v36);
  v37 = EdgeInsets.init(_all:)(2.0);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v44 = 1;
  v169 = 1;
  v167 = v33;
  v165 = v34;
  v162 = v35;
  v159 = 0;
  v96[1] = HourPrecipitationComponentView;
  v45 = *(int *)(HourPrecipitationComponentView + 24);
  v46 = a1;
  v47 = &a1[v45];
  v48 = *(_QWORD *)v47;
  v49 = v47[8];
  sub_10008D47C(*(_QWORD *)v47, v49);
  sub_100109D8C();
  v51 = v50;
  sub_1000B15F8(v48, v49);
  v52 = v122;
  if ((v51 & 0x100) == 0)
  {
LABEL_7:
    v111 = v25;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, v44, 1, v52);
    v84 = v169;
    LODWORD(v112) = v169;
    v85 = v167;
    v86 = v165;
    LODWORD(v122) = v165;
    v87 = v162;
    v113 = v167;
    LODWORD(v114) = v162;
    v88 = v159;
    LODWORD(v115) = v159;
    sub_10007EBC8((uint64_t)v25, (uint64_t)v22, &qword_100BD3480);
    v128[0] = v125;
    v128[1] = 0;
    LOBYTE(v128[2]) = v84;
    *(_DWORD *)((char *)&v128[2] + 1) = *(_DWORD *)v168;
    HIDWORD(v128[2]) = *(_DWORD *)&v168[3];
    v128[3] = v124;
    v128[4] = v123;
    LOBYTE(v128[5]) = v85;
    *(_DWORD *)((char *)&v128[5] + 1) = *(_DWORD *)v166;
    HIDWORD(v128[5]) = *(_DWORD *)&v166[3];
    v90 = v117;
    v89 = v118;
    v128[6] = v118;
    v128[7] = v117;
    v91 = v116;
    v128[8] = v116;
    LOBYTE(v128[9]) = v86;
    BYTE1(v128[9]) = v127;
    BYTE2(v128[9]) = v126;
    HIBYTE(v128[9]) = v164;
    *(_DWORD *)((char *)&v128[9] + 3) = v163;
    v92 = v119;
    v128[10] = v119;
    LOBYTE(v128[11]) = v87;
    *(_DWORD *)((char *)&v128[11] + 1) = *(_DWORD *)v161;
    HIDWORD(v128[11]) = *(_DWORD *)&v161[3];
    v93 = v120;
    LOBYTE(v128[12]) = v120;
    *(_DWORD *)((char *)&v128[12] + 1) = *(_DWORD *)v160;
    HIDWORD(v128[12]) = *(_DWORD *)&v160[3];
    *(double *)&v128[13] = v37;
    v128[14] = v39;
    v128[15] = v41;
    v128[16] = v43;
    LOBYTE(v128[17]) = v88;
    v94 = v121;
    memcpy(v121, v128, 0x89uLL);
    v95 = sub_1000BA294(&qword_100BD3488);
    sub_10007EBC8((uint64_t)v22, (uint64_t)v94 + *(int *)(v95 + 48), &qword_100BD3480);
    sub_1002BA12C((uint64_t)v128);
    sub_100021AA4((uint64_t)v111, &qword_100BD3480);
    sub_100021AA4((uint64_t)v22, &qword_100BD3480);
    v129 = v125;
    v130 = 0;
    v131 = v112;
    *(_DWORD *)v132 = *(_DWORD *)v168;
    *(_DWORD *)&v132[3] = *(_DWORD *)&v168[3];
    v133 = v124;
    v134 = v123;
    LOBYTE(v135) = v113;
    *(_DWORD *)((char *)&v135 + 1) = *(_DWORD *)v166;
    HIDWORD(v135) = *(_DWORD *)&v166[3];
    v136 = v89;
    v137 = v90;
    v138 = v91;
    v139 = v122;
    v140 = v127;
    v141 = v126;
    v143 = v164;
    v142 = v163;
    v144 = v92;
    v145 = (char)v114;
    *(_DWORD *)v146 = *(_DWORD *)v161;
    *(_DWORD *)&v146[3] = *(_DWORD *)&v161[3];
    v147 = v93;
    *(_DWORD *)v148 = *(_DWORD *)v160;
    *(_DWORD *)&v148[3] = *(_DWORD *)&v160[3];
    v149 = v37;
    v150 = v39;
    v151 = v41;
    v152 = v43;
    v153 = (char)v115;
    return sub_1002BA178((uint64_t)&v129);
  }
  v53 = v122;
  v96[0] = v22;
  HourPrecipitationComponentViewModel = type metadata accessor for NextHourPrecipitationComponentViewModel(0);
  v55 = v107;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v107, &v46[*(int *)(HourPrecipitationComponentViewModel + 20)], v109);
  memset(v157, 0, sizeof(v157));
  v158 = 0;
  v56 = sub_1000BA294(&qword_100BD3490);
  v57 = v110;
  _s7Weather24LocationCompositionStateOwst_0(v110, 1, 1, v56);
  NextHourPrecipitationChartView.init(model:lollipopPoint:selectedData:lollipopEnabled:)(v55, v157, v57, 0);
  v58 = enum case for DynamicTypeSize.xxxLarge(_:);
  v59 = type metadata accessor for DynamicTypeSize(0);
  v60 = (uint64_t)v112;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v112, v58, v59);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v60, v60, v59, v61);
  if ((result & 1) != 0)
  {
    v63 = v113;
    sub_10000F1C8(&qword_100BD3498, (uint64_t (*)(uint64_t))&type metadata accessor for NextHourPrecipitationChartView);
    v65 = v64;
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v66 = v97;
    v67 = v65;
    v68 = v115;
    View.dynamicTypeSize<A>(_:)(v60, v97, v100, v67, v69);
    sub_100021AA4(v60, (uint64_t *)&unk_100C0A510);
    v70 = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v68, v66);
    if (v63)
    {
      v72 = 0;
    }
    else
    {
      v71 = sub_1000BA294(&qword_100BD3380);
      v70 = ScaledMetric.wrappedValue.getter(&v129, v71);
      v72 = v129;
    }
    v73 = (_BYTE)v113 != 0;
    static Alignment.center.getter(v70);
    _FrameLayout.init(width:height:alignment:)(0, 1, v72, v73);
    v75 = v103;
    v74 = v104;
    v76 = (uint64_t)v106;
    v77 = v114;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v106, v114, v104);
    v78 = (_OWORD *)(v76 + *(int *)(v99 + 36));
    v79 = v155;
    *v78 = v154;
    v78[1] = v79;
    v78[2] = v156;
    v80 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v77, v74);
    static Alignment.center.getter(v80);
    v81 = (uint64_t)v105;
    sub_100945D5C();
    sub_100021AA4(v76, &qword_100BD3468);
    v82 = v102;
    sub_10007EBC8(v81, v102, &qword_100BD3470);
    *(_QWORD *)(v82 + *(int *)(v53 + 36)) = 0x3FF0000000000000;
    sub_100021AA4(v81, &qword_100BD3470);
    v83 = v101;
    sub_1002BA1C4(v82, v101);
    sub_1002BA1C4(v83, (uint64_t)v25);
    v44 = 0;
    v22 = (char *)v96[0];
    v52 = v53;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

double sub_1002B9F08@<D0>(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t KeyPath;
  double result;
  _QWORD v26[2];

  v4 = a1[1];
  v26[0] = *a1;
  v26[1] = v4;
  v5 = sub_100114EF8();
  swift_bridgeObjectRetain(v4);
  v6 = Text.init<A>(_:)(v26, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  v13 = static Font.subheadline.getter(v6);
  v14 = Text.font(_:)(v13, v6, v8, v12, v10);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_release(v13);
  v21 = v18 & 1;
  sub_1000D31B4(v6, v8, v12);
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
    v22 = 4;
  else
    v22 = 2;
  KeyPath = swift_getKeyPath(&unk_100991150);
  *(_QWORD *)a3 = v14;
  *(_QWORD *)(a3 + 8) = v16;
  *(_BYTE *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v20;
  *(_QWORD *)(a3 + 32) = KeyPath;
  *(_QWORD *)(a3 + 40) = v22;
  *(_BYTE *)(a3 + 48) = 0;
  *(_WORD *)(a3 + 49) = 256;
  *(_QWORD *)(a3 + 56) = 0;
  *(_BYTE *)(a3 + 64) = 1;
  sub_1000D55D4(v14, v16, v21);
  swift_bridgeObjectRetain(v20);
  swift_retain();
  sub_1000D31B4(v14, v16, v21);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

unint64_t sub_1002BA06C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3448;
  if (!qword_100BD3448)
  {
    v1 = sub_100075EB0(&qword_100BD3430);
    sub_10003D2DC(&qword_100BD3450, &qword_100BD3428);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3448);
  }
  return result;
}

uint64_t sub_1002BA0F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AutomationInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002BA12C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  sub_1000D55D4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain();
  return a1;
}

uint64_t sub_1002BA178(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 56);
  sub_1000D31B4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002BA1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD3478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002BA218()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BD34A0;
  if (!qword_100BD34A0)
  {
    v1 = sub_100075EB0(&qword_100BD34A8);
    v2[0] = sub_100075EB0(&qword_100BD3430);
    v2[1] = sub_1002BA06C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD34A0);
  }
  return result;
}

uint64_t sub_1002BA2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v10;

  v6 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v6, &v10);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0x6E6F697461636F6CLL;
  *(_QWORD *)(inited + 40) = 0xEA00000000004449;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain(a2);
  v8 = Dictionary.init(dictionaryLiteral:)(inited);
  a3[3] = sub_1000BA294(&qword_100BD34B8);
  a3[4] = sub_1002BA438();
  sub_10005F164(a3);
  return ShortDescription.init(name:_:)(0xD00000000000001CLL, 0x80000001009F87B0, v8, &type metadata for WeatherDataLoadMonitoringAction);
}

uint64_t sub_1002BA3C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1002BA2C4(*v1, v1[1], a1);
}

uint64_t sub_1002BA3D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002BA47C();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1002BA3FC()
{
  unint64_t result;

  result = qword_100BD34B0;
  if (!qword_100BD34B0)
  {
    result = swift_getWitnessTable(&unk_100991180, &type metadata for WeatherDataLoadMonitoringAction);
    atomic_store(result, (unint64_t *)&qword_100BD34B0);
  }
  return result;
}

unint64_t sub_1002BA438()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD34C0;
  if (!qword_100BD34C0)
  {
    v1 = sub_100075EB0(&qword_100BD34B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD34C0);
  }
  return result;
}

unint64_t sub_1002BA47C()
{
  unint64_t result;

  result = qword_100BD34C8;
  if (!qword_100BD34C8)
  {
    result = swift_getWitnessTable(&unk_1009911A8, &type metadata for WeatherDataLoadMonitoringAction);
    atomic_store(result, (unint64_t *)&qword_100BD34C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataLoadMonitoringAction()
{
  return &type metadata for WeatherDataLoadMonitoringAction;
}

void sub_1002BA4C8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1000BA294(&qword_100BD35C8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v8 = 0;
  if (!v6)
    goto LABEL_9;
LABEL_8:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v8 << 6);
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    sub_1000CE46C(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v41);
    *(_QWORD *)&v40 = v17;
    *((_QWORD *)&v40 + 1) = v16;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v17;
    *((_QWORD *)&v38[0] + 1) = v16;
    swift_bridgeObjectRetain(v16);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_10011E834(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_10011E834(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_10011E834(v37, v38);
    sub_10011E834(v38, &v34);
    v18 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v19 = -1 << *((_BYTE *)v3 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)&v7[8 * (v20 >> 6)]) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)&v7[8 * v21];
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)&v7[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)&v7[(v22 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v22;
    v27 = v3[6] + 40 * v22;
    *(_OWORD *)v27 = v30;
    *(_OWORD *)(v27 + 16) = v31;
    *(_QWORD *)(v27 + 32) = v32;
    sub_10011E834(&v34, (_OWORD *)(v3[7] + 32 * v22));
    ++v3[2];
    if (v6)
      goto LABEL_8;
LABEL_9:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_38;
    if (v11 >= v28)
      goto LABEL_36;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_36;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_36;
        v12 = *(_QWORD *)(v29 + 8 * v13);
        if (!v12)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_36;
          v12 = *(_QWORD *)(v29 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v8 = v13;
  }
  v14 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_36:
    swift_release(v3);
    sub_100163978(a1);
    return;
  }
  v12 = *(_QWORD *)(v29 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_36;
    v12 = *(_QWORD *)(v29 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
}

void sub_1002BA888(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  _OWORD v40[4];
  _OWORD v41[2];
  _OWORD v42[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1000BA294(&qword_100BD35E8);
    v3 = (_BYTE *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v37 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v36 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 64;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v38 = 0;
  if (!v6)
    goto LABEL_9;
LABEL_8:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v9 = v8 | (v38 << 6);
  while (1)
  {
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v9);
    *(_QWORD *)&v42[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v9);
    v18 = *(void **)&v42[0];
    *(_QWORD *)&v41[0] = v19;
    v20 = sub_1000A0794(0, (unint64_t *)&qword_100BD35F0, UIFont_ptr);
    v21 = v18;
    v22 = v19;
    swift_dynamicCast((char *)v42 + 8, v41, v20, (char *)&type metadata for Any + 8, 7);
    v23 = *(_QWORD *)&v42[0];
    sub_10011E834((_OWORD *)((char *)v42 + 8), v40);
    sub_10011E834(v40, v42);
    sub_10011E834(v42, v41);
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;
    Hasher.init(_seed:)(&v39);
    String.hash(into:)(&v39, v24, v26);
    v27 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    v28 = -1 << v3[32];
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)&v7[8 * (v29 >> 6)]) == 0)
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      while (++v30 != v33 || (v32 & 1) == 0)
      {
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)&v7[8 * v30];
        if (v35 != -1)
        {
          v31 = __clz(__rbit64(~v35)) + (v30 << 6);
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)&v7[8 * (v29 >> 6)])) | v29 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
    *(_QWORD *)&v7[(v31 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v31;
    *(_QWORD *)(*((_QWORD *)v3 + 6) + 8 * v31) = v23;
    sub_10011E834(v41, (_OWORD *)(*((_QWORD *)v3 + 7) + 32 * v31));
    ++*((_QWORD *)v3 + 2);
    if (v6)
      goto LABEL_8;
LABEL_9:
    v10 = v38 + 1;
    if (__OFADD__(v38, 1))
      goto LABEL_42;
    if (v10 >= v36)
      goto LABEL_40;
    v11 = *(_QWORD *)(v37 + 8 * v10);
    v12 = v38 + 1;
    if (!v11)
    {
      sub_1000C1A50();
      if (v13 == v14)
        goto LABEL_40;
      sub_1000CF7F8();
      if (!v11)
      {
        sub_1000C1A50();
        if (v13 == v14)
          goto LABEL_40;
        sub_1000CF7F8();
        if (!v11)
        {
          sub_1000C1A50();
          if (v13 == v14)
            goto LABEL_40;
          sub_1000CF7F8();
          if (!v11)
            break;
        }
      }
    }
LABEL_28:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v38 = v12;
  }
  v16 = v15 + 4;
  if (v16 >= v36)
  {
LABEL_40:
    swift_release(v3);
    sub_100163978(a1);
    return;
  }
  v11 = *(_QWORD *)(v37 + 8 * v16);
  if (v11)
  {
    v12 = v16;
    goto LABEL_28;
  }
  while (!__OFADD__(v16, 1))
  {
    sub_1000C1A50();
    if (v13 == v14)
      goto LABEL_40;
    sub_1000CF7F8();
    v16 = v17 + 1;
    if (v11)
      goto LABEL_28;
  }
LABEL_43:
  __break(1u);
}

void sub_1002BAC10()
{
  sub_1002BB0F8(&OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___userInfo, (uint64_t (*)(uint64_t))sub_1002BAC24);
}

uint64_t sub_1002BAC24(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  double v13;
  uint64_t v14;
  void *v16;
  Class isa;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;

  v1 = type metadata accessor for String.Encoding(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = IncomingMessageEntity.userInfo.getter(v3);
  dispatch thunk of Column.value.getter(&v28);
  v7 = swift_release(v6);
  v8 = v29;
  if (v29 >= 2)
  {
    v9 = (uint64_t)v28;
    static String.Encoding.utf8.getter(v7);
    v10 = String.data(using:allowLossyConversion:)(v5, 0, v9, v8);
    v12 = v11;
    v13 = sub_1000EE98C(v9, v8);
    (*(void (**)(char *, uint64_t, double))(v2 + 8))(v5, v1, v13);
    if (v12 >> 60 != 15)
    {
      v16 = (void *)objc_opt_self(NSPropertyListSerialization);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v28 = 0;
      v18 = objc_msgSend(v16, "propertyListWithData:options:format:error:", isa, 0, 0, &v28);

      v19 = v28;
      if (v18)
      {
        v20 = v28;
        _bridgeAnyObjectToAny(_:)(&v28, v18);
        swift_unknownObjectRelease(v18);
        v21 = sub_1000BA294(&qword_100BD35D0);
        if ((swift_dynamicCast(&v27, &v28, (char *)&type metadata for Any + 8, v21, 6) & 1) != 0)
        {
          sub_1002BD0D4(v10, v12);
          return v27;
        }
      }
      else
      {
        v22 = v28;
        v23 = _convertNSErrorToError(_:)(v19);

        swift_willThrow(v24, v25);
        swift_errorRelease(v23);
      }
      v14 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
      sub_1002BD0D4(v10, v12);
      return v14;
    }
  }
  return Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
}

void sub_1002BAE8C()
{
  sub_1002BB0F8(&OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___events, (uint64_t (*)(uint64_t))sub_1002BAEA0);
}

void sub_1002BAEA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;

  v0 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1000BA294(&qword_100BD35C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SevereMessage(0);
  v6 = __chkstk_darwin(v24);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = IncomingMessageEntity.id.getter(v6);
  dispatch thunk of Column.value.getter(&v27);
  v10 = swift_release(v9);
  v11 = v28;
  if (!v28)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    return;
  }
  v23 = v27;
  v12 = IncomingMessageEntity.channel.getter(v10);
  dispatch thunk of Column.value.getter(&v25);
  swift_release(v12);
  v14 = v25;
  v13 = v26;
  if (v26 == 1)
    v15 = 0xE700000000000000;
  else
    v15 = v26;
  sub_1002BAC10();
  sub_1002BA4C8(v16);
  v18 = v17;
  v19 = swift_bridgeObjectRelease();
  v20 = IncomingMessageEntity.date.getter(v19);
  dispatch thunk of Column.value.getter(v2);
  swift_release(v20);
  v21 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v21) == 1)
    goto LABEL_13;
  if (v13 == 1)
    v22 = 0x6E776F6E6B6E55;
  else
    v22 = v14;
  sub_1007D3150(v23, v11, v22, v15, v18, (uint64_t)v2, (uint64_t)v5);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v24) == 1)
  {
    sub_100021A68((uint64_t)v5, &qword_100BD35C0);
  }
  else
  {
    sub_1002BD054((uint64_t)v5, (uint64_t)v8);
    swift_bridgeObjectRetain(*((_QWORD *)v8 + 4));
    sub_1002BD098((uint64_t)v8);
  }
}

void sub_1002BB0E4()
{
  sub_1002BB0F8(&OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___notifications, (uint64_t (*)(uint64_t))sub_1002BB14C);
}

void sub_1002BB0F8(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (!v4)
  {
    v5 = a2(v2);
    *(_QWORD *)(v2 + v3) = v5;
    swift_bridgeObjectRetain(v5);
    sub_10003BC58();
    v4 = 0;
  }
  swift_bridgeObjectRetain(v4);
  sub_100079F70();
}

void sub_1002BB14C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];

  v0 = sub_1000BA294(&qword_100BD35B8);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Expression(0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = NotificationStore.severeNotifications.getter(v6);
  v10 = dispatch thunk of Table.query.getter();
  v11 = swift_release(v9);
  v12 = IncomingMessageEntity.messageID.getter(v11);
  dispatch thunk of Column.value.getter(&v14);
  swift_release(v12);
  if (v15)
  {
    v16[3] = &type metadata for String;
    v16[4] = &protocol witness table for String;
    v16[0] = v14;
    v16[1] = v15;
    == infix(_:_:)(0xD000000000000011, 0x80000001009F8900);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v16);
    v13 = type metadata accessor for OrderBy(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v13);
    dispatch thunk of Query.where(_:orderBy:limit:)(v8, v3, 0, 1);
    swift_release(v10);
    sub_100021A68((uint64_t)v3, &qword_100BD35B8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002BB34C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___dateFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___dateFormatter);
  if (!v2)
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    sub_1000BD398(v3, "setDateStyle:");
    sub_1000BD398(v3, "setTimeStyle:");
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  sub_100079F70();
}

char *sub_1002BB3D4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  char *v13;
  id v14;
  objc_super v16;

  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___userInfo] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___events] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___notifications] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___dateFormatter] = 0;
  v5 = OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_mapView;
  v6 = objc_allocWithZone((Class)MKMapView);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_notificationStore] = a1;
  v8 = (uint64_t)&v7[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_message];
  v9 = type metadata accessor for IncomingMessageEntity(0);
  v10 = *(_QWORD *)(v9 - 8);
  sub_100089084(v8, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  swift_retain();

  v16.receiver = v7;
  v16.super_class = (Class)sub_100110220();
  v11 = (char *)objc_msgSendSuper2(&v16, "initWithStyle:", 2);
  v12 = *(void **)&v11[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_mapView];
  v13 = v11;
  v14 = sub_1000C6A30((uint64_t)objc_msgSend(v12, "setDelegate:", v13), "setScrollEnabled:");
  sub_1000C6A30((uint64_t)v14, "setZoomEnabled:");
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  return v13;
}

void sub_1002BB534()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___userInfo] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___events] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___notifications] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController____lazy_storage___dateFormatter] = 0;
  v1 = OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_mapView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)MKMapView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x706F2D6F6ELL, 0xE500000000000000, "Weather/DebugIncomingMessageViewController.swift", 48, 2);
  __break(1u);
}

void sub_1002BB5F8()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  NSString v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CLLocationCoordinate2D v28;
  _QWORD v29[8];
  objc_super v30;

  v30.receiver = v0;
  v30.super_class = (Class)sub_100110220();
  objc_msgSendSuper2(&v30, "viewDidLoad");
  v1 = objc_msgSend(v0, "tableView");
  if (!v1)
  {
LABEL_24:
    __break(1u);
    return;
  }
  v2 = v1;
  v3 = sub_1000A0794(0, (unint64_t *)&qword_100BD35E0, UITableViewCell_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
  v5 = sub_1000B4550();
  objc_msgSend(v2, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v5);

  v6 = sub_1000C6DAC();
  sub_1001207F8(v6, v7, v0);
  sub_1002BAE8C();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8;
    v11 = (void *)objc_opt_self(MKPolygon);
    v12 = *(void **)&v0[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_mapView];
    v13 = v10 + 64;
    v14 = 90.0;
    v15 = -90.0;
    v16 = 180.0;
    v17 = -180.0;
    while (1)
    {
      v18 = *(_QWORD **)v13;
      v19 = *(_QWORD *)(*(_QWORD *)v13 + 16);
      if (!v19)
        break;
      if (v19 == 1)
        goto LABEL_21;
      if (v19 < 3)
        goto LABEL_22;
      if (v19 == 3)
        goto LABEL_23;
      v20 = v18[4];
      v21 = v18[6];
      v22 = v18[7];
      v29[0] = v18[5];
      v29[1] = v20;
      v29[2] = v29[0];
      v29[3] = v21;
      v29[4] = v22;
      v29[5] = v21;
      v29[6] = v22;
      v29[7] = v20;
      sub_100094EDC();
      v23 = objc_msgSend(v11, "polygonWithCoordinates:count:", v29, 4);
      objc_msgSend(v12, "addOverlay:", v23);

      v24 = Array<A>.minLatitude.getter(v18);
      if (v14 >= v24)
        v14 = v24;
      v25 = Array<A>.maxLatitude.getter(v18);
      if (v25 > v15)
        v15 = v25;
      v26 = Array<A>.minLongitude.getter(v18);
      if (v16 >= v26)
        v16 = v26;
      v27 = Array<A>.maxLongitude.getter(v18);
      sub_10009934C();
      if (v27 > v17)
        v17 = v27;
      v13 += 40;
      if (!--v9)
        goto LABEL_19;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v14 = 90.0;
  v15 = -90.0;
  v16 = 180.0;
  v17 = -180.0;
LABEL_19:
  swift_bridgeObjectRelease();
  v28 = CLLocationCoordinate2DMake(v14 + (v15 - v14) * 0.5, v16 + (v17 - v16) * 0.5);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_mapView], "setRegion:animated:", 0, v28.latitude, v28.longitude, (v15 - v14) * 1.5, (v17 - v16) * 1.5);
}

uint64_t sub_1002BB8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  switch(a2)
  {
    case 0:
      return 4;
    case 2:
      sub_1002BAE8C();
      break;
    case 1:
      sub_1002BB0E4();
      break;
    default:
      return 1;
  }
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v3;
}

CGFloat sub_1002BB964()
{
  uint64_t v0;
  CGFloat result;

  v0 = IndexPath.section.getter();
  result = UITableViewAutomaticDimension;
  if (v0 == 3)
    return 400.0;
  return result;
}

void sub_1002BBA5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  Class isa;
  id v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;

  v4 = type metadata accessor for SevereNotificationEntity(0);
  sub_1000C6D9C();
  __chkstk_darwin(v5);
  sub_100098694();
  v6 = sub_1000B4550();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v6, isa);

  sub_1000D9C7C(v8, "setAccessoryType:");
  if (IndexPath.section.getter(v9))
  {
    if (IndexPath.section.getter(v10) == 1)
    {
      v12 = IndexPath.row.getter();
      sub_1002BB0E4();
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v12 < *(_QWORD *)(v13 + 16))
      {
        sub_10008908C(v1, v13+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
        sub_1000986C4();
        sub_1002BC9D0();
        (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
        return;
      }
      __break(1u);
      goto LABEL_23;
    }
    if (IndexPath.section.getter(v11) == 2)
    {
      v15 = IndexPath.row.getter();
      sub_1002BAE8C();
      if ((v15 & 0x8000000000000000) == 0)
      {
        if (v15 < *(_QWORD *)(v16 + 16))
        {
          v17 = v16 + 40 * v15;
          v18 = *(_QWORD *)(v17 + 56);
          swift_bridgeObjectRetain(*(_QWORD *)(v17 + 40));
          swift_bridgeObjectRetain(v18);
          sub_100099360();
          sub_1000986C4();
          sub_1002BC7CC();
          sub_100075DF4();
          swift_bridgeObjectRelease();
          sub_10003BC58();
          return;
        }
        goto LABEL_24;
      }
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
    if (IndexPath.section.getter(v14) == 3)
    {
      v19 = (void *)sub_100098B7C();
      sub_1002BCC4C(v19);
    }
  }
  else if (IndexPath.row.getter())
  {
    if (IndexPath.row.getter() == 1)
    {
      sub_100098B7C();
      sub_1002BC454();
    }
    else if (IndexPath.row.getter() == 2)
    {
      v20 = (void *)sub_100098B7C();
      sub_1002BC544(v20);
    }
    else if (IndexPath.row.getter() == 3)
    {
      v21 = (void *)sub_100098B7C();
      sub_1002BC63C(v21);
    }
  }
  else
  {
    sub_100098B7C();
    sub_1002BC42C();
  }
}

uint64_t sub_1002BBD54(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) > 2)
    return 0;
  else
    return *(_QWORD *)&aNotificaalerts[8 * a2 - 8];
}

unint64_t sub_1002BBD94(uint64_t a1, uint64_t a2)
{
  if (a2 == 2)
    return 0xD000000000000059;
  else
    return 0;
}

void sub_1002BBDC8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  __n128 v33;
  void *v34;
  id v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  void *v74;

  sub_1000986AC();
  v2 = v0;
  sub_1000BA294(&qword_100BD35B8);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_1000986FC();
  v62 = v4;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v59 - v7;
  v67 = type metadata accessor for Expression(0, v6);
  sub_1000C6D9C();
  __chkstk_darwin(v9);
  sub_1000986FC();
  v61 = v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - v12;
  sub_1000BA294(&qword_100BD35D8);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for WeatherAlertEntity(0, v17);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  sub_1000986FC();
  v64 = v18;
  __chkstk_darwin(v19);
  v65 = (uint64_t)&v59 - v20;
  v21 = type metadata accessor for SevereNotificationEntity(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v59 - v27;
  if (IndexPath.section.getter(v26) == 1)
  {
    v30 = IndexPath.row.getter();
    sub_1002BB0E4();
    if ((v30 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v30 < *(_QWORD *)(v31 + 16))
    {
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
      v32(v28, v31+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v30, v21);
      v33 = swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t, __n128))v32)(v24, v28, v21, v33);
      objc_allocWithZone((Class)type metadata accessor for DebugSevereNotificationViewController(0));
      v34 = (void *)sub_1003E8D54((uint64_t)v24);
      v35 = objc_msgSend(v2, "navigationController");
      if (v35)
      {
        v36 = v35;
        sub_1000C0130(v35, "pushViewController:animated:");

        (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
LABEL_12:

      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_22;
  }
  v63 = v0;
  if (IndexPath.section.getter(v29) != 2)
  {
LABEL_14:
    sub_100098640();
    return;
  }
  v37 = IndexPath.row.getter();
  sub_1002BAE8C();
  if ((v37 & 0x8000000000000000) != 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v37 >= *(_QWORD *)(v38 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v39 = (_QWORD *)(v38 + 40 * v37);
  v40 = v39[5];
  v60 = v39[4];
  v41 = v39[7];
  sub_100099360();
  swift_bridgeObjectRetain(v41);
  sub_100094EDC();
  v42 = sub_1000986C4();
  v43 = *(_QWORD *)&v63[OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_notificationStore];
  v44 = NotificationStore.weatherAlerts.getter(v42);
  v59 = v43;
  v45 = dispatch thunk of Table.query.getter(v44);
  sub_10009880C();
  v73 = &type metadata for String;
  v74 = &protocol witness table for String;
  v71 = v60;
  v72 = v40;
  sub_100099360();
  sub_1000C3748();
  sub_10009934C();
  sub_10009D2E0();
  sub_100075DF4();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v71);
  type metadata accessor for OrderBy(0);
  sub_1000D0094((uint64_t)v8);
  dispatch thunk of Query.first(_:orderBy:)(v13, v8);
  swift_release(v45);
  sub_100021A68((uint64_t)v8, &qword_100BD35B8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v13, v67);
  v46 = v68;
  v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v68);
  if (v47 == 1)
  {
    sub_100021A68((uint64_t)v16, &qword_100BD35D8);
    goto LABEL_14;
  }
  v48 = v65;
  sub_10008908C(v65, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 32));
  v50 = NotificationStore.severeNotifications.getter(v49);
  v60 = dispatch thunk of Table.query.getter(v50);
  v51 = sub_10009880C();
  WeatherAlertEntity.alertIdentifier.getter(v51);
  dispatch thunk of Column.value.getter(&v69);
  sub_10009880C();
  if (v70)
  {
    v73 = &type metadata for String;
    v74 = &protocol witness table for String;
    v71 = v69;
    v72 = v70;
    v52 = v61;
    sub_1000C3748();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v71);
    v53 = v62;
    sub_1000D0094(v62);
    v58 = (_QWORD *)dispatch thunk of Query.where(_:orderBy:limit:)(v52, v53, 0, 1);
    sub_10009880C();
    sub_100021A68(v53, &qword_100BD35B8);
    sub_10010990C();
    v54 = v66;
    v55 = v64;
    sub_10008908C(v64, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 16));
    objc_allocWithZone((Class)type metadata accessor for DebugIncomingWeatherAlertViewController(0));
    v34 = sub_100565A68(v55, v58);
    v56 = objc_msgSend(v63, "navigationController");
    if (v56)
    {
      v57 = v56;
      sub_1000C0130(v56, "pushViewController:animated:");

      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v48, v46);
      goto LABEL_14;
    }
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v48, v46);
    goto LABEL_12;
  }
LABEL_24:
  __break(1u);
}

void sub_1002BC42C()
{
  sub_1002BC478();
}

void sub_1002BC454()
{
  sub_1002BC478();
}

void sub_1002BC478()
{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v8[5];

  sub_1000986AC();
  v1 = v0;
  v3 = v2;
  v4 = sub_1000B46F8();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1000BBF38();
  v6 = sub_1000BA734();
  v1(v6);
  dispatch thunk of Column.value.getter(v8);
  sub_10009880C();
  sub_1000DB26C();
  v8[3] = v4;
  v8[4] = &protocol witness table for UIListContentConfiguration;
  v7 = sub_10005F164(v8);
  sub_1000C5314((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_1000CFC0C((uint64_t)v8);
  sub_1000D9C7C(v3, "setSelectionStyle:");
  sub_1000C1D6C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_100098640();
}

uint64_t sub_1002BC544(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  _QWORD *v5;
  _QWORD v7[5];

  v2 = sub_1000B46F8();
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_1000BBF38();
  sub_1000BA734();
  IncomingMessageEntity.channel.getter(v4);
  dispatch thunk of Column.value.getter(v7);
  sub_10009880C();
  sub_1000DB26C();
  v7[3] = v2;
  v7[4] = &protocol witness table for UIListContentConfiguration;
  v5 = sub_10005F164(v7);
  sub_1000C5314((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1000CFC0C((uint64_t)v7);
  sub_1000D9C7C(a1, "setSelectionStyle:");
  return sub_1000C1D6C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

uint64_t sub_1002BC63C(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t result;
  Class isa;
  id v14;
  _QWORD *v15;
  _QWORD v16[5];

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098694();
  v6 = sub_1000B46F8();
  sub_1000C6D9C();
  __chkstk_darwin(v7);
  sub_1000BBF38();
  sub_1000BA734();
  sub_1002BB34C();
  v9 = v8;
  IncomingMessageEntity.date.getter(v10);
  dispatch thunk of Column.value.getter(v2);
  sub_10009880C();
  v11 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v2, v11);
    v14 = objc_msgSend(v9, "stringFromDate:", isa);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    sub_1000DB26C();
    v16[3] = v6;
    v16[4] = &protocol witness table for UIListContentConfiguration;
    v15 = sub_10005F164(v16);
    sub_100089084((uint64_t)v15, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    UITableViewCell.contentConfiguration.setter(v16);
    sub_1000D9C7C(a1, "setSelectionStyle:");
    return sub_1000BEA30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  return result;
}

void sub_1002BC7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;

  sub_1000986AC();
  v2 = v1;
  v4 = v3;
  v5 = sub_1000B46F8();
  sub_1000C6D9C();
  __chkstk_darwin(v6);
  sub_1000C46D0();
  sub_100094EDC();
  sub_1000BA734();
  UIListContentConfiguration.textProperties.modify(&v25);
  sub_1000999D0();
  sub_1000D0C6C();
  sub_1000C09D8();
  sub_1000C1DB4();
  sub_1000D0C6C();
  *(_QWORD *)&v25 = 0;
  *((_QWORD *)&v25 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v25, "Bounding Box: ");
  HIBYTE(v25) = -18;
  v7 = *(_QWORD *)(v2 + 32);
  v29 = v7;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    v23 = v0;
    v24 = v4;
    v28 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v7);
    sub_10009AAB0();
    v9 = v28;
    v10 = (double *)(v7 + 32);
    do
    {
      v11 = Double.description.getter(*v10);
      v13 = v12;
      v28 = v9;
      v14 = v9[2];
      if (v14 >= v9[3] >> 1)
      {
        sub_10009AAB0();
        v9 = v28;
      }
      v9[2] = v14 + 1;
      v15 = &v9[2 * v14];
      v15[4] = v11;
      v15[5] = v13;
      ++v10;
      --v8;
    }
    while (v8);
    sub_100158858(&v29);
    v0 = v23;
    v4 = v24;
  }
  v28 = v9;
  v16 = sub_1000BA294(&qword_100BF1280);
  v17 = sub_1000B2E60();
  v18 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v16, v17);
  v20 = v19;
  sub_100075DF4();
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  sub_10009D2E0();
  sub_1000DB26C();
  v26 = v5;
  v27 = &protocol witness table for UIListContentConfiguration;
  v22 = sub_10005F164(&v25);
  sub_1000C5314((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  sub_1000CFC0C((uint64_t)&v25);
  sub_1000BD398(v4, "setAccessoryType:");
  sub_1000C1D6C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_100098640();
}

void sub_1002BC9D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  Class isa;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  unint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  void (*v23)(uint64_t *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30[2];

  sub_1000986AC();
  v2 = v1;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1000B46F8();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = sub_1000C46D0();
  SevereNotificationEntity.id.getter(v8);
  dispatch thunk of Column.value.getter(&v26);
  sub_10009880C();
  sub_1000BA734();
  UIListContentConfiguration.textProperties.modify(&v26);
  sub_1000C1DB4();
  sub_1000E76F8();
  sub_1000C09D8();
  sub_1000999D0();
  sub_1000E76F8();
  v26 = 0;
  v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v26 = 0x203A65746144;
  v27 = 0xE600000000000000;
  sub_1002BB34C();
  v10 = v9;
  SevereNotificationEntity.date.getter();
  dispatch thunk of Column.value.getter(v5);
  sub_10009880C();
  v11 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v11) == 1)
  {
    __break(1u);
  }
  else
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
    v13 = objc_msgSend(v10, "stringFromDate:", isa);

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17._countAndFlagsBits = v14;
    v17._object = v16;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = sub_1000C6DAC();
    String.append(_:)(v18);
    SevereNotificationEntity.subscription.getter();
    dispatch thunk of Column.value.getter(v30);
    sub_10009880C();
    v19 = sub_1004907AC(v30[0], v30[1]);
    v21 = v20;
    sub_1000986C4();
    v22._countAndFlagsBits = v19;
    v22._object = v21;
    String.append(_:)(v22);
    sub_10009934C();
    sub_1000DB26C();
    v23 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(&v26);
    UIListContentConfiguration.TextProperties.numberOfLines.setter(0);
    v23(&v26, 0);
    v28 = v6;
    v29 = &protocol witness table for UIListContentConfiguration;
    v24 = sub_10005F164(&v26);
    sub_100089084((uint64_t)v24, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    UITableViewCell.contentConfiguration.setter(&v26);
    sub_1000BD398(v2, "setAccessoryType:");
    sub_1000BEA30(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    sub_100098640();
  }
}

void sub_1002BCC4C(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Weather34DebugIncomingMessageViewController_mapView);
  objc_msgSend(a1, "bounds");
  objc_msgSend(v3, "setFrame:", 0.0, 0.0);
  v4 = objc_msgSend(a1, "contentView");
  objc_msgSend(v4, "addSubview:", v3);

}

void sub_1002BCCD8()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugIncomingMessageViewController", 42, "init(style:)", 12, 0);
  __break(1u);
}

void sub_1002BCD10()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugIncomingMessageViewController", 42, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_1002BCD60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_100110220();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugIncomingMessageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD3530;
  if (!qword_100BD3530)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugIncomingMessageViewController);
  return result;
}

uint64_t sub_1002BCE5C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for IncomingMessageEntity(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = "\b";
    v4[4] = "\b";
    v4[5] = "\b";
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1002BCEF4(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v2 = objc_msgSend(objc_allocWithZone((Class)MKPolygonRenderer), "initWithOverlay:", a2);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "grayColor");
  sub_100098A10((uint64_t)v5, "setStrokeColor:");

  v6 = v4;
  v7 = objc_msgSend(v6, "strokeColor");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.2);

  }
  else
  {
    v9 = 0;
  }
  sub_100098A10((uint64_t)v7, "setFillColor:");

  objc_msgSend(v6, "setLineWidth:", 1.0);
  sub_100079F70();
}

uint64_t sub_1002BD054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SevereMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002BD098(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SevereMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002BD0D4(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10021D04C(result, a2);
  return result;
}

Swift::Int sub_1002BD0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  sub_10003BC58();
  return v5;
}

uint64_t destroy for ExecutionContext(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 6);
  swift_release(a1[11]);
  swift_unknownObjectRelease(a1[12]);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 14);
}

uint64_t initializeWithCopy for ExecutionContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  __int128 v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a1 + 48;
  v9 = a2 + 48;
  v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v10;
  v11 = v10;
  v12 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v10 - 8);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  v13 = swift_retain(v7);
  v12(v8, v9, v11, v13);
  v14 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v14;
  v20 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v20;
  v15 = a2 + 112;
  v16 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v16;
  v17 = v16;
  v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  swift_retain(v14);
  swift_unknownObjectRetain(v20);
  v18(a1 + 112, v15, v17);
  return a1;
}

uint64_t assignWithCopy for ExecutionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release(v8);
  sub_100094D04((_QWORD *)(a1 + 48), (_QWORD *)(a2 + 48));
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v10;
  swift_unknownObjectRetain(v10);
  swift_unknownObjectRelease(v12);
  *(_QWORD *)(a1 + 104) = v11;
  sub_100094D04((_QWORD *)(a1 + 112), (_QWORD *)(a2 + 112));
  return a1;
}

void *initializeWithTake for ExecutionContext(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t assignWithTake for ExecutionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 48));
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_unknownObjectRelease(v11);
  *(_QWORD *)(a1 + 104) = v10;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 112));
  v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecutionContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 152))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExecutionContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecutionContext()
{
  return &type metadata for ExecutionContext;
}

uint64_t sub_1002BD510(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain(v7);
    if (v8 == 255)
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v9 = a2[2];
      v10 = a2[3];
      sub_100121DEC(v9, v10, v8);
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      *(_BYTE *)(a1 + 32) = v8;
    }
    v12 = a2[5];
    *(_QWORD *)(a1 + 40) = v12;
    v13 = a3[7];
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = type metadata accessor for Date(0);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
    v18 = swift_bridgeObjectRetain(v12);
    v17(v14, v15, v16, v18);
    v19 = a3[9];
    *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)(a1 + v19) = *(uint64_t *)((char *)a2 + v19);
  }
  return a1;
}

uint64_t sub_1002BD620(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain(v6);
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    sub_100121DEC(v8, v9, v7);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v7;
  }
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Date(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
  v16 = swift_bridgeObjectRetain(v10);
  v15(v12, v13, v14, v16);
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  return a1;
}

uint64_t sub_1002BD704(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = (__int128 *)(a1 + 16);
  v8 = (__int128 *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v9 == 255)
    {
      v18 = *v8;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v7 = v18;
    }
    else
    {
      v15 = *(_QWORD *)(a2 + 16);
      v16 = *(_QWORD *)(a2 + 24);
      sub_100121DEC(v15, v16, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v15;
      *(_QWORD *)(a1 + 24) = v16;
      *(_BYTE *)(a1 + 32) = v9;
    }
  }
  else if (v9 == 255)
  {
    sub_1002BD858(a1 + 16);
    v17 = *(_BYTE *)(a2 + 32);
    *v7 = *v8;
    *(_BYTE *)(a1 + 32) = v17;
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    sub_100121DEC(v10, v11, *(_BYTE *)(a2 + 32));
    v12 = *(_QWORD *)(a1 + 16);
    v13 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    v14 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v9;
    sub_100121E04(v12, v13, v14);
  }
  v19 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1002BD858(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for TemporalString - 1) + 8))();
  return a1;
}

uint64_t sub_1002BD88C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_1002BD91C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a1 + 32);
  if (v8 == 255)
    goto LABEL_5;
  v9 = *(unsigned __int8 *)(a2 + 32);
  if (v9 == 255)
  {
    sub_1002BD858(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *v7;
  *(_BYTE *)(a1 + 32) = v9;
  sub_100121E04(v10, v11, v8);
LABEL_6:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  return a1;
}

uint64_t sub_1002BDA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002BDA10);
}

uint64_t sub_1002BDA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1002BDA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002BDA90);
}

uint64_t sub_1002BDA90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1002BDAFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (sub_100099264(v4, v5, *a2, v6) & 1) != 0)
    return static TemporalString.== infix(_:_:)(a1[2]);
  else
    return 0;
}

uint64_t sub_1002BDB64@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v3, &v14);
  v5 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10097DA20;
  *(_QWORD *)(inited + 32) = 0x6C64616568627573;
  *(_QWORD *)(inited + 40) = 0xEB00000000656E69;
  v6 = *v1;
  v7 = v1[1];
  if (!v7)
    v6 = 0x3E6C696E3CLL;
  v8 = 0xE500000000000000;
  if (v7)
    v8 = v1[1];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 1937207154;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v9 = v1[5];
  *(_QWORD *)(inited + 120) = sub_1000BA294(&qword_100BD36B0);
  *(_QWORD *)(v5 + 96) = v9;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  Dictionary.init(dictionaryLiteral:)(v5);
  *(_QWORD *)(a1 + 24) = sub_1000BA294(&qword_100BD36B8);
  v10 = sub_10005F1A0(&qword_100BD36C0, &qword_100BD36B8);
  sub_1000BBEC4(v10);
  v11 = type metadata accessor for MoonComponentViewModel(0);
  return sub_1000B4700(22, 0x80000001009912B0, v12, v11);
}

uint64_t sub_1002BDCC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1002BDEF8(&qword_100BD36C8, (uint64_t)&unk_1009913B0);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_1002BDCF8@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[128];
  _BYTE v9[24];
  __int128 v10;

  v3 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v3, v8);
  *(_OWORD *)(inited + 16) = xmmword_10097DA20;
  *(_QWORD *)(inited + 32) = 0x6C6562616CLL;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v10 = *v1;
  *(_OWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x65756C6176;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  sub_1002BDF38((uint64_t)(v1 + 1), (uint64_t)v9);
  *(_QWORD *)(inited + 120) = &type metadata for TemporalString;
  sub_1002BDF38((uint64_t)v9, inited + 96);
  sub_1002BDF74((uint64_t)&v10);
  sub_1002BDF9C((uint64_t)v9);
  Dictionary.init(dictionaryLiteral:)(inited);
  *(_QWORD *)(a1 + 24) = sub_1000BA294(&qword_100BD36D0);
  v5 = sub_10005F1A0(&qword_100BD36D8, &qword_100BD36D0);
  sub_1000BBEC4(v5);
  return sub_1000B4700(26, 0x80000001009F8A10, v6, (uint64_t)&type metadata for MoonComponentViewModel.Row);
}

uint64_t sub_1002BDE34@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BDCF8(a1);
}

uint64_t sub_1002BDE6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002BDFCC();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1002BDE98()
{
  unint64_t result;

  result = qword_100BD36A0;
  if (!qword_100BD36A0)
  {
    result = swift_getWitnessTable(&unk_100991330, &type metadata for MoonComponentViewModel.Row);
    atomic_store(result, (unint64_t *)&qword_100BD36A0);
  }
  return result;
}

uint64_t sub_1002BDED4()
{
  return sub_1002BDEF8(&qword_100BD36A8, (uint64_t)&unk_100991388);
}

uint64_t sub_1002BDEF8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MoonComponentViewModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002BDF38(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TemporalString - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1002BDF74(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1002BDF9C(uint64_t a1)
{
  sub_100121DEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

unint64_t sub_1002BDFCC()
{
  unint64_t result;

  result = qword_100BD36E0;
  if (!qword_100BD36E0)
  {
    result = swift_getWitnessTable(&unk_100991358, &type metadata for MoonComponentViewModel.Row);
    atomic_store(result, (unint64_t *)&qword_100BD36E0);
  }
  return result;
}

double destroy for MoonComponentViewModel.Row(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_100121E04(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for MoonComponentViewModel.Row(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  sub_100121DEC(v4, v5, v6);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for MoonComponentViewModel.Row(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2[1];
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  v5 = v2[2];
  v6 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_100121DEC(v5, v6, v2);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_100121E04(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for MoonComponentViewModel.Row(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_100121E04(v6, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for Up()
{
  return &type metadata for Up;
}

uint64_t AppLaunchCountMonitor.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 32));
  return v0;
}

uint64_t sub_1002BE184()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BE1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for AppDependencyManager(0);
  v7 = static AppDependencyManager.shared.getter(v2, v3, v4, v5, v6);
  AppDependencyManager.addWeatherDependencies(from:)(v1 + 16);
  swift_release(v7);
  sub_1002BE220(v1 + 16);
  v8 = sub_1000BA294(&qword_100BD3860);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return Promise.init(value:)(v9);
}

uint64_t sub_1002BE220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13[2];
  _OWORD v14[2];
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for AppDependencyManager(0);
  v9 = static AppDependencyManager.shared.getter(v4, v5, v6, v7, v8);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_100043CA8(a1, (uint64_t)v13);
  v10 = swift_allocObject(&unk_100B6A8A8, 64, 7);
  *(_QWORD *)(v10 + 16) = v2;
  sub_10003C800(v13, v10 + 24);
  swift_retain();
  v11 = sub_1000BA294(&qword_100BD3878);
  AppDependencyManager.add<A>(key:dependency:)(v14, &unk_100BD3870, v10, v11);
  swift_release(v9);
  swift_release(v10);
  return sub_1002BE658((uint64_t)v14);
}

uint64_t sub_1002BE2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1002BE304, 0, 0);
}

uint64_t sub_1002BE304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1);
  return swift_task_switch(sub_1002BE36C, v2, v3);
}

uint64_t sub_1002BE36C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  sub_1002BE3B8(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002BE3B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;

  v4 = sub_1000BA294(&qword_100BD3878);
  v5 = a1[3];
  v6 = a1[4];
  sub_1000DB418(a1, v5);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v5, v6);
  if (v9)
    return sub_10003C800(&v8, a2);
  __break(1u);
  return result;
}

uint64_t sub_1002BE444()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  v1 = (char *)v0 + OBJC_IVAR____TtC7Weather31AppIntentsDependencyStartupTask_executionPhase;
  v2 = type metadata accessor for StartupTaskExecutionPhase(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002BE49C()
{
  return type metadata accessor for AppIntentsDependencyStartupTask(0);
}

uint64_t type metadata accessor for AppIntentsDependencyStartupTask(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD37B8;
  if (!qword_100BD37B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppIntentsDependencyStartupTask);
  return result;
}

uint64_t sub_1002BE4DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "(";
  result = type metadata accessor for StartupTaskExecutionPhase(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002BE558@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC7Weather31AppIntentsDependencyStartupTask_executionPhase;
  v4 = type metadata accessor for StartupTaskExecutionPhase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002BE5A4()
{
  return sub_1002BE1A8();
}

uint64_t sub_1002BE5C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002BE5F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100BD386C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10014E920;
  return sub_1002BE2E8(a1, v4, v1 + 24);
}

uint64_t sub_1002BE658(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BD3880);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for LoadStatisticsOnDemandStoreObserver()
{
  return &type metadata for LoadStatisticsOnDemandStoreObserver;
}

uint64_t sub_1002BE6A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v8[2];

  v3 = *(_QWORD *)(v1 + 56);
  sub_100043CA8(v1 + 16, (uint64_t)v8);
  *(_QWORD *)(a1 + 16) = swift_getKeyPath(&unk_100991618);
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = swift_getKeyPath(&unk_100991648);
  *(_BYTE *)(a1 + 40) = 0;
  swift_retain();
  v4 = sub_1000BA294(&qword_100BC4428);
  v5 = sub_1002BE770();
  *(_QWORD *)a1 = ObservedObject.init(wrappedValue:)(v3, v4, v5);
  *(_QWORD *)(a1 + 8) = v6;
  return sub_10003C800(v8, a1 + 48);
}

uint64_t type metadata accessor for MoonDetailModule()
{
  return objc_opt_self(_TtC7Weather16MoonDetailModule);
}

unint64_t sub_1002BE770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4430;
  if (!qword_100BC4430)
  {
    v1 = sub_100075EB0(&qword_100BC4428);
    result = swift_getWitnessTable(&unk_1009D9950, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4430);
  }
  return result;
}

uint64_t property wrapper backing initializer of Debounced._value(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 - 8);
  v5 = __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  sub_1001C4C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

void Debounced.wrappedValue.getter()
{
  uint64_t v0;

  sub_1000B470C();
  sub_1000DD8BC((uint64_t)&unk_100991678);
  v0 = sub_1000DCCF8((uint64_t)&unk_1009916B0);
  sub_1000BA754(v0);
  sub_100089020();
  sub_1000B439C();
  sub_1000BBF54();
}

void (*Debounced.wrappedValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  Debounced.wrappedValue.getter();
  return sub_1001C4E34;
}

uint64_t Debounced.__allocating_init<A>(wrappedValue:dueTime:scheduler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  Debounced.init<A>(wrappedValue:dueTime:scheduler:)(a1, a2, a3, a4, a5);
  return v11;
}

_QWORD *Debounced.init<A>(wrappedValue:dueTime:scheduler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t AssociatedConformanceWitness;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t WitnessTable;
  uint64_t v53;
  uint64_t v54;
  uint64_t AssociatedTypeWitness;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[5];

  v6 = v5;
  v60 = a3;
  v63 = a2;
  v8 = (_QWORD *)*v5;
  v51 = a5;
  v53 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a5, a4, &protocol requirements base descriptor for Scheduler, &associated type descriptor for Scheduler.SchedulerOptions);
  v11 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  sub_1000C3778();
  __chkstk_darwin(v12);
  v47 = (uint64_t)&v47 - v13;
  v14 = v8[10];
  v15 = type metadata accessor for CurrentValueSubject(255, v14, &type metadata for Never, &protocol witness table for Never);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v15);
  v64[0] = v15;
  v64[1] = a4;
  v64[2] = WitnessTable;
  v64[3] = a5;
  v16 = type metadata accessor for Publishers.Debounce(0, v64);
  v54 = *(_QWORD *)(v16 - 8);
  sub_1000C3778();
  __chkstk_darwin(v17);
  v19 = (char *)&v47 - v18;
  v50 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Debounce<A, B>, v16);
  v56 = type metadata accessor for Publishers.Drop(0, v16, v50);
  v59 = *(_QWORD *)(v56 - 8);
  sub_1000C3778();
  __chkstk_darwin(v20);
  v48 = (char *)&v47 - v21;
  v62 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v6 + v8[14]) = &_swiftEmptySetSingleton;
  v61 = a1;
  sub_1000C5C6C((uint64_t)v24);
  sub_1000BBC6C((uint64_t)v6 + *(_QWORD *)(*v6 + 96), (uint64_t)v64);
  v49 = v8[11];
  property wrapper backing initializer of Debounced._value((uint64_t)v24, v14);
  swift_endAccess(v64);
  sub_1000C5C6C((uint64_t)v24);
  v25 = CurrentValueSubject.__allocating_init(_:)(v24);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 104)) = v25;
  v64[0] = v25;
  v26 = v47;
  _s7Weather24LocationCompositionStateOwst_0(v47, 1, 1, AssociatedTypeWitness);
  v27 = swift_retain();
  v28 = v60;
  v29 = v53;
  v30 = v51;
  Publisher.debounce<A>(for:scheduler:options:)(v63, v60, v26, v15, v53, WitnessTable, v51, v27);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v26, v58);
  swift_release(v64[0]);
  v31 = v48;
  Publisher.dropFirst(_:)(1, v16, v50);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v16);
  v32 = swift_allocObject(&unk_100B6A950, 24, 7);
  swift_weakInit(v32 + 16);
  v33 = (_QWORD *)swift_allocObject(&unk_100B6A978, 56, 7);
  v33[2] = v14;
  v33[3] = v29;
  v34 = v29;
  v33[4] = v49;
  v33[5] = v30;
  v35 = v30;
  v33[6] = v32;
  swift_retain();
  v36 = v56;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Drop<A>, v56);
  v38 = v31;
  v40 = Publisher<>.sink(receiveValue:)(sub_1002BF1F0, v33, v36, v37, v39);
  sub_1000B439C();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v36);
  sub_100089020();
  v41 = (uint64_t)v6 + *(_QWORD *)(*v6 + 112);
  sub_1000BBC6C(v41, (uint64_t)v64);
  AnyCancellable.store(in:)(v41);
  swift_endAccess(v64);
  v42 = swift_release(v40);
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v34 - 8) + 8))(v28, v34, v42);
  v43 = swift_getAssociatedTypeWitness(255, v35, v34, &protocol requirements base descriptor for Scheduler, &associated type descriptor for Scheduler.SchedulerTimeType);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v35, v34, v43, &protocol requirements base descriptor for Scheduler, &associated conformance descriptor for Scheduler.Scheduler.SchedulerTimeType: Strideable);
  v45 = swift_getAssociatedTypeWitness(0, AssociatedConformanceWitness, v43, &protocol requirements base descriptor for Strideable, &associated type descriptor for Strideable.Stride);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v63, v45);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v14);
  return v6;
}

uint64_t sub_1002BEDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v8 = *(_QWORD *)(a3 - 8);
  v9 = __chkstk_darwin(a1);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v13 = &v26[-v12 - 8];
  v15 = v14 + 16;
  swift_beginAccess(v14 + 16, v26, 0, 0);
  result = swift_weakLoadStrong(v15);
  if (result)
  {
    v17 = result;
    __chkstk_darwin(result);
    *(&v25 - 2) = a3;
    *(&v25 - 1) = a5;
    KeyPath = swift_getKeyPath(&unk_100991678);
    __chkstk_darwin(KeyPath);
    *(&v25 - 2) = a3;
    *(&v25 - 1) = a5;
    v19 = swift_getKeyPath(&unk_1009916B0);
    static Published.subscript.getter(v13, v17, KeyPath, v19);
    swift_release(KeyPath);
    swift_release(v19);
    LOBYTE(KeyPath) = dispatch thunk of static Equatable.== infix(_:_:)(v13, a1, a3, a5);
    v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v13, a3);
    if ((KeyPath & 1) != 0)
    {
      return swift_release(v17);
    }
    else
    {
      v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v22 = v21(v13, a1, a3);
      __chkstk_darwin(v22);
      *(&v25 - 2) = a3;
      *(&v25 - 1) = a5;
      v23 = swift_getKeyPath(&unk_100991678);
      __chkstk_darwin(v23);
      *(&v25 - 2) = a3;
      *(&v25 - 1) = a5;
      v24 = swift_getKeyPath(&unk_1009916B0);
      v21(v11, (uint64_t)v13, a3);
      static Published.subscript.setter(v11, v17, v23, v24);
      return ((uint64_t (*)(char *, uint64_t))v20)(v13, a3);
    }
  }
  return result;
}

void sub_1002BF018()
{
  uint64_t v0;

  sub_1000DD8BC((uint64_t)&unk_100991678);
  v0 = sub_1000DCCF8((uint64_t)&unk_1009916B0);
  sub_1000BA754(v0);
  sub_100089020();
  sub_1000B439C();
  sub_1000BBF54();
}

uint64_t sub_1002BF07C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *);
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v18[4];

  v5 = *(_QWORD *)(a4 + a3 - 16);
  v6 = *(_QWORD *)(a4 + a3 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v18 - v11;
  v13 = *(void (**)(char *))(v7 + 16);
  v13((char *)v18 - v11);
  v14 = *a2;
  v18[2] = v5;
  v18[3] = v6;
  KeyPath = swift_getKeyPath(&unk_100991678);
  v18[0] = v5;
  v18[1] = v6;
  v16 = swift_getKeyPath(&unk_1009916B0);
  ((void (*)(char *, char *, uint64_t))v13)(v10, v12, v5);
  swift_retain(v14);
  static Published.subscript.setter(v10, v14, KeyPath, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v5);
}

uint64_t sub_1002BF190()
{
  return 16;
}

__n128 sub_1002BF19C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1002BF1A8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BF1CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002BF1F0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1002BEDDC(a1, v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_1002BF200(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, unint64_t, uint64_t, __n128);
  __n128 v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v3 = (uint64_t)a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + ((v6 + 32) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v19 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v3 = v19 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)v3 = *(_QWORD *)a2;
    *(_QWORD *)(v3 + 8) = v10;
    *(_BYTE *)(v3 + 16) = *(_BYTE *)(a2 + 16);
    v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
    *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + 24) = v11;
    v12 = ((v3 & 0xFFFFFFFFFFFFFFF8) + v6 + 32) & ~v6;
    v13 = ((a2 & 0xFFFFFFFFFFFFFFF8) + v6 + 32) & ~v6;
    v14 = *(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v5 + 16);
    swift_bridgeObjectRetain(v10);
    v15 = swift_retain(v11);
    v14(v12, v13, v4, v15);
    v16 = (_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    v17 = (uint64_t *)((v7 + v13) & 0xFFFFFFFFFFFFFFF8);
    v18 = *v17;
    *v16 = *v17;
    v19 = v17[1];
    v16[1] = v19;
    swift_retain(v18);
  }
  swift_retain(v19);
  return v3;
}

uint64_t sub_1002BF320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 32 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  v7 = (v5 + 32 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(v6, v7);
  *(_OWORD *)((*(_QWORD *)(v4 + 64) + 7 + v6) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v4 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1002BF3B8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (unint64_t)a2;
  v6 = a2[1];
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v4 + 16);
  v4 &= 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(_QWORD *)(v4 + 24);
  swift_release(v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 32 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  v12 = (v10 + 32 + v4) & ~v10;
  (*(void (**)(unint64_t, uint64_t))(v9 + 40))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (uint64_t *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (uint64_t *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = *v14;
  *v14 = *v15;
  swift_release(v16);
  v17 = v14[1];
  v14[1] = v15[1];
  swift_release(v17);
  return a1;
}

uint64_t sub_1002BF488(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  char v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v21;

  v6 = *a2;
  type metadata accessor for WireframeScrollInterestView(0, a4, a5, a4);
  if (v6 != 1)
    return sub_10012C634();
  v7 = sub_1000BA294(&qword_100BD3A38);
  State.wrappedValue.getter(&v21, v7);
  v8 = v21;
  swift_release(v21);
  if (v8)
  {
    if (qword_100BC2410 != -1)
      swift_once(&qword_100BC2410, sub_10015961C);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_1000AECD4(v9, (uint64_t)qword_100CAF028);
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.error.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "Should not have token when starting to scroll", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    sub_10012C634();
  }
  v15 = *(_BYTE *)(a3 + 16);
  v16 = *(_QWORD *)a3;
  v17 = *(void **)(a3 + 8);
  swift_bridgeObjectRetain(v17);
  v18._countAndFlagsBits = v16;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19 = sub_1007BF388(v15, 0x2D6C6C6F726373, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  v21 = v19;
  return State.wrappedValue.setter(&v21, v7);
}

uint64_t sub_1002BF66C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  sub_1000BA76C(0, v7, v8, a4);
  return sub_1002BF488(a1, a2, v4 + v9, v7, v8);
}

uint64_t sub_1002BF6C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;

  v2 = a1[1];
  v8 = *a1;
  v1 = v8;
  v9 = &type metadata for Bool;
  v10 = v2;
  v11 = &protocol witness table for Bool;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v8, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v4 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, &type metadata for _AppearanceActionModifier);
  v8 = v1;
  v9 = &type metadata for Bool;
  v10 = v2;
  v11 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v6 = type metadata accessor for ScrollEventStateReader(255, v4, WitnessTable);
  return swift_getWitnessTable(&protocol conformance descriptor for ScrollEventStateReader<A>, v6);
}

uint64_t sub_1002BF7A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10[2];

  v3 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100043CA8(v1 + 16, (uint64_t)v10);
  *v5 = swift_getKeyPath(&unk_100991848);
  v6 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  swift_retain();
  return sub_1004093DC(v7, v10, (uint64_t)v5, 0, a1);
}

uint64_t type metadata accessor for SearchModule()
{
  return objc_opt_self(_TtC7Weather12SearchModule);
}

uint64_t assignWithCopy for MainViewFullscreenMapOverlayModifier(uint64_t a1, uint64_t a2)
{
  sub_100094D04((_QWORD *)a1, (_QWORD *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MainViewFullscreenMapOverlayModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainViewFullscreenMapOverlayModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MainViewFullscreenMapOverlayModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1002BF98C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v19[9];
  uint64_t v20;

  v6 = type metadata accessor for FullscreenMapTransitionContainer(0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  if (*(_BYTE *)(a2 + 48) != 1)
    return _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v6);
  v10 = *((_QWORD *)a1 + 1);
  v9 = *((_QWORD *)a1 + 2);
  v11 = *a1;
  sub_100043CA8(a2, (uint64_t)(v8 + 24));
  v12 = *(_QWORD *)(a2 + 40);
  *v8 = v11;
  *((_QWORD *)v8 + 1) = v10;
  *((_QWORD *)v8 + 2) = v9;
  *((_QWORD *)v8 + 8) = v12;
  *((_QWORD *)v8 + 9) = swift_getKeyPath(&unk_1009918F8);
  v8[80] = 0;
  v13 = &v8[*(int *)(v6 + 32)];
  *v13 = swift_getKeyPath(&unk_100991920);
  v14 = sub_1000BA294(&qword_100BC37E0);
  swift_storeEnumTagMultiPayload(v13, v14, 0);
  v15 = &v8[*(int *)(v6 + 36)];
  v19[0] = 4;
  swift_bridgeObjectRetain(v9);
  State.init(wrappedValue:)(v19, &unk_100B69540);
  v16 = v20;
  *v15 = v19[1];
  *((_QWORD *)v15 + 1) = v16;
  sub_10007802C((uint64_t)v8, a3, type metadata accessor for FullscreenMapTransitionContainer);
  return _s7Weather24LocationCompositionStateOwst_0(a3, 0, 1, v6);
}

uint64_t sub_1002BFB10()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 65, 7);
}

uint64_t sub_1002BFB34@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002BF98C(a1, v2 + 16, a2);
}

void sub_1002BFB3C()
{
  uint64_t (*v0)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t (*v16)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v17;
  uint64_t (**v18)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v2 = (uint64_t *)sub_100098B88();
  sub_1002C3CE0(v2, v3);
  v4 = (_OWORD *)swift_allocObject(&unk_100B6AE20, 72, 7);
  sub_1000C5C78(v4, v5, v6, v7, v8, v9, v10, v11, v19, v20, v21, v12);
  *(_QWORD *)(v13 + 64) = v22;
  v14 = static Alignment.center.getter(v13);
  v16 = v15;
  v17 = sub_1000BA294(&qword_100BD3D28);
  sub_1000CCA7C(v17);
  v18 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v1 + *(int *)(sub_1000BA294(&qword_100BD3D30) + 36));
  *v18 = sub_1002C3D48;
  v18[1] = v0;
  v18[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v14;
  v18[3] = v16;
  sub_1000C013C();
}

uint64_t sub_1002BFBC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11[2];

  v5 = *(_BYTE *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *a2;
  sub_100043CA8((uint64_t)(a2 + 1), (uint64_t)v11);
  v9 = a2[6];
  swift_bridgeObjectRetain(v7);
  swift_retain();
  swift_retain();
  return sub_1002BFC50(v5, v6, v7, v8, v11, v9, a3);
}

uint64_t sub_1002BFC50@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;

  v14 = (int *)type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  v15 = (_QWORD *)(a7 + v14[8]);
  *v15 = swift_getKeyPath(&unk_100991920);
  v16 = sub_1000BA294(&qword_100BC37E0);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = a7 + v14[9];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_100991CE8);
  *(_BYTE *)(v17 + 8) = 0;
  v18 = a7 + v14[10];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_100991D10);
  *(_WORD *)(v18 + 8) = 0;
  v19 = (_QWORD *)(a7 + v14[11]);
  v20 = type metadata accessor for ObservableResolver(0);
  sub_10007A100((uint64_t)&qword_100BD0930);
  *v19 = EnvironmentObject.init()(v20, v21);
  v19[1] = v22;
  v23 = a7 + v14[12];
  v29 = 0x80;
  State.init(wrappedValue:)(&v29, &unk_100B68C30);
  v24 = v31;
  *(_BYTE *)v23 = v30;
  *(_QWORD *)(v23 + 8) = v24;
  v25 = a7 + v14[13];
  v29 = 4;
  State.init(wrappedValue:)(&v29, &unk_100B69540);
  v26 = v31;
  *(_BYTE *)v25 = v30;
  *(_QWORD *)(v25 + 8) = v26;
  *(_BYTE *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  result = sub_10003C800(a5, a7 + 32);
  *(_QWORD *)(a7 + 72) = a6;
  v28 = a7 + v14[14];
  *(_BYTE *)v28 = a1;
  *(_QWORD *)(v28 + 8) = 0;
  return result;
}

uint64_t sub_1002BFDF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  void *v57;
  void *v58;
  void *v59;
  unint64_t v60;

  v2 = v1;
  v55 = a1;
  v3 = type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BD3ED0);
  v8 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  v52 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BD3ED8);
  v53 = *(_QWORD *)(v11 - 8);
  v54 = v11;
  __chkstk_darwin(v11);
  v50 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = (void *)static Color.clear.getter(v13);
  v14 = v1 + *(int *)(v3 + 36);
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_10008D47C(*(_QWORD *)v14, v16);
  sub_10011567C();
  v18 = v17;
  sub_1000B15F8(v15, v16);
  LOBYTE(v56[0]) = v18;
  sub_100080C0C(v2, (uint64_t)v6, type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  v19 = *(unsigned __int8 *)(v4 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = v20 + v5;
  v22 = v19 | 7;
  v48 = v21;
  v23 = swift_allocObject(&unk_100B6AFD8, v21, v19 | 7);
  sub_10007802C((uint64_t)v6, v23 + v20, type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  v24 = sub_1001512BC();
  View.onChange<A>(of:initial:_:)(v56, 0, sub_1002C4F94, v23, &type metadata for Color, &unk_100B68C30, &protocol witness table for Color, v24);
  swift_release(v23);
  swift_release(v57);
  v25 = *(int *)(v3 + 56);
  v26 = v2;
  v49 = v2;
  v27 = v2 + v25;
  v28 = *(void **)(v27 + 8);
  LOBYTE(v57) = *(_BYTE *)v27;
  v58 = v28;
  v29 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(v56, v29);
  sub_100080C0C(v26, (uint64_t)v6, type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  v30 = swift_allocObject(&unk_100B6B000, v21, v22);
  sub_10007802C((uint64_t)v6, v30 + v20, type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  v57 = &type metadata for Color;
  v58 = &unk_100B68C30;
  v59 = &protocol witness table for Color;
  v60 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v57, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v33 = v50;
  v32 = v51;
  View.onChange<A>(of:initial:_:)(v56, 0, sub_1002C50C8, v30, v51, &type metadata for Bool, OpaqueTypeConformance2, &protocol witness table for Bool);
  v34 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v10, v32, v34);
  v35 = *(_QWORD *)(v27 + 8);
  LOBYTE(v56[0]) = *(_BYTE *)v27;
  v56[1] = v35;
  State.projectedValue.getter(v29);
  v36 = v57;
  v37 = v58;
  LODWORD(v52) = v59;
  sub_100080C0C(v49, (uint64_t)v6, type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  v38 = swift_allocObject(&unk_100B6B028, v48, v22);
  sub_10007802C((uint64_t)v6, v38 + v20, type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  v39 = swift_allocObject(&unk_100B6B050, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_1002C5120;
  *(_QWORD *)(v39 + 24) = v38;
  LOBYTE(v56[0]) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  State.init(wrappedValue:)(v56, &type metadata for Bool);
  LOBYTE(v32) = (_BYTE)v57;
  v40 = v58;
  v41 = v53;
  v42 = v55;
  v43 = v33;
  v44 = v33;
  v45 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v55, v44, v54);
  swift_release(v37);
  swift_release(v36);
  swift_release(v38);
  v46 = v42 + *(int *)(sub_1000BA294(&qword_100BD3EE0) + 36);
  *(_QWORD *)v46 = v36;
  *(_QWORD *)(v46 + 8) = v37;
  *(_BYTE *)(v46 + 16) = v52;
  *(_BYTE *)(v46 + 17) = 0;
  *(_QWORD *)(v46 + 24) = sub_1002C516C;
  *(_QWORD *)(v46 + 32) = v39;
  *(_BYTE *)(v46 + 40) = v32;
  *(_QWORD *)(v46 + 48) = v40;
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v43, v45);
}

uint64_t sub_1002C0244(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  int v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *a2;
  v5 = *a1;
  v6 = type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  v7 = (char *)(a3 + *(int *)(v6 + 48));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  BYTE1(v17) = v8;
  v18 = v9;
  LOBYTE(v17) = v4;
  v10 = sub_1000BA294(&qword_100BD3F10);
  State.wrappedValue.setter(&v17, v10);
  result = sub_10011CD38(v5, v4);
  if ((result & 1) == 0)
  {
    v12 = v4 & 0xC0;
    v13 = (char *)(a3 + *(int *)(v6 + 56));
    v14 = *v13;
    v15 = *((_QWORD *)v13 + 1);
    BYTE1(v17) = *v13;
    v18 = v15;
    v16 = sub_1000BA294(&qword_100BC5608);
    result = (uint64_t)State.wrappedValue.getter(&v17, v16);
    if ((v12 == 64) != v17)
    {
      BYTE1(v17) = v14;
      v18 = v15;
      LOBYTE(v17) = v12 == 64;
      return State.wrappedValue.setter(&v17, v16);
    }
  }
  return result;
}

void sub_1002C0344(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  if ((*a2 & 1) == 0)
  {
    if (*a1)
    {
      sub_1000DB418((_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 56));
      sub_1004B7DF0();
    }
  }
}

uint64_t sub_1002C0380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t KeyPath;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;

  v78 = a2;
  v3 = type metadata accessor for ZoomNavigationTransition(0);
  v76 = *(_QWORD *)(v3 - 8);
  v77 = v3;
  __chkstk_darwin(v3);
  v75 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
  __chkstk_darwin(v71);
  v70 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v62 - v7;
  v9 = type metadata accessor for WeatherMapStatusBarColorSceneModifier(0);
  __chkstk_darwin(v9);
  v68 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for FullscreenMapView(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1000BA294((uint64_t *)&unk_100C0A680);
  __chkstk_darwin(v65);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1000BA294((uint64_t *)&unk_100C0A670);
  __chkstk_darwin(v67);
  v66 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1000BA294(&qword_100BD3EE8);
  __chkstk_darwin(v64);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BD3EF0);
  v73 = *(_QWORD *)(v19 - 8);
  v74 = v19;
  __chkstk_darwin(v19);
  v72 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a1 + 4;
  v21 = type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  v69 = v21;
  sub_100117228(v21);
  v22 = (char *)a1 + *(int *)(v21 + 52);
  v23 = *v22;
  v24 = *((_QWORD *)v22 + 1);
  v79 = v23;
  v80 = v24;
  v25 = sub_1000BA294(&qword_100BD3BF0);
  State.projectedValue.getter(v25);
  v26 = v81;
  v27 = v82;
  LOBYTE(v21) = v83;
  sub_100043CA8((uint64_t)(a1 + 4), (uint64_t)v13);
  v28 = &v13[v11[6]];
  *(_QWORD *)v28 = v26;
  *((_QWORD *)v28 + 1) = v27;
  v28[16] = v21;
  v29 = &v13[v11[7]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100991B28);
  v30 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v29, v30, 0);
  v31 = &v13[v11[8]];
  KeyPath = swift_getKeyPath(&unk_100991B58);
  *(_QWORD *)v31 = KeyPath;
  *(_OWORD *)(v31 + 8) = 0u;
  *(_OWORD *)(v31 + 24) = 0u;
  *(_OWORD *)(v31 + 33) = 0u;
  v33 = static SafeAreaRegions.all.getter(KeyPath);
  LOBYTE(v11) = static Edge.Set.all.getter(v33);
  sub_100080C0C((uint64_t)v13, (uint64_t)v15, type metadata accessor for FullscreenMapView);
  v34 = &v15[*(int *)(v65 + 36)];
  *(_QWORD *)v34 = v33;
  v34[8] = (char)v11;
  v35 = (uint64_t)v13;
  v36 = v64;
  sub_1000215BC(v35, type metadata accessor for FullscreenMapView);
  v37 = type metadata accessor for ColorScheme(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v37);
  v38 = v70;
  sub_100037768((uint64_t)v8, v70, (uint64_t *)&unk_100C09DB0);
  v39 = (uint64_t)v68;
  State.init(wrappedValue:)(v38, v71);
  sub_100021A14((uint64_t)v8, (uint64_t *)&unk_100C09DB0);
  v40 = v66;
  sub_100037768((uint64_t)v15, v66, (uint64_t *)&unk_100C0A680);
  sub_10007802C(v39, v40 + *(int *)(v67 + 36), type metadata accessor for WeatherMapStatusBarColorSceneModifier);
  sub_100021A14((uint64_t)v15, (uint64_t *)&unk_100C0A680);
  v41 = a1[3];
  v42 = &v18[*(int *)(v36 + 36)];
  sub_100043CA8((uint64_t)v63, (uint64_t)(v42 + 16));
  v43 = a1[9];
  swift_retain();
  swift_retain();
  v44 = sub_1000BA294(&qword_100BC4770);
  sub_10007AB60((uint64_t)&qword_100C09E40);
  *(_QWORD *)v42 = ObservedObject.init(wrappedValue:)(v41, v44, v45);
  *((_QWORD *)v42 + 1) = v46;
  *((_QWORD *)v42 + 7) = v43;
  v47 = type metadata accessor for ObservableResolver(0);
  sub_10007A100((uint64_t)&qword_100BD0930);
  *((_QWORD *)v42 + 8) = EnvironmentObject.init()(v47, v48);
  *((_QWORD *)v42 + 9) = v49;
  sub_1000787D4(v40, (uint64_t)v18, (uint64_t *)&unk_100C0A670);
  v50 = a1[2];
  v81 = a1[1];
  v82 = v50;
  v51 = (char *)a1 + *(int *)(v69 + 40);
  v52 = *(_QWORD *)v51;
  v53 = v51[8];
  LOBYTE(a1) = v51[9];
  swift_bridgeObjectRetain(v50);
  sub_100082BE8(v52, v53, (char)a1);
  sub_1007A5CB0();
  v55 = v54;
  LOBYTE(v44) = v56;
  sub_100082C5C(v52, v53, (char)a1);
  if ((v44 & 1) != 0)
    v55 = Namespace.wrappedValue.getter(0);
  v57 = v75;
  static NavigationTransition<>.zoom<A>(sourceID:in:)(&v81, v55, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease();
  v58 = sub_1002C5174();
  v59 = v72;
  v60 = v77;
  View.navigationTransition<A>(_:)(v57, v36, v77, v58, &protocol witness table for ZoomNavigationTransition);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v57, v60);
  sub_100021A14((uint64_t)v18, &qword_100BD3EE8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v73 + 32))(v78, v59, v74);
}

uint64_t sub_1002C0958(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  if (((a1 ^ a4) & 1) != 0)
    return 0;
  if (a2 == a5 && a3 == a6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a5, a6, 0);
}

uint64_t sub_1002C0994(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002C0958(*a1, *((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2), *a2, *((_QWORD *)a2 + 1), *((_QWORD *)a2 + 2));
}

double sub_1002C09B0(unsigned __int8 *a1, void (*a2)(uint64_t *__return_ptr))
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  double result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  a2(&v11);
  v3 = v11;
  v5 = v12;
  v4 = v13;
  v6 = *((_QWORD *)a1 + 2);
  if (v11 == *a1
    && ((v9 = *((_QWORD *)a1 + 1), v9 == v12) ? (v10 = v6 == v13) : (v10 = 0),
        v10 || (_stringCompareWithSmolCheck(_:_:expecting:)(v9, *((_QWORD *)a1 + 2), v12, v13, 0) & 1) != 0)
    || v3 == byte_100BD3AE8
    && (v5 == qword_100BD3AF0 ? (v7 = v4 == unk_100BD3AF8) : (v7 = 0),
        v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, qword_100BD3AF0, unk_100BD3AF8, 0) & 1) != 0))
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
    *a1 = v3;
    *((_QWORD *)a1 + 1) = v5;
    *((_QWORD *)a1 + 2) = v4;
  }
  return result;
}

uint64_t sub_1002C0A9C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_BYTE *)(v0 + 80);
  sub_10008D47C(v1, v2);
  sub_100109B54();
  v4 = v3;
  v5 = sub_1000B15F8(v1, v2);
  if ((v4 & 1) == 0)
    return static AnyTransition.move(edge:)(2);
  v6 = static UnitPoint.center.getter(v5);
  v8 = static AnyTransition.scale(scale:anchor:)(1.0, v6, v7);
  v9 = static UnitPoint.center.getter(v8);
  v11 = static AnyTransition.scale(scale:anchor:)(1.0000001, v9, v10);
  v12 = static AnyTransition.asymmetric(insertion:removal:)(v8, v11);
  swift_release(v8);
  swift_release(v11);
  return v12;
}

void sub_1002C0B6C()
{
  _BYTE *v0;

  *v0 = sub_1000D00A4() & 1;
  sub_10004A298();
}

void sub_1002C0B8C()
{
  _BYTE *v0;

  *v0 = sub_1000D00A4() & 1;
  sub_10004A298();
}

void sub_1002C0BAC(char *a1)
{
  sub_1000D8ED0(a1);
  sub_10004A298();
}

void sub_1002C0BC4(char *a1)
{
  sub_1000D8ED0(a1);
  sub_10004A298();
}

_BYTE *sub_1002C0BE4(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  _BYTE *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t *, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_BYTE *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    v8 = *((_OWORD *)a2 + 3);
    *((_OWORD *)v4 + 3) = v8;
    v9 = v8;
    v10 = **(void (***)(_BYTE *, uint64_t *, uint64_t, __n128))(v8 - 8);
    v11 = swift_bridgeObjectRetain(v7);
    v10(v4 + 24, a2 + 3, v9, v11);
    v12 = a2[9];
    *((_QWORD *)v4 + 8) = a2[8];
    v13 = *((_BYTE *)a2 + 80);
    sub_10008D47C(v12, v13);
    *((_QWORD *)v4 + 9) = v12;
    v4[80] = v13;
    v14 = *(int *)(a3 + 32);
    v15 = &v4[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v16) == 1)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[16] = *(_BYTE *)(v16 + 16);
      v15[17] = *(_BYTE *)(v16 + 17);
      v15[18] = *(_BYTE *)(v16 + 18);
      v18 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v19 = &v15[v18];
      v20 = v16 + v18;
      v21 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      v22 = 1;
    }
    else
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      swift_retain();
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v22);
    v24 = *(int *)(a3 + 36);
    v25 = &v4[v24];
    v26 = (uint64_t)a2 + v24;
    *v25 = *(_BYTE *)v26;
    *((_QWORD *)v25 + 1) = *(_QWORD *)(v26 + 8);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1002C0D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  sub_100094D04((_QWORD *)(a1 + 24), (_QWORD *)(a2 + 24));
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_BYTE *)(a2 + 80);
  sub_10008D47C(v7, v8);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = v8;
  sub_1000B15F8(v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 32);
    v12 = a1 + v11;
    v13 = a2 + v11;
    sub_100021A14(a1 + v11, &qword_100BC37E0);
    v14 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
      *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
      *(_BYTE *)(v12 + 18) = *(_BYTE *)(v13 + 18);
      v15 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v16 = v12 + v15;
      v17 = v13 + v15;
      v18 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = 1;
    }
    else
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v19);
  }
  v20 = *(int *)(a3 + 36);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_retain();
  swift_release(v23);
  return a1;
}

uint64_t sub_1002C0F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = *(int *)(a3 + 32);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = v6;
  v10 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[16] = v9[16];
    v8[17] = v9[17];
    v8[18] = v9[18];
    v11 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_1002C103C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_BYTE *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v7;
  sub_1000B15F8(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 32);
    v11 = (char *)(a1 + v10);
    v12 = (char *)(a2 + v10);
    sub_100021A14(a1 + v10, &qword_100BC37E0);
    v13 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      v11[16] = v12[16];
      v11[17] = v12[17];
      v11[18] = v12[18];
      v14 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v15 = &v11[v14];
      v16 = &v12[v14];
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v18 = *(int *)(a3 + 36);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_release(v21);
  return a1;
}

uint64_t assignWithTake for FullscreenMapPresentationSourceViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1000B15F8(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FullscreenMapPresentationSourceViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FullscreenMapPresentationSourceViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_1002C1298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3BB0;
  if (!qword_100BD3BB0)
  {
    v1 = sub_100075EB0(&qword_100BD3B08);
    sub_10007AB60((uint64_t)&unk_100BD3BB8);
    sub_10007AB60((uint64_t)&unk_100BD3BC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3BB0);
  }
  return result;
}

void sub_1002C1334(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  int8x16_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  float64x2_t v47;
  float64x2_t v48;
  float64x2_t v49;
  _OWORD v50[3];
  char v51;
  _QWORD v52[2];
  uint64_t v53;
  char v54;
  uint64_t (*v55)@<X0>(uint64_t@<X8>, double@<D0>);
  uint64_t v56;
  char v57;

  v46 = a1;
  v44 = type metadata accessor for AccessibilityActionKind(0);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v38 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for FullscreenMapView(0);
  v3 = *(_QWORD *)(v45 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v45);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BD3D38);
  __chkstk_darwin(v6);
  v39 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000BA294(&qword_100BD3D40);
  __chkstk_darwin(v40);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1000BA294(&qword_100BD3D48);
  __chkstk_darwin(v42);
  v41 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Alignment.center.getter(v11);
  v14 = v13;
  v37 = v1;
  sub_100080C0C(v1, (uint64_t)v5, type metadata accessor for FullscreenMapView);
  v15 = *(unsigned __int8 *)(v3 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = v16 + v4;
  v18 = v15 | 7;
  v19 = swift_allocObject(&unk_100B6AE48, v17, v15 | 7);
  sub_10007802C((uint64_t)v5, v19 + v16, type metadata accessor for FullscreenMapView);
  KeyPath = swift_getKeyPath(&unk_100991D38);
  v52[0] = v12;
  v52[1] = v14;
  v53 = KeyPath;
  v54 = 0;
  v55 = sub_1002C3D78;
  v56 = v19;
  v57 = 0;
  v21 = v38;
  static AccessibilityActionKind.escape.getter();
  sub_100080C0C(v1, (uint64_t)v5, type metadata accessor for FullscreenMapView);
  v22 = swift_allocObject(&unk_100B6AE70, v17, v18);
  sub_10007802C((uint64_t)v5, v22 + v16, type metadata accessor for FullscreenMapView);
  v23 = sub_1000BA294(&qword_100BD3D50);
  v24 = sub_1002C3EF0();
  v25 = (uint64_t)v39;
  View.accessibilityAction(_:_:)(v21, sub_1002C3EE4, v22, v23, v24);
  v26 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v21, v44, v26);
  sub_1000B15F8(v53, v54);
  swift_release(v56);
  sub_100037768(v25, (uint64_t)v9, &qword_100BD3D38);
  *(_QWORD *)&v9[*(int *)(v40 + 36)] = 0x3FF0000000000000;
  sub_100021A14(v25, &qword_100BD3D38);
  v27 = v37;
  sub_100080C0C(v37, (uint64_t)v5, type metadata accessor for FullscreenMapView);
  v28 = swift_allocObject(&unk_100B6AE98, v17, v18);
  sub_10007802C((uint64_t)v5, v28 + v16, type metadata accessor for FullscreenMapView);
  v29 = v41;
  sub_100037768((uint64_t)v9, v41, &qword_100BD3D40);
  v30 = (_QWORD *)(v29 + *(int *)(v42 + 36));
  *v30 = 0;
  v30[1] = 0;
  v30[2] = sub_1002C3F78;
  v30[3] = v28;
  sub_100021A14((uint64_t)v9, &qword_100BD3D40);
  v31 = swift_getKeyPath(&unk_100991D60);
  v32 = v27 + *(int *)(v45 + 32);
  v33 = *(_OWORD *)(v32 + 32);
  v50[1] = *(_OWORD *)(v32 + 16);
  v50[2] = v33;
  v51 = *(_BYTE *)(v32 + 48);
  v50[0] = *(_OWORD *)v32;
  sub_1000787D4((uint64_t)v50, (uint64_t)v52, &qword_100BC39C8);
  sub_100116DE0((uint64_t)v52);
  sub_100116E74();
  sub_100116DE0((uint64_t)v50);
  v34 = v46;
  sub_100037768(v29, v46, &qword_100BD3D48);
  v35 = v34 + *(int *)(sub_1000BA294(&qword_100BD3D70) + 36);
  *(_QWORD *)v35 = v31;
  v36 = (int8x16_t)vaddq_f64(v48, v49);
  *(float64x2_t *)(v35 + 8) = vaddq_f64(v47, (float64x2_t)vextq_s8(v36, v36, 8uLL));
  *(_BYTE *)(v35 + 24) = 0;
  sub_100021A14(v29, &qword_100BD3D48);
}

uint64_t sub_1002C17C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[14];

  v34 = a1;
  v38 = a2;
  v36 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v36);
  v5 = (double *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for WeatherMapDisplayMode(0);
  v33 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000BA294(&qword_100BD3D80);
  v31 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1000BA294(&qword_100BD3D88);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_100B6AEC0, 56, 7);
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = 0;
  *(_QWORD *)(v13 + 48) = 0;
  sub_100528258((void (*)(__int128 *))sub_1002C3FE4, (uint64_t)sub_1002C1B4C, 0, (uint64_t)v39);
  v14 = sub_1000BA294(&qword_100BD3D90);
  sub_10007AB60((uint64_t)&unk_100BD3D98);
  v16 = v15;
  View.systemColorScheme()(v14, v15);
  sub_100021A14((uint64_t)v39, &qword_100BD3D90);
  if (qword_100BC25C0 != -1)
    swift_once(&qword_100BC25C0, sub_1007885A4);
  v17 = sub_1000AECD4(v6, (uint64_t)qword_100CAF3F0);
  v18 = v33;
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v8, v17, v6);
  __chkstk_darwin(v19);
  *(&v31 - 2) = v34;
  v39[0] = v14;
  v39[1] = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v39, &opaque type descriptor for <<opaque return type of View.systemColorScheme()>>, 1);
  v21 = v32;
  View.buttons(_:buttons:)(v8, sub_1002C3FF4, &v31 - 4, v32, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v21);
  v22 = (char *)v5 + *(int *)(v36 + 20);
  v23 = enum case for RoundedCornerStyle.continuous(_:);
  v24 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  *v5 = a3;
  v5[1] = a3;
  v25 = sub_1000BA294(&qword_100BD3DA0);
  v26 = v38;
  v27 = v38 + *(int *)(v25 + 36);
  sub_100080C0C((uint64_t)v5, v27, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v27 + *(int *)(sub_1000BA294(&qword_100BD3DA8) + 36)) = 256;
  v28 = v35;
  v29 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v26, v12, v37);
  sub_1000215BC((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v12, v29);
}

void sub_1002C1B4C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_1000DB418(a1, a1[3]);
  if (qword_100BC25C0 != -1)
    swift_once(&qword_100BC25C0, sub_1007885A4);
  v3 = type metadata accessor for WeatherMapDisplayMode(0);
  v4 = sub_1000AECD4(v3, (uint64_t)qword_100CAF3F0);
  sub_10078840C(v4, 0xD00000000000001ELL, 0x80000001009F8BE0, a2);
}

uint64_t sub_1002C1BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;

  v2 = type metadata accessor for ButtonGroup.Alignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for ButtonGroup(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for ButtonGroup.Alignment.leading(_:), v2, v9);
  v18 = a1;
  ButtonGroup.init(alignment:buttons:)(v6, sub_1002C3FFC, v17);
  v12 = static ButtonGroupsBuilder.buildExpression(_:)(v11);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  v13 = sub_1000BA294(&qword_100BD3DB0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v14 + 32) = v12;
  v15 = static ButtonGroupsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1002C1D14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  Swift::String *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  void (*v26)(char *, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  void (*v47)(Swift::String *, _QWORD, uint64_t);
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;

  v51 = a1;
  v1 = type metadata accessor for FullscreenMapView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v53 = v1;
  v54 = v2;
  v3 = *(_QWORD *)(v2 + 64);
  v4 = __chkstk_darwin(v1);
  v5 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ButtonGroup.Button.Content(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (Swift::String *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = type metadata accessor for ButtonGroup.Button(0, v8);
  v52 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v46 - v13;
  v48 = (id)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v48, "mainBundle");
  v56._object = (void *)0x80000001009F8B20;
  v16._countAndFlagsBits = 1701736260;
  v16._object = (void *)0xE400000000000000;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v56._countAndFlagsBits = 0xD000000000000022;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v56);

  *v10 = v18;
  v47 = *(void (**)(Swift::String *, _QWORD, uint64_t))(v7 + 104);
  v47(v10, enum case for ButtonGroup.Button.Content.title(_:), v6);
  v19 = v51;
  sub_100080C0C(v51, (uint64_t)v5, type metadata accessor for FullscreenMapView);
  v20 = *(unsigned __int8 *)(v54 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = v21 + v3;
  v46 = v20 | 7;
  v23 = swift_allocObject(&unk_100B6AEE8, v22, v20 | 7);
  v49 = v5;
  v24 = v14;
  sub_10007802C((uint64_t)v5, v23 + v21, type metadata accessor for FullscreenMapView);
  static ButtonGroup.Button.dismiss(_:identifier:handler:)(v10, 0, 0, sub_1002C4008, v23);
  v25 = swift_release(v23);
  (*(void (**)(Swift::String *, uint64_t, __n128))(v7 + 8))(v10, v6, v25);
  v54 = static ButtonsBuilder.buildExpression(_:)(v14);
  v26 = *(void (**)(char *, uint64_t))(v52 + 8);
  v26(v24, v55);
  sub_100403A6C();
  if ((v27 & 1) != 0)
  {
    v10->_countAndFlagsBits = 0xD000000000000022;
    v10->_object = (void *)0x80000001009F8B50;
    v47(v10, enum case for ButtonGroup.Button.Content.image(_:), v6);
    v28 = (uint64_t)v49;
    sub_100080C0C(v19, (uint64_t)v49, type metadata accessor for FullscreenMapView);
    v29 = swift_allocObject(&unk_100B6AF10, v22, v46);
    sub_10007802C(v28, v29 + v21, type metadata accessor for FullscreenMapView);
    v30 = v50;
    ButtonGroup.Button.init(_:identifier:handler:)(v10, 0, 0, sub_1002C4018, v29);
    v31 = objc_msgSend(v48, "mainBundle");
    v32._countAndFlagsBits = 0xD000000000000015;
    v57._countAndFlagsBits = 0xD000000000000038;
    v57._object = (void *)0x80000001009F8BA0;
    v32._object = (void *)0x80000001009F8B80;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v57);

    ButtonGroup.Button.accessibilityLabel(_:)(v34._countAndFlagsBits, v34._object);
    v35 = swift_bridgeObjectRelease();
    v36 = v55;
    ((void (*)(char *, uint64_t, __n128))v26)(v30, v55, v35);
    v37 = static ButtonsBuilder.buildExpression(_:)(v24);
    v26(v24, v36);
    v38 = sub_1000BA294(&qword_100BD3DB8);
    v39 = swift_allocObject(v38, 40, 7);
    *(_OWORD *)(v39 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v39 + 32) = v37;
    v40 = static ButtonsBuilder.buildBlock(_:)();
    swift_bridgeObjectRelease();
    v41 = static ButtonsBuilder.buildOptional(_:)(v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = static ButtonsBuilder.buildOptional(_:)(0);
  }
  v42 = sub_1000BA294(&qword_100BD3DB8);
  v43 = swift_allocObject(v42, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v43 + 32) = v54;
  *(_QWORD *)(v43 + 40) = v41;
  v44 = static ButtonsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1002C218C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void **aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  void (*v48)();
  uint64_t v49;
  char v50;

  v40 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FullscreenMapView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  v16 = a1 + *(int *)(v6 + 24);
  v17 = *(void ***)v16;
  v18 = *(_QWORD *)(v16 + 8);
  LOBYTE(v16) = *(_BYTE *)(v16 + 16);
  aBlock = v17;
  v45 = v18;
  LOBYTE(v46) = v16;
  v50 = 4;
  v19 = sub_1000BA294(&qword_100BD3D78);
  Binding.wrappedValue.setter(&v50, v19);
  v20 = sub_10009FFE0();
  v38 = static OS_dispatch_queue.main.getter(v20);
  static DispatchTime.now()(v38);
  + infix(_:_:)(v12);
  v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22 = v9;
  v21(v12, v9);
  v23 = (uint64_t (*)(char *, uint64_t))v21;
  sub_100080C0C(a1, (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FullscreenMapView);
  v24 = *(unsigned __int8 *)(v7 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = swift_allocObject(&unk_100B6AF88, v25 + v8, v24 | 7);
  sub_10007802C((uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, type metadata accessor for FullscreenMapView);
  v48 = sub_1002C3EE4;
  v49 = v26;
  aBlock = _NSConcreteStackBlock;
  v45 = 1107296256;
  v46 = sub_100121D84;
  v47 = &unk_100B6AFA0;
  v27 = _Block_copy(&aBlock);
  v28 = swift_release(v49);
  static DispatchQoS.unspecified.getter(v28);
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10007A100((uint64_t)&qword_100BFFA20);
  v30 = v29;
  v31 = sub_1000BA294(&qword_100BD4F10);
  sub_10007AB60((uint64_t)&qword_100BFFA30);
  v33 = v39;
  v32 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v31, v34, v40, v30);
  v35 = (void *)v38;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v5, v33, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v32);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v42);
  return v23(v15, v22);
}

uint64_t sub_1002C24C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void **aBlock;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  void *v78;
  void (*v79)();
  uint64_t v80;
  char v81[9];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v73 = *(_QWORD *)(v2 - 8);
  v74 = v2;
  __chkstk_darwin(v2);
  v72 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  __chkstk_darwin(v4);
  v69 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FullscreenMapView(0);
  v63 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v64 = v7;
  v65 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for DispatchTime(0);
  v62 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v61 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v67 = (char *)&v59 - v10;
  v11 = type metadata accessor for UserInterfaceSizeClass(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v59 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v17);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v59 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v59 - v24;
  v60 = v6;
  v66 = a1;
  sub_10011AA68(v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v22, enum case for UserInterfaceSizeClass.compact(_:), v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v11);
  v27 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC5A68);
  sub_100037768((uint64_t)v22, v27, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v11) != 1)
  {
    sub_100037768((uint64_t)v16, (uint64_t)v19, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v11) != 1)
    {
      v28 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v59, v27, v11);
      sub_10007A100((uint64_t)&qword_100BC5AB8);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v28, v11, v29);
      v31 = *(void (**)(char *, uint64_t))(v12 + 8);
      v31(v28, v11);
      sub_100021A14((uint64_t)v22, &qword_100BC5A68);
      sub_100021A14((uint64_t)v25, &qword_100BC5A68);
      v31(v19, v11);
      sub_100021A14((uint64_t)v16, &qword_100BC5A68);
      if ((v30 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 5;
      goto LABEL_10;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC5A68);
    sub_100021A14((uint64_t)v25, &qword_100BC5A68);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
LABEL_6:
    sub_100021A14((uint64_t)v16, &qword_100BC5E60);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC5A68);
  sub_100021A14((uint64_t)v25, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v11) != 1)
    goto LABEL_6;
  sub_100021A14((uint64_t)v16, &qword_100BC5A68);
LABEL_8:
  v32 = 4;
LABEL_10:
  v33 = v66;
  v34 = v66 + *(int *)(v60 + 24);
  v35 = *(void ***)v34;
  v36 = *(_QWORD *)(v34 + 8);
  LOBYTE(v34) = *(_BYTE *)(v34 + 16);
  aBlock = v35;
  v76 = v36;
  LOBYTE(v77) = v34;
  v81[0] = v32;
  v37 = sub_1000BA294(&qword_100BD3D78);
  Binding.wrappedValue.setter(v81, v37);
  v38 = sub_10009FFE0();
  v39 = (void *)static OS_dispatch_queue.main.getter(v38);
  v40 = v61;
  static DispatchTime.now()(v39);
  v41 = v67;
  + infix(_:_:)(v40);
  v42 = *(void (**)(char *, uint64_t))(v62 + 8);
  v43 = v68;
  v42(v40, v68);
  v44 = v65;
  sub_100080C0C(v33, v65, type metadata accessor for FullscreenMapView);
  v45 = *(unsigned __int8 *)(v63 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = swift_allocObject(&unk_100B6AF38, v46 + v64, v45 | 7);
  sub_10007802C(v44, v47 + v46, type metadata accessor for FullscreenMapView);
  v79 = sub_1002C4028;
  v80 = v47;
  aBlock = _NSConcreteStackBlock;
  v76 = 1107296256;
  v77 = sub_100121D84;
  v78 = &unk_100B6AF50;
  v48 = _Block_copy(&aBlock);
  v49 = swift_release(v80);
  v50 = v69;
  static DispatchQoS.unspecified.getter(v49);
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10007A100((uint64_t)&qword_100BFFA20);
  v52 = v51;
  v53 = sub_1000BA294(&qword_100BD4F10);
  sub_10007AB60((uint64_t)&qword_100BFFA30);
  v54 = v72;
  v55 = v53;
  v56 = v74;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v55, v57, v74, v52);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v41, v50, v54, v48);
  _Block_release(v48);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v56);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v50, v71);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v43);
}

void sub_1002C2B20(_QWORD *a1, void (*a2)(void))
{
  sub_1000DB418(a1, a1[3]);
  a2();
  sub_10004A298();
}

uint64_t sub_1002C2B48(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FullscreenMapView(0) + 24));
  v2 = *v1;
  v3 = v1[1];
  LOBYTE(v1) = *((_BYTE *)v1 + 16);
  v7 = v2;
  v8 = v3;
  v9 = (char)v1;
  v6 = 5;
  v4 = sub_1000BA294(&qword_100BD3D78);
  return Binding.wrappedValue.setter(&v6, v4);
}

unint64_t sub_1002C2BC4()
{
  unint64_t result;

  result = qword_100BD3C10;
  if (!qword_100BD3C10)
  {
    result = swift_getWitnessTable(&unk_1009BF5D0, &type metadata for InteractiveMapTransitionModifier);
    atomic_store(result, (unint64_t *)&qword_100BD3C10);
  }
  return result;
}

double destroy for MainViewFullscreenMapZoomTransitionModifier(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 1);
  *(_QWORD *)&result = swift_release(a1[6]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for MainViewFullscreenMapZoomTransitionModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t, __n128))(v6 - 8);
  v9 = swift_retain(v4);
  v8(a1 + 8, v5, v7, v9);
  v10 = a2[6];
  *(_QWORD *)(a1 + 48) = v10;
  swift_retain(v10);
  return a1;
}

uint64_t *assignWithCopy for MainViewFullscreenMapZoomTransitionModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  sub_100094D04(a1 + 1, a2 + 1);
  v5 = a2[6];
  v6 = a1[6];
  a1[6] = v5;
  swift_retain();
  swift_release(v6);
  return a1;
}

uint64_t *assignWithTake for MainViewFullscreenMapZoomTransitionModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  v5 = a2[6];
  v6 = a1[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainViewFullscreenMapZoomTransitionModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MainViewFullscreenMapZoomTransitionModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MainViewFullscreenMapZoomTransitionModifier()
{
  return &type metadata for MainViewFullscreenMapZoomTransitionModifier;
}

_QWORD *sub_1002C2E08(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
    v9[16] = *((_BYTE *)a2 + v8 + 16);
    v9[17] = *((_BYTE *)a2 + v8 + 17);
    v9[18] = *((_BYTE *)a2 + v8 + 18);
    v11 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v12 = &v9[v11];
    v13 = v10 + v11;
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[6];
    v16 = a3[7];
    v17 = (char *)v4 + v15;
    v18 = (uint64_t)a2 + v15;
    v19 = *(_QWORD *)(v18 + 8);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v17[16] = *(_BYTE *)(v18 + 16);
    v20 = (_QWORD *)((char *)v4 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    swift_retain();
    swift_retain();
    v22 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v21) == 1)
    {
      v23 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v23))
      {
        v24 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v25 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
        v25 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v23);
      }
    }
    else
    {
      *v20 = *v21;
      swift_retain();
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v22, v25);
    v27 = a3[8];
    v28 = (char *)v4 + v27;
    v29 = (uint64_t)a2 + v27;
    v30 = *(_QWORD *)v29;
    v31 = *(_QWORD *)(v29 + 8);
    v32 = *(_QWORD *)(v29 + 16);
    v33 = *(_QWORD *)(v29 + 24);
    v34 = *(_QWORD *)(v29 + 32);
    v35 = *(_QWORD *)(v29 + 40);
    v36 = *(_BYTE *)(v29 + 48);
    sub_1000D55F0(*(_QWORD *)v29, v31, v32, v33, v34, v35, v36);
    *(_QWORD *)v28 = v30;
    *((_QWORD *)v28 + 1) = v31;
    *((_QWORD *)v28 + 2) = v32;
    *((_QWORD *)v28 + 3) = v33;
    *((_QWORD *)v28 + 4) = v34;
    *((_QWORD *)v28 + 5) = v35;
    v28[48] = v36;
  }
  return v4;
}

uint64_t sub_1002C3038(_QWORD *a1, int *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  v4 = (char *)a1 + a2[5];
  v5 = &v4[*(int *)(type metadata accessor for DisplayMetrics(0) + 36)];
  v6 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (_QWORD *)((char *)a1 + a2[6]);
  swift_release(*v7);
  swift_release(v7[1]);
  v8 = (_QWORD *)((char *)a1 + a2[7]);
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release(*v8);
  }
  v10 = (char *)a1 + a2[8];
  return sub_1000D31D0(*(_QWORD *)v10, *((_QWORD *)v10 + 1), *((_QWORD *)v10 + 2), *((_QWORD *)v10 + 3), *((_QWORD *)v10 + 4), *((_QWORD *)v10 + 5), v10[48]);
}

uint64_t sub_1002C3130(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(a2 + v7 + 17);
  *(_BYTE *)(v8 + 18) = *(_BYTE *)(a2 + v7 + 18);
  v10 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[6];
  v15 = a3[7];
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  swift_retain();
  swift_retain();
  v21 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v20) == 1)
  {
    v22 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22))
    {
      v23 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v24 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v22);
    }
  }
  else
  {
    *v19 = *v20;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v21, v24);
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *(_QWORD *)(v27 + 8);
  v30 = *(_QWORD *)(v27 + 16);
  v31 = *(_QWORD *)(v27 + 24);
  v32 = *(_QWORD *)(v27 + 32);
  v33 = *(_QWORD *)(v27 + 40);
  v34 = *(_BYTE *)(v27 + 48);
  sub_1000D55F0(*(_QWORD *)v27, v29, v30, v31, v32, v33, v34);
  *(_QWORD *)v26 = v28;
  *(_QWORD *)(v26 + 8) = v29;
  *(_QWORD *)(v26 + 16) = v30;
  *(_QWORD *)(v26 + 24) = v31;
  *(_QWORD *)(v26 + 32) = v32;
  *(_QWORD *)(v26 + 40) = v33;
  *(_BYTE *)(v26 + 48) = v34;
  return a1;
}

_QWORD *sub_1002C332C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  sub_100094D04(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  v7[17] = *((_BYTE *)a2 + v6 + 17);
  v7[18] = *((_BYTE *)a2 + v6 + 18);
  v9 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_retain();
  swift_release(v16);
  v17 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_retain();
  swift_release(v17);
  v14[16] = v15[16];
  if (a1 != a2)
  {
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_100021A14((uint64_t)a1 + v18, (uint64_t *)&unk_100C09CD0);
    v21 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v20) == 1)
    {
      v22 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22))
      {
        v23 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        v24 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
        v24 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v22);
      }
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v24);
  }
  v25 = a3[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v27 + 2);
  v31 = *((_QWORD *)v27 + 3);
  v32 = *((_QWORD *)v27 + 4);
  v33 = *((_QWORD *)v27 + 5);
  v34 = v27[48];
  sub_1000D55F0(*(_QWORD *)v27, v29, v30, v31, v32, v33, v34);
  v35 = *(_QWORD *)v26;
  v36 = *((_QWORD *)v26 + 1);
  v37 = *((_QWORD *)v26 + 2);
  v38 = *((_QWORD *)v26 + 3);
  v39 = *((_QWORD *)v26 + 4);
  v40 = *((_QWORD *)v26 + 5);
  v41 = v26[48];
  *(_QWORD *)v26 = v28;
  *((_QWORD *)v26 + 1) = v29;
  *((_QWORD *)v26 + 2) = v30;
  *((_QWORD *)v26 + 3) = v31;
  *((_QWORD *)v26 + 4) = v32;
  *((_QWORD *)v26 + 5) = v33;
  v26[48] = v34;
  sub_1000D31D0(v35, v36, v37, v38, v39, v40, v41);
  return a1;
}

uint64_t sub_1002C3568(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(a2 + v7 + 17);
  *(_BYTE *)(v8 + 18) = *(_BYTE *)(a2 + v7 + 18);
  v10 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[6];
  v15 = a3[7];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v18 = (void *)(a1 + v15);
  v19 = (const void *)(a2 + v15);
  v20 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v19) == 1)
  {
    v21 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21))
    {
      v22 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload(v18, v20, 1);
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_BYTE *)(v24 + 48) = *(_BYTE *)(v25 + 48);
  return a1;
}

uint64_t sub_1002C371C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(a2 + v7 + 17);
  *(_BYTE *)(v8 + 18) = *(_BYTE *)(a2 + v7 + 18);
  v10 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_release(v17);
  v18 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  swift_release(v18);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  if (a1 != a2)
  {
    v19 = a3[7];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    sub_100021A14(a1 + v19, (uint64_t *)&unk_100C09CD0);
    v22 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v21) == 1)
    {
      v23 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v23))
      {
        v24 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload(v20, v22, 1);
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_BYTE *)(v27 + 48);
  v29 = *(_QWORD *)v26;
  v30 = *(_QWORD *)(v26 + 8);
  v31 = *(_QWORD *)(v26 + 16);
  v32 = *(_QWORD *)(v26 + 24);
  v33 = *(_QWORD *)(v26 + 32);
  v34 = *(_QWORD *)(v26 + 40);
  v35 = *(_BYTE *)(v26 + 48);
  v36 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v36;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_BYTE *)(v26 + 48) = v28;
  sub_1000D31D0(v29, v30, v31, v32, v33, v34, v35);
  return a1;
}

void sub_1002C391C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 24));
    sub_100079F70();
  }
  else
  {
    v6 = sub_10009E908();
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
      v8 = *(int *)(a3 + 28);
    }
    sub_1000B250C(a1 + v8, a2, v7);
  }
}

void sub_1002C3998()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000993A8();
  if (v4)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_100079F70();
  }
  else
  {
    v5 = v3;
    v6 = v2;
    v7 = sub_10009E908();
    if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == v6)
    {
      v8 = v7;
      v9 = *(int *)(v5 + 20);
    }
    else
    {
      v8 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
      v9 = *(int *)(v5 + 28);
    }
    sub_1000987C4(v1 + v9, v0, v0, v8);
  }
}

uint64_t assignWithCopy for FullscreenMapPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for FullscreenMapPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

unint64_t sub_1002C3A94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3CC8;
  if (!qword_100BD3CC8)
  {
    v1 = sub_100075EB0(&qword_100BD3CD0);
    sub_1002C4E14((uint64_t)&unk_100BD3CD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3CC8);
  }
  return result;
}

unint64_t sub_1002C3B18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3CE0;
  if (!qword_100BD3CE0)
  {
    v1 = sub_100075EB0(&qword_100BD3BE0);
    sub_1002C3B9C();
    sub_10007AB60((uint64_t)&unk_100BD3CF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3CE0);
  }
  return result;
}

unint64_t sub_1002C3B9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3CE8;
  if (!qword_100BD3CE8)
  {
    v1 = sub_100075EB0(&qword_100BD3BD8);
    sub_1002C3C20();
    sub_10007AB60((uint64_t)&qword_100BC4050);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3CE8);
  }
  return result;
}

unint64_t sub_1002C3C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3CF0;
  if (!qword_100BD3CF0)
  {
    v1 = sub_100075EB0(&qword_100BD3BD0);
    sub_10007A100((uint64_t)&unk_100BD3C08);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3CF0);
  }
  return result;
}

uint64_t sub_1002C3CC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAFCA4, 1);
}

uint64_t sub_1002C3CD0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAFC7C, 1);
}

uint64_t sub_1002C3CE0(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for MainViewFullscreenMapZoomTransitionModifier(a2, a1);
  return a2;
}

uint64_t sub_1002C3D14()
{
  _QWORD *v0;

  swift_release(v0[2]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 3);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002C3D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002BFBC4(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD3E18, (uint64_t)&nominal type descriptor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
}

uint64_t sub_1002C3D78@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;

  v4 = sub_1000BA78C();
  return sub_1002C17C8(v4, a1, a2);
}

uint64_t sub_1002C3DB8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for FullscreenMapView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v4));
  v6 = v1[5];
  v7 = v0 + v4 + v6 + *(int *)(sub_10009E908() + 36);
  v8 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (_QWORD *)(v0 + v4 + v1[6]);
  swift_release(*v9);
  swift_release(v9[1]);
  v10 = (_QWORD *)(v0 + v4 + v1[7]);
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release(*v10);
  }
  v12 = v0 + v4 + v1[8];
  sub_1000D31D0(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(_BYTE *)(v12 + 48));
  return sub_1000B4380(v0, v4 + v5, v3 | 7);
}

void sub_1002C3EE4()
{
  sub_1002C4034(sub_1004B7DF0);
}

unint64_t sub_1002C3EF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3D58;
  if (!qword_100BD3D58)
  {
    v1 = sub_100075EB0(&qword_100BD3D50);
    sub_10007AB60((uint64_t)&unk_100BD3D60);
    sub_1001CDA94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3D58);
  }
  return result;
}

uint64_t sub_1002C3F78()
{
  return sub_1002C3F84(sub_1002C2B48);
}

uint64_t sub_1002C3F84(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;

  v1 = sub_1000BA78C();
  return a1(v1);
}

uint64_t sub_1002C3FB0()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002C3FE4(uint64_t a1)
{
  uint64_t v1;

  sub_10053708C(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), (char *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1002C3FF4()
{
  uint64_t v0;

  return sub_1002C1BD4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002C3FFC()
{
  uint64_t v0;

  return sub_1002C1D14(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002C4008()
{
  return sub_1002C3F84(sub_1002C218C);
}

uint64_t sub_1002C4018()
{
  return sub_1002C3F84(sub_1002C24C8);
}

void sub_1002C4028()
{
  sub_1002C4034(sub_1004B7E00);
}

void sub_1002C4034(void (*a1)(void))
{
  _QWORD *v2;

  v2 = (_QWORD *)sub_1000BA78C();
  sub_1002C2B20(v2, a1);
  sub_10004A298();
}

_QWORD *sub_1002C405C(_QWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t *, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v4[3] = a2[3];
    v8 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(v4 + 7) = v8;
    v9 = v8;
    v10 = **(void (***)(_QWORD *, uint64_t *, uint64_t, __n128))(v8 - 8);
    swift_bridgeObjectRetain(v7);
    v11 = swift_retain();
    v10(v4 + 4, a2 + 4, v9, v11);
    v4[9] = a2[9];
    v12 = a3[8];
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    swift_retain();
    v15 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v14) == 1)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[16] = *(_BYTE *)(v14 + 16);
      v13[17] = *(_BYTE *)(v14 + 17);
      v13[18] = *(_BYTE *)(v14 + 18);
      v16 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v17 = &v13[v16];
      v18 = v14 + v16;
      v19 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = 1;
    }
    else
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v20);
    v22 = a3[9];
    v23 = (char *)v4 + v22;
    v24 = (uint64_t)a2 + v22;
    v25 = *(_QWORD *)v24;
    v26 = *(_BYTE *)(v24 + 8);
    sub_10008D47C(*(_QWORD *)v24, v26);
    *(_QWORD *)v23 = v25;
    v23[8] = v26;
    v27 = a3[10];
    v28 = (char *)v4 + v27;
    v29 = (uint64_t)a2 + v27;
    v30 = *(_QWORD *)v29;
    v31 = *(_BYTE *)(v29 + 9);
    LOBYTE(v23) = *(_BYTE *)(v29 + 8);
    sub_100082BE8(*(_QWORD *)v29, v23, v31);
    *(_QWORD *)v28 = v30;
    v28[8] = (char)v23;
    v28[9] = v31;
    v32 = a3[11];
    v33 = a3[12];
    v34 = (_QWORD *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = *v35;
    v37 = v35[1];
    *v34 = v36;
    v34[1] = v37;
    v38 = (char *)v4 + v33;
    v39 = (char *)a2 + v33;
    *v38 = *v39;
    *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
    v40 = a3[13];
    v41 = a3[14];
    v42 = (char *)v4 + v40;
    v43 = (char *)a2 + v40;
    *v42 = *v43;
    *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
    v44 = (char *)v4 + v41;
    v45 = (char *)a2 + v41;
    *v44 = *v45;
    *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

double sub_1002C42A0(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease();
  swift_release(a1[3]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 4);
  swift_release(a1[9]);
  v4 = (_QWORD *)((char *)a1 + a2[8]);
  sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = (char *)v4 + *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release(*v4);
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[9]), *((_BYTE *)a1 + a2[9] + 8));
  sub_100082C5C(*(_QWORD *)((char *)a1 + a2[10]), *((unsigned __int8 *)a1 + a2[10] + 8), *((_BYTE *)a1 + a2[10] + 9));
  swift_release(*(_QWORD *)((char *)a1 + a2[11]));
  swift_release(*(_QWORD *)((char *)a1 + a2[12] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[13] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[14] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1002C43AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = a2 + 32;
  v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  swift_bridgeObjectRetain(v6);
  v11 = swift_retain();
  v10(a1 + 32, v7, v9, v11);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  swift_retain();
  v15 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v14) == 1)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
    *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
    *(_BYTE *)(v13 + 18) = *(_BYTE *)(v14 + 18);
    v16 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v17 = v13 + v16;
    v18 = v14 + v16;
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = 1;
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    swift_retain();
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v20);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = *(_BYTE *)(v23 + 8);
  sub_10008D47C(*(_QWORD *)v23, v25);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v25;
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *(_BYTE *)(v28 + 9);
  LOBYTE(v22) = *(_BYTE *)(v28 + 8);
  sub_100082BE8(*(_QWORD *)v28, v22, v30);
  *(_QWORD *)v27 = v29;
  *(_BYTE *)(v27 + 8) = v22;
  *(_BYTE *)(v27 + 9) = v30;
  v31 = a3[11];
  v32 = a3[12];
  v33 = (_QWORD *)(a1 + v31);
  v34 = (uint64_t *)(a2 + v31);
  v35 = *v34;
  v36 = v34[1];
  *v33 = v35;
  v33[1] = v36;
  v37 = a1 + v32;
  v38 = a2 + v32;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  v39 = a3[13];
  v40 = a3[14];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_BYTE *)v41 = *(_BYTE *)v42;
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
  v43 = a1 + v40;
  v44 = a2 + v40;
  *(_BYTE *)v43 = *(_BYTE *)v44;
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1002C45C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release(v7);
  sub_100094D04((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release(v8);
  if (a1 != a2)
  {
    v9 = a3[8];
    v10 = a1 + v9;
    v11 = a2 + v9;
    sub_100021A14(a1 + v9, &qword_100BC37E0);
    v12 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
      *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
      *(_BYTE *)(v10 + 17) = *(_BYTE *)(v11 + 17);
      *(_BYTE *)(v10 + 18) = *(_BYTE *)(v11 + 18);
      v13 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v14 = v10 + v13;
      v15 = v11 + v13;
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      v17 = 1;
    }
    else
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v17);
  }
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_10008D47C(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v22;
  sub_1000B15F8(v23, v24);
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *(_BYTE *)(v27 + 9);
  LOBYTE(v19) = *(_BYTE *)(v27 + 8);
  sub_100082BE8(*(_QWORD *)v27, v19, v29);
  v30 = *(_QWORD *)v26;
  v31 = *(_BYTE *)(v26 + 9);
  *(_QWORD *)v26 = v28;
  v32 = *(unsigned __int8 *)(v26 + 8);
  *(_BYTE *)(v26 + 8) = v19;
  *(_BYTE *)(v26 + 9) = v29;
  sub_100082C5C(v30, v32, v31);
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a1 + v33);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  swift_retain();
  swift_release(v36);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  v37 = a3[12];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  swift_retain();
  swift_release(v40);
  v41 = a3[13];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  v44 = *(_QWORD *)(v42 + 8);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  swift_retain();
  swift_release(v44);
  v45 = a3[14];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)v47;
  v48 = *(_QWORD *)(v46 + 8);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
  swift_retain();
  swift_release(v48);
  return a1;
}

uint64_t sub_1002C485C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_OWORD *)(a2 + 32);
  v8 = *(_OWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  v10 = a3[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  v13 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v12) == 1)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
    v11[17] = v12[17];
    v11[18] = v12[18];
    v14 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload(v11, v13, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v18 = a3[9];
  v19 = a3[10];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_WORD *)(v22 + 8) = *(_WORD *)(v23 + 8);
  v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v25 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  return a1;
}

uint64_t sub_1002C49C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 32));
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_release(v10);
  if (a1 != a2)
  {
    v11 = a3[8];
    v12 = (char *)(a1 + v11);
    v13 = (char *)(a2 + v11);
    sub_100021A14(a1 + v11, &qword_100BC37E0);
    v14 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v12[16] = v13[16];
      v12[17] = v13[17];
      v12[18] = v13[18];
      v15 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v16 = &v12[v15];
      v17 = &v13[v15];
      v18 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  LOBYTE(v21) = *((_BYTE *)v21 + 8);
  v23 = *(_QWORD *)v20;
  v24 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = (_BYTE)v21;
  sub_1000B15F8(v23, v24);
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  v29 = *((_BYTE *)v27 + 8);
  LOBYTE(v27) = *((_BYTE *)v27 + 9);
  v30 = *(_QWORD *)v26;
  v31 = *(_BYTE *)(v26 + 9);
  *(_QWORD *)v26 = v28;
  v32 = *(unsigned __int8 *)(v26 + 8);
  *(_BYTE *)(v26 + 8) = v29;
  *(_BYTE *)(v26 + 9) = (_BYTE)v27;
  sub_100082C5C(v30, v32, v31);
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a1 + v33);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  swift_release(v36);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  v37 = a3[12];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  swift_release(v40);
  v41 = a3[13];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  v44 = *(_QWORD *)(v42 + 8);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  swift_release(v44);
  v45 = a3[14];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)v47;
  v48 = *(_QWORD *)(v46 + 8);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
  swift_release(v48);
  return a1;
}

uint64_t sub_1002C4BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C4C08);
}

uint64_t sub_1002C4C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C4C18);
}

void sub_1002C4C1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_100991978;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_100991990;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100158E04(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_1009919A8;
    v4[6] = "\n";
    v4[7] = &unk_1009919C0;
    v4[8] = &unk_1009919C0;
    v4[9] = &unk_1009919C0;
    v4[10] = &unk_1009919C0;
    swift_initStructMetadata(a1, 256, 11, v4, a1 + 16);
  }
}

unint64_t sub_1002C4CD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3E78;
  if (!qword_100BD3E78)
  {
    v1 = sub_100075EB0(&qword_100BD3D30);
    sub_10007AB60((uint64_t)&unk_100BD3E80);
    sub_10007AB60((uint64_t)&unk_100BD3E88);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3E78);
  }
  return result;
}

unint64_t sub_1002C4D70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3E98;
  if (!qword_100BD3E98)
  {
    v1 = sub_100075EB0(&qword_100BD3D70);
    sub_1002C4E14((uint64_t)&unk_100BD3EA0);
    sub_10007AB60((uint64_t)&unk_100BD3EC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3E98);
  }
  return result;
}

unint64_t sub_1002C4E14(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;

  result = sub_10009987C(a1);
  if (!result)
  {
    v5 = v4;
    v6 = sub_100075EB0(v3);
    v5();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1002C4E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3EA8;
  if (!qword_100BD3EA8)
  {
    v1 = sub_100075EB0(&qword_100BD3D40);
    sub_1002C4EFC();
    sub_10007AB60((uint64_t)&qword_100BD3EB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3EA8);
  }
  return result;
}

unint64_t sub_1002C4EFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3EB0;
  if (!qword_100BD3EB0)
  {
    v1 = sub_100075EB0(&qword_100BD3D38);
    sub_1002C3EF0();
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3EB0);
  }
  return result;
}

uint64_t sub_1002C4F80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAFCCC, 1);
}

uint64_t sub_1002C4F94(uint64_t a1, uint64_t a2)
{
  return sub_1002C50D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002C0244);
}

uint64_t sub_1002C4FA4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 72));
  v7 = (_QWORD *)(v0 + v4 + v1[8]);
  sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v7) == 1)
  {
    v8 = (char *)v7 + *(int *)(sub_10009E908() + 36);
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release(*v7);
  }
  sub_1000B15F8(*(_QWORD *)(v6 + v1[9]), *(_BYTE *)(v6 + v1[9] + 8));
  sub_100082C5C(*(_QWORD *)(v6 + v1[10]), *(unsigned __int8 *)(v6 + v1[10] + 8), *(_BYTE *)(v6 + v1[10] + 9));
  swift_release(*(_QWORD *)(v6 + v1[11]));
  sub_1000C5320(v1[12]);
  sub_1000C5320(v1[13]);
  sub_1000C5320(v1[14]);
  return sub_1000B4380(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002C50C8(uint64_t a1, uint64_t a2)
{
  return sub_1002C50D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002C0344);
}

uint64_t sub_1002C50D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  sub_1000D169C();
  return a3(a1, a2, v3 + v6);
}

uint64_t sub_1002C5120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1000D169C();
  return sub_1002C0380((_QWORD *)(v1 + v3), a1);
}

uint64_t sub_1002C5148()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1002C516C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1007EE574(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

unint64_t sub_1002C5174()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100C0A660;
  if (!qword_100C0A660)
  {
    v1 = sub_100075EB0(&qword_100BD3EE8);
    sub_1002C51E0();
    sub_1002C52E8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100C0A660);
  }
  return result;
}

unint64_t sub_1002C51E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3EF8;
  if (!qword_100BD3EF8)
  {
    v1 = sub_100075EB0((uint64_t *)&unk_100C0A670);
    sub_1002C5264();
    sub_10007A100((uint64_t)&unk_100BD3F08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3EF8);
  }
  return result;
}

unint64_t sub_1002C5264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD3F00;
  if (!qword_100BD3F00)
  {
    v1 = sub_100075EB0((uint64_t *)&unk_100C0A680);
    sub_10007A100((uint64_t)&unk_100BD3C08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3F00);
  }
  return result;
}

unint64_t sub_1002C52E8()
{
  unint64_t result;

  result = qword_100C0A690;
  if (!qword_100C0A690)
  {
    result = swift_getWitnessTable(&unk_1009D1FF8, &type metadata for LocationPreviewOnMapSheetViewModifier);
    atomic_store(result, (unint64_t *)&qword_100C0A690);
  }
  return result;
}

unint64_t sub_1002C5328()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  result = qword_100BD3F18;
  if (!qword_100BD3F18)
  {
    v1 = sub_100075EB0(&qword_100BD3EE0);
    v2 = sub_100075EB0(&qword_100BD3ED0);
    v4 = &type metadata for Color;
    v5 = &unk_100B68C30;
    v6 = &protocol witness table for Color;
    v7 = (void *)sub_1001512BC();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v4 = (void *)v2;
    v5 = &type metadata for Bool;
    v6 = (void *)OpaqueTypeConformance2;
    v7 = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_10007AB60((uint64_t)&unk_100BD3F20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD3F18);
  }
  return result;
}

uint64_t ResettingBool.__allocating_init(wrappedValue:interval:)(char a1, double a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_allocObject(v2, 33, 7);
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = a1;
  *(double *)(result + 16) = a2;
  return result;
}

void sub_1002C5470(uint64_t a1)
{
  uint64_t v1;

  sub_1000BA7B4(a1);
  if (*(_BYTE *)(v1 + 32) == 1)
    sub_1002C549C();
}

void sub_1002C549C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  double v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(void **)(v0 + 24);
  if (v1)
    objc_msgSend(v1, "invalidate");
  v2 = (void *)objc_opt_self(NSTimer);
  v3 = *(double *)(v0 + 16);
  v8[4] = sub_1002C56D8;
  v9 = v0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10021BA7C;
  v8[3] = &unk_100B6B128;
  v4 = _Block_copy(v8);
  v5 = v9;
  swift_retain();
  swift_release(v5);
  v6 = objc_msgSend(v2, "scheduledTimerWithTimeInterval:repeats:block:", 0, v4, v3);
  _Block_release(v4);
  v7 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 24) = v6;

}

uint64_t ResettingBool.wrappedValue.getter(uint64_t a1)
{
  uint64_t v1;

  sub_1000BA7B4(a1);
  return *(unsigned __int8 *)(v1 + 32);
}

void ResettingBool.wrappedValue.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = swift_beginAccess(v1 + 32, v4, 1, 0);
  *(_BYTE *)(v1 + 32) = a1;
  sub_1002C5470(v3);
}

void (*ResettingBool.wrappedValue.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 32, a1, 33, 0);
  return sub_1002C5628;
}

void sub_1002C5628(uint64_t a1, char a2)
{
  uint64_t v3;

  v3 = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1002C5470(v3);
}

uint64_t sub_1002C5658(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = swift_beginAccess(a2 + 32, v5, 1, 0);
  *(_BYTE *)(a2 + 32) = 0;
  return sub_1002C5470(v3);
}

uint64_t ResettingBool.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ResettingBool.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t sub_1002C56D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C5658(a1, v1);
}

char *sub_1002C56E0(void (*a1)(uint64_t *__return_ptr), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  char *v7;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v86;
  Swift::String v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  char *v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  unint64_t v120;
  __int128 v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t *__return_ptr);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  objc_super v141;
  uint64_t v142;
  uint64_t v143;

  v118 = a7;
  v134 = a6;
  v132 = a5;
  v109 = a4;
  v136 = a1;
  v9 = (objc_class *)sub_10009D408();
  v10 = type metadata accessor for CurrentWeather(0);
  sub_1000B43A4(v10, (uint64_t)&v143);
  v116 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v115 = v13;
  v14 = type metadata accessor for WeatherData(0);
  sub_1000B43A4(v14, (uint64_t)&v142);
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v114 = v16;
  sub_1000BA294(&qword_100BC3380);
  sub_10009D98C();
  __chkstk_darwin(v17);
  v131 = (uint64_t)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v106 - v20;
  v22 = sub_1000BE878();
  v137 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v130 = (uint64_t)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v106 - v25;
  v27 = type metadata accessor for Date(0);
  sub_1000B43A4(v27, (uint64_t)&v134);
  v108 = v28;
  sub_10009D98C();
  __chkstk_darwin(v29);
  sub_100088FDC();
  v119 = v30;
  type metadata accessor for AppConfigurationState(0);
  sub_10009D98C();
  __chkstk_darwin(v31);
  v33 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for WeatherDataConfiguration(0);
  sub_1000B43A4(v34, (uint64_t)&v132);
  v107 = v35;
  sub_10009D98C();
  *(_QWORD *)&v37 = __chkstk_darwin(v36).n128_u64[0];
  v39 = (char *)&v106 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections] = _swiftEmptyArrayStorage;
  v141.receiver = v7;
  v141.super_class = v9;
  v133 = (char *)objc_msgSendSuper2(&v141, "initWithStyle:", 2, v37);
  v110 = a2;
  v136(&v138);
  v111 = v138;
  sub_100084050(v138 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, (uint64_t)v33, type metadata accessor for AppConfigurationState);
  AppConfiguration.weatherData.getter(v40);
  v41 = type metadata accessor for AppConfiguration(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v33, v41);
  v117 = v39;
  v136 = (void (*)(uint64_t *__return_ptr))sub_1002C60C0();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_1005FF16C();
  v49 = v48;
  v50 = *(_QWORD *)(v48 + 16);
  if (v50 >= *(_QWORD *)(v48 + 24) >> 1)
  {
    sub_1000CD6AC();
    v49 = v48;
  }
  *(_QWORD *)(v49 + 16) = v50 + 1;
  v51 = v49 + 32 * v50;
  *(_QWORD *)(v51 + 32) = v136;
  *(_QWORD *)(v51 + 40) = v43;
  *(_QWORD *)(v51 + 48) = v45;
  *(_BYTE *)(v51 + 56) = v47 & 1;
  Date.init()(v48);
  v52 = v111;
  v53 = v111 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v54 = *(_QWORD *)(v53 + *(int *)(type metadata accessor for LocationsState(0) + 24));
  v55 = *(_QWORD *)(v54 + 16);
  v106 = v54;
  if (v55)
  {
    v128 = v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
    v56 = *(unsigned __int8 *)(v137 + 80);
    v57 = v54 + ((v56 + 32) & ~v56);
    v58 = *(_QWORD *)(v137 + 72);
    v136 = *(void (**)(uint64_t *__return_ptr))(v137 + 16);
    v126 = (v56 + 16) & ~v56;
    v127 = v58;
    v124 = (v135 + v126 + 7) & 0xFFFFFFFFFFFFFFF8;
    v125 = v56 | 7;
    v123 = (v124 + 23) & 0xFFFFFFFFFFFFFFF8;
    v122 = v123 + 8;
    swift_bridgeObjectRetain(v54);
    v120 = 0x80000001009F8D80;
    v121 = xmmword_100988D00;
    v113 = xmmword_100991E50;
    v112 = xmmword_100991E40;
    v129 = v21;
    v135 = v22;
    while (1)
    {
      sub_1000D16C0((uint64_t)v26, v57);
      v59 = *(_QWORD *)(v128 + 16);
      swift_bridgeObjectRetain(v59);
      v61 = LocationModel.id.getter(v60);
      v63 = v62;
      if (*(_QWORD *)(v59 + 16))
      {
        v64 = sub_1000991C8(v61);
        if ((v65 & 1) != 0)
        {
          v66 = v64;
          v67 = *(_QWORD *)(v59 + 56);
          v68 = sub_1000C5C94();
          sub_100084050(v67 + *(_QWORD *)(*(_QWORD *)(v68 - 8) + 72) * v66, (uint64_t)v21, type metadata accessor for LocationWeatherDataState);
          v69 = (uint64_t)v21;
          v70 = 0;
        }
        else
        {
          v68 = sub_1000C5C94();
          v69 = (uint64_t)v21;
          v70 = 1;
        }
        sub_1000988B8(v69, v70);
        v22 = v135;
      }
      else
      {
        v68 = sub_1000C5C94();
        sub_1000988B8((uint64_t)v21, 1);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v140 = _swiftEmptyArrayStorage;
      v71 = v131;
      sub_1000F1F18((uint64_t)v21, v131);
      sub_1000C5C94();
      if (_s7Weather24LocationCompositionStateOwet_0(v71, 1, v68) != 1)
      {
        v77 = (char *)&loc_1002C5C58 + 4 * byte_100991EC0[swift_getEnumCaseMultiPayload(v71)];
        __asm { BR              X9 }
      }
      sub_1000BBF68(0, 1);
      sub_1000C532C();
      if (v75)
      {
        sub_1000BA7C8(v73, v74);
        v73 = v72;
      }
      *(_QWORD *)(v73 + 16) = v68;
      v76 = v73 + 40 * v63;
      *(_QWORD *)(v76 + 32) = 0xD000000000000011;
      *(_QWORD *)(v76 + 40) = v120;
      *(_OWORD *)(v76 + 48) = v121;
      *(_BYTE *)(v76 + 64) = 0;
      v140 = (_QWORD *)v73;
      v138 = LocationModel.name.getter(v72);
      v139 = v78;
      v79 = LocationModel.kind.getter(v138);
      v80 = Location.Identifier.Kind.rawValue.getter(v79 & 1);
      v82 = v81;
      v83 = Location.Identifier.Kind.rawValue.getter(1);
      if (v80 == v83 && v82 == v84)
      {
        swift_bridgeObjectRelease_n(v82, 2);
      }
      else
      {
        v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v82, v83, v84, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v86 & 1) == 0)
          goto LABEL_24;
      }
      v87._countAndFlagsBits = 0x6E65727275432820;
      v87._object = (void *)0xEA00000000002974;
      String.append(_:)(v87);
LABEL_24:
      v88 = swift_allocObject(&unk_100B6B1F0, 24, 7);
      swift_unknownObjectWeakInit(v88 + 16, v133);
      v89 = v130;
      sub_1000D16C0(v130, (uint64_t)v26);
      v90 = swift_allocObject(&unk_100B6B218, v122, v125);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 32))(v90 + v126, v89, v22);
      v91 = (_QWORD *)(v90 + v124);
      v92 = v134;
      *v91 = v132;
      v91[1] = v92;
      *(_QWORD *)(v90 + v123) = v88;
      v93 = v140;
      swift_retain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native(v93) & 1) == 0)
      {
        sub_1000BBF68(0, v93[2] + 1);
        v93 = v101;
      }
      v95 = v93[2];
      v94 = v93[3];
      if (v95 >= v94 >> 1)
      {
        sub_1000BBF68(v94 > 1, v95 + 1);
        v93 = v102;
      }
      v93[2] = v95 + 1;
      v96 = &v93[5 * v95];
      v96[4] = sub_1002C7CE4;
      v96[5] = v90;
      v96[6] = 0;
      v96[7] = 0;
      *((_BYTE *)v96 + 64) = 1;
      v140 = v93;
      v98 = v138;
      v97 = v139;
      v99 = *(_QWORD *)(v49 + 16);
      if (v99 >= *(_QWORD *)(v49 + 24) >> 1)
      {
        sub_1000CD6AC();
        v49 = v103;
      }
      *(_QWORD *)(v49 + 16) = v99 + 1;
      v100 = v49 + 32 * v99;
      *(_QWORD *)(v100 + 32) = v98;
      *(_QWORD *)(v100 + 40) = v97;
      *(_QWORD *)(v100 + 48) = v93;
      *(_BYTE *)(v100 + 56) = 1;
      swift_release(v90);
      v21 = v129;
      sub_100021A14((uint64_t)v129, &qword_100BC3380);
      v22 = v135;
      (*(void (**)(char *, uint64_t))(v137 + 8))(v26, v135);
      v57 += v127;
      if (!--v55)
        goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain(v54);
LABEL_33:
  sub_100094F7C((uint64_t)&v137);
  v104 = v133;

  sub_100094F7C((uint64_t)&v135);
  sub_100094F7C((uint64_t)&v136);
  swift_release(v134);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v118);
  swift_bridgeObjectRelease();
  sub_100094F10(v119, *(uint64_t (**)(uint64_t, _QWORD))(v108 + 8));
  sub_100094F10((uint64_t)v117, *(uint64_t (**)(uint64_t, _QWORD))(v107 + 8));
  *(_QWORD *)&v104[OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections] = v49;
  swift_bridgeObjectRelease();
  return v104;
}

uint64_t sub_1002C60C0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v20 = 0;
  v21 = 0xE000000000000000;
  WeatherDataConfiguration.offlineDataFreshnessInterval.getter();
  Double.write<A>(to:)(&v20, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v0 = v20;
  v1 = v21;
  sub_1005FF148(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  v3 = v2;
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  if (v5 >= v4 >> 1)
  {
    sub_1005FF148(v4 > 1, v5 + 1, 1, v2);
    v3 = v2;
  }
  *(_QWORD *)(v3 + 16) = v5 + 1;
  v6 = v3 + 40 * v5;
  *(_QWORD *)(v6 + 32) = 0xD00000000000001FLL;
  *(_QWORD *)(v6 + 40) = 0x80000001009F8E00;
  *(_QWORD *)(v6 + 48) = v0;
  *(_QWORD *)(v6 + 56) = v1;
  *(_BYTE *)(v6 + 64) = 0;
  v20 = 0;
  v21 = 0xE000000000000000;
  WeatherDataConfiguration.extendedRefreshHintInterval.getter(v2);
  v7 = Double.write<A>(to:)(&v20, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v8 = v20;
  v9 = v21;
  v11 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v3 + 24);
  if (v11 >= v10 >> 1)
  {
    sub_1005FF148(v10 > 1, v11 + 1, 1, v3);
    v3 = v7;
  }
  *(_QWORD *)(v3 + 16) = v11 + 1;
  v12 = v3 + 40 * v11;
  *(_QWORD *)(v12 + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(v12 + 40) = 0x80000001009F8E20;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_BYTE *)(v12 + 64) = 0;
  v20 = 0;
  v21 = 0xE000000000000000;
  WeatherDataConfiguration.currentLocationCertaintyRadius.getter(v7);
  Double.write<A>(to:)(&v20, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v13 = v20;
  v14 = v21;
  v16 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  if (v16 >= v15 >> 1)
  {
    sub_1005FF148(v15 > 1, v16 + 1, 1, v3);
    v3 = v19;
  }
  *(_QWORD *)(v3 + 16) = v16 + 1;
  v17 = v3 + 40 * v16;
  *(_QWORD *)(v17 + 32) = 0xD000000000000021;
  *(_QWORD *)(v17 + 40) = 0x80000001009F8E40;
  *(_QWORD *)(v17 + 48) = v13;
  *(_QWORD *)(v17 + 56) = v14;
  *(_BYTE *)(v17 + 64) = 0;
  return v3;
}

uint64_t sub_1002C62B4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char v19;
  void *v20;
  Class isa;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  Class v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  __n128 v54;
  char *v55;
  __n128 v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  double v75;
  double v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, __n128);
  uint64_t v90;
  _QWORD v92[2];
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;

  v93 = a6;
  v95 = a2;
  v9 = type metadata accessor for Date(0);
  v97 = *(_QWORD *)(v9 - 8);
  v98 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v92 - v13;
  v16 = CurrentWeather.date.getter(v15);
  v92[1] = a4;
  v17 = WeatherDataConfiguration.offlineDataFreshnessInterval.getter(v16);
  Date.addingTimeInterval(_:)(v17, v18);
  v19 = static Date.< infix(_:_:)(v11, a5);
  v20 = (void *)objc_opt_self(NSDateFormatter);
  v94 = v14;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v20, "localizedStringFromDate:dateStyle:timeStyle:", isa, 1, 3);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  sub_10048BDC0();
  v26 = *(_QWORD *)(*a3 + 16);
  sub_1001ADDB8(v26);
  v27 = *a3;
  *(_QWORD *)(v27 + 16) = v26 + 1;
  v28 = v27 + 40 * v26;
  *(_OWORD *)(v28 + 32) = xmmword_100991E60;
  *(_QWORD *)(v28 + 48) = v23;
  *(_QWORD *)(v28 + 56) = v25;
  *(_BYTE *)(v28 + 64) = 0;
  *a3 = v27;
  sub_10048BDC0();
  v29 = *(_QWORD *)(*a3 + 16);
  sub_1001ADDB8(v29);
  v30 = (v19 & 1) == 0;
  v31 = 28494;
  if ((v19 & 1) != 0)
    v31 = 7562585;
  v32 = 0xE200000000000000;
  v33 = *a3;
  *(_QWORD *)(v33 + 16) = v29 + 1;
  v34 = v33 + 40 * v29;
  *(_OWORD *)(v34 + 32) = xmmword_100991E70;
  if ((v19 & 1) != 0)
    v32 = 0xE300000000000000;
  *(_QWORD *)(v34 + 48) = v31;
  *(_QWORD *)(v34 + 56) = v32;
  *(_BYTE *)(v34 + 64) = 0;
  *a3 = v33;
  if ((v19 & 1) != 0)
    v35 = 0x5320656D61636542;
  else
    v35 = 0x2073656D6F636542;
  if (v30)
    v36 = 0xED0000656C617453;
  else
    v36 = 0xEC000000656C6174;
  v96 = v11;
  v37 = Date._bridgeToObjectiveC()().super.isa;
  v38 = objc_msgSend(v20, "localizedStringFromDate:dateStyle:timeStyle:", v37, 1, 3);

  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  sub_10048BDC0();
  v42 = *(_QWORD *)(*a3 + 16);
  v43 = sub_1001ADDB8(v42);
  v44 = *a3;
  *(_QWORD *)(v44 + 16) = v42 + 1;
  v45 = v44 + 40 * v42;
  *(_QWORD *)(v45 + 32) = v35;
  *(_QWORD *)(v45 + 40) = v36;
  *(_QWORD *)(v45 + 48) = v39;
  *(_QWORD *)(v45 + 56) = v41;
  *(_BYTE *)(v45 + 64) = 0;
  *a3 = v44;
  v46 = LocationModel.kind.getter(v43);
  v47 = Location.Identifier.Kind.rawValue.getter(v46 & 1);
  v49 = v48;
  v50 = Location.Identifier.Kind.rawValue.getter(1);
  if (v47 == v50 && v49 == v51)
  {
    swift_bridgeObjectRelease_n(v49, 2);
    v55 = v94;
  }
  else
  {
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v50, v51, 0);
    swift_bridgeObjectRelease();
    v54 = swift_bridgeObjectRelease();
    v55 = v94;
    if ((v53 & 1) == 0)
      goto LABEL_26;
  }
  v56.n128_f64[0] = LocationModel.coordinate.getter(v54);
  v57 = v56.n128_f64[0];
  LocationModel.coordinate.getter(v56);
  v59 = v58;
  v99 = 0;
  v100 = 0xE000000000000000;
  Double.write<A>(to:)(&v99, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v60 = v99;
  v61 = v100;
  sub_10048BDC0();
  v62 = *(_QWORD *)(*a3 + 16);
  sub_1001ADDB8(v62);
  v63 = *a3;
  *(_QWORD *)(v63 + 16) = v62 + 1;
  v64 = v63 + 40 * v62;
  *(_OWORD *)(v64 + 32) = xmmword_100991E80;
  *(_QWORD *)(v64 + 48) = v60;
  *(_QWORD *)(v64 + 56) = v61;
  *(_BYTE *)(v64 + 64) = 0;
  *a3 = v63;
  v99 = 0;
  v100 = 0xE000000000000000;
  Double.write<A>(to:)(&v99, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v65 = v99;
  v66 = v100;
  sub_10048BDC0();
  v67 = *(_QWORD *)(*a3 + 16);
  sub_1001ADDB8(v67);
  v68 = *a3;
  *(_QWORD *)(v68 + 16) = v67 + 1;
  v69 = v68 + 40 * v67;
  *(_OWORD *)(v69 + 32) = xmmword_100991E90;
  *(_QWORD *)(v69 + 48) = v65;
  *(_QWORD *)(v69 + 56) = v66;
  *(_BYTE *)(v69 + 64) = 0;
  *a3 = v68;
  v70 = v93[3];
  v71 = v93[4];
  sub_1000DB418(v93, v70);
  v72 = dispatch thunk of LocationManagerType.currentCLLocation.getter(v70, v71);
  if (v72)
  {
    v73 = (void *)v72;
    v74 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v57, v59);
    objc_msgSend(v73, "distanceFromLocation:", v74);
    v76 = v75;
    v99 = 0;
    v100 = 0xE000000000000000;
    Double.write<A>(to:)(&v99, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v77 = v99;
    v78 = v100;
    sub_10048BDC0();
    v79 = *(_QWORD *)(*a3 + 16);
    v80 = sub_1001ADDB8(v79);
    v81 = *a3;
    *(_QWORD *)(v81 + 16) = v79 + 1;
    v82 = v81 + 40 * v79;
    *(_OWORD *)(v82 + 32) = xmmword_100991EA0;
    *(_QWORD *)(v82 + 48) = v77;
    *(_QWORD *)(v82 + 56) = v78;
    *(_BYTE *)(v82 + 64) = 0;
    *a3 = v81;
    v83 = WeatherDataConfiguration.currentLocationCertaintyRadius.getter(v80);
    if (v83 >= v76)
      v84 = 28494;
    else
      v84 = 7562585;
    if (v83 >= v76)
      v85 = 0xE200000000000000;
    else
      v85 = 0xE300000000000000;
    sub_10048BDC0();
    v86 = *(_QWORD *)(*a3 + 16);
    sub_1001ADDB8(v86);
    v87 = *a3;
    *(_QWORD *)(v87 + 16) = v86 + 1;
    v88 = v87 + 40 * v86;
    *(_OWORD *)(v88 + 32) = xmmword_100991EB0;
    *(_QWORD *)(v88 + 48) = v84;
    *(_QWORD *)(v88 + 56) = v85;
    *(_BYTE *)(v88 + 64) = 0;

    *a3 = v87;
  }
LABEL_26:
  v89 = *(void (**)(char *, uint64_t, __n128))(v97 + 8);
  v90 = v98;
  v89(v96, v98, v54);
  return ((uint64_t (*)(char *, uint64_t))v89)(v55, v90);
}

void sub_1002C680C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  id v18;
  id v19;
  void *Strong;
  void *v21;
  uint64_t v22[3];
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  char v26;

  v5 = a4 + 16;
  v6 = sub_1000BA294(&qword_100BD3370);
  v7 = type metadata accessor for MainAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v6, v11 + v9, v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_10097CA50;
  v13 = (_QWORD *)(v12 + v11);
  *v13 = LocationModel.id.getter(v12);
  v13[1] = v14;
  v13[2] = 0;
  v13[3] = 0xE000000000000000;
  v15 = type metadata accessor for WeatherDataAction(0);
  swift_storeEnumTagMultiPayload(v13, v15, 2);
  swift_storeEnumTagMultiPayload(v13, v7, 9);
  memset(v23, 0, sizeof(v23));
  v24 = 0;
  v25 = v12;
  v26 = 0;
  sub_10009FF10((uint64_t)v23, a2);
  v16 = sub_1000A0794(0, &qword_100BCBB30, UIAlertController_ptr);
  strcpy((char *)v22, "Invalidated ");
  BYTE5(v22[1]) = 0;
  HIWORD(v22[1]) = -5120;
  v17._countAndFlagsBits = LocationModel.name.getter(v16);
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18 = sub_100551298(v22[0], v22[1], 0xD00000000000005BLL, 0x80000001009F8DA0, 1);
  sub_1000A0794(0, &qword_100BCBB38, UIAlertAction_ptr);
  v19 = sub_10055134C(19279, 0xE200000000000000, 1, 0, 0);
  objc_msgSend(v18, "addAction:", v19);

  swift_beginAccess(v5, v22, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v21 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v18, 1, 0);

    v18 = v21;
  }

  sub_100021A14((uint64_t)v23, &qword_100BD3378);
}

void sub_1002C6A28()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001009F8EA0, "Weather/DebugOfflineViewController.swift", 40, 2);
  __break(1u);
}

void sub_1002C6AB0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)sub_10009D408();
  objc_msgSendSuper2(&v9, "viewDidLoad");
  sub_1001207F8(0x656E696C66664FLL, 0xE700000000000000, v0);
  v1 = objc_msgSend(v0, "tableView");
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = type metadata accessor for OfflineDebuggingKeyValueTableViewCell();
  sub_1000DB884(v3);

  v4 = sub_1000D8EDC();
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  v6 = type metadata accessor for InvalidateLocationTableViewCell();
  sub_1000DB884(v6);

  v7 = sub_1000D8EDC();
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "reloadData");

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1002C6BC8()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugOfflineViewController", 34, "init(style:)", 12, 0);
  __break(1u);
}

void sub_1002C6C00()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugOfflineViewController", 34, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t sub_1002C6C64(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v14[4];
  char v15;

  sub_1002C7E00(v2, (uint64_t)v14);
  if ((v15 & 1) != 0)
  {
    v4 = type metadata accessor for InvalidateLocationTableViewCell();
    return UITableView.dequeue<A>(cell:at:name:)(v4, a2, 0, 0, v4, v5);
  }
  else
  {
    v7 = v14[0];
    v8 = v14[1];
    v9 = v14[2];
    v10 = v14[3];
    v11 = type metadata accessor for OfflineDebuggingKeyValueTableViewCell();
    swift_bridgeObjectRetain(v8);
    v12 = swift_bridgeObjectRetain(v10);
    v6 = UITableView.dequeue<A>(cell:at:name:)(v11, a2, 0, 0, v11, v12);
    sub_1002C6D3C(v7, v8);
    sub_1002C6D68(v9, v10);
  }
  return v6;
}

void sub_1002C6D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2
                + OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_semanticValueDescription);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease();
  sub_1002C7444();
}

void sub_1002C6D68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2
                + OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_formattedValue);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease();
  sub_1002C74C0();
}

uint64_t sub_1002C6D94(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections);
  if (*(_QWORD *)(v3 + 16) <= a2)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v4 = v3 + 32 * a2;
  if (*(_BYTE *)(v4 + 56) != 1)
    return 0x72756769666E6F43;
  v5 = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v4 + 40));
  return v5;
}

unint64_t sub_1002C6E24(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections);
  if (*(_QWORD *)(v3 + 16) <= a2)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (*(_BYTE *)(v3 + 32 * a2 + 56))
    return 0;
  else
    return 0xD000000000000056;
}

id sub_1002C6E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  a5();
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_1002C6ECC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections) + 16);
}

uint64_t sub_1002C6F00(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections);
  if (*(_QWORD *)(v3 + 16) <= a2)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v4 = v3 + 32 * a2;
  v5 = 32;
  if (*(_BYTE *)(v4 + 56))
    v5 = 48;
  return *(_QWORD *)(*(_QWORD *)(v4 + v5) + 16);
}

unint64_t sub_1002C6F6C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  unint64_t result;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE v11[40];

  result = IndexPath.section.getter(a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections) + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1000DD8C4();
  v8 = *v7;
  v9 = swift_bridgeObjectRetain(*v7);
  result = IndexPath.row.getter(v9);
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(_QWORD *)(v8 + 16))
  {
    sub_1002C7E00((__int128 *)(v8 + 40 * result + 32), (uint64_t)v11);
    sub_1001171F4((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002C7D30);
    swift_bridgeObjectRelease();
    v10 = sub_1002C6C64(a1, a2);
    sub_1001171F4((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002C7D60);
    return v10;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1002C7108(void *a1)
{
  char *v1;
  void *v2;
  Class isa;
  __n128 v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(__n128);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;

  v2 = v1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", isa, 1);

  v6 = IndexPath.section.getter(v5);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v6 >= *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC7Weather26DebugOfflineViewController_sections] + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1000DD8C4();
  v8 = *v7;
  v9 = swift_bridgeObjectRetain(*v7);
  v10 = IndexPath.row.getter(v9);
  if ((v10 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v10 >= *(_QWORD *)(v8 + 16))
  {
LABEL_11:
    __break(1u);
    return;
  }
  v11 = v8 + 40 * v10;
  v12 = *(void (**)(__n128))(v11 + 32);
  v13 = *(_QWORD *)(v11 + 40);
  v14 = *(_QWORD *)(v11 + 48);
  v15 = *(_QWORD *)(v11 + 56);
  v16 = *(_BYTE *)(v11 + 64);
  v17 = sub_1000C2704();
  sub_1002C7D30(v17, v18, v19, v20, v16);
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v21 = swift_retain();
    v12(v21);
    v22 = sub_1000CCA94();
    sub_1002C7D60(v22, v23, v24, v25, v26);
    v27 = sub_1000CCA94();
    sub_1002C7D60(v27, v28, v29, v30, v31);
  }
  else
  {
    sub_1000A0794(0, &qword_100BCBB30, UIAlertController_ptr);
    swift_bridgeObjectRetain_n(v15, 2);
    swift_bridgeObjectRetain(v13);
    v32 = sub_1000C2704();
    v43 = sub_100551298(v32, v33, v34, v35, 1);
    sub_1000A0794(0, &qword_100BCBB38, UIAlertAction_ptr);
    v36 = swift_allocObject(&unk_100B6B240, 32, 7);
    *(_QWORD *)(v36 + 16) = v14;
    *(_QWORD *)(v36 + 24) = v15;
    v37 = sub_10055134C(2037411651, 0xE400000000000000, 0, (uint64_t)sub_1002C7DB4, v36);
    objc_msgSend(v43, "addAction:", v37);

    v38 = sub_10055134C(19279, 0xE200000000000000, 1, 0, 0);
    objc_msgSend(v43, "addAction:", v38);

    objc_msgSend(v2, "presentViewController:animated:completion:", v43, 1, 0);
    v39 = sub_1000C2704();
    sub_1002C7D60(v39, v40, v41, v42, 0);

  }
}

void sub_1002C7334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  sub_1002C7DBC(a2, a3, v5);

}

void sub_1002C7444()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = objc_msgSend(v0, "textLabel");
  if (v1)
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_semanticValueDescription];
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_semanticValueDescription
                      + 8];
    v4 = v1;
    swift_bridgeObjectRetain(v3);
    sub_10021D0E8(v2, v3, v4);

  }
}

void sub_1002C74C0()
{
  char *v0;
  id v1;
  double v2;
  void *v3;
  uint64_t v4;
  NSString v5;

  v1 = objc_msgSend(v0, "detailTextLabel");
  if (v1)
  {
    v3 = v1;
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_formattedValue
                      + 8];
    if (v4)
    {
      swift_bridgeObjectRetain(v4);
      v5 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v2 = swift_bridgeObjectRelease(v4).n128_u64[0];
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v3, "setText:", v5, v2);

  }
}

id sub_1002C7578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  double v6;
  char *v7;
  char *v8;
  NSString v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v3);
  v7 = &v3[OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_semanticValueDescription];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  v8 = &v3[OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_formattedValue];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  if (a3)
  {
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v6 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, "initWithStyle:reuseIdentifier:", 1, v9, v6);

  return v10;
}

void sub_1002C7630()
{
  char *v0;
  char *v1;
  char *v2;

  v1 = &v0[OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_semanticValueDescription];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell_formattedValue];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001009F8EA0, "Weather/DebugOfflineViewController.swift", 40, 2);
  __break(1u);
}

uint64_t type metadata accessor for OfflineDebuggingKeyValueTableViewCell()
{
  return objc_opt_self(_TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688937OfflineDebuggingKeyValueTableViewCell);
}

id sub_1002C7734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  objc_class *ObjectType;
  double v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v3);
  if (a3)
  {
    v7 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v6 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v7 = 0;
  }
  v20.receiver = v3;
  v20.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v20, "initWithStyle:reuseIdentifier:", 0, v7, v6);

  v9 = v8;
  v10 = objc_msgSend(v9, "textLabel");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleBody, UIFontWeightMedium);
    objc_msgSend(v11, "setFont:", v12);

  }
  v13 = objc_msgSend(v9, "textLabel");
  if (v13)
  {
    v14 = v13;
    sub_10021D0E8(0x6164696C61766E49, 0xEF61746144206574, v13);

  }
  v15 = objc_msgSend(v9, "textLabel");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "setTextAlignment:", 1);

  }
  v17 = objc_msgSend(v9, "textLabel");

  if (v17)
  {
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
    objc_msgSend(v17, "setTextColor:", v18);

  }
  return v9;
}

uint64_t sub_1002C791C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  return a5(a3, a4, v8);
}

void sub_1002C7970()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001009F8EA0, "Weather/DebugOfflineViewController.swift", 40, 2);
  __break(1u);
}

uint64_t sub_1002C79E4(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

uint64_t type metadata accessor for InvalidateLocationTableViewCell()
{
  return objc_opt_self(_TtC7WeatherP33_D4FFFB6012F8B51FB9CF4963F7B8688931InvalidateLocationTableViewCell);
}

uint64_t sub_1002C7A1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    a1 = a3;
  }
  return swift_bridgeObjectRetain(a1);
}

double destroy for DebugOfflineViewController.Section(uint64_t a1)
{
  return sub_1002C7A5C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

double sub_1002C7A5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  double result;

  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    a1 = a3;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for DebugOfflineViewController.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1002C7A1C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DebugOfflineViewController.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1002C7A1C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1002C7A5C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DebugOfflineViewController.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1002C7A5C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugOfflineViewController.Section(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugOfflineViewController.Section(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugOfflineViewController.Section()
{
  return &type metadata for DebugOfflineViewController.Section;
}

uint64_t sub_1002C7C34()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C7C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = sub_1000BE878();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_1002C7CE4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1000BE878() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1002C680C(v0 + v2, *(uint64_t (**)(uint64_t))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_1002C7D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {
    swift_retain(a2);
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
  }
}

double sub_1002C7D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double result;

  if ((a5 & 1) != 0)
  {
    swift_release(a2);
  }
  else
  {
    swift_bridgeObjectRelease(a2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002C7D90()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002C7DB4(uint64_t a1)
{
  uint64_t v1;

  sub_1002C7334(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1002C7DBC(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "setString:", v4);

}

uint64_t sub_1002C7E00(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

double destroy for DebugOfflineViewController.Row(uint64_t a1)
{
  return sub_1002C7D60(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for DebugOfflineViewController.Row(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1002C7D30(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugOfflineViewController.Row(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1002C7D30(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1002C7D60(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for DebugOfflineViewController.Row(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1002C7D60(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugOfflineViewController.Row(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugOfflineViewController.Row(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1002C7FCC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1002C7FD4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DebugOfflineViewController.Row()
{
  return &type metadata for DebugOfflineViewController.Row;
}

uint64_t *sub_1002C7FF0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v25);
  }
  else
  {
    v7 = type metadata accessor for PressureTrend(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    v21 = a3[9];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v24);
  }
  return a1;
}

uint64_t sub_1002C80E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for PressureTrend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v25 = v24[1];
  v26 = v23[1];
  v23[1] = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  return a1;
}

uint64_t sub_1002C81F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for PressureTrend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1002C8274(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for PressureTrend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease(v24);
  v25 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  v30 = v26[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease(v30);
  return a1;
}

uint64_t sub_1002C833C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C8348);
}

void sub_1002C8348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PressureTrend(0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  else
    sub_100079F70();
}

uint64_t sub_1002C83BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C83C8);
}

uint64_t sub_1002C83C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for PressureTrend(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1002C8440(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v12;
  unint64_t v14;
  char v15;

  if (a1 == 0x646E657274 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646E657274, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x727453646E657274 && a2 == 0xEB00000000676E69)
  {
    v8 = 0xEB00000000676E69;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x727453646E657274, 0xEB00000000676E69, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x72745365756C6176 && a2 == 0xEB00000000676E69)
  {
    v10 = 0xEB00000000676E69;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72745365756C6176, 0xEB00000000676E69, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x6972745374696E75 && a2 == 0xEA0000000000676ELL)
  {
    v12 = 0xEA0000000000676ELL;
    goto LABEL_32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6972745374696E75, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3;
  }
  if (a1 == 0x656C676E61 && a2 == 0xE500000000000000)
  {
    v14 = 0xE500000000000000;
    goto LABEL_40;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C676E61, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_40:
    swift_bridgeObjectRelease(v14);
    return 4;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x80000001009F8F60)
  {
    swift_bridgeObjectRelease(0x80000001009F8F60);
    return 5;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x80000001009F8F60, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v15 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1002C86D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002C8704 + 4 * byte_100991F80[a1]))(0x646E657274, 0xE500000000000000);
}

uint64_t sub_1002C8704()
{
  return 0x727453646E657274;
}

uint64_t sub_1002C8734()
{
  return 0x6972745374696E75;
}

uint64_t sub_1002C8750()
{
  return 0x656C676E61;
}

unint64_t sub_1002C8760()
{
  return 0xD000000000000018;
}

uint64_t sub_1002C877C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27[2];
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BD4128);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1002C8CFC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for PressureComponentPreprocessedDataModel.CodingKeys, &type metadata for PressureComponentPreprocessedDataModel.CodingKeys, v12, v10, v11);
  v31 = 0;
  v13 = type metadata accessor for PressureTrend(0);
  v14 = sub_1002C8D38(&qword_100BD4130, (uint64_t)&protocol conformance descriptor for PressureTrend);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v31, v5, v13, v14);
  if (!v2)
  {
    v15 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
    v16 = sub_1000C5C9C(v15[5]);
    v30 = 1;
    sub_1000BA804(v16, v17, (uint64_t)&v30);
    v18 = sub_1000C5C9C(v15[6]);
    v29 = 2;
    sub_1000BA804(v18, v19, (uint64_t)&v29);
    v20 = sub_1000C5C9C(v15[7]);
    v28 = 3;
    sub_1000BA804(v20, v21, (uint64_t)&v28);
    v22 = sub_1000CCAAC();
    KeyedEncodingContainer.encode(_:forKey:)(v22, v23);
    v24 = sub_1000C5C9C(v15[9]);
    v27[0] = 5;
    sub_1000BA804(v24, v25, (uint64_t)v27);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1002C8934(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  char v35[2];
  char v36;
  char v37;
  char v38;
  char v39;

  v4 = type metadata accessor for PressureTrend(0);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v31 = sub_1000BA294(&qword_100BD4110);
  __chkstk_darwin(v31);
  sub_100098728();
  v32 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
  __chkstk_darwin(v32);
  sub_100098728();
  v33 = v9 - v8;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1002C8CFC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PressureComponentPreprocessedDataModel.CodingKeys, &type metadata for PressureComponentPreprocessedDataModel.CodingKeys, v12, v10, v11);
  if (v2)
  {
    sub_1000C52EC();
  }
  else
  {
    v39 = 0;
    sub_1002C8D38(&qword_100BD4120, (uint64_t)&protocol conformance descriptor for PressureTrend);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v4, &v39, v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v33, v7, v4);
    v38 = 1;
    v13 = sub_1000C2718((uint64_t)&v38);
    v14 = (uint64_t *)(v33 + v32[5]);
    *v14 = v13;
    v14[1] = v15;
    v37 = 2;
    v16 = sub_1000C2718((uint64_t)&v37);
    v17 = (uint64_t *)(v33 + v32[6]);
    *v17 = v16;
    v17[1] = v18;
    v36 = 3;
    v19 = sub_1000C2718((uint64_t)&v36);
    v20 = (uint64_t *)(v33 + v32[7]);
    *v20 = v19;
    v20[1] = v21;
    v22 = sub_1000CCAAC();
    KeyedDecodingContainer.decode(_:forKey:)(v22, v23);
    *(_QWORD *)(v33 + v32[8]) = v24;
    v35[0] = 5;
    v25 = sub_1000C2718((uint64_t)v35);
    v29 = v26;
    v27 = v25;
    sub_1000BA7DC();
    v28 = (uint64_t *)(v33 + v32[9]);
    *v28 = v27;
    v28[1] = v29;
    sub_100124A10(v33, a2);
    sub_1000C52EC();
    sub_1001249D4(v33);
  }
}

uint64_t sub_1002C8C54()
{
  unsigned __int8 *v0;

  return sub_1002C86D4(*v0);
}

uint64_t sub_1002C8C5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002C8440(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C8C80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8CFC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C8CA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8CFC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002C8CD0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002C8934(a1, a2);
}

uint64_t sub_1002C8CE4(_QWORD *a1)
{
  return sub_1002C877C(a1);
}

unint64_t sub_1002C8CFC()
{
  unint64_t result;

  result = qword_100BD4118;
  if (!qword_100BD4118)
  {
    result = swift_getWitnessTable(&unk_10099213C, &type metadata for PressureComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4118);
  }
  return result;
}

uint64_t sub_1002C8D38(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PressureTrend(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PressureComponentPreprocessedDataModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1002C8DC4 + 4 * byte_100991F8B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1002C8DF8 + 4 * byte_100991F86[v4]))();
}

uint64_t sub_1002C8DF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002C8E00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002C8E08);
  return result;
}

uint64_t sub_1002C8E14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002C8E1CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1002C8E20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002C8E28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PressureComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for PressureComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_1002C8E48()
{
  unint64_t result;

  result = qword_100BD4138;
  if (!qword_100BD4138)
  {
    result = swift_getWitnessTable(&unk_100992114, &type metadata for PressureComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4138);
  }
  return result;
}

unint64_t sub_1002C8E88()
{
  unint64_t result;

  result = qword_100BD4140;
  if (!qword_100BD4140)
  {
    result = swift_getWitnessTable(&unk_100992084, &type metadata for PressureComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4140);
  }
  return result;
}

unint64_t sub_1002C8EC8()
{
  unint64_t result;

  result = qword_100BD4148;
  if (!qword_100BD4148)
  {
    result = swift_getWitnessTable(&unk_1009920AC, &type metadata for PressureComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4148);
  }
  return result;
}

void sub_1002C8F04()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL];
  v2 = type metadata accessor for URL(0);
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001009F8EA0, "Weather/SafariSheet.swift", 25, 2);
  __break(1u);
}

id sub_1002C8FBC(uint64_t a1)
{
  uint64_t v1;
  id v3;
  NSURL *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1));
  URL._bridgeToObjectiveC()(v4);
  v6 = v5;
  v7 = objc_msgSend(v3, "initWithURL:", v5);

  v8 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

uint64_t sub_1002C9038(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result
                   + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation);
    v5 = *(_QWORD *)(result
                   + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                   + 8);
    v6 = *(_BYTE *)(result
                  + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                  + 16);
    swift_retain();
    swift_retain();

    v9 = v4;
    v10 = v5;
    v11 = v6;
    v8 = 0;
    v7 = sub_1000BA294((uint64_t *)&unk_100BD4270);
    Binding.wrappedValue.setter(&v8, v7);
    swift_release(v5);
    return swift_release(v4);
  }
  return result;
}

void sub_1002C913C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                 + 8);
  v2 = *(_BYTE *)(v0
                + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                + 16);
  v6 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation);
  v7 = v1;
  v8 = v2;
  v5 = 0;
  v3 = sub_1000BA294((uint64_t *)&unk_100BD4270);
  Binding.wrappedValue.setter(&v5, v3);
  v4 = *(void **)(v0
                + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController) = 0;

}

void sub_1002C91B0()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.Coordinator", 19, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t sub_1002C92BC()
{
  return type metadata accessor for SafariSheetModifier.SafariPresenter.Coordinator(0);
}

uint64_t sub_1002C92C4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C92E8()
{
  uint64_t v0;

  return sub_1002C9038(v0);
}

unint64_t sub_1002C92F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD4288;
  if (!qword_100BD4288)
  {
    v1 = objc_opt_self(SFSafariViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100BD4288);
  }
  return result;
}

uint64_t sub_1002C932C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 20);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for URL(0);
    swift_retain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      v10 = sub_1000BA294(&qword_100BD4280);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t *sub_1002C9428(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_1000BA294(&qword_100BD4280);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1002C955C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for URL(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1000BA294(&qword_100BD4280);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t *sub_1002C9610(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_1000BA294(&qword_100BD4280);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1002C9734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C9740);
}

void sub_1002C9740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 8));
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000BA294(&qword_100BD4280);
    sub_1000B250C(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1002C979C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C97A8);
}

void sub_1002C97A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD4280);
    sub_1000987C4(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_1002C9808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_100139928(&qword_100BD4418);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002C9868(uint64_t a1)
{
  uint64_t v2;

  sub_100139928(&qword_100BD4418);
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1002C98A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C98E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1002C9924(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD4338);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *v4 = *a2;
      swift_retain();
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = *(int *)(a3 + 20);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for URL(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BD4280);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v19[16] = v20[16];
    swift_retain();
  }
  swift_retain();
  return v4;
}

_QWORD *sub_1002C9A98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BD4338);
    v6 = sub_1000BA294(&qword_100BD4338);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for URL(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_11;
  }
  if (v16)
  {
LABEL_11:
    v18 = sub_1000BA294(&qword_100BD4280);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_12:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)((char *)a1 + v19);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)v21;
  swift_retain();
  swift_release(v22);
  v23 = *((_QWORD *)v20 + 1);
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_retain();
  swift_release(v23);
  v20[16] = v21[16];
  return a1;
}

char *sub_1002C9C68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = sub_1000BA294(&qword_100BD4338);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for URL(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_1000BA294(&qword_100BD4280);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  return a1;
}

char *sub_1002C9DA4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BD4338);
    v6 = sub_1000BA294(&qword_100BD4338);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for URL(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v13)
  {
LABEL_10:
    v15 = sub_1000BA294(&qword_100BD4280);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_11:
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)&a1[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)v18;
  swift_release(v19);
  v20 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release(v20);
  v17[16] = v18[16];
  return a1;
}

uint64_t sub_1002C9F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C9F6C);
}

void sub_1002C9F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1000BA294(&qword_100BD4348);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    sub_1000B250C(v8, a2, v7);
    return;
  }
  v9 = sub_1000BA294(&qword_100BD4280);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
  sub_100079F70();
}

uint64_t sub_1002C9FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CA008);
}

void sub_1002CA008(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_1000BA294(&qword_100BD4348);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
LABEL_5:
    sub_1000987C4(v10, a2, a2, v9);
    return;
  }
  v11 = sub_1000BA294(&qword_100BD4280);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  sub_100079F70();
}

void sub_1002CA0FC(uint64_t a1, void *a2)
{
  NSObject *v2;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];

  if (qword_100BC2420 != -1)
    swift_once(&qword_100BC2420, sub_10015967C);
  v4 = sub_100098720();
  sub_1000AECD4(v4, (uint64_t)qword_100CAF058);
  sub_1000999A8();
  v5 = sub_10009C0A4();
  if (os_log_type_enabled(v2, v5))
  {
    v6 = (uint8_t *)sub_10009D340();
    *(_WORD *)v6 = 0;
    sub_1000D00B0((void *)&_mh_execute_header, v2, v5, "Scene is handling a user activity while entering foreground", v6);
    sub_1000986F0((uint64_t)v6);
  }

  sub_1000DB894(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___continueUserActivityHandlerManager, &qword_100BD44E8, (uint64_t (*)(_QWORD *, uint64_t))sub_10003C800, &qword_100BD44F0, v7);
  sub_1000DB418(v9, v9[3]);
  sub_1004B704C(a2);
  sub_1000C36A0(v8);
  sub_1001484D0(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___sessionObserver, type metadata accessor for SessionEventsAndDataCoordinator);
  SessionEventsAndDataCoordinator.handleActivity(_:)((NSUserActivity)a2);
  sub_10009880C();
  sub_1000C2728();
}

void sub_1002CA278(uint64_t a1, UIApplicationShortcutItem a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, __n128))
{
  uint64_t v6;
  __n128 v7;

  v6 = sub_1001484D0(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___shortcutItemHandlerManager, (uint64_t (*)(_QWORD))&type metadata accessor for ShortcutItemHandlerManager);
  LOBYTE(a2.super.isa) = ShortcutItemHandlerManager.handle(shortcutItem:)(a2);
  v7 = swift_release(v6);
  a4[2](a4, (uint64_t)a2.super.isa & 1, v7);
  _Block_release(a4);
}

uint64_t sub_1002CA43C(uint64_t a1)
{
  char v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t countAndFlagsBits;
  Swift::String v12;
  Swift::String v13;
  Swift::String v15;
  Swift::String v16;

  v1 = Location.Identifier.kind.getter(a1);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v1 & 1) != 0)
  {
    v12._countAndFlagsBits = 0xD00000000000001BLL;
    v16._countAndFlagsBits = 0xD000000000000048;
    v16._object = (void *)0x80000001009F91D0;
    v12._object = (void *)0x80000001009F91B0;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v2, v13, v16)._countAndFlagsBits;

  }
  else
  {
    v15._countAndFlagsBits = 0xD000000000000040;
    v15._object = (void *)0x80000001009F9370;
    v3._object = (void *)0x80000001009F9350;
    v3._countAndFlagsBits = 0xD000000000000012;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v15);

    v6 = sub_1000BA294(&qword_100BC3C38);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_10097CA50;
    v8 = Location.Identifier.name.getter(v7);
    v10 = v9;
    *(_QWORD *)(v7 + 56) = &type metadata for String;
    *(_QWORD *)(v7 + 64) = sub_1000B2E24();
    *(_QWORD *)(v7 + 32) = v8;
    *(_QWORD *)(v7 + 40) = v10;
    countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v5._countAndFlagsBits, v5._object, v7);
    swift_bridgeObjectRelease(v5._object);
    swift_bridgeObjectRelease(v7);
  }
  return countAndFlagsBits;
}

void sub_1002CA5CC(void *a1, char a2, uint64_t a3)
{
  void *v3;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v5 = v3;
  v8 = sub_1000D1D64();
  v34 = v8;
  if (v8)
  {
    v15 = sub_1000D950C(v8, v9, (uint64_t)&protocol witness table for String, v10, v11, v12, v13, v14, a3);
    if ((a2 & 1) != 0)
    {
      sub_1000D9C84(v15, v16, v17, v18, v19, v20, v21, v22, 0, 0, 0, 0, v33);
    }
    else
    {
      v31 = Double.description.getter(*(double *)&a1);
      sub_1000D9C84(v31, v23, v24, v25, v26, v27, v28, v29, v31, v23, v32, (uint64_t)&type metadata for String, v33);
    }
    if (v34)
    {
      sub_1000CFC14();
      sub_1000DB8A0();
    }
    else
    {
      a1 = 0;
    }
    sub_100098A10(v30, "setUserInfo:");

    sub_1000C5CA8();
  }
  else
  {
    sub_1000C273C(v5, "setUserInfo:");
  }
}

void sub_1002CA6A4(Swift::String string)
{
  void *object;
  Swift::String v2;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59BB0, v2);
  sub_1000986E8();
  sub_10004A298();
}

uint64_t sub_1002CA6E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002CA720 + 4 * byte_100992350[a1]))(0x7765695674736564, 0xEB0000000079654BLL);
}

uint64_t sub_1002CA720()
{
  return 0x656D614E79746963;
}

uint64_t sub_1002CA734()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1002CA750()
{
  return 7627116;
}

uint64_t sub_1002CA760()
{
  return 1735290732;
}

void sub_1002CA770(Swift::String string)
{
  void *object;
  Swift::String v2;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59B60, v2);
  sub_1000986E8();
  sub_10004A298();
}

void sub_1002CA7B8(char *a1)
{
  sub_10068AD5C(*a1);
}

void sub_1002CA7C4()
{
  unsigned __int8 *v0;

  sub_1004A74BC(*v0);
}

void sub_1002CA7CC(uint64_t a1)
{
  char *v1;

  sub_1001D87F0(a1, *v1);
}

void sub_1002CA7D4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D9FA4(a1, *v1);
}

void sub_1002CA7DC(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  sub_1002CA6A4(*a1);
  *a2 = v3;
}

uint64_t sub_1002CA808@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1002CA6E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1002CA830()
{
  void *v0;
  uint64_t v1;
  Swift::String v2[2];
  __int128 v3;
  __int128 v4;

  if (!sub_1000274EC(v0))
  {
    v3 = 0u;
    v4 = 0u;
    goto LABEL_6;
  }
  sub_1000CCAC0();
  sub_1000D00B8(v1, &type metadata for String, &protocol witness table for String);
  sub_1000D1198();
  sub_10011F394((uint64_t)v2);
  sub_1000986E8();
  if (!*((_QWORD *)&v4 + 1))
  {
LABEL_6:
    sub_1002CAAB4((uint64_t)&v3);
    return;
  }
  if ((sub_1000DAE90((uint64_t)v2, (uint64_t)&v3, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String) & 1) != 0)sub_1002CA770(v2[0]);
}

uint64_t sub_1002CA8E0()
{
  return sub_1002CA91C();
}

uint64_t sub_1002CA8FC()
{
  return sub_1002CA91C();
}

uint64_t sub_1002CA91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  if (!sub_1000D16D8())
  {
    v4 = 0u;
    v5 = 0u;
    goto LABEL_8;
  }
  *(_QWORD *)&v4 = v1;
  *((_QWORD *)&v4 + 1) = v0;
  AnyHashable.init<A>(_:)(&v4);
  sub_1000D1198();
  sub_10011F394((uint64_t)&v3);
  sub_1000986E8();
  if (!*((_QWORD *)&v5 + 1))
  {
LABEL_8:
    sub_1002CAAB4((uint64_t)&v4);
    return 0;
  }
  if (sub_1000DAE90((uint64_t)&v3, (uint64_t)&v4, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String))return v3;
  else
    return 0;
}

uint64_t sub_1002CA9DC()
{
  return sub_1002CA9FC();
}

uint64_t sub_1002CA9EC()
{
  return sub_1002CA9FC();
}

uint64_t sub_1002CA9FC()
{
  uint64_t v0;
  uint64_t v2[5];
  __int128 v3;
  __int128 v4;

  v0 = sub_1000D16D8();
  if (!v0)
  {
    v3 = 0u;
    v4 = 0u;
    goto LABEL_6;
  }
  sub_1000D00B8(v0, &type metadata for String, &protocol witness table for String);
  sub_1000D1198();
  sub_10011F394((uint64_t)v2);
  sub_1000986E8();
  if (!*((_QWORD *)&v4 + 1))
  {
LABEL_6:
    sub_1002CAAB4((uint64_t)&v3);
    return 0;
  }
  if ((sub_1000DAE90((uint64_t)v2, (uint64_t)&v3, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String) & 1) != 0)return sub_10015E55C(v2[0], v2[1]);
  return 0;
}

uint64_t sub_1002CAAB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100C0B800);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1002CAAF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Location.Identifier(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

void *sub_1002CABAC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = type metadata accessor for Location.Identifier(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_1002CAC90(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Location.Identifier(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1002CAD24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = type metadata accessor for Location.Identifier(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1002CAE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CAE14);
}

void sub_1002CAE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100098AA0();
  _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  sub_10004A298();
}

uint64_t sub_1002CAE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CAE5C);
}

uint64_t sub_1002CAE5C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_100098AA0();
  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t storeEnumTagSinglePayload for ActivityUserInfoKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1002CAEF0 + 4 * byte_10099235A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1002CAF24 + 4 * byte_100992355[v4]))();
}

uint64_t sub_1002CAF24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CAF2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CAF34);
  return result;
}

uint64_t sub_1002CAF40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CAF48);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1002CAF4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CAF54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityUserInfoKey()
{
  return &type metadata for ActivityUserInfoKey;
}

unint64_t sub_1002CAF74()
{
  unint64_t result;

  result = qword_100BD45F0;
  if (!qword_100BD45F0)
  {
    result = swift_getWitnessTable(&unk_10099240C, &type metadata for ActivityUserInfoKey);
    atomic_store(result, (unint64_t *)&qword_100BD45F0);
  }
  return result;
}

void sub_1002CAFB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100098728();
  v6 = v5 - v4;
  v7 = URL.host.getter();
  if (v8)
  {
    v9 = v7;
    v10 = v8;
    v11 = swift_allocObject(&unk_100B6B668, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = v10;
    Tracker.diagnosticTransaction(block:)(sub_1002CB964, v11);
    swift_release();
  }
  else
  {
    if (qword_100BC23F8 != -1)
      swift_once(&qword_100BC23F8, sub_1006F3784);
    v12 = type metadata accessor for Logger(0);
    sub_1000AECD4(v12, (uint64_t)qword_100CAEFE0);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    v14 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.error.getter(v14, v15);
    if (os_log_type_enabled(v14, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v22 = v18;
      *(_DWORD *)v17 = 136315138;
      sub_100051B90(&qword_100BCCFF8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v19 = dispatch thunk of CustomStringConvertible.description.getter(v2);
      v21 = sub_1000CE1C8(v19, v20, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      swift_bridgeObjectRelease();
      sub_1000BBF94();
      _os_log_impl((void *)&_mh_execute_header, v14, v16, "Attempted to track provider tap but the provider URL has no host. URL=%s", v17, 0xCu);
      swift_arrayDestroy(v18, 1);
      sub_1000986F0(v18);
      sub_1000986F0((uint64_t)v17);
    }
    else
    {
      sub_1000BBF94();
    }

    sub_100098640();
  }
}

uint64_t sub_1002CB1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];

  v5 = type metadata accessor for LinkType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URLData(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for LinkType.provider(_:), v5, v12);
  v15 = swift_bridgeObjectRetain();
  URLData.init(url:linkType:)(a2, a3, v9, v15);
  v16 = sub_100051B90(&qword_100BD45F8, (uint64_t (*)(uint64_t))&type metadata accessor for URLData, (uint64_t)&protocol conformance descriptor for URLData);
  AccessTracker.push<A>(data:traits:file:line:)(v14, _swiftEmptyArrayStorage, 0xD000000000000054, 0x80000001009F93C0, 46, v10, v16);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v17 = type metadata accessor for LinkTapEvent(0);
  v18 = sub_100051B90(&qword_100BD4600, (uint64_t (*)(uint64_t))&type metadata accessor for LinkTapEvent, (uint64_t)&protocol conformance descriptor for LinkTapEvent);
  memset(v20, 0, sizeof(v20));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v17, 0, v20, 0, 0, v17, v18);
  return sub_1002CAAB4((uint64_t)v20);
}

void sub_1002CB394(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  unsigned int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;

  v75 = a2;
  v3 = sub_1000C470C();
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  v74 = *(_QWORD *)(v72 + 64);
  __chkstk_darwin(v3);
  v71 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v79 = (char *)&v59 - v6;
  v70 = type metadata accessor for TemperatureScale(0);
  v78 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v77 = (uint64_t)&v59 - v9;
  v10 = type metadata accessor for ViewType(0);
  v61 = *(_QWORD *)(v10 - 8);
  v62 = v10;
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v60 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  sub_100098728();
  v17 = v16 - v15;
  v18 = sub_1000C3788();
  v67 = *(_QWORD *)(v18 - 8);
  v68 = v18;
  v19 = *(_QWORD *)(v67 + 64);
  __chkstk_darwin(v18);
  v63 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v76 = (char *)&v59 - v21;
  v22 = type metadata accessor for ViewAction(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v59 - v27;
  v29 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ListViewModel(0) + 60));
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 104);
  v66 = v23;
  if (v29)
    v31 = (unsigned int *)&enum case for ViewAction.userNavigation(_:);
  else
    v31 = (unsigned int *)&enum case for ViewAction.appLaunch(_:);
  v32 = *v31;
  v64 = v22;
  v65 = v28;
  v33 = v30(v28, v32, v22);
  v34 = UUID.init()(v33);
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v60);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v13, enum case for ViewType.list(_:), v62);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v28, v22);
  v38 = v76;
  ViewData.init(viewSessionID:viewType:viewAction:)(v35, v37, v13, v25);
  v39 = type metadata accessor for UnitManager(0);
  static UnitManager.standard.getter(v39);
  v40 = (void *)UnitManager.temperature.getter();
  swift_release();
  v41 = v77;
  sub_10092D618(v40, v77);
  v42 = v69;
  v43 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v69, v41, v70);
  v44 = v79;
  TemperatureScaleData.init(temperatureScale:)(v42);
  v45 = v67;
  v46 = v63;
  v47 = v38;
  v48 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v47, v68);
  v50 = v71;
  v49 = v72;
  v51 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v44, v73);
  v52 = *(unsigned __int8 *)(v45 + 80);
  v53 = (v52 + 16) & ~v52;
  v54 = *(unsigned __int8 *)(v49 + 80);
  v55 = v49;
  v56 = (v19 + v54 + v53) & ~v54;
  v57 = swift_allocObject(&unk_100B6B6D8, v56 + v74, v52 | v54 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v57 + v53, v46, v48);
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v57 + v56, v50, v51);
  Tracker.diagnosticTransaction(block:)(sub_1002CBA28, v57);
  v58 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v79, v51, v58);
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v43);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v76, v48);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v64);
  sub_100098640();
}

uint64_t sub_1002CB7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = type metadata accessor for ViewData(0);
  v6 = sub_100051B90(&qword_100BD4610, (uint64_t (*)(uint64_t))&type metadata accessor for ViewData, (uint64_t)&protocol conformance descriptor for ViewData);
  AccessTracker.push<A>(data:traits:file:line:)(a2, _swiftEmptyArrayStorage, 0xD000000000000054, 0x80000001009F93C0, 68, v5, v6);
  v7 = type metadata accessor for TemperatureScaleData(0);
  v8 = sub_100051B90(&qword_100BD4618, (uint64_t (*)(uint64_t))&type metadata accessor for TemperatureScaleData, (uint64_t)&protocol conformance descriptor for TemperatureScaleData);
  AccessTracker.push<A>(data:traits:file:line:)(a3, _swiftEmptyArrayStorage, 0xD000000000000054, 0x80000001009F93C0, 69, v7, v8);
  v9 = type metadata accessor for ListViewEvent(0);
  v10 = sub_100051B90(&qword_100BD4608, (uint64_t (*)(uint64_t))&type metadata accessor for ListViewEvent, (uint64_t)&protocol conformance descriptor for ListViewEvent);
  return AccessTracker.time<A>(_:submitAndRestartWithSession:)(v9, 1, v9, v10);
}

uint64_t sub_1002CB8C4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[2];

  v0 = type metadata accessor for ListViewEvent(0);
  v1 = sub_100051B90(&qword_100BD4608, (uint64_t (*)(uint64_t))&type metadata accessor for ListViewEvent, (uint64_t)&protocol conformance descriptor for ListViewEvent);
  memset(v3, 0, sizeof(v3));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v0, 1, v3, 0, 0, v0, v1);
  return sub_1002CAAB4((uint64_t)v3);
}

uint64_t sub_1002CB940()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002CB964(uint64_t a1)
{
  uint64_t v1;

  return sub_1002CB1E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for ListTracker()
{
  return &type metadata for ListTracker;
}

uint64_t sub_1002CB97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1000C3788();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_1000C470C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1002CBA28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1000C3788() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000C470C() - 8) + 80);
  return sub_1002CB7A4(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1002CBA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[10] = a2;
  v3[11] = a3;
  v4 = type metadata accessor for MainActor(0);
  v3[12] = v4;
  v3[13] = static MainActor.shared.getter(v4);
  v3[14] = dispatch thunk of Actor.unownedExecutor.getter(v4);
  v3[15] = v5;
  return sub_1000BBE68();
}

uint64_t sub_1002CBAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  if (qword_100BC24D8 != -1)
    swift_once(&qword_100BC24D8, sub_1006F39A0);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_1000AECD4(v1, (uint64_t)qword_100CAF270);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Performing Scroll instruction", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v7 = static MainActor.shared.getter(v6);
  *(_QWORD *)(v0 + 128) = v7;
  if (v7)
  {
    ObjectType = swift_getObjectType(v7);
    dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
  }
  return sub_1000BBE68();
}

uint64_t sub_1002CBC0C()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, double, double, double, double);
  uint64_t v2;

  v1 = (uint64_t (*)(uint64_t, double, double, double, double))v0[10];
  v0[2] = v0;
  v0[3] = sub_1002628B8;
  v2 = swift_continuation_init(v0 + 2, 0);
  sub_1002CBC68(v2, v1);
  return swift_continuation_await(v0 + 2);
}

void sub_1002CBC68(uint64_t a1, uint64_t (*a2)(uint64_t, double, double, double, double))
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v4 = (void *)objc_opt_self(UIApplication);
  v5 = objc_msgSend(v4, "sharedApplication");
  UIApplication.expectedWindow.getter(v48);

  v6 = v49;
  v7 = v50;
  sub_1000DB418(v48, v49);
  v8 = dispatch thunk of WindowType.bounds.getter(v6, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v48);
  v16 = a2(v15, v8, v10, v12, v14);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = v16 + 32;
    swift_bridgeObjectRetain(v16);
    do
    {
      sub_100043CA8(v18, (uint64_t)v48);
      v19 = v49;
      v20 = v50;
      sub_1000DB418(v48, v49);
      v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v28 = v49;
      v29 = v50;
      sub_1000DB418(v48, v49);
      v30 = (*(double (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
      v31 = v49;
      v32 = v50;
      sub_1000DB418(v48, v49);
      v33 = qword_1009924A0[(*(char (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32)];
      v34 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
      v37 = sub_1006E42A4(0, 0, v33, 0, 0, (uint64_t)v34, v35, v36, v21, v23, v25, v27, v30);
      v38 = objc_msgSend(v4, "sharedApplication");
      v39 = (void *)UIApplication.maybeWindow.getter();

      if (v39)
      {
        v40 = objc_msgSend((id)objc_opt_self(RPTCoordinateSpaceConverter), "converterFromWindow:", v39);
        objc_msgSend(v37, "setConversion:", v40);

      }
      v41 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v48);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
      v43 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v42 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v43 >= v42 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1);
      v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v37);
      specialized Array._endMutation()(v44);
      v18 += 40;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v45 = swift_allocObject(&unk_100B6B790, 24, 7);
  *(_QWORD *)(v45 + 16) = a1;
  v46 = objc_allocWithZone((Class)type metadata accessor for GroupTestParameters());
  v47 = sub_1002CC0D0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1002CC268, v45);
  objc_msgSend((id)objc_opt_self(RPTTestRunner), "runTestWithParameters:", v47);

}

uint64_t sub_1002CBFAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_100BC24D8 != -1)
    swift_once(&qword_100BC24D8, sub_1006F39A0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000AECD4(v2, (uint64_t)qword_100CAF270);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Performed Scroll instruction", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return swift_continuation_throwingResume(a1);
}

uint64_t sub_1002CC080()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v3 = v0[1];
  v4 = (_QWORD *)swift_task_alloc(dword_100BD4654);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_100223BE0;
  return sub_1002CBA88((uint64_t)v4, v2, v3);
}

id sub_1002CC0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v6;
  Class isa;
  void *v8;
  uint64_t v9;
  _QWORD v11[5];
  uint64_t v12;
  objc_super v13;

  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType(v3);
  v6 = objc_msgSendSuper2(&v13, "init");
  sub_1000BA294(&qword_100BFFA40);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setParameters:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v11[4] = a2;
  v12 = a3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100121D84;
  v11[3] = &unk_100B6B7A8;
  v8 = _Block_copy(v11);
  v9 = v12;
  swift_retain();
  objc_msgSend(v6, "setCompletionHandler:", v8, swift_release(v9).n128_f64[0]);
  swift_release(a3);
  _Block_release(v8);

  return v6;
}

void sub_1002CC1F0()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.GroupTestParameters", 27, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for GroupTestParameters()
{
  return objc_opt_self(_TtC7Weather19GroupTestParameters);
}

ValueMetadata *type metadata accessor for Scroll()
{
  return &type metadata for Scroll;
}

uint64_t sub_1002CC258()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002CC268()
{
  uint64_t v0;

  return sub_1002CBFAC(*(_QWORD *)(v0 + 16));
}

_QWORD *sub_1002CC270(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    v9[32] = v10[32];
  }
  return a1;
}

uint64_t sub_1002CC310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  return a1;
}

uint64_t sub_1002CC384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 32);
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  *(_BYTE *)(v8 + 32) = v10;
  return a1;
}

uint64_t sub_1002CC3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  return a1;
}

uint64_t sub_1002CC470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  return a1;
}

uint64_t sub_1002CC4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CC4F0);
}

uint64_t sub_1002CC4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = type metadata accessor for Location(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return v8 - 1;
  else
    return 0;
}

uint64_t sub_1002CC564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CC570);
}

uint64_t sub_1002CC570(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for Location(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1002CC5E4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v10;

  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x726F68636E61 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F68636E61, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6552656372756F73 && a2 == 0xEA00000000007463)
  {
    swift_bridgeObjectRelease(0xEA00000000007463);
    return 2;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6552656372756F73, 0xEA00000000007463, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1002CC734(char a1)
{
  if (!a1)
    return 0x6E6F697461636F6CLL;
  if (a1 == 1)
    return 0x726F68636E61;
  return 0x6552656372756F73;
}

BOOL sub_1002CC78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  CGRect *v6;
  char v7;
  uint64_t v8;

  if ((static Location.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for AirQualityDetailViewState(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = *(int *)(v4 + 24);
  v6 = (CGRect *)(a1 + v5);
  v7 = *(_BYTE *)(a1 + v5 + 32);
  v8 = a2 + v5;
  if ((v7 & 1) == 0)
    return (*(_BYTE *)(v8 + 32) & 1) == 0 && CGRectEqualToRect(*v6, *(CGRect *)v8);
  return (*(_BYTE *)(v8 + 32) & 1) != 0;
}

uint64_t sub_1002CC818(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[2];
  char v25;
  char v26;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BD4710);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1002CCE80();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for AirQualityDetailViewState.CodingKeys, &type metadata for AirQualityDetailViewState.CodingKeys, v12, v10, v11);
  LOBYTE(v24[0]) = 0;
  v13 = type metadata accessor for Location(0);
  v14 = sub_100051B90(&qword_100BCF410, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  sub_1000C26D4(v3, (uint64_t)v24, v5, v13, v14);
  if (!v2)
  {
    v15 = type metadata accessor for AirQualityDetailViewState(0);
    LOBYTE(v24[0]) = *(_BYTE *)(v3 + *(int *)(v15 + 20));
    v26 = 1;
    v16 = sub_1002CCF78();
    sub_1000C26D4((uint64_t)v24, (uint64_t)&v26, v5, (uint64_t)&type metadata for AirQualityDetailAnchor, v16);
    v17 = v3 + *(int *)(v15 + 24);
    v18 = *(_BYTE *)(v17 + 32);
    v19 = *(_OWORD *)(v17 + 16);
    v24[0] = *(_OWORD *)v17;
    v24[1] = v19;
    v25 = v18;
    v26 = 2;
    type metadata accessor for CGRect(0);
    v21 = v20;
    v22 = sub_100051B90(&qword_100BCF428, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v24, &v26, v5, v21, v22);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1002CC9DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  char v27;
  char v28;

  v3 = type metadata accessor for Location(0);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  __chkstk_darwin(v3);
  sub_100098728();
  v23 = v5 - v4;
  v24 = sub_1000BA294(&qword_100BD46F8);
  __chkstk_darwin(v24);
  sub_100098728();
  v6 = type metadata accessor for AirQualityDetailViewState(0);
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v11 = v8 - v7 + *(int *)(v10 + 24);
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_BYTE *)(v11 + 32) = 1;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1002CCE80();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for AirQualityDetailViewState.CodingKeys, &type metadata for AirQualityDetailViewState.CodingKeys, v14, v12, v13);
  if (v25)
    return sub_1000C255C();
  LOBYTE(v26[0]) = 0;
  sub_100051B90(&qword_100BCF3E8, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v22, v26, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v9, v23, v22);
  v28 = 1;
  sub_1002CCEBC();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for AirQualityDetailAnchor, &v28, v24);
  *(_BYTE *)(v9 + *(int *)(v6 + 20)) = v26[0];
  type metadata accessor for CGRect(0);
  v16 = v15;
  v28 = 2;
  sub_100051B90(&qword_100BCF400, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v16, &v28, v24, v16);
  sub_1000BA848();
  v17 = v27;
  v18 = v26[1];
  *(_OWORD *)v11 = v26[0];
  *(_OWORD *)(v11 + 16) = v18;
  *(_BYTE *)(v11 + 32) = v17;
  sub_1002CCEF8(v9, a2);
  sub_1000C255C();
  return sub_1002CCF3C(v9);
}

uint64_t sub_1002CCC94()
{
  char *v0;

  return sub_1002CC734(*v0);
}

uint64_t sub_1002CCC9C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002CC5E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002CCCC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002CCE80();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CCCE8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002CCE80();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CCD14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002CC9DC(a1, a2);
}

uint64_t sub_1002CCD28(_QWORD *a1)
{
  return sub_1002CC818(a1);
}

void sub_1002CCD3C()
{
  sub_100693094();
}

void sub_1002CCD50(uint64_t a1)
{
  sub_1006931CC(a1);
}

uint64_t sub_1002CCD64@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BD4720);
  a1[4] = sub_1002CCFB4();
  sub_10005F164(a1);
  v3 = type metadata accessor for AirQualityDetailViewState(0);
  return ShortDescription.init(name:_:)(0xD000000000000019, 0x80000001009924B0, v2, v3);
}

uint64_t sub_1002CCE00@<X0>(_QWORD *a1@<X8>)
{
  return sub_1002CCD64(a1);
}

uint64_t sub_1002CCE14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100051B90(&qword_100BD4730, type metadata accessor for AirQualityDetailViewState, (uint64_t)&unk_100992548);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_1002CCE54()
{
  return sub_100051B90(&qword_100BD46F0, type metadata accessor for AirQualityDetailViewState, (uint64_t)&unk_100992520);
}

unint64_t sub_1002CCE80()
{
  unint64_t result;

  result = qword_100BD4700;
  if (!qword_100BD4700)
  {
    result = swift_getWitnessTable(&unk_100992704, &type metadata for AirQualityDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4700);
  }
  return result;
}

unint64_t sub_1002CCEBC()
{
  unint64_t result;

  result = qword_100BD4708;
  if (!qword_100BD4708)
  {
    result = swift_getWitnessTable(&unk_1009B0668, &type metadata for AirQualityDetailAnchor);
    atomic_store(result, (unint64_t *)&qword_100BD4708);
  }
  return result;
}

uint64_t sub_1002CCEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQualityDetailViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CCF3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AirQualityDetailViewState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1002CCF78()
{
  unint64_t result;

  result = qword_100BD4718;
  if (!qword_100BD4718)
  {
    result = swift_getWitnessTable(&unk_1009B0640, &type metadata for AirQualityDetailAnchor);
    atomic_store(result, (unint64_t *)&qword_100BD4718);
  }
  return result;
}

unint64_t sub_1002CCFB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD4728;
  if (!qword_100BD4728)
  {
    v1 = sub_100075EB0(&qword_100BD4720);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD4728);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AirQualityDetailViewState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002CD044 + 4 * byte_1009924C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002CD078 + 4 * byte_1009924C0[v4]))();
}

uint64_t sub_1002CD078(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CD080(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CD088);
  return result;
}

uint64_t sub_1002CD094(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CD09CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002CD0A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CD0A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirQualityDetailViewState.CodingKeys()
{
  return &type metadata for AirQualityDetailViewState.CodingKeys;
}

unint64_t sub_1002CD0C8()
{
  unint64_t result;

  result = qword_100BD4738;
  if (!qword_100BD4738)
  {
    result = swift_getWitnessTable(&unk_1009926DC, &type metadata for AirQualityDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4738);
  }
  return result;
}

unint64_t sub_1002CD108()
{
  unint64_t result;

  result = qword_100BD4740;
  if (!qword_100BD4740)
  {
    result = swift_getWitnessTable(&unk_10099264C, &type metadata for AirQualityDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4740);
  }
  return result;
}

unint64_t sub_1002CD148()
{
  unint64_t result;

  result = qword_100BD4748;
  if (!qword_100BD4748)
  {
    result = swift_getWitnessTable(&unk_100992674, &type metadata for AirQualityDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4748);
  }
  return result;
}

double destroy for ReportWeatherViewModel(uint64_t *a1)
{
  return sub_10019D2B8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
}

uint64_t *initializeWithCopy for ReportWeatherViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  sub_10019D33C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  return a1;
}

uint64_t assignWithCopy for ReportWeatherViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v24 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  sub_10019D33C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  sub_10019D2B8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22);
  return a1;
}

void *initializeWithTake for ReportWeatherViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t assignWithTake for ReportWeatherViewModel(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v15;
  v16 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v16;
  sub_10019D2B8(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportWeatherViewModel(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3F && *(_BYTE *)(a1 + 96))
    {
      v2 = *(_DWORD *)a1 + 62;
    }
    else
    {
      v2 = (*(_QWORD *)a1 & 6 | ((*(_QWORD *)a1 >> 58) >> 5) & 0xFFFFFFC7 | (8
                                                                                         * (((*(_QWORD *)a1 >> 58) >> 2) & 7))) ^ 0x3F;
      if (v2 >= 0x3E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ReportWeatherViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x3E)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 63;
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x1F | (32 * (-a2 & 0x3F));
      *(_QWORD *)result = ((v3 << 58) | (2 * v3)) & 0xF000000000000007;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_QWORD *)(result + 88) = 0;
    }
  }
  return result;
}

uint64_t sub_1002CD4AC(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1002CD4B8(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1002CD4C8(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF9 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherViewModel()
{
  return &type metadata for ReportWeatherViewModel;
}

uint64_t sub_1002CD4F0(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  char v5;
  char v6;
  void *v7;
  _QWORD v9[12];
  _BYTE v10[96];
  _QWORD v11[12];
  _QWORD v12[12];

  v4 = sub_1001C4B3C(a1, v11);
  if ((v11[0] & 0x8000000000000000) != 0)
  {
    v11[0] &= ~0x8000000000000000;
    v7 = sub_1000B472C(v12, v11);
    sub_1000CCAE0((uint64_t)v7, v9);
    if ((v9[0] & 0x8000000000000000) != 0)
    {
      v9[0] &= ~0x8000000000000000;
      sub_1000B472C(v10, v9);
      v6 = sub_100544468((uint64_t)v12, (uint64_t)v10);
      return v6 & 1;
    }
    goto LABEL_5;
  }
  sub_1000CCAE0((uint64_t)v4, v12);
  if ((v12[0] & 0x8000000000000000) != 0)
  {
LABEL_5:
    v6 = 0;
    return v6 & 1;
  }
  type metadata accessor for ReportWeatherContentViewModel._Storage(0);
  sub_1001C4B78(a1, sub_10019D33C);
  sub_1001C4B78(a2, sub_10019D33C);
  sub_1001EE598();
  v6 = v5;
  sub_1001C4B78(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10019D2B8);
  sub_1001C4B78(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10019D2B8);
  return v6 & 1;
}

uint64_t sub_1002CD608(const void *a1)
{
  void *v1;
  _QWORD v3[12];
  _QWORD v4[12];

  v1 = sub_1001C4B3C(a1, v3);
  sub_1000CCAE0((uint64_t)v1, v4);
  return sub_1002CD4F0(v3, v4) & 1;
}

void sub_1002CD64C(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE v4[96];

  sub_100693274(a1, (uint64_t)v4);
  if (!v2)
    sub_1001C4B3C(v4, a2);
}

void sub_1002CD690()
{
  const void *v0;
  uint64_t v1;

  sub_1001C4B3C(v0, &v1);
  sub_1006933B8();
}

void sub_1002CD6DC(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v5 = sub_1000BA294(&qword_100BD4758);
  __chkstk_darwin(v5);
  v6 = a1[3];
  v7 = a1[4];
  sub_1000DB418(a1, v6);
  v8 = sub_1002CE14C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ReportWeatherViewModel.CodingKeys, &type metadata for ReportWeatherViewModel.CodingKeys, v8, v6, v7);
  if (v2)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    sub_1002CE188();
    sub_1000BA858((uint64_t)&type metadata for ReportWeatherViewModel.CodingType);
    if ((v21 & 1) != 0)
    {
      sub_1002CE1C4();
      sub_1000BA858((uint64_t)&unk_100B7EBE8);
      sub_100098B9C();
      v19 = v23;
      v20 = v22;
      v17 = v25;
      v18 = v24;
      v9 = v28;
      v15 = v27;
      v16 = v26;
      v10 = v29;
      v11 = v30;
      v12 = v31;
      v13 = v32;
      v14 = v21 | 0x8000000000000000;
    }
    else
    {
      sub_1002CE200();
      sub_1000BA858((uint64_t)&unk_100B632F8);
      sub_100098B9C();
      v19 = 0;
      v20 = 0;
      v17 = 0;
      v18 = 0;
      v15 = 0;
      v16 = 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = v21;
    }
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    *a2 = v14;
    a2[1] = v20;
    a2[2] = v19;
    a2[3] = v18;
    a2[4] = v17;
    a2[5] = v16;
    a2[6] = v15;
    a2[7] = v9;
    a2[8] = v10;
    a2[9] = v11;
    a2[10] = v12;
    a2[11] = v13;
  }
  sub_1000B44B0();
}

void sub_1002CD8B4(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[12];
  uint64_t v22[12];
  _QWORD v23[12];
  _BYTE __dst[96];
  char v25;

  v3 = v2;
  v4 = v1;
  sub_1001C4B3C(v4, v22);
  v6 = sub_1000BA294(&qword_100BD4780);
  __chkstk_darwin(v6);
  sub_100098694();
  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = sub_1002CE14C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ReportWeatherViewModel.CodingKeys, &type metadata for ReportWeatherViewModel.CodingKeys, v9, v7, v8);
  sub_1001C4B3C(v4, v23);
  v10 = v23[0];
  if ((v23[0] & 0x8000000000000000) != 0)
  {
    v23[0] &= ~0x8000000000000000;
    memcpy(__dst, v23, sizeof(__dst));
    LOBYTE(v21[0]) = 1;
    v25 = 0;
    v15 = sub_1002CE23C();
    sub_1000BBFA4(v15, v16, v17, (uint64_t)&type metadata for ReportWeatherViewModel.CodingType, v15);
    if (!v2)
    {
      memcpy(v21, __dst, sizeof(v21));
      v25 = 2;
      v18 = sub_1002CE278();
      sub_1000BBFA4(v18, v19, v20, (uint64_t)&unk_100B7EBE8, v18);
    }
    sub_1000C4714();
  }
  else
  {
    LOBYTE(v21[0]) = 0;
    v25 = 0;
    v11 = sub_1002CE23C();
    swift_retain();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v25, v6, &type metadata for ReportWeatherViewModel.CodingType, v11);
    if (!v3)
    {
      v21[0] = v10;
      v25 = 1;
      v12 = sub_1002CE2B4();
      sub_1000BBFA4(v12, v13, v14, (uint64_t)&unk_100B632F8, v12);
    }
    sub_1000C4714();
    sub_1001C4B78(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10019D2B8);
  }
  sub_1000B44B0();
}

unint64_t sub_1002CDA74(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59C48, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1002CDAC0(char a1)
{
  if (!a1)
    return 1701869940;
  if (a1 == 1)
    return 0xD00000000000001DLL;
  return 0xD000000000000015;
}

uint64_t sub_1002CDB1C(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59CB0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_1002CDB6C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6567617373656DLL;
  else
    return 0x746E65746E6F63;
}

void sub_1002CDB9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_10068C03C(*a1, *a2);
}

void sub_1002CDBA8()
{
  sub_1004A74C8();
}

double sub_1002CDBB0(uint64_t a1)
{
  char *v1;

  return sub_1001D9238(a1, *v1);
}

void sub_1002CDBB8(uint64_t a1)
{
  sub_1001D9A4C(a1);
}

unint64_t sub_1002CDBC0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002CDA74(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002CDBEC@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1002CDAC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1002CDC14()
{
  char *v0;

  return sub_1002CDAC0(*v0);
}

uint64_t sub_1002CDC1C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1002CDABC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002CDC40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002CE14C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CDC68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002CE14C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CDC90(char *a1, char *a2)
{
  return sub_10068BFC8(*a1, *a2);
}

void sub_1002CDC9C()
{
  sub_1004A74D4();
}

double sub_1002CDCA4(uint64_t a1)
{
  char *v1;

  return sub_1001D91F4(a1, *v1);
}

void sub_1002CDCAC(uint64_t a1)
{
  sub_1001D9AB4(a1);
}

uint64_t sub_1002CDCB4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1002CDB1C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002CDCE0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1002CDB6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1002CDD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002CE608();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1002CDD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002CE608();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1002CDDB0(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4[12];

  sub_1002CD6DC(a1, v4);
  if (!v2)
    sub_1001C4B3C(v4, a2);
}

void sub_1002CDDF4(_QWORD *a1)
{
  const void *v1;
  uint64_t v3;

  sub_1001C4B3C(v1, &v3);
  sub_1002CD8B4(a1);
}

uint64_t sub_1002CDE40@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[12];
  _QWORD v23[12];
  uint64_t v24;
  unint64_t v25;

  v3 = v1;
  sub_1001C4B3C(v1, v22);
  v5 = sub_1000BA294(&qword_100BD47A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098694();
  sub_1001C4B3C(v1, v23);
  v7 = v23[0];
  if ((v23[0] & 0x8000000000000000) != 0)
  {
    v23[0] &= ~0x8000000000000000;
    sub_1000B472C(&v24, v23);
    v18 = 0;
    v19 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1000DCD10(0x2C6567617373656DLL);
    sub_100544658(&v18);
    v12 = sub_1000BA294(&qword_100BD0D88);
    _print_unlocked<A, B>(_:_:)(&v18, &v20, v12, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v18);
    v13 = v20;
    v14 = v21;
    v15 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    ShortDescription.init(name:_:)(v13, v14, v15, &type metadata for ReportWeatherViewModel);
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    swift_retain();
    _StringGuts.grow(_:)(17);
    v18 = v24;
    v19 = v25;
    sub_1000DCD10(0x2C746E65746E6F63);
    sub_1004DF3DC(v7, &v24);
    v8 = sub_1000BA294(&qword_100BD0D88);
    _print_unlocked<A, B>(_:_:)(&v24, &v18, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v24);
    v9 = v18;
    v10 = v19;
    v11 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    ShortDescription.init(name:_:)(v9, v10, v11, &type metadata for ReportWeatherViewModel);
    sub_1001C4B78(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10019D2B8);
  }
  a1[3] = v5;
  a1[4] = sub_1002CE2F0();
  v16 = sub_10005F164(a1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v6 + 32))(v16, v2, v5);
}

uint64_t sub_1002CE0A8@<X0>(_QWORD *a1@<X8>)
{
  const void *v1;
  uint64_t v4;

  sub_1001C4B3C(v1, &v4);
  return sub_1002CDE40(a1);
}

uint64_t sub_1002CE0E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002CE334();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1002CE110()
{
  unint64_t result;

  result = qword_100BD4750;
  if (!qword_100BD4750)
  {
    result = swift_getWitnessTable(&unk_1009927C0, &type metadata for ReportWeatherViewModel);
    atomic_store(result, (unint64_t *)&qword_100BD4750);
  }
  return result;
}

unint64_t sub_1002CE14C()
{
  unint64_t result;

  result = qword_100BD4760;
  if (!qword_100BD4760)
  {
    result = swift_getWitnessTable(&unk_100992AB0, &type metadata for ReportWeatherViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4760);
  }
  return result;
}

unint64_t sub_1002CE188()
{
  unint64_t result;

  result = qword_100BD4768;
  if (!qword_100BD4768)
  {
    result = swift_getWitnessTable(&unk_100992A88, &type metadata for ReportWeatherViewModel.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD4768);
  }
  return result;
}

unint64_t sub_1002CE1C4()
{
  unint64_t result;

  result = qword_100BD4770;
  if (!qword_100BD4770)
  {
    result = swift_getWitnessTable(&unk_1009AC850, &unk_100B7EBE8);
    atomic_store(result, (unint64_t *)&qword_100BD4770);
  }
  return result;
}

unint64_t sub_1002CE200()
{
  unint64_t result;

  result = qword_100BD4778;
  if (!qword_100BD4778)
  {
    result = swift_getWitnessTable(&unk_100986788, &unk_100B632F8);
    atomic_store(result, (unint64_t *)&qword_100BD4778);
  }
  return result;
}

unint64_t sub_1002CE23C()
{
  unint64_t result;

  result = qword_100BD4788;
  if (!qword_100BD4788)
  {
    result = swift_getWitnessTable(&unk_100992A60, &type metadata for ReportWeatherViewModel.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD4788);
  }
  return result;
}

unint64_t sub_1002CE278()
{
  unint64_t result;

  result = qword_100BD4790;
  if (!qword_100BD4790)
  {
    result = swift_getWitnessTable(&unk_1009AC828, &unk_100B7EBE8);
    atomic_store(result, (unint64_t *)&qword_100BD4790);
  }
  return result;
}

unint64_t sub_1002CE2B4()
{
  unint64_t result;

  result = qword_100BD4798;
  if (!qword_100BD4798)
  {
    result = swift_getWitnessTable(&unk_100986760, &unk_100B632F8);
    atomic_store(result, (unint64_t *)&qword_100BD4798);
  }
  return result;
}

unint64_t sub_1002CE2F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD47A8;
  if (!qword_100BD47A8)
  {
    v1 = sub_100075EB0(&qword_100BD47A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD47A8);
  }
  return result;
}

unint64_t sub_1002CE334()
{
  unint64_t result;

  result = qword_100BD47B0;
  if (!qword_100BD47B0)
  {
    result = swift_getWitnessTable(&unk_1009927E8, &type metadata for ReportWeatherViewModel);
    atomic_store(result, (unint64_t *)&qword_100BD47B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReportWeatherViewModel.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002CE3BC + 4 * byte_100992765[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002CE3F0 + 4 * byte_100992760[v4]))();
}

uint64_t sub_1002CE3F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CE3F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CE400);
  return result;
}

uint64_t sub_1002CE40C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CE414);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002CE418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CE420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherViewModel.CodingType()
{
  return &type metadata for ReportWeatherViewModel.CodingType;
}

uint64_t storeEnumTagSinglePayload for ReportWeatherViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002CE488 + 4 * byte_10099276F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002CE4BC + 4 * byte_10099276A[v4]))();
}

uint64_t sub_1002CE4BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CE4C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CE4CCLL);
  return result;
}

uint64_t sub_1002CE4D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CE4E0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002CE4E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CE4EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherViewModel.CodingKeys()
{
  return &type metadata for ReportWeatherViewModel.CodingKeys;
}

unint64_t sub_1002CE50C()
{
  unint64_t result;

  result = qword_100BD47B8;
  if (!qword_100BD47B8)
  {
    result = swift_getWitnessTable(&unk_100992998, &type metadata for ReportWeatherViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD47B8);
  }
  return result;
}

unint64_t sub_1002CE54C()
{
  unint64_t result;

  result = qword_100BD47C0;
  if (!qword_100BD47C0)
  {
    result = swift_getWitnessTable(&unk_100992A38, &type metadata for ReportWeatherViewModel.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD47C0);
  }
  return result;
}

unint64_t sub_1002CE58C()
{
  unint64_t result;

  result = qword_100BD47C8;
  if (!qword_100BD47C8)
  {
    result = swift_getWitnessTable(&unk_1009928D0, &type metadata for ReportWeatherViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD47C8);
  }
  return result;
}

unint64_t sub_1002CE5CC()
{
  unint64_t result;

  result = qword_100BD47D0;
  if (!qword_100BD47D0)
  {
    result = swift_getWitnessTable(&unk_1009928F8, &type metadata for ReportWeatherViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD47D0);
  }
  return result;
}

unint64_t sub_1002CE608()
{
  unint64_t result;

  result = qword_100BD47D8;
  if (!qword_100BD47D8)
  {
    result = swift_getWitnessTable(&unk_1009929C0, &type metadata for ReportWeatherViewModel.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BD47D8);
  }
  return result;
}

_QWORD *sub_1002CE644(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for MoonDetailSelectedDate(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BC6CB8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10);
      v15 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      swift_storeEnumTagMultiPayload(v9, v11, EnumCaseMultiPayload);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    v21 = a3[7];
    v22 = a3[8];
    v23 = (char *)a1 + v21;
    v24 = (char *)a2 + v21;
    v25 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    v23[32] = v24[32];
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  }
  return a1;
}

uint64_t sub_1002CE814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for MoonDetailSelectedDate(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)
    && swift_getEnumCaseMultiPayload(v5) <= 2)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return result;
}

uint64_t sub_1002CE8F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for MoonDetailSelectedDate(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC6CB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
    v13 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  return a1;
}

uint64_t sub_1002CEA9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for MoonDetailSelectedDate(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
      v14 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_1000215BC((uint64_t)v8, type metadata accessor for MoonDetailSelectedDate);
LABEL_6:
    v15 = sub_1000BA294(&qword_100BC6CB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v8, type metadata accessor for MoonDetailSelectedDate);
    v30 = swift_getEnumCaseMultiPayload(v9);
    if (v30 == 2)
    {
      v35 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v8, v9, v35);
      v32 = v8;
      v33 = v10;
      v34 = 2;
    }
    else if (v30 == 1)
    {
      v31 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v8, v9, v31);
      v32 = v8;
      v33 = v10;
      v34 = 1;
    }
    else
    {
      v36 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v8, v9, v36);
      v32 = v8;
      v33 = v10;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
LABEL_7:
  v16 = a3[6];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = type metadata accessor for Date(0);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19);
  v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19);
  if (!v20)
  {
    v22 = *(_QWORD *)(v19 - 8);
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 24))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
LABEL_13:
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = (__int128 *)(a2 + v24);
  v27 = *v26;
  v28 = v26[1];
  *(_BYTE *)(v25 + 32) = *((_BYTE *)v26 + 32);
  *(_OWORD *)v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1002CED80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for MoonDetailSelectedDate(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC6CB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
    v13 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  return a1;
}

uint64_t sub_1002CEF24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for MoonDetailSelectedDate(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
      v14 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v8, v9, v14);
      swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_1000215BC((uint64_t)v8, type metadata accessor for MoonDetailSelectedDate);
LABEL_6:
    v15 = sub_1000BA294(&qword_100BC6CB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v8, type metadata accessor for MoonDetailSelectedDate);
    v30 = swift_getEnumCaseMultiPayload(v9);
    if (v30 == 2)
    {
      v35 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v8, v9, v35);
      v32 = v8;
      v33 = v10;
      v34 = 2;
    }
    else if (v30 == 1)
    {
      v31 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v8, v9, v31);
      v32 = v8;
      v33 = v10;
      v34 = 1;
    }
    else
    {
      v36 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v8, v9, v36);
      v32 = v8;
      v33 = v10;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
LABEL_7:
  v16 = a3[6];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = type metadata accessor for Date(0);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19);
  v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19);
  if (!v20)
  {
    v22 = *(_QWORD *)(v19 - 8);
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 40))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
LABEL_13:
  v24 = a3[7];
  v25 = a3[8];
  v26 = a1 + v24;
  v27 = a2 + v24;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_BYTE *)(v26 + 32) = *(_BYTE *)(v27 + 32);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  return a1;
}

uint64_t sub_1002CF204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CF210);
}

uint64_t sub_1002CF210(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned int v15;

  sub_1000988EC();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(&qword_100BC6CB8);
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_10:
    v8 = v4 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_10;
  }
  v15 = *(unsigned __int8 *)(v4 + a3[8]);
  if (v15 >= 3)
    return v15 - 2;
  else
    return 0;
}

uint64_t sub_1002CF2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CF2C0);
}

void sub_1002CF2C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000988EC();
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1000BA294(&qword_100BC6CB8);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1000BA294((uint64_t *)&unk_100BD35A0);
      sub_10009D2E8();
      if (!v13)
      {
        *(_BYTE *)(v5 + a4[8]) = v4 + 2;
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = v5 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v9, v4, v4, v8);
}

void sub_1002CF364(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[4];
  unsigned __int8 v81;
  _BYTE v82[48];

  v76 = a5;
  v64 = a3;
  v63 = a2;
  v61 = a1;
  v75 = a6;
  v70 = a4;
  sub_1000787D4(a4, (uint64_t)v80, &qword_100BC40B0);
  v73 = v80[1];
  v74 = v80[0];
  v71 = v80[3];
  v72 = v80[2];
  v77 = v81;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v66 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  v79 = (uint64_t)&v60 - v9;
  sub_1000BA294(&qword_100BC6CB8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v78 = (uint64_t)&v60 - v14;
  v15 = (int *)sub_1000CFC1C();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_1000986FC();
  v69 = v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v68 = (uint64_t)&v60 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  v22 = (char *)&v60 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v60 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v60 - v27;
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100098728();
  v32 = v31 - v30;
  v33 = type metadata accessor for Location(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  sub_100098728();
  v37 = v36 - v35;
  sub_100037768(v61, v32, &qword_100BC35F8);
  v38 = v62;
  sub_1002D09D4(v62, (uint64_t)v28);
  sub_100088FC8(v32, 1, v33);
  v67 = v34;
  v65 = v37;
  if (v39)
  {
    sub_1000BE9D4(v37, (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
    sub_1000215BC((uint64_t)v28, type metadata accessor for MoonDetailViewState);
    sub_100021A14(v32, &qword_100BC35F8);
  }
  else
  {
    sub_1000215BC((uint64_t)v28, type metadata accessor for MoonDetailViewState);
    sub_1000BE9D4(v37, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32));
  }
  sub_100037768(v63, (uint64_t)v12, &qword_100BC6CB8);
  v40 = v38;
  sub_1002D09D4(v38, (uint64_t)v25);
  v41 = type metadata accessor for MoonDetailSelectedDate(0);
  sub_100088FC8((uint64_t)v12, 1, v41);
  v42 = v73;
  v43 = v71;
  v44 = v66;
  if (v39)
  {
    sub_1000BCF38((uint64_t)&v25[v15[5]], v78);
    sub_1000215BC((uint64_t)v25, type metadata accessor for MoonDetailViewState);
    sub_100099298((uint64_t)v12);
  }
  else
  {
    sub_1000215BC((uint64_t)v25, type metadata accessor for MoonDetailViewState);
    v45 = (uint64_t)v12;
    v46 = v78;
    sub_1002D0918(v45, v78);
    sub_1000D11A0(v46);
  }
  sub_100037768(v64, v44, (uint64_t *)&unk_100BD35A0);
  sub_1002D09D4(v40, (uint64_t)v22);
  v47 = type metadata accessor for Date(0);
  v48 = sub_100088FC8(v44, 1, v47);
  v49 = v74;
  v50 = v72;
  if (v39)
  {
    sub_1000BCF38((uint64_t)&v22[v15[6]], v79);
    sub_10004A2E0(v51, type metadata accessor for MoonDetailViewState);
    sub_100099298(v44);
  }
  else
  {
    sub_10004A2E0(v48, type metadata accessor for MoonDetailViewState);
    v52 = v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v79, v44, v47);
    sub_1000D11A0(v52);
  }
  v53 = v68;
  sub_1002D09D4(v40, v68);
  sub_1000787D4(v70, (uint64_t)v82, &qword_100BC40B0);
  v55 = v76;
  v56 = v69;
  if (v82[32] == 1)
  {
    v57 = v53 + v15[7];
    v49 = *(_QWORD *)v57;
    v42 = *(_QWORD *)(v57 + 8);
    v50 = *(_QWORD *)(v57 + 16);
    v43 = *(_QWORD *)(v57 + 24);
    v77 = *(unsigned __int8 *)(v57 + 32);
  }
  sub_10004A2E0(v54, type metadata accessor for MoonDetailViewState);
  sub_1002D09D4(v40, v56);
  if (v55 == 3)
    v55 = *(_BYTE *)(v56 + v15[8]);
  sub_1000215BC(v56, type metadata accessor for MoonDetailViewState);
  v58 = v75;
  v59 = v75 + v15[7];
  sub_1000BE9D4(v75, v65, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 32));
  sub_1000787D4(v78, v58 + v15[5], &qword_100BC6CB8);
  sub_1000787D4(v79, v58 + v15[6], (uint64_t *)&unk_100BD35A0);
  *(_QWORD *)v59 = v49;
  *(_QWORD *)(v59 + 8) = v42;
  *(_QWORD *)(v59 + 16) = v50;
  *(_QWORD *)(v59 + 24) = v43;
  *(_BYTE *)(v59 + 32) = v77;
  *(_BYTE *)(v58 + v15[8]) = v55;
}

uint64_t sub_1002CF884(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  char v13;

  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x64657463656C6573 && a2 == 0xEC00000065746144)
  {
    v8 = 0xEC00000065746144;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64657463656C6573, 0xEC00000065746144, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000015)
  {
    v9 = 0x80000001009F9490;
    if (a2 == 0x80000001009F9490)
      goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F9490, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2;
  }
  if (a1 == 0x6552656372756F73 && a2 == 0xEA00000000007463)
  {
    v11 = 0xEA00000000007463;
    goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6552656372756F73, 0xEA00000000007463, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3;
  }
  if (a1 == 0x6E694B776F727261 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease(0xE900000000000064);
    return 4;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E694B776F727261, 0xE900000000000064, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1002CFABC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002CFAF0 + 4 * byte_100992B00[a1]))(0x6E6F697461636F6CLL, 0xE800000000000000);
}

uint64_t sub_1002CFAF0()
{
  return 0x64657463656C6573;
}

unint64_t sub_1002CFB10()
{
  return 0xD000000000000015;
}

uint64_t sub_1002CFB2C()
{
  return 0x6552656372756F73;
}

uint64_t sub_1002CFB48()
{
  return 0x6E694B776F727261;
}

BOOL sub_1002CFB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  CGRect *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v70 = type metadata accessor for Date(0);
  v66 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  sub_100088FDC();
  v65 = v4;
  v5 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v69 = v7;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v67 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  v68 = (uint64_t)&v60 - v11;
  sub_10009D2A4();
  __chkstk_darwin(v12);
  v71 = (uint64_t)&v60 - v13;
  v14 = type metadata accessor for MoonDetailSelectedDate(0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  v19 = sub_1000BA294(&qword_100BD4890);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  sub_1000BA294(&qword_100BC6CB8);
  sub_1000B42B0();
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v25);
  v30 = (char *)&v60 - v29;
  __chkstk_darwin(v28);
  v32 = (char *)&v60 - v31;
  if ((static Location.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v61 = v5;
  v33 = sub_1000CFC1C();
  v34 = *(int *)(v33 + 20);
  v62 = a1;
  sub_1000CDC2C(a1 + v34, (uint64_t)v32);
  v63 = a2;
  v64 = (int *)v33;
  sub_1000CDC2C(a2 + *(int *)(v33 + 20), (uint64_t)v30);
  v35 = v23 + *(int *)(v19 + 48);
  sub_1000CDC2C((uint64_t)v32, v23);
  sub_1000CDC2C((uint64_t)v30, v35);
  sub_100088FC8(v23, 1, v14);
  if (v36)
  {
    sub_10009E47C((uint64_t)v30);
    sub_10009E47C((uint64_t)v32);
    sub_100088FC8(v35, 1, v14);
    if (v36)
    {
      sub_100021A14(v23, &qword_100BC6CB8);
      goto LABEL_12;
    }
LABEL_10:
    v37 = &qword_100BD4890;
    v38 = v23;
LABEL_21:
    sub_100021A14(v38, v37);
    return 0;
  }
  sub_100037768(v23, (uint64_t)v27, &qword_100BC6CB8);
  sub_100088FC8(v35, 1, v14);
  if (v36)
  {
    sub_100075DD0((uint64_t)v30);
    sub_100075DD0((uint64_t)v32);
    sub_1000215BC((uint64_t)v27, type metadata accessor for MoonDetailSelectedDate);
    goto LABEL_10;
  }
  sub_1002D0918(v35, v18);
  v39 = sub_100669320((uint64_t)v27, v18);
  sub_1000215BC(v18, type metadata accessor for MoonDetailSelectedDate);
  sub_10009E47C((uint64_t)v30);
  sub_10009E47C((uint64_t)v32);
  sub_1000215BC((uint64_t)v27, type metadata accessor for MoonDetailSelectedDate);
  sub_10009E47C(v23);
  if ((v39 & 1) == 0)
    return 0;
LABEL_12:
  v40 = v64;
  v41 = v62;
  v42 = v71;
  sub_1000BCF38(v62 + v64[6], v71);
  v43 = v63;
  v44 = v68;
  sub_1000BCF38(v63 + v40[6], v68);
  v45 = v69;
  v46 = v69 + *(int *)(v61 + 48);
  sub_1000BCF38(v42, v69);
  sub_1000BCF38(v44, v46);
  v47 = v70;
  sub_100088FC8(v45, 1, v70);
  if (!v36)
  {
    v48 = v67;
    sub_100037768(v45, v67, (uint64_t *)&unk_100BD35A0);
    sub_100088FC8(v46, 1, v47);
    if (!v49)
    {
      v52 = v65;
      v51 = v66;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v65, v46, v47);
      sub_100086DA4((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v54 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v52, v47, v53);
      v55 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v55(v52, v47);
      sub_100099298(v44);
      sub_100099298(v71);
      v55(v48, v47);
      sub_100099298(v45);
      if ((v54 & 1) == 0)
        return 0;
      goto LABEL_25;
    }
    sub_100075DD0(v44);
    sub_100075DD0(v42);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v48, v47);
    goto LABEL_20;
  }
  sub_100099298(v44);
  sub_100099298(v42);
  sub_100088FC8(v46, 1, v47);
  if (!v36)
  {
LABEL_20:
    v37 = &qword_100BC4978;
    v38 = v45;
    goto LABEL_21;
  }
  sub_100021A14(v45, (uint64_t *)&unk_100BD35A0);
LABEL_25:
  v56 = v64[7];
  v57 = (CGRect *)(v41 + v56);
  v58 = *(_BYTE *)(v41 + v56 + 32);
  v59 = v43 + v56;
  if ((v58 & 1) != 0)
  {
    if (*(_BYTE *)(v59 + 32))
      return *(unsigned __int8 *)(v41 + v64[8]) == *(unsigned __int8 *)(v43 + v64[8]);
  }
  else if ((*(_BYTE *)(v59 + 32) & 1) == 0 && CGRectEqualToRect(*v57, *(CGRect *)v59))
  {
    return *(unsigned __int8 *)(v41 + v64[8]) == *(unsigned __int8 *)(v43 + v64[8]);
  }
  return 0;
}

uint64_t sub_1002D00B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v24;
  _OWORD v25[2];
  char v26;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100BD48B8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1002D095C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MoonDetailViewState.CodingKeys, &type metadata for MoonDetailViewState.CodingKeys, v10, v8, v9);
  LOBYTE(v25[0]) = 0;
  v11 = type metadata accessor for Location(0);
  sub_100086DA4(&qword_100BCF410, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  sub_1000C26D4(v4, (uint64_t)v25, v6, v11, v12);
  if (!v2)
  {
    v13 = type metadata accessor for MoonDetailViewState(0);
    LOBYTE(v25[0]) = 1;
    type metadata accessor for MoonDetailSelectedDate(0);
    sub_100086DA4(&qword_100BD48C0, type metadata accessor for MoonDetailSelectedDate, (uint64_t)&unk_1009BB648);
    sub_1000C4728(v14);
    LOBYTE(v25[0]) = 2;
    type metadata accessor for Date(0);
    sub_100086DA4(&qword_100BC3578, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    sub_1000C4728(v15);
    v16 = v4 + *(int *)(v13 + 28);
    v17 = *(_BYTE *)(v16 + 32);
    v18 = *(_OWORD *)(v16 + 16);
    v25[0] = *(_OWORD *)v16;
    v25[1] = v18;
    v26 = v17;
    v24 = 3;
    type metadata accessor for CGRect(0);
    v20 = v19;
    sub_100086DA4(&qword_100BCF428, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v25, &v24, v6, v20, v21);
    LOBYTE(v25[0]) = *(_BYTE *)(v4 + *(int *)(v13 + 32));
    v24 = 4;
    v22 = sub_1002D0A18();
    sub_1000C26D4((uint64_t)v25, (uint64_t)&v24, v6, (uint64_t)&type metadata for MoonScrubberHeaderArrowKind, v22);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

void sub_1002D02F8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  char v33;
  char v34;

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v26 = v4;
  sub_1000BA294(&qword_100BC6CB8);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v25 = v6;
  v7 = type metadata accessor for Location(0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  __chkstk_darwin(v7);
  sub_100088FDC();
  v29 = v8;
  v30 = sub_1000BA294(&qword_100BD4898);
  __chkstk_darwin(v30);
  sub_100079FBC();
  v9 = (int *)type metadata accessor for MoonDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v15 = v12 - v11 + *(int *)(v14 + 28);
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_BYTE *)(v15 + 32) = 1;
  v17 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v17);
  v18 = sub_1002D095C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MoonDetailViewState.CodingKeys, &type metadata for MoonDetailViewState.CodingKeys, v18, v17, v16);
  if (v31)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    LOBYTE(v32[0]) = 0;
    sub_100086DA4(&qword_100BCF3E8, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v28, v32, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v13, v29, v28);
    type metadata accessor for MoonDetailSelectedDate(0);
    LOBYTE(v32[0]) = 1;
    sub_100086DA4(&qword_100BD48A8, type metadata accessor for MoonDetailSelectedDate, (uint64_t)&unk_1009BB670);
    sub_1000DB8AC(v19, (uint64_t)v32);
    sub_1000787D4(v25, v13 + v9[5], &qword_100BC6CB8);
    v20 = type metadata accessor for Date(0);
    LOBYTE(v32[0]) = 2;
    sub_100086DA4(&qword_100BC3558, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v20, v32, v30, v20);
    sub_1000787D4(v26, v9[6], (uint64_t *)&unk_100BD35A0);
    type metadata accessor for CGRect(0);
    v34 = 3;
    sub_100086DA4(&qword_100BCF400, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
    sub_1000DB8AC(v21, (uint64_t)&v34);
    v22 = v33;
    v23 = v32[1];
    *(_OWORD *)v15 = v32[0];
    *(_OWORD *)(v15 + 16) = v23;
    *(_BYTE *)(v15 + 32) = v22;
    v34 = 4;
    sub_1002D0998();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for MoonScrubberHeaderArrowKind, &v34, v30);
    sub_1000C24BC();
    *(_BYTE *)v9[8] = v32[0];
    sub_1002D09D4(0, a2);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    sub_1000215BC(0, type metadata accessor for MoonDetailViewState);
  }
}

uint64_t sub_1002D0730()
{
  unsigned __int8 *v0;

  return sub_1002CFABC(*v0);
}

uint64_t sub_1002D0738@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002CF884(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D075C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D095C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D0784(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D095C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D07B0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002D02F8(a1, a2);
}

uint64_t sub_1002D07C4(_QWORD *a1)
{
  return sub_1002D00B4(a1);
}

void sub_1002D07D8()
{
  sub_1006934A8();
}

void sub_1002D07EC()
{
  sub_100693718();
}

uint64_t sub_1002D0800@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BD48D0);
  a1[4] = sub_1002D0A54();
  sub_10005F164(a1);
  v3 = sub_1000CFC1C();
  return ShortDescription.init(name:_:)(0xD000000000000013, 0x8000000100992AF0, v2, v3);
}

uint64_t sub_1002D0898@<X0>(_QWORD *a1@<X8>)
{
  return sub_1002D0800(a1);
}

uint64_t sub_1002D08AC(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BD48E0, type metadata accessor for MoonDetailViewState, (uint64_t)&unk_100992B80);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_1002D08EC()
{
  sub_100086DA4(&qword_100BD4888, type metadata accessor for MoonDetailViewState, (uint64_t)&unk_100992B58);
}

uint64_t sub_1002D0918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonDetailSelectedDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002D095C()
{
  unint64_t result;

  result = qword_100BD48A0;
  if (!qword_100BD48A0)
  {
    result = swift_getWitnessTable(&unk_100992D3C, &type metadata for MoonDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD48A0);
  }
  return result;
}

unint64_t sub_1002D0998()
{
  unint64_t result;

  result = qword_100BD48B0;
  if (!qword_100BD48B0)
  {
    result = swift_getWitnessTable(&unk_1009A673C, &type metadata for MoonScrubberHeaderArrowKind);
    atomic_store(result, (unint64_t *)&qword_100BD48B0);
  }
  return result;
}

uint64_t sub_1002D09D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonDetailViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002D0A18()
{
  unint64_t result;

  result = qword_100BD48C8;
  if (!qword_100BD48C8)
  {
    result = swift_getWitnessTable(&unk_1009A6714, &type metadata for MoonScrubberHeaderArrowKind);
    atomic_store(result, (unint64_t *)&qword_100BD48C8);
  }
  return result;
}

unint64_t sub_1002D0A54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD48D8;
  if (!qword_100BD48D8)
  {
    v1 = sub_100075EB0(&qword_100BD48D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD48D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MoonDetailViewState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1002D0AE4 + 4 * byte_100992B0A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1002D0B18 + 4 * byte_100992B05[v4]))();
}

uint64_t sub_1002D0B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D0B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002D0B28);
  return result;
}

uint64_t sub_1002D0B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002D0B3CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1002D0B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D0B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoonDetailViewState.CodingKeys()
{
  return &type metadata for MoonDetailViewState.CodingKeys;
}

unint64_t sub_1002D0B68()
{
  unint64_t result;

  result = qword_100BD48E8;
  if (!qword_100BD48E8)
  {
    result = swift_getWitnessTable(&unk_100992D14, &type metadata for MoonDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD48E8);
  }
  return result;
}

unint64_t sub_1002D0BA8()
{
  unint64_t result;

  result = qword_100BD48F0;
  if (!qword_100BD48F0)
  {
    result = swift_getWitnessTable(&unk_100992C84, &type metadata for MoonDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD48F0);
  }
  return result;
}

unint64_t sub_1002D0BE8()
{
  unint64_t result;

  result = qword_100BD48F8;
  if (!qword_100BD48F8)
  {
    result = swift_getWitnessTable(&unk_100992CAC, &type metadata for MoonDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD48F8);
  }
  return result;
}

uint64_t *sub_1002D0C24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = type metadata accessor for ConditionPickerMenuViewModel(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for WeatherCondition(0);
    swift_bridgeObjectRetain(v7);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_1000BA294(&qword_100BC3660);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v15 = *(int *)(v8 + 24);
    v16 = *(uint64_t *)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = v16;
    v17 = *(int *)(a3 + 20);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (char *)a2 + v17;
    v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    *v18 = *(uint64_t *)((char *)a2 + v17);
    v18[1] = v20;
    swift_bridgeObjectRetain(v16);
    swift_retain();
    swift_retain();
    v21 = *(int *)(sub_1000BA294(&qword_100BD4900) + 32);
    v22 = (char *)v18 + v21;
    v23 = &v19[v21];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v19[v21], 1, v12))
    {
      v24 = sub_1000BA294(&qword_100BC3660);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v22, v23, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_1002D0DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for ConditionPickerMenuViewModel(0) + 20);
  v5 = type metadata accessor for WeatherCondition(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_release(*v6);
  swift_release(v6[1]);
  v7 = (uint64_t)v6 + *(int *)(sub_1000BA294(&qword_100BD4900) + 32);
  result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v7, v5);
  return result;
}

_QWORD *sub_1002D0EC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = type metadata accessor for ConditionPickerMenuViewModel(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for WeatherCondition(0);
  swift_bridgeObjectRetain(v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_1000BA294(&qword_100BC3660);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v13 = *(int *)(v7 + 24);
  v14 = *(_QWORD *)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)((char *)a2 + v15 + 8);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = v18;
  swift_bridgeObjectRetain(v14);
  swift_retain();
  swift_retain();
  v19 = *(int *)(sub_1000BA294(&qword_100BD4900) + 32);
  v20 = (char *)v16 + v19;
  v21 = &v17[v19];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v17[v19], 1, v11))
  {
    v22 = sub_1000BA294(&qword_100BC3660);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v20, v21, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v11);
  }
  return a1;
}

_QWORD *sub_1002D1050(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for ConditionPickerMenuViewModel(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for WeatherCondition(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = sub_1000BA294(&qword_100BC3660);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v9, v10, v11);
LABEL_7:
  v16 = *(int *)(v7 + 24);
  v17 = *(_QWORD *)((char *)a2 + v16);
  *(_QWORD *)((char *)a1 + v16) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease();
  v18 = *(int *)(a3 + 20);
  v19 = (char *)a1 + v18;
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = *(_QWORD *)((char *)a1 + v18);
  *(_QWORD *)((char *)a1 + v18) = *v20;
  swift_retain();
  swift_release(v21);
  v22 = *((_QWORD *)v19 + 1);
  *((_QWORD *)v19 + 1) = v20[1];
  swift_retain();
  swift_release(v22);
  v23 = *(int *)(sub_1000BA294(&qword_100BD4900) + 32);
  v24 = &v19[v23];
  v25 = (char *)v20 + v23;
  LODWORD(v20) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v11);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v11);
  if (!(_DWORD)v20)
  {
    v27 = *(_QWORD *)(v11 - 8);
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v11);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v28 = sub_1000BA294(&qword_100BC3660);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v24, v25, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v11);
  return a1;
}

_OWORD *sub_1002D129C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = type metadata accessor for ConditionPickerMenuViewModel(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC3660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12 + 8);
  *v13 = *(_QWORD *)((char *)a2 + v12);
  v13[1] = v15;
  v16 = *(int *)(sub_1000BA294(&qword_100BD4900) + 32);
  v17 = (char *)v13 + v16;
  v18 = &v14[v16];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v14[v16], 1, v10))
  {
    v19 = sub_1000BA294(&qword_100BC3660);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v17, v18, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v10);
  }
  return a1;
}

_QWORD *sub_1002D1408(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for ConditionPickerMenuViewModel(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for WeatherCondition(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = sub_1000BA294(&qword_100BC3660);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a1 + v16);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_release(v19);
  v20 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release(v20);
  v21 = *(int *)(sub_1000BA294(&qword_100BD4900) + 32);
  v22 = &v17[v21];
  v23 = &v18[v21];
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v11);
  v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v11);
  if (!(_DWORD)v18)
  {
    v25 = *(_QWORD *)(v11 - 8);
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v11);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v26 = sub_1000BA294(&qword_100BC3660);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v22, v23, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v11);
  return a1;
}

uint64_t sub_1002D162C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1000C2750();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD4900);
    v8 = v4 + *(int *)(a3 + 20);
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_1002D168C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1000C2750();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = sub_1000BA294(&qword_100BD4900);
    v10 = v5 + *(int *)(a4 + 20);
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t sub_1002D16F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB01E8, 1);
}

uint64_t sub_1002D1704()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_1000BA294(&qword_100BC4E18);
  v1 = sub_1000BA294(&qword_100BD49A0);
  v2 = sub_1001A865C();
  sub_1001CDAD0(&qword_100BD49A8, &qword_100BD49A0);
  return Menu.init(content:label:)(sub_1002D2614, &v5, sub_1002D2530, 0, v0, v1, v2, v3);
}

uint64_t sub_1002D17B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _QWORD v13[2];
  char v14;
  _QWORD *v15;

  v2 = sub_1000BA294(&qword_100BD4900);
  __chkstk_darwin(v2);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for ConditionPickerMenuView(0);
  sub_100037768(a1 + *(int *)(v5 + 20), (uint64_t)v4, &qword_100BD4900);
  v13[0] = 0xD000000000000012;
  v13[1] = 0x80000001009F94D0;
  v14 = 0;
  v15 = _swiftEmptyArrayStorage;
  v12 = a1;
  v6 = sub_1000BA294(&qword_100BC3660);
  v7 = sub_1000BA294(&qword_100BD49B0);
  v8 = sub_1002D262C();
  v9 = sub_1002D26A8();
  return Picker.init(selection:label:content:)(v4, v13, sub_1002D2624, v11, &type metadata for Text, v6, v7, &protocol witness table for Text, v8, v9);
}

uint64_t sub_1002D18D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ConditionPickerMenuViewModel(0) + 24));
  swift_bridgeObjectRetain(v8);
  v1 = sub_1000BA294(&qword_100BD4A50);
  v2 = sub_1000BA294(&qword_100BD49D8);
  sub_1001CDAD0(&qword_100BD4A58, &qword_100BD4A50);
  v4 = v3;
  v5 = sub_1002D270C();
  sub_10000F1C8(&qword_100BD4A60, type metadata accessor for ConditionPickerMenuViewModel.Row);
  return ForEach<>.init(_:content:)(&v8, sub_1002D19C0, 0, v1, &type metadata for String, v2, v4, v5, v6);
}

void sub_1002D19C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String_optional v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _QWORD v114[3];

  v111 = a2;
  v93 = sub_1000BA294(&qword_100BD4A08);
  __chkstk_darwin(v93);
  v97 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1000BA294(&qword_100BCF180);
  v96 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v95 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1000BA294(&qword_100BD49F8);
  __chkstk_darwin(v103);
  v94 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v99 = (uint64_t)&v91 - v7;
  v101 = sub_1000BA294(&qword_100BD4A68);
  __chkstk_darwin(v101);
  v102 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1000BA294(&qword_100BD49E8);
  __chkstk_darwin(v110);
  v104 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1000BA294(&qword_100BD4A70);
  __chkstk_darwin(v109);
  v108 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BD4A78);
  __chkstk_darwin(v11);
  v106 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD4A18);
  __chkstk_darwin(v13);
  v15 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BD4A80);
  __chkstk_darwin(v16);
  v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BD4A48);
  __chkstk_darwin(v19);
  v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1000BA294(&qword_100BD4A38);
  __chkstk_darwin(v107);
  v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v105 = (uint64_t)&v91 - v25;
  v26 = sub_1000BA294(&qword_100BC3660);
  __chkstk_darwin(v26);
  v100 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v91 - v29;
  v31 = type metadata accessor for WeatherCondition(0);
  v113 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v112 = (char *)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1 + *(int *)(type metadata accessor for ConditionPickerMenuViewModel.Row(0) + 20);
  sub_100037768(v33, (uint64_t)v30, &qword_100BC3660);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31) == 1)
  {
    sub_100021AA4((uint64_t)v30, &qword_100BC3660);
    sub_100037768(v33, (uint64_t)v18, &qword_100BC3660);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v26);
    sub_100037768((uint64_t)v18, (uint64_t)v15, &qword_100BD4A80);
    sub_100037768((uint64_t)v15, (uint64_t)&v21[*(int *)(v19 + 36)], &qword_100BD4A18);
    *(_QWORD *)v21 = 0xD00000000000001FLL;
    *((_QWORD *)v21 + 1) = 0x80000001009F94F0;
    v21[16] = 0;
    *((_QWORD *)v21 + 3) = _swiftEmptyArrayStorage;
    sub_100021AA4((uint64_t)v15, &qword_100BD4A18);
    sub_100021AA4((uint64_t)v18, &qword_100BD4A80);
    v34 = v106;
    sub_100037768(v33, v106, &qword_100BC3660);
    _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v26);
    v35 = sub_1000BA294(&qword_100BD4A88);
    _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
    v36 = v107;
    sub_100037768(v34, (uint64_t)&v23[*(int *)(v107 + 36)], &qword_100BD4A78);
    sub_100037768((uint64_t)v21, (uint64_t)v23, &qword_100BD4A48);
    sub_100021AA4(v34, &qword_100BD4A78);
    sub_100021AA4((uint64_t)v21, &qword_100BD4A48);
    v37 = v105;
    sub_1000787D4((uint64_t)v23, v105, &qword_100BD4A38);
    v38 = v108;
    sub_100037768(v37, v108, &qword_100BD4A38);
    swift_storeEnumTagMultiPayload(v38, v109, 1);
    v39 = sub_1002D2790();
    v40 = sub_1002D282C(&qword_100BD4A30, &qword_100BD4A38);
    _ConditionalContent<>.init(storage:)(v38, v110, v36, v39, v40);
    sub_100021AA4(v37, &qword_100BD4A38);
  }
  else
  {
    v91 = v23;
    v41 = v31;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v30, v31);
    v42 = WeatherCondition.conditionIconName(isDaytime:)(1);
    v92 = v31;
    v43 = v112;
    v114[0] = WeatherCondition.rawValue.getter(v42.value._countAndFlagsBits);
    v114[1] = v44;
    v45 = sub_100114EF8();
    if (v42.value._object)
    {
      v46 = v95;
      Label<>.init<A>(_:systemImage:)(v114, v42.value._countAndFlagsBits, v42.value._object, &type metadata for String, v45);
      v47 = (uint64_t)v100;
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v100, v43, v31);
      _s7Weather24LocationCompositionStateOwst_0(v47, 0, 1, v31);
      v48 = (uint64_t)v18;
      sub_100037768(v47, (uint64_t)v18, &qword_100BC3660);
      v49 = v26;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v26);
      v50 = (uint64_t)v97;
      sub_100037768(v48, (uint64_t)&v97[*(int *)(v93 + 36)], &qword_100BD4A80);
      v51 = v96;
      v52 = v46;
      v53 = v98;
      (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v50, v46, v98);
      sub_100021AA4(v48, &qword_100BD4A80);
      v54 = v106;
      sub_100037768(v47, v106, &qword_100BC3660);
      _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v49);
      v55 = sub_1000BA294(&qword_100BD4A88);
      _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v55);
      v56 = v103;
      v57 = (uint64_t)v94;
      sub_100037768(v54, (uint64_t)&v94[*(int *)(v103 + 36)], &qword_100BD4A78);
      sub_100037768(v50, v57, &qword_100BD4A08);
      sub_100021AA4(v54, &qword_100BD4A78);
      sub_100021AA4(v50, &qword_100BD4A08);
      sub_100021AA4(v47, &qword_100BC3660);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      v58 = &qword_100BD49F8;
      v59 = v99;
      sub_1000787D4(v57, v99, &qword_100BD49F8);
      v60 = v102;
      sub_100037768(v59, v102, &qword_100BD49F8);
      swift_storeEnumTagMultiPayload(v60, v101, 0);
      v61 = sub_1002D282C(&qword_100BD49F0, &qword_100BD49F8);
      v62 = sub_1002D282C(&qword_100BD4A30, &qword_100BD4A38);
      v63 = (uint64_t)v104;
      v64 = v107;
      _ConditionalContent<>.init(storage:)(v60, v56, v107, v61, v62);
      v65 = v59;
    }
    else
    {
      v96 = Text.init<A>(_:)(v114, &type metadata for String, v45);
      v97 = v66;
      v99 = v67;
      v69 = v68 & 1;
      v70 = (uint64_t)v100;
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v100, v43, v41);
      _s7Weather24LocationCompositionStateOwst_0(v70, 0, 1, v41);
      sub_100037768(v70, (uint64_t)v18, &qword_100BC3660);
      v71 = v26;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v26);
      v72 = (uint64_t)v15;
      sub_100037768((uint64_t)v18, (uint64_t)v15, &qword_100BD4A80);
      v73 = *(int *)(v19 + 36);
      v74 = (uint64_t)v21;
      sub_100037768((uint64_t)v15, (uint64_t)&v21[v73], &qword_100BD4A18);
      v75 = v96;
      v76 = v97;
      v77 = v99;
      *(_QWORD *)v21 = v96;
      *((_QWORD *)v21 + 1) = v77;
      v78 = v69;
      LODWORD(v98) = v69;
      v21[16] = v69;
      *((_QWORD *)v21 + 3) = v76;
      v79 = v75;
      sub_1000D55D4(v75, v77, v78);
      swift_bridgeObjectRetain(v76);
      sub_100021AA4(v72, &qword_100BD4A18);
      sub_100021AA4((uint64_t)v18, &qword_100BD4A80);
      v80 = v106;
      sub_100037768(v70, v106, &qword_100BC3660);
      _s7Weather24LocationCompositionStateOwst_0(v80, 0, 1, v71);
      v81 = sub_1000BA294(&qword_100BD4A88);
      _s7Weather24LocationCompositionStateOwst_0(v80, 0, 1, v81);
      v64 = v107;
      v82 = (uint64_t)v91;
      sub_100037768(v80, (uint64_t)&v91[*(int *)(v107 + 36)], &qword_100BD4A78);
      sub_100037768(v74, v82, &qword_100BD4A48);
      sub_100021AA4(v80, &qword_100BD4A78);
      sub_100021AA4(v74, &qword_100BD4A48);
      sub_100021AA4(v70, &qword_100BC3660);
      sub_1000D31B4(v79, v99, v98);
      swift_bridgeObjectRelease();
      v58 = &qword_100BD4A38;
      v83 = v82;
      v84 = v105;
      sub_1000787D4(v83, v105, &qword_100BD4A38);
      v85 = v102;
      sub_100037768(v84, v102, &qword_100BD4A38);
      swift_storeEnumTagMultiPayload(v85, v101, 1);
      v86 = sub_1002D282C(&qword_100BD49F0, &qword_100BD49F8);
      v87 = sub_1002D282C(&qword_100BD4A30, &qword_100BD4A38);
      v63 = (uint64_t)v104;
      _ConditionalContent<>.init(storage:)(v85, v103, v64, v86, v87);
      v65 = v84;
    }
    sub_100021AA4(v65, v58);
    v88 = v108;
    sub_100037768(v63, v108, &qword_100BD49E8);
    swift_storeEnumTagMultiPayload(v88, v109, 0);
    v89 = sub_1002D2790();
    v90 = sub_1002D282C(&qword_100BD4A30, &qword_100BD4A38);
    _ConditionalContent<>.init(storage:)(v88, v110, v64, v89, v90);
    sub_100021AA4(v63, &qword_100BD49E8);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v112, v92);
  }
}

uint64_t sub_1002D2530@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Image.init(systemName:)(0xD000000000000015, 0x80000001009F94B0);
  v6 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v6);
  v7 = static Font.system(size:weight:design:)(0, 1, v4);
  sub_100021AA4((uint64_t)v4, &qword_100BC3B98);
  result = swift_getKeyPath(&unk_100992DF8);
  *a1 = v5;
  a1[1] = result;
  a1[2] = v7;
  return result;
}

uint64_t sub_1002D2614()
{
  uint64_t v0;

  return sub_1002D17B0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002D2624()
{
  uint64_t v0;

  return sub_1002D18D8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1002D262C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD49B8;
  if (!qword_100BD49B8)
  {
    v1 = sub_100075EB0(&qword_100BC3660);
    sub_10000F1C8(&qword_100BD49C0, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BD49B8);
  }
  return result;
}

unint64_t sub_1002D26A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD49C8;
  if (!qword_100BD49C8)
  {
    v1 = sub_100075EB0(&qword_100BD49B0);
    sub_1002D270C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD49C8);
  }
  return result;
}

unint64_t sub_1002D270C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD49D0;
  if (!qword_100BD49D0)
  {
    v1 = sub_100075EB0(&qword_100BD49D8);
    sub_1002D2790();
    sub_1002D282C(&qword_100BD4A30, &qword_100BD4A38);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD49D0);
  }
  return result;
}

unint64_t sub_1002D2790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD49E0;
  if (!qword_100BD49E0)
  {
    v1 = sub_100075EB0(&qword_100BD49E8);
    sub_1002D282C(&qword_100BD49F0, &qword_100BD49F8);
    sub_1002D282C(&qword_100BD4A30, &qword_100BD4A38);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD49E0);
  }
  return result;
}

uint64_t sub_1002D282C(unint64_t *a1, uint64_t *a2)
{
  void (*v2)(void);
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1000B4444(0, a2);
    v2();
    sub_1001CDAD0(&qword_100BD4A20, &qword_100BD4A28);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002D28A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD4A00;
  if (!qword_100BD4A00)
  {
    v1 = sub_100075EB0(&qword_100BD4A08);
    sub_1001CDAD0(&qword_100BCF188, &qword_100BCF180);
    sub_1001CDAD0(&qword_100BD4A10, &qword_100BD4A18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD4A00);
  }
  return result;
}

unint64_t sub_1002D2944()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD4A40;
  if (!qword_100BD4A40)
  {
    v1 = sub_100075EB0(&qword_100BD4A48);
    sub_1001CDAD0(&qword_100BD4A10, &qword_100BD4A18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD4A40);
  }
  return result;
}

void sub_1002D29C8()
{
  sub_1001CDAD0(&qword_100BD4A90, &qword_100BD4A98);
}

void sub_1002D29F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(_s14ChartViewModelV26SunEventAccessibilityModelVMa(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10021A5B0();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1002D5E18((char *)v6);
  *a1 = v3;
}

uint64_t sub_1002D2A74@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1000BA294(&qword_100BD4B90);
  v6 = __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v18[-v9];
  v11 = (uint64_t)v2
      + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory____lazy_storage___listAnimationKind;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory____lazy_storage___listAnimationKind, v19, 0, 0);
  sub_100037768(v11, (uint64_t)v10, &qword_100BD4B90);
  v12 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v10, v12);
  sub_100021A14((uint64_t)v10, &qword_100BD4B90);
  v13 = static Settings.VFX.animatedBackgrounds.getter();
  v14 = Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter();
  swift_release(v13);
  v15 = sub_1002D6CE8();
  Configurable.setting<A>(_:)(v14, v4, v15);
  v16 = swift_release(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16))(v8, a1, v12, v16);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v12);
  swift_beginAccess(v11, v18, 33, 0);
  sub_1002D6D28((uint64_t)v8, v11);
  return swift_endAccess(v18);
}

void sub_1002D2C20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  double v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(_QWORD);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  void (*v147)(unint64_t, uint64_t, uint64_t);
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  void (*v150)(char *, _QWORD *);
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  unsigned __int16 v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  id v198;
  uint64_t v199;
  unsigned __int16 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  id v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  unsigned __int16 v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  id v239;
  Swift::String v240;
  Swift::String v241;
  Swift::String v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  unint64_t v279;
  char v280;
  uint64_t v281;
  uint64_t v282;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v284;
  uint64_t v285;
  unint64_t v286;
  unint64_t v287;
  char v288;
  uint64_t v289;
  _QWORD *v290;
  uint64_t v291;
  char v292;
  uint64_t v293;
  char v294;
  unint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  _QWORD *v298;
  char v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  uint64_t v305;
  char v306;
  unint64_t v307;
  uint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t v321;
  char v322;
  unint64_t v323;
  unint64_t v324;
  _QWORD *v325;
  _QWORD *v326;
  uint64_t *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  int *v334;
  uint64_t v335;
  char *v336;
  _QWORD *v337;
  _QWORD *v338;
  _QWORD *v339;
  uint64_t *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  uint64_t *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void (*v376)(uint64_t, uint64_t);
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  void (*v386)(uint64_t, _QWORD, uint64_t);
  unsigned int v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t (*v394)(uint64_t, uint64_t, uint64_t);
  void (*v395)(char *, uint64_t);
  void (*v396)(uint64_t, uint64_t, uint64_t);
  uint64_t v397;
  _QWORD *v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  __int128 v406;
  uint64_t v407;
  _QWORD *v408;
  uint64_t (*v409)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  _QWORD *v414;
  uint64_t v415;
  uint64_t v416;
  void (*v417)(uint64_t, uint64_t, uint64_t);
  _QWORD *v418;
  _QWORD *v419;
  _QWORD *v420;
  _QWORD *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  Swift::String v426;

  v405 = a4;
  v348 = a3;
  v415 = a1;
  v354 = a5;
  v343 = *(_QWORD *)(sub_1000BA294(&qword_100BCB0A0) - 8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v8);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v9);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v10);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v11);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v12);
  sub_100079F7C();
  sub_10009511C(v13);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_100088FDC();
  sub_10009511C(v15);
  v346 = *(_QWORD *)(sub_1000BA294(&qword_100BD4B70) - 8);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v17);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v18);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v19);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v20);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v21);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v23);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v24);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v25);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v26);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v27);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v28);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v29);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v30);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v31);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v32);
  sub_100079F7C();
  sub_10009511C(v33);
  sub_1000BA294(&qword_100BD4B78);
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_100088FDC();
  v36 = sub_1000987B4(v35);
  v37 = type metadata accessor for SunEvents(v36);
  sub_1000B43A4(v37, (uint64_t)&v383);
  v352 = v38;
  sub_10009D98C();
  __chkstk_darwin(v39);
  sub_100088FDC();
  v41 = sub_1000987B4(v40);
  v42 = _s14ChartViewModelV26SunEventAccessibilityModelVMa(v41);
  sub_1000B43A4(v42, (uint64_t)&v414);
  v374 = v43;
  sub_10009D98C();
  __chkstk_darwin(v44);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v45);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v46);
  sub_100079F7C();
  v48 = sub_1000987B4(v47);
  v49 = type metadata accessor for Location(v48);
  sub_1000B43A4(v49, (uint64_t)&v425);
  v393 = v50;
  sub_10009D98C();
  __chkstk_darwin(v51);
  sub_100088FDC();
  v407 = v52;
  v53 = type metadata accessor for DetailChartDataElement.ValueLabel(0);
  sub_1000B43A4(v53, (uint64_t)&v422);
  v408 = v54;
  sub_10009D98C();
  __chkstk_darwin(v55);
  sub_100088FDC();
  v57 = sub_1000987B4(v56);
  v416 = type metadata accessor for DetailChartDataElement(v57);
  v58 = *(_QWORD *)(v416 - 8);
  __chkstk_darwin(v416);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v59);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v60);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v61);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v62);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v63);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v64);
  sub_1000860D0();
  v412 = v65;
  sub_10009D2A4();
  __chkstk_darwin(v66);
  sub_1000860D0();
  v411 = v67;
  sub_10009D2A4();
  __chkstk_darwin(v68);
  sub_100079F7C();
  sub_10009511C(v69);
  sub_1000BA294(&qword_100BC52D8);
  sub_10009D98C();
  __chkstk_darwin(v70);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v71);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v72);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v73);
  v75 = (uint64_t *)((char *)&v426._object - v74);
  v76 = type metadata accessor for Elevation(0);
  sub_1000B43A4(v76, (uint64_t)&v424);
  v390 = v77;
  sub_10009D98C();
  __chkstk_darwin(v78);
  sub_1000986FC();
  v410 = v79;
  sub_10009D2A4();
  __chkstk_darwin(v80);
  sub_100079F7C();
  v82 = sub_1000987B4(v81);
  v83 = type metadata accessor for TimeZone(v82);
  v84 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v85 = sub_1000C1478();
  sub_1000B43A4(v85, (uint64_t)&v423);
  v388 = v86;
  sub_10009D98C();
  __chkstk_darwin(v87);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v88);
  v90 = (char *)&v426._object - v89;
  v91 = type metadata accessor for Date(0);
  v404 = *(_QWORD *)(v91 - 8);
  sub_10009D98C();
  __chkstk_darwin(v92);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v93);
  sub_1000860D0();
  v417 = v94;
  sub_10009D2A4();
  __chkstk_darwin(v95);
  sub_1000860D0();
  sub_1000BA30C();
  v97 = __chkstk_darwin(v96);
  v99 = (char *)&v426._object - v98;
  __chkstk_darwin(v97);
  v101 = (char *)&v426._object - v100;
  v102 = swift_allocObject(&unk_100B6BDE0, 24, 7);
  v355 = v102;
  *(_QWORD *)(v102 + 16) = _swiftEmptyArrayStorage;
  v414 = (_QWORD *)(v102 + 16);
  v353 = a2;
  v103 = CurrentWeather.date.getter(v102 + 16);
  Location.timeZone.getter(v103);
  static Calendar.currentCalendar(with:)(v5);
  v104 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v377 = v5;
  v378 = v83;
  v376 = v104;
  v104(v5, v83);
  v401 = v99;
  v359 = v101;
  v349 = v90;
  Calendar.startOfDay(for:)(v101);
  sub_100037768(v405, (uint64_t)v75, &qword_100BC52D8);
  v413 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel(0);
  sub_100088FC8((uint64_t)v75, 1, v413);
  if (v250)
  {
    sub_100021A14((uint64_t)v75, &qword_100BC52D8);
    v105 = 0;
  }
  else
  {
    v105 = *v75;
    sub_1000860DC();
    sub_1000215BC((uint64_t)v75, type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  }
  v106 = (uint64_t)v359;
  sub_1000BEE48(v415, (uint64_t)v359, v105, v360);
  v107 = sub_10003BC58();
  v108 = v397;
  v109 = (_QWORD *)v91;
  v409 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v404 + 16);
  v110 = v409(v397, v106, v91, v107);
  Elevation.degrees.getter(v110);
  v111 = (uint64_t)v398;
  *v398 = 0;
  *(_QWORD *)(v111 + 8) = 0xE000000000000000;
  v112 = (void (*)(_QWORD))v408[13];
  v387 = enum case for DetailChartDataElement.ValueLabel.text(_:);
  v386 = (void (*)(uint64_t, _QWORD, uint64_t))v112;
  v112(v111);
  v113 = sub_1000E7C04(v108, 0, 1, v111, 0, 0xE000000000000000);
  v114 = 0;
  v420 = _swiftEmptyArrayStorage;
  v421 = _swiftEmptyArrayStorage;
  v419 = _swiftEmptyArrayStorage;
  do
  {
    v115 = v389;
    static Calendar.current.getter(v113);
    Date.wc_addMinutes(_:calendar:)(v114, v115);
    v116 = *(void (**)(uint64_t, uint64_t))(v388 + 8);
    v116(v115, v400);
    v117 = v405;
    v118 = v391;
    sub_1000CDC2C(v405, (uint64_t)v391);
    sub_100088FC8((uint64_t)v118, 1, v413);
    v395 = (void (*)(char *, uint64_t))v116;
    if (v250)
    {
      sub_100021A14((uint64_t)v118, &qword_100BC52D8);
      v119 = 0;
    }
    else
    {
      v119 = *v118;
      swift_bridgeObjectRetain(*v118);
      sub_1000215BC((uint64_t)v118, type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
    }
    v120 = v393;
    v121 = v407;
    sub_1000BEE48(v415, (uint64_t)v417, v119, v410);
    sub_10009895C();
    Elevation.degrees.getter(v122);
    v123 = v392;
    sub_1000CDC2C(v117, v392);
    v124 = v413;
    sub_100088FC8(v123, 1, v413);
    if (v250)
    {
      sub_1000EAF8C();
      v125 = 0;
      v126 = 0;
      v127 = v406;
    }
    else
    {
      v128 = *(_QWORD *)(v123 + *(int *)(v124 + 28));
      swift_bridgeObjectRetain(v128);
      sub_1000215BC(v123, type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
      v127 = v406;
      if (*(_QWORD *)(v128 + 16) && (sub_10016C6BC(), (v130 & 1) != 0))
      {
        v131 = (uint64_t *)(*(_QWORD *)(v128 + 56) + 16 * v129);
        v125 = *v131;
        v126 = v131[1];
        swift_bridgeObjectRetain(v126);
        sub_1000986C4();
      }
      else
      {
        sub_1000986C4();
        v125 = 0;
        v126 = 0;
      }
    }
    sub_1000C1DC0(v127);
    v132 = v403;
    v394 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 16);
    v133 = v394(v121, v415, v403);
    if (v126)
    {
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v121, v132);
      v134 = *(_QWORD **)(v404 + 8);
      v135 = v127;
    }
    else
    {
      v136 = v58;
      v137 = v377;
      Location.timeZone.getter(v133);
      v125 = Date.formattedHours(timeZone:forAccessibility:)(v137, 0);
      v126 = v138;
      v139 = v137;
      v58 = v136;
      v376(v139, v378);
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v407, v132);
      v134 = *(_QWORD **)(v404 + 8);
      v135 = v406;
    }
    v408 = v134;
    ((void (*)(uint64_t, _QWORD *))v134)(v135, v109);
    v140 = v397;
    sub_1000C1DC0(v397);
    v141 = (uint64_t)v398;
    *v398 = 0;
    *(_QWORD *)(v141 + 8) = 0xE000000000000000;
    v386(v141, v387, v399);
    v142 = v411;
    sub_1000E7C04(v140, 0, 1, v141, v125, v126);
    v396 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
    v396(v412, v142, v416);
    v143 = *v414;
    if ((swift_isUniquelyReferenced_nonNull_native(*v414) & 1) == 0)
    {
      sub_100109918();
      sub_1005FECEC();
      v143 = v151;
    }
    v144 = *(_QWORD *)(v143 + 16);
    if (v144 >= *(_QWORD *)(v143 + 24) >> 1)
    {
      sub_1005FECEC();
      v143 = v152;
    }
    *(_QWORD *)(v143 + 16) = v144 + 1;
    v145 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v146 = *(_QWORD *)(v58 + 72);
    v147 = *(void (**)(unint64_t, uint64_t, uint64_t))(v58 + 32);
    v148 = v416;
    v147(v143 + v145 + v146 * v144, v412, v416);
    *v414 = v143;
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v411, v148);
    v149 = *(void (**)(uint64_t, uint64_t))(v390 + 8);
    v149(v410, v402);
    v150 = (void (*)(char *, _QWORD *))v408;
    v113 = ((uint64_t (*)(void (*)(uint64_t, uint64_t, uint64_t), _QWORD *))v408)(v417, v109);
    ++v114;
  }
  while (v114 != 1441);
  v412 = v146;
  v409 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double))v149;
  v410 = v145;
  v417 = (void (*)(uint64_t, uint64_t, uint64_t))v147;
  v153 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000989C4();
  sub_1000BBFBC(0x746E6572727543, 0xE700000000000000, v154, v155, v156, v157, v158, v159);
  sub_1000BD3AC();
  v160 = v365;
  v161 = v415;
  sub_1002D5090(v366, 1441, v148, 1, v365);
  sub_10009895C();
  v162 = v347;
  sub_100037768(v348, v347, &qword_100BD4B78);
  v163 = v356;
  sub_100088FC8(v162, 1, v356);
  if (v250)
  {
    sub_100021A14(v162, &qword_100BD4B78);
    v164 = sub_1000BA294(&qword_100BD4B80);
    v165 = *(unsigned __int8 *)(v374 + 80);
    v166 = (v165 + 32) & ~v165;
    v167 = swift_allocObject(v164, v166 + *(_QWORD *)(v374 + 72), v165 | 7);
    *(_OWORD *)(v167 + 16) = xmmword_10097CA50;
    sub_1002D5D90(v160, v167 + v166);
    v168 = v109;
  }
  else
  {
    v398 = v109;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v352 + 32))(v351, v162, v163);
    v169 = v341;
    sub_1000D16E8();
    SunEvents.civilDawn.getter();
    v170 = sub_1000C6DC0();
    v171 = sub_1000CFC24();
    sub_1000BBFBC(v171 & 0xFFFFFFFFFFFFLL | 0x6144000000000000, v172, v173, v174, v175, v176, v177, v178);
    sub_1000BD3AC();
    v179 = v162;
    v180 = v355;
    sub_1002D4DDC(v169, v179, v148, 0, v355, v161, v361);
    sub_10009895C();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.civilDusk.getter();
    v181 = sub_1000C6DC0();
    v182 = sub_1000CFC24();
    sub_1000BBFBC(v182 & 0xFFFFFFFFFFFFLL | 0x7544000000000000, 0xEA00000000006B73, v183, v184, v185, v186, v187, v188);
    sub_10009F7DC();
    sub_1002D4DDC(v169, v148, 0xD000000000000011, 0, v180, v161, v362);
    sub_100075DF4();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.nauticalDawn.getter();
    v189 = sub_1000D9C94();
    sub_1000D951C();
    v190 = sub_1000CD6C4();
    sub_1000BBFBC(v190, v191 | 0xED00006E77610000, v192, v193, v194, v195, v196, v197);
    sub_10009F7DC();
    sub_1000C3790((uint64_t)&v391);
    sub_100075DF4();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.nauticalDusk.getter();
    v198 = sub_1000D9C94();
    sub_1000D951C();
    v199 = sub_1000CD6C4();
    sub_1000BBFBC(v199, v200 | 0xED00006B73750000, v201, v202, v203, v204, v205, v206);
    sub_10009F7DC();
    sub_1000C3790((uint64_t)&v392);
    sub_100075DF4();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.astronomicalDawn.getter();
    v207 = sub_1000D9C94();
    sub_1000D951C();
    sub_1000989C4();
    sub_1000BBFBC(0xD000000000000011, 0x80000001009F9720, v208, v209, v210, v211, v212, v213);
    sub_10009F7DC();
    sub_1000C3790((uint64_t)&v393);
    sub_100075DF4();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.astronomicalDusk.getter();
    v214 = sub_1000D9C94();
    sub_1000D951C();
    sub_1000989C4();
    sub_1000BBFBC(0xD000000000000011, 0x80000001009F97A0, v215, v216, v217, v218, v219, v220);
    sub_10009F7DC();
    sub_1000C3790((uint64_t)&v394);
    sub_100075DF4();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.sunrise.getter(v221);
    v222 = sub_1000D9C94();
    sub_1000D951C();
    v223 = sub_1000BE788();
    sub_1000BBFBC(v223 | 0x657369726E0000, 0xE700000000000000, v224, v225, v226, v227, v228, v229);
    sub_10009F7DC();
    sub_1000C3790((uint64_t)&v384);
    sub_100075DF4();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.solarNoon.getter();
    v230 = sub_1000D9C94();
    sub_1000D951C();
    sub_1000989C4();
    sub_1000BBFBC(0x6F4E2072616C6F53, v231, v232, v233, v234, v235, v236, v237);
    sub_10009F7DC();
    sub_1000CCAE8(v169, v148, 0xD000000000000011, 1, v357);
    sub_100075DF4();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    sub_1000D16E8();
    SunEvents.sunset.getter(v238);
    v239 = sub_1000D9C94();
    v240._countAndFlagsBits = sub_1000BE788() & 0xFFFF00000000FFFFLL | 0x7465736E0000;
    v240._object = (void *)0xE600000000000000;
    v241._countAndFlagsBits = 0;
    v241._object = (void *)0xE000000000000000;
    v242 = NSLocalizedString(_:tableName:bundle:value:comment:)(v240, (Swift::String_optional)0, (NSBundle)v239, v241, v426);

    sub_1000CCAE8(v169, v242._countAndFlagsBits, (uint64_t)v242._object, 0, v358);
    sub_10009895C();
    sub_100021A14(v169, (uint64_t *)&unk_100BD35A0);
    v243 = sub_1000BA294(&qword_100BCB9C0);
    v244 = *(_QWORD *)(v343 + 72);
    v245 = *(unsigned __int8 *)(v343 + 80);
    v246 = (v245 + 32) & ~v245;
    v411 = v243;
    v247 = swift_allocObject(v243, v246 + 2 * v244, v245 | 7);
    v406 = xmmword_10097DA20;
    *(_OWORD *)(v247 + 16) = xmmword_10097DA20;
    v407 = v247;
    v248 = v247 + v246;
    sub_1000C0D98(v361, &qword_100BD4B70, (uint64_t)&v367);
    v249 = v385;
    v251 = sub_100088FC8((uint64_t)v239, 1, v385);
    if (v250)
    {
      sub_1000B3B00(v251, &qword_100BD4B70);
      v254 = 1;
      v252 = v416;
    }
    else
    {
      v252 = v416;
      v253 = sub_1000C535C(v248, (uint64_t)v239 + *(int *)(v249 + 28));
      sub_100098AD4(v253, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v254 = 0;
    }
    v255 = v344;
    v256 = v342;
    sub_1000D1CFC(v248, v254);
    sub_100037768(v362, v256, &qword_100BD4B70);
    sub_100088FC8(v256, 1, v249);
    if (v250)
    {
      sub_100021A14(v256, &qword_100BD4B70);
      v257 = 1;
    }
    else
    {
      sub_1000C535C(v248 + v244, v256 + *(int *)(v249 + 28));
      sub_1000215BC(v256, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v257 = 0;
    }
    v258 = sub_100110228(v248 + v244, v257);
    *(_OWORD *)(v258 + 16) = v406;
    v399 = v258;
    v259 = v258 + v246;
    sub_10009DA9C(&qword_100BD4B70, (uint64_t)&v391);
    v260 = sub_100088FC8(v255, 1, v249);
    if (v250)
    {
      sub_1000B3B00(v260, &qword_100BD4B70);
      v262 = 1;
    }
    else
    {
      v261 = sub_1000C535C(v259, v255 + *(int *)(v249 + 28));
      sub_100098AD4(v261, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v262 = 0;
    }
    sub_1000D1CFC(v259, v262);
    sub_1000C0D98(v363, &qword_100BD4B70, (uint64_t)&v372);
    v263 = sub_100088FC8(v255, 1, v249);
    if (v250)
    {
      sub_1000B3B00(v263, &qword_100BD4B70);
      v265 = 1;
    }
    else
    {
      v264 = sub_1000C535C(v259 + v244, v255 + *(int *)(v249 + 28));
      sub_100098AD4(v264, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v265 = 0;
    }
    v266 = sub_100110228(v259 + v244, v265);
    *(_OWORD *)(v266 + 16) = v406;
    *(_QWORD *)&v406 = v266;
    v267 = v266 + v246;
    sub_1000C0D98(v364, &qword_100BD4B70, (uint64_t)&v373);
    v268 = sub_100088FC8(v255, 1, v249);
    if (v250)
    {
      sub_1000B3B00(v268, &qword_100BD4B70);
      v270 = 1;
    }
    else
    {
      v269 = sub_1000C535C(v267, v255 + *(int *)(v249 + 28));
      sub_100098AD4(v269, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v270 = 0;
    }
    v271 = v345;
    v272 = v410;
    sub_1000D1CFC(v267, v270);
    sub_10009DA9C(&qword_100BD4B70, (uint64_t)&v394);
    v273 = sub_100088FC8(v271, 1, v249);
    v411 = v267;
    if (v250)
    {
      sub_1000B3B00(v273, &qword_100BD4B70);
      v275 = 1;
    }
    else
    {
      v274 = sub_1000C535C(v267 + v244, v271 + *(int *)(v249 + 28));
      sub_100098AD4(v274, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v275 = 0;
    }
    v276 = v371;
    sub_1000D1CFC(v267 + v244, v275);
    swift_bridgeObjectRetain(v407);
    v277 = 0;
    v278 = 0;
    v279 = (unint64_t)_swiftEmptyArrayStorage;
    do
    {
      v280 = v277;
      v281 = v381;
      sub_1000CDC2C(v248 + v278 * v244, v381);
      sub_1000787D4(v281, v276, &qword_100BCB0A0);
      sub_100088FC8(v276, 1, v252);
      if (v250)
      {
        sub_1000EAF8C();
      }
      else
      {
        v282 = v367;
        v417(v367, v276, v252);
        sub_10009E64C(v379, v282);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v279);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100109918();
          sub_1005FECEC();
          v279 = v286;
        }
        v284 = *(_QWORD *)(v279 + 16);
        v272 = v410;
        v285 = v412;
        if (v284 >= *(_QWORD *)(v279 + 24) >> 1)
        {
          sub_1005FECEC();
          v285 = v412;
          v279 = v287;
        }
        *(_QWORD *)(v279 + 16) = v284 + 1;
        v252 = v416;
        sub_10009E64C(v279 + v272 + v284 * v285, v379);
        v276 = v371;
      }
      v277 = 1;
      v278 = 1;
    }
    while ((v280 & 1) == 0);
    swift_bridgeObjectRelease_n(v407, 2);
    sub_10025E29C(v279);
    swift_bridgeObjectRetain(v399);
    v288 = 0;
    v289 = 0;
    v290 = _swiftEmptyArrayStorage;
    v291 = v372;
    do
    {
      v292 = v288;
      sub_1000CF804(v259 + v289 * v244, (uint64_t)&v410);
      sub_1000787D4(v279, v291, &qword_100BCB0A0);
      sub_100088FC8(v291, 1, v252);
      if (v250)
      {
        sub_100021A14(v291, &qword_100BCB0A0);
      }
      else
      {
        v293 = v368;
        v417(v368, v291, v252);
        sub_10009E64C(v380, v293);
        v294 = swift_isUniquelyReferenced_nonNull_native(v290);
        if ((v294 & 1) == 0)
        {
          sub_100109918();
          sub_1005FECEC();
          v290 = v297;
        }
        v295 = v290[2];
        v279 = v295 + 1;
        v296 = v412;
        if (v295 >= v290[3] >> 1)
        {
          sub_1005FECEC();
          v296 = v412;
          v290 = v298;
        }
        v290[2] = v279;
        sub_10009E64C((uint64_t)v290 + v272 + v295 * v296, v380);
        v291 = v372;
      }
      v288 = 1;
      v289 = 1;
    }
    while ((v292 & 1) == 0);
    swift_bridgeObjectRelease_n(v399, 2);
    sub_10025E29C((uint64_t)v290);
    swift_bridgeObjectRetain(v406);
    v299 = 0;
    v300 = 0;
    v301 = _swiftEmptyArrayStorage;
    v302 = v375;
    v303 = v373;
    do
    {
      v304 = v299;
      sub_1000CF804(v411 + v300 * v244, (uint64_t)&v411);
      sub_1000787D4(v279, v303, &qword_100BCB0A0);
      sub_100088FC8(v303, 1, v252);
      if (v250)
      {
        sub_100021A14(v303, &qword_100BCB0A0);
      }
      else
      {
        v305 = v369;
        sub_10009E64C(v369, v303);
        sub_10009E64C(v382, v305);
        v306 = swift_isUniquelyReferenced_nonNull_native(v301);
        if ((v306 & 1) == 0)
        {
          sub_1000E7704();
          sub_1005FECEC();
          v301 = v309;
        }
        v279 = v301[2];
        v307 = v301[3];
        v308 = v412;
        if (v279 >= v307 >> 1)
        {
          sub_1000C6A3C(v307);
          sub_1005FECEC();
          v308 = v412;
          v301 = v310;
        }
        v301[2] = v279 + 1;
        sub_10009E64C((uint64_t)v301 + v272 + v279 * v308, v382);
        v303 = v373;
      }
      v299 = 1;
      v300 = 1;
    }
    while ((v304 & 1) == 0);
    v311 = v406;
    sub_1000986C4();
    swift_setDeallocating(v311);
    sub_100500488();
    sub_10025E29C((uint64_t)v301);
    v312 = sub_1000BA294(&qword_100BD4B88);
    v313 = *(_QWORD *)(v346 + 72);
    v314 = *(unsigned __int8 *)(v346 + 80);
    v315 = (v314 + 32) & ~v314;
    v316 = 10;
    v317 = swift_allocObject(v312, v315 + 10 * v313, v314 | 7);
    *(_OWORD *)(v317 + 16) = xmmword_10097FA60;
    v318 = v317 + v315;
    sub_100037768(v364, v318, &qword_100BD4B70);
    sub_1000E6F74(v318 + v313, (uint64_t)&v391);
    sub_1000E6F74(v318 + 2 * v313, (uint64_t)&v389);
    sub_1000E6F74(v318 + 3 * v313, (uint64_t)&v384);
    sub_1002D5D90(v365, v318 + 4 * v313);
    _s7Weather24LocationCompositionStateOwst_0(v318 + 4 * v313, 0, 1, v385);
    sub_1000E6F74(v318 + 5 * v313, (uint64_t)&v385);
    sub_1000E6F74(v318 + 6 * v313, (uint64_t)&v386);
    sub_1000E6F74(v318 + 7 * v313, (uint64_t)&v390);
    sub_1000E6F74(v318 + 8 * v313, (uint64_t)&v392);
    sub_1000E6F74(v318 + 9 * v313, (uint64_t)&v394);
    v319 = _swiftEmptyArrayStorage;
    v168 = v398;
    v150 = (void (*)(char *, _QWORD *))v408;
    do
    {
      v320 = v384;
      sub_100037768(v318, v384, &qword_100BD4B70);
      sub_1000787D4(v320, v302, &qword_100BD4B70);
      sub_100088FC8(v302, 1, v385);
      if (v250)
      {
        sub_100021A14(v302, &qword_100BD4B70);
      }
      else
      {
        v321 = v370;
        sub_1002D5DD4(v302, v370);
        sub_1002D5DD4(v321, v383);
        v322 = swift_isUniquelyReferenced_nonNull_native(v319);
        if ((v322 & 1) == 0)
        {
          sub_1000E7704();
          sub_1005FF188();
          v319 = v325;
        }
        v324 = v319[2];
        v323 = v319[3];
        if (v324 >= v323 >> 1)
        {
          sub_1000C6A3C(v323);
          sub_1005FF188();
          v319 = v326;
        }
        v319[2] = v324 + 1;
        sub_1002D5DD4(v383, (uint64_t)v319+ ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80))+ *(_QWORD *)(v374 + 72) * v324);
        v302 = v375;
      }
      v318 += v313;
      --v316;
    }
    while (v316);
    swift_setDeallocating(v317);
    sub_1005004AC();
    v418 = v319;
    swift_bridgeObjectRetain(v319);
    sub_1002D29F4(&v418);
    sub_10009895C();
    v167 = (uint64_t)v418;
    sub_1000C5C00((uint64_t)&v386);
    sub_1000C5C00((uint64_t)&v385);
    sub_1000C5C00((uint64_t)&v384);
    sub_1000C5C00((uint64_t)&v394);
    sub_1000C5C00((uint64_t)&v393);
    sub_1000C5C00((uint64_t)&v392);
    sub_1000C5C00((uint64_t)&v391);
    sub_1000C5C00((uint64_t)&v390);
    sub_1000C5C00((uint64_t)&v389);
    (*(void (**)(uint64_t, uint64_t))(v352 + 8))(v351, v356);
    v160 = v365;
    v161 = v415;
  }
  v327 = v350;
  sub_100037768(v405, (uint64_t)v350, &qword_100BC52D8);
  sub_100088FC8((uint64_t)v327, 1, v413);
  if (v250)
  {
    sub_100021A14((uint64_t)v327, &qword_100BC52D8);
    v328 = 0;
  }
  else
  {
    v328 = *v327;
    sub_1000860DC();
    sub_1000215BC((uint64_t)v327, type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  }
  v329 = sub_1002D544C(v161, v353, v328);
  v331 = v330;
  sub_10003BC58();
  sub_1000215BC(v160, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
  ((void (*)(uint64_t, uint64_t))v409)(v360, v402);
  v395(v349, v400);
  v150(v359, v168);
  swift_beginAccess(v414, &v418, 0, 0);
  v332 = v355;
  v333 = *(_QWORD *)(v355 + 16);
  v334 = (int *)_s14ChartViewModelVMa(0);
  v335 = v161;
  v336 = v354;
  v394((uint64_t)&v354[v334[6]], v335, v403);
  v338 = v420;
  v337 = v421;
  v339 = v419;
  *(_QWORD *)v336 = v333;
  v417((uint64_t)&v336[v334[5]], v366, v416);
  v340 = (uint64_t *)&v336[v334[7]];
  *v340 = v329;
  v340[1] = v331;
  *(_QWORD *)&v336[v334[8]] = v337;
  *(_QWORD *)&v336[v334[9]] = v338;
  *(_QWORD *)&v336[v334[10]] = v339;
  (*(void (**)(char *, char *, _QWORD *))(v404 + 32))(&v336[v334[11]], v401, v168);
  sub_1000860DC();
  swift_release(v332);
  *(_QWORD *)&v336[v334[12]] = v167;
}

uint64_t sub_1002D49B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_1000BA294(&qword_100BC3370);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v54 = v11;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v61 = v13;
  v62 = type metadata accessor for Date(0);
  v53 = *(_QWORD *)(v62 - 8);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v52 = v15;
  v16 = type metadata accessor for DateComponents(0);
  v59 = *(_QWORD *)(v16 - 8);
  v60 = v16;
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_100088FDC();
  v63 = v18;
  v19 = type metadata accessor for TimeZone(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = sub_1000C1478();
  v57 = *(_QWORD *)(v21 - 8);
  v58 = v21;
  sub_10009D98C();
  __chkstk_darwin(v22);
  v23 = type metadata accessor for Elevation(0);
  v24 = __chkstk_darwin(v23);
  v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    sub_1000DB418((_QWORD *)(v4 + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory_sunElevationCalculator), *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory_sunElevationCalculator + 24));
    return sub_10087BDA8(a1, a2, a4);
  }
  v49 = v25;
  v50 = v4;
  v51 = v24;
  v55 = a4;
  v56 = a1;
  if (*(_QWORD *)(a3 + 16))
  {
    sub_10016C6BC();
    if ((v28 & 1) != 0)
    {
      v29 = v49;
      v30 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v27, *(_QWORD *)(a3 + 56) + *(_QWORD *)(v49 + 72) * v24, v51);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v55, v27, v30);
    }
  }
  Location.timeZone.getter(v24);
  static Calendar.currentCalendar(with:)(v5);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v5, v19);
  v32 = sub_1000BA294(&qword_100BC4E50);
  v33 = *(_QWORD *)(type metadata accessor for Calendar.Component(0) - 8);
  v34 = *(_QWORD *)(v33 + 72);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = swift_allocObject(v32, v36 + 5 * v34, v35 | 7);
  *(_OWORD *)(v37 + 16) = xmmword_1009891E0;
  v38 = v37 + v36;
  sub_1000D00C4(v38, enum case for Calendar.Component.year(_:));
  sub_1000D00C4(v38 + v34, enum case for Calendar.Component.day(_:));
  sub_1000D00C4(v38 + 2 * v34, enum case for Calendar.Component.month(_:));
  sub_1000D00C4(v38 + 3 * v34, enum case for Calendar.Component.hour(_:));
  sub_1000D00C4(v38 + 4 * v34, enum case for Calendar.Component.minute(_:));
  sub_1000A8278(v37);
  v39 = v63;
  Calendar.dateComponents(_:from:)();
  v40 = sub_10003BC58();
  v41 = v61;
  Calendar.date(from:)(v39, v40);
  v42 = v62;
  sub_100088FC8(v41, 1, v62);
  if (v47)
  {
    sub_100021A14(v41, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    v44 = v52;
    v43 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v52, v41, v42);
    v45 = v54;
    sub_1007D4CC4();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
    v46 = v51;
    sub_100088FC8(v45, 1, v51);
    if (!v47)
    {
      sub_1000D0C78();
      sub_1000999E8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v55, v45, v46);
    }
    sub_100021A14(v45, &qword_100BC3370);
  }
  sub_1000DB418((_QWORD *)(v50 + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory_sunElevationCalculator), *(_QWORD *)(v50 + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory_sunElevationCalculator + 24));
  sub_10087BDA8(v56, a2, v55);
  sub_1000D0C78();
  return sub_1000999E8();
}

uint64_t sub_1002D4DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v34 = a3;
  v35 = a6;
  v32 = a4;
  v33 = a2;
  v36 = a7;
  v9 = sub_1000BA294(&qword_100BCB0A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DetailChartDataElement(0);
  v31 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100037768(a1, (uint64_t)v17, (uint64_t *)&unk_100BD35A0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18) == 1)
  {
    v22 = (uint64_t *)&unk_100BD35A0;
    v23 = (uint64_t)v17;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    v24 = swift_beginAccess(a5 + 16, v37, 0, 0);
    v25 = *(_QWORD *)(a5 + 16);
    __chkstk_darwin(v24);
    *(&v31 - 2) = (uint64_t)v21;
    swift_bridgeObjectRetain(v25);
    sub_10084B38C();
    swift_bridgeObjectRelease(v25);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12) != 1)
    {
      v28 = v31;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v14, v11, v12);
      v27 = v36;
      sub_1002D5090((uint64_t)v14, v33, v34, v32 & 1, v36);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      v26 = 0;
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v22 = &qword_100BCB0A0;
    v23 = (uint64_t)v11;
  }
  sub_100021A14(v23, v22);
  v26 = 1;
  v27 = v36;
LABEL_7:
  v29 = _s14ChartViewModelV26SunEventAccessibilityModelVMa(0);
  return _s7Weather24LocationCompositionStateOwst_0(v27, v26, 1, v29);
}

uint64_t sub_1002D5090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;

  v57 = a4;
  v56 = a2;
  v59 = a5;
  v7 = type metadata accessor for TimeZone(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = DetailChartDataElement.date.getter(v13);
  Location.timeZone.getter(v16);
  v58 = Date.formattedTime(timeZone:)(v10);
  v60 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v62._countAndFlagsBits = 0xD000000000000084;
  v62._object = (void *)0x80000001009F98E0;
  v19._object = (void *)0x80000001009F98B0;
  v19._countAndFlagsBits = 0xD000000000000028;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v62);

  v22 = sub_1000BA294(&qword_100BC3C38);
  v23 = swift_allocObject(v22, 72, 7);
  *(_OWORD *)(v23 + 16) = xmmword_10097CA50;
  v24 = DetailChartDataElement.value.getter();
  *(_QWORD *)(v23 + 56) = &type metadata for Double;
  *(_QWORD *)(v23 + 64) = &protocol witness table for Double;
  *(double *)(v23 + 32) = v24;
  v25 = static String.localizedStringWithFormat(_:_:)(v21._countAndFlagsBits, v21._object, v23);
  v27 = v26;
  swift_bridgeObjectRelease(v21._object);
  swift_bridgeObjectRelease(v23);
  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    sub_1000B2E08();
    v29 = v28;
    v30 = *(_QWORD *)(v28 + 16);
    v31 = v30 + 1;
    if (v30 >= *(_QWORD *)(v28 + 24) >> 1)
    {
      sub_1000B2E08();
      v29 = v53;
    }
    v33 = v58;
    v32 = v59;
    v34 = v57;
    v35 = v56;
    *(_QWORD *)(v29 + 16) = v31;
    v36 = v29 + 16 * v30;
    *(_QWORD *)(v36 + 32) = v35;
    *(_QWORD *)(v36 + 40) = a3;
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease(v27);
      goto LABEL_13;
    }
    if (v31 >= *(_QWORD *)(v29 + 24) >> 1)
    {
      sub_1000B2E08();
      v29 = v55;
    }
    *(_QWORD *)(v29 + 16) = v30 + 2;
    v37 = v29 + 16 * v31;
  }
  else
  {
    sub_1000B2E08();
    v29 = v38;
    v39 = *(_QWORD *)(v38 + 16);
    if (v39 >= *(_QWORD *)(v38 + 24) >> 1)
    {
      sub_1000B2E08();
      v29 = v54;
    }
    v33 = v58;
    v32 = v59;
    *(_QWORD *)(v29 + 16) = v39 + 1;
    v37 = v29 + 16 * v39;
  }
  *(_QWORD *)(v37 + 32) = v25;
  *(_QWORD *)(v37 + 40) = v27;
LABEL_13:
  v61 = v29;
  v40 = sub_1000BA294(&qword_100BF1280);
  v41 = sub_1000B2E60();
  v42 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v40, v41);
  v44 = v43;
  swift_bridgeObjectRelease(v29);
  DetailChartDataElement.date.getter(v45);
  v46 = (int *)_s14ChartViewModelV26SunEventAccessibilityModelVMa(0);
  v47 = v32 + v46[7];
  v48 = type metadata accessor for DetailChartDataElement(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v47, a1, v48);
  v50 = (uint64_t *)(v32 + v46[5]);
  v51 = v60;
  *v50 = v33;
  v50[1] = v51;
  v52 = (uint64_t *)(v32 + v46[6]);
  *v52 = v42;
  v52[1] = v44;
  return result;
}

uint64_t sub_1002D544C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  double v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __n128 v51;
  int v52;
  __n128 v53;
  BOOL v54;
  __n128 v56;
  BOOL v59;
  BOOL v60;
  BOOL v61;
  BOOL v62;
  BOOL v63;
  BOOL v64;
  BOOL v65;
  BOOL v66;
  BOOL v68;
  BOOL v78;
  _QWORD v79[2];
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;

  v4 = v3;
  v91 = a1;
  v92 = a3;
  v5 = type metadata accessor for SkyBackgroundGradient(0);
  v95 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v94 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CloudAltitudeKind(0);
  __chkstk_darwin(v7);
  v93 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WeatherConditionGradientModel.PresentationContext(0);
  v87 = *(_QWORD *)(v9 - 8);
  v88 = v9;
  __chkstk_darwin(v9);
  v90 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Elevation(0);
  __chkstk_darwin(v14);
  v16 = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for WeatherCondition(0);
  v81 = *(_QWORD *)(v17 - 8);
  v82 = v17;
  v18 = __chkstk_darwin(v17);
  v80 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)v79 - v20;
  v22 = type metadata accessor for WeatherConditionGradientModel(0);
  v83 = *(_QWORD *)(v22 - 8);
  v84 = v22;
  __chkstk_darwin(v22);
  v89 = (char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for WeatherConditionGradientModel.AnimationContext(0);
  v97 = *(_QWORD *)(v28 - 8);
  v98 = v28;
  __chkstk_darwin(v28);
  v96 = (char *)v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D2A74((uint64_t)v27);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v27, v24);
  if (v30 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:))
  {
    v31 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, enum case for WeatherConditionGradientModel.AnimationContext.vfx(_:), v98);
  }
  else
  {
    v32 = v30;
    v79[1] = v4;
    v33 = v13;
    v34 = enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:);
    v31 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, enum case for WeatherConditionGradientModel.AnimationContext.mica(_:), v98);
    v54 = v32 == v34;
    v13 = v33;
    if (!v54)
      v31 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  }
  v35 = CurrentWeather.condition.getter(v31);
  CurrentWeather.date.getter(v35);
  sub_1002D49B0(v91, (uint64_t)v13, v92, (uint64_t)v16);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v13, v86);
  v37 = CurrentWeather.isDaylight.getter(v36);
  v38 = v90;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v90, v96, v98);
  v39 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v87 + 104))(v38, enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:), v88);
  v40 = CurrentWeather.cloudCover.getter(v39);
  v41 = v93;
  CurrentWeather.predominateCloudAltitudeKind.getter();
  v42 = v89;
  WeatherConditionGradientModel.init(conditionKind:elevation:isDaylight:presentation:cloudCover:cloudKind:)(v21, v16, v37 & 1, v38, v41, v40);
  v43 = type metadata accessor for WeatherConditionGradientManager(0);
  swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  v44 = WeatherConditionGradientManager.init()();
  v45 = v94;
  v46 = WeatherConditionGradientManager.load(for:)(v42);
  v47 = SkyBackgroundGradient.gradient()(v46);
  v48 = (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v45, v5);
  v49 = CurrentWeather.isDaylight.getter(v48);
  if ((v49 & 1) != 0)
  {
    v50 = v80;
    CurrentWeather.condition.getter(v49);
    v51 = swift_release(v44);
    (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v42, v84, v51);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
    v52 = (*(uint64_t (**)(char *, uint64_t))(v81 + 88))(v50, v82);
    v54 = v52 == enum case for WeatherCondition.blizzard(_:) || v52 == enum case for WeatherCondition.blowingDust(_:);
    if (!v54 && v52 != enum case for WeatherCondition.blowingSnow(_:))
    {
      v53.n128_u64[0] = 0.5;
      if (v52 != enum case for WeatherCondition.breezy(_:) && v52 != enum case for WeatherCondition.clear(_:))
      {
        v59 = v52 == enum case for WeatherCondition.cloudy(_:) || v52 == enum case for WeatherCondition.drizzle(_:);
        v60 = v59 || v52 == enum case for WeatherCondition.flurries(_:);
        v61 = v60 || v52 == enum case for WeatherCondition.foggy(_:);
        v62 = v61 || v52 == enum case for WeatherCondition.freezingDrizzle(_:);
        v63 = v62 || v52 == enum case for WeatherCondition.freezingRain(_:);
        if (!v63 && v52 != enum case for WeatherCondition.frigid(_:))
        {
          v64 = v52 == enum case for WeatherCondition.hail(_:) || v52 == enum case for WeatherCondition.haze(_:);
          v65 = v64 || v52 == enum case for WeatherCondition.heavyRain(_:);
          v66 = v65 || v52 == enum case for WeatherCondition.heavySnow(_:);
          if (!v66
            && v52 != enum case for WeatherCondition.hot(_:)
            && v52 != enum case for WeatherCondition.hurricane(_:)
            && v52 != enum case for WeatherCondition.isolatedThunderstorms(_:))
          {
            v68 = v52 == enum case for WeatherCondition.mostlyClear(_:)
               || v52 == enum case for WeatherCondition.mostlyCloudy(_:);
            if (!v68 && v52 != enum case for WeatherCondition.partlyCloudy(_:))
            {
              v78 = v52 == enum case for WeatherCondition.rain(_:)
                 || v52 == enum case for WeatherCondition.scatteredThunderstorms(_:)
                 || v52 == enum case for WeatherCondition.sleet(_:)
                 || v52 == enum case for WeatherCondition.smoky(_:)
                 || v52 == enum case for WeatherCondition.snow(_:)
                 || v52 == enum case for WeatherCondition.strongStorms(_:)
                 || v52 == enum case for WeatherCondition.sunFlurries(_:)
                 || v52 == enum case for WeatherCondition.sunShowers(_:)
                 || v52 == enum case for WeatherCondition.thunderstorms(_:)
                 || v52 == enum case for WeatherCondition.tropicalStorm(_:);
              if (!v78
                && v52 != enum case for WeatherCondition.windy(_:)
                && v52 != enum case for WeatherCondition.wintryMix(_:))
              {
                (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v80, v82, v53);
              }
            }
          }
        }
      }
    }
  }
  else
  {
    v56 = swift_release(v44);
    (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v42, v84, v56);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
  }
  return v47;
}

BOOL sub_1002D5B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v15;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailChartDataElement.date.getter(v6);
  v9 = Date.distance(to:)(a3);
  v10 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v11 = v10(v8, v4);
  v12 = fabs(v9);
  DetailChartDataElement.date.getter(v11);
  v13 = Date.distance(to:)(a3);
  v10(v8, v4);
  return v12 < fabs(v13);
}

uint64_t sub_1002D5C70()
{
  uint64_t v0;

  sub_100021A14(v0 + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory____lazy_storage___listAnimationKind, &qword_100BD4B90);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0
                                                           + OBJC_IVAR____TtC7Weather40SunriseSunsetDetailChartViewModelFactory_sunElevationCalculator));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002D5CB8()
{
  return type metadata accessor for SunriseSunsetDetailChartViewModelFactory(0);
}

uint64_t type metadata accessor for SunriseSunsetDetailChartViewModelFactory(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD4AD8;
  if (!qword_100BD4AD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SunriseSunsetDetailChartViewModelFactory);
  return result;
}

void sub_1002D5CF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_10015A460(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "(";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_1002D5D6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D5D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14ChartViewModelV26SunEventAccessibilityModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D5DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14ChartViewModelV26SunEventAccessibilityModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002D5E18(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  char *v18;
  Swift::Int v19;
  Swift::Int v20;
  Swift::Int v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  Swift::Int v35;
  Swift::Int v36;
  uint64_t v37;
  uint64_t v38;
  Swift::Int v39;
  uint64_t v40;
  Swift::Int v41;
  Swift::Int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::Int v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  Swift::Int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  Swift::Int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  Swift::Int v132;
  uint64_t v133;
  Swift::Int v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  Swift::Int v142;
  uint64_t v143;
  Swift::Int v144;

  v2 = v1;
  v137 = _s14ChartViewModelV26SunEventAccessibilityModelVMa(0);
  v4 = *(_QWORD *)(v137 - 8);
  v5 = __chkstk_darwin(v137);
  v133 = (uint64_t)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v143 = (uint64_t)&v126 - v8;
  v9 = __chkstk_darwin(v7);
  v140 = (uint64_t)&v126 - v10;
  __chkstk_darwin(v9);
  v139 = (uint64_t)&v126 - v11;
  v12 = *((_QWORD *)a1 + 1);
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_1002D6720(0, v12, 1, a1);
      return;
    }
    goto LABEL_141;
  }
  v14 = v13;
  sub_10087B708(v12 / 2);
  v129 = v15;
  v130 = v12;
  v135 = v16;
  v136 = v4;
  if (v12 <= 0)
  {
LABEL_105:
    v18 = (char *)_swiftEmptyArrayStorage;
    v68 = _swiftEmptyArrayStorage[2];
LABEL_106:
    if (v68 < 2)
    {
LABEL_117:
      swift_bridgeObjectRelease(v18);
      if (v130 >= -1)
        goto LABEL_118;
      goto LABEL_145;
    }
    v119 = *(_QWORD *)a1;
    while (1)
    {
      v120 = v68 - 2;
      if (v68 < 2)
        break;
      if (!v119)
        goto LABEL_149;
      v114 = v18;
      v121 = *(_QWORD *)&v18[16 * v120 + 32];
      v122 = *(_QWORD *)&v18[16 * v68 + 24];
      sub_1002D692C(v119 + *(_QWORD *)(v136 + 72) * v121, v119 + *(_QWORD *)(v136 + 72) * *(_QWORD *)&v18[16 * v68 + 16], v119 + *(_QWORD *)(v136 + 72) * v122, v135);
      if (v2)
        goto LABEL_103;
      if (v122 < v121)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        v114 = sub_10021A488();
      if (v120 >= *((_QWORD *)v114 + 2))
        goto LABEL_137;
      v123 = &v114[16 * v120 + 32];
      *(_QWORD *)v123 = v121;
      *((_QWORD *)v123 + 1) = v122;
      v124 = *((_QWORD *)v114 + 2);
      if (v68 > v124)
        goto LABEL_138;
      memmove(&v114[16 * v68 + 16], &v114[16 * v68 + 32], 16 * (v124 - v68));
      *((_QWORD *)v114 + 2) = v124 - 1;
      v68 = v124 - 1;
      v18 = v114;
      if (v124 <= 2)
        goto LABEL_117;
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    return;
  }
  v128 = v14;
  v17 = 0;
  v18 = (char *)_swiftEmptyArrayStorage;
  v19 = v12;
  v141 = a1;
  while (1)
  {
    v20 = v17;
    v21 = v17 + 1;
    v134 = v17;
    if (v17 + 1 >= v19)
    {
      v35 = v17 + 1;
    }
    else
    {
      v131 = v2;
      v22 = *(_QWORD *)a1;
      v23 = *(_QWORD *)(v4 + 72);
      v24 = v139;
      sub_1002D5D90(*(_QWORD *)a1 + v23 * v21, v139);
      v25 = v22 + v23 * v20;
      v26 = v140;
      sub_1002D5D90(v25, v140);
      v27 = static Date.< infix(_:_:)(v24, v26);
      sub_1000215BC(v26, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v20 = v134;
      sub_1000215BC(v24, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      v138 = v22;
      v144 = v23;
      v142 = v20 + 2;
      if (v20 + 2 >= v19)
      {
        v4 = v136;
      }
      else
      {
        v28 = v23 * v21;
        v29 = v22;
        v30 = v23 * (v20 + 2);
        while (1)
        {
          v31 = v19;
          v32 = v139;
          sub_1002D5D90(v29 + v30, v139);
          v33 = v140;
          sub_1002D5D90(v29 + v28, v140);
          v34 = static Date.< infix(_:_:)(v32, v33);
          sub_1000215BC(v33, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
          sub_1000215BC(v32, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
          if (((v27 ^ v34) & 1) != 0)
            break;
          v29 += v144;
          ++v142;
          v19 = v31;
          if (v142 >= v31)
          {
            v142 = v31;
            v4 = v136;
            a1 = v141;
            v20 = v134;
            goto LABEL_13;
          }
        }
        v4 = v136;
        a1 = v141;
        v20 = v134;
        v19 = v31;
      }
LABEL_13:
      v2 = v131;
      if ((v27 & 1) != 0)
      {
        v35 = v142;
        if (v142 < v20)
          goto LABEL_142;
        if (v20 < v142)
        {
          v132 = v19;
          v36 = v20;
          v127 = v18;
          v37 = v131;
          v38 = 0;
          v39 = v144;
          v40 = v144 * (v142 - 1);
          v41 = v142 * v144;
          v42 = v36;
          v43 = v36 * v144;
          do
          {
            if (v42 != v35 + v38 - 1)
            {
              v44 = v138;
              if (!v138)
                goto LABEL_148;
              v45 = v138 + v43;
              v46 = v138 + v40;
              sub_1002D5DD4(v138 + v43, v133);
              if (v43 < v40 || v45 >= v44 + v41)
              {
                swift_arrayInitWithTakeFrontToBack(v44 + v43, v44 + v40, 1, v137);
                v39 = v144;
              }
              else
              {
                v39 = v144;
                if (v43 != v40)
                  swift_arrayInitWithTakeBackToFront(v45, v46, 1, v137);
              }
              sub_1002D5DD4(v133, v46);
              a1 = v141;
              v35 = v142;
            }
            ++v42;
            --v38;
            v40 -= v39;
            v41 -= v39;
            v43 += v39;
          }
          while (v42 < v35 + v38);
          v2 = v37;
          v4 = v136;
          v18 = v127;
          v20 = v134;
          v19 = v132;
        }
      }
      else
      {
        v35 = v142;
      }
    }
    if (v35 < v19)
    {
      if (__OFSUB__(v35, v20))
        goto LABEL_140;
      if (v35 - v20 < v128)
      {
        if (__OFADD__(v20, v128))
          goto LABEL_143;
        if (v20 + v128 >= v19)
          v48 = v19;
        else
          v48 = v20 + v128;
        if (v48 < v20)
          goto LABEL_144;
        if (v35 != v48)
        {
          v127 = v18;
          v131 = v2;
          v132 = v48;
          v49 = *(_QWORD *)(v4 + 72);
          v50 = v49 * (v35 - 1);
          v138 = v49;
          v51 = v35 * v49;
          do
          {
            v52 = 0;
            v142 = v35;
            while (1)
            {
              v144 = v20;
              v53 = *(_QWORD *)a1;
              v54 = v51;
              v55 = v51 + v52 + *(_QWORD *)a1;
              v56 = a1;
              v57 = v139;
              sub_1002D5D90(v55, v139);
              v58 = v50;
              v59 = v50 + v52 + v53;
              v60 = v140;
              sub_1002D5D90(v59, v140);
              LOBYTE(v53) = static Date.< infix(_:_:)(v57, v60);
              sub_1000215BC(v60, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
              sub_1000215BC(v57, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
              if ((v53 & 1) == 0)
                break;
              v61 = *(_QWORD *)v56;
              if (!*(_QWORD *)v56)
                goto LABEL_146;
              v51 = v54;
              v62 = v61 + v54 + v52;
              v50 = v58;
              v63 = v61 + v58 + v52;
              sub_1002D5DD4(v62, v143);
              swift_arrayInitWithTakeFrontToBack(v62, v63, 1, v137);
              sub_1002D5DD4(v143, v63);
              v52 -= v138;
              v20 = v144 + 1;
              a1 = v141;
              v64 = v142;
              if (v142 == v144 + 1)
                goto LABEL_47;
            }
            v64 = v142;
            a1 = v56;
            v50 = v58;
            v51 = v54;
LABEL_47:
            v35 = v64 + 1;
            v50 += v138;
            v51 += v138;
            v20 = v134;
          }
          while (v35 != v132);
          v35 = v132;
          v2 = v131;
          v18 = v127;
        }
      }
    }
    if (v35 < v20)
      goto LABEL_139;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
    v142 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_10021A398(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v67 = *((_QWORD *)v18 + 2);
    v66 = *((_QWORD *)v18 + 3);
    v68 = v67 + 1;
    if (v67 >= v66 >> 1)
      v18 = sub_10021A398((char *)(v66 > 1), v67 + 1, 1, v18);
    v69 = v2;
    *((_QWORD *)v18 + 2) = v68;
    v70 = v18 + 32;
    v71 = &v18[16 * v67 + 32];
    v72 = v142;
    *(_QWORD *)v71 = v20;
    *((_QWORD *)v71 + 1) = v72;
    if (v67)
      break;
    v68 = 1;
LABEL_97:
    v19 = *((_QWORD *)a1 + 1);
    v17 = v142;
    v2 = v69;
    v4 = v136;
    if (v142 >= v19)
      goto LABEL_106;
  }
  while (1)
  {
    v73 = v68 - 1;
    if (v68 >= 4)
    {
      v78 = &v70[16 * v68];
      v79 = *((_QWORD *)v78 - 8);
      v80 = *((_QWORD *)v78 - 7);
      v84 = __OFSUB__(v80, v79);
      v81 = v80 - v79;
      if (v84)
        goto LABEL_124;
      v83 = *((_QWORD *)v78 - 6);
      v82 = *((_QWORD *)v78 - 5);
      v84 = __OFSUB__(v82, v83);
      v76 = v82 - v83;
      v77 = v84;
      if (v84)
        goto LABEL_125;
      v85 = v68 - 2;
      v86 = &v70[16 * v68 - 32];
      v88 = *(_QWORD *)v86;
      v87 = *((_QWORD *)v86 + 1);
      v84 = __OFSUB__(v87, v88);
      v89 = v87 - v88;
      if (v84)
        goto LABEL_126;
      v84 = __OFADD__(v76, v89);
      v90 = v76 + v89;
      if (v84)
        goto LABEL_128;
      if (v90 >= v81)
      {
        v108 = &v70[16 * v73];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v84 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v84)
          goto LABEL_134;
        v101 = v76 < v111;
        goto LABEL_86;
      }
    }
    else
    {
      if (v68 != 3)
      {
        v102 = *((_QWORD *)v18 + 4);
        v103 = *((_QWORD *)v18 + 5);
        v84 = __OFSUB__(v103, v102);
        v95 = v103 - v102;
        v96 = v84;
        goto LABEL_80;
      }
      v75 = *((_QWORD *)v18 + 4);
      v74 = *((_QWORD *)v18 + 5);
      v84 = __OFSUB__(v74, v75);
      v76 = v74 - v75;
      v77 = v84;
    }
    if ((v77 & 1) != 0)
      goto LABEL_127;
    v85 = v68 - 2;
    v91 = &v70[16 * v68 - 32];
    v93 = *(_QWORD *)v91;
    v92 = *((_QWORD *)v91 + 1);
    v94 = __OFSUB__(v92, v93);
    v95 = v92 - v93;
    v96 = v94;
    if (v94)
      goto LABEL_129;
    v97 = &v70[16 * v73];
    v99 = *(_QWORD *)v97;
    v98 = *((_QWORD *)v97 + 1);
    v84 = __OFSUB__(v98, v99);
    v100 = v98 - v99;
    if (v84)
      goto LABEL_131;
    if (__OFADD__(v95, v100))
      goto LABEL_133;
    if (v95 + v100 >= v76)
    {
      v101 = v76 < v100;
LABEL_86:
      if (v101)
        v73 = v85;
      goto LABEL_88;
    }
LABEL_80:
    if ((v96 & 1) != 0)
      goto LABEL_130;
    v104 = &v70[16 * v73];
    v106 = *(_QWORD *)v104;
    v105 = *((_QWORD *)v104 + 1);
    v84 = __OFSUB__(v105, v106);
    v107 = v105 - v106;
    if (v84)
      goto LABEL_132;
    if (v107 < v95)
      goto LABEL_97;
LABEL_88:
    v112 = v73 - 1;
    if (v73 - 1 >= v68)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    v113 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_147;
    v114 = v18;
    v115 = &v70[16 * v112];
    v116 = *(_QWORD *)v115;
    a1 = &v70[16 * v73];
    v117 = *((_QWORD *)a1 + 1);
    sub_1002D692C(v113 + *(_QWORD *)(v136 + 72) * *(_QWORD *)v115, v113 + *(_QWORD *)(v136 + 72) * *(_QWORD *)a1, v113 + *(_QWORD *)(v136 + 72) * v117, v135);
    if (v69)
      break;
    if (v117 < v116)
      goto LABEL_121;
    if (v73 > *((_QWORD *)v114 + 2))
      goto LABEL_122;
    *(_QWORD *)v115 = v116;
    *(_QWORD *)&v70[16 * v112 + 8] = v117;
    v118 = *((_QWORD *)v114 + 2);
    if (v73 >= v118)
      goto LABEL_123;
    v18 = v114;
    v68 = v118 - 1;
    memmove(&v70[16 * v73], a1 + 16, 16 * (v118 - 1 - v73));
    *((_QWORD *)v114 + 2) = v118 - 1;
    a1 = v141;
    if (v118 <= 2)
      goto LABEL_97;
  }
  v2 = v69;
LABEL_103:
  swift_bridgeObjectRelease(v114);
  if (v130 < -1)
  {
    __break(1u);
    goto LABEL_105;
  }
LABEL_118:
  v125 = v129;
  *(_QWORD *)(v129 + 16) = 0;
  swift_bridgeObjectRelease(v125);
}

void sub_1002D6720(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v25 = a1;
  v26 = _s14ChartViewModelV26SunEventAccessibilityModelVMa(0);
  v7 = __chkstk_darwin(v26);
  v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  __chkstk_darwin(v9);
  v14 = (char *)&v23 - v13;
  v28 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v31 = v15 * (v28 - 1);
    v27 = v15;
    v30 = v15 * v28;
    while (2)
    {
      v16 = 0;
      v17 = v25;
      do
      {
        v18 = *a4;
        sub_1002D5D90(v30 + v16 + *a4, (uint64_t)v14);
        sub_1002D5D90(v31 + v16 + v18, (uint64_t)v11);
        LOBYTE(v18) = static Date.< infix(_:_:)(v14, v11);
        sub_1000215BC((uint64_t)v11, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
        sub_1000215BC((uint64_t)v14, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
        if ((v18 & 1) == 0)
          break;
        v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v20 = a4;
        v21 = v19 + v30 + v16;
        v22 = v19 + v31 + v16;
        sub_1002D5DD4(v21, v29);
        swift_arrayInitWithTakeFrontToBack(v21, v22, 1, v26);
        sub_1002D5DD4(v29, v22);
        v16 -= v27;
        ++v17;
        a4 = v20;
      }
      while (v28 != v17);
      v31 += v27;
      v30 += v27;
      if (++v28 != v24)
        continue;
      break;
    }
  }
}

void sub_1002D692C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v26;
  BOOL v28;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v42;
  int64_t v44;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = _s14ChartViewModelV26SunEventAccessibilityModelVMa(0);
  v8 = __chkstk_darwin(v51);
  v52 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v46 - v11;
  v13 = *(_QWORD *)(v10 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v47 = *(_QWORD *)(v10 + 72);
  if (v14 / v13 >= v16 / v13)
  {
    sub_1006005D0(a2, v16 / v13);
    v20 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
      goto LABEL_69;
    v49 = a1;
    v50 = -v13;
    v48 = a4;
    while (1)
    {
      v30 = a3;
      v31 = v50;
      a3 += v50;
      v32 = v20 + v50;
      v33 = v20;
      sub_1002D5D90(v20 + v50, (uint64_t)v12);
      v34 = a2 + v31;
      v35 = a2 + v31;
      v36 = (uint64_t)v12;
      v37 = v52;
      sub_1002D5D90(v35, v52);
      v38 = static Date.< infix(_:_:)(v36, v37);
      v39 = v37;
      v12 = (char *)v36;
      sub_1000215BC(v39, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      sub_1000215BC(v36, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      if ((v38 & 1) != 0)
      {
        v20 = v33;
        if (v30 >= a2 && a3 < a2)
        {
          v42 = v49;
          if (v30 != a2)
            swift_arrayInitWithTakeBackToFront(a3, v34, 1, v51);
          a2 = v34;
          a4 = v48;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack(a3, v34, 1, v51);
        a2 = v34;
      }
      else
      {
        if (v30 < v33 || a3 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack(a3, v32, 1, v51);
        }
        else if (v30 != v33)
        {
          swift_arrayInitWithTakeBackToFront(a3, v32, 1, v51);
        }
        v20 = v32;
      }
      a4 = v48;
      v42 = v49;
LABEL_64:
      if (v20 <= a4 || a2 <= v42)
      {
        v13 = v47;
        goto LABEL_69;
      }
    }
  }
  sub_1006005D0(a1, v14 / v13);
  v20 = a4 + v18 * v13;
  if (v18 * v13 >= 1 && a2 < a3)
  {
    do
    {
      sub_1002D5D90(a2, (uint64_t)v12);
      v22 = v52;
      sub_1002D5D90(a4, v52);
      v23 = static Date.< infix(_:_:)(v12, v22);
      sub_1000215BC(v22, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      sub_1000215BC((uint64_t)v12, _s14ChartViewModelV26SunEventAccessibilityModelVMa);
      if ((v23 & 1) != 0)
      {
        v24 = a2 + v13;
        if (a1 < a2 || a1 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack(a1, a2, 1, v51);
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront(a1, a2, 1, v51);
        }
      }
      else
      {
        v26 = a4 + v13;
        if (a1 < a4 || a1 >= v26)
        {
          swift_arrayInitWithTakeFrontToBack(a1, a4, 1, v51);
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront(a1, a4, 1, v51);
        }
        v24 = a2;
        a4 = v26;
        v13 = v47;
      }
      a1 += v13;
      v28 = a4 >= v20 || v24 >= a3;
      a2 = v24;
    }
    while (!v28);
  }
LABEL_69:
  v44 = v20 - a4;
  if (v13 != -1 || v44 != 0x8000000000000000)
  {
    sub_1006005D0(a4, v44 / v13);
    return;
  }
LABEL_77:
  __break(1u);
}

BOOL sub_1002D6CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D5B88(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1002D6CE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD4B98;
  if (!qword_100BD4B98)
  {
    v1 = type metadata accessor for SunriseSunsetDetailChartViewModelFactory(255);
    result = swift_getWitnessTable(&unk_100992EA8, v1);
    atomic_store(result, (unint64_t *)&qword_100BD4B98);
  }
  return result;
}

uint64_t sub_1002D6D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD4B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1002D6D70(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = (int *)type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
    {
      v16 = sub_1000BA294(&qword_100BC3460);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_27:
      v55 = a3[7];
      v56 = (uint64_t *)((char *)a1 + v55);
      v57 = (uint64_t *)((char *)a2 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      swift_bridgeObjectRetain(v58);
      return a1;
    }
    v18 = v14[1];
    *v13 = *v14;
    v13[1] = v18;
    v19 = v15[5];
    v20 = (char *)v13 + v19;
    v21 = (char *)v14 + v19;
    v22 = type metadata accessor for Locale(0);
    swift_bridgeObjectRetain(v18);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_1000BA294(&qword_100BC3340);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v24 = v15[6];
    v25 = (char *)v13 + v24;
    v26 = (char *)v14 + v24;
    v27 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v15[7];
    v29 = (char *)v13 + v28;
    v30 = (char *)v14 + v28;
    v31 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      v32 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v29, v30, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    v34 = v15[8];
    v35 = (_QWORD *)((char *)v13 + v34);
    v36 = (_QWORD *)((char *)v14 + v34);
    v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36);
    if (EnumCaseMultiPayload == 1)
    {
      v43 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v35, v36, v43);
      v40 = v35;
      v41 = v37;
      v42 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        goto LABEL_17;
      }
      v39 = v36[1];
      *v35 = *v36;
      v35[1] = v39;
      swift_bridgeObjectRetain(v39);
      v40 = v35;
      v41 = v37;
      v42 = 0;
    }
    swift_storeEnumTagMultiPayload(v40, v41, v42);
LABEL_17:
    v44 = v15[9];
    v45 = (char *)v13 + v44;
    v46 = (char *)v14 + v44;
    v47 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      v48 = sub_1000BA294(&qword_100BC3350);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v49))
      {
        v50 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v49);
      }
      v51 = *(int *)(v47 + 20);
      v52 = &v45[v51];
      v53 = &v46[v51];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v49))
      {
        v54 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v52, v53, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v49);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
    goto LABEL_27;
  }
  v17 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1002D71C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
  {
    v15 = sub_1000BA294(&qword_100BC3460);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_25;
  }
  v16 = v13[1];
  *v12 = *v13;
  v12[1] = v16;
  v17 = v14[5];
  v18 = (char *)v12 + v17;
  v19 = (char *)v13 + v17;
  v20 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v16);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_1000BA294(&qword_100BC3340);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v22 = v14[6];
  v23 = (char *)v12 + v22;
  v24 = (char *)v13 + v22;
  v25 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = v14[7];
  v27 = (char *)v12 + v26;
  v28 = (char *)v13 + v26;
  v29 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v27, v28, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  v32 = v14[8];
  v33 = (_QWORD *)((char *)v12 + v32);
  v34 = (_QWORD *)((char *)v13 + v32);
  v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v34);
  if (EnumCaseMultiPayload == 1)
  {
    v41 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v33, v34, v41);
    v38 = v33;
    v39 = v35;
    v40 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      goto LABEL_15;
    }
    v37 = v34[1];
    *v33 = *v34;
    v33[1] = v37;
    swift_bridgeObjectRetain(v37);
    v38 = v33;
    v39 = v35;
    v40 = 0;
  }
  swift_storeEnumTagMultiPayload(v38, v39, v40);
LABEL_15:
  v42 = v14[9];
  v43 = (char *)v12 + v42;
  v44 = (char *)v13 + v42;
  v45 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
  {
    v46 = sub_1000BA294(&qword_100BC3350);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v47))
    {
      v48 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v47);
    }
    v49 = *(int *)(v45 + 20);
    v50 = &v43[v49];
    v51 = &v44[v49];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v47))
    {
      v52 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v50, v51, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v47);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
LABEL_25:
  v53 = a3[7];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  swift_bridgeObjectRetain(v56);
  return a1;
}

uint64_t sub_1002D75E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  size_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  size_t v58;
  char *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for WeatherData(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v15)
  {
    if (!v16)
    {
      *v12 = *v13;
      v17 = v13[1];
      v12[1] = v17;
      v18 = v14[5];
      v19 = (char *)v12 + v18;
      v20 = (char *)v13 + v18;
      v21 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v17);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        v22 = sub_1000BA294(&qword_100BC3340);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
      v34 = v14[6];
      v35 = (char *)v12 + v34;
      v36 = (char *)v13 + v34;
      v37 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      v38 = v14[7];
      v39 = (char *)v12 + v38;
      v40 = (char *)v13 + v38;
      v41 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        v42 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v43 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v39, v40, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      v44 = v14[8];
      v45 = (_QWORD *)((char *)v12 + v44);
      v46 = (_QWORD *)((char *)v13 + v44);
      v47 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v46);
      if (EnumCaseMultiPayload == 1)
      {
        v53 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v45, v46, v53);
        v50 = v45;
        v51 = v47;
        v52 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          goto LABEL_23;
        }
        *v45 = *v46;
        v49 = v46[1];
        v45[1] = v49;
        swift_bridgeObjectRetain(v49);
        v50 = v45;
        v51 = v47;
        v52 = 0;
      }
      swift_storeEnumTagMultiPayload(v50, v51, v52);
LABEL_23:
      v54 = v14[9];
      v55 = (char *)v12 + v54;
      v56 = (char *)v13 + v54;
      v57 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
      {
        v58 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
        v59 = v55;
        v60 = v56;
LABEL_25:
        memcpy(v59, v60, v58);
LABEL_47:
        v92 = (uint64_t)v12;
        v93 = (uint64_t)v14;
LABEL_48:
        _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v93);
        goto LABEL_49;
      }
      v61 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v61))
      {
        v62 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v55, v56, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v61);
      }
      v86 = *(int *)(v57 + 20);
      v87 = &v55[v86];
      v88 = &v56[v86];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v61))
      {
        v89 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v87, v88, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v61);
      }
      v90 = (uint64_t)v55;
      v91 = v57;
      goto LABEL_46;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    sub_1000B56C0((uint64_t)v12, type metadata accessor for WeatherData);
LABEL_7:
    v23 = &qword_100BC3460;
LABEL_8:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(v23) - 8) + 64);
    v25 = v12;
    v26 = v13;
    goto LABEL_9;
  }
  *v12 = *v13;
  v27 = v13[1];
  v12[1] = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease();
  v28 = v14[5];
  v29 = (char *)v12 + v28;
  v30 = (char *)v13 + v28;
  v31 = type metadata accessor for Locale(0);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v63 = *(_QWORD *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v31);
LABEL_30:
    v64 = sub_1000BA294(&qword_100BC3340);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v29, v30, v31);
LABEL_31:
  v65 = v14[6];
  v66 = (char *)v12 + v65;
  v67 = (char *)v13 + v65;
  v68 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v66, v67, v68);
  v69 = v14[7];
  v70 = (char *)v12 + v69;
  v71 = (char *)v13 + v69;
  v72 = sub_1000BA294(&qword_100BC3348);
  v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v72);
  v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72);
  if (v73)
  {
    if (!v74)
    {
      v75 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v70, v71, v75);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v74)
  {
    sub_100021A3C((uint64_t)v70, &qword_100BC3348);
LABEL_36:
    v76 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_37;
  }
  v105 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 24))(v70, v71, v105);
LABEL_37:
  if (a1 == a2)
    goto LABEL_53;
  v77 = v14[8];
  v78 = (_QWORD *)((char *)v12 + v77);
  v79 = (_QWORD *)((char *)v13 + v77);
  sub_1000B56C0((uint64_t)v12 + v77, type metadata accessor for WeatherData.WeatherStatisticsState);
  v80 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v81 = swift_getEnumCaseMultiPayload(v79);
  if (v81 == 1)
  {
    v99 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v78, v79, v99);
    v83 = v78;
    v84 = v80;
    v85 = 1;
    goto LABEL_51;
  }
  if (!v81)
  {
    *v78 = *v79;
    v82 = v79[1];
    v78[1] = v82;
    swift_bridgeObjectRetain(v82);
    v83 = v78;
    v84 = v80;
    v85 = 0;
LABEL_51:
    swift_storeEnumTagMultiPayload(v83, v84, v85);
    goto LABEL_53;
  }
  memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
LABEL_53:
  v100 = v14[9];
  v12 = (_QWORD *)((char *)v12 + v100);
  v13 = (_QWORD *)((char *)v13 + v100);
  v14 = (int *)type metadata accessor for WeatherDataOverrides(0);
  v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v101)
  {
    if (!v102)
    {
      v103 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v103))
      {
        v104 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v12, v13, v103);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v103);
      }
      v109 = v14[5];
      v110 = (char *)v12 + v109;
      v111 = (uint64_t)v13 + v109;
      if (_s7Weather24LocationCompositionStateOwet_0(v111, 1, v103))
      {
        v58 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
        v59 = v110;
        v60 = (const void *)v111;
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v110, v111, v103);
      v90 = (uint64_t)v110;
      v91 = v103;
LABEL_46:
      _s7Weather24LocationCompositionStateOwst_0(v90, 0, 1, v91);
      goto LABEL_47;
    }
    goto LABEL_59;
  }
  if (v102)
  {
    sub_1000B56C0((uint64_t)v12, type metadata accessor for WeatherDataOverrides);
LABEL_59:
    v23 = &qword_100BC3350;
    goto LABEL_8;
  }
  v106 = type metadata accessor for Date(0);
  v107 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v106);
  v108 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v106);
  if (!v107)
  {
    v112 = *(_QWORD *)(v106 - 8);
    if (!v108)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v112 + 24))(v12, v13, v106);
      goto LABEL_72;
    }
    (*(void (**)(_QWORD *, uint64_t))(v112 + 8))(v12, v106);
    goto LABEL_71;
  }
  if (v108)
  {
LABEL_71:
    v113 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v12, v13, v106);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v106);
LABEL_72:
  v114 = v14[5];
  v115 = (uint64_t)v12 + v114;
  v116 = (uint64_t)v13 + v114;
  v117 = _s7Weather24LocationCompositionStateOwet_0(v115, 1, v106);
  v118 = _s7Weather24LocationCompositionStateOwet_0(v116, 1, v106);
  if (v117)
  {
    if (!v118)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v115, v116, v106);
      v92 = v115;
      v93 = v106;
      goto LABEL_48;
    }
  }
  else
  {
    v119 = *(_QWORD *)(v106 - 8);
    if (!v118)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 24))(v115, v116, v106);
      goto LABEL_49;
    }
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v115, v106);
  }
  v24 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v25 = (void *)v115;
  v26 = (const void *)v116;
LABEL_9:
  memcpy(v25, v26, v24);
LABEL_49:
  v94 = a3[7];
  v95 = (_QWORD *)(a1 + v94);
  v96 = (_QWORD *)(a2 + v94);
  *v95 = *v96;
  v97 = v96[1];
  v95[1] = v97;
  swift_bridgeObjectRetain(v97);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002D7F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
  {
    v15 = sub_1000BA294(&qword_100BC3460);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v16 = v14[5];
    v17 = (char *)v12 + v16;
    v18 = (char *)v13 + v16;
    v19 = type metadata accessor for Locale(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      v20 = sub_1000BA294(&qword_100BC3340);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    v21 = v14[6];
    v22 = (char *)v12 + v21;
    v23 = (char *)v13 + v21;
    v24 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    v25 = v14[7];
    v26 = (char *)v12 + v25;
    v27 = (char *)v13 + v25;
    v28 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      v29 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v26, v27, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    v31 = v14[8];
    v32 = (char *)v12 + v31;
    v33 = (char *)v13 + v31;
    v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v33) == 1)
    {
      v35 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload(v32, v34, 1);
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    v36 = v14[9];
    v37 = (char *)v12 + v36;
    v38 = (char *)v13 + v36;
    v39 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      v40 = sub_1000BA294(&qword_100BC3350);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
      {
        v42 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v37, v38, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
      }
      v43 = *(int *)(v39 + 20);
      v44 = &v37[v43];
      v45 = &v38[v43];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v41))
      {
        v46 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v44, v45, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v41);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
  }
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1002D838C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  size_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  size_t v52;
  char *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  uint64_t v109;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = (int *)type metadata accessor for WeatherData(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v17 = v14[5];
      v18 = &v12[v17];
      v19 = &v13[v17];
      v20 = type metadata accessor for Locale(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_1000BA294(&qword_100BC3340);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      v33 = v14[6];
      v34 = &v12[v33];
      v35 = &v13[v33];
      v36 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      v37 = v14[7];
      v38 = &v12[v37];
      v39 = &v13[v37];
      v40 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        v41 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v42 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v38, v39, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      v43 = v14[8];
      v44 = &v12[v43];
      v45 = &v13[v43];
      v46 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v45) == 1)
      {
        v47 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
        swift_storeEnumTagMultiPayload(v44, v46, 1);
      }
      else
      {
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      v48 = v14[9];
      v49 = &v12[v48];
      v50 = &v13[v48];
      v51 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
      {
        v52 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
        v53 = v49;
        v54 = v50;
LABEL_22:
        memcpy(v53, v54, v52);
LABEL_51:
        v87 = (uint64_t)v12;
        v88 = (uint64_t)v14;
LABEL_52:
        _s7Weather24LocationCompositionStateOwst_0(v87, 0, 1, v88);
        goto LABEL_53;
      }
      v55 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v55))
      {
        v56 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v49, v50, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v55);
      }
      v81 = *(int *)(v51 + 20);
      v82 = &v49[v81];
      v83 = &v50[v81];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v55))
      {
        v84 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v82, v83, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v55);
      }
      v85 = (uint64_t)v49;
      v86 = v51;
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    sub_1000B56C0((uint64_t)v12, type metadata accessor for WeatherData);
LABEL_7:
    v22 = &qword_100BC3460;
LABEL_8:
    v23 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(v22) - 8) + 64);
    v24 = v12;
    v25 = v13;
    goto LABEL_9;
  }
  v26 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v26;
  swift_bridgeObjectRelease();
  v27 = v14[5];
  v28 = &v12[v27];
  v29 = &v13[v27];
  v30 = type metadata accessor for Locale(0);
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v57 = *(_QWORD *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v30);
LABEL_27:
    v58 = sub_1000BA294(&qword_100BC3340);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v28, v29, v30);
LABEL_28:
  v59 = v14[6];
  v60 = &v12[v59];
  v61 = &v13[v59];
  v62 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = v14[7];
  v64 = &v12[v63];
  v65 = &v13[v63];
  v66 = sub_1000BA294(&qword_100BC3348);
  v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (v67)
  {
    if (!v68)
    {
      v69 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v64, v65, v69);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v68)
  {
    sub_100021A3C((uint64_t)v64, &qword_100BC3348);
LABEL_33:
    v70 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_34;
  }
  v95 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 40))(v64, v65, v95);
LABEL_34:
  if (a1 != a2)
  {
    v71 = v14[8];
    v72 = &v12[v71];
    v73 = &v13[v71];
    sub_1000B56C0((uint64_t)&v12[v71], type metadata accessor for WeatherData.WeatherStatisticsState);
    v74 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v73) == 1)
    {
      v75 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v72, v73, v75);
      swift_storeEnumTagMultiPayload(v72, v74, 1);
    }
    else
    {
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
  }
  v76 = v14[9];
  v12 += v76;
  v13 += v76;
  v14 = (int *)type metadata accessor for WeatherDataOverrides(0);
  v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v77)
  {
    if (!v78)
    {
      v79 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v79))
      {
        v80 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v12, v13, v79);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v79);
      }
      v99 = v14[5];
      v100 = &v12[v99];
      v101 = (uint64_t)&v13[v99];
      if (_s7Weather24LocationCompositionStateOwet_0(v101, 1, v79))
      {
        v52 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
        v53 = v100;
        v54 = (const void *)v101;
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v100, v101, v79);
      v85 = (uint64_t)v100;
      v86 = v79;
LABEL_50:
      _s7Weather24LocationCompositionStateOwst_0(v85, 0, 1, v86);
      goto LABEL_51;
    }
    goto LABEL_44;
  }
  if (v78)
  {
    sub_1000B56C0((uint64_t)v12, type metadata accessor for WeatherDataOverrides);
LABEL_44:
    v22 = &qword_100BC3350;
    goto LABEL_8;
  }
  v96 = type metadata accessor for Date(0);
  v97 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v96);
  v98 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v96);
  if (!v97)
  {
    v102 = *(_QWORD *)(v96 - 8);
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v102 + 40))(v12, v13, v96);
      goto LABEL_66;
    }
    (*(void (**)(char *, uint64_t))(v102 + 8))(v12, v96);
    goto LABEL_65;
  }
  if (v98)
  {
LABEL_65:
    v103 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v12, v13, v96);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v96);
LABEL_66:
  v104 = v14[5];
  v105 = (uint64_t)&v12[v104];
  v106 = (uint64_t)&v13[v104];
  v107 = _s7Weather24LocationCompositionStateOwet_0(v105, 1, v96);
  v108 = _s7Weather24LocationCompositionStateOwet_0(v106, 1, v96);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v105, v106, v96);
      v87 = v105;
      v88 = v96;
      goto LABEL_52;
    }
  }
  else
  {
    v109 = *(_QWORD *)(v96 - 8);
    if (!v108)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 40))(v105, v106, v96);
      goto LABEL_53;
    }
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v105, v96);
  }
  v23 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v24 = (void *)v105;
  v25 = (const void *)v106;
LABEL_9:
  memcpy(v24, v25, v23);
LABEL_53:
  v89 = a3[7];
  v90 = (_QWORD *)(a1 + v89);
  v91 = (uint64_t *)(a2 + v89);
  v93 = *v91;
  v92 = v91[1];
  *v90 = v93;
  v90[1] = v92;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002D8CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D8CD0);
}

uint64_t sub_1002D8CD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v15;
  int v16;

  sub_1000C2698();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000992C4();
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_10:
    v8 = v4 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(&qword_100BC3460);
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_10;
  }
  v15 = *(_QWORD *)(v4 + a3[7] + 8);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  v16 = v15 - 1;
  if (v16 < 0)
    v16 = -1;
  return (v16 + 1);
}

uint64_t sub_1002D8D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D8D8C);
}

void sub_1002D8D8C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000C2698();
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1000992C4();
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1000BA294(&qword_100BC3460);
      sub_10009D2E8();
      if (!v13)
      {
        *(_QWORD *)(v5 + a4[7] + 8) = v4;
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = v5 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v9, v4, v4, v8);
}

uint64_t sub_1002D8E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;

  v1 = sub_1000992C4();
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WeatherMapOverlayKind(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098694();
  v7 = (int *)type metadata accessor for MapComponentViewModel(0);
  sub_10004037C((uint64_t)v7, qword_100CAE628);
  v8 = sub_1000AECD4((uint64_t)v7, (uint64_t)qword_100CAE628);
  v9 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
  v10 = type metadata accessor for WeatherMapPrecipitationOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v0, v9, v10);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v0, enum case for WeatherMapOverlayKind.precipitation(_:), v5);
  static Location.cupertino.getter(v11);
  v12 = v8 + v7[6];
  v13 = type metadata accessor for WeatherData(0);
  _s7Weather24LocationCompositionStateOwst_0(v12, 1, 1, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, v0, v5);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8 + v7[5], v4, v1);
  v15 = (_QWORD *)(v8 + v7[7]);
  *v15 = 0;
  v15[1] = 0;
  return result;
}

ValueMetadata *type metadata accessor for HumidityComparisonTextBuilder()
{
  return &type metadata for HumidityComparisonTextBuilder;
}

uint64_t sub_1002D8FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  const char *v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = type metadata accessor for Calendar(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TimeZone(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v38 - v15;
  v39 = v18;
  v40 = v17;
  (*(void (**)(char *, uint64_t, __n128))(v18 + 16))((char *)&v38 - v15, a1, v14);
  v19 = type metadata accessor for PastDataComparisonTextContext(0);
  v20 = *(_QWORD *)(a1 + *(int *)(v19 + 32));
  v21 = a1 + *(int *)(v19 + 24);
  v41 = v7;
  v42 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v21, v6);
  static Calendar.currentCalendar(with:)(v21);
  Date.wc_addDays(_:calendar:)(-1, v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v43 = v20;
  sub_1000BA294(&qword_100BD4C48);
  sub_1002D92A8();
  sub_1000BBFD4((uint64_t)v12);
  v23 = round(v22 * 100.0);
  v43 = v20;
  sub_1000BBFD4((uint64_t)v16);
  v25 = round(v24 * 100.0);
  if (v23 >= v25)
  {
    if (v25 >= v23)
    {
      v26 = sub_1000BA87C((uint64_t)"The average humidity today is similar to yesterday.");
      v30 = v33 & 1;
      v31 = "Comparasion description of yesterday and today in humidity L2. It indicates today’s average relative humidit"
            "y is similar to than yesterday’s";
    }
    else
    {
      v26 = sub_1000BA87C((uint64_t)"The average humidity today is lower than yesterday.");
      v30 = v32 & 1;
      v31 = "Comparasion description of yesterday and today in humidity L2. It indicates today’s average relative humidit"
            "y is sufficiently lower than yesterday’s";
    }
  }
  else
  {
    v26 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000034, 0x80000001009F9B30);
    v30 = v29 & 1;
    v31 = "Comparasion description of yesterday and today in humidity L2. It indicates today’s average relative humidity "
          "is sufficiently higher than yesterday’s";
  }
  v34 = Text.init(_:tableName:bundle:comment:)(v26, v27, v30, v28, 0, 0, 0, v31);
  v35 = v40;
  v36 = *(void (**)(char *, uint64_t))(v39 + 8);
  v36(v12, v40);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v42);
  v36(v16, v35);
  return v34;
}

uint64_t sub_1002D9288(uint64_t a1)
{
  return sub_1002D8FB0(a1);
}

unint64_t sub_1002D92A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD4C50;
  if (!qword_100BD4C50)
  {
    v1 = sub_100075EB0(&qword_100BD4C48);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100BD4C50);
  }
  return result;
}

_QWORD *sub_1002D92EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[3];
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BD4D08);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v38)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BC44F8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = (uint64_t)result;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BD4D18);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!v36)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1000BA294(&qword_100BD4D20);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v34, v17, 0x746C7561666544, 0xE700000000000000, v17, v15, v16);
  v18 = v34[0];
  if (!v34[0])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v19 = v34[2];
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BD4D28);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (v33)
  {
    v23 = type metadata accessor for VFXTestModule();
    ObjectType = swift_getObjectType(v18);
    v25 = sub_100068EB4((uint64_t)v37, v38);
    v26 = __chkstk_darwin(v25);
    v28 = (char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v29 + 16))(v28, v26);
    v30 = type metadata accessor for VFXTestInteractor();
    v31 = sub_10065C3E0((uint64_t)v28, v11, &v35, v18, &v32, v23, v30, ObjectType, (uint64_t)&off_100B61420, v19);
    result = (_QWORD *)_s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
    a2[3] = v23;
    a2[4] = &off_100B869B0;
    *a2 = v31;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

double sub_1002D954C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v0 = sub_1000BA294(&qword_100BD4D00);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_1002D9614, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BD4D08);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_1002D9680, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BD4D10);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1002D9858, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC44F8);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_1002D986C, 0, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1002D9614@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (result)
  {
    a2[3] = (uint64_t)&type metadata for VFXTestTracker;
    a2[4] = (uint64_t)&off_100B76A60;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D9680@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v30;
  if (v30)
  {
    v9 = v31;
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BD4D00);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v29)
    {
      v13 = sub_100068EB4((uint64_t)v28, v29);
      v14 = __chkstk_darwin(v13);
      v16 = (_QWORD *)((char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
      v18 = *v16;
      v27[3] = &type metadata for VFXTestTracker;
      v27[4] = &off_100B76A60;
      v27[0] = v18;
      v19 = type metadata accessor for VFXTestInteractor();
      v20 = (_QWORD *)swift_allocObject(v19, 72, 7);
      v21 = sub_100068EB4((uint64_t)v27, (uint64_t)&type metadata for VFXTestTracker);
      v22 = __chkstk_darwin(v21);
      v24 = (_QWORD *)((char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = *v24;
      v20[7] = &type metadata for VFXTestTracker;
      v20[8] = &off_100B76A60;
      v20[3] = v9;
      v20[4] = v26;
      v20[2] = v8;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
      a2[3] = v19;
      a2[4] = &off_100B61420;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D9858@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for VFXTestViewModelFactory, (uint64_t)&off_100B72F68, a1);
}

uint64_t sub_1002D986C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18[2];
  _QWORD v19[5];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v22;
  if (v22)
  {
    v8 = v24;
    v7 = v25;
    v9 = v23;
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BD4D10);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v21)
    {
      v13 = *sub_1000DB418(v20, v21);
      v19[3] = type metadata accessor for VFXTestViewModelFactory();
      v19[4] = &off_100B72F68;
      v19[0] = v13;
      sub_100043CA8((uint64_t)v19, (uint64_t)v18);
      v14 = swift_allocObject(&unk_100B6BE78, 56, 7);
      sub_10003C800(v18, v14 + 16);
      swift_retain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v19);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v20);
      v15 = swift_allocObject(&unk_100B6BEA0, 32, 7);
      *(_QWORD *)(v15 + 16) = sub_1002D9AE4;
      *(_QWORD *)(v15 + 24) = v14;
      v16 = swift_allocObject(&unk_100B6BEC8, 32, 7);
      *(_QWORD *)(v16 + 16) = sub_1002D9B10;
      *(_QWORD *)(v16 + 24) = v15;
      v17 = sub_1000BA294(&qword_100BC44F8);
      swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
      return sub_100183730(v6, v9, v8, v7, sub_100182F48, 0, sub_1002D9B18, 0, sub_1000A22C0, v16);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D9A3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_1004102D0(a1, a3);
}

uint64_t sub_1002D9A84@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;

  a1();
  v3 = type metadata accessor for VFXTestViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v3);
}

uint64_t sub_1002D9AC0()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002D9AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002D9A3C(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1002D9AEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D9B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002D9A84(*(void (**)(void))(v1 + 16), a1);
}

uint64_t sub_1002D9B18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = j_j__swift_retain_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002D9B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  type metadata accessor for LocationPreviewContentInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  type metadata accessor for LocationPreviewInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  sub_1000BA294((uint64_t *)&unk_100BD4F00);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v17 = v14 - v13 + *(int *)(v16 + 48);
  sub_100080C0C(a1, v14 - v13, type metadata accessor for LocationPreviewInput);
  sub_100080C0C(a2, v17, type metadata accessor for LocationPreviewInput);
  sub_1000BA594(v15);
  if (!v19)
  {
    sub_100080C0C(v15, v11, type metadata accessor for LocationPreviewInput);
    sub_1000BA594(v17);
    if (!v19)
    {
      sub_10007802C(v17, v7, type metadata accessor for LocationPreviewContentInput);
      sub_1002D9CF0(v11, v7);
      v18 = v20;
      sub_1000215BC(v7, type metadata accessor for LocationPreviewContentInput);
      sub_1000215BC(v11, type metadata accessor for LocationPreviewContentInput);
      sub_1000215BC(v15, type metadata accessor for LocationPreviewInput);
      return v18 & 1;
    }
    sub_1000215BC(v11, type metadata accessor for LocationPreviewContentInput);
LABEL_9:
    sub_100021A14(v15, (uint64_t *)&unk_100BD4F00);
    v18 = 0;
    return v18 & 1;
  }
  sub_1000BA594(v17);
  if (!v19)
    goto LABEL_9;
  sub_1000215BC(v15, type metadata accessor for LocationPreviewInput);
  v18 = 1;
  return v18 & 1;
}

void sub_1002D9CF0(uint64_t a1, uint64_t a2)
{
  char v4;
  int *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  char v16;

  sub_10063001C(a1, a2);
  if ((v4 & 1) != 0)
  {
    v5 = (int *)type metadata accessor for LocationPreviewContentInput(0);
    sub_100381D74(a1 + v5[5], a2 + v5[5]);
    if ((v6 & 1) != 0)
    {
      sub_1000BA538();
      if (v15)
      {
        sub_1000F13D4();
        if ((v7 & 1) != 0)
        {
          sub_10094907C();
          if ((v8 & 1) != 0)
          {
            sub_1000BA538();
            if (v15)
            {
              sub_1000BA538();
              if (v15 && *(unsigned __int8 *)(a1 + v5[11]) == *(unsigned __int8 *)(a2 + v5[11]))
              {
                sub_10009CA08();
                if ((v9 & 1) != 0 && (static Date.== infix(_:_:)(a1 + v5[12], a2 + v5[12]) & 1) != 0)
                {
                  sub_1000BA538();
                  if (v15)
                  {
                    v10 = v5[14];
                    v11 = *(_QWORD *)(a1 + v10);
                    v12 = *(_QWORD *)(a1 + v10 + 8);
                    v13 = (_QWORD *)(a2 + v10);
                    v14 = v13[1];
                    v15 = v11 == *v13 && v12 == v14;
                    if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, *v13, v14, 0) & 1) != 0)
                    {
                      sub_10009E970();
                      if ((v16 & 1) != 0)
                        sub_10009B6B0();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_100079F70();
}

__n128 sub_1002D9E30@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, __n128 a13, unint64_t a14, unint64_t a15)
{
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *v26;
  __n128 result;

  sub_10007802C(a1, a9, type metadata accessor for PreviewLocation);
  v22 = (int *)type metadata accessor for LocationPreviewContentInput(0);
  sub_10007802C(a2, a9 + v22[5], type metadata accessor for LocationPreviewModalViewState);
  *(_BYTE *)(a9 + v22[6]) = a3;
  *(_QWORD *)(a9 + v22[7]) = a4;
  *(_QWORD *)(a9 + v22[8]) = a5;
  *(_BYTE *)(a9 + v22[9]) = a6;
  *(_BYTE *)(a9 + v22[10]) = a7;
  v23 = a9 + v22[11];
  *(_BYTE *)v23 = a8;
  *(_QWORD *)(v23 + 8) = a10;
  v24 = a9 + v22[12];
  v25 = sub_100098778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a11, v25);
  *(_BYTE *)(a9 + v22[13]) = a12;
  v26 = (__n128 *)(a9 + v22[14]);
  result = a13;
  *v26 = a13;
  v26[1].n128_u64[0] = a14;
  v26[1].n128_u64[1] = a15;
  return result;
}

uint64_t sub_1002D9F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[32];

  v86 = a2;
  v3 = sub_100098778();
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  __chkstk_darwin(v3);
  sub_100088FDC();
  v85 = v4;
  type metadata accessor for TimeState(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v81 = v6;
  v79 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v80 = v8;
  sub_1000D05BC();
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v88 = v10;
  type metadata accessor for PreviewLocation(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v87 = v12;
  sub_1000BA294(&qword_100BC5F58);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_10009883C();
  v16 = v14 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v73 - v18;
  v20 = type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_10009883C();
  v24 = v22 - v23;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v73 - v27;
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v73 - v30;
  __chkstk_darwin(v29);
  v33 = (char *)&v73 - v32;
  v77 = type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_10009883C();
  v37 = v35 - v36;
  v39 = __chkstk_darwin(v38);
  v41 = (char *)&v73 - v40;
  __chkstk_darwin(v39);
  v78 = (uint64_t)&v73 - v42;
  v84 = a1;
  v43 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_100080C0C(v43, (uint64_t)v33, type metadata accessor for ModalViewState);
  if (!swift_getEnumCaseMultiPayload(v33, v20))
  {
    sub_10007802C((uint64_t)v33, (uint64_t)v41, type metadata accessor for LocationPreviewViewState);
LABEL_9:
    v48 = v78;
    sub_10007802C((uint64_t)v41, v78, type metadata accessor for LocationPreviewViewState);
    sub_100080C0C(v48, v87, type metadata accessor for PreviewLocation);
    sub_100080C0C(v48 + *(int *)(v77 + 20), v88, type metadata accessor for LocationPreviewModalViewState);
    sub_100080C0C(v43, (uint64_t)v28, type metadata accessor for ModalViewState);
    v74 = type metadata accessor for ModalViewState.MapViewModal(0);
    sub_10009D34C(v24, v49, v50, v74);
    v73 = v20;
    swift_storeEnumTagMultiPayload(v24, v20, 4);
    sub_1000D16F4();
    LODWORD(v77) = v51;
    sub_1000215BC(v24, type metadata accessor for ModalViewState);
    sub_1000215BC((uint64_t)v28, type metadata accessor for ModalViewState);
    v52 = v84;
    v53 = v79;
    v54 = v80;
    v55 = *(_QWORD *)(v84 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + *(int *)(v79 + 36));
    v56 = v43;
    v75 = *(_QWORD *)(v84 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + *(int *)(v79 + 28));
    v57 = v75;
    v76 = v55;
    sub_100080C0C(v84 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v80, type metadata accessor for LocationsState);
    v58 = *(_QWORD *)(*(_QWORD *)(v54 + *(int *)(v53 + 24)) + 16);
    type metadata accessor for SavedLocationsManager(0);
    swift_bridgeObjectRetain(v55);
    v59 = swift_bridgeObjectRetain(v57);
    LOBYTE(v53) = v58 < static SavedLocationsManager.maxAllowedLocationsCount.getter(v59);
    sub_1000215BC(v54, type metadata accessor for LocationsState);
    sub_100080C0C(v56, (uint64_t)v28, type metadata accessor for ModalViewState);
    _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v74);
    swift_storeEnumTagMultiPayload(v24, v73, 4);
    sub_1000D16F4();
    LOBYTE(v57) = v60;
    sub_1000215BC(v24, type metadata accessor for ModalViewState);
    sub_1000215BC((uint64_t)v28, type metadata accessor for ModalViewState);
    sub_1000215BC(v48, type metadata accessor for LocationPreviewViewState);
    LOBYTE(v48) = *(_BYTE *)(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
    v61 = *(_QWORD *)(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
    v62 = v81;
    sub_100080C0C(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v81, type metadata accessor for TimeState);
    v63 = v85;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v85, v62, v83);
    v64 = v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v89, 0, 0);
    v65 = *(_BYTE *)(v64 + *(int *)(type metadata accessor for EnvironmentState(0) + 36));
    v66 = *(_QWORD *)(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
    v67 = *(_QWORD *)(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    v68 = *(_QWORD *)(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
    v72.n128_u64[0] = *(_QWORD *)(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
    v72.n128_u64[1] = v66;
    sub_1002D9E30(v87, v88, v77 & 1, v76, v75, v53, v57 & 1, v48, v86, v61, v63, v65, v72, v67, v68);
    v69 = type metadata accessor for LocationPreviewContentInput(0);
    sub_1000DCD24(v69);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v67);
    swift_bridgeObjectRetain(v68);
    goto LABEL_10;
  }
  sub_1000215BC((uint64_t)v33, type metadata accessor for ModalViewState);
  sub_100080C0C(v43, (uint64_t)v31, type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload(v31, v20) != 4)
  {
    sub_1000215BC((uint64_t)v31, type metadata accessor for ModalViewState);
    goto LABEL_7;
  }
  sub_1002E3E2C((uint64_t)v31, (uint64_t)v19);
  sub_1002E3E2C((uint64_t)v19, v16);
  v44 = type metadata accessor for ModalViewState.MapViewModal(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v44) != 1)
  {
    sub_10007802C(v16, v37, type metadata accessor for LocationPreviewViewState);
    v41 = (char *)v37;
    goto LABEL_9;
  }
  sub_100021A14(v16, &qword_100BC5F58);
LABEL_7:
  v45 = type metadata accessor for LocationPreviewContentInput(0);
  sub_10009D34C(v86, v46, v47, v45);
LABEL_10:
  v70 = type metadata accessor for LocationPreviewInput(0);
  return sub_1000DCD24(v70);
}

uint64_t type metadata accessor for LocationPreviewInputFactory()
{
  return objc_opt_self(_TtC7Weather27LocationPreviewInputFactory);
}

uint64_t *sub_1002DA58C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for LocationPreviewContentInput(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      type metadata accessor for PreviewLocation(0);
      v9 = (char *)&loc_1002DA648 + 4 * byte_100992FD0[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for LocationPreviewContentInput(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD4EA0, (uint64_t)&nominal type descriptor for LocationPreviewContentInput);
}

double sub_1002DB1AC(id *a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  __n128 v17;
  void (*v18)(uint64_t, uint64_t, __n128);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v2 = type metadata accessor for LocationPreviewContentInput(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v2))
  {
    type metadata accessor for PreviewLocation(0);
    switch(swift_getEnumCaseMultiPayload(a1))
    {
      case 0u:
        v4 = type metadata accessor for Location(0);
        goto LABEL_5;
      case 1u:
        v4 = type metadata accessor for LocationOfInterest(0);
LABEL_5:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
        break;
      case 2u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
        v6 = type metadata accessor for Location(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v7 = (char *)a1 + *(int *)(v2 + 20);
    type metadata accessor for LocationPreviewModalViewState(0);
    switch(swift_getEnumCaseMultiPayload(v7))
    {
      case 0u:
        v8 = type metadata accessor for URL(0);
        goto LABEL_29;
      case 1u:
        v9 = type metadata accessor for DetailCondition(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
        v10 = (int *)type metadata accessor for ConditionDetailViewState(0);
        v11 = &v7[v10[5]];
        v12 = type metadata accessor for Location(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        v13 = (uint64_t)&v7[v10[6]];
        v14 = type metadata accessor for Date(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        v15 = (uint64_t)&v7[v10[8]];
        v16 = (int *)type metadata accessor for DetailChartSelection(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v16))
        {
          v17 = swift_bridgeObjectRelease();
          v18 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 8);
          v18(v15 + v16[5], v14, v17);
          ((void (*)(uint64_t, uint64_t))v18)(v15 + v16[6], v14);
          ((void (*)(uint64_t, uint64_t))v18)(v15 + v16[7], v14);
        }
        goto LABEL_30;
      case 2u:
      case 3u:
      case 4u:
        v8 = type metadata accessor for Location(0);
        goto LABEL_29;
      case 5u:
        v19 = type metadata accessor for Location(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v7, v19);
        v20 = type metadata accessor for MoonDetailViewState(0);
        v21 = (uint64_t)&v7[*(int *)(v20 + 20)];
        v22 = type metadata accessor for MoonDetailSelectedDate(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22)
          && swift_getEnumCaseMultiPayload(v21) <= 2)
        {
          v23 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
        }
        v24 = (uint64_t)&v7[*(int *)(v20 + 24)];
        v25 = type metadata accessor for Date(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        goto LABEL_30;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = (int *)type metadata accessor for NewsArticle(0);
        v27 = (uint64_t)&v7[v26[6]];
        v28 = type metadata accessor for URL(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
        v29 = &v7[v26[7]];
        v30 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        v31 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8);
        v31(&v7[v26[8]], v28);
        v32 = &v7[v26[9]];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = (uint64_t)&v32[*(int *)(type metadata accessor for NewsChannel(0) + 24)];
        if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v28))
          v31((char *)v33, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      case 7u:
        v34 = type metadata accessor for Location(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v7, v34);
        v35 = (uint64_t)&v7[*(int *)(type metadata accessor for AveragesDetailViewState(0) + 24)];
        v36 = type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
          goto LABEL_30;
        v7 = (char *)(v35 + *(int *)(v36 + 20));
        v8 = type metadata accessor for Date(0);
LABEL_29:
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
LABEL_30:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = (char *)a1 + *(int *)(v2 + 48);
        v39 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
        break;
      case 8u:
        v37 = type metadata accessor for Location(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v7, v37);
        v7 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState(0) + 20);
        v8 = type metadata accessor for LocationOfInterest(0);
        goto LABEL_29;
      default:
        goto LABEL_30;
    }
  }
  return result;
}

void *sub_1002DB704(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;

  v6 = type metadata accessor for LocationPreviewContentInput(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    type metadata accessor for PreviewLocation(0);
    v7 = (char *)&loc_1002DB79C + 4 * byte_100992FEA[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1002DC2EC(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = (int *)type metadata accessor for LocationPreviewContentInput(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      type metadata accessor for PreviewLocation(0);
      v9 = (char *)&loc_1002DC384 + 4 * byte_100992FF7[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationPreviewContentInput);
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation(0);
    v10 = (char *)&loc_1002DC42C + 4 * byte_100993004[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  a1[v6[6]] = a2[v6[6]];
  v11 = v6[7];
  v12 = *(_QWORD *)&a2[v11];
  *(_QWORD *)&a1[v11] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = v6[8];
  v14 = *(_QWORD *)&a2[v13];
  *(_QWORD *)&a1[v13] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  a1[v6[9]] = a2[v6[9]];
  a1[v6[10]] = a2[v6[10]];
  v15 = v6[11];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  v18 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease();
  v19 = v6[12];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  a1[v6[13]] = a2[v6[13]];
  v23 = v6[14];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease();
  v27 = *((_QWORD *)v25 + 2);
  *((_QWORD *)v24 + 2) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)v25 + 3);
  *((_QWORD *)v24 + 3) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1002DDB5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  int *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  __int128 v89;
  uint64_t v90;
  char *v91;
  char *v92;
  __int128 v93;
  uint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  _OWORD *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  __int128 v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _OWORD *v137;
  _OWORD *v138;
  __int128 v139;
  char *v141;
  int *v142;
  unsigned int v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;

  v6 = (int *)type metadata accessor for LocationPreviewContentInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v7 = type metadata accessor for PreviewLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v13 = type metadata accessor for SearchLocation(0);
      v14 = *(int *)(v13 + 32);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v20 = *(int *)(v13 + 36);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      *(_OWORD *)v21 = *(_OWORD *)v22;
      v21[16] = v22[16];
      v10 = a1;
      v11 = v7;
      v12 = 2;
      goto LABEL_13;
    case 1:
      v19 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v10 = a1;
      v11 = v7;
      v12 = 1;
      goto LABEL_13;
    case 0:
      v9 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = a1;
      v11 = v7;
      v12 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_14:
  v23 = v6[5];
  v24 = (_OWORD *)((char *)a1 + v23);
  v25 = (_OWORD *)((char *)a2 + v23);
  v26 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v25))
  {
    case 0u:
      v27 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      v28 = v24;
      v29 = v26;
      v30 = 0;
      goto LABEL_46;
    case 1u:
      v31 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v24, v25, v31);
      v32 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v33 = v32[5];
      v34 = (char *)v24 + v33;
      v35 = (char *)v25 + v33;
      v36 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      v37 = v32[6];
      v38 = (char *)v24 + v37;
      v39 = (char *)v25 + v37;
      v40 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      v90 = v32[7];
      v91 = (char *)v24 + v90;
      v92 = (char *)v25 + v90;
      v93 = *((_OWORD *)v92 + 1);
      *(_OWORD *)v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v93;
      v91[32] = v92[32];
      v142 = v32;
      v94 = v32[8];
      v95 = (_OWORD *)((char *)v24 + v94);
      v96 = (_OWORD *)((char *)v25 + v94);
      v97 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, (uint64_t)v97))
      {
        v98 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        *v95 = *v96;
        v146 = v26;
        v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32);
        v124((char *)v95 + v97[5], (char *)v96 + v97[5], v40);
        v124((char *)v95 + v97[6], (char *)v96 + v97[6], v40);
        v124((char *)v95 + v97[7], (char *)v96 + v97[7], v40);
        v26 = v146;
        *(_QWORD *)((char *)v95 + v97[8]) = *(_QWORD *)((char *)v96 + v97[8]);
        v125 = v97[9];
        v126 = (char *)v95 + v125;
        v127 = (char *)v96 + v125;
        v126[8] = v127[8];
        *(_QWORD *)v126 = *(_QWORD *)v127;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, (uint64_t)v97);
      }
      *((_BYTE *)v24 + v142[9]) = *((_BYTE *)v25 + v142[9]);
      v28 = v24;
      v29 = v26;
      v30 = 1;
      goto LABEL_46;
    case 2u:
      v42 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v24, v25, v42);
      v43 = type metadata accessor for AirQualityDetailViewState(0);
      *((_BYTE *)v24 + *(int *)(v43 + 20)) = *((_BYTE *)v25 + *(int *)(v43 + 20));
      v44 = *(int *)(v43 + 24);
      v45 = (char *)v24 + v44;
      v46 = (char *)v25 + v44;
      v45[32] = v46[32];
      v47 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v47;
      v28 = v24;
      v29 = v26;
      v30 = 2;
      goto LABEL_46;
    case 3u:
      v48 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v24, v25, v48);
      v49 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v50 = (char *)v24 + v49;
      v51 = (char *)v25 + v49;
      v52 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v52;
      v50[32] = v51[32];
      v28 = v24;
      v29 = v26;
      v30 = 3;
      goto LABEL_46;
    case 4u:
      v53 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v24, v25, v53);
      v54 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v55 = *(int *)(v54 + 20);
      v56 = (char *)v24 + v55;
      v57 = (char *)v25 + v55;
      v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      v56[32] = v57[32];
      *((_BYTE *)v24 + *(int *)(v54 + 24)) = *((_BYTE *)v25 + *(int *)(v54 + 24));
      v28 = v24;
      v29 = v26;
      v30 = 4;
      goto LABEL_46;
    case 5u:
      v59 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v24, v25, v59);
      v60 = (int *)type metadata accessor for MoonDetailViewState(0);
      v61 = v60[5];
      v62 = (char *)v24 + v61;
      v63 = (char *)v25 + v61;
      v64 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
      {
        v65 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        v143 = swift_getEnumCaseMultiPayload(v63);
        v99 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v62, v63, v99);
        swift_storeEnumTagMultiPayload(v62, v64, v143);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
      }
      v100 = v60[6];
      v101 = (char *)v24 + v100;
      v102 = (char *)v25 + v100;
      v103 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103))
      {
        v104 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v103);
      }
      v128 = v60[7];
      v129 = (char *)v24 + v128;
      v130 = (char *)v25 + v128;
      v131 = *((_OWORD *)v130 + 1);
      *(_OWORD *)v129 = *(_OWORD *)v130;
      *((_OWORD *)v129 + 1) = v131;
      v129[32] = v130[32];
      *((_BYTE *)v24 + v60[8]) = *((_BYTE *)v25 + v60[8]);
      v28 = v24;
      v29 = v26;
      v30 = 5;
      goto LABEL_46;
    case 6u:
      v66 = v25[1];
      *v24 = *v25;
      v24[1] = v66;
      v67 = (int *)type metadata accessor for NewsArticle(0);
      v68 = v67[6];
      v69 = (char *)v24 + v68;
      v70 = (char *)v25 + v68;
      v71 = type metadata accessor for URL(0);
      v145 = v26;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71))
      {
        v72 = sub_1000BA294(&qword_100BD4280);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
      }
      v105 = v67[7];
      v106 = (char *)v24 + v105;
      v107 = (char *)v25 + v105;
      v108 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
      v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32);
      v109((char *)v24 + v67[8], (char *)v25 + v67[8], v71);
      v110 = v67[9];
      v111 = (_OWORD *)((char *)v24 + v110);
      v112 = (char *)v25 + v110;
      v113 = *(_OWORD *)((char *)v25 + v110 + 16);
      *v111 = *(_OWORD *)((char *)v25 + v110);
      v111[1] = v113;
      v114 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v115 = (char *)v111 + v114;
      v116 = &v112[v114];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v71))
      {
        v117 = sub_1000BA294(&qword_100BD4280);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        v109(v115, v116, v71);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v71);
      }
      *(_QWORD *)((char *)v24 + v67[10]) = *(_QWORD *)((char *)v25 + v67[10]);
      *(_QWORD *)((char *)v24 + v67[11]) = *(_QWORD *)((char *)v25 + v67[11]);
      *(_QWORD *)((char *)v24 + v67[12]) = *(_QWORD *)((char *)v25 + v67[12]);
      v28 = v24;
      v29 = v145;
      v30 = 6;
      goto LABEL_46;
    case 7u:
      v73 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v24, v25, v73);
      v74 = (int *)type metadata accessor for AveragesDetailViewState(0);
      *((_BYTE *)v24 + v74[5]) = *((_BYTE *)v25 + v74[5]);
      v75 = v74[6];
      v76 = (_QWORD *)((char *)v24 + v75);
      v77 = (_QWORD *)((char *)v25 + v75);
      v78 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, (uint64_t)v78))
      {
        v79 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        *v76 = *v77;
        v118 = v78[5];
        v141 = (char *)v77 + v118;
        v144 = (char *)v76 + v118;
        v119 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v144, v141, v119);
        *(_QWORD *)((char *)v76 + v78[6]) = *(_QWORD *)((char *)v77 + v78[6]);
        *(_QWORD *)((char *)v76 + v78[7]) = *(_QWORD *)((char *)v77 + v78[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, (uint64_t)v78);
      }
      v120 = v74[7];
      v121 = (char *)v24 + v120;
      v122 = (char *)v25 + v120;
      v123 = *((_OWORD *)v122 + 1);
      *(_OWORD *)v121 = *(_OWORD *)v122;
      *((_OWORD *)v121 + 1) = v123;
      v121[32] = v122[32];
      v28 = v24;
      v29 = v26;
      v30 = 7;
      goto LABEL_46;
    case 8u:
      v80 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v24, v25, v80);
      v81 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v82 = *(int *)(v81 + 20);
      v83 = (char *)v24 + v82;
      v84 = (char *)v25 + v82;
      v85 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v83, v84, v85);
      v86 = *(int *)(v81 + 24);
      v87 = (char *)v24 + v86;
      v88 = (char *)v25 + v86;
      v89 = *((_OWORD *)v88 + 1);
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *((_OWORD *)v87 + 1) = v89;
      v87[32] = v88[32];
      v28 = v24;
      v29 = v26;
      v30 = 8;
LABEL_46:
      swift_storeEnumTagMultiPayload(v28, v29, v30);
      break;
    default:
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      break;
  }
  *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
  v132 = v6[12];
  v133 = (char *)a1 + v132;
  v134 = (char *)a2 + v132;
  v135 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  v136 = v6[14];
  v137 = (_OWORD *)((char *)a1 + v136);
  v138 = (_OWORD *)((char *)a2 + v136);
  v139 = v138[1];
  *v137 = *v138;
  v137[1] = v139;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_1002DE64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  int *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  _OWORD *v110;
  _OWORD *v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  _OWORD *v126;
  char *v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  __int128 v138;
  void (*v139)(char *, char *, uint64_t);
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _OWORD *v152;
  _OWORD *v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _OWORD *v159;
  _OWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _OWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  __int128 v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  int *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int *v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  int *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  __int128 v224;
  uint64_t v225;
  char *v226;
  char *v227;
  __int128 v228;
  uint64_t v229;
  _OWORD *v230;
  _OWORD *v231;
  int *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  void (*v244)(char *, char *, uint64_t);
  uint64_t v245;
  _OWORD *v246;
  char *v247;
  __int128 v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  __int128 v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  char *v264;
  char *v265;
  __int128 v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  _QWORD *v276;
  uint64_t v277;
  char *v279;
  char *v280;
  int *v281;
  unsigned int v282;
  char *v283;
  int *v284;
  unsigned int v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;

  v6 = (int *)type metadata accessor for LocationPreviewContentInput(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1000215BC(a1, type metadata accessor for LocationPreviewContentInput);
      goto LABEL_9;
    }
    if (a1 == a2)
    {
LABEL_96:
      *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
      *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
      *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
      v267 = v6[11];
      v268 = a1 + v267;
      v269 = a2 + v267;
      *(_BYTE *)v268 = *(_BYTE *)v269;
      *(_QWORD *)(v268 + 8) = *(_QWORD *)(v269 + 8);
      swift_bridgeObjectRelease();
      v270 = v6[12];
      v271 = a1 + v270;
      v272 = a2 + v270;
      v273 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v273 - 8) + 40))(v271, v272, v273);
      *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
      v274 = v6[14];
      v275 = (_QWORD *)(a1 + v274);
      v276 = (_QWORD *)(a2 + v274);
      v277 = v276[1];
      *v275 = *v276;
      v275[1] = v277;
      swift_bridgeObjectRelease();
      v275[2] = v276[2];
      swift_bridgeObjectRelease();
      v275[3] = v276[3];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1000215BC(a1, type metadata accessor for PreviewLocation);
    v15 = type metadata accessor for PreviewLocation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v28 = type metadata accessor for SearchLocation(0);
      v29 = *(int *)(v28 + 32);
      v30 = (void *)(a1 + v29);
      v31 = (const void *)(a2 + v29);
      v32 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
      {
        v33 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
      }
      v155 = *(int *)(v28 + 36);
      v156 = a1 + v155;
      v157 = a2 + v155;
      *(_OWORD *)v156 = *(_OWORD *)v157;
      *(_BYTE *)(v156 + 16) = *(_BYTE *)(v157 + 16);
      v18 = a1;
      v19 = v15;
      v20 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v34 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(a1, a2, v34);
      v18 = a1;
      v19 = v15;
      v20 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_63;
      }
      v17 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = a1;
      v19 = v15;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
LABEL_63:
    v158 = v6[5];
    v159 = (_OWORD *)(a1 + v158);
    v160 = (_OWORD *)(a2 + v158);
    sub_1000215BC(a1 + v158, type metadata accessor for LocationPreviewModalViewState);
    v161 = type metadata accessor for LocationPreviewModalViewState(0);
    switch(swift_getEnumCaseMultiPayload(v160))
    {
      case 0u:
        v162 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v159, v160, v162);
        v163 = v159;
        v164 = v161;
        v165 = 0;
        goto LABEL_95;
      case 1u:
        v166 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v159, v160, v166);
        v167 = (int *)type metadata accessor for ConditionDetailViewState(0);
        v168 = v167[5];
        v169 = (char *)v159 + v168;
        v170 = (char *)v160 + v168;
        v171 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v169, v170, v171);
        v172 = v167[6];
        v173 = (char *)v159 + v172;
        v174 = (char *)v160 + v172;
        v175 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v174, 1, v175))
        {
          v176 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v173, v174, v175);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v175);
        }
        v225 = v167[7];
        v226 = (char *)v159 + v225;
        v227 = (char *)v160 + v225;
        v228 = *((_OWORD *)v227 + 1);
        *(_OWORD *)v226 = *(_OWORD *)v227;
        *((_OWORD *)v226 + 1) = v228;
        v226[32] = v227[32];
        v284 = v167;
        v229 = v167[8];
        v230 = (_OWORD *)((char *)v159 + v229);
        v231 = (_OWORD *)((char *)v160 + v229);
        v232 = (int *)type metadata accessor for DetailChartSelection(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v231, 1, (uint64_t)v232))
        {
          v233 = sub_1000BA294(&qword_100BD0B58);
          memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
        }
        else
        {
          *v230 = *v231;
          v290 = v161;
          v259 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32);
          v259((char *)v230 + v232[5], (char *)v231 + v232[5], v175);
          v259((char *)v230 + v232[6], (char *)v231 + v232[6], v175);
          v259((char *)v230 + v232[7], (char *)v231 + v232[7], v175);
          v161 = v290;
          *(_QWORD *)((char *)v230 + v232[8]) = *(_QWORD *)((char *)v231 + v232[8]);
          v260 = v232[9];
          v261 = (char *)v230 + v260;
          v262 = (char *)v231 + v260;
          v261[8] = v262[8];
          *(_QWORD *)v261 = *(_QWORD *)v262;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, (uint64_t)v232);
        }
        *((_BYTE *)v159 + v284[9]) = *((_BYTE *)v160 + v284[9]);
        v163 = v159;
        v164 = v161;
        v165 = 1;
        goto LABEL_95;
      case 2u:
        v177 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v159, v160, v177);
        v178 = type metadata accessor for AirQualityDetailViewState(0);
        *((_BYTE *)v159 + *(int *)(v178 + 20)) = *((_BYTE *)v160 + *(int *)(v178 + 20));
        v179 = *(int *)(v178 + 24);
        v180 = (char *)v159 + v179;
        v181 = (char *)v160 + v179;
        v180[32] = v181[32];
        v182 = *((_OWORD *)v181 + 1);
        *(_OWORD *)v180 = *(_OWORD *)v181;
        *((_OWORD *)v180 + 1) = v182;
        v163 = v159;
        v164 = v161;
        v165 = 2;
        goto LABEL_95;
      case 3u:
        v183 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v159, v160, v183);
        v184 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
        v185 = (char *)v159 + v184;
        v186 = (char *)v160 + v184;
        v187 = *((_OWORD *)v186 + 1);
        *(_OWORD *)v185 = *(_OWORD *)v186;
        *((_OWORD *)v185 + 1) = v187;
        v185[32] = v186[32];
        v163 = v159;
        v164 = v161;
        v165 = 3;
        goto LABEL_95;
      case 4u:
        v188 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v159, v160, v188);
        v189 = type metadata accessor for SunriseSunsetDetailViewState(0);
        v190 = *(int *)(v189 + 20);
        v191 = (char *)v159 + v190;
        v192 = (char *)v160 + v190;
        v193 = *((_OWORD *)v192 + 1);
        *(_OWORD *)v191 = *(_OWORD *)v192;
        *((_OWORD *)v191 + 1) = v193;
        v191[32] = v192[32];
        *((_BYTE *)v159 + *(int *)(v189 + 24)) = *((_BYTE *)v160 + *(int *)(v189 + 24));
        v163 = v159;
        v164 = v161;
        v165 = 4;
        goto LABEL_95;
      case 5u:
        v194 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v159, v160, v194);
        v195 = (int *)type metadata accessor for MoonDetailViewState(0);
        v196 = v195[5];
        v197 = (char *)v159 + v196;
        v198 = (char *)v160 + v196;
        v199 = type metadata accessor for MoonDetailSelectedDate(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v198, 1, v199))
        {
          v200 = sub_1000BA294(&qword_100BC6CB8);
          memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
        }
        else
        {
          v285 = swift_getEnumCaseMultiPayload(v198);
          v234 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 32))(v197, v198, v234);
          swift_storeEnumTagMultiPayload(v197, v199, v285);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, v199);
        }
        v235 = v195[6];
        v236 = (char *)v159 + v235;
        v237 = (char *)v160 + v235;
        v238 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
        {
          v239 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 32))(v236, v237, v238);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v238);
        }
        v263 = v195[7];
        v264 = (char *)v159 + v263;
        v265 = (char *)v160 + v263;
        v266 = *((_OWORD *)v265 + 1);
        *(_OWORD *)v264 = *(_OWORD *)v265;
        *((_OWORD *)v264 + 1) = v266;
        v264[32] = v265[32];
        *((_BYTE *)v159 + v195[8]) = *((_BYTE *)v160 + v195[8]);
        v163 = v159;
        v164 = v161;
        v165 = 5;
        goto LABEL_95;
      case 6u:
        v201 = v160[1];
        *v159 = *v160;
        v159[1] = v201;
        v202 = (int *)type metadata accessor for NewsArticle(0);
        v203 = v202[6];
        v204 = (char *)v159 + v203;
        v205 = (char *)v160 + v203;
        v206 = type metadata accessor for URL(0);
        v289 = v161;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v205, 1, v206))
        {
          v207 = sub_1000BA294(&qword_100BD4280);
          memcpy(v204, v205, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v204, 0, 1, v206);
        }
        v240 = v202[7];
        v241 = (char *)v159 + v240;
        v242 = (char *)v160 + v240;
        v243 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v241, v242, v243);
        v244 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32);
        v244((char *)v159 + v202[8], (char *)v160 + v202[8], v206);
        v245 = v202[9];
        v246 = (_OWORD *)((char *)v159 + v245);
        v247 = (char *)v160 + v245;
        v248 = *(_OWORD *)((char *)v160 + v245 + 16);
        *v246 = *(_OWORD *)((char *)v160 + v245);
        v246[1] = v248;
        v249 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
        v250 = (char *)v246 + v249;
        v251 = &v247[v249];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v251, 1, v206))
        {
          v252 = sub_1000BA294(&qword_100BD4280);
          memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          v244(v250, v251, v206);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v250, 0, 1, v206);
        }
        *(_QWORD *)((char *)v159 + v202[10]) = *(_QWORD *)((char *)v160 + v202[10]);
        *(_QWORD *)((char *)v159 + v202[11]) = *(_QWORD *)((char *)v160 + v202[11]);
        *(_QWORD *)((char *)v159 + v202[12]) = *(_QWORD *)((char *)v160 + v202[12]);
        v163 = v159;
        v164 = v289;
        v165 = 6;
        goto LABEL_95;
      case 7u:
        v208 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v159, v160, v208);
        v209 = (int *)type metadata accessor for AveragesDetailViewState(0);
        *((_BYTE *)v159 + v209[5]) = *((_BYTE *)v160 + v209[5]);
        v210 = v209[6];
        v211 = (_QWORD *)((char *)v159 + v210);
        v212 = (_QWORD *)((char *)v160 + v210);
        v213 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v212, 1, (uint64_t)v213))
        {
          v214 = sub_1000BA294(&qword_100BCB0D0);
          memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
        }
        else
        {
          *v211 = *v212;
          v253 = v213[5];
          v280 = (char *)v212 + v253;
          v286 = (char *)v211 + v253;
          v254 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 32))(v286, v280, v254);
          *(_QWORD *)((char *)v211 + v213[6]) = *(_QWORD *)((char *)v212 + v213[6]);
          *(_QWORD *)((char *)v211 + v213[7]) = *(_QWORD *)((char *)v212 + v213[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v211, 0, 1, (uint64_t)v213);
        }
        v255 = v209[7];
        v256 = (char *)v159 + v255;
        v257 = (char *)v160 + v255;
        v258 = *((_OWORD *)v257 + 1);
        *(_OWORD *)v256 = *(_OWORD *)v257;
        *((_OWORD *)v256 + 1) = v258;
        v256[32] = v257[32];
        v163 = v159;
        v164 = v161;
        v165 = 7;
        goto LABEL_95;
      case 8u:
        v215 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v159, v160, v215);
        v216 = type metadata accessor for HomeAndWorkRefinementViewState(0);
        v217 = *(int *)(v216 + 20);
        v218 = (char *)v159 + v217;
        v219 = (char *)v160 + v217;
        v220 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 32))(v218, v219, v220);
        v221 = *(int *)(v216 + 24);
        v222 = (char *)v159 + v221;
        v223 = (char *)v160 + v221;
        v224 = *((_OWORD *)v223 + 1);
        *(_OWORD *)v222 = *(_OWORD *)v223;
        *((_OWORD *)v222 + 1) = v224;
        v222[32] = v223[32];
        v163 = v159;
        v164 = v161;
        v165 = 8;
LABEL_95:
        swift_storeEnumTagMultiPayload(v163, v164, v165);
        break;
      default:
        memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
        break;
    }
    goto LABEL_96;
  }
  if (v8)
  {
LABEL_9:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for PreviewLocation(0);
  v10 = swift_getEnumCaseMultiPayload(a2);
  switch(v10)
  {
    case 2:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v21 = type metadata accessor for SearchLocation(0);
      v22 = *(int *)(v21 + 32);
      v23 = (void *)(a1 + v22);
      v24 = (const void *)(a2 + v22);
      v25 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      v35 = *(int *)(v21 + 36);
      v36 = a1 + v35;
      v37 = a2 + v35;
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
      v12 = a1;
      v13 = v9;
      v14 = 2;
      goto LABEL_25;
    case 1:
      v27 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
      v12 = a1;
      v13 = v9;
      v14 = 1;
      goto LABEL_25;
    case 0:
      v11 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = a1;
      v13 = v9;
      v14 = 0;
LABEL_25:
      swift_storeEnumTagMultiPayload(v12, v13, v14);
      goto LABEL_26;
  }
  memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_26:
  v38 = v6[5];
  v39 = (_OWORD *)(a1 + v38);
  v40 = (_OWORD *)(a2 + v38);
  v41 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v40))
  {
    case 0u:
      v42 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
      v43 = v39;
      v44 = v41;
      v45 = 0;
      goto LABEL_58;
    case 1u:
      v46 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v39, v40, v46);
      v47 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v48 = v47[5];
      v49 = (char *)v39 + v48;
      v50 = (char *)v40 + v48;
      v51 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      v52 = v47[6];
      v53 = (char *)v39 + v52;
      v54 = (char *)v40 + v52;
      v55 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
      {
        v56 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
      }
      v105 = v47[7];
      v106 = (char *)v39 + v105;
      v107 = (char *)v40 + v105;
      v108 = *((_OWORD *)v107 + 1);
      *(_OWORD *)v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v108;
      v106[32] = v107[32];
      v281 = v47;
      v109 = v47[8];
      v110 = (_OWORD *)((char *)v39 + v109);
      v111 = (_OWORD *)((char *)v40 + v109);
      v112 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, (uint64_t)v112))
      {
        v113 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
        *v110 = *v111;
        v288 = v41;
        v139 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
        v139((char *)v110 + v112[5], (char *)v111 + v112[5], v55);
        v139((char *)v110 + v112[6], (char *)v111 + v112[6], v55);
        v139((char *)v110 + v112[7], (char *)v111 + v112[7], v55);
        v41 = v288;
        *(_QWORD *)((char *)v110 + v112[8]) = *(_QWORD *)((char *)v111 + v112[8]);
        v140 = v112[9];
        v141 = (char *)v110 + v140;
        v142 = (char *)v111 + v140;
        v141[8] = v142[8];
        *(_QWORD *)v141 = *(_QWORD *)v142;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, (uint64_t)v112);
      }
      *((_BYTE *)v39 + v281[9]) = *((_BYTE *)v40 + v281[9]);
      v43 = v39;
      v44 = v41;
      v45 = 1;
      goto LABEL_58;
    case 2u:
      v57 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v39, v40, v57);
      v58 = type metadata accessor for AirQualityDetailViewState(0);
      *((_BYTE *)v39 + *(int *)(v58 + 20)) = *((_BYTE *)v40 + *(int *)(v58 + 20));
      v59 = *(int *)(v58 + 24);
      v60 = (char *)v39 + v59;
      v61 = (char *)v40 + v59;
      v60[32] = v61[32];
      v62 = *((_OWORD *)v61 + 1);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v62;
      v43 = v39;
      v44 = v41;
      v45 = 2;
      goto LABEL_58;
    case 3u:
      v63 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v39, v40, v63);
      v64 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v65 = (char *)v39 + v64;
      v66 = (char *)v40 + v64;
      v67 = *((_OWORD *)v66 + 1);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v67;
      v65[32] = v66[32];
      v43 = v39;
      v44 = v41;
      v45 = 3;
      goto LABEL_58;
    case 4u:
      v68 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v39, v40, v68);
      v69 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v70 = *(int *)(v69 + 20);
      v71 = (char *)v39 + v70;
      v72 = (char *)v40 + v70;
      v73 = *((_OWORD *)v72 + 1);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v73;
      v71[32] = v72[32];
      *((_BYTE *)v39 + *(int *)(v69 + 24)) = *((_BYTE *)v40 + *(int *)(v69 + 24));
      v43 = v39;
      v44 = v41;
      v45 = 4;
      goto LABEL_58;
    case 5u:
      v74 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v39, v40, v74);
      v75 = (int *)type metadata accessor for MoonDetailViewState(0);
      v76 = v75[5];
      v77 = (char *)v39 + v76;
      v78 = (char *)v40 + v76;
      v79 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
      {
        v80 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        v282 = swift_getEnumCaseMultiPayload(v78);
        v114 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v77, v78, v114);
        swift_storeEnumTagMultiPayload(v77, v79, v282);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
      }
      v115 = v75[6];
      v116 = (char *)v39 + v115;
      v117 = (char *)v40 + v115;
      v118 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
      {
        v119 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
      }
      v143 = v75[7];
      v144 = (char *)v39 + v143;
      v145 = (char *)v40 + v143;
      v146 = *((_OWORD *)v145 + 1);
      *(_OWORD *)v144 = *(_OWORD *)v145;
      *((_OWORD *)v144 + 1) = v146;
      v144[32] = v145[32];
      *((_BYTE *)v39 + v75[8]) = *((_BYTE *)v40 + v75[8]);
      v43 = v39;
      v44 = v41;
      v45 = 5;
      goto LABEL_58;
    case 6u:
      v81 = v40[1];
      *v39 = *v40;
      v39[1] = v81;
      v82 = (int *)type metadata accessor for NewsArticle(0);
      v83 = v82[6];
      v84 = (char *)v39 + v83;
      v85 = (char *)v40 + v83;
      v86 = type metadata accessor for URL(0);
      v287 = v41;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
      {
        v87 = sub_1000BA294(&qword_100BD4280);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
      }
      v120 = v82[7];
      v121 = (char *)v39 + v120;
      v122 = (char *)v40 + v120;
      v123 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
      v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32);
      v124((char *)v39 + v82[8], (char *)v40 + v82[8], v86);
      v125 = v82[9];
      v126 = (_OWORD *)((char *)v39 + v125);
      v127 = (char *)v40 + v125;
      v128 = *(_OWORD *)((char *)v40 + v125 + 16);
      *v126 = *(_OWORD *)((char *)v40 + v125);
      v126[1] = v128;
      v129 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v130 = (char *)v126 + v129;
      v131 = &v127[v129];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v86))
      {
        v132 = sub_1000BA294(&qword_100BD4280);
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
      }
      else
      {
        v124(v130, v131, v86);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v86);
      }
      *(_QWORD *)((char *)v39 + v82[10]) = *(_QWORD *)((char *)v40 + v82[10]);
      *(_QWORD *)((char *)v39 + v82[11]) = *(_QWORD *)((char *)v40 + v82[11]);
      *(_QWORD *)((char *)v39 + v82[12]) = *(_QWORD *)((char *)v40 + v82[12]);
      v43 = v39;
      v44 = v287;
      v45 = 6;
      goto LABEL_58;
    case 7u:
      v88 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v39, v40, v88);
      v89 = (int *)type metadata accessor for AveragesDetailViewState(0);
      *((_BYTE *)v39 + v89[5]) = *((_BYTE *)v40 + v89[5]);
      v90 = v89[6];
      v91 = (_QWORD *)((char *)v39 + v90);
      v92 = (_QWORD *)((char *)v40 + v90);
      v93 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, (uint64_t)v93))
      {
        v94 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        *v91 = *v92;
        v133 = v93[5];
        v279 = (char *)v92 + v133;
        v283 = (char *)v91 + v133;
        v134 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v283, v279, v134);
        *(_QWORD *)((char *)v91 + v93[6]) = *(_QWORD *)((char *)v92 + v93[6]);
        *(_QWORD *)((char *)v91 + v93[7]) = *(_QWORD *)((char *)v92 + v93[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, (uint64_t)v93);
      }
      v135 = v89[7];
      v136 = (char *)v39 + v135;
      v137 = (char *)v40 + v135;
      v138 = *((_OWORD *)v137 + 1);
      *(_OWORD *)v136 = *(_OWORD *)v137;
      *((_OWORD *)v136 + 1) = v138;
      v136[32] = v137[32];
      v43 = v39;
      v44 = v41;
      v45 = 7;
      goto LABEL_58;
    case 8u:
      v95 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v39, v40, v95);
      v96 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v97 = *(int *)(v96 + 20);
      v98 = (char *)v39 + v97;
      v99 = (char *)v40 + v97;
      v100 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
      v101 = *(int *)(v96 + 24);
      v102 = (char *)v39 + v101;
      v103 = (char *)v40 + v101;
      v104 = *((_OWORD *)v103 + 1);
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *((_OWORD *)v102 + 1) = v104;
      v102[32] = v103[32];
      v43 = v39;
      v44 = v41;
      v45 = 8;
LABEL_58:
      swift_storeEnumTagMultiPayload(v43, v44, v45);
      break;
    default:
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      break;
  }
  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  v147 = v6[12];
  v148 = a1 + v147;
  v149 = a2 + v147;
  v150 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v151 = v6[14];
  v152 = (_OWORD *)(a1 + v151);
  v153 = (_OWORD *)(a2 + v151);
  v154 = v153[1];
  *v152 = *v153;
  v152[1] = v154;
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_1002DFC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002DFC44);
}

uint64_t sub_1002DFC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for LocationPreviewContentInput(0);
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1002DFC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002DFC94);
}

uint64_t sub_1002DFC94(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for LocationPreviewContentInput(0);
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_1002DFCD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationPreviewContentInput(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1002DFD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationPreviewContentInput(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for LocationPreviewInput(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD4E38, (uint64_t)&nominal type descriptor for LocationPreviewInput);
}

uint64_t sub_1002DFD50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for LocationPreviewContentInput(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t sub_1002DFDA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for PreviewLocation(0);
    v6 = (char *)&loc_1002DFE10 + 4 * byte_10099302C[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v7 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v8;
}

double sub_1002E095C(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  __n128 v17;
  void (*v18)(uint64_t, uint64_t, __n128);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double result;

  type metadata accessor for PreviewLocation(0);
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
      v4 = type metadata accessor for Location(0);
      goto LABEL_4;
    case 1u:
      v4 = type metadata accessor for LocationOfInterest(0);
LABEL_4:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
      v6 = type metadata accessor for Location(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v7 = (char *)a1 + *(int *)(a2 + 20);
  type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v7))
  {
    case 0u:
      v8 = type metadata accessor for URL(0);
      goto LABEL_29;
    case 1u:
      v9 = type metadata accessor for DetailCondition(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
      v10 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v11 = &v7[v10[5]];
      v12 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      v13 = (uint64_t)&v7[v10[6]];
      v14 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      v15 = (uint64_t)&v7[v10[8]];
      v16 = (int *)type metadata accessor for DetailChartSelection(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v16))
      {
        v17 = swift_bridgeObjectRelease();
        v18 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 8);
        v18(v15 + v16[5], v14, v17);
        ((void (*)(uint64_t, uint64_t))v18)(v15 + v16[6], v14);
        ((void (*)(uint64_t, uint64_t))v18)(v15 + v16[7], v14);
      }
      goto LABEL_30;
    case 2u:
    case 3u:
    case 4u:
      v8 = type metadata accessor for Location(0);
      goto LABEL_29;
    case 5u:
      v19 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v7, v19);
      v20 = type metadata accessor for MoonDetailViewState(0);
      v21 = (uint64_t)&v7[*(int *)(v20 + 20)];
      v22 = type metadata accessor for MoonDetailSelectedDate(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22)
        && swift_getEnumCaseMultiPayload(v21) <= 2)
      {
        v23 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
      }
      v24 = (uint64_t)&v7[*(int *)(v20 + 24)];
      v25 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
      goto LABEL_30;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = (int *)type metadata accessor for NewsArticle(0);
      v27 = (uint64_t)&v7[v26[6]];
      v28 = type metadata accessor for URL(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
      v29 = &v7[v26[7]];
      v30 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
      v31 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8);
      v31(&v7[v26[8]], v28);
      v32 = &v7[v26[9]];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = (uint64_t)&v32[*(int *)(type metadata accessor for NewsChannel(0) + 24)];
      if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v28))
        v31((char *)v33, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_30;
    case 7u:
      v34 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v7, v34);
      v35 = (uint64_t)&v7[*(int *)(type metadata accessor for AveragesDetailViewState(0) + 24)];
      v36 = type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
        goto LABEL_30;
      v7 = (char *)(v35 + *(int *)(v36 + 20));
      v8 = type metadata accessor for Date(0);
LABEL_29:
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
LABEL_30:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = (char *)a1 + *(int *)(a2 + 48);
      v39 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      return result;
    case 8u:
      v37 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v7, v37);
      v7 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState(0) + 20);
      v8 = type metadata accessor for LocationOfInterest(0);
      goto LABEL_29;
    default:
      goto LABEL_30;
  }
}

void sub_1002E0E80(uint64_t a1, uint64_t a2)
{
  char *v3;

  type metadata accessor for PreviewLocation(0);
  v3 = (char *)sub_1002E0EE0 + 4 * byte_100993046[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

uint64_t sub_1002E0EE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *__dst, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  __int128 v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t, __n128);
  __n128 v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v171)(char *, char *, uint64_t);
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  int *v176;
  int *v177;
  char *v178;
  uint64_t v179;
  unsigned int EnumCaseMultiPayload;
  uint64_t v181;
  uint64_t v182;

  v28 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
  swift_storeEnumTagMultiPayload(v24, v27, 0);
  v29 = v26[5];
  v30 = (_QWORD *)(v24 + v29);
  v31 = (_QWORD *)(v25 + v29);
  v32 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v31))
  {
    case 0u:
      v33 = type metadata accessor for URL(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
      v34 = v30;
      v35 = v32;
      v36 = 0;
      goto LABEL_33;
    case 1u:
      v37 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v30, v31, v37);
      v38 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v39 = v38[5];
      v40 = (char *)v30 + v39;
      v41 = (char *)v31 + v39;
      v42 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      v43 = v38[6];
      v44 = (char *)v30 + v43;
      v45 = (char *)v31 + v43;
      v46 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        v47 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      v97 = v38[7];
      v98 = (char *)v30 + v97;
      v99 = (char *)v31 + v97;
      v100 = *((_OWORD *)v99 + 1);
      *(_OWORD *)v98 = *(_OWORD *)v99;
      *((_OWORD *)v98 + 1) = v100;
      v98[32] = v99[32];
      v176 = v38;
      v101 = v38[8];
      v102 = (_QWORD *)((char *)v30 + v101);
      v103 = (_QWORD *)((char *)v31 + v101);
      v104 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, (uint64_t)v104))
      {
        v105 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        v132 = v103[1];
        *v102 = *v103;
        v102[1] = v132;
        v133 = v104[5];
        v172 = (char *)v103 + v133;
        v174 = (char *)v102 + v133;
        v182 = v32;
        v134 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v46 - 8) + 16);
        v135 = swift_bridgeObjectRetain(v132);
        v134(v174, v172, v46, v135);
        ((void (*)(char *, char *, uint64_t))v134)((char *)v102 + v104[6], (char *)v103 + v104[6], v46);
        ((void (*)(char *, char *, uint64_t))v134)((char *)v102 + v104[7], (char *)v103 + v104[7], v46);
        v32 = v182;
        *(_QWORD *)((char *)v102 + v104[8]) = *(_QWORD *)((char *)v103 + v104[8]);
        v136 = v104[9];
        v137 = (char *)v102 + v136;
        v138 = (char *)v103 + v136;
        v137[8] = v138[8];
        *(_QWORD *)v137 = *(_QWORD *)v138;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, (uint64_t)v104);
      }
      *((_BYTE *)v30 + v176[9]) = *((_BYTE *)v31 + v176[9]);
      v34 = v30;
      v35 = v32;
      v36 = 1;
      goto LABEL_33;
    case 2u:
      v48 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v30, v31, v48);
      v49 = type metadata accessor for AirQualityDetailViewState(0);
      *((_BYTE *)v30 + *(int *)(v49 + 20)) = *((_BYTE *)v31 + *(int *)(v49 + 20));
      v50 = *(int *)(v49 + 24);
      v51 = (char *)v30 + v50;
      v52 = (char *)v31 + v50;
      v51[32] = v52[32];
      v53 = *((_OWORD *)v52 + 1);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v53;
      v34 = v30;
      v35 = v32;
      v36 = 2;
      goto LABEL_33;
    case 3u:
      v54 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v30, v31, v54);
      v55 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v56 = (char *)v30 + v55;
      v57 = (char *)v31 + v55;
      v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      v56[32] = v57[32];
      v34 = v30;
      v35 = v32;
      v36 = 3;
      goto LABEL_33;
    case 4u:
      v59 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v30, v31, v59);
      v60 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v61 = *(int *)(v60 + 20);
      v62 = (char *)v30 + v61;
      v63 = (char *)v31 + v61;
      v64 = *((_OWORD *)v63 + 1);
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v64;
      v62[32] = v63[32];
      *((_BYTE *)v30 + *(int *)(v60 + 24)) = *((_BYTE *)v31 + *(int *)(v60 + 24));
      v34 = v30;
      v35 = v32;
      v36 = 4;
      goto LABEL_33;
    case 5u:
      v65 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v30, v31, v65);
      v66 = (int *)type metadata accessor for MoonDetailViewState(0);
      v67 = v66[5];
      v68 = (char *)v30 + v67;
      v69 = (char *)v31 + v67;
      v70 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
      {
        v71 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v69);
        v106 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v68, v69, v106);
        swift_storeEnumTagMultiPayload(v68, v70, EnumCaseMultiPayload);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      }
      v107 = v66[6];
      v108 = (char *)v30 + v107;
      v109 = (char *)v31 + v107;
      v110 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
      {
        v111 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
      }
      v139 = v66[7];
      v140 = (char *)v30 + v139;
      v141 = (char *)v31 + v139;
      v142 = *((_OWORD *)v141 + 1);
      *(_OWORD *)v140 = *(_OWORD *)v141;
      *((_OWORD *)v140 + 1) = v142;
      v140[32] = v141[32];
      *((_BYTE *)v30 + v66[8]) = *((_BYTE *)v31 + v66[8]);
      v34 = v30;
      v35 = v32;
      v36 = 5;
      goto LABEL_33;
    case 6u:
      v179 = v32;
      v72 = v31[1];
      *v30 = *v31;
      v30[1] = v72;
      v73 = v31[3];
      v30[2] = v31[2];
      v30[3] = v73;
      v74 = (int *)type metadata accessor for NewsArticle(0);
      v75 = v74[6];
      v175 = (char *)v30 + v75;
      v76 = (char *)v31 + v75;
      v77 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v72);
      swift_bridgeObjectRetain(v73);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
      {
        v78 = sub_1000BA294(&qword_100BD4280);
        memcpy(v175, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v175, v76, v77);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v77);
      }
      v112 = v74[7];
      v113 = (char *)v30 + v112;
      v114 = (char *)v31 + v112;
      v115 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
      v171 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      v171((char *)v30 + v74[8], (char *)v31 + v74[8], v77);
      v177 = v74;
      v116 = v74[9];
      v117 = (_QWORD *)((char *)v30 + v116);
      v118 = (char *)v31 + v116;
      v119 = *(_QWORD *)((char *)v31 + v116 + 8);
      *v117 = *(_QWORD *)((char *)v31 + v116);
      v117[1] = v119;
      v120 = *(_QWORD *)((char *)v31 + v116 + 24);
      v117[2] = *(_QWORD *)((char *)v31 + v116 + 16);
      v117[3] = v120;
      v121 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v173 = (char *)v117 + v121;
      v122 = &v118[v121];
      swift_bridgeObjectRetain(v119);
      swift_bridgeObjectRetain(v120);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v77))
      {
        v123 = sub_1000BA294(&qword_100BD4280);
        memcpy(v173, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        v171(v173, v122, v77);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v77);
      }
      v143 = v177[10];
      v144 = *(_QWORD *)((char *)v31 + v143);
      *(_QWORD *)((char *)v30 + v143) = v144;
      v145 = v177[11];
      v146 = *(_QWORD *)((char *)v31 + v145);
      *(_QWORD *)((char *)v30 + v145) = v146;
      v147 = v177[12];
      v148 = *(_QWORD *)((char *)v31 + v147);
      *(_QWORD *)((char *)v30 + v147) = v148;
      swift_bridgeObjectRetain(v144);
      swift_bridgeObjectRetain(v146);
      swift_bridgeObjectRetain(v148);
      v34 = v30;
      v35 = v179;
      v36 = 6;
      goto LABEL_33;
    case 7u:
      v79 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v30, v31, v79);
      v80 = (int *)type metadata accessor for AveragesDetailViewState(0);
      *((_BYTE *)v30 + v80[5]) = *((_BYTE *)v31 + v80[5]);
      v81 = v80[6];
      v82 = (_QWORD *)((char *)v30 + v81);
      v83 = (_QWORD *)((char *)v31 + v81);
      v84 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, (uint64_t)v84))
      {
        v85 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        *v82 = *v83;
        v124 = v84[5];
        v181 = v32;
        v125 = (char *)v82 + v124;
        v178 = (char *)v83 + v124;
        v126 = type metadata accessor for Date(0);
        v127 = v125;
        v32 = v181;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v127, v178, v126);
        *(_QWORD *)((char *)v82 + v84[6]) = *(_QWORD *)((char *)v83 + v84[6]);
        *(_QWORD *)((char *)v82 + v84[7]) = *(_QWORD *)((char *)v83 + v84[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, (uint64_t)v84);
      }
      v128 = v80[7];
      v129 = (char *)v30 + v128;
      v130 = (char *)v31 + v128;
      v131 = *((_OWORD *)v130 + 1);
      *(_OWORD *)v129 = *(_OWORD *)v130;
      *((_OWORD *)v129 + 1) = v131;
      v129[32] = v130[32];
      v34 = v30;
      v35 = v32;
      v36 = 7;
      goto LABEL_33;
    case 8u:
      v86 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v30, v31, v86);
      v87 = v32;
      v88 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v89 = *(int *)(v88 + 20);
      v90 = (char *)v30 + v89;
      v91 = (char *)v31 + v89;
      v92 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
      v93 = *(int *)(v88 + 24);
      v94 = (char *)v30 + v93;
      v95 = (char *)v31 + v93;
      v96 = *((_OWORD *)v95 + 1);
      *(_OWORD *)v94 = *(_OWORD *)v95;
      *((_OWORD *)v94 + 1) = v96;
      v94[32] = v95[32];
      v34 = v30;
      v35 = v87;
      v36 = 8;
LABEL_33:
      swift_storeEnumTagMultiPayload(v34, v35, v36);
      break;
    default:
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      break;
  }
  v149 = v26[7];
  *(_BYTE *)(v24 + v26[6]) = *(_BYTE *)(v25 + v26[6]);
  v150 = *(_QWORD *)(v25 + v149);
  *(_QWORD *)(v24 + v149) = v150;
  v151 = v26[8];
  v152 = v26[9];
  v153 = *(_QWORD *)(v25 + v151);
  *(_QWORD *)(v24 + v151) = v153;
  *(_BYTE *)(v24 + v152) = *(_BYTE *)(v25 + v152);
  v154 = v26[11];
  *(_BYTE *)(v24 + v26[10]) = *(_BYTE *)(v25 + v26[10]);
  v155 = v24 + v154;
  v156 = v25 + v154;
  *(_BYTE *)v155 = *(_BYTE *)v156;
  v157 = *(_QWORD *)(v156 + 8);
  *(_QWORD *)(v155 + 8) = v157;
  v158 = v26[12];
  v159 = v24 + v158;
  v160 = v25 + v158;
  v161 = type metadata accessor for Date(0);
  v162 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v161 - 8) + 16);
  swift_bridgeObjectRetain(v150);
  swift_bridgeObjectRetain(v153);
  v163 = swift_bridgeObjectRetain(v157);
  v162(v159, v160, v161, v163);
  v164 = v26[14];
  *(_BYTE *)(v24 + v26[13]) = *(_BYTE *)(v25 + v26[13]);
  v165 = (_QWORD *)(v24 + v164);
  v166 = (_QWORD *)(v25 + v164);
  v167 = v166[1];
  *v165 = *v166;
  v165[1] = v167;
  v168 = v166[2];
  v169 = v166[3];
  v165[2] = v168;
  v165[3] = v169;
  swift_bridgeObjectRetain(v167);
  swift_bridgeObjectRetain(v168);
  swift_bridgeObjectRetain(v169);
  return v24;
}

uint64_t sub_1002E1A0C(uint64_t a1, uint64_t a2, int *a3)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1000215BC(a1, type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation(0);
    v6 = (char *)&loc_1002E1A84 + 4 * byte_100993053[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = a3[8];
  v10 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v11 = a3[11];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  v15 = a3[12];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v19 = a3[14];
  v20 = (_QWORD *)(a1 + v19);
  v21 = a2 + v19;
  *v20 = *(_QWORD *)(a2 + v19);
  v22 = *(_QWORD *)(a2 + v19 + 8);
  v20[1] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v21 + 16);
  v20[2] = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v21 + 24);
  v20[3] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1002E2658(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  __int128 v141;
  char *v143;
  int *v144;
  unsigned int v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;

  v6 = type metadata accessor for PreviewLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v12 = type metadata accessor for SearchLocation(0);
    v13 = *(int *)(v12 + 32);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v19 = *(int *)(v12 + 36);
    v20 = &a1[v19];
    v21 = &a2[v19];
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    v9 = a1;
    v10 = v6;
    v11 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v18 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
    v9 = a1;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_12;
    }
    v8 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
LABEL_12:
  v22 = a3[5];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v24))
  {
    case 0u:
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      v27 = v23;
      v28 = v25;
      v29 = 0;
      goto LABEL_44;
    case 1u:
      v30 = type metadata accessor for DetailCondition(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v23, v24, v30);
      v31 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v32 = v31[5];
      v33 = &v23[v32];
      v34 = &v24[v32];
      v35 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      v36 = v31[6];
      v37 = &v23[v36];
      v38 = &v24[v36];
      v39 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        v40 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      }
      v89 = v31[7];
      v90 = &v23[v89];
      v91 = &v24[v89];
      v92 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v92;
      v90[32] = v91[32];
      v144 = v31;
      v93 = v31[8];
      v94 = &v23[v93];
      v95 = &v24[v93];
      v96 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, (uint64_t)v96))
      {
        v97 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v94 = *(_OWORD *)v95;
        v148 = v25;
        v123 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v123(&v94[v96[5]], &v95[v96[5]], v39);
        v123(&v94[v96[6]], &v95[v96[6]], v39);
        v123(&v94[v96[7]], &v95[v96[7]], v39);
        v25 = v148;
        *(_QWORD *)&v94[v96[8]] = *(_QWORD *)&v95[v96[8]];
        v124 = v96[9];
        v125 = &v94[v124];
        v126 = &v95[v124];
        v125[8] = v126[8];
        *(_QWORD *)v125 = *(_QWORD *)v126;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, (uint64_t)v96);
      }
      v23[v144[9]] = v24[v144[9]];
      v27 = v23;
      v28 = v25;
      v29 = 1;
      goto LABEL_44;
    case 2u:
      v41 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v23, v24, v41);
      v42 = type metadata accessor for AirQualityDetailViewState(0);
      v23[*(int *)(v42 + 20)] = v24[*(int *)(v42 + 20)];
      v43 = *(int *)(v42 + 24);
      v44 = &v23[v43];
      v45 = &v24[v43];
      v44[32] = v45[32];
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v27 = v23;
      v28 = v25;
      v29 = 2;
      goto LABEL_44;
    case 3u:
      v47 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v23, v24, v47);
      v48 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v49 = &v23[v48];
      v50 = &v24[v48];
      v51 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v51;
      v49[32] = v50[32];
      v27 = v23;
      v28 = v25;
      v29 = 3;
      goto LABEL_44;
    case 4u:
      v52 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v23, v24, v52);
      v53 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v54 = *(int *)(v53 + 20);
      v55 = &v23[v54];
      v56 = &v24[v54];
      v57 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v57;
      v55[32] = v56[32];
      v23[*(int *)(v53 + 24)] = v24[*(int *)(v53 + 24)];
      v27 = v23;
      v28 = v25;
      v29 = 4;
      goto LABEL_44;
    case 5u:
      v58 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v23, v24, v58);
      v59 = (int *)type metadata accessor for MoonDetailViewState(0);
      v60 = v59[5];
      v61 = &v23[v60];
      v62 = &v24[v60];
      v63 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        v64 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v145 = swift_getEnumCaseMultiPayload(v62);
        v98 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v61, v62, v98);
        swift_storeEnumTagMultiPayload(v61, v63, v145);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
      }
      v99 = v59[6];
      v100 = &v23[v99];
      v101 = &v24[v99];
      v102 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
      {
        v103 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
      }
      v127 = v59[7];
      v128 = &v23[v127];
      v129 = &v24[v127];
      v130 = *((_OWORD *)v129 + 1);
      *(_OWORD *)v128 = *(_OWORD *)v129;
      *((_OWORD *)v128 + 1) = v130;
      v128[32] = v129[32];
      v23[v59[8]] = v24[v59[8]];
      v27 = v23;
      v28 = v25;
      v29 = 5;
      goto LABEL_44;
    case 6u:
      v65 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v65;
      v66 = (int *)type metadata accessor for NewsArticle(0);
      v67 = v66[6];
      v68 = &v23[v67];
      v69 = &v24[v67];
      v70 = type metadata accessor for URL(0);
      v147 = v25;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
      {
        v71 = sub_1000BA294(&qword_100BD4280);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      }
      v104 = v66[7];
      v105 = &v23[v104];
      v106 = &v24[v104];
      v107 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
      v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32);
      v108(&v23[v66[8]], &v24[v66[8]], v70);
      v109 = v66[9];
      v110 = &v23[v109];
      v111 = &v24[v109];
      v112 = *(_OWORD *)&v24[v109 + 16];
      *(_OWORD *)v110 = *(_OWORD *)&v24[v109];
      *((_OWORD *)v110 + 1) = v112;
      v113 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v114 = &v110[v113];
      v115 = &v111[v113];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v70))
      {
        v116 = sub_1000BA294(&qword_100BD4280);
        memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
      }
      else
      {
        v108(v114, v115, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v70);
      }
      *(_QWORD *)&v23[v66[10]] = *(_QWORD *)&v24[v66[10]];
      *(_QWORD *)&v23[v66[11]] = *(_QWORD *)&v24[v66[11]];
      *(_QWORD *)&v23[v66[12]] = *(_QWORD *)&v24[v66[12]];
      v27 = v23;
      v28 = v147;
      v29 = 6;
      goto LABEL_44;
    case 7u:
      v72 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v23, v24, v72);
      v73 = (int *)type metadata accessor for AveragesDetailViewState(0);
      v23[v73[5]] = v24[v73[5]];
      v74 = v73[6];
      v75 = &v23[v74];
      v76 = &v24[v74];
      v77 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, (uint64_t)v77))
      {
        v78 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v117 = v77[5];
        v143 = &v76[v117];
        v146 = &v75[v117];
        v118 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v146, v143, v118);
        *(_QWORD *)&v75[v77[6]] = *(_QWORD *)&v76[v77[6]];
        *(_QWORD *)&v75[v77[7]] = *(_QWORD *)&v76[v77[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
      }
      v119 = v73[7];
      v120 = &v23[v119];
      v121 = &v24[v119];
      v122 = *((_OWORD *)v121 + 1);
      *(_OWORD *)v120 = *(_OWORD *)v121;
      *((_OWORD *)v120 + 1) = v122;
      v120[32] = v121[32];
      v27 = v23;
      v28 = v25;
      v29 = 7;
      goto LABEL_44;
    case 8u:
      v79 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v23, v24, v79);
      v80 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v81 = *(int *)(v80 + 20);
      v82 = &v23[v81];
      v83 = &v24[v81];
      v84 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
      v85 = *(int *)(v80 + 24);
      v86 = &v23[v85];
      v87 = &v24[v85];
      v88 = *((_OWORD *)v87 + 1);
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v88;
      v86[32] = v87[32];
      v27 = v23;
      v28 = v25;
      v29 = 8;
LABEL_44:
      swift_storeEnumTagMultiPayload(v27, v28, v29);
      break;
    default:
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      break;
  }
  v131 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v131] = *(_QWORD *)&a2[v131];
  v132 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[v132] = a2[v132];
  v133 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_OWORD *)&a1[v133] = *(_OWORD *)&a2[v133];
  v134 = a3[12];
  v135 = &a1[v134];
  v136 = &a2[v134];
  v137 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(v135, v136, v137);
  v138 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v139 = &a1[v138];
  v140 = &a2[v138];
  v141 = *((_OWORD *)v140 + 1);
  *(_OWORD *)v139 = *(_OWORD *)v140;
  *((_OWORD *)v139 + 1) = v141;
  return a1;
}

char *sub_1002E30EC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v145;
  int *v146;
  unsigned int v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;

  if (a1 == a2)
    goto LABEL_46;
  sub_1000215BC((uint64_t)a1, type metadata accessor for PreviewLocation);
  v6 = type metadata accessor for PreviewLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v12 = type metadata accessor for SearchLocation(0);
    v13 = *(int *)(v12 + 32);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v19 = *(int *)(v12 + 36);
    v20 = &a1[v19];
    v21 = &a2[v19];
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    v9 = a1;
    v10 = v6;
    v11 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v18 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
    v9 = a1;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_13;
    }
    v8 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
LABEL_13:
  v22 = a3[5];
  v23 = &a1[v22];
  v24 = &a2[v22];
  sub_1000215BC((uint64_t)&a1[v22], type metadata accessor for LocationPreviewModalViewState);
  v25 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v24))
  {
    case 0u:
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      v27 = v23;
      v28 = v25;
      v29 = 0;
      goto LABEL_45;
    case 1u:
      v30 = type metadata accessor for DetailCondition(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v23, v24, v30);
      v31 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v32 = v31[5];
      v33 = &v23[v32];
      v34 = &v24[v32];
      v35 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      v36 = v31[6];
      v37 = &v23[v36];
      v38 = &v24[v36];
      v39 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        v40 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      }
      v89 = v31[7];
      v90 = &v23[v89];
      v91 = &v24[v89];
      v92 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v92;
      v90[32] = v91[32];
      v146 = v31;
      v93 = v31[8];
      v94 = &v23[v93];
      v95 = &v24[v93];
      v96 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, (uint64_t)v96))
      {
        v97 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v94 = *(_OWORD *)v95;
        v150 = v25;
        v123 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v123(&v94[v96[5]], &v95[v96[5]], v39);
        v123(&v94[v96[6]], &v95[v96[6]], v39);
        v123(&v94[v96[7]], &v95[v96[7]], v39);
        v25 = v150;
        *(_QWORD *)&v94[v96[8]] = *(_QWORD *)&v95[v96[8]];
        v124 = v96[9];
        v125 = &v94[v124];
        v126 = &v95[v124];
        v125[8] = v126[8];
        *(_QWORD *)v125 = *(_QWORD *)v126;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, (uint64_t)v96);
      }
      v23[v146[9]] = v24[v146[9]];
      v27 = v23;
      v28 = v25;
      v29 = 1;
      goto LABEL_45;
    case 2u:
      v41 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v23, v24, v41);
      v42 = type metadata accessor for AirQualityDetailViewState(0);
      v23[*(int *)(v42 + 20)] = v24[*(int *)(v42 + 20)];
      v43 = *(int *)(v42 + 24);
      v44 = &v23[v43];
      v45 = &v24[v43];
      v44[32] = v45[32];
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v27 = v23;
      v28 = v25;
      v29 = 2;
      goto LABEL_45;
    case 3u:
      v47 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v23, v24, v47);
      v48 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v49 = &v23[v48];
      v50 = &v24[v48];
      v51 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v51;
      v49[32] = v50[32];
      v27 = v23;
      v28 = v25;
      v29 = 3;
      goto LABEL_45;
    case 4u:
      v52 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v23, v24, v52);
      v53 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v54 = *(int *)(v53 + 20);
      v55 = &v23[v54];
      v56 = &v24[v54];
      v57 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v57;
      v55[32] = v56[32];
      v23[*(int *)(v53 + 24)] = v24[*(int *)(v53 + 24)];
      v27 = v23;
      v28 = v25;
      v29 = 4;
      goto LABEL_45;
    case 5u:
      v58 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v23, v24, v58);
      v59 = (int *)type metadata accessor for MoonDetailViewState(0);
      v60 = v59[5];
      v61 = &v23[v60];
      v62 = &v24[v60];
      v63 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        v64 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v147 = swift_getEnumCaseMultiPayload(v62);
        v98 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v61, v62, v98);
        swift_storeEnumTagMultiPayload(v61, v63, v147);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
      }
      v99 = v59[6];
      v100 = &v23[v99];
      v101 = &v24[v99];
      v102 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
      {
        v103 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
      }
      v127 = v59[7];
      v128 = &v23[v127];
      v129 = &v24[v127];
      v130 = *((_OWORD *)v129 + 1);
      *(_OWORD *)v128 = *(_OWORD *)v129;
      *((_OWORD *)v128 + 1) = v130;
      v128[32] = v129[32];
      v23[v59[8]] = v24[v59[8]];
      v27 = v23;
      v28 = v25;
      v29 = 5;
      goto LABEL_45;
    case 6u:
      v65 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v65;
      v66 = (int *)type metadata accessor for NewsArticle(0);
      v67 = v66[6];
      v68 = &v23[v67];
      v69 = &v24[v67];
      v70 = type metadata accessor for URL(0);
      v149 = v25;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
      {
        v71 = sub_1000BA294(&qword_100BD4280);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      }
      v104 = v66[7];
      v105 = &v23[v104];
      v106 = &v24[v104];
      v107 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
      v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32);
      v108(&v23[v66[8]], &v24[v66[8]], v70);
      v109 = v66[9];
      v110 = &v23[v109];
      v111 = &v24[v109];
      v112 = *(_OWORD *)&v24[v109 + 16];
      *(_OWORD *)v110 = *(_OWORD *)&v24[v109];
      *((_OWORD *)v110 + 1) = v112;
      v113 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v114 = &v110[v113];
      v115 = &v111[v113];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v70))
      {
        v116 = sub_1000BA294(&qword_100BD4280);
        memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
      }
      else
      {
        v108(v114, v115, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v70);
      }
      *(_QWORD *)&v23[v66[10]] = *(_QWORD *)&v24[v66[10]];
      *(_QWORD *)&v23[v66[11]] = *(_QWORD *)&v24[v66[11]];
      *(_QWORD *)&v23[v66[12]] = *(_QWORD *)&v24[v66[12]];
      v27 = v23;
      v28 = v149;
      v29 = 6;
      goto LABEL_45;
    case 7u:
      v72 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v23, v24, v72);
      v73 = (int *)type metadata accessor for AveragesDetailViewState(0);
      v23[v73[5]] = v24[v73[5]];
      v74 = v73[6];
      v75 = &v23[v74];
      v76 = &v24[v74];
      v77 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, (uint64_t)v77))
      {
        v78 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v117 = v77[5];
        v145 = &v76[v117];
        v148 = &v75[v117];
        v118 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v148, v145, v118);
        *(_QWORD *)&v75[v77[6]] = *(_QWORD *)&v76[v77[6]];
        *(_QWORD *)&v75[v77[7]] = *(_QWORD *)&v76[v77[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
      }
      v119 = v73[7];
      v120 = &v23[v119];
      v121 = &v24[v119];
      v122 = *((_OWORD *)v121 + 1);
      *(_OWORD *)v120 = *(_OWORD *)v121;
      *((_OWORD *)v120 + 1) = v122;
      v120[32] = v121[32];
      v27 = v23;
      v28 = v25;
      v29 = 7;
      goto LABEL_45;
    case 8u:
      v79 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v23, v24, v79);
      v80 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v81 = *(int *)(v80 + 20);
      v82 = &v23[v81];
      v83 = &v24[v81];
      v84 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
      v85 = *(int *)(v80 + 24);
      v86 = &v23[v85];
      v87 = &v24[v85];
      v88 = *((_OWORD *)v87 + 1);
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v88;
      v86[32] = v87[32];
      v27 = v23;
      v28 = v25;
      v29 = 8;
LABEL_45:
      swift_storeEnumTagMultiPayload(v27, v28, v29);
      break;
    default:
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      break;
  }
LABEL_46:
  v131 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v131] = *(_QWORD *)&a2[v131];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  v132 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v132] = a2[v132];
  v133 = a3[11];
  v134 = &a1[v133];
  v135 = &a2[v133];
  *v134 = *v135;
  *((_QWORD *)v134 + 1) = *((_QWORD *)v135 + 1);
  swift_bridgeObjectRelease();
  v136 = a3[12];
  v137 = &a1[v136];
  v138 = &a2[v136];
  v139 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 40))(v137, v138, v139);
  v140 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v141 = &a1[v140];
  v142 = &a2[v140];
  v143 = *((_QWORD *)v142 + 1);
  *(_QWORD *)v141 = *(_QWORD *)v142;
  *((_QWORD *)v141 + 1) = v143;
  swift_bridgeObjectRelease();
  *((_QWORD *)v141 + 2) = *((_QWORD *)v142 + 2);
  swift_bridgeObjectRelease();
  *((_QWORD *)v141 + 3) = *((_QWORD *)v142 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002E3BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E3C08);
}

void sub_1002E3C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_10007A020();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v9 = sub_1000D05BC();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      if ((_DWORD)v3 == 0x7FFFFFFF)
      {
        sub_100079F70();
        return;
      }
      v7 = sub_100098778();
      v10 = *(int *)(a3 + 48);
    }
    v8 = v4 + v10;
  }
  _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_1002E3CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E3CB8);
}

uint64_t sub_1002E3CB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_10007A020();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    result = sub_1000D05BC();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(v5 + a4[7]) = (v4 - 1);
        return result;
      }
      v9 = sub_100098778();
      v12 = a4[12];
    }
    v10 = v5 + v12;
  }
  return sub_1000987C4(v10, v4, v4, v9);
}

uint64_t sub_1002E3D58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  result = type metadata accessor for PreviewLocation(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for LocationPreviewModalViewState(319);
    if (v4 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      v6[2] = &unk_100993100;
      v6[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[5] = &unk_100993100;
      v6[6] = &unk_100993100;
      v6[7] = &unk_100993118;
      result = type metadata accessor for Date(319);
      if (v5 <= 0x3F)
      {
        v6[8] = *(_QWORD *)(result - 8) + 64;
        v6[9] = &unk_100993100;
        v6[10] = &unk_100993130;
        swift_initStructMetadata(a1, 256, 11, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1002E3E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E3E74(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  __n128 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v37 = a7;
  v38 = a8;
  v35 = a4;
  v36 = a5;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchTime(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v35 - v21;
  v23 = sub_10009FFE0();
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  static DispatchTime.now()(v24);
  + infix(_:_:)(v19);
  v39 = *(void (**)(char *, uint64_t))(v17 + 8);
  v39(v19, v16);
  v25 = swift_allocObject(&unk_100B6BF40, 64, 7);
  v26 = v36;
  *(_QWORD *)(v25 + 16) = v35;
  *(_QWORD *)(v25 + 24) = v26;
  *(double *)(v25 + 32) = a1;
  v27 = v37;
  v28 = v38;
  *(_QWORD *)(v25 + 40) = a6;
  *(_QWORD *)(v25 + 48) = v27;
  *(_QWORD *)(v25 + 56) = v28;
  aBlock[4] = sub_1002E4184;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100121D84;
  aBlock[3] = &unk_100B6BF58;
  v29 = _Block_copy(aBlock);
  swift_unknownObjectRetain(a6);
  swift_retain();
  v30 = swift_release();
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = _swiftEmptyArrayStorage;
  v31 = sub_1001221E0();
  v32 = sub_1000BA294(&qword_100BD4F10);
  v33 = sub_100121014();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v10, v31);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v22, v15, v12, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v41);
  return ((uint64_t (*)(char *, uint64_t))v39)(v22, v16);
}

void sub_1002E410C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, double a6)
{
  uint64_t v6;

  v6 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    swift_getObjectType(a3);
    sub_1002E4198(v6, a3, a4, a5, a1, a6);
  }
}

void sub_1002E4184()
{
  uint64_t v0;

  sub_1002E410C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40), *(void (**)(void))(v0 + 48), *(_QWORD *)(v0 + 56), *(double *)(v0 + 32));
}

void sub_1002E4198(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, double a6)
{
  void *ObjCClassFromMetadata;
  uint64_t v13;
  void *v14;
  _QWORD v15[6];

  if (a1)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(a5);
    v13 = swift_allocObject(&unk_100B6BF90, 64, 7);
    *(double *)(v13 + 16) = a6;
    *(_QWORD *)(v13 + 24) = a5;
    *(_QWORD *)(v13 + 32) = a1;
    *(_QWORD *)(v13 + 40) = a2;
    *(_QWORD *)(v13 + 48) = a3;
    *(_QWORD *)(v13 + 56) = a4;
    v15[4] = sub_1002E42A8;
    v15[5] = v13;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1006DBBB0;
    v15[3] = &unk_100B6BFA8;
    v14 = _Block_copy(v15);
    swift_unknownObjectRetain(a2);
    swift_retain();
    objc_msgSend(ObjCClassFromMetadata, "runTestWithParameters:resultHandler:", a2, v14, swift_release().n128_f64[0]);
    _Block_release(v14);
  }
  else
  {
    a3();
  }
}

uint64_t sub_1002E42A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E3E74(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(double *)(v2 + 16));
}

uint64_t *sub_1002E42C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    a1[1] = a2[1];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Date(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1002E4364(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_1002E43AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v5 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain(v5);
  v10(v7, v8, v9);
  return a1;
}

uint64_t *sub_1002E441C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[1] = a2[1];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *sub_1002E4498(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_1002E44F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  a1[1] = a2[1];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1002E4568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E4574);
}

uint64_t sub_1002E4574(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1002E45E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E45F4);
}

_QWORD *sub_1002E45F4(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    return (_QWORD *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1002E4660(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  sub_1009497FC();
  if ((v4 & 1) == 0 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
    return 0;
  v5 = *(int *)(type metadata accessor for SevereAlertComponent(0) + 24);
  return static Date.== infix(_:_:)(a1 + v5, a2 + v5);
}

uint64_t sub_1002E46C4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v9;

  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73746E657665, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000012)
  {
    v7 = 0x80000001009F9C80;
    if (a2 == 0x80000001009F9C80)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001009F9C80, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0x44746E6572727563 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease(0xEB00000000657461);
    return 2;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x44746E6572727563, 0xEB00000000657461, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1002E481C(char a1)
{
  if (!a1)
    return 0x73746E657665;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0x44746E6572727563;
}

uint64_t sub_1002E487C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100BD4FD8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1002E4D58();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SevereAlertComponent.CodingKeys, &type metadata for SevereAlertComponent.CodingKeys, v10, v8, v9);
  v21 = *v4;
  v20 = 0;
  v11 = sub_1000BA294(&qword_100BD4FC0);
  v12 = sub_1002E4E14(&qword_100BD4FE0, &qword_100BD4FE8, (uint64_t)&protocol conformance descriptor for WeatherAlert, (uint64_t)&protocol conformance descriptor for <A> [A]);
  sub_1000C26D4((uint64_t)&v21, (uint64_t)&v20, v6, v11, v12);
  if (!v2)
  {
    v13 = v4[1];
    v19 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, &v19, v6);
    v14 = (uint64_t)v4 + *(int *)(type metadata accessor for SevereAlertComponent(0) + 24);
    v18 = 2;
    v15 = type metadata accessor for Date(0);
    v16 = sub_100051B90(&qword_100BC3578, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    sub_1000C26D4(v14, (uint64_t)&v18, v6, v15, v16);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

void sub_1002E4A1C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;

  v23 = a2;
  v4 = type metadata accessor for Date(0);
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  __chkstk_darwin(v4);
  sub_100079FBC();
  v26 = sub_1000BA294(&qword_100BD4FB0);
  v5 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SevereAlertComponent(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1002E4D58();
  v27 = v7;
  v14 = v28;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SevereAlertComponent.CodingKeys, &type metadata for SevereAlertComponent.CodingKeys, v13, v11, v12);
  if (v14)
  {
    sub_1000C2760();
  }
  else
  {
    v22 = v8;
    v15 = v10;
    v28 = v2;
    v16 = v24;
    v17 = v25;
    v18 = sub_1000BA294(&qword_100BD4FC0);
    v31 = 0;
    sub_1002E4E14(&qword_100BD4FC8, &qword_100BD4FD0, (uint64_t)&protocol conformance descriptor for WeatherAlert, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v19 = v26;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v18, &v31, v26);
    *(_QWORD *)v15 = v32;
    v30 = 1;
    *((_QWORD *)v15 + 1) = KeyedDecodingContainer.decode(_:forKey:)(&v30, v19);
    v29 = 2;
    sub_100051B90(&qword_100BC3558, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v20 = v27;
    v21 = v28;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v17, &v29, v19);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&v15[*(int *)(v22 + 24)], v21, v17);
    sub_1002E4D94((uint64_t)v15, v23);
    sub_1000C2760();
    sub_1002E4DD8((uint64_t)v15);
  }
}

uint64_t sub_1002E4CB0()
{
  char *v0;

  return sub_1002E481C(*v0);
}

uint64_t sub_1002E4CB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002E46C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002E4CDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E4D58();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E4D04(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E4D58();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002E4D2C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002E4A1C(a1, a2);
}

uint64_t sub_1002E4D40(_QWORD *a1)
{
  return sub_1002E487C(a1);
}

unint64_t sub_1002E4D58()
{
  unint64_t result;

  result = qword_100BD4FB8;
  if (!qword_100BD4FB8)
  {
    result = swift_getWitnessTable(&unk_100993314, &type metadata for SevereAlertComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4FB8);
  }
  return result;
}

uint64_t sub_1002E4D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SevereAlertComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E4DD8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SevereAlertComponent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002E4E14(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_100075EB0(&qword_100BD4FC0);
    sub_100051B90(a2, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherAlert, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SevereAlertComponent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002E4EE4 + 4 * byte_1009931B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002E4F18 + 4 * byte_1009931B0[v4]))();
}

uint64_t sub_1002E4F18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E4F20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002E4F28);
  return result;
}

uint64_t sub_1002E4F34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002E4F3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002E4F40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E4F48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SevereAlertComponent.CodingKeys()
{
  return &type metadata for SevereAlertComponent.CodingKeys;
}

unint64_t sub_1002E4F68()
{
  unint64_t result;

  result = qword_100BD4FF0;
  if (!qword_100BD4FF0)
  {
    result = swift_getWitnessTable(&unk_1009932EC, &type metadata for SevereAlertComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4FF0);
  }
  return result;
}

unint64_t sub_1002E4FA8()
{
  unint64_t result;

  result = qword_100BD4FF8;
  if (!qword_100BD4FF8)
  {
    result = swift_getWitnessTable(&unk_10099325C, &type metadata for SevereAlertComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD4FF8);
  }
  return result;
}

unint64_t sub_1002E4FE8()
{
  unint64_t result;

  result = qword_100BD5000;
  if (!qword_100BD5000)
  {
    result = swift_getWitnessTable(&unk_100993284, &type metadata for SevereAlertComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5000);
  }
  return result;
}

void sub_1002E5024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_1000986FC();
  v20 = v4;
  sub_10009D2A4();
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v19 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v19 = v17;
  swift_release(v16);
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_map);
  sub_1000BD32C();
  sub_1000C5218();
  _s7Weather24LocationCompositionStateOwst_0(v15, 0, 1, v2);
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_airQuality);
  sub_1000BD32C();
  sub_1000C5218();
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_nextHourPrecipitation);
  sub_1000BD32C();
  sub_1000C5218();
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_severeAlert);
  v18 = v20;
  sub_1000BD32C();
  sub_1000C5218();
  sub_1001F20D8(v19, v15, v10, v8, v18);
  sub_100098640();
}

void sub_1002E51CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 *v78;
  __n128 *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __n128 *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  _BYTE v137[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000878BC();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = a1;
  v12 = a1 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_map, (uint64_t)v137);
  sub_10003773C(v12, v5, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6) == 1)
  {
    sub_100021A14(v5, &qword_100BC4A98);
    v13 = sub_1000BA294(&qword_100BCC750);
    v14 = swift_allocObject(v13, 272, 7);
    *(_OWORD *)(v14 + 16) = xmmword_10097FA60;
    v15 = sub_1000BA294(&qword_100BCC758);
    v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v17 = v16 + *(_QWORD *)(v7 + 72);
    v18 = *(_QWORD *)(v7 + 72);
    v19 = v15;
    v20 = (__n128 *)sub_1000C2514(v15, v17);
    v21 = sub_100099954(v20, (__n128)xmmword_10097CA50);
    v22 = v11;
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_severeAlert, (uint64_t)v21 + v16);
    *(_QWORD *)(v14 + 32) = sub_1000B4580();
    *(_QWORD *)(v14 + 40) = v23;
    *(_QWORD *)(v14 + 48) = v24;
    v25 = sub_1000C2514(v19, v17);
    *(_OWORD *)(v25 + 16) = v136;
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_nextHourPrecipitation, v25 + v16);
    *(_QWORD *)(v14 + 56) = sub_1000B4580();
    *(_QWORD *)(v14 + 64) = v26;
    *(_QWORD *)(v14 + 72) = v27;
    v28 = (__n128 *)sub_1000C2514(v19, v17);
    sub_1000BD314(v28);
    sub_10009D3BC(v29 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v30);
    *(_QWORD *)(v14 + 80) = sub_1000B4580();
    *(_QWORD *)(v14 + 88) = v31;
    *(_QWORD *)(v14 + 96) = v32;
    v33 = (__n128 *)sub_1000C2514(v19, v17);
    sub_1000BD314(v33);
    sub_10009D3BC(v34 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v35);
    *(_QWORD *)(v14 + 104) = sub_1000B4580();
    *(_QWORD *)(v14 + 112) = v36;
    *(_QWORD *)(v14 + 120) = v37;
    v38 = sub_1000C2514(v19, v17);
    *(_OWORD *)(v38 + 16) = v136;
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_airQuality, v38 + v16);
    *(_QWORD *)(v14 + 128) = sub_100080C44(v38);
    *(_QWORD *)(v14 + 136) = v39;
    *(_QWORD *)(v14 + 144) = v40;
    v41 = v18;
    v133 = v16 + 2 * v18;
    v42 = (__n128 *)sub_1000C2514(v19, v133);
    v43 = (char *)sub_100099954(v42, (__n128)xmmword_10097DA20) + v16;
    v44 = *(_QWORD *)(v11 + 16);
    v45 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1000C3608(v45, v46);
    sub_1000C3608(v44 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v43[v41]);
    *(_QWORD *)(v14 + 152) = sub_1000B4580();
    *(_QWORD *)(v14 + 160) = v47;
    *(_QWORD *)(v14 + 168) = v48;
    v49 = (__n128 *)sub_1000C2514(v19, v133);
    sub_100098A24(v49);
    v132 = v22;
    v50 = *(_QWORD *)(v22 + 16);
    v51 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10008611C(v51, v52);
    sub_10008611C(v50 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v43[v41]);
    *(_QWORD *)(v14 + 176) = sub_1000B4580();
    *(_QWORD *)(v14 + 184) = v53;
    *(_QWORD *)(v14 + 192) = v54;
    v55 = (__n128 *)sub_1000C2514(v19, v133);
    sub_100098A24(v55);
    v56 = *(_QWORD *)(v22 + 16);
    v57 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1000C3608(v57, v58);
    sub_100095B78(v56 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v43[v41], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v14 + 200) = sub_1000B4580();
    *(_QWORD *)(v14 + 208) = v59;
    *(_QWORD *)(v14 + 216) = v60;
    v61 = (__n128 *)sub_1000C2514(v19, v133);
    sub_100098A24(v61);
    v62 = *(_QWORD *)(v22 + 16);
    v63 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_100098A1C(v63, v64);
    sub_100098A1C(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v43[v41]);
    *(_QWORD *)(v14 + 224) = sub_1000B4580();
    *(_QWORD *)(v14 + 232) = v65;
    *(_QWORD *)(v14 + 240) = v66;
    v67 = sub_1000C2514(v19, v133);
    *(_OWORD *)(v67 + 16) = v136;
    v68 = *(_QWORD *)(v132 + 16);
    sub_100098A1C(v68 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v67 + v16);
    sub_100098A1C(v68 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v67 + v16 + v41);
    *(_QWORD *)(v14 + 248) = sub_100080C44(v67);
    *(_QWORD *)(v14 + 256) = v69;
    *(_QWORD *)(v14 + 264) = v70;
  }
  else
  {
    sub_10007C77C(v5, v10, type metadata accessor for LocationComponentContainerViewModel);
    v71 = sub_1000BA294(&qword_100BCC750);
    v72 = swift_allocObject(v71, 296, 7);
    *(_OWORD *)(v72 + 16) = xmmword_100989890;
    v73 = sub_1000BA294(&qword_100BCC758);
    v135 = *(_QWORD *)(v7 + 72);
    v74 = *(unsigned __int8 *)(v7 + 80);
    v75 = (v74 + 32) & ~v74;
    v76 = v74 | 7;
    v77 = v73;
    v78 = (__n128 *)sub_1000C3600(v73, v75 + v135);
    v79 = sub_100099954(v78, (__n128)xmmword_10097CA50);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_severeAlert, (uint64_t)v79 + v75);
    *(_QWORD *)(v72 + 32) = sub_1000B4588();
    *(_QWORD *)(v72 + 40) = v80;
    *(_QWORD *)(v72 + 48) = v81;
    v82 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v82);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_nextHourPrecipitation, v83);
    *(_QWORD *)(v72 + 56) = sub_1000B4588();
    *(_QWORD *)(v72 + 64) = v84;
    *(_QWORD *)(v72 + 72) = v85;
    v86 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v86);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v88);
    *(_QWORD *)(v72 + 80) = sub_1000B4588();
    *(_QWORD *)(v72 + 88) = v89;
    *(_QWORD *)(v72 + 96) = v90;
    v91 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v91);
    sub_1000B4590(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v93);
    *(_QWORD *)(v72 + 104) = sub_1000B4588();
    *(_QWORD *)(v72 + 112) = v94;
    *(_QWORD *)(v72 + 120) = v95;
    v96 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v96);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_airQuality, v97);
    *(_QWORD *)(v72 + 128) = sub_1000B4588();
    *(_QWORD *)(v72 + 136) = v98;
    *(_QWORD *)(v72 + 144) = v99;
    v100 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v100);
    sub_1000B4590(v10, v101);
    *(_QWORD *)(v72 + 152) = sub_1000B4580();
    *(_QWORD *)(v72 + 160) = v102;
    *(_QWORD *)(v72 + 168) = v103;
    v134 = v75 + 2 * v135;
    v104 = (__n128 *)swift_allocObject(v77, v134, v76);
    v105 = (char *)sub_100099954(v104, (__n128)xmmword_10097DA20) + v75;
    v106 = *(_QWORD *)(a1 + 16);
    v107 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1000C3608(v107, v108);
    sub_1000C3608(v106 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v105[v135]);
    *(_QWORD *)(v72 + 176) = sub_1000B4588();
    *(_QWORD *)(v72 + 184) = v109;
    *(_QWORD *)(v72 + 192) = v110;
    v111 = (__n128 *)sub_1000C3600(v77, v134);
    sub_1000C0D34(v111);
    v112 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_100098A1C(v112, v113);
    sub_100098A1C(v106 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v105[v135]);
    *(_QWORD *)(v72 + 200) = sub_1000B4588();
    *(_QWORD *)(v72 + 208) = v114;
    *(_QWORD *)(v72 + 216) = v115;
    v116 = (__n128 *)sub_1000C3600(v77, v134);
    sub_1000C0D34(v116);
    v117 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1000C3608(v117, v118);
    sub_1000C3608(v106 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v105[v135]);
    *(_QWORD *)(v72 + 224) = sub_1000B4588();
    *(_QWORD *)(v72 + 232) = v119;
    *(_QWORD *)(v72 + 240) = v120;
    v121 = sub_1000C3600(v77, v134);
    *(_OWORD *)(v121 + 16) = v136;
    v122 = v121 + v75;
    v123 = *(_QWORD *)(a1 + 16);
    v124 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10008611C(v124, v125);
    sub_10008611C(v123 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v122 + v135);
    *(_QWORD *)(v72 + 248) = sub_1000B4588();
    *(_QWORD *)(v72 + 256) = v126;
    *(_QWORD *)(v72 + 264) = v127;
    v128 = sub_1000C3600(v77, v134);
    *(_OWORD *)(v128 + 16) = v136;
    v129 = *(_QWORD *)(a1 + 16);
    sub_100095B78(v129 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v128 + v75, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v129 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v128 + v75 + v135, type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v72 + 272) = sub_100080C44(v128);
    *(_QWORD *)(v72 + 280) = v130;
    *(_QWORD *)(v72 + 288) = v131;
    sub_1000215BC(v10, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_1002E59A4(char a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94[32];

  v93 = a3;
  v5 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v92 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  v91 = (uint64_t)&v68 - v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  v90 = (uint64_t)&v68 - v11;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v68 - v20;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_1000986FC();
  v89 = v23;
  sub_10009D2A4();
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v68 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v68 - v31;
  if (a1)
  {
    if (a1 == 1)
    {
      if ((a2 & 1) != 0)
      {
        v33 = &qword_100BD5418;
        goto LABEL_11;
      }
    }
    else if ((a2 & 1) != 0)
    {
      v33 = &qword_100BD5828;
      goto LABEL_11;
    }
    v33 = &qword_100BD5620;
  }
  else if ((a2 & 1) != 0)
  {
    v33 = &qword_100BD5008;
  }
  else
  {
    v33 = &qword_100BD5210;
  }
LABEL_11:
  v34 = *((_BYTE *)v33 + 224);
  v76 = *v33;
  v75 = v33[1];
  v74 = v33[2];
  v73 = v33[3];
  v35 = v33[8];
  v79 = v33[9];
  v80 = v35;
  v36 = v33[10];
  v77 = v33[11];
  v78 = v36;
  v37 = v33[24];
  v72 = v33[25];
  v71 = v33[26];
  v70 = v33[27];
  v38 = v33[53];
  v83 = v33[54];
  v84 = v38;
  v39 = v33[55];
  v81 = v33[56];
  v82 = v39;
  v40 = v33[61];
  v87 = v33[62];
  v88 = v40;
  v41 = v93 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_map;
  v43 = v33[63];
  v42 = v33[64];
  v85 = v43;
  v86 = v42;
  sub_1000992EC(v93 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_map, (uint64_t)v94);
  sub_10003773C(v41, v15, &qword_100BC4A98);
  v44 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v44) == 1)
  {
    sub_100021A14(v15, &qword_100BC4A98);
LABEL_16:
    v45 = 1;
    goto LABEL_17;
  }
  v69 = v37;
  sub_10009D3BC(v15 + *(int *)(v44 + 20), (uint64_t)v18);
  sub_1000215BC(v15, type metadata accessor for LocationComponentContainerViewModel);
  sub_10007C77C((uint64_t)v18, (uint64_t)v21, type metadata accessor for LocationComponentViewModel);
  if ((v34 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v21, type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10007C77C((uint64_t)v21, (uint64_t)v29, type metadata accessor for LocationComponentViewModel);
  v45 = 0;
  v46 = &v29[*(int *)(v5 + 20)];
  v47 = v72;
  *(_QWORD *)v46 = v69;
  *((_QWORD *)v46 + 1) = v47;
  v48 = v70;
  *((_QWORD *)v46 + 2) = v71;
  *((_QWORD *)v46 + 3) = v48;
LABEL_17:
  sub_1000988B8((uint64_t)v29, v45);
  sub_1002228F0((uint64_t)v29, (uint64_t)v32);
  sub_10009D3BC(v93 + *(int *)(v44 + 20) + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_airQuality, (uint64_t)v26);
  v49 = &v26[*(int *)(v5 + 20)];
  v50 = v75;
  *(_QWORD *)v49 = v76;
  *((_QWORD *)v49 + 1) = v50;
  v51 = v73;
  *((_QWORD *)v49 + 2) = v74;
  *((_QWORD *)v49 + 3) = v51;
  sub_1000988B8((uint64_t)v26, 0);
  v52 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v53 = v90;
  sub_10009D3BC(v52, v90);
  v54 = (uint64_t *)(v53 + *(int *)(v5 + 20));
  v55 = v79;
  *v54 = v80;
  v54[1] = v55;
  v56 = v77;
  v54[2] = v78;
  v54[3] = v56;
  v57 = v89;
  sub_10003773C((uint64_t)v32, v89, &qword_100BCC760);
  v58 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v59 = v91;
  sub_10009D3BC(v58, v91);
  v60 = (uint64_t *)(v59 + *(int *)(v5 + 20));
  v61 = v83;
  *v60 = v84;
  v60[1] = v61;
  v62 = v81;
  v60[2] = v82;
  v60[3] = v62;
  v63 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v64 = v92;
  sub_10009D3BC(v63, v92);
  v65 = (uint64_t *)(v64 + *(int *)(v5 + 20));
  v66 = v87;
  *v65 = v88;
  v65[1] = v66;
  v67 = v86;
  v65[2] = v85;
  v65[3] = v67;
  sub_10087CED0((uint64_t)v26, v53, v57, v59, v64);
  sub_100021A14((uint64_t)v32, &qword_100BCC760);
  sub_100098640();
}

uint64_t sub_1002E5E94(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E5EBC();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1002E5EBC()
{
  unint64_t result;

  result = qword_100BD5A48;
  if (!qword_100BD5A48)
  {
    result = swift_getWitnessTable(&unk_100993398, &type metadata for NetworkAction);
    atomic_store(result, (unint64_t *)&qword_100BD5A48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkAction(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  if (v6 <= 1)
    v5 = -1;
  else
    v5 = v6 ^ 0xFF;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkAction(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002E5FD4 + 4 * byte_100993369[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1002E6008 + 4 * byte_100993364[v4]))();
}

uint64_t sub_1002E6008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1002E6010(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1002E6018);
  return result;
}

uint64_t sub_1002E6024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1002E602CLL);
  *(_BYTE *)(result + 1) = -(char)a2;
  return result;
}

uint64_t sub_1002E6030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1002E6038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1002E6044(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1);
}

uint64_t sub_1002E604C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 1) = a2 & 1;
  return result;
}

uint64_t sub_1002E6058(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = sub_100099264(v4, v5, *a2, v6), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14 || (v15 = sub_100099264(v10, v11, v12, v13), result = 0, (v15 & 1) != 0))
    {
      v16 = a1[4];
      v17 = a1[5];
      v18 = a2[4];
      v19 = a2[5];
      v20 = v16 == v18 && v17 == v19;
      if (v20 || (v21 = sub_100099264(v16, v17, v18, v19), result = 0, (v21 & 1) != 0))
      {
        v22 = a1[6];
        v23 = a1[7];
        v24 = a2[6];
        if (v22 == v24 && v23 == a2[7])
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v24);
      }
    }
  }
  return result;
}

double destroy for DetailHeroChartHeaderViewModel(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[7]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for DetailHeroChartHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithCopy for DetailHeroChartHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

_QWORD *assignWithTake for DetailHeroChartHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetailHeroChartHeaderViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetailHeroChartHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailHeroChartHeaderViewModel()
{
  return &type metadata for DetailHeroChartHeaderViewModel;
}

uint64_t *sub_1002E6360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  __n128 v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_1000BA294(&qword_100BC3360);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v16 = *(int *)(v12 + 20);
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = type metadata accessor for TemperatureScaleConfiguration(0);
      v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
      v21 = swift_bridgeObjectRetain(v15);
      v20(v17, v18, v19, v21);
      v22 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(_QWORD *)&v17[v22[5]] = *(_QWORD *)&v18[v22[5]];
      *(_QWORD *)&v17[v22[6]] = *(_QWORD *)&v18[v22[6]];
      *(_QWORD *)&v17[v22[7]] = *(_QWORD *)&v18[v22[7]];
      v23 = v22[8];
      v24 = &v17[v23];
      v25 = &v18[v23];
      v27 = *(_QWORD *)v25;
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = v27;
      *((_QWORD *)v24 + 1) = v26;
      v17[v22[9]] = v18[v22[9]];
      swift_bridgeObjectRetain(v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v28 = *(int *)(a3 + 28);
    v29 = (uint64_t *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain(v31);
  }
  return v4;
}

uint64_t type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD5BE8, (uint64_t)&nominal type descriptor for FeelsLikeComponentViewModel.SignificantDifference);
}

uint64_t type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD5B48, (uint64_t)&nominal type descriptor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
}

double sub_1002E652C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_1002E65DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  __n128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_1000BA294(&qword_100BC3360);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = *(int *)(v11 + 20);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = type metadata accessor for TemperatureScaleConfiguration(0);
    v18 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
    v19 = swift_bridgeObjectRetain(v13);
    v18(v15, v16, v17, v19);
    v20 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(_QWORD *)&v15[v20[5]] = *(_QWORD *)&v16[v20[5]];
    *(_QWORD *)&v15[v20[6]] = *(_QWORD *)&v16[v20[6]];
    *(_QWORD *)&v15[v20[7]] = *(_QWORD *)&v16[v20[7]];
    v21 = v20[8];
    v22 = &v15[v21];
    v23 = &v16[v21];
    v25 = *(_QWORD *)v23;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = v25;
    *((_QWORD *)v22 + 1) = v24;
    v15[v20[9]] = v16[v20[9]];
    swift_bridgeObjectRetain(v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v26 = *(int *)(a3 + 28);
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain(v29);
  return a1;
}

_QWORD *sub_1002E6754(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t, __n128);
  __n128 v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      *v9 = *v10;
      v32 = v10[1];
      v9[1] = v32;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease();
      v33 = *(int *)(v11 + 20);
      v34 = (char *)v9 + v33;
      v35 = (char *)v10 + v33;
      v36 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
      v37 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(_QWORD *)&v34[v37[5]] = *(_QWORD *)&v35[v37[5]];
      *(_QWORD *)&v34[v37[6]] = *(_QWORD *)&v35[v37[6]];
      *(_QWORD *)&v34[v37[7]] = *(_QWORD *)&v35[v37[7]];
      v38 = v37[8];
      v39 = &v34[v38];
      v40 = &v35[v38];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v41 = *((_QWORD *)v40 + 1);
      *((_QWORD *)v39 + 1) = v41;
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRelease();
      v34[v37[9]] = v35[v37[9]];
      goto LABEL_7;
    }
    sub_1000215BC((uint64_t)v9, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v26 = sub_1000BA294(&qword_100BC3360);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  *v9 = *v10;
  v14 = v10[1];
  v9[1] = v14;
  v15 = *(int *)(v11 + 20);
  v16 = (char *)v9 + v15;
  v17 = (char *)v10 + v15;
  v18 = type metadata accessor for TemperatureScaleConfiguration(0);
  v19 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
  v20 = swift_bridgeObjectRetain(v14);
  v19(v16, v17, v18, v20);
  v21 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&v16[v21[5]] = *(_QWORD *)&v17[v21[5]];
  *(_QWORD *)&v16[v21[6]] = *(_QWORD *)&v17[v21[6]];
  *(_QWORD *)&v16[v21[7]] = *(_QWORD *)&v17[v21[7]];
  v22 = v21[8];
  v23 = &v16[v22];
  v24 = &v17[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *((_QWORD *)v23 + 1) = v25;
  v16[v21[9]] = v17[v21[9]];
  swift_bridgeObjectRetain(v25);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v27 = *(int *)(a3 + 28);
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  *v28 = *v29;
  v30 = v29[1];
  v28[1] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1002E69F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC3360);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    v16 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(_QWORD *)&v13[v16[5]] = *(_QWORD *)&v14[v16[5]];
    *(_QWORD *)&v13[v16[6]] = *(_QWORD *)&v14[v16[6]];
    *(_QWORD *)&v13[v16[7]] = *(_QWORD *)&v14[v16[7]];
    *(_OWORD *)&v13[v16[8]] = *(_OWORD *)&v14[v16[8]];
    v13[v16[9]] = v14[v16[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_1002E6B24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      v26 = v10[1];
      *v9 = *v10;
      v9[1] = v26;
      swift_bridgeObjectRelease();
      v27 = *(int *)(v11 + 20);
      v28 = (char *)v9 + v27;
      v29 = (char *)v10 + v27;
      v30 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
      v31 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(_QWORD *)&v28[v31[5]] = *(_QWORD *)&v29[v31[5]];
      *(_QWORD *)&v28[v31[6]] = *(_QWORD *)&v29[v31[6]];
      *(_QWORD *)&v28[v31[7]] = *(_QWORD *)&v29[v31[7]];
      v32 = v31[8];
      v33 = &v28[v32];
      v34 = &v29[v32];
      v36 = *(_QWORD *)v34;
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = v36;
      *((_QWORD *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      v28[v31[9]] = v29[v31[9]];
      goto LABEL_7;
    }
    sub_1000215BC((uint64_t)v9, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = sub_1000BA294(&qword_100BC3360);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v14 = *(int *)(v11 + 20);
  v15 = (char *)v9 + v14;
  v16 = (char *)v10 + v14;
  v17 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&v15[v18[5]] = *(_QWORD *)&v16[v18[5]];
  *(_QWORD *)&v15[v18[6]] = *(_QWORD *)&v16[v18[6]];
  *(_QWORD *)&v15[v18[7]] = *(_QWORD *)&v16[v18[7]];
  *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
  v15[v18[9]] = v16[v18[9]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v20 = *(int *)(a3 + 28);
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002E6D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E6D4C);
}

void sub_1002E6D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 8));
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000BA294(&qword_100BC3360);
    sub_1000B250C(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_1002E6DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E6DB4);
}

void sub_1002E6DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000993A8();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_100079F70();
  }
  else
  {
    v4 = v2;
    v5 = sub_1000BA294(&qword_100BC3360);
    sub_1000987C4(v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

uint64_t type metadata accessor for FeelsLikeComponentViewModel(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD5AA8, (uint64_t)&nominal type descriptor for FeelsLikeComponentViewModel);
}

void sub_1002E6E1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100993470;
  v4[1] = &unk_100993488;
  sub_1002E6E98(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100993470;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1002E6E98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BD5AB8)
  {
    v2 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BD5AB8);
  }
}

_QWORD *sub_1002E6EEC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain(v12);
  }
  return a1;
}

double sub_1002E6FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  v4 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 32) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1002E6FF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t sub_1002E7080(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v7 = a3[8];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1002E712C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1002E71B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = v9[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1002E7244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E7250);
}

void sub_1002E7250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1000B250C(a1, a2, v6);
  }
  else
  {
    sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 32) + 8));
    sub_100079F70();
  }
}

uint64_t sub_1002E72B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E72BC);
}

void sub_1002E72BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for TemperatureScaleConfiguration(0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1000987C4(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
    sub_100079F70();
  }
}

uint64_t sub_1002E7324(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for TemperatureScaleConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_100993470;
    v4[5] = &unk_1009934B0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1002E73B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t, __n128);
  __n128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v18 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for TemperatureScaleConfiguration(0);
    v10 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v9 - 8) + 16);
    v11 = swift_bridgeObjectRetain(v5);
    v10(v7, v8, v9, v11);
    v12 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(_QWORD *)&v7[v12[5]] = *(_QWORD *)&v8[v12[5]];
    *(_QWORD *)&v7[v12[6]] = *(_QWORD *)&v8[v12[6]];
    *(_QWORD *)&v7[v12[7]] = *(_QWORD *)&v8[v12[7]];
    v13 = v12[8];
    v14 = &v7[v13];
    v15 = &v8[v13];
    v17 = *(_QWORD *)v15;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = v17;
    *((_QWORD *)v14 + 1) = v16;
    v7[v12[9]] = v8[v12[9]];
    swift_bridgeObjectRetain(v16);
  }
  return v3;
}

double sub_1002E74A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_1002E7500(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t, __n128);
  __n128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for TemperatureScaleConfiguration(0);
  v9 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v8 - 8) + 16);
  v10 = swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8, v10);
  v11 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&v6[v11[5]] = *(_QWORD *)&v7[v11[5]];
  *(_QWORD *)&v6[v11[6]] = *(_QWORD *)&v7[v11[6]];
  *(_QWORD *)&v6[v11[7]] = *(_QWORD *)&v7[v11[7]];
  v12 = v11[8];
  v13 = &v6[v12];
  v14 = &v7[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  v6[v11[9]] = v7[v11[9]];
  swift_bridgeObjectRetain(v15);
  return a1;
}

_QWORD *sub_1002E75C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&v8[v11[5]] = *(_QWORD *)&v9[v11[5]];
  *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  v12 = v11[8];
  v13 = &v8[v12];
  v14 = &v9[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v8[v11[9]] = v9[v11[9]];
  return a1;
}

_OWORD *sub_1002E76B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&v5[v8[5]] = *(_QWORD *)&v6[v8[5]];
  *(_QWORD *)&v5[v8[6]] = *(_QWORD *)&v6[v8[6]];
  *(_QWORD *)&v5[v8[7]] = *(_QWORD *)&v6[v8[7]];
  *(_OWORD *)&v5[v8[8]] = *(_OWORD *)&v6[v8[8]];
  v5[v8[9]] = v6[v8[9]];
  return a1;
}

_QWORD *sub_1002E7750(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&v8[v11[5]] = *(_QWORD *)&v9[v11[5]];
  *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  v12 = v11[8];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v8[v11[9]] = v9[v11[9]];
  return a1;
}

uint64_t sub_1002E7814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E7820);
}

void sub_1002E7820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 8));
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000C1494();
    sub_1000B250C(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1002E7874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E7880);
}

void sub_1002E7880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000993A8();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_100079F70();
  }
  else
  {
    v4 = v2;
    v5 = sub_1000C1494();
    sub_1000987C4(v1 + *(int *)(v4 + 20), v0, v0, v5);
  }
}

uint64_t sub_1002E78CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100993470;
  result = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_1002E7940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  if ((static TemperatureScaleConfiguration.== infix(_:_:)() & 1) != 0)
  {
    v0 = sub_1000C1494();
    sub_1000D11B0(*(int *)(v0 + 20));
    if (v7)
    {
      v2 = v1;
      sub_1000D11B0(*(int *)(v1 + 24));
      if (v7)
      {
        sub_1000D11B0(*(int *)(v2 + 28));
        if (v7)
        {
          v3 = sub_100099430();
          v7 = v7 && v4 == v6;
          if (!v7)
            sub_100099264(v3, v4, v5, v6);
        }
      }
    }
  }
  sub_100079F70();
}

uint64_t sub_1002E79DC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  char v13;

  if (a1 == 0x746E656964617267 && a2 == 0xED0000656C616353)
  {
    v5 = 0xED0000656C616353;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E656964617267, 0xED0000656C616353, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000011)
  {
    v7 = 0x80000001009F9CC0;
    if (a2 == 0x80000001009F9CC0)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001009F9CC0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x80000001009F9CE0)
  {
    v8 = 0x80000001009F9CE0;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000001009F9CE0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001009F9D00)
  {
    v9 = 0x80000001009F9D00;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001009F9D00, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x6E65726566666964 && a2 == 0xEE00747865546563)
  {
    v11 = 0xEE00747865546563;
    goto LABEL_33;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E65726566666964, 0xEE00747865546563, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_33:
    swift_bridgeObjectRelease(v11);
    return 4;
  }
  if (a1 == 0x7247796144657375 && a2 == 0xEE00746E65696461)
  {
    swift_bridgeObjectRelease(0xEE00746E65696461);
    return 5;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7247796144657375, 0xEE00746E65696461, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1002E7CA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002E7CE8 + 4 * byte_100993430[a1]))(0x746E656964617267, 0xED0000656C616353);
}

unint64_t sub_1002E7CE8()
{
  return 0xD000000000000011;
}

unint64_t sub_1002E7D04()
{
  return 0xD000000000000014;
}

uint64_t sub_1002E7D3C()
{
  return 0x6E65726566666964;
}

uint64_t sub_1002E7D60()
{
  return 0x7247796144657375;
}

void sub_1002E7D84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BD5C40);
  sub_100099300();
  __chkstk_darwin(v6);
  sub_1000DB418(a1, a1[3]);
  v7 = sub_1002E8D60();
  sub_1000C37B4((uint64_t)&type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys, v8, v7);
  v21 = 0;
  v9 = type metadata accessor for TemperatureScaleConfiguration(0);
  sub_100086DA4(&qword_100BD5C48, (uint64_t (*)(uint64_t))&type metadata accessor for TemperatureScaleConfiguration, (uint64_t)&protocol conformance descriptor for TemperatureScaleConfiguration);
  sub_1000C26D4(v3, (uint64_t)&v21, v5, v9, v10);
  if (!v2)
  {
    v11 = sub_1000C1494();
    v20 = 1;
    sub_1000C536C((uint64_t)&v20);
    v19 = 2;
    sub_1000C536C((uint64_t)&v19);
    v18 = 3;
    sub_1000C536C((uint64_t)&v18);
    v12 = (uint64_t *)(v3 + *(int *)(v11 + 32));
    v13 = *v12;
    v14 = v12[1];
    v17 = 4;
    sub_1000BA804(v13, v14, (uint64_t)&v17);
    v15 = *(unsigned __int8 *)(v3 + *(int *)(v11 + 36));
    v16 = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v16, v5);
  }
  sub_10009894C();
  sub_100089054();
}

void sub_1002E7F1C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v4 = type metadata accessor for TemperatureScaleConfiguration(0);
  v25 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v22 = sub_1000BA294(&qword_100BD5C28);
  sub_100099300();
  __chkstk_darwin(v8);
  sub_100098728();
  v23 = (int *)sub_1000C1494();
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v24 = v10;
  v12 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v12);
  v13 = sub_1002E8D60();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys, v13, v12, v11);
  if (v2)
  {
    sub_1000998EC();
  }
  else
  {
    v31 = 0;
    sub_100086DA4(&qword_100BD5C38, (uint64_t (*)(uint64_t))&type metadata accessor for TemperatureScaleConfiguration, (uint64_t)&protocol conformance descriptor for TemperatureScaleConfiguration);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v4, &v31, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v7, v4);
    v30 = 1;
    sub_1000B4734((uint64_t)&v30);
    *(_QWORD *)(v24 + v23[5]) = v14;
    v29 = 2;
    sub_1000B4734((uint64_t)&v29);
    *(_QWORD *)(v24 + v23[6]) = v15;
    v28 = 3;
    sub_1000B4734((uint64_t)&v28);
    *(_QWORD *)(v24 + v23[7]) = v16;
    v27 = 4;
    v17 = KeyedDecodingContainer.decode(_:forKey:)(&v27, v22);
    v18 = (uint64_t *)(v24 + v23[8]);
    *v18 = v17;
    v18[1] = v19;
    v26 = 5;
    v20 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v22);
    sub_1000BA8A0();
    *(_BYTE *)(v24 + v23[9]) = v20 & 1;
    sub_100080C0C(v24, a2, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
    sub_1000998EC();
    sub_1000C6638();
  }
  sub_1000B44B0();
}

void sub_1002E81F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (sub_100099264(v4, v5, *a2, v6) & 1) != 0)
  {
    sub_10011024C();
    sub_1002E7940();
  }
}

uint64_t sub_1002E8254(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x614C6C6175746361 && a2 == 0xEB000000006C6562)
  {
    v5 = 0xEB000000006C6562;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x614C6C6175746361, 0xEB000000006C6562, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65636E6169726176 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65636E6169726176, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1002E8358(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65636E6169726176;
  else
    return 0x614C6C6175746361;
}

void sub_1002E8398(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BD5C68);
  sub_100099300();
  __chkstk_darwin(v6);
  sub_1000DB418(a1, a1[3]);
  v7 = sub_1002E8D9C();
  sub_1000C37B4((uint64_t)&type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys, v8, v7);
  v9 = *v3;
  v10 = v3[1];
  v15 = 0;
  sub_1000BA804(v9, v10, (uint64_t)&v15);
  if (!v2)
  {
    v11 = (uint64_t)v3 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0) + 20);
    v14 = 1;
    v12 = sub_1000C1494();
    sub_100086DA4(&qword_100BD5C70, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance, (uint64_t)&unk_100993560);
    sub_1000C26D4(v11, (uint64_t)&v14, v5, v12, v13);
  }
  sub_10009894C();
  sub_100089054();
}

void sub_1002E84A0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v20 = a2;
  v22 = sub_1000C1494();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v21 = v5;
  v23 = sub_1000BA294(&qword_100BD5C50);
  sub_100099300();
  __chkstk_darwin(v6);
  sub_100098728();
  v7 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1002E8D9C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys, v13, v11, v12);
  if (v2)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    v19 = a1;
    v15 = v21;
    v14 = v22;
    v25 = 0;
    v16 = v23;
    *v10 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v23);
    v10[1] = v17;
    v24 = 1;
    sub_100086DA4(&qword_100BD5C60, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance, (uint64_t)&unk_100993588);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v14, &v24, v16);
    sub_1000D00CC();
    sub_10007802C(v15, (uint64_t)v10 + *(int *)(v7 + 20), type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
    sub_100080C0C((uint64_t)v10, v20, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v19);
    sub_1000C6638();
  }
  sub_1000B44B0();
}

uint64_t sub_1002E868C()
{
  unsigned __int8 *v0;

  return sub_1002E7CA8(*v0);
}

uint64_t sub_1002E8694@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002E79DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002E86B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E8D60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E86E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E8D60();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002E870C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002E7F1C(a1, a2);
}

void sub_1002E8720(_QWORD *a1)
{
  sub_1002E7D84(a1);
}

uint64_t sub_1002E8734()
{
  char *v0;

  return sub_1002E8358(*v0);
}

uint64_t sub_1002E873C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002E8254(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002E8760(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E8D9C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E8788(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E8D9C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002E87B4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002E84A0(a1, a2);
}

void sub_1002E87C8(_QWORD *a1)
{
  sub_1002E8398(a1);
}

uint64_t sub_1002E87DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;

  sub_10011024C();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = (uint64_t *)(v6 - v5);
  v8 = sub_1000BA294(&qword_100BD5C20);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  sub_1000BA294(&qword_100BC3360);
  sub_1000B42B0();
  v14 = __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v49 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v49 - v20;
  v22 = a1[1];
  v23 = a2[1];
  v24 = *a1 == *a2 && v22 == v23;
  if (!v24)
  {
    v25 = sub_100099264(*a1, v22, *a2, v23);
    v26 = 0;
    if ((v25 & 1) == 0)
      return v26 & 1;
  }
  v27 = a1[3];
  v28 = a2[3];
  if (!v27)
  {
    if (v28)
      goto LABEL_25;
    goto LABEL_15;
  }
  if (!v28)
    goto LABEL_25;
  v29 = a1[2];
  v30 = a2[2];
  v31 = v29 == v30 && v27 == v28;
  if (v31 || (v32 = sub_100099264(v29, v27, v30, v28), v26 = 0, (v32 & 1) != 0))
  {
LABEL_15:
    v33 = type metadata accessor for FeelsLikeComponentViewModel(0);
    sub_1002E8B2C((uint64_t)a1 + *(int *)(v33 + 24), (uint64_t)v21);
    sub_1002E8B2C((uint64_t)a2 + *(int *)(v33 + 24), (uint64_t)v19);
    v34 = v12 + *(int *)(v8 + 48);
    sub_1002E8B2C((uint64_t)v21, v12);
    sub_1002E8B2C((uint64_t)v19, v34);
    sub_1000B4744(v12);
    if (v24)
    {
      sub_100021A14((uint64_t)v19, &qword_100BC3360);
      sub_100021A14((uint64_t)v21, &qword_100BC3360);
      sub_1000B4744(v34);
      if (v24)
      {
        sub_100021A14(v12, &qword_100BC3360);
LABEL_33:
        v44 = sub_100099430();
        if (v24 && v45 == v47)
          v26 = 1;
        else
          v26 = sub_100099264(v44, v45, v46, v47);
        return v26 & 1;
      }
    }
    else
    {
      sub_1002E8B2C(v12, (uint64_t)v16);
      sub_1000B4744(v34);
      if (!v35)
      {
        sub_10007802C(v34, (uint64_t)v7, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
        v39 = v16[1];
        v40 = v7[1];
        v41 = *v16 == *v7 && v39 == v40;
        if (v41 || (sub_100099264(*v16, v39, *v7, v40) & 1) != 0)
        {
          sub_1002E7940();
          v43 = v42;
          sub_1000215BC((uint64_t)v7, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
          sub_1000B3B4C((uint64_t)v19);
          sub_1000B3B4C((uint64_t)v21);
          sub_1000215BC((uint64_t)v16, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
          sub_1000B3B4C(v12);
          if ((v43 & 1) != 0)
            goto LABEL_33;
LABEL_25:
          v26 = 0;
          return v26 & 1;
        }
        sub_1000215BC((uint64_t)v7, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
        sub_100021A14((uint64_t)v19, &qword_100BC3360);
        sub_100021A14((uint64_t)v21, &qword_100BC3360);
        sub_1000215BC((uint64_t)v16, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
        v37 = v12;
        v36 = &qword_100BC3360;
LABEL_24:
        sub_100021A14(v37, v36);
        goto LABEL_25;
      }
      sub_100021A14((uint64_t)v19, &qword_100BC3360);
      sub_100021A14((uint64_t)v21, &qword_100BC3360);
      sub_1000215BC((uint64_t)v16, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    }
    v36 = &qword_100BD5C20;
    v37 = v12;
    goto LABEL_24;
  }
  return v26 & 1;
}

uint64_t sub_1002E8B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC3360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002E8B74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_10011024C();
  sub_10004037C(v0, qword_100CAE640);
  v1 = (_QWORD *)sub_1000AECD4(v0, (uint64_t)qword_100CAE640);
  if (qword_100BC1F50 != -1)
    swift_once(&qword_100BC1F50, sub_1002E8C24);
  v2 = sub_1000C1494();
  v3 = sub_1000AECD4(v2, (uint64_t)qword_100CAE658);
  *v1 = 0x203A6C6175746341;
  v1[1] = 0xAC000000B0C23536;
  sub_100080C0C(v3, (uint64_t)v1 + *(int *)(v0 + 20), type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
  sub_100079F70();
}

uint64_t sub_1002E8C24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;

  v0 = type metadata accessor for TemperatureScaleConfiguration.Gradient(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TemperatureScaleConfiguration(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  sub_10004037C((uint64_t)v7, qword_100CAE658);
  v8 = sub_1000AECD4((uint64_t)v7, (uint64_t)qword_100CAE658);
  static TemperatureScaleConfiguration.Gradient.default.getter();
  TemperatureScaleConfiguration.init(gradient:)(v2);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8, v6, v3);
  *(_QWORD *)(v8 + v7[5]) = 0x4050400000000000;
  *(_QWORD *)(v8 + v7[6]) = 0x404B800000000000;
  *(_QWORD *)(v8 + v7[7]) = 0x402E000000000000;
  v10 = (_QWORD *)(v8 + v7[8]);
  *v10 = 2965516337;
  v10[1] = 0xA400000000000000;
  *(_BYTE *)(v8 + v7[9]) = 1;
  return result;
}

unint64_t sub_1002E8D60()
{
  unint64_t result;

  result = qword_100BD5C30;
  if (!qword_100BD5C30)
  {
    result = swift_getWitnessTable(&unk_1009937CC, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5C30);
  }
  return result;
}

unint64_t sub_1002E8D9C()
{
  unint64_t result;

  result = qword_100BD5C58;
  if (!qword_100BD5C58)
  {
    result = swift_getWitnessTable(&unk_10099377C, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5C58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002E8E24 + 4 * byte_10099343B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002E8E58 + 4 * byte_100993436[v4]))();
}

uint64_t sub_1002E8E58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E8E60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002E8E68);
  return result;
}

uint64_t sub_1002E8E74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002E8E7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002E8E80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E8E88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys()
{
  return &type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1002E8EF0 + 4 * byte_100993445[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1002E8F24 + 4 * byte_100993440[v4]))();
}

uint64_t sub_1002E8F24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E8F2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002E8F34);
  return result;
}

uint64_t sub_1002E8F40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002E8F48);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1002E8F4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E8F54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys()
{
  return &type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys;
}

unint64_t sub_1002E8F74()
{
  unint64_t result;

  result = qword_100BD5C78;
  if (!qword_100BD5C78)
  {
    result = swift_getWitnessTable(&unk_10099369C, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5C78);
  }
  return result;
}

unint64_t sub_1002E8FB4()
{
  unint64_t result;

  result = qword_100BD5C80;
  if (!qword_100BD5C80)
  {
    result = swift_getWitnessTable(&unk_100993754, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5C80);
  }
  return result;
}

unint64_t sub_1002E8FF4()
{
  unint64_t result;

  result = qword_100BD5C88;
  if (!qword_100BD5C88)
  {
    result = swift_getWitnessTable(&unk_1009936C4, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5C88);
  }
  return result;
}

unint64_t sub_1002E9034()
{
  unint64_t result;

  result = qword_100BD5C90;
  if (!qword_100BD5C90)
  {
    result = swift_getWitnessTable(&unk_1009936EC, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5C90);
  }
  return result;
}

unint64_t sub_1002E9074()
{
  unint64_t result;

  result = qword_100BD5C98;
  if (!qword_100BD5C98)
  {
    result = swift_getWitnessTable(&unk_10099360C, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5C98);
  }
  return result;
}

unint64_t sub_1002E90B4()
{
  unint64_t result;

  result = qword_100BD5CA0;
  if (!qword_100BD5CA0)
  {
    result = swift_getWitnessTable(&unk_100993634, &type metadata for FeelsLikeComponentViewModel.SignificantDifference.Variance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD5CA0);
  }
  return result;
}

void sub_1002E90F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  *(_QWORD *)a4 = swift_getKeyPath(&unk_100993820);
  *(_BYTE *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = swift_getKeyPath(&unk_100993848);
  *(_BYTE *)(a4 + 24) = 0;
  v8 = (int *)type metadata accessor for LocationFooterView(0);
  v9 = (_QWORD *)(a4 + v8[6]);
  *v9 = swift_getKeyPath(&unk_100993878);
  v10 = sub_1000BA294(&qword_100BC68C8);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  sub_10007802C(a1, a4 + v8[7], type metadata accessor for LocationFooterViewModel);
  v11 = (_QWORD *)(a4 + v8[8]);
  *v11 = a2;
  v11[1] = a3;
}

void sub_1002E91B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BD5D48);
  sub_1002E91F4(v2, a2 + *(int *)(v4 + 44));
  sub_10004A298();
}

void sub_1002E91F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _BOOL8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  char *v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t (*v56)(_QWORD, _QWORD, _QWORD);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  uint64_t v90;
  int v91;
  int v92;
  unsigned __int8 v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t KeyPath;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char v162;
  char v163;
  char v164;
  _BYTE v165[7];
  _DWORD v166[3];
  _BYTE v167[126];
  _BYTE v168[126];
  __int128 v169;
  char v170;
  _BYTE v171[7];
  uint64_t v172;
  uint64_t v173;
  char v174;
  _BYTE v175[7];
  uint64_t v176;
  uint64_t v177;
  char v178;
  _BYTE v179[7];
  double v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  _BYTE v185[7];
  uint64_t v186;
  char v187;
  _BYTE v188[136];

  v161 = a2;
  v3 = sub_1000BA294(&qword_100BD5D50);
  __chkstk_darwin(v3);
  v147 = (uint64_t *)((char *)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v151 = sub_1000BA294(&qword_100BD5D58);
  __chkstk_darwin(v151);
  v148 = (uint64_t *)((char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v153 = sub_1000BA294(&qword_100BD5D60);
  __chkstk_darwin(v153);
  v7 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1000BA294(&qword_100BD5D68);
  __chkstk_darwin(v149);
  v150 = (uint64_t)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_1000BA294(&qword_100BD5D70);
  __chkstk_darwin(v158);
  v152 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD5D78);
  __chkstk_darwin(v10);
  v156 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v155 = (char *)&v138 - v13;
  v14 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v14);
  v145 = (uint64_t)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v146 = (char *)&v138 - v17;
  v18 = type metadata accessor for Font.TextStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000BA294(&qword_100BC3118);
  __chkstk_darwin(v25);
  v27 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000BA294(&qword_100BD5D80);
  __chkstk_darwin(v28);
  v159 = (uint64_t)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v138 - v31;
  v33 = sub_1002E9E84();
  v154 = v3;
  v160 = v7;
  if (v33)
  {
    *(_QWORD *)v32 = static VerticalAlignment.center.getter(v33);
    *((_QWORD *)v32 + 1) = 0;
    v32[16] = 1;
    v34 = sub_1000BA294(&qword_100BD5DC8);
    sub_1002EA914(a1, &v32[*(int *)(v34 + 44)]);
    v35 = sub_1000BA294(&qword_100BD5D88);
    v36 = (uint64_t)v32;
    v37 = 0;
  }
  else
  {
    v35 = sub_1000BA294(&qword_100BD5D88);
    v36 = (uint64_t)v32;
    v37 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v36, v37, 1, v35);
  v157 = v32;
  v38 = a1 + *(int *)(type metadata accessor for LocationFooterView(0) + 28);
  v39 = *(void **)(v38 + 16);
  if (!v39)
    goto LABEL_9;
  v40 = *(_QWORD *)(v38 + 8);
  v41 = type metadata accessor for LocationFooterViewModel(0);
  sub_100037768(v38 + *(int *)(v41 + 44), (uint64_t)v27, &qword_100BC3118);
  v42 = type metadata accessor for LocationOfInterest(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v42) != 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC3118);
LABEL_9:
    sub_1002EE658(&v169);
    sub_1000787D4((uint64_t)&v169, (uint64_t)v188, &qword_100BD5D90);
    v83 = (uint64_t)v155;
    v82 = (uint64_t)v156;
    v85 = v153;
    v84 = v154;
    goto LABEL_16;
  }
  v144 = v38;
  sub_100021A14((uint64_t)v27, &qword_100BC3118);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1);
  v43._countAndFlagsBits = 0x2072656874616557;
  v43._object = (void *)0xEC00000020726F66;
  v44 = (char *)a1;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v43);
  v45._countAndFlagsBits = v40;
  v45._object = v39;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v45);
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v46);
  v47 = LocalizedStringKey.init(stringInterpolation:)(v24);
  v51 = Text.init(_:tableName:bundle:comment:)(v47, v49, v48 & 1, v50, 0, 0, 0, "The location for which we're showing the weather");
  v138 = v52;
  v139 = v51;
  KeyPath = v53;
  v55 = v54 & 1;
  v56 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v19 + 104);
  v57 = v56(v21, enum case for Font.TextStyle.subheadline(_:), v18);
  static Font.Weight.semibold.getter(v57);
  v58 = static Font.system(_:weight:)(v21);
  v59 = *(void (**)(_QWORD, _QWORD))(v19 + 8);
  v59(v21, v18);
  v60 = v56(v21, enum case for Font.TextStyle.footnote(_:), v18);
  static Font.Weight.bold.getter(v60);
  v61 = static Font.system(_:weight:)(v21);
  v59(v21, v18);
  v62 = *(_QWORD *)v44;
  v63 = v44[8];
  sub_10008D47C(*(_QWORD *)v44, v63);
  sub_100109B54();
  v65 = v64;
  sub_1000B15F8(v62, v63);
  v66 = enum case for Font.Leading.tight(_:);
  v67 = type metadata accessor for Font.Leading(0);
  v68 = (uint64_t)v146;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v146, v66, v67);
  _s7Weather24LocationCompositionStateOwst_0(v68, 0, 1, v67);
  v69 = v145;
  sub_100037768(v68, v145, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v70 = sub_10040BDEC(v58, v61, v65 & 1, v69);
  v72 = v138;
  v71 = v139;
  v73 = Text.font(_:)(v70, v139, v138, v55, KeyPath);
  v140 = v74;
  v141 = v73;
  v142 = v75;
  v145 = v76;
  swift_release(v58);
  swift_release(v61);
  swift_release(v70);
  sub_1000D31B4(v71, v72, v55);
  swift_bridgeObjectRelease();
  sub_100021A14(v68, &qword_100BCCDA8);
  KeyPath = swift_getKeyPath(&unk_100993948);
  v77 = *((_QWORD *)v44 + 2);
  v146 = v44;
  LOBYTE(v72) = v44[24];
  sub_10008D47C(v77, v72);
  sub_100109B54();
  LOBYTE(v55) = v78;
  v79 = sub_1000B15F8(v77, v72);
  if ((v55 & 1) != 0)
    v81 = static Color.white.getter(v79);
  else
    v81 = static Color.primary.getter(v80);
  v86 = v81;
  v87 = swift_getKeyPath(&unk_100993978);
  v88 = static Edge.Set.leading.getter(v87);
  v89 = static Edge.Set.trailing.getter();
  v90 = Edge.Set.init(rawValue:)(0);
  v91 = Edge.Set.init(rawValue:)(v90);
  if (Edge.Set.init(rawValue:)(v91 & v88) != v88)
    v90 = Edge.Set.init(rawValue:)(v90 | v88);
  v92 = Edge.Set.init(rawValue:)(v90);
  v93 = Edge.Set.init(rawValue:)(v92 & v89);
  v38 = v144;
  if (v93 != v89)
    LOBYTE(v90) = Edge.Set.init(rawValue:)(v90 | v89);
  v94 = EdgeInsets.init(_all:)(32.0);
  v96 = v95;
  v98 = v97;
  v100 = v99;
  v101 = v142 & 1;
  v164 = v142 & 1;
  v163 = 0;
  v162 = 0;
  v102 = v140;
  v103 = v141;
  sub_1000D55D4(v141, v140, v142 & 1);
  v104 = v145;
  swift_bridgeObjectRetain(v145);
  v105 = KeyPath;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000D31B4(v103, v102, v101);
  swift_release(v86);
  swift_release(v87);
  swift_release(v105);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v169 = v103;
  *((_QWORD *)&v169 + 1) = v102;
  v170 = v101;
  *(_DWORD *)v171 = *(_DWORD *)v168;
  *(_DWORD *)&v171[3] = *(_DWORD *)&v168[3];
  v172 = v104;
  v173 = v105;
  v174 = 1;
  *(_DWORD *)v175 = *(_DWORD *)v167;
  *(_DWORD *)&v175[3] = *(_DWORD *)&v167[3];
  v176 = v87;
  v177 = v86;
  v178 = v90;
  *(_DWORD *)&v179[3] = *(_DWORD *)((char *)v166 + 3);
  *(_DWORD *)v179 = v166[0];
  v180 = v94;
  v181 = v96;
  v182 = v98;
  v183 = v100;
  v184 = 0;
  *(_DWORD *)v185 = *(_DWORD *)v165;
  *(_DWORD *)&v185[3] = *(_DWORD *)&v165[3];
  v186 = 0x4010000000000000;
  v187 = 0;
  LocationSearchEntityFromStringResolver.init()();
  sub_1000787D4((uint64_t)&v169, (uint64_t)v188, &qword_100BD5D90);
  v83 = (uint64_t)v155;
  v82 = (uint64_t)v156;
  v85 = v153;
  v84 = v154;
  a1 = (uint64_t)v146;
LABEL_16:
  v106 = type metadata accessor for LocationFooterViewModel(0);
  v107 = *(unsigned __int8 *)(v38 + *(int *)(v106 + 52));
  if (*(_BYTE *)(v38 + *(int *)(v106 + 52)))
  {
    v108 = (uint64_t)v160;
    if (v107 == 1)
    {
      v109 = static VerticalAlignment.center.getter(v106);
      v110 = (uint64_t)v148;
      *v148 = v109;
      *(_QWORD *)(v110 + 8) = 0;
      *(_BYTE *)(v110 + 16) = 1;
      v111 = sub_1000BA294(&qword_100BD5DC0);
      sub_1002EA0C4(a1, v110 + *(int *)(v111 + 44));
      v112 = v150;
      sub_100037768(v110, v150, &qword_100BD5D58);
      swift_storeEnumTagMultiPayload(v112, v149, 1);
      sub_10003D2DC(&qword_100BD5DA8, &qword_100BD5D58);
      v113 = (uint64_t)v152;
      _ConditionalContent<>.init(storage:)(v112, &type metadata for EmptyView, v151, &protocol witness table for EmptyView, v114);
      sub_100037768(v113, v108, &qword_100BD5D70);
      swift_storeEnumTagMultiPayload(v108, v85, 0);
      v115 = sub_1002EE674();
      sub_10003D2DC(&qword_100BD5DB0, &qword_100BD5D50);
      _ConditionalContent<>.init(storage:)(v108, v158, v84, v115, v116);
      sub_100021A14(v113, &qword_100BD5D70);
      v117 = v110;
      v118 = &qword_100BD5D58;
    }
    else
    {
      v125 = static VerticalAlignment.center.getter(v106);
      v126 = (uint64_t)v147;
      *v147 = v125;
      *(_QWORD *)(v126 + 8) = 0;
      *(_BYTE *)(v126 + 16) = 1;
      v127 = sub_1000BA294(&qword_100BD5D98);
      sub_1002EA4E4(a1, (_QWORD *)(v126 + *(int *)(v127 + 44)));
      sub_100037768(v126, v108, &qword_100BD5D50);
      swift_storeEnumTagMultiPayload(v108, v85, 1);
      v128 = sub_1002EE674();
      sub_10003D2DC(&qword_100BD5DB0, &qword_100BD5D50);
      _ConditionalContent<>.init(storage:)(v108, v158, v84, v128, v129);
      v117 = v126;
      v118 = &qword_100BD5D50;
    }
  }
  else
  {
    v119 = v150;
    swift_storeEnumTagMultiPayload(v150, v149, 0);
    sub_10003D2DC(&qword_100BD5DA8, &qword_100BD5D58);
    v120 = (uint64_t)v152;
    _ConditionalContent<>.init(storage:)(v119, &type metadata for EmptyView, v151, &protocol witness table for EmptyView, v121);
    v122 = (uint64_t)v160;
    sub_100037768(v120, (uint64_t)v160, &qword_100BD5D70);
    swift_storeEnumTagMultiPayload(v122, v85, 0);
    v123 = sub_1002EE674();
    sub_10003D2DC(&qword_100BD5DB0, &qword_100BD5D50);
    _ConditionalContent<>.init(storage:)(v122, v158, v84, v123, v124);
    v117 = v120;
    v118 = &qword_100BD5D70;
  }
  sub_100021A14(v117, v118);
  v130 = (uint64_t)v157;
  v131 = v159;
  sub_100037768((uint64_t)v157, v159, &qword_100BD5D80);
  sub_1000787D4((uint64_t)v188, (uint64_t)v167, &qword_100BD5D90);
  sub_100037768(v83, v82, &qword_100BD5D78);
  v132 = v83;
  v133 = v82;
  v134 = v161;
  sub_100037768(v131, v161, &qword_100BD5D80);
  v135 = (int *)sub_1000BA294(&qword_100BD5DB8);
  v136 = v134 + v135[12];
  *(_QWORD *)v136 = 0x4030000000000000;
  *(_BYTE *)(v136 + 8) = 0;
  v137 = v134 + v135[16];
  sub_1000787D4((uint64_t)v167, (uint64_t)v168, &qword_100BD5D90);
  sub_1000787D4((uint64_t)v168, v137, &qword_100BD5D90);
  sub_100037768(v133, v134 + v135[20], &qword_100BD5D78);
  sub_1002EE754((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1002EE6F8);
  sub_100021A14(v132, &qword_100BD5D78);
  sub_100021A14(v130, &qword_100BD5D80);
  sub_100021A14(v133, &qword_100BD5D78);
  sub_1000787D4((uint64_t)v167, (uint64_t)&v169, &qword_100BD5D90);
  sub_1002EE754((uint64_t)&v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1002EE7B8);
  sub_100021A14(v131, &qword_100BD5D80);
}

BOOL sub_1002E9E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t (*v16)(_QWORD);
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v24;

  v1 = v0;
  v2 = sub_1000BA294(&qword_100BC3118);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocationFooterView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - v12;
  v15 = *(unsigned __int8 *)(v1 + *(int *)(v14 + 28));
  sub_100080C0C(v1, (uint64_t)&v24 - v12, v16);
  if (v15 == 1)
  {
    sub_1000215BC((uint64_t)v13, type metadata accessor for LocationFooterView);
    sub_100080C0C(v1, (uint64_t)v10, type metadata accessor for LocationFooterView);
    v17 = 1;
  }
  else
  {
    v18 = *(int *)(v8 + 28);
    v19 = type metadata accessor for LocationFooterViewModel(0);
    sub_100037768((uint64_t)&v13[v18 + *(int *)(v19 + 32)], (uint64_t)v7, &qword_100BD4280);
    sub_1000215BC((uint64_t)v13, type metadata accessor for LocationFooterView);
    v20 = type metadata accessor for URL(0);
    v17 = 1;
    v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v20);
    sub_100021A14((uint64_t)v7, &qword_100BD4280);
    sub_100080C0C(v1, (uint64_t)v10, type metadata accessor for LocationFooterView);
    if (v21 == 1)
    {
      sub_100037768((uint64_t)&v10[*(int *)(v8 + 28) + (uint64_t)*(int *)(v19 + 44)], (uint64_t)v4, &qword_100BC3118);
      v22 = type metadata accessor for LocationOfInterest(0);
      v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v22) != 1;
      sub_100021A14((uint64_t)v4, &qword_100BC3118);
    }
  }
  sub_1000215BC((uint64_t)v10, type metadata accessor for LocationFooterView);
  return v17;
}

void sub_1002EA0C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  int v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = a2;
  v3 = type metadata accessor for BlendMode(0);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin(v3);
  v54 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LearnMoreAttributorView(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD5E90);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1000BA294(&qword_100BD5E98);
  __chkstk_darwin(v52);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1000BA294(&qword_100BD5EA0);
  __chkstk_darwin(v53);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  v18 = type metadata accessor for LocationFooterView(0);
  v19 = a1 + *(int *)(v18 + 28);
  v20 = type metadata accessor for LocationFooterViewModel(0);
  sub_100080C0C(v19 + *(int *)(v20 + 36), (uint64_t)v7, type metadata accessor for LearnMoreAttributorViewModel);
  v21 = (uint64_t *)(a1 + *(int *)(v18 + 32));
  v22 = *v21;
  v23 = &v7[*(int *)(v5 + 20)];
  *((_QWORD *)v23 + 1) = *(_QWORD *)(v21[1] + 8);
  swift_unknownObjectWeakInit(v23, v22);
  v24 = &v7[*(int *)(v5 + 24)];
  v25 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001009F9E70);
  *(_QWORD *)v24 = Text.init(_:tableName:bundle:comment:)(v25, v27, v26 & 1, v28, 0, 0, 0, "Accessibility hint for a link hint where the destination has already been stated");
  *((_QWORD *)v24 + 1) = v29;
  v24[16] = v30 & 1;
  *((_QWORD *)v24 + 3) = v31;
  sub_100080C0C((uint64_t)v7, (uint64_t)v10, type metadata accessor for LearnMoreAttributorView);
  v10[*(int *)(v8 + 36)] = 0;
  sub_1000215BC((uint64_t)v7, type metadata accessor for LearnMoreAttributorView);
  v33 = static Edge.Set.leading.getter(v32);
  v34 = static Edge.Set.trailing.getter();
  v35 = Edge.Set.init(rawValue:)(0);
  v36 = Edge.Set.init(rawValue:)(v35);
  if (Edge.Set.init(rawValue:)(v36 & v33) != v33)
    v35 = Edge.Set.init(rawValue:)(v35 | v33);
  v37 = Edge.Set.init(rawValue:)(v35);
  if (Edge.Set.init(rawValue:)(v37 & v34) != v34)
    LOBYTE(v35) = Edge.Set.init(rawValue:)(v35 | v34);
  v38 = EdgeInsets.init(_all:)(32.0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_100037768((uint64_t)v10, (uint64_t)v12, &qword_100BD5E90);
  v45 = &v12[*(int *)(v52 + 36)];
  *v45 = v35;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_100021A14((uint64_t)v10, &qword_100BD5E90);
  v47 = v54;
  v46 = v55;
  v48 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, enum case for BlendMode.plusLighter(_:), v56);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v17[*(int *)(v53 + 36)], v47, v48);
  sub_100037768((uint64_t)v12, (uint64_t)v17, &qword_100BD5E98);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  sub_100021A14((uint64_t)v12, &qword_100BD5E98);
  sub_100037768((uint64_t)v17, (uint64_t)v14, &qword_100BD5EA0);
  v49 = v57;
  sub_100037768((uint64_t)v14, v57, &qword_100BD5EA0);
  v50 = v49 + *(int *)(sub_1000BA294(&qword_100BD5EA8) + 48);
  *(_QWORD *)v50 = 0x4010000000000000;
  *(_BYTE *)(v50 + 8) = 0;
  sub_100021A14((uint64_t)v17, &qword_100BD5EA0);
  sub_100021A14((uint64_t)v14, &qword_100BD5EA0);
}

void sub_1002EA4E4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  int v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v58 = a2;
  v3 = type metadata accessor for BlendMode(0);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  __chkstk_darwin(v3);
  v55 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LearnMoreAttributorView(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD5E90);
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1000BA294(&qword_100BD5E98);
  __chkstk_darwin(v53);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1000BA294(&qword_100BD5EA0);
  __chkstk_darwin(v54);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - v16;
  v18 = type metadata accessor for LocationFooterView(0);
  v19 = a1 + *(int *)(v18 + 28);
  v20 = type metadata accessor for LocationFooterViewModel(0);
  sub_100080C0C(v19 + *(int *)(v20 + 36), (uint64_t)v7, type metadata accessor for LearnMoreAttributorViewModel);
  v21 = (uint64_t *)(a1 + *(int *)(v18 + 32));
  v22 = *v21;
  v23 = &v7[*(int *)(v5 + 20)];
  *((_QWORD *)v23 + 1) = *(_QWORD *)(v21[1] + 8);
  swift_unknownObjectWeakInit(v23, v22);
  v24 = &v7[*(int *)(v5 + 24)];
  v25 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001009F9E70);
  *(_QWORD *)v24 = Text.init(_:tableName:bundle:comment:)(v25, v27, v26 & 1, v28, 0, 0, 0, "Accessibility hint for a link hint where the destination has already been stated");
  *((_QWORD *)v24 + 1) = v29;
  v24[16] = v30 & 1;
  *((_QWORD *)v24 + 3) = v31;
  sub_100080C0C((uint64_t)v7, (uint64_t)v10, type metadata accessor for LearnMoreAttributorView);
  v10[*(int *)(v8 + 36)] = 0;
  sub_1000215BC((uint64_t)v7, type metadata accessor for LearnMoreAttributorView);
  v33 = static Edge.Set.leading.getter(v32);
  v34 = static Edge.Set.trailing.getter();
  v35 = Edge.Set.init(rawValue:)(0);
  v36 = Edge.Set.init(rawValue:)(v35);
  if (Edge.Set.init(rawValue:)(v36 & v33) != v33)
    v35 = Edge.Set.init(rawValue:)(v35 | v33);
  v37 = Edge.Set.init(rawValue:)(v35);
  if (Edge.Set.init(rawValue:)(v37 & v34) != v34)
    LOBYTE(v35) = Edge.Set.init(rawValue:)(v35 | v34);
  v38 = EdgeInsets.init(_all:)(32.0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_100037768((uint64_t)v10, (uint64_t)v12, &qword_100BD5E90);
  v45 = &v12[*(int *)(v53 + 36)];
  *v45 = v35;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_100021A14((uint64_t)v10, &qword_100BD5E90);
  v47 = v55;
  v46 = v56;
  v48 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, enum case for BlendMode.plusLighter(_:), v57);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v17[*(int *)(v54 + 36)], v47, v48);
  sub_100037768((uint64_t)v12, (uint64_t)v17, &qword_100BD5E98);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  sub_100021A14((uint64_t)v12, &qword_100BD5E98);
  sub_100037768((uint64_t)v17, (uint64_t)v14, &qword_100BD5EA0);
  v49 = v58;
  *v58 = 0;
  *((_BYTE *)v49 + 8) = 1;
  v50 = sub_1000BA294(&qword_100BD5EB0);
  sub_100037768((uint64_t)v14, (uint64_t)v49 + *(int *)(v50 + 48), &qword_100BD5EA0);
  v51 = (char *)v49 + *(int *)(v50 + 64);
  *(_QWORD *)v51 = 0;
  v51[8] = 1;
  sub_100021A14((uint64_t)v17, &qword_100BD5EA0);
  sub_100021A14((uint64_t)v14, &qword_100BD5EA0);
}

uint64_t sub_1002EA914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;

  v30 = a2;
  v3 = type metadata accessor for LocationFooterViewRowStyle(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000BA294(&qword_100BD5DD0);
  __chkstk_darwin(v29);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD5DD8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v15);
  *((_QWORD *)v7 + 1) = 0x402A000000000000;
  v7[16] = 0;
  v16 = sub_1000BA294(&qword_100BD5DE0);
  sub_1002EABB4(a1, (uint64_t)&v7[*(int *)(v16 + 44)]);
  *(_QWORD *)v5 = swift_getKeyPath(&unk_100993820);
  v5[8] = 0;
  *((_QWORD *)v5 + 2) = swift_getKeyPath(&unk_100993848);
  v5[24] = 0;
  v17 = &v5[*(int *)(v3 + 24)];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_100993878);
  v18 = sub_1000BA294(&qword_100BC68C8);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_10003D2DC(&qword_100BD5DE8, &qword_100BD5DD0);
  v20 = v19;
  sub_10000F1C8(&qword_100BD5DF0, type metadata accessor for LocationFooterViewRowStyle);
  View.labelStyle<A>(_:)(v5, v29, v3, v20, v21);
  sub_1000215BC((uint64_t)v5, type metadata accessor for LocationFooterViewRowStyle);
  sub_100021A14((uint64_t)v7, &qword_100BD5DD0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  v22 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v22(v11, v14, v8);
  v23 = v30;
  *v30 = 0x4040000000000000;
  *((_BYTE *)v23 + 8) = 0;
  v24 = (char *)v23;
  v25 = sub_1000BA294(&qword_100BD5DF8);
  v22(&v24[*(int *)(v25 + 48)], v11, v8);
  v26 = &v24[*(int *)(v25 + 64)];
  *(_QWORD *)v26 = 0x4040000000000000;
  v26[8] = 0;
  v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27(v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v27)(v11, v8);
}

void sub_1002EABB4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  void (*v104)(char *, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  void (*v130)(char *, uint64_t);
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;

  v172 = a2;
  v159 = sub_1000BA294(&qword_100BD5E00);
  v169 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v158 = (char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v157 = (char *)&v142 - v5;
  v6 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v6);
  v166 = (uint64_t)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = type metadata accessor for URL(0);
  v168 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v156 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v167 = (char *)&v142 - v10;
  v11 = sub_1000BA294(&qword_100BD5E08);
  __chkstk_darwin(v11);
  v171 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v170 = (uint64_t)&v142 - v14;
  v15 = type metadata accessor for LocationFooterView(0);
  v149 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v150 = v16;
  v151 = (uint64_t)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_1000BA294(&qword_100BD5E10);
  v153 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v154 = (char *)&v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v152 = (char *)&v142 - v19;
  v20 = sub_1000BA294(&qword_100BD5E18);
  __chkstk_darwin(v20);
  v181 = (uint64_t)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v180 = (uint64_t)&v142 - v23;
  v24 = sub_1000BA294(&qword_100BD5E20);
  __chkstk_darwin(v24);
  v148 = (uint64_t)&v142 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v147 = (uint64_t)&v142 - v27;
  v28 = sub_1000BA294(&qword_100BCD380);
  __chkstk_darwin(v28);
  v145 = (uint64_t *)((char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v144 = type metadata accessor for HomeAndWorkRefinementRow(0);
  __chkstk_darwin(v144);
  v31 = (char *)&v142 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v161 = (uint64_t)&v142 - v33;
  v34 = sub_1000BA294(&qword_100BCD688);
  __chkstk_darwin(v34);
  v36 = (char *)&v142 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  __chkstk_darwin(v37);
  v143 = (uint64_t)&v142 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v160 = (uint64_t)&v142 - v40;
  v41 = sub_1000BA294(&qword_100BD5E28);
  __chkstk_darwin(v41);
  v174 = (uint64_t)&v142 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v179 = (uint64_t)&v142 - v44;
  v182 = type metadata accessor for Divider(0);
  v45 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v163 = (char *)&v142 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v49 = (char *)&v142 - v48;
  v50 = sub_1000BA294(&qword_100BD5E30);
  __chkstk_darwin(v50);
  v52 = (char *)&v142 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1000BA294(&qword_100BD5E38);
  __chkstk_darwin(v53);
  v165 = (uint64_t)&v142 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v57 = (char *)&v142 - v56;
  *(_QWORD *)&v146 = v15;
  v58 = *(int *)(v15 + 28);
  v164 = a1;
  v59 = (_BYTE *)(a1 + v58);
  v60 = type metadata accessor for LocationFooterViewModel(0);
  v176 = v60;
  v177 = v49;
  v61 = *(int *)(v60 + 48);
  v173 = v59;
  if (v59[v61] == 1)
  {
    *(_QWORD *)v52 = 0;
    v52[8] = 1;
    swift_storeEnumTagMultiPayload(v52, v50, 0);
    sub_10000F1C8(&qword_100BC69B0, (uint64_t (*)(uint64_t))&type metadata accessor for Divider);
    _ConditionalContent<>.init(storage:)(v52, &type metadata for Spacer, v182, &protocol witness table for Spacer, v62);
  }
  else
  {
    Divider.init()(v60);
    v63 = v182;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v52, v49, v182);
    swift_storeEnumTagMultiPayload(v52, v50, 1);
    sub_10000F1C8(&qword_100BC69B0, (uint64_t (*)(uint64_t))&type metadata accessor for Divider);
    _ConditionalContent<>.init(storage:)(v52, &type metadata for Spacer, v63, &protocol witness table for Spacer, v64);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v63);
  }
  v65 = v45;
  v66 = v173;
  sub_100037768((uint64_t)&v173[*(int *)(v176 + 56)], (uint64_t)v36, &qword_100BCD688);
  v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37);
  v178 = v57;
  v162 = v65;
  if (v67 == 1)
  {
    sub_100021A14((uint64_t)v36, &qword_100BCD688);
    v68 = sub_1000BA294(&qword_100BD5E40);
    _s7Weather24LocationCompositionStateOwst_0(v179, 1, 1, v68);
    v69 = v181;
    v70 = v177;
  }
  else
  {
    v71 = v160;
    sub_10007802C((uint64_t)v36, v160, type metadata accessor for HomeAndWorkRefinementRowViewModel);
    v146 = *(_OWORD *)(v164 + *(int *)(v146 + 32));
    v72 = v143;
    sub_100080C0C(v71, v143, type metadata accessor for HomeAndWorkRefinementRowViewModel);
    KeyPath = swift_getKeyPath(&unk_100993878);
    v74 = (uint64_t)v145;
    *v145 = KeyPath;
    v75 = sub_1000BA294(&qword_100BC68C8);
    swift_storeEnumTagMultiPayload(v74, v75, 0);
    *(_QWORD *)v31 = swift_getKeyPath(&unk_100993820);
    v31[8] = 0;
    *((_QWORD *)v31 + 2) = swift_getKeyPath(&unk_100993848);
    v31[24] = 0;
    v76 = v144;
    sub_1000787D4(v74, (uint64_t)&v31[*(int *)(v144 + 24)], &qword_100BCD380);
    *(_OWORD *)&v31[*(int *)(v76 + 28)] = v146;
    sub_10007802C(v72, (uint64_t)&v31[*(int *)(v76 + 32)], type metadata accessor for HomeAndWorkRefinementRowViewModel);
    sub_10007802C((uint64_t)v31, v161, type metadata accessor for HomeAndWorkRefinementRow);
    if ((v66[v61] & 1) != 0)
    {
      v77 = v147;
      _s7Weather24LocationCompositionStateOwst_0(v147, 1, 1, v182);
      swift_unknownObjectRetain(v146);
    }
    else
    {
      v78 = swift_unknownObjectRetain(v146);
      v77 = v147;
      Divider.init()(v78);
      _s7Weather24LocationCompositionStateOwst_0(v77, 0, 1, v182);
    }
    v69 = v181;
    v70 = v177;
    v79 = v161;
    sub_100080C0C(v161, (uint64_t)v31, type metadata accessor for HomeAndWorkRefinementRow);
    v80 = v148;
    sub_100037768(v77, v148, &qword_100BD5E20);
    v81 = v174;
    sub_100080C0C((uint64_t)v31, v174, type metadata accessor for HomeAndWorkRefinementRow);
    v82 = sub_1000BA294(&qword_100BD5E80);
    sub_100037768(v80, v81 + *(int *)(v82 + 48), &qword_100BD5E20);
    sub_100021A14(v77, &qword_100BD5E20);
    sub_1000215BC(v79, type metadata accessor for HomeAndWorkRefinementRow);
    sub_1000215BC(v160, type metadata accessor for HomeAndWorkRefinementRowViewModel);
    sub_100021A14(v80, &qword_100BD5E20);
    sub_1000215BC((uint64_t)v31, type metadata accessor for HomeAndWorkRefinementRow);
    v83 = sub_1000BA294(&qword_100BD5E40);
    _s7Weather24LocationCompositionStateOwst_0(v81, 0, 1, v83);
    sub_1000787D4(v81, v179, &qword_100BD5E28);
    v65 = v162;
  }
  if (*v66 == 1)
  {
    v84 = v164;
    v85 = v151;
    sub_100080C0C(v164, v151, type metadata accessor for LocationFooterView);
    v86 = *(unsigned __int8 *)(v149 + 80);
    v87 = (v86 + 16) & ~v86;
    v88 = swift_allocObject(&unk_100B6C440, v87 + v150, v86 | 7);
    sub_10007802C(v85, v88 + v87, type metadata accessor for LocationFooterView);
    __chkstk_darwin(v89);
    *(&v142 - 2) = v84;
    v90 = sub_1000BA294(&qword_100BD5E68);
    v91 = sub_1002EEA54();
    v92 = v152;
    v93 = Button.init(action:label:)(sub_1002EEA38, v88, sub_1002EEA4C, &v142 - 4, v90, v91);
    Divider.init()(v93);
    v94 = v153;
    v95 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
    v96 = v154;
    v97 = v155;
    v95(v154, v92, v155);
    v98 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
    v99 = v65;
    v100 = v163;
    v101 = v182;
    v98(v163, v177, v182);
    v95((char *)v69, v96, v97);
    v102 = sub_1000BA294(&qword_100BD5E78);
    v98((char *)(v69 + *(int *)(v102 + 48)), v100, v101);
    v103 = *(void (**)(char *, uint64_t))(v99 + 8);
    v70 = v177;
    v103(v177, v101);
    v104 = *(void (**)(char *, uint64_t))(v94 + 8);
    v105 = v92;
    v66 = v173;
    v104(v105, v97);
    v103(v100, v101);
    v104(v96, v97);
    v106 = sub_1000BA294(&qword_100BD5E48);
    _s7Weather24LocationCompositionStateOwst_0(v69, 0, 1, v106);
    sub_1000787D4(v69, v180, &qword_100BD5E18);
  }
  else
  {
    v107 = sub_1000BA294(&qword_100BD5E48);
    _s7Weather24LocationCompositionStateOwst_0(v180, 1, 1, v107);
  }
  v108 = v175;
  v109 = v166;
  sub_100037768((uint64_t)&v66[*(int *)(v176 + 32)], v166, &qword_100BD4280);
  if (_s7Weather24LocationCompositionStateOwet_0(v109, 1, v108) == 1)
  {
    sub_100021A14(v109, &qword_100BD4280);
    v110 = sub_1000BA294(&qword_100BD5E50);
    v111 = v170;
    _s7Weather24LocationCompositionStateOwst_0(v170, 1, 1, v110);
    v112 = (uint64_t)v171;
    v113 = (uint64_t)v178;
  }
  else
  {
    v115 = v167;
    v114 = v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v167, v109, v108);
    v116 = v156;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v156, v115, v108);
    v117 = sub_1000BA294(&qword_100BCF180);
    sub_10003D2DC(&qword_100BCF188, &qword_100BCF180);
    v118 = v157;
    v120 = Link.init(destination:label:)(v116, sub_1002EBE64, 0, v117, v119);
    Divider.init()(v120);
    v121 = *(void (**)(char *, char *, uint64_t))(v169 + 16);
    v122 = v158;
    v123 = v159;
    v121(v158, v118, v159);
    v124 = v182;
    v125 = v70;
    v126 = v162;
    v127 = v163;
    v128 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
    v128(v163, v125, v182);
    v112 = (uint64_t)v171;
    v121(v171, v122, v123);
    v129 = sub_1000BA294(&qword_100BD5E60);
    v128((char *)(v112 + *(int *)(v129 + 48)), v127, v124);
    v130 = *(void (**)(char *, uint64_t))(v126 + 8);
    v130(v125, v124);
    v131 = *(void (**)(char *, uint64_t))(v169 + 8);
    v131(v118, v123);
    v113 = (uint64_t)v178;
    (*(void (**)(char *, uint64_t))(v168 + 8))(v167, v175);
    v130(v127, v124);
    v131(v122, v123);
    v132 = sub_1000BA294(&qword_100BD5E50);
    _s7Weather24LocationCompositionStateOwst_0(v112, 0, 1, v132);
    v111 = v170;
    sub_1000787D4(v112, v170, &qword_100BD5E08);
  }
  v133 = v165;
  sub_100037768(v113, v165, &qword_100BD5E38);
  v134 = v179;
  v135 = v174;
  sub_100037768(v179, v174, &qword_100BD5E28);
  v137 = v180;
  v136 = v181;
  sub_100037768(v180, v181, &qword_100BD5E18);
  sub_100037768(v111, v112, &qword_100BD5E08);
  v138 = v172;
  sub_100037768(v133, v172, &qword_100BD5E38);
  v139 = v111;
  v140 = v112;
  v141 = (int *)sub_1000BA294(&qword_100BD5E58);
  sub_100037768(v135, v138 + v141[12], &qword_100BD5E28);
  sub_100037768(v136, v138 + v141[16], &qword_100BD5E18);
  sub_100037768(v140, v138 + v141[20], &qword_100BD5E08);
  sub_100021A14(v139, &qword_100BD5E08);
  sub_100021A14(v137, &qword_100BD5E18);
  sub_100021A14(v134, &qword_100BD5E28);
  sub_100021A14((uint64_t)v178, &qword_100BD5E38);
  sub_100021A14(v140, &qword_100BD5E08);
  sub_100021A14(v136, &qword_100BD5E18);
  sub_100021A14(v135, &qword_100BD5E28);
  sub_100021A14(v133, &qword_100BD5E38);
}

double sub_1002EBAC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for LocationFooterView(0) + 28);
  v2 = type metadata accessor for LocationFooterViewModel(0);
  return sub_1006BEBA4(*(_BYTE *)(v1 + *(int *)(v2 + 40)));
}

uint64_t sub_1002EBB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t (*v15)(_QWORD);
  char v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;

  v32[1] = a2;
  v3 = sub_1000BA294(&qword_100BD5E88);
  __chkstk_darwin(v3);
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BCF180);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocationFooterView(0);
  __chkstk_darwin(v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_BYTE *)(a1 + *(int *)(v13 + 28) + 1);
  sub_100080C0C(a1, (uint64_t)v12, v15);
  if ((v14 & 1) == 0)
  {
    sub_1000215BC((uint64_t)v12, type metadata accessor for LocationFooterView);
    goto LABEL_5;
  }
  v16 = v12[*(int *)(v10 + 28) + 2];
  sub_1000215BC((uint64_t)v12, type metadata accessor for LocationFooterView);
  if ((v16 & 1) == 0)
  {
LABEL_5:
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v26._countAndFlagsBits = 0xD000000000000015;
    v35._countAndFlagsBits = 0xD000000000000040;
    v35._object = (void *)0x80000001009F9D80;
    v26._object = (void *)0x80000001009F9D60;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v35);

    v33 = v28;
    v29 = sub_100114EF8();
    Label<>.init<A>(_:systemImage:)(&v33, 0x6461622E6C6C6562, 0xEF6C6C69662E6567, &type metadata for String, v29);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
    v22 = v5;
    v23 = v3;
    v24 = 0;
    goto LABEL_6;
  }
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v34._countAndFlagsBits = 0xD00000000000003DLL;
  v34._object = (void *)0x80000001009F9DD0;
  v18._object = (void *)0x80000001009F7A30;
  v18._countAndFlagsBits = 0xD000000000000014;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v34);

  v33 = v20;
  v21 = sub_100114EF8();
  Label<>.init<A>(_:systemImage:)(&v33, 0x6461622E6C6C6562, 0xEF6C6C69662E6567, &type metadata for String, v21);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
  v22 = v5;
  v23 = v3;
  v24 = 1;
LABEL_6:
  swift_storeEnumTagMultiPayload(v22, v23, v24);
  sub_10003D2DC(&qword_100BCF188, &qword_100BCF180);
  _ConditionalContent<>.init(storage:)(v5, v6, v6, v30, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1002EBE64()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  Swift::String v6;
  Swift::String v7;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7._countAndFlagsBits = 0xD00000000000003DLL;
  v7._object = (void *)0x80000001009F9E10;
  v1._countAndFlagsBits = 0x206E69206E65704FLL;
  v1._object = (void *)0xEC0000007370614DLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v7);

  v6 = v3;
  v4 = sub_100114EF8();
  return Label<>.init<A>(_:systemImage:)(&v6, 0xD000000000000019, 0x80000001009F9E50, &type metadata for String, v4);
}

uint64_t sub_1002EBF54()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v0 + *(int *)(sub_1000D1D6C() + 32);
  v4 = sub_1000B4760();
  v5 = *(_BYTE *)(v3 + *(int *)(v4 + 28));
  v6 = v3 + *(int *)(v4 + 24);
  sub_1002EC0AC();
  sub_1000D8EF4();
  if ((v5 & 1) == 0)
  {
    v7 = v2 & 1;
    v20 = static Text.+ infix(_:_:)(v6, v1, v7, v3, 32, 0xE100000000000000, 0, _swiftEmptyArrayStorage);
    v21 = v8;
    v22 = v9;
    v11 = v10 & 1;
    sub_1000D31B4(v6, v1, v7);
    swift_bridgeObjectRelease();
    v12 = Image.init(systemName:)(0x7269632E6F666E69, 0xEB00000000656C63);
    v13 = Text.init(_:)(v12);
    v15 = v14;
    v17 = v16 & 1;
    static Text.+ infix(_:_:)(v20, v21, v11, v22, v13, v14, v17, v18);
    sub_1000D8EF4();
    sub_1000D31B4(v13, v15, v17);
    swift_bridgeObjectRelease();
    sub_1000D31B4(v20, v21, v11);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1002EC0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  const char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for LocationOfInterestType(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocationOfInterest.type.getter(v2);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v5 == enum case for LocationOfInterestType.home(_:))
  {
    v6 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x80000001009F9F50);
    v10 = v9 & 1;
    v11 = "Location footer action title for home refinement action";
  }
  else
  {
    if (v5 != enum case for LocationOfInterestType.work(_:))
    {
      v14 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
      v13 = Text.init(_:tableName:bundle:comment:)(v14, v16, v15 & 1, v17, 0, 0, 0, 0);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      return v13;
    }
    v6 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x80000001009F9EF0);
    v10 = v12 & 1;
    v11 = "Location footer action title for work refinement action";
  }
  return Text.init(_:tableName:bundle:comment:)(v6, v7, v10, v8, 0, 0, 0, v11);
}

uint64_t sub_1002EC268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;

  v2 = v1;
  v24[1] = a1;
  v3 = type metadata accessor for BorderlessButtonStyle(0);
  v24[0] = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000D1D6C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD5F68);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v2, (uint64_t)v9, type metadata accessor for HomeAndWorkRefinementRow);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_100B6C468, v15 + v8, v14 | 7);
  sub_10007802C((uint64_t)v9, v16 + v15, type metadata accessor for HomeAndWorkRefinementRow);
  v26 = v2;
  v17 = sub_1000BA294(&qword_100BD5F70);
  v18 = sub_1002EF714();
  v19 = Button.init(action:label:)(sub_1002EF6B8, v16, sub_1002EF70C, v25, v17, v18);
  BorderlessButtonStyle.init()(v19);
  sub_10003D2DC(&qword_100BD5FA0, &qword_100BD5F68);
  v21 = v20;
  sub_10000F1C8((unint64_t *)&qword_100BC4FC8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)(v5, v10, v3, v21, v22);
  (*(void (**)(char *, uint64_t))(v24[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1002EC46C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  char v13;

  v2 = type metadata accessor for LocationFooterAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v4[*(int *)(sub_1000BA294(&qword_100BC5FC0) + 48)];
  v6 = a1 + *(int *)(type metadata accessor for HomeAndWorkRefinementRow(0) + 32);
  v7 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v8 = v6 + *(int *)(v7 + 20);
  v9 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v4, v8, v9);
  v10 = v6 + *(int *)(v7 + 24);
  v11 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v5, v10, v11);
  memset(v12, 0, sizeof(v12));
  v13 = 1;
  sub_1006BE8FC((uint64_t)v4, (uint64_t)v12);
  sub_1000215BC((uint64_t)v4, type metadata accessor for LocationFooterAction);
}

void sub_1002EC598(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  __n128 v21;
  int v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  int v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  unsigned int *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD v44[24];
  _BYTE v45[176];
  _BYTE v46[167];
  _BYTE __src[168];

  v43 = a2;
  v3 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v3);
  v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BlendMode(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  __chkstk_darwin(v5);
  v39 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ColorSchemeContrast(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v38 = sub_1000BA294(&qword_100BD5F70);
  __chkstk_darwin(v38);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = static VerticalAlignment.center.getter(v16);
  sub_1002EC8EC(a1, (uint64_t)__src);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_BYTE *)(a1 + 24);
  sub_10008D47C(v17, v18);
  sub_100109B54();
  v20 = v19;
  sub_1000B15F8(v17, v18);
  if ((v20 & 1) != 0)
  {
    v22 = static HierarchicalShapeStyle.secondary.getter(v21);
  }
  else
  {
    type metadata accessor for HomeAndWorkRefinementRow(0);
    sub_100114A94();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ColorSchemeContrast.increased(_:), v7);
    v23 = static ColorSchemeContrast.== infix(_:_:)(v13, v10);
    v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    v24(v10, v7);
    v25 = ((uint64_t (*)(char *, uint64_t))v24)(v13, v7);
    if ((v23 & 1) != 0)
      v22 = static HierarchicalShapeStyle.primary.getter(v25);
    else
      v22 = static HierarchicalShapeStyle.tertiary.getter(v25);
  }
  v26 = v22;
  v45[168] = 0;
  memcpy(&v45[7], __src, 0xA0uLL);
  memcpy(v46, v45, sizeof(v46));
  v27 = *(_QWORD *)(a1 + 16);
  v28 = *(_BYTE *)(a1 + 24);
  sub_10008D47C(v27, v28);
  sub_100109B54();
  v30 = v29;
  sub_1000B15F8(v27, v28);
  v31 = (unsigned int *)&enum case for BlendMode.normal(_:);
  v33 = v40;
  v32 = v41;
  if ((v30 & 1) == 0)
    v31 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  v34 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, *v31, v41);
  v44[0] = v37;
  v44[1] = 0x4010000000000000;
  LOBYTE(v44[2]) = 0;
  memcpy((char *)&v44[2] + 1, v46, 0xA7uLL);
  LODWORD(v44[23]) = v26;
  v35 = (uint64_t)v42;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v42, v34, v32);
  sub_100080C0C(v35, (uint64_t)&v15[*(int *)(v38 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  memcpy(v15, v44, 0xBCuLL);
  sub_1002EF81C((uint64_t)v44);
  sub_1000215BC(v35, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  sub_1002EF8D8((uint64_t)__src);
  sub_1000787D4((uint64_t)v15, v43, &qword_100BD5F70);
}

uint64_t sub_1002EC8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned __int8 *v4;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE __src[129];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v3 = type metadata accessor for HomeAndWorkRefinementRow(0);
  v4 = (unsigned __int8 *)(a1 + *(int *)(v3 + 32));
  v5 = *v4;
  if (v5 == 1)
    v6 = static HorizontalAlignment.center.getter(v3);
  else
    v6 = static HorizontalAlignment.leading.getter(v3);
  v26 = v6;
  sub_1002ECAFC(a1, &v29);
  v19 = v30;
  v20 = v29;
  v7 = v31;
  v17 = v33;
  v18 = v32;
  v14 = v35;
  v8 = v37;
  v24 = v38;
  v25 = v36;
  v22 = v41;
  v23 = v40;
  v21 = v42;
  v48 = 1;
  v47 = v31;
  v15 = v39;
  v16 = v34;
  v46 = v39;
  v9 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v10 = 0;
  if (v4[*(int *)(v9 + 28)] == 1)
    v10 = Image.init(systemName:)(0x7269632E6F666E69, 0xEB00000000656C63);
  *(_QWORD *)__src = v26;
  *(_QWORD *)&__src[8] = 0;
  __src[16] = 1;
  *(_QWORD *)&__src[24] = v20;
  *(_QWORD *)&__src[32] = v19;
  __src[40] = v7;
  *(_QWORD *)&__src[48] = v18;
  *(_QWORD *)&__src[56] = v17;
  __src[64] = v16;
  *(_QWORD *)&__src[72] = v14;
  *(_QWORD *)&__src[80] = v25;
  *(_QWORD *)&__src[88] = v8;
  *(_QWORD *)&__src[96] = v24;
  __src[104] = v15;
  *(_QWORD *)&__src[112] = v23;
  *(_QWORD *)&__src[120] = v22;
  __src[128] = v21;
  v11 = v10;
  memcpy((void *)a2, __src, 0x81uLL);
  v28 = v5;
  *(_QWORD *)(a2 + 136) = 0;
  *(_BYTE *)(a2 + 144) = v5 ^ 1;
  *(_BYTE *)(a2 + 145) = v5;
  *(_QWORD *)(a2 + 152) = v11;
  sub_1002EF994((uint64_t)__src);
  v29 = v26;
  v30 = 0;
  v31 = 1;
  v32 = v20;
  v33 = v19;
  v34 = v7;
  v35 = v18;
  v36 = v17;
  LOBYTE(v37) = v16;
  v38 = v14;
  v39 = v25;
  v40 = v8;
  v41 = v24;
  v42 = v15;
  v43 = v23;
  v44 = v22;
  v45 = v21;
  return sub_1002EFA38((uint64_t)&v29);
}

double sub_1002ECAFC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double result;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  void (*v91)(char *, _QWORD, uint64_t);
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  _QWORD *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[4];

  v95 = a2;
  v3 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v3);
  v105 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v82 - v6;
  v8 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v8);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Font.TextStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = sub_1002EBF54();
  v97 = v15;
  v102 = v16;
  v18 = v17 & 1;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v19(v14, enum case for Font.TextStyle.subheadline(_:), v11);
  v98 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v98);
  v20 = static Font.system(_:design:weight:)(v14, v10, 0, 1);
  sub_100021A14((uint64_t)v10, &qword_100BC3B98);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v14, v11);
  v93 = enum case for Font.TextStyle.footnote(_:);
  v99 = v19;
  v22 = ((uint64_t (*)(char *))v19)(v14);
  static Font.Weight.bold.getter(v22);
  v23 = static Font.system(_:weight:)(v14);
  v88 = v11;
  v96 = v21;
  v21(v14, v11);
  v83 = a1;
  v24 = *(_QWORD *)a1;
  LOBYTE(v11) = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v11);
  sub_100109B54();
  LOBYTE(v21) = v25;
  sub_1000B15F8(v24, v11);
  v26 = enum case for Font.Leading.tight(_:);
  v27 = type metadata accessor for Font.Leading(0);
  v28 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104);
  v94 = v26;
  v91 = v28;
  v28(v7, v26, v27);
  v92 = v27;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v27);
  v29 = v105;
  sub_100037768((uint64_t)v7, v105, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v30 = sub_10040BDEC(v20, v23, v21 & 1, v29);
  v31 = KeyPath;
  v32 = v97;
  v103 = Text.font(_:)(v30, KeyPath, v97, v18, v102);
  v104 = v33;
  v101 = v34;
  LODWORD(v90) = v35;
  swift_release(v20);
  swift_release(v23);
  swift_release(v30);
  sub_1000D31B4(v31, v32, v18);
  swift_bridgeObjectRelease();
  v102 = v7;
  v36 = (uint64_t)v7;
  v37 = v83;
  sub_100021A14(v36, &qword_100BCCDA8);
  KeyPath = swift_getKeyPath(&unk_100993948);
  v38 = *(_QWORD *)(v37 + 16);
  LOBYTE(v20) = *(_BYTE *)(v37 + 24);
  sub_10008D47C(v38, v20);
  sub_100109B54();
  LOBYTE(v23) = v39;
  v40 = sub_1000B15F8(v38, v20);
  if ((v23 & 1) != 0)
    v42 = static Color.white.getter(v40);
  else
    v42 = static Color.primary.getter(v41);
  v97 = v42;
  v89 = v90 & 1;
  v90 = swift_getKeyPath(&unk_100993978);
  type metadata accessor for HomeAndWorkRefinementRow(0);
  type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v106[0] = sub_10091E238();
  v106[1] = v43;
  v44 = sub_100114EF8();
  v86 = Text.init<A>(_:)(v106, &type metadata for String, v44);
  v85 = v45;
  v87 = v46;
  v84 = v47 & 1;
  v48 = v93;
  v49 = v88;
  v50 = v99;
  v99(v14, v93, v88);
  v51 = v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v98);
  v52 = static Font.system(_:design:weight:)(v14, v10, 0, 1);
  sub_100021A14((uint64_t)v10, &qword_100BC3B98);
  v53 = v96;
  v96(v14, v49);
  v50(v14, v48, v49);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v51);
  v54 = static Font.system(_:design:weight:)(v14, v10, 0, 1);
  sub_100021A14((uint64_t)v10, &qword_100BC3B98);
  v53(v14, v49);
  v55 = *(_QWORD *)v37;
  v56 = *(_BYTE *)(v37 + 8);
  sub_10008D47C(v55, v56);
  sub_100109B54();
  v58 = v57;
  sub_1000B15F8(v55, v56);
  v59 = (uint64_t)v102;
  v60 = v92;
  v91(v102, v94, v92);
  _s7Weather24LocationCompositionStateOwst_0(v59, 0, 1, v60);
  v61 = v105;
  sub_100037768(v59, v105, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v62 = sub_10040BDEC(v52, v54, v58 & 1, v61);
  v63 = v86;
  v64 = v85;
  v65 = v84;
  v66 = Text.font(_:)(v62, v86, v85, v84, v87);
  v99 = v67;
  LOBYTE(v49) = v68;
  v105 = v69;
  swift_release(v52);
  swift_release(v54);
  swift_release(v62);
  LOBYTE(v52) = v49 & 1;
  sub_1000D31B4(v63, v64, v65);
  swift_bridgeObjectRelease();
  sub_100021A14(v59, &qword_100BCCDA8);
  v70 = swift_getKeyPath(&unk_100993948);
  v71 = v89;
  LOBYTE(v106[0]) = v89;
  v72 = v104;
  v73 = v95;
  v74 = v103;
  v75 = KeyPath;
  v76 = v101;
  *v95 = v103;
  v73[1] = v76;
  *((_BYTE *)v73 + 16) = v71;
  v73[3] = v72;
  v73[4] = v75;
  *((_BYTE *)v73 + 40) = 0;
  v77 = v90;
  v78 = v97;
  v73[6] = v90;
  v73[7] = v78;
  v79 = (uint64_t)v99;
  v73[8] = v66;
  v73[9] = v79;
  *((_BYTE *)v73 + 80) = v52;
  v80 = v105;
  v73[11] = v105;
  v73[12] = v70;
  *((_BYTE *)v73 + 104) = 0;
  sub_1000D55D4(v74, v76, v71);
  swift_bridgeObjectRetain(v72);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000D55D4(v66, v79, v52);
  swift_bridgeObjectRetain(v80);
  swift_retain();
  sub_1000D31B4(v66, v79, v52);
  swift_release(v70);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v103, v76, v106[0]);
  swift_release(v78);
  swift_release(v77);
  swift_release(v75);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1002ED1D4()
{
  EnvironmentValues.colorSchemeContrast.getter();
  sub_10004A298();
}

unint64_t sub_1002ED1F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v18 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_10008D47C(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    v14 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      v15 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v59 = a3;
    v19 = *(int *)(a3 + 28);
    v20 = a1 + v19;
    v21 = a2 + v19;
    *(_BYTE *)v20 = *(_BYTE *)(a2 + v19);
    *(_WORD *)(v20 + 1) = *(_WORD *)(a2 + v19 + 1);
    v22 = *(_QWORD *)(a2 + v19 + 16);
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(a2 + v19 + 8);
    *(_QWORD *)(v20 + 16) = v22;
    v23 = (int *)type metadata accessor for LocationFooterViewModel(0);
    v24 = v23[8];
    v25 = (void *)(v20 + v24);
    v26 = (const void *)(v21 + v24);
    v27 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain(v22);
    v60 = a2;
    v61 = a1;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
    {
      v28 = sub_1000BA294(&qword_100BD4280);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
    }
    v29 = v23[9];
    v30 = v20 + v29;
    v31 = v21 + v29;
    *(_BYTE *)v30 = *(_BYTE *)(v21 + v29);
    v32 = *(_QWORD *)(v21 + v29 + 8);
    *(_QWORD *)(v30 + 8) = v32;
    v33 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
    v34 = v33[6];
    v35 = (void *)(v30 + v34);
    v36 = (const void *)(v31 + v34);
    swift_bridgeObjectRetain(v32);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v27))
    {
      v37 = sub_1000BA294(&qword_100BD4280);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v35, v36, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v27);
    }
    v38 = v33[7];
    v39 = (_QWORD *)(v30 + v38);
    v40 = (_QWORD *)(v31 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    *(_QWORD *)(v30 + v33[8]) = *(_QWORD *)(v31 + v33[8]);
    *(_BYTE *)(v20 + v23[10]) = *(_BYTE *)(v21 + v23[10]);
    v42 = v23[11];
    v43 = (void *)(v20 + v42);
    v44 = (const void *)(v21 + v42);
    v45 = type metadata accessor for LocationOfInterest(0);
    swift_bridgeObjectRetain(v41);
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      v46 = sub_1000BA294(&qword_100BC3118);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    v18 = v61;
    *(_BYTE *)(v20 + v23[12]) = *(_BYTE *)(v21 + v23[12]);
    *(_BYTE *)(v20 + v23[13]) = *(_BYTE *)(v21 + v23[13]);
    v47 = v23[14];
    v48 = (_BYTE *)(v20 + v47);
    v49 = (_BYTE *)(v21 + v47);
    v50 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, (uint64_t)v50))
    {
      v51 = sub_1000BA294(&qword_100BCD688);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      *v48 = *v49;
      v52 = v50[5];
      v53 = &v48[v52];
      v54 = &v49[v52];
      v55 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(&v48[v50[6]], &v49[v50[6]], v45);
      v48[v50[7]] = v49[v50[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, (uint64_t)v50);
    }
    v56 = *(int *)(v59 + 32);
    v57 = *(_OWORD *)(v60 + v56);
    *(_OWORD *)(v61 + v56) = v57;
    swift_unknownObjectRetain(v57);
  }
  return v18;
}

uint64_t sub_1002ED620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  int *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_1000B15F8(v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_100021A14(a1 + v14, &qword_100BC68C8);
    v17 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v16) == 1)
    {
      v18 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  v83 = a3;
  v20 = *(int *)(a3 + 28);
  v85 = a1;
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(a2 + v20);
  *(_BYTE *)(v21 + 1) = *(_BYTE *)(a2 + v20 + 1);
  *(_BYTE *)(v21 + 2) = *(_BYTE *)(a2 + v20 + 2);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(a2 + v20 + 8);
  v23 = *(_QWORD *)(a2 + v20 + 16);
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease();
  v24 = (int *)type metadata accessor for LocationFooterViewModel(0);
  v25 = v24[8];
  v26 = (void *)(v21 + v25);
  v27 = (const void *)(v22 + v25);
  v28 = type metadata accessor for URL(0);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  v84 = a2;
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  v31 = *(_QWORD *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v26, v28);
LABEL_11:
    v32 = sub_1000BA294(&qword_100BD4280);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, const void *, uint64_t))(v31 + 24))(v26, v27, v28);
LABEL_12:
  v33 = v24[9];
  v34 = v21 + v33;
  v35 = v22 + v33;
  *(_BYTE *)v34 = *(_BYTE *)(v22 + v33);
  v36 = *(_QWORD *)(v22 + v33 + 8);
  *(_QWORD *)(v34 + 8) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease();
  v37 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v38 = v37[6];
  v39 = (void *)(v34 + v38);
  v40 = (const void *)(v35 + v38);
  v41 = _s7Weather24LocationCompositionStateOwet_0(v34 + v38, 1, v28);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v39, v40, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v28);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  v43 = *(_QWORD *)(v28 - 8);
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v39, v28);
LABEL_17:
    v44 = sub_1000BA294(&qword_100BD4280);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v43 + 24))(v39, v40, v28);
LABEL_18:
  v45 = v37[7];
  v46 = (_QWORD *)(v34 + v45);
  v47 = (_QWORD *)(v35 + v45);
  *v46 = *v47;
  v48 = v47[1];
  v46[1] = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease();
  v49 = v37[8];
  v50 = *(_QWORD *)(v34 + v49);
  *(_QWORD *)(v34 + v49) = *(_QWORD *)(v35 + v49);
  swift_retain();
  swift_release(v50);
  *(_BYTE *)(v21 + v24[10]) = *(_BYTE *)(v22 + v24[10]);
  v51 = v24[11];
  v52 = (void *)(v21 + v51);
  v53 = (const void *)(v22 + v51);
  v54 = type metadata accessor for LocationOfInterest(0);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v54);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54);
  if (v55)
  {
    v57 = v84;
    if (!v56)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  v58 = *(_QWORD *)(v54 - 8);
  v57 = v84;
  if (v56)
  {
    (*(void (**)(void *, uint64_t))(v58 + 8))(v52, v54);
LABEL_23:
    v59 = sub_1000BA294(&qword_100BC3118);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, const void *, uint64_t))(v58 + 24))(v52, v53, v54);
LABEL_24:
  *(_BYTE *)(v21 + v24[12]) = *(_BYTE *)(v22 + v24[12]);
  *(_BYTE *)(v21 + v24[13]) = *(_BYTE *)(v22 + v24[13]);
  v60 = v24[14];
  v61 = (_BYTE *)(v21 + v60);
  v62 = (_BYTE *)(v22 + v60);
  v63 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v63);
  v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v63);
  if (!v64)
  {
    v66 = v83;
    if (!v65)
    {
      *v61 = *v62;
      v79 = v63[5];
      v80 = &v61[v79];
      v81 = &v62[v79];
      v82 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v80, v81, v82);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(&v61[v63[6]], &v62[v63[6]], v54);
      v61[v63[7]] = v62[v63[7]];
      goto LABEL_30;
    }
    sub_1000215BC((uint64_t)v61, type metadata accessor for HomeAndWorkRefinementRowViewModel);
    goto LABEL_29;
  }
  v66 = v83;
  if (v65)
  {
LABEL_29:
    v71 = sub_1000BA294(&qword_100BCD688);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_30;
  }
  *v61 = *v62;
  v67 = v63[5];
  v68 = &v61[v67];
  v69 = &v62[v67];
  v70 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(&v61[v63[6]], &v62[v63[6]], v54);
  v61[v63[7]] = v62[v63[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
LABEL_30:
  v72 = *(int *)(v66 + 32);
  v73 = (uint64_t *)(v85 + v72);
  v74 = (uint64_t *)(v57 + v72);
  v75 = *v74;
  v76 = v74[1];
  v77 = *v73;
  *v73 = *v74;
  swift_unknownObjectRetain(v75);
  swift_unknownObjectRelease(v77);
  v73[1] = v76;
  return v85;
}

uint64_t sub_1002EDC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_WORD *)(v12 + 1) = *(_WORD *)(a2 + v11 + 1);
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(a2 + v11 + 8);
  v14 = (int *)type metadata accessor for LocationFooterViewModel(0);
  v15 = v14[8];
  v16 = (void *)(v12 + v15);
  v17 = (const void *)(v13 + v15);
  v18 = type metadata accessor for URL(0);
  v43 = a3;
  v44 = a2;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BD4280);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v20 = v14[9];
  v21 = v12 + v20;
  v22 = v13 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(v13 + v20);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v13 + v20 + 8);
  v23 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v24 = v23[6];
  v25 = (void *)(v21 + v24);
  v26 = (const void *)(v22 + v24);
  if (_s7Weather24LocationCompositionStateOwet_0(v22 + v24, 1, v18))
  {
    v27 = sub_1000BA294(&qword_100BD4280);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v25, v26, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v18);
  }
  *(_OWORD *)(v21 + v23[7]) = *(_OWORD *)(v22 + v23[7]);
  *(_QWORD *)(v21 + v23[8]) = *(_QWORD *)(v22 + v23[8]);
  *(_BYTE *)(v12 + v14[10]) = *(_BYTE *)(v13 + v14[10]);
  v28 = v14[11];
  v29 = (void *)(v12 + v28);
  v30 = (const void *)(v13 + v28);
  v31 = type metadata accessor for LocationOfInterest(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    v32 = sub_1000BA294(&qword_100BC3118);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  *(_BYTE *)(v12 + v14[12]) = *(_BYTE *)(v13 + v14[12]);
  *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
  v33 = v14[14];
  v34 = (_BYTE *)(v12 + v33);
  v35 = (_BYTE *)(v13 + v33);
  v36 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v36))
  {
    v37 = sub_1000BA294(&qword_100BCD688);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *v34 = *v35;
    v38 = v36[5];
    v39 = &v34[v38];
    v40 = &v35[v38];
    v41 = type metadata accessor for Location(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(&v34[v36[6]], &v35[v36[6]], v31);
    v34[v36[7]] = v35[v36[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, (uint64_t)v36);
  }
  *(_OWORD *)(a1 + *(int *)(v43 + 32)) = *(_OWORD *)(v44 + *(int *)(v43 + 32));
  return a1;
}

uint64_t sub_1002EDFCC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  int *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_1000B15F8(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    v13 = *(int *)(a3 + 24);
    v14 = (void *)(a1 + v13);
    v15 = (char *)a2 + v13;
    sub_100021A14(a1 + v13, &qword_100BC68C8);
    v16 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v15) == 1)
    {
      v17 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v80 = a3;
  v18 = *(int *)(a3 + 28);
  v82 = a1;
  v19 = a1 + v18;
  v20 = (uint64_t)a2 + v18;
  *(_BYTE *)v19 = *((_BYTE *)a2 + v18);
  *(_BYTE *)(v19 + 1) = *((_BYTE *)a2 + v18 + 1);
  *(_BYTE *)(v19 + 2) = *((_BYTE *)a2 + v18 + 2);
  v21 = *(uint64_t *)((char *)a2 + v18 + 16);
  *(_QWORD *)(v19 + 8) = *(uint64_t *)((char *)a2 + v18 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  v22 = (int *)type metadata accessor for LocationFooterViewModel(0);
  v23 = v22[8];
  v24 = (void *)(v19 + v23);
  v25 = (const void *)(v20 + v23);
  v26 = type metadata accessor for URL(0);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  v81 = a2;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v29 = *(_QWORD *)(v26 - 8);
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v24, v26);
LABEL_10:
    v30 = sub_1000BA294(&qword_100BD4280);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(void *, const void *, uint64_t))(v29 + 40))(v24, v25, v26);
LABEL_11:
  v31 = v22[9];
  v32 = v19 + v31;
  v33 = v20 + v31;
  *(_BYTE *)v32 = *(_BYTE *)(v20 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v20 + v31 + 8);
  swift_bridgeObjectRelease();
  v34 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v35 = v34[6];
  v36 = (void *)(v32 + v35);
  v37 = (const void *)(v33 + v35);
  v38 = _s7Weather24LocationCompositionStateOwet_0(v32 + v35, 1, v26);
  v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v26);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v36, v37, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v26);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v40 = *(_QWORD *)(v26 - 8);
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v40 + 8))(v36, v26);
LABEL_16:
    v41 = sub_1000BA294(&qword_100BD4280);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, const void *, uint64_t))(v40 + 40))(v36, v37, v26);
LABEL_17:
  v42 = v34[7];
  v43 = (_QWORD *)(v32 + v42);
  v44 = (uint64_t *)(v33 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  v47 = v34[8];
  v48 = *(_QWORD *)(v32 + v47);
  *(_QWORD *)(v32 + v47) = *(_QWORD *)(v33 + v47);
  swift_release(v48);
  *(_BYTE *)(v19 + v22[10]) = *(_BYTE *)(v20 + v22[10]);
  v49 = v22[11];
  v50 = (void *)(v19 + v49);
  v51 = (const void *)(v20 + v49);
  v52 = type metadata accessor for LocationOfInterest(0);
  v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v52);
  v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52);
  if (v53)
  {
    v55 = v81;
    if (!v54)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v56 = *(_QWORD *)(v52 - 8);
  v55 = v81;
  if (v54)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v50, v52);
LABEL_22:
    v57 = sub_1000BA294(&qword_100BC3118);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, const void *, uint64_t))(v56 + 40))(v50, v51, v52);
LABEL_23:
  *(_BYTE *)(v19 + v22[12]) = *(_BYTE *)(v20 + v22[12]);
  *(_BYTE *)(v19 + v22[13]) = *(_BYTE *)(v20 + v22[13]);
  v58 = v22[14];
  v59 = (_BYTE *)(v19 + v58);
  v60 = (_BYTE *)(v20 + v58);
  v61 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, (uint64_t)v61);
  v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, (uint64_t)v61);
  if (!v62)
  {
    v64 = v82;
    if (!v63)
    {
      *v59 = *v60;
      v76 = v61[5];
      v77 = &v59[v76];
      v78 = &v60[v76];
      v79 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(&v59[v61[6]], &v60[v61[6]], v52);
      v59[v61[7]] = v60[v61[7]];
      goto LABEL_29;
    }
    sub_1000215BC((uint64_t)v59, type metadata accessor for HomeAndWorkRefinementRowViewModel);
    goto LABEL_28;
  }
  v64 = v82;
  if (v63)
  {
LABEL_28:
    v69 = sub_1000BA294(&qword_100BCD688);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_29;
  }
  *v59 = *v60;
  v65 = v61[5];
  v66 = &v59[v65];
  v67 = &v60[v65];
  v68 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(&v59[v61[6]], &v60[v61[6]], v52);
  v59[v61[7]] = v60[v61[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, (uint64_t)v61);
LABEL_29:
  v70 = *(int *)(v80 + 32);
  v71 = (uint64_t *)(v64 + v70);
  v72 = (uint64_t *)((char *)v55 + v70);
  v73 = v72[1];
  v74 = *v71;
  *v71 = *v72;
  swift_unknownObjectRelease(v74);
  v71[1] = v73;
  return v64;
}

void sub_1002EE574(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  sub_10009E50C();
  sub_1000BA294(&qword_100BCD380);
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = a3[6];
  }
  else
  {
    sub_1000D11C0();
    sub_100088FF0();
    if (!v9)
    {
      sub_10009BCB4(a3[8]);
      sub_100079F70();
      return;
    }
    v7 = v10;
    v8 = a3[7];
  }
  sub_1000B250C(v4 + v8, v3, v7);
}

void sub_1002EE5E0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_10009E50C();
  sub_1000BA294(&qword_100BCD380);
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = a4[6];
  }
  else
  {
    sub_1000D11C0();
    sub_10009D2E8();
    if (!v10)
    {
      *(_QWORD *)(v5 + a4[8]) = (v4 - 1);
      sub_100079F70();
      return;
    }
    v8 = v11;
    v9 = a4[7];
  }
  sub_1000987C4(v5 + v9, v4, v4, v8);
}

double sub_1002EE658(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

unint64_t sub_1002EE674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD5DA0;
  if (!qword_100BD5DA0)
  {
    v1 = sub_100075EB0(&qword_100BD5D70);
    sub_10003D2DC(&qword_100BD5DA8, &qword_100BD5D58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD5DA0);
  }
  return result;
}

double sub_1002EE6F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1000D55D4(a1, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain(a4);
    swift_retain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

uint64_t sub_1002EE754(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

double sub_1002EE7B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  if (a4)
  {
    sub_1000D31B4(a1, a2, a3 & 1);
    swift_release(a7);
    swift_release(a5);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(a8).n128_u64[0];
  }
  return result;
}

uint64_t type metadata accessor for HomeAndWorkRefinementRow(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD5F10, (uint64_t)&nominal type descriptor for HomeAndWorkRefinementRow);
}

uint64_t sub_1002EE83C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = (int *)type metadata accessor for LocationFooterView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  sub_1000B15F8(*(_QWORD *)(v0 + v4), *(_BYTE *)(v0 + v4 + 8));
  sub_1000B15F8(*(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  v7 = (_QWORD *)(v0 + v4 + v1[6]);
  v8 = sub_1000BA294(&qword_100BC68C8);
  v24 = v5;
  v25 = v0;
  if (sub_100098814(v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    sub_1000987E0(v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = v6 + v1[7];
  swift_bridgeObjectRelease();
  v11 = (int *)sub_1000D11C0();
  v12 = v10 + v11[8];
  v13 = type metadata accessor for URL(0);
  if (!sub_1000B4560(v12))
    sub_1000B4684();
  v14 = v10 + v11[9];
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for LearnMoreAttributorViewModel(0);
  v16 = v14 + *(int *)(v15 + 24);
  if (!sub_1000B4560(v16))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v16, v13);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v14 + *(int *)(v15 + 32)));
  v17 = v10 + v11[11];
  v18 = type metadata accessor for LocationOfInterest(0);
  if (!sub_1000B4560(v17))
    sub_1000B4684();
  v19 = v10 + v11[14];
  v20 = sub_1000B4760();
  if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
  {
    v21 = v19 + *(int *)(v20 + 20);
    v22 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v19 + *(int *)(v20 + 24), v18);
  }
  swift_unknownObjectRelease(*(_QWORD *)(v6 + v1[8]));
  return swift_deallocObject(v25, v4 + v24, v3 | 7);
}

uint64_t sub_1002EEA38()
{
  return sub_1002EF6CC(type metadata accessor for LocationFooterView, (uint64_t (*)(uint64_t))sub_1002EBAC8);
}

uint64_t sub_1002EEA4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002EBB0C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002EEA54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD5E70;
  if (!qword_100BD5E70)
  {
    v1 = sub_100075EB0(&qword_100BD5E68);
    sub_10003D2DC(&qword_100BCF188, &qword_100BCF180);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD5E70);
  }
  return result;
}

unint64_t sub_1002EEAD0(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_10008D47C(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = a3[6];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    v14 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      v15 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v18 = a3[7];
    v19 = a3[8];
    v33 = *(_OWORD *)(a2 + v18);
    *(_OWORD *)(a1 + v18) = v33;
    v20 = a1 + v19;
    v21 = a2 + v19;
    *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
    v22 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
    v23 = v22[5];
    v24 = v20 + v23;
    v25 = v21 + v23;
    v26 = type metadata accessor for Location(0);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_unknownObjectRetain(v33);
    v27(v24, v25, v26);
    v28 = v22[6];
    v29 = v20 + v28;
    v30 = v21 + v28;
    v31 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    *(_BYTE *)(v20 + v22[7]) = *(_BYTE *)(v21 + v22[7]);
  }
  return a1;
}

uint64_t sub_1002EEC90(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = (_QWORD *)(a1 + a2[6]);
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release(*v4);
  }
  swift_unknownObjectRelease(*(_QWORD *)(a1 + a2[7]));
  v6 = a1 + a2[8];
  v7 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v8 = v6 + *(int *)(v7 + 20);
  v9 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v6 + *(int *)(v7 + 24);
  v11 = type metadata accessor for LocationOfInterest(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t sub_1002EED84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v31;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v12) == 1)
  {
    v14 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    *v11 = *v12;
    swift_retain();
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v16 = a3[7];
  v17 = a3[8];
  v31 = *(_OWORD *)(a2 + v16);
  *(_OWORD *)(a1 + v16) = v31;
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v20 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v21 = v20[5];
  v22 = v18 + v21;
  v23 = v19 + v21;
  v24 = type metadata accessor for Location(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  swift_unknownObjectRetain(v31);
  v25(v22, v23, v24);
  v26 = v20[6];
  v27 = v18 + v26;
  v28 = v19 + v26;
  v29 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  *(_BYTE *)(v18 + v20[7]) = *(_BYTE *)(v19 + v20[7]);
  return a1;
}

uint64_t sub_1002EEF18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_1000B15F8(v12, v13);
  if (a1 != a2)
  {
    v14 = a3[6];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_100021A14(a1 + v14, &qword_100BC68C8);
    v17 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v16) == 1)
    {
      v18 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  v20 = a3[7];
  v21 = (uint64_t *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  v24 = v22[1];
  v25 = *v21;
  *v21 = *v22;
  swift_unknownObjectRetain(v23);
  swift_unknownObjectRelease(v25);
  v21[1] = v24;
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v29 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v30 = v29[5];
  v31 = v27 + v30;
  v32 = v28 + v30;
  v33 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = v29[6];
  v35 = v27 + v34;
  v36 = v28 + v34;
  v37 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  *(_BYTE *)(v27 + v29[7]) = *(_BYTE *)(v28 + v29[7]);
  return a1;
}

uint64_t sub_1002EF0D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v14 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v15 = v14[5];
  v16 = v12 + v15;
  v17 = v13 + v15;
  v18 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = v14[6];
  v20 = v12 + v19;
  v21 = v13 + v19;
  v22 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  *(_BYTE *)(v12 + v14[7]) = *(_BYTE *)(v13 + v14[7]);
  return a1;
}

uint64_t sub_1002EF234(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_1000B15F8(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    v13 = a3[6];
    v14 = (void *)(a1 + v13);
    v15 = (char *)a2 + v13;
    sub_100021A14(a1 + v13, &qword_100BC68C8);
    v16 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v15) == 1)
    {
      v17 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v18 = a3[7];
  v19 = (uint64_t *)(a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  v21 = v20[1];
  v22 = *v19;
  *v19 = *v20;
  swift_unknownObjectRelease(v22);
  v19[1] = v21;
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = (uint64_t)a2 + v23;
  *(_BYTE *)(a1 + v23) = *((_BYTE *)a2 + v23);
  v26 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v27 = v26[5];
  v28 = v24 + v27;
  v29 = v25 + v27;
  v30 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = v26[6];
  v32 = v24 + v31;
  v33 = v25 + v31;
  v34 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  *(_BYTE *)(v24 + v26[7]) = *(_BYTE *)(v25 + v26[7]);
  return a1;
}

uint64_t sub_1002EF3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002EF3E4);
}

void sub_1002EF3E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_10009E50C();
  sub_1000BA294(&qword_100BCD380);
  sub_100088FF0();
  if (v7)
  {
    v8 = v6;
    v9 = a3[6];
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_10009BCB4(a3[7]);
      sub_100079F70();
      return;
    }
    v8 = sub_1000B4760();
    v9 = a3[8];
  }
  sub_1000B250C(v4 + v9, v3, v8);
}

uint64_t sub_1002EF454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002EF460);
}

void sub_1002EF460(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_10009E50C();
  sub_1000BA294(&qword_100BCD380);
  sub_10009D2E8();
  if (v9)
  {
    v10 = v8;
    v11 = a4[6];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + a4[7]) = (v4 - 1);
      sub_100079F70();
      return;
    }
    v10 = sub_1000B4760();
    v11 = a4[8];
  }
  sub_1000987C4(v5 + v11, v4, v4, v10);
}

void sub_1002EF4DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = "\t";
  v6[1] = "\t";
  sub_100158B94(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_1009938E0;
    v4 = type metadata accessor for HomeAndWorkRefinementRowViewModel(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_1002EF574()
{
  sub_10003D2DC(&qword_100BD5F58, &qword_100BD5F60);
}

uint64_t sub_1002EF5A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0560, 1);
}

uint64_t sub_1002EF5B0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)sub_1000D1D6C();
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  sub_1000B15F8(*(_QWORD *)(v0 + v4), *(_BYTE *)(v0 + v4 + 8));
  sub_1000B15F8(*(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  v7 = (_QWORD *)(v0 + v4 + v1[6]);
  v8 = sub_1000BA294(&qword_100BC68C8);
  if (sub_100098814(v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    sub_1000987E0(v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = v3 | 7;
  v11 = v4 + v5;
  swift_unknownObjectRelease(*(_QWORD *)(v6 + v1[7]));
  v12 = v6 + v1[8];
  v13 = v12 + *(int *)(sub_1000B4760() + 20);
  v14 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = type metadata accessor for LocationOfInterest(0);
  sub_10003BC44(v15);
  return swift_deallocObject(v0, v11, v10);
}

uint64_t sub_1002EF6B8()
{
  return sub_1002EF6CC(type metadata accessor for HomeAndWorkRefinementRow, (uint64_t (*)(uint64_t))sub_1002EC46C);
}

uint64_t sub_1002EF6CC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

void sub_1002EF70C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1002EC598(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002EF714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD5F78;
  if (!qword_100BD5F78)
  {
    v1 = sub_100075EB0(&qword_100BD5F70);
    sub_1002EF780();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD5F78);
  }
  return result;
}

unint64_t sub_1002EF780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD5F80;
  if (!qword_100BD5F80)
  {
    v1 = sub_100075EB0(&qword_100BD5F88);
    sub_10003D2DC(&qword_100BD5F90, &qword_100BD5F98);
    sub_10003D2DC(&qword_100BC3AE0, &qword_100BC3AE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD5F80);
  }
  return result;
}

uint64_t sub_1002EF81C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_BYTE *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  sub_1000D55D4(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_retain();
  swift_bridgeObjectRetain(v2);
  swift_retain();
  swift_retain();
  sub_1000D55D4(v3, v4, v5);
  swift_retain();
  swift_bridgeObjectRetain(v6);
  swift_retain();
  return a1;
}

uint64_t sub_1002EF8D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 152);
  sub_1000D31B4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_release(v2);
  swift_bridgeObjectRelease();
  swift_release(v4);
  sub_1000D31B4(v5, v6, v7);
  swift_release(v8);
  swift_bridgeObjectRelease();
  swift_release(v10);
  return a1;
}

uint64_t sub_1002EF994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_BYTE *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  sub_1000D55D4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_retain();
  swift_bridgeObjectRetain(v2);
  swift_retain();
  swift_retain();
  sub_1000D55D4(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  swift_retain();
  return a1;
}

uint64_t sub_1002EFA38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 120);
  sub_1000D31B4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_release(v2);
  swift_bridgeObjectRelease();
  swift_release(v4);
  sub_1000D31B4(v5, v6, v7);
  swift_release(v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002EFADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v0 = sub_100075EB0(&qword_100BD5F68);
  v1 = type metadata accessor for BorderlessButtonStyle(255);
  sub_10003D2DC(&qword_100BD5FA0, &qword_100BD5F68);
  v3 = v2;
  sub_10000F1C8((unint64_t *)&qword_100BC4FC8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  v6[0] = v0;
  v6[1] = v1;
  v6[2] = v3;
  v6[3] = v4;
  return swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
}

uint64_t sub_1002EFB7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t active;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v19;
  uint64_t v21;

  v2 = type metadata accessor for Location.Identifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  __chkstk_darwin(active);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084050(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v8, v9);
  v10 = 1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v2) != 1)
  {
    v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v12 = Location.Identifier.kind.getter(v11);
    v13 = Location.Identifier.Kind.rawValue.getter(v12 & 1);
    v15 = v14;
    v16 = Location.Identifier.Kind.rawValue.getter(1);
    if (v13 != v16 || v15 != v17)
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease();
    v19 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v19);
  }
  return v10 & 1;
}

BOOL sub_1002EFCE4(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

uint64_t getEnumTagSinglePayload for AddLocationContext(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherComponentViewModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002EFDD8 + 4 * byte_100993A85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002EFE0C + 4 * byte_100993A80[v4]))();
}

uint64_t sub_1002EFE0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002EFE14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002EFE1CLL);
  return result;
}

uint64_t sub_1002EFE28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002EFE30);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002EFE34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002EFE3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherComponentViewModel()
{
  return &type metadata for ReportWeatherComponentViewModel;
}

BOOL sub_1002EFE58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002EFCE4(*a1, *a2);
}

uint64_t sub_1002EFE64()
{
  uint64_t v1;

  swift_getKeyPath(&unk_100993B90);
  swift_getKeyPath(&unk_100993BB8);
  sub_1000CFC4C(&v1);
  sub_10009925C();
  sub_100089020();
  return v1;
}

void sub_1002EFEC0(uint64_t a1)
{
  uint64_t v2;

  swift_getKeyPath(&unk_100993B90);
  swift_getKeyPath(&unk_100993BB8);
  v2 = a1;
  sub_100094EE4();
  sub_1000D8F08((uint64_t)&v2);
  sub_100099960();
}

uint64_t sub_1002EFF10()
{
  uint64_t v1;

  swift_getKeyPath(&unk_100993BD8);
  swift_getKeyPath(&unk_100993C00);
  sub_1000CFC4C(&v1);
  sub_10009925C();
  sub_100089020();
  return v1;
}

void sub_1002EFF6C(char a1)
{
  char v2;

  swift_getKeyPath(&unk_100993BD8);
  swift_getKeyPath(&unk_100993C00);
  v2 = a1;
  sub_100094EE4();
  sub_1000D8F08((uint64_t)&v2);
  sub_100099960();
}

uint64_t sub_1002EFFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10009FFE0();
  static DispatchQoS.userInitiated.getter(v10);
  v17 = _swiftEmptyArrayStorage;
  sub_100086DA4((unint64_t *)&qword_100BC29A8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = v11;
  v13 = sub_1000BA294(&qword_100BC29B0);
  sub_100081288((unint64_t *)&qword_100BC29B8, &qword_100BC29B0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v13, v14, v4, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001DLL, 0x80000001009FA040, v9, v6, v3, 0);
  qword_100BD6048 = result;
  return result;
}

uint64_t sub_1002F0178()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1000BA294(&qword_100BD61A8);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = LRUCache.init(maxSize:)(5);
  qword_100BD6050 = result;
  return result;
}

uint64_t sub_1002F01BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v0 = type metadata accessor for UnfairLock.Options(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC28E8);
  v5 = swift_allocObject(v4, ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80) | 7);
  *(_OWORD *)(v5 + 16) = xmmword_10097CA50;
  static UnfairLock.Options.dataSynchronization.getter(v5);
  v13 = v5;
  sub_100086DA4((unint64_t *)&qword_100BC28F0, (uint64_t (*)(uint64_t))&type metadata accessor for UnfairLock.Options, (uint64_t)&protocol conformance descriptor for UnfairLock.Options);
  v7 = v6;
  v8 = sub_1000BA294(&qword_100BC28F8);
  sub_100081288((unint64_t *)&qword_100BC2900, &qword_100BC28F8);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v13, v8, v9, v0, v7);
  v10 = type metadata accessor for UnfairLock(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  result = UnfairLock.init(options:)(v3);
  qword_100BD6058 = result;
  return result;
}

void sub_1002F02F4(unint64_t a1, _QWORD *a2, int a3)
{
  uint64_t *v3;
  void *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  char v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  char v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t);
  uint64_t *v131;
  uint64_t v132;
  void (*v133)(uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, unint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  void *v156;
  __n128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(uint64_t, uint64_t *);
  uint64_t (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  void (*v171)(uint64_t, uint64_t *);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t);
  void *v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(char *, unint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(char *, unint64_t, uint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  unint64_t v222;
  _QWORD *v223;
  _QWORD aBlock[2];
  _QWORD v225[4];
  __int128 v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;

  v220 = a3;
  v206 = a2;
  v222 = a1;
  v198 = *v3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  sub_1000B43A4(v6, (uint64_t)&v221);
  v188 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v10 = sub_1000987B4(v9);
  v11 = type metadata accessor for DispatchQoS(v10);
  sub_1000B43A4(v11, (uint64_t)&v218);
  v185 = v12;
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100088FDC();
  sub_10009511C(v14);
  sub_1000BA294(&qword_100BD6170);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v17 = sub_1000987B4(v16);
  v18 = type metadata accessor for MicaLayer(v17);
  sub_1000B43A4(v18, (uint64_t)v225);
  v183 = v19;
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_100088FDC();
  sub_10009511C(v21);
  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v24 = sub_1000987B4(v23);
  v25 = type metadata accessor for URL(v24);
  v26 = sub_1000B43A4(v25, (uint64_t)&v227);
  v196 = v27;
  __chkstk_darwin(v26);
  sub_10009511C((uint64_t)&v180 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v182 = v29;
  __chkstk_darwin(v30);
  sub_100079F7C();
  sub_10009511C(v31);
  v214 = sub_1000BA294(&qword_100BD6178);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100088FDC();
  v34 = sub_1000987B4(v33);
  v35 = type metadata accessor for WeatherConditionBackgroundOptions(v34);
  sub_1000B43A4(v35, (uint64_t)&v228);
  v210 = v36;
  sub_10009D98C();
  __chkstk_darwin(v37);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v38);
  sub_100079F7C();
  v40 = sub_1000987B4(v39);
  type metadata accessor for WeatherCondition(v40);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_100088FDC();
  v43 = sub_1000987B4(v42);
  v44 = type metadata accessor for MicaResourceModel(v43);
  sub_1000B43A4(v44, (uint64_t)&v229);
  v219 = v45;
  sub_10009D98C();
  __chkstk_darwin(v46);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v47);
  sub_100079F7C();
  v221 = v48;
  sub_1000BA294(&qword_100BD6180);
  sub_1000B42B0();
  __chkstk_darwin(v49);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v50);
  sub_1000BA30C();
  __chkstk_darwin(v51);
  sub_100079F7C();
  v53 = sub_1000987B4(v52);
  v54 = type metadata accessor for BackgroundAnimationData.Model(v53);
  v55 = *(void (**)(char *, unint64_t, uint64_t))(v54 - 8);
  __chkstk_darwin(v54);
  v181 = v56;
  sub_10009511C((uint64_t)&v180 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_1000BA294(&qword_100BD6188);
  sub_1000B42B0();
  __chkstk_darwin(v58);
  sub_100098728();
  v61 = v60 - v59;
  sub_1000BA294(&qword_100BD6160);
  sub_1000B42B0();
  __chkstk_darwin(v62);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v63);
  sub_1000BA30C();
  __chkstk_darwin(v64);
  sub_1000BA30C();
  v66 = __chkstk_darwin(v65);
  v68 = (void (**)(char *, unint64_t, uint64_t))((char *)&v180 - v67);
  __chkstk_darwin(v66);
  v70 = (char *)&v180 - v69;
  v71 = sub_1000DA934();
  sub_100098BB4();
  __chkstk_darwin(v72);
  sub_100098728();
  v75 = (_QWORD *)(v74 - v73);
  v76 = sub_10009FFE0();
  *v75 = static OS_dispatch_queue.main.getter(v76);
  (*((void (**)(_QWORD *, _QWORD, uint64_t))v4 + 13))(v75, enum case for DispatchPredicate.onQueue(_:), v71);
  v77 = _dispatchPreconditionTest(_:)(v75);
  sub_100098B40((uint64_t)v75, *((uint64_t (**)(uint64_t, uint64_t))v4 + 1));
  if ((v77 & 1) == 0)
  {
    __break(1u);
    goto LABEL_55;
  }
  v201 = (void (*)(char *, unint64_t, uint64_t))*((_QWORD *)v55 + 2);
  v201(v70, v222, v54);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v54);
  v200 = OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__lastModel;
  v78 = v218;
  v79 = sub_100094EE4();
  Atomic.wrappedValue.getter(v68, v79);
  sub_10009880C();
  v80 = v61 + *(int *)(v57 + 48);
  v81 = &qword_100BD6160;
  sub_100121DB0((uint64_t)v70, v61, &qword_100BD6160);
  v82 = sub_1000BCF4C();
  sub_100121DB0(v82, v83, &qword_100BD6160);
  sub_100088FC8(v61, 1, v54);
  v84 = v54;
  if (v87)
  {
    sub_100098BAC((uint64_t)v68);
    sub_100098BAC((uint64_t)v70);
    sub_100088FC8(v80, 1, v54);
    v81 = v216;
    v57 = v219;
    if (v87)
    {
      sub_100021A14(v61, &qword_100BD6160);
      v85 = v217;
      goto LABEL_12;
    }
LABEL_10:
    sub_100021A14(v61, &qword_100BD6188);
    v85 = v217;
    goto LABEL_16;
  }
  v86 = v199;
  sub_100121DB0(v61, v199, &qword_100BD6160);
  sub_100088FC8(v80, 1, v84);
  if (v87)
  {
    sub_100099298((uint64_t)v68);
    sub_100099298((uint64_t)v70);
    (*((void (**)(uint64_t, uint64_t))v55 + 1))(v86, v84);
    sub_100110254();
    goto LABEL_10;
  }
  v88 = (uint64_t)v195;
  (*((void (**)(char *, uint64_t, uint64_t))v55 + 4))(v195, v80, v84);
  sub_100086DA4(&qword_100BD61A0, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundAnimationData.Model, (uint64_t)&protocol conformance descriptor for BackgroundAnimationData.Model);
  v90 = dispatch thunk of static Equatable.== infix(_:_:)(v86, (char *)v88, v84, v89);
  v57 = (uint64_t)v78;
  v91 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v55 + 1);
  v91(v88, v84);
  v81 = &qword_100BD6160;
  sub_100098BAC((uint64_t)v68);
  sub_100098BAC((uint64_t)v70);
  v91(v86, v84);
  v78 = (void *)v57;
  sub_100098BAC(v61);
  sub_100110254();
  v85 = v217;
  if ((v90 & 1) == 0)
  {
LABEL_16:
    v199 = v84;
    v180 = v55;
    if ((sub_1002EFF10() & 1) == 0)
      sub_1002EFF6C(1);
    v93 = sub_1002F12E0((uint64_t)v78, v220 & 1, v85);
    v94 = v209;
    v95 = BackgroundAnimationData.Model.conditionKind.getter(v93);
    v96 = BackgroundAnimationData.Model.isDayTime.getter(v95);
    v97 = v96;
    v98 = v208;
    v99 = BackgroundAnimationData.Model.options.getter(v96);
    v100 = WeatherConditionBackgroundOptions.windowBounds.getter(v99);
    v102 = v101;
    v104 = v103;
    v106 = v105;
    v107 = *(uint64_t (**)(uint64_t, uint64_t))(v210 + 8);
    v108 = v98;
    v109 = v212;
    v110 = v107(v108, v212);
    v111 = v211;
    v112 = BackgroundAnimationData.Model.options.getter(v110);
    v113 = WeatherConditionBackgroundOptions.displayScale.getter(v112);
    v114 = v111;
    v115 = v85;
    v107(v114, v109);
    MicaResourceModel.init(condition:isDay:windowBounds:displayScale:)(v94, v97 & 1, v100, v102, v104, v106, v113);
    v116 = v213;
    sub_1000D0C88(v213, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 16));
    _s7Weather24LocationCompositionStateOwst_0(v116, 0, 1, (uint64_t)v81);
    v117 = v215;
    v118 = v215 + *(int *)(v214 + 48);
    sub_100121DB0(v115, v215, &qword_100BD6180);
    sub_100121DB0(v116, v118, &qword_100BD6180);
    sub_100088FC8(v117, 1, (uint64_t)v81);
    if (v87)
    {
      sub_100021A14(v116, &qword_100BD6180);
      sub_100088FC8(v118, 1, (uint64_t)v81);
      v4 = v218;
      if (v87)
      {
        sub_100021A14(v117, &qword_100BD6180);
LABEL_38:
        if ((v220 & 1) != 0 && DeviceIsVerySlow(v119))
        {
          sub_100086DA4(&qword_100BD6190, type metadata accessor for WeatherMicaConditionBackground, (uint64_t)&unk_100993B18);
          sub_1000DCD64();
          v172 = v219;
        }
        else
        {
          v172 = v219;
          if (*((_BYTE *)v4 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) == 1)
          {
            sub_1000DAE98();
            sub_1000D952C();

          }
        }
        sub_100098B40(v221, *(uint64_t (**)(uint64_t, uint64_t))(v172 + 8));
        v131 = &qword_100BD6180;
        v132 = v115;
        goto LABEL_52;
      }
    }
    else
    {
      v120 = v197;
      sub_100121DB0(v117, v197, &qword_100BD6180);
      sub_100088FC8(v118, 1, (uint64_t)v81);
      if (!v121)
      {
        v166 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 32);
        v167 = v57;
        v168 = v190;
        sub_1000D0C88(v190, v166);
        sub_100086DA4(&qword_100BD6198, (uint64_t (*)(uint64_t))&type metadata accessor for MicaResourceModel, (uint64_t)&protocol conformance descriptor for MicaResourceModel);
        v170 = dispatch thunk of static Equatable.== infix(_:_:)(v120, v168, v81, v169);
        v171 = *(void (**)(uint64_t, uint64_t *))(v167 + 8);
        v171(v168, v81);
        sub_100099298(v116);
        v171(v120, v81);
        sub_100099298(v117);
        v122 = v222;
        v4 = v218;
        if ((v170 & 1) != 0)
          goto LABEL_38;
LABEL_27:
        v123 = v203;
        v124 = v199;
        v55 = v201;
        v201((char *)v203, v122, v199);
        _s7Weather24LocationCompositionStateOwst_0(v123, 0, 1, v124);
        v125 = v202;
        sub_100121DB0(v123, v202, &qword_100BD6160);
        sub_100094EE4();
        Atomic.wrappedValue.setter(v125);
        sub_10009880C();
        sub_100021A14(v123, &qword_100BD6160);
        if ((v220 & 1) != 0)
          v5 = 0.0;
        else
          v5 = 0.3;
        v126 = v206[3];
        v127 = v206[4];
        sub_1000DB418(v206, v126);
        v128 = v204;
        dispatch thunk of MicaLoaderType.loadMicaURL(for:)(v221, v126, v127);
        v61 = v205;
        sub_100088FC8(v128, 1, v205);
        if (v87)
        {
          v129 = sub_1000C0DA4();
          sub_100098B40(v129, v130);
          sub_100021A14(v115, &qword_100BD6180);
          v131 = &qword_100BD4280;
          v132 = v128;
LABEL_52:
          sub_100021A14(v132, v131);
          return;
        }
        v57 = v196;
        v133 = *(void (**)(uint64_t))(v196 + 32);
        v134 = sub_1000BCF4C();
        v133(v134);
        v135 = sub_1002F1ADC();
        v137 = v136;
        v138 = v191;
        sub_1002F1D60(v135, v136, v191);
        v139 = (uint64_t)v138;
        swift_bridgeObjectRelease(v137);
        v140 = (uint64_t)v138;
        v141 = v194;
        sub_100088FC8(v140, 1, v194);
        v143 = v219;
        if (!v142)
        {
          v173 = v183;
          v174 = v192;
          v175 = sub_1000BCF4C();
          v176(v175);
          v177 = (void *)sub_1000DAE98();
          MicaBackgroundAnimation.updateForNewLayer(_:duration:)(v174, v5);

          if ((v220 & 1) != 0 && DeviceIsVerySlow(v178))
          {
            sub_100086DA4(&qword_100BD6190, type metadata accessor for WeatherMicaConditionBackground, (uint64_t)&unk_100993B18);
            sub_1000DCD64();
            v179 = v217;
          }
          else
          {
            v179 = v217;
            if (*((_BYTE *)v4 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) == 1)
            {
              sub_1000DAE98();
              sub_1000D952C();

            }
          }
          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v192, v141);
          sub_100099254(v207, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
          sub_100098B40(v221, *(uint64_t (**)(uint64_t, uint64_t))(v143 + 8));
          v131 = &qword_100BD6180;
          v132 = v179;
          goto LABEL_52;
        }
        v214 = (uint64_t)v133;
        sub_100021A14(v139, &qword_100BD6170);
        if (qword_100BC1F58 == -1)
        {
LABEL_36:
          v215 = qword_100BD6048;
          v144 = swift_allocObject(&unk_100B6C588, 24, 7);
          swift_weakInit(v144 + 16, v4);
          v145 = v195;
          v146 = v199;
          v55(v195, v222, v199);
          sub_100043CA8((uint64_t)v206, (uint64_t)&v226);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v193, v207, v61);
          v147 = v180;
          v148 = *((unsigned __int8 *)v180 + 80);
          v149 = (v148 + 24) & ~v148;
          v150 = (v181 + v149 + 7) & 0xFFFFFFFFFFFFFFF8;
          v151 = *(unsigned __int8 *)(v57 + 80);
          v152 = (v151 + v150 + 40) & ~v151;
          v222 = (v152 + v182 + 7) & 0xFFFFFFFFFFFFFFF8;
          v153 = (v152 + v182 + 23) & 0xFFFFFFFFFFFFFFF8;
          v154 = swift_allocObject(&unk_100B6C5B0, v153 + 8, v148 | v151 | 7);
          *(_QWORD *)(v154 + 16) = v144;
          ((void (*)(uint64_t, char *, uint64_t))v147[4])(v154 + v149, v145, v146);
          sub_10003C800(&v226, v154 + v150);
          ((void (*)(uint64_t, uint64_t, uint64_t))v214)(v154 + v152, v193, v61);
          v155 = v154 + v222;
          *(double *)v155 = v5;
          *(_BYTE *)(v155 + 8) = v220 & 1;
          *(_QWORD *)(v154 + v153) = v218;
          v225[2] = sub_1002F270C;
          v225[3] = v154;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          v225[0] = sub_100088F7C;
          v225[1] = &unk_100B6C5C8;
          v156 = _Block_copy(aBlock);
          swift_retain();
          v157 = swift_retain();
          v158 = v184;
          static DispatchQoS.unspecified.getter(v157);
          v223 = _swiftEmptyArrayStorage;
          sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v160 = v159;
          v161 = sub_1000BA294(&qword_100BD4F10);
          sub_100081288((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
          v162 = v187;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v223, v161, v163, v189, v160);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v158, v162, v156);
          _Block_release(v156);
          sub_100099254(v162, *(uint64_t (**)(uint64_t, uint64_t))(v188 + 8));
          (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v158, v186);
          (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v207, v61);
          v164 = sub_1000C0DA4();
          v165(v164, v216);
          sub_100021A14(v217, &qword_100BD6180);
          sub_10009925C();
          sub_10009880C();
          return;
        }
LABEL_55:
        swift_once(&qword_100BC1F58, sub_1002EFFBC);
        goto LABEL_36;
      }
      sub_100021A14(v116, &qword_100BD6180);
      sub_100098B40(v120, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
      v4 = v218;
    }
    sub_100021A14(v117, &qword_100BD6178);
    v122 = v222;
    goto LABEL_27;
  }
LABEL_12:
  v92 = sub_1002EFF10();
  if ((v92 & 1) == 0)
    goto LABEL_16;
  if ((v220 & 1) != 0 && DeviceIsVerySlow(v92))
  {
    sub_100086DA4(&qword_100BD6190, type metadata accessor for WeatherMicaConditionBackground, (uint64_t)&unk_100993B18);
    sub_1000DCD64();
  }
  else if (*((_BYTE *)v78 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) == 1)
  {
    sub_1000DAE98();
    sub_1000D952C();

  }
}

void sub_1002F12A0(Swift::Bool a1)
{
  id v2;

  v2 = (id)sub_1002EFE64();
  MicaBackgroundAnimation.play(_:)(a1);

}

uint64_t sub_1002F12E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t (*v36)(_BYTE *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a2;
  v48 = a3;
  v4 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v47 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v45[-v8];
  v10 = type metadata accessor for WeatherCondition(0);
  __chkstk_darwin(v10);
  v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1000BA294(&qword_100BD6160);
  __chkstk_darwin(v13);
  v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for BackgroundAnimationData.Model(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v45[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__lastModel);
  swift_retain();
  Atomic.wrappedValue.getter(v15, v21);
  swift_release(v20);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16) == 1)
  {
    v22 = v48;
    sub_100021A14((uint64_t)v15, &qword_100BD6160);
    if ((v46 & 1) != 0 && DeviceIsVerySlow(v23))
    {
      type metadata accessor for WeatherMicaConditionBackground(0);
      sub_100086DA4(&qword_100BD6190, type metadata accessor for WeatherMicaConditionBackground, (uint64_t)&unk_100993B18);
      WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
    }
    else if (*(_BYTE *)(a1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) == 1)
    {
      v42 = (void *)sub_1002EFE64();
      MicaBackgroundAnimation.play(_:)(0);

    }
    v41 = 1;
    v40 = v22;
  }
  else
  {
    v24 = (*(uint64_t (**)(_BYTE *, _QWORD *, uint64_t))(v17 + 32))(v19, v15, v16);
    v25 = BackgroundAnimationData.Model.conditionKind.getter(v24);
    v26 = BackgroundAnimationData.Model.isDayTime.getter(v25);
    v27 = v26;
    v28 = BackgroundAnimationData.Model.options.getter(v26);
    v29 = WeatherConditionBackgroundOptions.windowBounds.getter(v28);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v36 = *(uint64_t (**)(_BYTE *, uint64_t))(v47 + 8);
    v37 = v36(v9, v4);
    v38 = BackgroundAnimationData.Model.options.getter(v37);
    v39 = WeatherConditionBackgroundOptions.displayScale.getter(v38);
    v36(v7, v4);
    v40 = v48;
    MicaResourceModel.init(condition:isDay:windowBounds:displayScale:)(v12, v27 & 1, v29, v31, v33, v35, v39);
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
    v41 = 0;
  }
  v43 = type metadata accessor for MicaResourceModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(v40, v41, 1, v43);
}

void sub_1002F15F0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v13 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v13);
  if (Strong)
  {
    v15 = Strong;
    v16 = swift_allocObject(&unk_100B6C600, 32, 7);
    *(_BYTE *)(v16 + 16) = a5 & 1;
    *(_QWORD *)(v16 + 24) = a6;
    swift_retain();
    sub_1002F1774(a2, a3, a4, (uint64_t)sub_1002F27A8, v16, a7);
    swift_release(v15);
    swift_release(v16);
  }
}

void sub_1002F16D0(uint64_t a1, uint64_t a2)
{
  id v3;

  if ((a1 & 1) != 0 && DeviceIsVerySlow(a1))
  {
    sub_100086DA4(&qword_100BD6190, type metadata accessor for WeatherMicaConditionBackground, (uint64_t)&unk_100993B18);
    WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
  }
  else if (*(_BYTE *)(a2 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) == 1)
  {
    v3 = (id)sub_1002EFE64();
    MicaBackgroundAnimation.play(_:)(0);

  }
}

uint64_t sub_1002F1774(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;

  v58 = a5;
  v56 = a4;
  v51 = a1;
  v52 = a3;
  v10 = *v6;
  v64 = sub_10009896C();
  v55 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v53 = v11;
  v63 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000DB8D4();
  v54 = *(_QWORD *)(v61 - 8);
  v12 = *(_QWORD *)(v54 + 64);
  __chkstk_darwin(v61);
  v60 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for MicaLayer(0);
  v59 = *(_QWORD *)(v62 - 8);
  v13 = *(_QWORD *)(v59 + 64);
  v14 = __chkstk_darwin(v62);
  __chkstk_darwin(v14);
  sub_100079F7C();
  v16 = v15;
  v17 = sub_1000DA934();
  sub_100098BB4();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = (_QWORD *)(v20 - v19);
  if (qword_100BC1F58 != -1)
    swift_once(&qword_100BC1F58, sub_1002EFFBC);
  v22 = qword_100BD6048;
  *v21 = qword_100BD6048;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v17);
  v23 = (id)v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v21);
  result = sub_100098B40((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  if ((v22 & 1) != 0)
  {
    v25 = a2[3];
    v26 = a2[4];
    sub_1000DB418(a2, v25);
    v50 = v10;
    v27 = v52;
    v28 = (id)dispatch thunk of MicaLoaderType.loadMicaLayer(at:)(v52, v25, v26);
    v48 = v16;
    v49 = v28;
    MicaLayer.init(layer:)();
    v29 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v60, v51, v61);
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
    v31 = v59;
    v47 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v30(v47, v16, v62);
    v32 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v63, v27, v64);
    v33 = *(unsigned __int8 *)(v29 + 80);
    v34 = (v33 + 24) & ~v33;
    v35 = (v12 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = *(unsigned __int8 *)(v31 + 80);
    v37 = (v36 + v35 + 16) & ~v36;
    v38 = *(unsigned __int8 *)(v32 + 80);
    v39 = (v13 + v38 + v37) & ~v38;
    v53 = (v53 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v40 = v58;
    v41 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
    v42 = swift_allocObject(&unk_100B6C628, v41 + 8, v33 | v36 | v38 | 7);
    *(_QWORD *)(v42 + 16) = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v42 + v34, v60, v61);
    v43 = (_QWORD *)(v42 + v35);
    *v43 = v56;
    v43[1] = v40;
    v44 = v59;
    v45 = v62;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v42 + v37, v47, v62);
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v42 + v39, v63, v64);
    *(double *)(v42 + v53) = a6;
    *(_QWORD *)(v42 + v41) = v50;
    swift_retain();
    swift_retain();
    asyncMain(block:)(sub_1002F28DC, v42);

    sub_100089020();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v48, v45);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F1ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];

  v0 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation(0);
  v1 = *(_QWORD *)(v0 - 8);
  v43 = v0;
  v44 = v1;
  __chkstk_darwin(v0);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Location(0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = BackgroundAnimationData.Model.isReduceMotionEnabled.getter(v12);
  if ((v15 & 1) != 0)
    v16 = 0x4D6563756465722DLL;
  else
    v16 = 0;
  v17 = 0xED00006E6F69746FLL;
  if ((v15 & 1) == 0)
    v17 = 0xE000000000000000;
  v39 = (void *)v17;
  v40 = v16;
  v18 = URL.deletingPathExtension()();
  v19 = URL.lastPathComponent.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v45[0] = 0;
  v45[1] = 0xE000000000000000;
  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v21);
  v23._countAndFlagsBits = 45;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  v25 = BackgroundAnimationData.Model.location.getter(v24);
  v26 = Location.id.getter(v25);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v28);
  v30._countAndFlagsBits = 45;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  v31 = BackgroundAnimationData.Model.options.getter();
  WeatherConditionBackgroundOptions.displayLocation.getter(v31);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
  v32 = v43;
  _print_unlocked<A, B>(_:_:)(v3, v45, v43, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v3, v32);
  v34 = v39;
  v33._countAndFlagsBits = v40;
  v33._object = v39;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v34);
  return v45[0];
}

double sub_1002F1D60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD v10[7];
  uint64_t v11;

  v5 = a1;
  if (qword_100BC1F68 != -1)
    a1 = swift_once(&qword_100BC1F68, sub_1002F01BC);
  v11 = qword_100BD6058;
  __chkstk_darwin(a1);
  v10[2] = v3;
  v10[3] = v5;
  v10[4] = a2;
  v7 = type metadata accessor for UnfairLock(0);
  swift_retain();
  v8 = sub_1000BA294(&qword_100BD6170);
  Lock.sync<A>(_:)(a3, sub_1002F2984, v10, v7, v8, &protocol witness table for UnfairLock);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1002F1E54(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;

  v3 = v1;
  v5 = sub_1000DA934();
  sub_100098BB4();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = (_QWORD *)(v8 - v7);
  v10 = sub_10009FFE0();
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v5);
  v11 = _dispatchPreconditionTest(_:)(v9);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v9, v5);
  if ((v11 & 1) != 0)
  {
    if ((a1 & 1) != 0)
      v13 = static Animation.easeInOut(duration:)(result, 1.0);
    else
      v13 = 0;
    withAnimation<A>(_:_:)(v13, sub_1002F29D8, v3, &type metadata for () + 1);
    return sub_10009880C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F1F44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD v41[5];
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);

  v41[2] = a6;
  v41[3] = a7;
  v42 = a5;
  v43 = a4;
  v44 = a3;
  v11 = type metadata accessor for BackgroundAnimationData.Model(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v41[0] = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BD6188);
  __chkstk_darwin(v14);
  v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BD6160);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)v41 - v22;
  __chkstk_darwin(v21);
  v25 = (_QWORD *)((char *)v41 - v24);
  v41[4] = a1;
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__lastModel);
  swift_retain();
  Atomic.wrappedValue.getter(v25, v27);
  v28 = swift_release(v26);
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v41[1] = a2;
  v29(v23, a2, v11, v28);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v11);
  v30 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100121DB0((uint64_t)v25, (uint64_t)v16, &qword_100BD6160);
  sub_100121DB0((uint64_t)v23, v30, &qword_100BD6160);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v23, &qword_100BD6160);
    sub_100021A14((uint64_t)v25, &qword_100BD6160);
    if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v11) == 1)
    {
      sub_100021A14((uint64_t)v16, &qword_100BD6160);
LABEL_8:
      v35 = sub_1002F1ADC();
      v37 = v36;
      v38 = v42;
      sub_1002F22D0(v42, v35, v36);
      swift_bridgeObjectRelease(v37);
      v39 = (void *)sub_1002EFE64();
      MicaBackgroundAnimation.updateForNewLayer(_:duration:)(v38, a8);

      return v44();
    }
    goto LABEL_6;
  }
  sub_100121DB0((uint64_t)v16, (uint64_t)v20, &qword_100BD6160);
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v23, &qword_100BD6160);
    sub_100021A14((uint64_t)v25, &qword_100BD6160);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
LABEL_6:
    sub_100021A14((uint64_t)v16, &qword_100BD6188);
    return v44();
  }
  v31 = v41[0];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 32))(v41[0], v30, v11);
  sub_100086DA4(&qword_100BD61A0, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundAnimationData.Model, (uint64_t)&protocol conformance descriptor for BackgroundAnimationData.Model);
  v33 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v31, v11, v32);
  v34 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v34(v31, v11);
  sub_100021A14((uint64_t)v23, &qword_100BD6160);
  sub_100021A14((uint64_t)v25, &qword_100BD6160);
  v34((uint64_t)v20, v11);
  sub_100021A14((uint64_t)v16, &qword_100BD6160);
  if ((v33 & 1) != 0)
    goto LABEL_8;
  return v44();
}

double sub_1002F22D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double result;
  _QWORD v9[7];
  uint64_t v10;

  v6 = a1;
  if (qword_100BC1F68 != -1)
    a1 = swift_once(&qword_100BC1F68, sub_1002F01BC);
  v10 = qword_100BD6058;
  __chkstk_darwin(a1);
  v9[2] = v3;
  v9[3] = v6;
  v9[4] = a2;
  v9[5] = a3;
  v7 = type metadata accessor for UnfairLock(0);
  swift_retain();
  Lock.sync<A>(_:)(&type metadata for (), sub_1002F2978, v9, v7, &type metadata for () + 1, &protocol witness table for UnfairLock);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

double sub_1002F23BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v5;
  double result;
  _QWORD v7[2];

  if (qword_100BC1F60 != -1)
    swift_once(&qword_100BC1F60, sub_1002F0178);
  v7[0] = a2;
  v7[1] = a3;
  v5 = swift_bridgeObjectRetain(a3);
  LRUCache.subscript.getter(v7, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a3).n128_u64[0];
  return result;
}

uint64_t sub_1002F2440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v8[2];

  if (qword_100BC1F60 != -1)
    swift_once(&qword_100BC1F60, sub_1002F0178);
  v8[0] = a3;
  v8[1] = a4;
  return LRUCache.cache(value:for:expires:)(a2, v8, 1);
}

void sub_1002F24B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1000BA294(&qword_100BD6150);
  sub_10003BC44(v1);
  v2 = sub_1000BA294(&qword_100BD6158);
  sub_10003BC44(v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__lastModel));
  sub_10004A298();
}

uint64_t sub_1002F2518()
{
  uint64_t v0;

  sub_1002F24B8();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002F253C()
{
  return type metadata accessor for WeatherMicaConditionBackground(0);
}

void sub_1002F2544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;

  v6 = (id)sub_1002EFE64();
  MicaBackgroundAnimation.pause(_:completion:)(a1, a2, a3);

}

BOOL sub_1002F259C()
{
  return WeatherConditionPlaybackCoordinatorType.isPlaybackBlocked()();
}

void sub_1002F25A4(Swift::Bool a1)
{
  WeatherConditionPlaybackCoordinatorType.setPlaybackBlocked(_:)(a1);
}

void sub_1002F25B4(uint64_t *a1@<X8>)
{
  *a1 = sub_1002EFE64();
  sub_10004A298();
}

void sub_1002F25D8(id *a1)
{
  sub_1002EFEC0((uint64_t)*a1);
}

uint64_t sub_1002F2604()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F2628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v12;

  v1 = sub_1000DB8D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_10009896C() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 40) & ~v7;
  v12 = v3 | v7 | 7;
  v9 = (*(_QWORD *)(v6 + 64) + v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v5));
  sub_100099254(v0 + v8, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v12);
}

void sub_1002F270C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_1000DB8D4();
  v3 = sub_1000C5CBC();
  v4 = *(_QWORD *)(type metadata accessor for URL(v3) - 8);
  v5 = (v2 + *(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_1002F15F0(*(_QWORD *)(v1 + 16), v1 + v0, (_QWORD *)(v1 + v2), v1 + v5, *(_BYTE *)(v1 + ((v5 + *(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + *(_QWORD *)(v4 + 64) + 23) & 0xFFFFFFFFFFFFF8)), *(double *)(v1 + ((v5 + *(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1002F2784()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002F27A8()
{
  uint64_t v0;

  sub_1002F16D0(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002F27B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  __n128 v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = sub_1000DB8D4();
  v1 = *(_QWORD *)(v20 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = v4;
  v19 = type metadata accessor for MicaLayer(0);
  v5 = *(_QWORD *)(v19 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + v6 + 16) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = sub_10009896C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v13 = v2 | v6 | v11 | 7;
  v14 = ((((*(_QWORD *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 8))(v0 + v3, v20, v15);
  v16 = swift_release(*(_QWORD *)(v0 + v18 + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v0 + v7, v19, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);
  return swift_deallocObject(v0, v14, v13);
}

uint64_t sub_1002F28DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1000DB8D4();
  v3 = sub_1000C5CBC();
  v4 = *(_QWORD *)(type metadata accessor for MicaLayer(v3) - 8);
  v5 = (v2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_10009896C() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002F1F44(*(_QWORD *)(v1 + 16), v1 + v0, *(uint64_t (**)(void))(v1 + v2), *(_QWORD *)(v1 + v2 + 8), v1 + v5, v1 + v8, *(_QWORD *)(v1 + ((v9 + 15) & 0xFFFFFFFFFFFFF8)), *(double *)(v1 + v9));
}

uint64_t sub_1002F2978()
{
  uint64_t *v0;

  return sub_1002F2440(v0[2], v0[3], v0[4], v0[5]);
}

double sub_1002F2984()
{
  uint64_t *v0;

  return sub_1002F23BC(v0[2], v0[3], v0[4]);
}

void sub_1002F2990(_BYTE *a1@<X8>)
{
  *a1 = sub_1002EFF10() & 1;
  sub_10004A298();
}

void sub_1002F29B8(char *a1)
{
  sub_1002EFF6C(*a1);
  sub_10004A298();
}

void sub_1002F29D8()
{
  sub_1002EFF6C(0);
}

void sub_1002F2A00(char a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BD61B8);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_1002F2A74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  sub_1000BA5C8();
  ShortDescription.init(name:_:)(v4 + 11, 0x80000001009F4B60, v5, &type metadata for NotificationSettingsViewAction);
  v1[3] = v0;
  v1[4] = sub_1002F2CC4();
  v6 = sub_10005F164(v1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v3 + 32))(v6, v2, v0);
}

void sub_1002F2C54()
{
  char *v0;

  sub_1002F2A00(*v0);
}

uint64_t sub_1002F2C5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002F2D08();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1002F2C88()
{
  unint64_t result;

  result = qword_100BD61B0;
  if (!qword_100BD61B0)
  {
    result = swift_getWitnessTable(&unk_100993C30, &type metadata for NotificationSettingsViewAction);
    atomic_store(result, (unint64_t *)&qword_100BD61B0);
  }
  return result;
}

unint64_t sub_1002F2CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD61C0;
  if (!qword_100BD61C0)
  {
    v1 = sub_100075EB0(&qword_100BD61B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD61C0);
  }
  return result;
}

unint64_t sub_1002F2D08()
{
  unint64_t result;

  result = qword_100BD61C8;
  if (!qword_100BD61C8)
  {
    result = swift_getWitnessTable(&unk_100993C58, &type metadata for NotificationSettingsViewAction);
    atomic_store(result, (unint64_t *)&qword_100BD61C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsViewAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1002F2D90 + 4 * byte_100993C2B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1002F2DC4 + 4 * byte_100993C26[v4]))();
}

uint64_t sub_1002F2DC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F2DCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002F2DD4);
  return result;
}

uint64_t sub_1002F2DE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002F2DE8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1002F2DEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F2DF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsViewAction()
{
  return &type metadata for NotificationSettingsViewAction;
}

unint64_t sub_1002F2E14()
{
  unint64_t result;

  result = qword_100BD61D0;
  if (!qword_100BD61D0)
  {
    result = swift_getWitnessTable(&unk_100993CF0, &type metadata for NotificationSettingsViewAction);
    atomic_store(result, (unint64_t *)&qword_100BD61D0);
  }
  return result;
}

uint64_t sub_1002F2E50(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = a2[5];
    v10 = a2 + 6;
    v11 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 72) = v11;
    v12 = v11;
    v13 = **(void (***)(uint64_t, uint64_t *, uint64_t, __n128))(v11 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    v14 = swift_retain();
    v13(a1 + 48, v10, v12, v14);
    v15 = a3[7];
    v16 = a1 + v15;
    v17 = (uint64_t)a2 + v15;
    v38 = *(uint64_t *)((char *)a2 + v15 + 8);
    *(_QWORD *)v16 = *(uint64_t *)((char *)a2 + v15);
    *(_QWORD *)(v16 + 8) = v38;
    v18 = *(uint64_t *)((char *)a2 + v15 + 24);
    *(_QWORD *)(v16 + 16) = *(uint64_t *)((char *)a2 + v15 + 16);
    *(_QWORD *)(v16 + 24) = v18;
    v19 = *(uint64_t *)((char *)a2 + v15 + 40);
    *(_QWORD *)(v16 + 32) = *(uint64_t *)((char *)a2 + v15 + 32);
    *(_QWORD *)(v16 + 40) = v19;
    *(_BYTE *)(v16 + 48) = *((_BYTE *)a2 + v15 + 48);
    v20 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
    v21 = v20[8];
    v36 = v17 + v21;
    v37 = v16 + v21;
    v22 = type metadata accessor for Date(0);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v18);
    v24 = swift_bridgeObjectRetain(v19);
    v23(v37, v36, v22, v24);
    ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v16 + v20[9], v17 + v20[9], v22);
    *(_BYTE *)(v16 + v20[10]) = *(_BYTE *)(v17 + v20[10]);
    v25 = a3[9];
    *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)(a1 + v25) = *(uint64_t *)((char *)a2 + v25);
    v26 = a3[11];
    *(_QWORD *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(_QWORD *)(a1 + v26) = *(uint64_t *)((char *)a2 + v26);
    v27 = a3[12];
    v28 = a1 + v27;
    v29 = (uint64_t)a2 + v27;
    v30 = type metadata accessor for CoordinateSpace(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    v31 = a3[13];
    v32 = (_QWORD *)(a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
  }
  swift_retain();
  return a1;
}

double sub_1002F3038(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 6);
  v4 = (char *)a1 + a2[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for MoonScrubberHeaderViewModel(0);
  v6 = &v4[*(int *)(v5 + 32)];
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(&v4[*(int *)(v5 + 36)], v7);
  v9 = (char *)a1 + a2[12];
  v10 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[13] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1002F312C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = a2 + 48;
  v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v10;
  v11 = v10;
  v12 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v10 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = swift_retain();
  v12(a1 + 48, v9, v11, v13);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = v17;
  v18 = *(_QWORD *)(a2 + v14 + 24);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(a2 + v14 + 16);
  *(_QWORD *)(v15 + 24) = v18;
  v19 = *(_QWORD *)(a2 + v14 + 40);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(a2 + v14 + 32);
  *(_QWORD *)(v15 + 40) = v19;
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(a2 + v14 + 48);
  v20 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v21 = v20[8];
  v36 = v16 + v21;
  v37 = v15 + v21;
  v22 = type metadata accessor for Date(0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  v24 = swift_bridgeObjectRetain(v19);
  v23(v37, v36, v22, v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v15 + v20[9], v16 + v20[9], v22);
  *(_BYTE *)(v15 + v20[10]) = *(_BYTE *)(v16 + v20[10]);
  v25 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v26 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[12];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[13];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  return a1;
}

_QWORD *sub_1002F32F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a1[3];
  a1[3] = a2[3];
  swift_retain();
  swift_release(v8);
  v9 = a1[4];
  a1[4] = a2[4];
  swift_retain();
  swift_release(v9);
  a1[5] = a2[5];
  sub_100094D04(a1 + 6, a2 + 6);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)((char *)a2 + v10);
  v13 = *(_QWORD *)((char *)a2 + v10 + 8);
  *((_QWORD *)v11 + 1) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  v14 = *((_QWORD *)v12 + 3);
  *((_QWORD *)v11 + 3) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  v15 = *((_QWORD *)v12 + 5);
  *((_QWORD *)v11 + 5) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v11[48] = v12[48];
  v16 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v17 = v16[8];
  v18 = &v11[v17];
  v19 = &v12[v17];
  v20 = type metadata accessor for Date(0);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(&v11[v16[9]], &v12[v16[9]], v20);
  v11[v16[10]] = v12[v16[10]];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v22 = a3[12];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = a3[13];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  *v27 = *v28;
  v29 = v27[1];
  v27[1] = v28[1];
  swift_retain();
  swift_release(v29);
  return a1;
}

uint64_t sub_1002F3510(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(a2 + v7 + 48);
  v11 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v12 = v11[8];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = type metadata accessor for Date(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(v8 + v11[9], v9 + v11[9], v15);
  *(_BYTE *)(v8 + v11[10]) = *(_BYTE *)(v9 + v11[10]);
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[12];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t *sub_1002F3668(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a1[3];
  a1[3] = a2[3];
  swift_release(v8);
  v9 = a1[4];
  a1[4] = a2[4];
  swift_release(v9);
  a1[5] = a2[5];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 6);
  v10 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v10;
  a1[10] = a2[10];
  v11 = a3[7];
  v12 = (uint64_t)a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = *(uint64_t *)((char *)a2 + v11 + 8);
  *(_QWORD *)v12 = *(uint64_t *)((char *)a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v17 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v18 = v17[8];
  v19 = v12 + v18;
  v20 = v13 + v18;
  v21 = type metadata accessor for Date(0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40);
  v22(v19, v20, v21);
  v22(v12 + v17[9], v13 + v17[9], v21);
  *(_BYTE *)(v12 + v17[10]) = *(_BYTE *)(v13 + v17[10]);
  v23 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(uint64_t *)((char *)a1 + v23) = *(uint64_t *)((char *)a2 + v23);
  v24 = a3[11];
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
  v25 = a3[12];
  v26 = (uint64_t)a1 + v25;
  v27 = (uint64_t)a2 + v25;
  v28 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = a3[13];
  v30 = (uint64_t *)((char *)a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  *v30 = *v31;
  v32 = v30[1];
  v30[1] = v31[1];
  swift_release(v32);
  return a1;
}

uint64_t sub_1002F3830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F383C);
}

uint64_t sub_1002F383C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000C4748();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 28);
    }
    else
    {
      v9 = sub_1000C537C();
      v10 = *(int *)(a3 + 48);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_1002F38CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F38D8);
}

void sub_1002F38D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    v8 = sub_1000C4748();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 28);
    }
    else
    {
      v9 = sub_1000C537C();
      v10 = *(int *)(a4 + 48);
    }
    _s7Weather24LocationCompositionStateOwst_0(a1 + v10, a2, a2, v9);
  }
}

uint64_t type metadata accessor for MoonScrubberHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD6230;
  if (!qword_100BD6230)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoonScrubberHeaderView);
  return result;
}

uint64_t sub_1002F3994(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[10];

  v5[0] = &unk_100993D38;
  v5[1] = &unk_100993D38;
  v5[2] = &unk_100993D50;
  result = type metadata accessor for MoonScrubberHeaderViewModel(319);
  if (v3 <= 0x3F)
  {
    v5[3] = *(_QWORD *)(result - 8) + 64;
    v5[4] = &unk_100993D68;
    v5[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[7] = (char *)&value witness table for Builtin.Int64 + 64;
    result = type metadata accessor for CoordinateSpace(319);
    if (v4 <= 0x3F)
    {
      v5[8] = *(_QWORD *)(result - 8) + 64;
      v5[9] = &unk_100993D80;
      swift_initStructMetadata(a1, 256, 10, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002F3A54(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB06B0, 1);
}

void sub_1002F3A64(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.top.getter(a1);
  a2[1] = v4;
  v5 = sub_1000BA294(&qword_100BD6288);
  sub_1002F3AA4(v2, (uint64_t)a2 + *(int *)(v5 + 44));
}

void sub_1002F3AA4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[32];

  v69 = a2;
  v3 = type metadata accessor for MoonScrubberHeaderView(0);
  v66 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v67 = v4;
  v68 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v61);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1000BA294(&qword_100BD6290);
  __chkstk_darwin(v59);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD6298);
  v62 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1000BA294(&qword_100BD62A0);
  __chkstk_darwin(v60);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1000BA294(&qword_100BD62A8);
  __chkstk_darwin(v64);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v65 = (uint64_t)&v58 - v17;
  v18 = sub_1000BA294(&qword_100BD62B0);
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v58 - v23;
  if (*((_BYTE *)a1 + *(int *)(v3 + 32)) == 1)
  {
    *(_QWORD *)v24 = static HorizontalAlignment.center.getter(v22);
    *((_QWORD *)v24 + 1) = 0;
    v24[16] = 0;
    v25 = sub_1000BA294(&qword_100BD62D8);
    sub_1002F401C(a1, (uint64_t)&v24[*(int *)(v25 + 44)]);
    v26 = sub_1000BA294(&qword_100BD62B8);
    v27 = (uint64_t)v24;
    v28 = 0;
  }
  else
  {
    v26 = sub_1000BA294(&qword_100BD62B8);
    v27 = (uint64_t)v24;
    v28 = 1;
  }
  v29 = _s7Weather24LocationCompositionStateOwst_0(v27, v28, 1, v26);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v29);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v30 = sub_1000BA294(&qword_100BD62C0);
  sub_1002F473C((uint64_t)a1, &v8[*(int *)(v30 + 44)]);
  v58 = a1;
  v31 = enum case for DynamicTypeSize.xxLarge(_:);
  v32 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v6, v31, v32);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v6, v6, v32, v33) & 1) != 0)
  {
    sub_10003D2DC(&qword_100BD62C8, &qword_100BD6290);
    v35 = v34;
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    View.dynamicTypeSize<A>(_:)(v6, v59, v61, v35, v36);
    sub_100021AA4((uint64_t)v6, (uint64_t *)&unk_100C0A510);
    sub_100021AA4((uint64_t)v8, &qword_100BD6290);
    v38 = static Edge.Set.horizontal.getter(v37);
    swift_beginAccess(&unk_100C070A0, v70, 1, 0);
    v39 = sub_1007B18C0();
    v40 = EdgeInsets.init(_all:)(v39);
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v62;
    v47 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v13, v11, v63);
    v49 = &v13[*(int *)(v60 + 36)];
    *v49 = v38;
    *((double *)v49 + 1) = v40;
    *((_QWORD *)v49 + 2) = v42;
    *((_QWORD *)v49 + 3) = v44;
    *((_QWORD *)v49 + 4) = v46;
    v49[40] = 0;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v47);
    v50 = v68;
    sub_1002F61B4((uint64_t)v58, v68);
    v51 = *(unsigned __int8 *)(v66 + 80);
    v52 = (v51 + 16) & ~v51;
    v53 = swift_allocObject(&unk_100B6C788, v52 + v67, v51 | 7);
    sub_1002F61FC(v50, v53 + v52);
    sub_100037768((uint64_t)v13, (uint64_t)v15, &qword_100BD62A0);
    v54 = &v15[*(int *)(v64 + 36)];
    *(_QWORD *)v54 = sub_1002F57B0;
    *((_QWORD *)v54 + 1) = 0;
    *((_QWORD *)v54 + 2) = sub_1002F6240;
    *((_QWORD *)v54 + 3) = v53;
    sub_100021AA4((uint64_t)v13, &qword_100BD62A0);
    v55 = v65;
    sub_1000787D4((uint64_t)v15, v65, &qword_100BD62A8);
    sub_100037768((uint64_t)v24, (uint64_t)v20, &qword_100BD62B0);
    sub_100037768(v55, (uint64_t)v15, &qword_100BD62A8);
    v56 = v69;
    sub_100037768((uint64_t)v20, v69, &qword_100BD62B0);
    v57 = sub_1000BA294(&qword_100BD62D0);
    sub_100037768((uint64_t)v15, v56 + *(int *)(v57 + 48), &qword_100BD62A8);
    sub_100021AA4(v55, &qword_100BD62A8);
    sub_100021AA4((uint64_t)v24, &qword_100BD62B0);
    sub_100021AA4((uint64_t)v15, &qword_100BD62A8);
    sub_100021AA4((uint64_t)v20, &qword_100BD62B0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002F401C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t, __n128);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  __int128 v83;

  v66 = a2;
  v65 = sub_1000BA294(&qword_100BD62E0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v63 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v62 = (char *)&v53 - v5;
  v6 = type metadata accessor for MoonScrubberHeaderView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294(&qword_100BD62E8);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v59 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - v12;
  swift_beginAccess(&unk_100C070A0, &v68, 33, 0);
  v14 = sub_1007B187C();
  swift_endAccess(&v68);
  v15 = a1[1];
  v16 = a1[2];
  v68 = *a1;
  v69 = v15;
  v70 = v16;
  v58 = sub_1000BA294(&qword_100BD62F0);
  v17 = Binding.wrappedValue.getter(v58);
  v18 = v79;
  static Alignment.center.getter(v17);
  _FrameLayout.init(width:height:alignment:)(0, 1, v18, 0);
  v68 = v14;
  v69 = v74;
  LOBYTE(v70) = v75;
  v71 = v76;
  v72 = v77;
  v73 = v78;
  sub_1002F61B4((uint64_t)a1, (uint64_t)v9);
  v19 = *(unsigned __int8 *)(v7 + 80);
  v20 = (v19 + 16) & ~v19;
  v57 = v20 + v8;
  v56 = v19 | 7;
  v21 = swift_allocObject(&unk_100B6C7B0, v20 + v8, v19 | 7);
  sub_1002F61FC((uint64_t)v9, v21 + v20);
  v22 = sub_1000BA294(&qword_100BC4B70);
  v55 = v22;
  v23 = sub_1000BA294(&qword_100BD62F8);
  v24 = sub_1001A3880();
  v25 = type metadata accessor for EmptyVisualEffect(255);
  sub_10000F1C8(&qword_100BD6300, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  v79 = v25;
  v80 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
  v54 = v13;
  View.visualEffect<A>(_:)(sub_1002F6250, v21, v22, v23, v24, OpaqueTypeConformance2);
  swift_release(v21);
  swift_release(v68);
  swift_beginAccess(&unk_100C070A0, &v68, 33, 0);
  v28 = sub_1007B187C();
  swift_endAccess(&v68);
  v29 = a1[4];
  v30 = a1[5];
  v68 = a1[3];
  v69 = v29;
  v70 = v30;
  v31 = Binding.wrappedValue.getter(v58);
  v32 = v79;
  static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(0, 1, v32, 0);
  v68 = v28;
  v69 = v79;
  LOBYTE(v70) = v80;
  v71 = v81;
  v72 = v82;
  v73 = v83;
  sub_1002F61B4((uint64_t)a1, (uint64_t)v9);
  v33 = swift_allocObject(&unk_100B6C7D8, v57, v56);
  sub_1002F61FC((uint64_t)v9, v33 + v20);
  v34 = sub_1000BA294(&qword_100BD6308);
  v67[0] = v23;
  v67[1] = OpaqueTypeConformance2;
  v35 = swift_getOpaqueTypeConformance2(v67, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
  v36 = v62;
  View.visualEffect<A>(_:)(sub_1002F6260, v33, v55, v34, v24, v35);
  swift_release(v33);
  v37 = swift_release(v68);
  v38 = v60;
  v39 = *(void (**)(char *, char *, uint64_t, __n128))(v60 + 16);
  v40 = v59;
  v41 = v61;
  v39(v59, v13, v61, v37);
  v42 = v64;
  v43 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v44 = v63;
  v45 = v36;
  v46 = v36;
  v47 = v65;
  v43(v63, v45, v65);
  v48 = v66;
  ((void (*)(uint64_t, char *, uint64_t))v39)(v66, v40, v41);
  v49 = sub_1000BA294(&qword_100BD6310);
  v43((char *)(v48 + *(int *)(v49 + 48)), v44, v47);
  v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v50(v46, v47);
  v51 = *(void (**)(char *, uint64_t))(v38 + 8);
  v51(v54, v41);
  v50(v44, v47);
  return ((uint64_t (*)(char *, uint64_t))v51)(v40, v41);
}

double sub_1002F453C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  double v12;
  int *v13;
  CGFloat MinY;
  double v15;
  double v16;
  double v17;
  CGRect v19;
  CGRect v20;

  v11 = type metadata accessor for MoonScrubberHeaderView(0);
  v12 = 0.0;
  if (*(_BYTE *)(v5 + *(int *)(v11 + 32)) == 1)
  {
    v13 = (int *)v11;
    v19.origin.x = a1;
    v19.origin.y = a2;
    v19.size.width = a3;
    v19.size.height = a4;
    MinY = CGRectGetMinY(v19);
    v15 = *(double *)(v5 + v13[9]);
    if (MinY < v15 + a5)
    {
      v20.origin.x = a1;
      v20.origin.y = a2;
      v20.size.width = a3;
      v20.size.height = a4;
      v12 = a5 - (CGRectGetMinY(v20) - v15) + 0.0;
      v16 = *(double *)(v5 + v13[10]);
      if (v12 - v16 >= 0.0)
      {
        v17 = v12 - *(double *)(v5 + v13[11]);
        if (v17 >= 0.0)
          return v16 + v17;
        else
          return *(double *)(v5 + v13[10]);
      }
    }
  }
  return v12;
}

double sub_1002F462C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  double v12;
  int *v13;
  CGFloat MinY;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGRect v23;
  CGRect v24;

  v11 = type metadata accessor for MoonScrubberHeaderView(0);
  v12 = 1.0;
  if (*(_BYTE *)(v5 + *(int *)(v11 + 32)) == 1)
  {
    v13 = (int *)v11;
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    MinY = CGRectGetMinY(v23);
    v15 = *(double *)(v5 + v13[9]);
    if (MinY < v15 + a5)
    {
      v24.origin.x = a1;
      v24.origin.y = a2;
      v24.size.width = a3;
      v24.size.height = a4;
      v16 = CGRectGetMinY(v24) - v15;
      v17 = *(double *)(v5 + v13[10]);
      v18 = *(double *)(v5 + v13[11]) - v17;
      v19 = v17 + v18 * 0.33;
      v20 = a5 - v16 + 0.0 - v19;
      if (v20 > 0.0)
      {
        v21 = 1.0 - v20 / (v17 + v18 * 0.67 - v19);
        if (v21 < 0.0)
          return 0.0;
        else
          return v21;
      }
    }
  }
  return v12;
}

uint64_t sub_1002F473C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int *v92;
  char *v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t (*v101)(char *, char *, uint64_t);
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t OpaqueTypeConformance2;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  ValueMetadata *v128;
  unint64_t v129;
  uint64_t (*v130)();
  uint64_t v131;

  v115 = a2;
  v3 = sub_1000BA294(&qword_100BD6318);
  __chkstk_darwin(v3);
  v106 = (uint64_t *)((char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v113 = sub_1000BA294(&qword_100BD6320);
  __chkstk_darwin(v113);
  v111 = (uint64_t)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1000BA294(&qword_100BD6328);
  __chkstk_darwin(v112);
  v120 = (uint64_t)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v125 = (uint64_t)&v97 - v8;
  v9 = type metadata accessor for MoonScrubberHeaderView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v119 = sub_1000BA294(&qword_100BD6330);
  v107 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1000BA294(&qword_100BD6338);
  __chkstk_darwin(v124);
  v117 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_1000BA294(&qword_100BD6340);
  v123 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v114 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v122 = (char *)&v97 - v17;
  __chkstk_darwin(v18);
  v126 = (char *)&v97 - v19;
  __chkstk_darwin(v20);
  v127 = (char *)&v97 - v21;
  v98 = (uint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002F61B4(a1, v98);
  v22 = *(unsigned __int8 *)(v10 + 80);
  v23 = ((v22 + 16) & ~v22) + v11;
  v24 = (v22 + 16) & ~v22;
  v116 = v24;
  v99 = v22 | 7;
  v118 = v23;
  v25 = swift_allocObject(&unk_100B6C800, v23, v22 | 7);
  sub_1002F61FC((uint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  v128 = (ValueMetadata *)0xD000000000000015;
  v129 = 0x80000001009FA0F0;
  v130 = sub_1002F6270;
  v131 = v25;
  v109 = a1 + *(int *)(v9 + 28);
  v26 = v109;
  v110 = *(int *)(type metadata accessor for MoonScrubberHeaderViewModel(0) + 40);
  v27 = *(unsigned __int8 *)(v26 + v110) != 0;
  v28 = v13;
  v29 = sub_1002F670C();
  v105 = v29;
  View.isHidden(_:defaultAccessibilityHidden:)(v27, 0, &type metadata for HeaderButton, v29);
  swift_release(v25);
  v30 = LocalizedStringKey.init(stringLiteral:)(0x6142206275726353, 0xEE00647261776B63);
  v34 = Text.init(_:tableName:bundle:comment:)(v30, v32, v31 & 1, v33, 0, 0, 0, "Accessibility label for the backward moon scrubber header button");
  v36 = v35;
  v38 = v37;
  v40 = v39 & 1;
  v128 = &type metadata for HeaderButton;
  v129 = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v128, &opaque type descriptor for <<opaque return type of View.isHidden(_:defaultAccessibilityHidden:)>>, 1);
  v41 = (uint64_t)v117;
  v42 = v119;
  v100 = v28;
  View.accessibilityLabel(_:)(v34, v36, v40, v38, v119, OpaqueTypeConformance2);
  sub_1000D31B4(v34, v36, v40);
  v43 = swift_bridgeObjectRelease();
  v107 = *(_QWORD *)(v107 + 8);
  ((void (*)(char *, uint64_t, __n128))v107)(v28, v42, v43);
  v44 = a1;
  v45 = v98;
  sub_1002F61B4(a1, v98);
  v46 = v23;
  v47 = v99;
  v48 = swift_allocObject(&unk_100B6C828, v46, v99);
  v49 = v116;
  sub_1002F61FC(v45, v48 + v116);
  v50 = sub_1000BA294(&qword_100BD6308);
  v103 = v50;
  v51 = sub_1002F6758();
  v102 = v51;
  v52 = sub_100075EB0(&qword_100BD62F8);
  v53 = type metadata accessor for EmptyVisualEffect(255);
  sub_10000F1C8(&qword_100BD6300, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  v128 = (ValueMetadata *)v53;
  v129 = v54;
  v55 = swift_getOpaqueTypeConformance2(&v128, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
  v128 = (ValueMetadata *)v52;
  v129 = v55;
  v104 = swift_getOpaqueTypeConformance2(&v128, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
  v56 = v126;
  View.visualEffect<A>(_:)(sub_1002F674C, v48, v124, v50, v51, v104);
  swift_release(v48);
  sub_100021AA4(v41, &qword_100BD6338);
  v101 = *(uint64_t (**)(char *, char *, uint64_t))(v123 + 32);
  v57 = v101(v127, v56, v121);
  v58 = static HorizontalAlignment.center.getter(v57);
  v59 = (uint64_t)v106;
  *v106 = v58;
  *(_QWORD *)(v59 + 8) = 0;
  *(_BYTE *)(v59 + 16) = 0;
  v60 = (char *)(v59 + *(int *)(sub_1000BA294(&qword_100BD6358) + 44));
  v97 = v44;
  sub_1002F50F4(v44, v60);
  KeyPath = swift_getKeyPath(&unk_100993DE8);
  v62 = v111;
  sub_100037768(v59, v111, &qword_100BD6318);
  v63 = v62 + *(int *)(v113 + 36);
  *(_QWORD *)v63 = KeyPath;
  *(_BYTE *)(v63 + 8) = 1;
  sub_100021AA4(v59, &qword_100BD6318);
  v64 = v120;
  sub_100037768(v62, v120, &qword_100BD6320);
  *(_QWORD *)(v64 + *(int *)(v112 + 36)) = 0x3FF0000000000000;
  sub_100021AA4(v62, &qword_100BD6320);
  sub_1000787D4(v64, v125, &qword_100BD6328);
  v65 = v44;
  v66 = v45;
  sub_1002F61B4(v65, v45);
  v67 = swift_allocObject(&unk_100B6C850, v118, v47);
  sub_1002F61FC(v45, v67 + v49);
  v128 = (ValueMetadata *)0xD000000000000014;
  v129 = 0x80000001009FA160;
  v130 = sub_1002F6270;
  v131 = v67;
  v68 = v100;
  View.isHidden(_:defaultAccessibilityHidden:)(*(unsigned __int8 *)(v109 + v110) != 1, 0, &type metadata for HeaderButton, v105);
  swift_release(v67);
  v69 = LocalizedStringKey.init(stringLiteral:)(0x6F46206275726353, 0xED00006472617772);
  v73 = Text.init(_:tableName:bundle:comment:)(v69, v71, v70 & 1, v72, 0, 0, 0, "Accessibility label for the forward moon scrubber header button");
  v75 = v74;
  LOBYTE(v41) = v76 & 1;
  v77 = (uint64_t)v117;
  v78 = v119;
  View.accessibilityLabel(_:)(v73, v74, v76 & 1, v79, v119, OpaqueTypeConformance2);
  sub_1000D31B4(v73, v75, v41);
  v80 = swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, __n128))v107)(v68, v78, v80);
  sub_1002F61B4(v97, v66);
  v81 = swift_allocObject(&unk_100B6C878, v118, v47);
  sub_1002F61FC(v66, v81 + v116);
  v82 = v122;
  View.visualEffect<A>(_:)(sub_1002F674C, v81, v124, v103, v102, v104);
  swift_release(v81);
  sub_100021AA4(v77, &qword_100BD6338);
  v83 = v126;
  v84 = v121;
  v101(v126, v82, v121);
  v85 = v123;
  v86 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
  v87 = v84;
  v86(v82, v127, v84);
  v88 = v125;
  v89 = v120;
  sub_100037768(v125, v120, &qword_100BD6328);
  v90 = v114;
  v86(v114, v83, v84);
  v91 = v115;
  v86(v115, v82, v84);
  v92 = (int *)sub_1000BA294(&qword_100BD6360);
  v93 = &v91[v92[12]];
  *(_QWORD *)v93 = 0x4024000000000000;
  v93[8] = 0;
  sub_100037768(v89, (uint64_t)&v91[v92[16]], &qword_100BD6328);
  v94 = &v91[v92[20]];
  *(_QWORD *)v94 = 0x4024000000000000;
  v94[8] = 0;
  v86(&v91[v92[24]], v90, v87);
  v95 = *(void (**)(char *, uint64_t))(v85 + 8);
  v95(v126, v87);
  sub_100021AA4(v88, &qword_100BD6328);
  v95(v127, v87);
  v95(v90, v87);
  sub_100021AA4(v89, &qword_100BD6328);
  return ((uint64_t (*)(char *, uint64_t))v95)(v122, v87);
}

uint64_t sub_1002F50F4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t);
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t OpaqueTypeConformance2;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  _BYTE v98[152];
  _BYTE v99[7];
  char v100;
  _BYTE v101[7];
  char v102;
  _BYTE v103[7];
  char v104;
  _BYTE v105[7];
  char v106;
  _BYTE v107[7];
  _OWORD __dst[10];

  v95 = a2;
  v3 = sub_1000BA294(&qword_100BD6368);
  v93 = *(_QWORD *)(v3 - 8);
  v94 = v3;
  __chkstk_darwin(v3);
  v92 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v91 = (char *)&v73 - v6;
  v7 = type metadata accessor for MoonScrubberHeaderView(0);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  OpaqueTypeConformance2 = *(_QWORD *)(v7 - 8);
  v88 = v8;
  __chkstk_darwin(v7);
  v83 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Font.TextStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1000BA294(&qword_100BD6370);
  v96 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v97 = (char *)&v73 - v16;
  v17 = (_QWORD *)(a1 + *(int *)(v7 + 28));
  v18 = v17[1];
  *(_QWORD *)&__dst[0] = *v17;
  *((_QWORD *)&__dst[0] + 1) = v18;
  v19 = sub_100114EF8();
  swift_bridgeObjectRetain(v18);
  v20 = Text.init<A>(_:)(__dst, &type metadata for String, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Font.TextStyle.title3(_:), v10);
  static Font.Weight.semibold.getter(v27);
  v28 = static Font.system(_:weight:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = Text.font(_:)(v28, v20, v22, v26, v24);
  v31 = v30;
  LOBYTE(v11) = v32;
  v81 = v33;
  swift_release(v28);
  sub_1000D31B4(v20, v22, v26);
  swift_bridgeObjectRelease();
  v34 = a1;
  v35 = v83;
  sub_1002F61B4(a1, v83);
  v36 = *(unsigned __int8 *)(OpaqueTypeConformance2 + 80);
  v37 = ((v36 + 16) & ~v36) + v88;
  v38 = (v36 + 16) & ~v36;
  v39 = v36 | 7;
  v84 = v36 | 7;
  v85 = v37;
  v40 = swift_allocObject(&unk_100B6C8A0, v37, v36 | 7);
  v86 = v38;
  sub_1002F61FC(v35, v40 + v38);
  *(_QWORD *)&__dst[0] = v29;
  *((_QWORD *)&__dst[0] + 1) = v31;
  LOBYTE(__dst[1]) = v11 & 1;
  *((_QWORD *)&__dst[1] + 1) = v81;
  *(_QWORD *)&__dst[2] = sub_1002F57B0;
  *((_QWORD *)&__dst[2] + 1) = 0;
  *(_QWORD *)&__dst[3] = sub_1002F686C;
  *((_QWORD *)&__dst[3] + 1) = v40;
  sub_1002F61B4(v34, v35);
  v41 = swift_allocObject(&unk_100B6C8C8, v37, v39);
  v42 = v41 + v38;
  v43 = v35;
  sub_1002F61FC(v35, v42);
  v44 = sub_1000BA294(&qword_100BD6378);
  v45 = sub_1000BA294(&qword_100BD62F8);
  v88 = v45;
  v46 = sub_1002F687C();
  v47 = type metadata accessor for EmptyVisualEffect(255);
  sub_10000F1C8(&qword_100BD6300, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  *(_QWORD *)v98 = v47;
  *(_QWORD *)&v98[8] = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v98, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
  View.visualEffect<A>(_:)(sub_1002F6250, v41, v44, v45, v46, OpaqueTypeConformance2);
  swift_release(v41);
  sub_1000D31B4(*(uint64_t *)&__dst[0], *((uint64_t *)&__dst[0] + 1), __dst[1]);
  swift_bridgeObjectRelease();
  swift_release(*((_QWORD *)&__dst[2] + 1));
  v49 = swift_release(*((_QWORD *)&__dst[3] + 1));
  v76 = static Axis.Set.horizontal.getter(v49);
  v50 = v34;
  v82 = v34;
  sub_1002F589C(v34, (uint64_t)__dst);
  v74 = *((_QWORD *)&__dst[0] + 1);
  v75 = *(_QWORD *)&__dst[0];
  LOBYTE(v31) = __dst[1];
  LOBYTE(v45) = __dst[3];
  v79 = *((_QWORD *)&__dst[3] + 1);
  v77 = *((_QWORD *)&__dst[2] + 1);
  v78 = *(_QWORD *)&__dst[4];
  LOBYTE(v34) = BYTE8(__dst[4]);
  v81 = *(_QWORD *)&__dst[6];
  LOBYTE(v37) = BYTE8(__dst[6]);
  v73 = *(_OWORD *)((char *)&__dst[1] + 8);
  v80 = __dst[5];
  sub_1002F61B4(v50, v43);
  v52 = v84;
  v51 = v85;
  v53 = swift_allocObject(&unk_100B6C8F0, v85, v84);
  v54 = v86;
  sub_1002F61FC(v43, v53 + v86);
  v106 = v31;
  v104 = v45;
  v102 = v34;
  v100 = v37;
  v98[0] = v76;
  *(_DWORD *)&v98[1] = *(_DWORD *)v107;
  *(_DWORD *)&v98[4] = *(_DWORD *)&v107[3];
  *(_QWORD *)&v98[8] = v75;
  *(_QWORD *)&v98[16] = v74;
  v98[24] = v31;
  *(_DWORD *)&v98[25] = *(_DWORD *)v105;
  *(_DWORD *)&v98[28] = *(_DWORD *)&v105[3];
  *(_OWORD *)&v98[32] = v73;
  *(_QWORD *)&v98[48] = v77;
  v98[56] = v45;
  *(_DWORD *)&v98[60] = *(_DWORD *)&v103[3];
  *(_DWORD *)&v98[57] = *(_DWORD *)v103;
  *(_QWORD *)&v98[64] = v79;
  *(_QWORD *)&v98[72] = v78;
  v98[80] = v34;
  *(_DWORD *)&v98[84] = *(_DWORD *)&v101[3];
  *(_DWORD *)&v98[81] = *(_DWORD *)v101;
  *(_OWORD *)&v98[88] = v80;
  *(_QWORD *)&v98[104] = v81;
  v98[112] = v37;
  *(_DWORD *)&v98[116] = *(_DWORD *)&v99[3];
  *(_DWORD *)&v98[113] = *(_DWORD *)v99;
  *(_QWORD *)&v98[120] = sub_1002F57B0;
  *(_QWORD *)&v98[128] = 0;
  *(_QWORD *)&v98[136] = sub_1002F6904;
  *(_QWORD *)&v98[144] = v53;
  sub_1002F61B4(v82, v43);
  v55 = swift_allocObject(&unk_100B6C918, v51, v52);
  sub_1002F61FC(v43, v55 + v54);
  v56 = sub_1000BA294(&qword_100BD6388);
  v57 = sub_1000BA294(&qword_100BD6308);
  v58 = sub_1002F69A4();
  *(_QWORD *)&__dst[0] = v88;
  *((_QWORD *)&__dst[0] + 1) = OpaqueTypeConformance2;
  v59 = swift_getOpaqueTypeConformance2(__dst, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
  v60 = v91;
  View.visualEffect<A>(_:)(sub_1002F6260, v55, v56, v57, v58, v59);
  swift_release(v55);
  memcpy(__dst, v98, 0x98uLL);
  sub_1002F6A40((uint64_t)__dst);
  v61 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
  v63 = v89;
  v62 = v90;
  v61(v89, v97, v90);
  v64 = v92;
  v65 = v93;
  v66 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  v67 = v94;
  v66(v92, v60, v94);
  v68 = v95;
  v61(v95, v63, v62);
  v69 = sub_1000BA294(&qword_100BD63A8);
  v66(&v68[*(int *)(v69 + 48)], v64, v67);
  v70 = *(void (**)(char *, uint64_t))(v65 + 8);
  v70(v60, v67);
  v71 = *(void (**)(char *, uint64_t))(v96 + 8);
  v71(v97, v62);
  v70(v64, v67);
  return ((uint64_t (*)(char *, uint64_t))v71)(v63, v62);
}

uint64_t sub_1002F57B4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v2 = *a1;
  v3 = a2[1];
  v4 = a2[2];
  v7[1] = *a2;
  v7[2] = v3;
  v7[3] = v4;
  v7[0] = v2;
  v5 = sub_1000BA294(&qword_100BD62F0);
  return Binding.wrappedValue.setter(v7, v5);
}

uint64_t sub_1002F5808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  uint64_t v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t v11;

  v5 = sub_1000BA8B0();
  v6 = GeometryProxy.frame(in:)(a3 + *(int *)(v5 + 48));
  sub_1002F453C(v6, v7, v8, v9, 0.0);
  v10 = sub_1000C5CE4();
  sub_10000F1C8(&qword_100BD6300, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  return VisualEffect.offset(x:y:)(v10, v11, 0.0, v3);
}

double sub_1002F589C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72;
  double result;
  uint64_t v74;
  int v75;
  void (*v76)(char *, uint64_t);
  uint64_t (*v77)(char *, _QWORD, uint64_t);
  unsigned int v78;
  unint64_t v79;
  char *v80;
  uint64_t KeyPath;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *(int *)(type metadata accessor for MoonScrubberHeaderView(0) + 28);
  v9 = *(_QWORD *)(v8 + 24);
  v86 = *(_QWORD *)(v8 + 16);
  v87 = v9;
  v10 = sub_100114EF8();
  swift_bridgeObjectRetain(v9);
  v79 = v10;
  v11 = Text.init<A>(_:)(&v86, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = *(uint64_t (**)(_QWORD))(v5 + 104);
  v78 = enum case for Font.TextStyle.body(_:);
  v77 = (uint64_t (*)(char *, _QWORD, uint64_t))v18;
  v19 = v18(v7);
  static Font.Weight.medium.getter(v19);
  v20 = static Font.system(_:weight:)(v7);
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v80 = v7;
  v82 = v4;
  v76 = v21;
  v21(v7, v4);
  v22 = Text.font(_:)(v20, v11, v13, v17, v15);
  v24 = v23;
  LODWORD(v85) = v25;
  v27 = v26;
  swift_release(v20);
  sub_1000D31B4(v11, v13, v17);
  v28 = swift_bridgeObjectRelease();
  if (*(_BYTE *)(v8 + 48) == 1)
    v29 = static Color.primary.getter(v28);
  else
    v29 = static Color.secondary.getter(v28);
  v30 = v29;
  v31 = v85 & 1;
  v32 = Text.foregroundColor(_:)(v29, v22, v24, v85 & 1, v27);
  v83 = v33;
  v84 = v32;
  v75 = v34;
  v85 = v35;
  swift_release(v30);
  sub_1000D31B4(v22, v24, v31);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100993E18);
  v36 = *(_QWORD *)(v8 + 40);
  v86 = *(_QWORD *)(v8 + 32);
  v87 = v36;
  swift_bridgeObjectRetain(v36);
  v37 = Text.init<A>(_:)(&v86, &type metadata for String, v79);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  v44 = v80;
  v45 = v82;
  v46 = v77(v80, v78, v82);
  static Font.Weight.medium.getter(v46);
  v47 = static Font.system(_:weight:)(v44);
  v76(v44, v45);
  v48 = Text.font(_:)(v47, v37, v39, v43, v41);
  v50 = v49;
  v52 = v51;
  v82 = v53;
  swift_release(v47);
  sub_1000D31B4(v37, v39, v43);
  v54 = swift_bridgeObjectRelease();
  if (*(_BYTE *)(v8 + 48) == 1)
    v55 = static Color.primary.getter(v54);
  else
    v55 = static Color.secondary.getter(v54);
  v56 = v55;
  v57 = v52 & 1;
  v58 = v75 & 1;
  v59 = Text.foregroundColor(_:)(v55, v48, v50, v52 & 1, v82);
  v79 = v60;
  v80 = v61;
  v63 = v62;
  swift_release(v56);
  v64 = v63 & 1;
  v78 = v63 & 1;
  sub_1000D31B4(v48, v50, v57);
  swift_bridgeObjectRelease();
  v65 = swift_getKeyPath(&unk_100993E18);
  LOBYTE(v86) = v58;
  v67 = v83;
  v66 = v84;
  *(_QWORD *)a2 = v84;
  *(_QWORD *)(a2 + 8) = v67;
  *(_BYTE *)(a2 + 16) = v58;
  v68 = v85;
  v69 = KeyPath;
  *(_QWORD *)(a2 + 24) = v85;
  *(_QWORD *)(a2 + 32) = v69;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  v70 = v79;
  *(_QWORD *)(a2 + 56) = v59;
  *(_QWORD *)(a2 + 64) = v70;
  *(_BYTE *)(a2 + 72) = v64;
  v71 = v80;
  *(_QWORD *)(a2 + 80) = v80;
  *(_QWORD *)(a2 + 88) = v65;
  *(_QWORD *)(a2 + 96) = 1;
  *(_BYTE *)(a2 + 104) = 0;
  sub_1000D55D4(v66, v67, v58);
  swift_bridgeObjectRetain(v68);
  swift_retain();
  v72 = v78;
  sub_1000D55D4(v59, v70, v78);
  swift_bridgeObjectRetain(v71);
  swift_retain();
  sub_1000D31B4(v59, v70, v72);
  swift_release(v65);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v66, v67, v86);
  swift_release(v69);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1002F5C80(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v2 = *a1;
  v3 = a2[4];
  v4 = a2[5];
  v7[1] = a2[3];
  v7[2] = v3;
  v7[3] = v4;
  v7[0] = v2;
  v5 = sub_1000BA294(&qword_100BD62F0);
  return Binding.wrappedValue.setter(v7, v5);
}

uint64_t sub_1002F5CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  double v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];

  v21 = sub_1000BA294(&qword_100BD62F8);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  sub_1000BA8B0();
  sub_1000DD90C();
  sub_1000CCB28();
  v5 = *(_QWORD *)(a3 + 16);
  v6 = sub_1000BA294(&qword_100BD62F0);
  Binding.wrappedValue.getter(v6);
  v7 = sub_1000C3800();
  sub_1002F453C(v7, v8, v9, v10, v11);
  v12 = sub_1000C5CE4();
  sub_10000F1C8(&qword_100BD6300, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  v14 = v13;
  VisualEffect.offset(x:y:)(v12, v13, 0.0, v3);
  sub_1000DD90C();
  sub_1000CCB28();
  v23[2] = v5;
  Binding.wrappedValue.getter(v6);
  v15 = sub_1000C3800();
  sub_1002F462C(v15, v16, v17, v18, v19);
  v23[0] = v12;
  v23[1] = v14;
  sub_10009885C((uint64_t)v23, (uint64_t)&opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>);
  sub_1000D9CB0();
  return sub_1000DCD7C(v22);
}

void sub_1002F5E68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for MoonDetailSelectedDate(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DB418((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72));
  v5 = a1 + *(int *)(sub_1000BA8B0() + 28);
  v6 = v5 + *(int *)(sub_1000C4748() + 36);
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, v6, v7);
  swift_storeEnumTagMultiPayload(v4, v2, 1);
  sub_1005DFEE8((uint64_t)v4);
  sub_1002F682C((uint64_t)v4);
  sub_100079F70();
}

uint64_t sub_1002F5F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v19;
  _QWORD v20[2];

  v4 = sub_1000BA294(&qword_100BD62F8);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v5 = sub_1000BA8B0();
  sub_1000DD90C();
  v10 = sub_1002F453C(v6, v7, v8, v9, 0.0);
  v11 = type metadata accessor for EmptyVisualEffect(0);
  sub_10000F1C8(&qword_100BD6300, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  v13 = v12;
  VisualEffect.offset(x:y:)(v11, v12, 0.0, v10);
  sub_1000DD90C();
  if (*(_BYTE *)(a3 + *(int *)(v5 + 32)) == 1)
    CGRectGetMinY(*(CGRect *)&v14);
  v20[0] = v11;
  v20[1] = v13;
  sub_10009885C((uint64_t)v20, (uint64_t)&opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>);
  sub_1000D9CB0();
  return sub_1000DCD7C(v19);
}

uint64_t sub_1002F609C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = type metadata accessor for LocalCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter(v4);
  GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for LocalCoordinateSpace);
  v8 = v7;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v8;
  return result;
}

uint64_t sub_1002F6144(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  v2 = *a1;
  v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for MoonScrubberHeaderView(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  v8[0] = v2;
  v8[1] = v4;
  v8[2] = v5;
  v6 = sub_1000BA294(&qword_100BC40A8);
  return State.wrappedValue.setter(v8, v6);
}

uint64_t sub_1002F61B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonScrubberHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002F61FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonScrubberHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002F6240(uint64_t a1)
{
  return sub_1002F6910(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002F6144);
}

uint64_t sub_1002F6250(uint64_t a1, uint64_t a2)
{
  return sub_1002F6950(a1, a2, sub_1002F5808);
}

uint64_t sub_1002F6260(uint64_t a1, uint64_t a2)
{
  return sub_1002F6950(a1, a2, sub_1002F5CD4);
}

uint64_t sub_1002F6274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = type metadata accessor for PlainButtonStyle(0);
  v22 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BD63C0);
  v21 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  swift_retain();
  v14 = sub_1000BA294(&qword_100BD63C8);
  v15 = sub_1002F6CE8();
  v16 = Button.init(action:label:)(a3, a4, sub_1002F6CDC, v23, v14, v15);
  PlainButtonStyle.init()(v16);
  sub_10003D2DC(qword_100BD63F8, &qword_100BD63C0);
  v18 = v17;
  sub_10000F1C8((unint64_t *)&qword_100BD0908, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  View.buttonStyle<A>(_:)(v10, v11, v8, v18, v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v11);
}

void sub_1002F6418(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a3;
  v5 = type metadata accessor for Font.TextStyle(0);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000BA294(&qword_100BCF148);
  __chkstk_darwin(v32);
  v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Image.Scale(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BCF140);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_1000BA294(&qword_100BD63E0);
  __chkstk_darwin(v33);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  v19 = Image.init(systemName:)(a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Image.Scale.large(_:), v10);
  KeyPath = swift_getKeyPath(&unk_100993EA8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v9 + *(int *)(v32 + 28), v13, v10);
  *v9 = KeyPath;
  sub_100037768((uint64_t)v9, (uint64_t)v16 + *(int *)(v14 + 36), &qword_100BCF148);
  *v16 = v19;
  swift_retain();
  sub_100021AA4((uint64_t)v9, &qword_100BCF148);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = swift_release(v19);
  v23 = v34;
  v22 = v35;
  v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v34 + 104))(v7, enum case for Font.TextStyle.title3(_:), v35, v21);
  static Font.Weight.medium.getter(v24);
  v25 = static Font.system(_:weight:)(v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
  v26 = swift_getKeyPath(&unk_100993ED8);
  sub_100037768((uint64_t)v16, (uint64_t)v18, &qword_100BCF140);
  v27 = (uint64_t *)&v18[*(int *)(v33 + 36)];
  *v27 = v26;
  v27[1] = v25;
  sub_100021AA4((uint64_t)v16, &qword_100BCF140);
  v29 = static Color.cyan.getter(v28);
  v30 = v36;
  sub_100037768((uint64_t)v18, v36, &qword_100BD63E0);
  *(_QWORD *)(v30 + *(int *)(sub_1000BA294(&qword_100BD63C8) + 36)) = v29;
  sub_100021AA4((uint64_t)v18, &qword_100BD63E0);
}

uint64_t sub_1002F6700()
{
  uint64_t *v0;

  return sub_1002F6274(*v0, v0[1], v0[2], v0[3]);
}

unint64_t sub_1002F670C()
{
  unint64_t result;

  result = qword_100BD6348;
  if (!qword_100BD6348)
  {
    result = swift_getWitnessTable(&unk_100993E58, &type metadata for HeaderButton);
    atomic_store(result, (unint64_t *)&qword_100BD6348);
  }
  return result;
}

uint64_t sub_1002F674C(uint64_t a1, uint64_t a2)
{
  return sub_1002F6950(a1, a2, sub_1002F5F2C);
}

unint64_t sub_1002F6758()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BD6350;
  if (!qword_100BD6350)
  {
    v1 = sub_100075EB0(&qword_100BD6338);
    v2[0] = &type metadata for HeaderButton;
    v2[1] = sub_1002F670C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.isHidden(_:defaultAccessibilityHidden:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6350);
  }
  return result;
}

void sub_1002F6808()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000BA8B0();
  sub_1000BA550();
  sub_1002F5E68(v0 + v1);
}

uint64_t sub_1002F682C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoonDetailSelectedDate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002F686C(uint64_t a1)
{
  return sub_1002F6910(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002F57B4);
}

unint64_t sub_1002F687C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6380;
  if (!qword_100BD6380)
  {
    v1 = sub_100075EB0(&qword_100BD6378);
    sub_10003D2DC(&qword_100BC41C8, &qword_100BC41D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6380);
  }
  return result;
}

uint64_t sub_1002F6904(uint64_t a1)
{
  return sub_1002F6910(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002F5C80);
}

uint64_t sub_1002F6910(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  sub_1000BA8B0();
  sub_1000BA550();
  return a2(a1, v2 + v4);
}

uint64_t sub_1002F6950(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  sub_1000BA8B0();
  sub_1000BA550();
  return a3(a1, a2, v3 + v7);
}

unint64_t sub_1002F69A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6390;
  if (!qword_100BD6390)
  {
    v1 = sub_100075EB0(&qword_100BD6388);
    sub_10003D2DC(&qword_100BD6398, &qword_100BD63A0);
    sub_10003D2DC(&qword_100BC41C8, &qword_100BC41D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6390);
  }
  return result;
}

uint64_t sub_1002F6A40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_BYTE *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 144);
  sub_1000D31B4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release(v2);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v3, v4, v5);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for HeaderButton(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for HeaderButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for HeaderButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for HeaderButton(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherDataState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherDataState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeaderButton()
{
  return &type metadata for HeaderButton;
}

void sub_1002F6CA0()
{
  sub_10003D2DC(&qword_100BD63B0, &qword_100BD63B8);
}

uint64_t sub_1002F6CCC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB06D8, 1);
}

void sub_1002F6CDC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1002F6418(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1002F6CE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD63D0;
  if (!qword_100BD63D0)
  {
    v1 = sub_100075EB0(&qword_100BD63C8);
    sub_1002F6D6C();
    sub_10003D2DC(&qword_100BD63E8, &qword_100BD63F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD63D0);
  }
  return result;
}

unint64_t sub_1002F6D6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD63D8;
  if (!qword_100BD63D8)
  {
    v1 = sub_100075EB0(&qword_100BD63E0);
    sub_10025B520();
    sub_10003D2DC(&qword_100BC4E20, &qword_100BC4E28);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD63D8);
  }
  return result;
}

uint64_t sub_1002F6E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v0 = sub_100075EB0(&qword_100BD63C0);
  v1 = type metadata accessor for PlainButtonStyle(255);
  sub_10003D2DC(qword_100BD63F8, &qword_100BD63C0);
  v3 = v2;
  sub_10000F1C8((unint64_t *)&qword_100BD0908, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  v6[0] = v0;
  v6[1] = v1;
  v6[2] = v3;
  v6[3] = v4;
  return sub_10009885C((uint64_t)v6, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
}

_QWORD *sub_1002F6E9C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release(v0[2]);
  sub_1000BA8B8((uint64_t)v0 + *(_QWORD *)(*v0 + 136), *(_QWORD *)(v1 + 88));
  sub_1000BA8B8((uint64_t)v0 + *(_QWORD *)(*v0 + 144), *(_QWORD *)(v1 + 96));
  swift_release(*(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 152) + 8));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1002F6F24()
{
  uint64_t v0;

  sub_1002F6E9C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002F6F48(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 104) + 8);
}

uint64_t sub_1002F6F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))type metadata accessor for ArticleModel, a2);
}

uint64_t sub_1002F6F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Location, a2);
}

uint64_t sub_1002F6F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for DetailChartDataElement, a2);
}

uint64_t sub_1002F6F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))type metadata accessor for ConditionDetailChartInput, a2);
}

uint64_t sub_1002F6F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for DetailChartCondition, a2);
}

uint64_t sub_1002F6F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for HourWeather, a2);
}

uint64_t sub_1002F6F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for UnitConfiguration.Distance, a2);
}

uint64_t sub_1002F6FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for UnitConfiguration.Precipitation, a2);
}

uint64_t sub_1002F6FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for UnitConfiguration.Pressure, a2);
}

uint64_t sub_1002F6FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for UnitConfiguration.WindSpeed, a2);
}

uint64_t sub_1002F6FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))&type metadata accessor for SavedLocation, a2);
}

uint64_t sub_1002F6FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F6FFC((uint64_t (*)(uint64_t))&type metadata accessor for HistoricalComparisons, &qword_100BD66D0, (void (*)(_QWORD))&type metadata accessor for HistoricalComparison, a1);
}

uint64_t sub_1002F6FFC@<X0>(uint64_t (*a1)(uint64_t)@<X0>, unint64_t *a2@<X1>, void (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD v20[4];
  uint64_t v21;

  v8 = a1(0);
  sub_10000F1C8(a2, a1);
  v10 = v9;
  dispatch thunk of Collection.startIndex.getter(v8, v9);
  dispatch thunk of Collection.endIndex.getter(v8, v10);
  if (v21 == v20[0])
  {
    a3(0);
    v11 = sub_1000C34B8();
  }
  else
  {
    dispatch thunk of Collection.subscript.read(v20, &v21, v8, v10);
    v15 = ((uint64_t (*)(_QWORD))a3)(0);
    v16 = sub_1000D11C8();
    v18 = sub_1000999F8(v16, v17);
    sub_100109928(v18);
    v11 = a4;
    v12 = 0;
    v13 = 1;
    v14 = v15;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v11, v12, v13, v14);
}

uint64_t sub_1002F70F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002F7224(a1, (uint64_t (*)(_QWORD))&type metadata accessor for WeatherAlert, a2);
}

uint64_t sub_1002F70FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))type metadata accessor for DayPickerViewModel.CalendarDayViewModel, a2);
}

uint64_t sub_1002F7108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))type metadata accessor for LocationWeatherDataState, a2);
}

uint64_t sub_1002F7114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))type metadata accessor for ScrubberHour, a2);
}

uint64_t sub_1002F7120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD v16[4];
  uint64_t v17;

  v2 = sub_1000BA294(&qword_100BCB240);
  sub_10003D2DC(&qword_100BCE7D8, &qword_100BCB240);
  v4 = v3;
  dispatch thunk of Collection.startIndex.getter(v2, v3);
  dispatch thunk of Collection.endIndex.getter(v2, v4);
  if (v17 == v16[0])
  {
    type metadata accessor for MonthPrecipitationStatistics(0);
    v5 = sub_1000C34B8();
  }
  else
  {
    dispatch thunk of Collection.subscript.read(v16, &v17, v2, v4);
    v10 = v9;
    v11 = type metadata accessor for MonthPrecipitationStatistics(0);
    v12 = sub_1000D11C8();
    v14 = v13(v12, v10, v11);
    sub_100109928(v14);
    v5 = a1;
    v6 = 0;
    v7 = 1;
    v8 = v11;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
}

uint64_t sub_1002F720C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))type metadata accessor for OverviewTableRowViewModel, a2);
}

uint64_t sub_1002F7218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010CDDC(a1, (void (*)(_QWORD))type metadata accessor for ScrubberDay, a2);
}

uint64_t sub_1002F7224@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = a2(0);
  if (v5)
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)), v6);
  v7 = sub_1000D9538();
  return _s7Weather24LocationCompositionStateOwst_0(v7, v8, v9, v10);
}

Swift::Void __swiftcall SessionEventsAndDataCoordinator.handleActivity(_:)(NSUserActivity a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v7;
  _QWORD v8[7];
  uint64_t v9;

  v2 = sub_1002F74F0(a1.super.isa);
  if (v3)
  {
    v4 = String.lowercased()();
    countAndFlagsBits = v4._countAndFlagsBits;
    object = v4._object;
    sub_1000986C4();
  }
  else
  {
    object = (void *)0xE700000000000000;
    countAndFlagsBits = 0x6E776F6E6B6E75;
  }
  v9 = *(_QWORD *)(v1 + 328);
  __chkstk_darwin(v2);
  v8[2] = v1;
  v8[3] = countAndFlagsBits;
  v8[4] = object;
  v7 = sub_1000CD6E8();
  sub_100094EE4();
  Lock.sync<A>(_:)(&type metadata for (), sub_1002F94CC, v8, v7, &type metadata for () + 1, &protocol witness table for UnfairLock);
  swift_release(v9);
  sub_1002F7A50(countAndFlagsBits, (uint64_t)object, 1819047278, 0xE400000000000000);
  swift_bridgeObjectRelease();
  sub_10006ADEC();
  sub_10009D300();
}

uint64_t sub_1002F7390()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ReferralData(0);
  sub_10000F1C8(&qword_100BD6638, (uint64_t (*)(uint64_t))&type metadata accessor for ReferralData);
  return AccessTracker.clearStack<A>(of:includeParentTrackers:)(v0, 1, v0, v1);
}

void SessionEventsAndDataCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_1002F7480();
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 48));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 88));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 128));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 168));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 208));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 248));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 288));
  swift_release(*(_QWORD *)(v0 + 328));
  v1 = sub_100098BC4();
  sub_10003BC44(v1);

  sub_10004A298();
}

void sub_1002F7480()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  objc_msgSend(v0, "endGeneratingDeviceOrientationNotifications");

}

uint64_t SessionEventsAndDataCoordinator.__deallocating_deinit()
{
  uint64_t v0;

  SessionEventsAndDataCoordinator.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t sub_1002F74F0(void *a1)
{
  unint64_t v2;
  id v3;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;
  uint64_t v9;
  Swift::String v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  char v16;
  BOOL v18;
  char v19;
  BOOL v20;
  BOOL v21;
  char v22;
  BOOL v23;
  BOOL v24;
  _QWORD v25[2];
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v2 = 0xD000000000000018;
  v3 = objc_msgSend(a1, "activityType");
  countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  if (countAndFlagsBits == 0xD000000000000022 && v6 == 0x80000001009FA4B0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000022, 0x80000001009FA4B0, countAndFlagsBits) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0xD000000000000015;
  }
  if (countAndFlagsBits == 0xD00000000000001ELL && v6 == 0x80000001009F9190
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ELL, 0x80000001009F9190, countAndFlagsBits) & 1) != 0)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return v2;
  }
  v8 = countAndFlagsBits == 0x4972656874616557 && v6 == 0xED0000746E65746ELL;
  if (v8
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x4972656874616557, 0xED0000746E65746ELL, countAndFlagsBits) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (sub_1000274EC(a1))
    {
      v25[0] = static WidgetCenter.UserInfoKey.kind.getter();
      v25[1] = v9;
      AnyHashable.init<A>(_:)(v25);
      sub_1007D4C44();
      sub_10011F394((uint64_t)&v26);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v28 + 1))
      {
        if ((swift_dynamicCast(&v26, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
          return v2;
        v10 = String.lowercased()();
        countAndFlagsBits = v10._countAndFlagsBits;
        swift_bridgeObjectRelease();
        if (v10._countAndFlagsBits == 0xD000000000000011 && v10._object == (void *)0x80000001009F0D20
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v10._countAndFlagsBits, v10._object, 0xD000000000000011) & 1) != 0)
        {
          goto LABEL_8;
        }
        return countAndFlagsBits;
      }
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_100021A14((uint64_t)&v27, &qword_100C0B800);
    return v2;
  }
  v11 = 0xD000000000000029;
  if (countAndFlagsBits == 0xD000000000000029 && v6 == 0x80000001009FA4E0)
    return v11;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000029, 0x80000001009FA4E0, countAndFlagsBits) & 1) != 0)
    return countAndFlagsBits;
  v12 = 0xD000000000000028;
  if (countAndFlagsBits == 0xD000000000000028 && v6 == 0x80000001009FA510)
    return v12;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000028, 0x80000001009FA510, countAndFlagsBits);
  v15 = countAndFlagsBits == 0xD000000000000029 && v6 == 0x80000001009FA540;
  if ((v13 & 1) != 0
    || v15
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000029, 0x80000001009FA540, countAndFlagsBits) & 1) != 0)
  {
    return countAndFlagsBits;
  }
  v12 = 0xD000000000000027;
  if (countAndFlagsBits == 0xD000000000000027 && v6 == 0x80000001009FA570)
    return v12;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000027, 0x80000001009FA570, countAndFlagsBits) & 1) != 0)
    return countAndFlagsBits;
  v11 = 0xD000000000000023;
  if (countAndFlagsBits == 0xD000000000000023 && v6 == 0x80000001009FA5A0)
    return v11;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x80000001009FA5A0, countAndFlagsBits) & 1) != 0)
    return countAndFlagsBits;
  v12 = 0xD00000000000002ALL;
  if (countAndFlagsBits == 0xD00000000000002ALL && v6 == 0x80000001009FA5D0)
    return v12;
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000002ALL, 0x80000001009FA5D0, countAndFlagsBits);
  v18 = countAndFlagsBits == 0xD000000000000022 && v6 == 0x80000001009FA600;
  if ((v16 & 1) != 0
    || v18
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000022, 0x80000001009FA600, countAndFlagsBits) & 1) != 0)
  {
    return countAndFlagsBits;
  }
  if (countAndFlagsBits == 0xD000000000000026 && v6 == 0x80000001009FA630)
    return 0xD000000000000026;
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000026, 0x80000001009FA630, countAndFlagsBits);
  v20 = countAndFlagsBits == 0xD000000000000023 && v6 == 0x80000001009FA660;
  v21 = v20;
  if ((v19 & 1) != 0 || v21)
    return countAndFlagsBits;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x80000001009FA660, countAndFlagsBits);
  v23 = countAndFlagsBits == 0xD000000000000026 && v6 == 0x80000001009FA690;
  v24 = v23;
  if ((v22 & 1) != 0 || v24)
    return countAndFlagsBits;
  v2 = countAndFlagsBits;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000026, 0x80000001009FA690, countAndFlagsBits) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v2;
}

uint64_t sub_1002F7A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v9 = sub_1000BA294(&qword_100BD6728);
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  __chkstk_darwin(v9);
  v45 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReferralData(0);
  v43 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v42 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - v14;
  swift_bridgeObjectRetain(a2);
  v16 = swift_bridgeObjectRetain(a4);
  v17 = ReferralData.init(referringApplication:referringUrl:)(a1, a2, a3, a4, v16);
  v44 = *(_QWORD *)(v4 + 32);
  v18 = SessionManager.tracker.getter(v17);
  v19 = sub_1000BA294(&qword_100BCDC68);
  v41 = v19;
  v20 = type metadata accessor for DataEventTrait(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = v23 + *(_QWORD *)(v21 + 72);
  v39 = v22 | 7;
  v40 = v24;
  v25 = swift_allocObject(v19, v24, v22 | 7);
  v38 = xmmword_10097CA50;
  *(_OWORD *)(v25 + 16) = xmmword_10097CA50;
  v26 = enum case for DataEventTrait.unique(_:);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104);
  v37(v25 + v23, enum case for DataEventTrait.unique(_:), v20);
  sub_10000F1C8(&qword_100BD6638, (uint64_t (*)(uint64_t))&type metadata accessor for ReferralData);
  v28 = v27;
  Tracker.push<A>(data:traits:file:line:)(v15, v25, 0xD000000000000065, 0x80000001009FA420, 407, v11, v27);
  swift_release(v18);
  v29 = swift_bridgeObjectRelease(v25);
  v30 = v42;
  v31 = v43;
  (*(void (**)(char *, char *, uint64_t, __n128))(v43 + 16))(v42, v15, v11, v29);
  v32 = v45;
  SessionData.init(key:data:)(0x6C61727265666572, 0xEC00000061746144, v30, v11, v28);
  v33 = swift_allocObject(v41, v40, v39);
  *(_OWORD *)(v33 + 16) = v38;
  v37(v33 + v23, v26, v20);
  SessionManager.push<A>(_:traits:file:line:)(v32, v33, 0xD000000000000065, 0x80000001009FA420, 409, v11, v28);
  v34 = swift_bridgeObjectRelease(v33);
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v32, v47, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v11);
}

double sub_1002F7D28()
{
  uint64_t v0;
  __n128 v1;
  double result;

  v1 = swift_retain();
  SessionManager.transaction(_:)(sub_1002F94C4, v0, v1);
  *(_QWORD *)&result = swift_release(v0).n128_u64[0];
  return result;
}

void SessionEventsAndDataCoordinator.identityService(_:didChangeUserIdentity:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  sub_1000986AC();
  v0 = type metadata accessor for Logger(0);
  v30 = *(_QWORD *)(v0 - 8);
  v31 = v0;
  __chkstk_darwin(v0);
  v29 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v29 - v4;
  v6 = type metadata accessor for UserIdentityChangeKind(0, v3);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - v10;
  v12 = sub_1000C6644();
  static UserIdentityChangeKind.userIdentity.getter(v12);
  sub_10000F1C8(&qword_100BD64B0, (uint64_t (*)(uint64_t))&type metadata accessor for UserIdentityChangeKind);
  v13 = sub_1000C5CF0();
  sub_1000B477C((uint64_t)v8);
  v14 = sub_1000B477C((uint64_t)v11);
  if ((v13 & 1) != 0)
  {
    v15 = static Logger.identity.getter(v14);
    v16 = (void *)Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (sub_1000C1990(v17))
    {
      *(_WORD *)sub_10009D340() = 0;
      sub_1000CDEAC((void *)&_mh_execute_header, v18, v19, "Received a user identity change ... pushing new identifier onto trackers");
      sub_1000BD378();
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
    sub_100047494();
  }
  v20 = sub_1000C6644();
  static UserIdentityChangeKind.privateUserIdentity.getter(v20);
  v21 = sub_1000C5CF0();
  sub_1000B477C((uint64_t)v8);
  v22 = sub_1000B477C((uint64_t)v11);
  if ((v21 & 1) != 0)
  {
    v23 = v29;
    v24 = static Logger.identity.getter(v22);
    v25 = (void *)Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter(v25);
    if (sub_1000C1990(v26))
    {
      *(_WORD *)sub_10009D340() = 0;
      sub_1000CDEAC((void *)&_mh_execute_header, v27, v28, "Received a private user identity change ... pushing new identifier onto trackers");
      sub_1000BD378();
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v31);
    sub_100028A54();
  }
  sub_100098640();
}

Swift::Void __swiftcall SessionEventsAndDataCoordinator.sceneWillResignActive()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000DB418(v0 + 31, v0[34]);
  sub_10000F1C8(&qword_100BD64B8, type metadata accessor for SessionEventsAndDataCoordinator);
  v1 = sub_1000E771C();
  dispatch thunk of AppConfigurationManagerType.removeObserver(_:)(v1);
  sub_1000DB418(v0 + 36, v0[39]);
  sub_10000F1C8(&qword_100BD64C0, type metadata accessor for SessionEventsAndDataCoordinator);
  v2 = sub_1000E771C();
  dispatch thunk of LocationManagerType.removeObserver(_:)(v2);
  sub_10004A2A0();
}

uint64_t sub_1002F8018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return SceneStateMonitor.sceneDidBecomeActive(with:sourceApplication:sceneID:)(a1, a2, a3, a4, a5, *v5);
}

void sub_1002F8024(Swift::String with)
{
  SceneStateMonitor.sceneWillResignActive(with:)(with);
}

void sub_1002F802C()
{
  SceneStateMonitor.sceneDidEnterBackground()();
}

void sub_1002F8034(Swift::String with)
{
  SceneStateMonitor.sceneDidEnterBackground(with:)(with);
}

void sub_1002F803C()
{
  SceneStateMonitor.sceneDidDisconnect()();
}

void SessionEventsAndDataCoordinator.patterns.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1000BA294(&qword_100BD64D8);
  v1 = type metadata accessor for URLHandlerPattern(0);
  *(_OWORD *)(swift_allocObject(v0, ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v1 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) | 7)+ 16) = xmmword_10097CA50;
  URLHandlerPattern.init(scheme:host:path:fragment:)(42, 0xE100000000000000, 0, 0, 0, 0, 0, 0);
  sub_10004A298();
}

void SessionEventsAndDataCoordinator.processURL(for:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t Parameter;
  void *v22;
  void *v23;
  Swift::String v24;
  void *object;
  __n128 v26;
  Swift::String v27;
  uint64_t countAndFlagsBits;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ParameterKey;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD v43[2];

  sub_1000986AC();
  v42 = v0;
  v3 = v2;
  ParameterKey = type metadata accessor for WeatherQueryParameterKey(0);
  v37 = *(_QWORD *)(ParameterKey - 8);
  __chkstk_darwin(ParameterKey);
  sub_100098728();
  v6 = v5 - v4;
  v40 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  sub_100098728();
  v36 = v8 - v7;
  v10 = type metadata accessor for URLHandlerMatch(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_100079FBC();
  v12 = sub_1000BA294(&qword_100BD64E0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100098728();
  v16 = v15 - v14;
  URLHandlerContext.clientContext.getter(v43);
  v17 = v43[1];
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 16);
  v41 = v3;
  v18(v16, v3, v12);
  if (v17)
  {
    sub_1000C4760();
  }
  else
  {
    v19 = URLHandlerContext.match.getter(v12);
    URLHandlerMatch.url.getter(v19);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v10);
    v20 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v6, enum case for WeatherQueryParameterKey.openedFrom(_:), ParameterKey);
    Parameter = WeatherQueryParameterKey.rawValue.getter(v20);
    v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v6, ParameterKey);
    v24._countAndFlagsBits = Parameter;
    v24._object = v23;
    object = URL.queryItem(for:)(v24).value._object;
    v26 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v38 + 8))(v36, v40, v26);
    sub_1000C4760();
    if (!object)
    {
      v29 = (void *)0xE700000000000000;
      countAndFlagsBits = 0x6E776F6E6B6E75;
      goto LABEL_5;
    }
  }
  sub_1000C0108();
  v27 = String.lowercased()();
  countAndFlagsBits = v27._countAndFlagsBits;
  v29 = v27._object;
  sub_1000986C4();
LABEL_5:
  v30 = v42;
  v31 = sub_1002F8388(v41, v42);
  v33 = v32;
  v43[0] = *(_QWORD *)(v42 + 328);
  __chkstk_darwin(v31);
  *(&v35 - 4) = v30;
  *(&v35 - 3) = countAndFlagsBits;
  *(&v35 - 2) = (uint64_t)v29;
  v34 = sub_1000CD6E8();
  sub_100094EE4();
  Lock.sync<A>(_:)(&type metadata for (), sub_1002F94CC, &v35 - 6, v34, &type metadata for () + 1, &protocol witness table for UnfairLock);
  swift_release(v43[0]);
  sub_1002F7A50(countAndFlagsBits, (uint64_t)v29, v31, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10006ADEC();
  sub_100098640();
}

uint64_t sub_1002F8388(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  os_log_type_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  char *v86;
  _QWORD v88[2];
  uint64_t (*v89)(char *, uint64_t);
  void (*v90)(char *, uint64_t);
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107[2];

  v97 = a2;
  v105 = a1;
  v2 = sub_1000BA294(&qword_100BD64E0);
  v104 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v96 = (char *)v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v98 = (char *)v88 - v5;
  v6 = type metadata accessor for Logger(0);
  v100 = *(_QWORD *)(v6 - 8);
  v101 = v6;
  __chkstk_darwin(v6);
  v95 = (char *)v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v103 = (char *)v88 - v9;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URLHandlerMatch(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BD66D8);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for URLComponents(0, v20);
  v99 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v2;
  v26 = URLHandlerContext.match.getter(v2);
  URLHandlerMatch.url.getter(v26);
  v27 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v91 = v18;
  v93 = v15;
  v89 = v27;
  v28 = v27(v18, v15);
  v29 = URL.absoluteString.getter(v28);
  v31 = v30;
  v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v92 = v14;
  v94 = v10;
  v32(v14, v10);
  URLComponents.init(string:)(v29, v31);
  swift_bridgeObjectRelease();
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23);
  v90 = v32;
  if (v33 == 1)
  {
    sub_100021A14((uint64_t)v22, &qword_100BD66D8);
    static Logger.privacy.getter(v34);
    v35 = v104;
    v36 = v98;
    v37 = v102;
    v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v104 + 16))(v98, v105, v102);
    v39 = Logger.logObject.getter(v38);
    v41 = static os_log_type_t.error.getter(v39, v40);
    if (os_log_type_enabled(v39, v41))
    {
      v42 = swift_slowAlloc(22, -1);
      v43 = swift_slowAlloc(32, -1);
      v105 = (char *)v43;
      *(_DWORD *)v42 = 141558275;
      v106 = 1752392040;
      v107[0] = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107);
      *(_WORD *)(v42 + 12) = 2081;
      v44 = v91;
      v45 = URLHandlerContext.match.getter(v37);
      v46 = v36;
      v47 = v92;
      URLHandlerMatch.url.getter(v45);
      v48 = v89(v44, v93);
      v49 = URL.absoluteString.getter(v48);
      v51 = v50;
      v90(v47, v94);
      v106 = sub_1000CE1C8(v49, v51, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107);
      v52 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v46, v37, v52);
      _os_log_impl((void *)&_mh_execute_header, v39, v41, "Failed to obtain url components from url. url=%{private,mask.hash}s", (uint8_t *)v42, 0x16u);
      v53 = v105;
      swift_arrayDestroy(v105, 1);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v42, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    }

    (*(void (**)(char *, uint64_t))(v100 + 8))(v103, v101);
    return 0;
  }
  v54 = v104;
  v55 = v105;
  v56 = v95;
  v57 = v96;
  v58 = v102;
  v59 = v99;
  v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v99 + 32))(v25, v22, v23);
  v61 = URLComponents.queryItems.getter(v60);
  v62 = sub_1002F8A60(v61);
  v63 = swift_bridgeObjectRelease();
  v64 = URLComponents.queryItems.setter(v62, v63);
  v65 = URLComponents.string.getter(v64);
  if (!v66)
  {
    v103 = (char *)v23;
    static Logger.privacy.getter(v65);
    v68 = v57;
    v69 = v57;
    v70 = v58;
    v71 = (*(uint64_t (**)(char *, char *, uint64_t))(v54 + 16))(v69, v55, v58);
    v72 = Logger.logObject.getter(v71);
    v74 = static os_log_type_t.error.getter(v72, v73);
    v75 = v74;
    if (os_log_type_enabled(v72, v74))
    {
      v76 = swift_slowAlloc(22, -1);
      v77 = swift_slowAlloc(32, -1);
      v98 = (char *)v77;
      *(_DWORD *)v76 = 141558275;
      v106 = 1752392040;
      v107[0] = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107);
      *(_WORD *)(v76 + 12) = 2081;
      v88[1] = v76 + 14;
      v105 = v25;
      v78 = v91;
      LODWORD(v97) = v75;
      v79 = URLHandlerContext.match.getter(v70);
      v80 = v92;
      URLHandlerMatch.url.getter(v79);
      v81 = v89(v78, v93);
      v82 = URL.absoluteString.getter(v81);
      v84 = v83;
      v90(v80, v94);
      v106 = sub_1000CE1C8(v82, v84, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107);
      v25 = v105;
      v85 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v68, v70, v85);
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v97, "Failed to obtain string from url components. url=%{private,mask.hash}s", (uint8_t *)v76, 0x16u);
      v86 = v98;
      swift_arrayDestroy(v98, 1);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v76, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v68, v70);
    }

    (*(void (**)(char *, uint64_t))(v100 + 8))(v56, v101);
    (*(void (**)(char *, char *))(v99 + 8))(v25, v103);
    return 0;
  }
  v67 = v65;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v25, v23);
  return v67;
}

