_QWORD *sub_1002F8A60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ParameterKey;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  __n128 v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t Parameter;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(unint64_t, char *, uint64_t);
  char *v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  _QWORD *v58;
  char v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD v69[2];
  char *v70;
  char *v71;
  __n128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;

  v79 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v4 = (char *)v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD66E0);
  __chkstk_darwin(v5);
  v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterKey = type metadata accessor for WeatherQueryParameterKey(0);
  v85 = *(_QWORD *)(ParameterKey - 8);
  v9 = __chkstk_darwin(ParameterKey);
  v11 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URLQueryItem(0, v9);
  v88 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v84 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v80 = (char *)v69 - v15;
  __chkstk_darwin(v16);
  v78 = (char *)v69 - v17;
  __chkstk_darwin(v18);
  v77 = (char *)v69 - v19;
  __chkstk_darwin(v20);
  v74 = (char *)v69 - v21;
  if (a1)
  {
    v22 = *(_QWORD *)(a1 + 16);
    if (v22)
    {
      v82 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
      v83 = v11;
      v23 = a1 + v82;
      v24 = *(_QWORD *)(v88 + 72);
      v25 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
      v69[1] = a1;
      v26 = swift_bridgeObjectRetain(a1);
      v89 = _swiftEmptyArrayStorage;
      v26.n128_u64[0] = 136315138;
      v72 = v26;
      v71 = (char *)&type metadata for Any + 8;
      v86 = v12;
      v87 = v25;
      v27 = v74;
      v73 = v2;
      v75 = ParameterKey;
      v76 = v7;
      v81 = v24;
      v70 = v4;
      do
      {
        v28 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v27, v23, v12);
        v29 = v12;
        v30 = URLQueryItem.name.getter(v28);
        WeatherQueryParameterKey.init(rawValue:)(v30);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, ParameterKey) == 1)
        {
          sub_100021A14((uint64_t)v7, &qword_100BD66E0);
          static Logger.privacy.getter();
          v31 = v80;
          v32 = ((uint64_t (*)(char *, char *, uint64_t))v25)(v80, v27, v12);
          v33 = v4;
          v34 = Logger.logObject.getter(v32);
          v36 = static os_log_type_t.error.getter(v34, v35);
          if (os_log_type_enabled(v34, v36))
          {
            v37 = swift_slowAlloc(12, -1);
            v38 = swift_slowAlloc(32, -1);
            v90 = v38;
            *(_DWORD *)v37 = v72.n128_u32[0];
            v39 = URLQueryItem.name.getter(v38);
            *(_QWORD *)(v37 + 4) = sub_1000CE1C8(v39, v40, &v90);
            v41 = swift_bridgeObjectRelease();
            v42 = *(void (**)(char *, uint64_t, __n128))(v88 + 8);
            v42(v31, v29, v41);
            _os_log_impl((void *)&_mh_execute_header, v34, v36, "Encountered an unrecognized url query item key. key=%s", (uint8_t *)v37, 0xCu);
            swift_arrayDestroy(v38, 1);
            v43 = v38;
            v27 = v74;
            swift_slowDealloc(v43, -1, -1);
            v44 = v37;
            v2 = v73;
            swift_slowDealloc(v44, -1, -1);

            v4 = v70;
            (*(void (**)(char *, uint64_t))(v2 + 8))(v70, v79);
          }
          else
          {
            v42 = *(void (**)(char *, uint64_t, __n128))(v88 + 8);
            ((void (*)(char *, uint64_t))v42)(v31, v29);

            (*(void (**)(char *, uint64_t))(v2 + 8))(v33, v79);
            v4 = v33;
          }
          v87(v84, v27, v29);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v89);
          ParameterKey = v75;
          v49 = v81;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1005FF19C();
            v89 = v62;
          }
          v57 = v89[2];
          if (v57 >= v89[3] >> 1)
          {
            sub_1005FF19C();
            v89 = v63;
          }
          v58 = v89;
          v89[2] = v57 + 1;
          v12 = v86;
          (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))((unint64_t)v58 + v82 + v57 * v49, v84, v86);
          v7 = v76;
        }
        else
        {
          v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 32))(v83, v7, ParameterKey);
          Parameter = WeatherQueryParameterKey.shouldRedact.getter(v45);
          if ((Parameter & 1) != 0)
          {
            v47 = WeatherQueryParameterKey.rawValue.getter(Parameter);
            URLQueryItem.init(name:value:)(v47);
            swift_bridgeObjectRelease();
            v48 = swift_isUniquelyReferenced_nonNull_native(v89);
            v49 = v81;
            if ((v48 & 1) == 0)
            {
              sub_1005FF19C();
              v89 = v64;
            }
            v50 = v89[2];
            if (v50 >= v89[3] >> 1)
            {
              sub_1005FF19C();
              v89 = v65;
            }
            v51 = v89;
            v89[2] = v50 + 1;
            v52 = (unint64_t)v51 + v82 + v50 * v49;
            v53 = v88;
            v54 = *(void (**)(unint64_t, char *, uint64_t))(v88 + 32);
            v55 = v77;
          }
          else
          {
            v25(v78, v27, v86);
            v59 = swift_isUniquelyReferenced_nonNull_native(v89);
            v49 = v81;
            if ((v59 & 1) == 0)
            {
              sub_1005FF19C();
              v89 = v66;
            }
            v60 = v89[2];
            if (v60 >= v89[3] >> 1)
            {
              sub_1005FF19C();
              v89 = v67;
            }
            v61 = v89;
            v89[2] = v60 + 1;
            v52 = (unint64_t)v61 + v82 + v60 * v49;
            v53 = v88;
            v54 = *(void (**)(unint64_t, char *, uint64_t))(v88 + 32);
            v55 = v78;
          }
          v12 = v86;
          v54(v52, v55, v86);
          (*(void (**)(char *, uint64_t))(v85 + 8))(v83, ParameterKey);
          v42 = *(void (**)(char *, uint64_t, __n128))(v53 + 8);
        }
        ((void (*)(char *, uint64_t))v42)(v27, v12);
        v23 += v49;
        --v22;
        v25 = v87;
      }
      while (v22);
      swift_bridgeObjectRelease();
      return v89;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
    }
  }
  return (_QWORD *)a1;
}

void sub_1002F90A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE v13[24];

  v6 = sub_100098BC4();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  *(_BYTE *)(a1 + 336) = 1;
  v11 = swift_bridgeObjectRetain(a3);
  StartMethod.init(referringApplication:)(a2, a3, v11);
  v12 = a1 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod;
  sub_10009922C(a1 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod, (uint64_t)v13, 33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v12, v10, v6);
  swift_endAccess(v13);
  sub_10004A2A0();
}

void sub_1002F915C()
{
  SessionEventsAndDataCoordinator.patterns.getter();
}

void sub_1002F9170()
{
  SessionEventsAndDataCoordinator.processURL(for:)();
}

uint64_t sub_1002F9190(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  sub_10009922C(a1 + 16, (uint64_t)v4, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_10006ADEC();
    return swift_release(v3);
  }
  return result;
}

uint64_t sub_1002F91E0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return LocationManagerObserver.currentCLLocationDidUpdate(_:location:)(a1, a2, *v2);
}

uint64_t sub_1002F91E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return LocationManagerObserver.currentLocationDidUpdate(_:location:)(a1, a2, *v4, a4);
}

uint64_t sub_1002F91F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return LocationManagerObserver.currentLocationUpdateDidFail(_:error:)(a1, a2, *v2);
}

uint64_t sub_1002F91F8(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "sourceApplication");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

void sub_1002F9264()
{
  uint64_t *v0;

  sub_1002F90A8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002F9280()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F92A4()
{
  uint64_t v0;

  return sub_1002F9190(v0);
}

void sub_1002F92BC(uint64_t a1)
{
  uint64_t v2;

  sub_10000F1C8(&qword_100BD64F0, type metadata accessor for SessionEventsAndDataCoordinator);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1002F92F8()
{
  return type metadata accessor for SessionEventsAndDataCoordinator(0);
}

uint64_t storeEnumTagSinglePayload for SessionEventsAndDataCoordinator.SessionPurpose(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002F934C + 4 * byte_100993FD9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002F9380 + 4 * byte_100993FD4[v4]))();
}

uint64_t sub_1002F9380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F9388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002F9390);
  return result;
}

uint64_t sub_1002F939C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002F93A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002F93A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F93B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionEventsAndDataCoordinator.SessionPurpose()
{
  return &type metadata for SessionEventsAndDataCoordinator.SessionPurpose;
}

unint64_t sub_1002F93D0()
{
  unint64_t result;

  result = qword_100BD6628;
  if (!qword_100BD6628)
  {
    result = swift_getWitnessTable(&unk_1009942C0, &type metadata for SessionEventsAndDataCoordinator.SessionPurpose);
    atomic_store(result, (unint64_t *)&qword_100BD6628);
  }
  return result;
}

uint64_t sub_1002F940C()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002F9438()
{
  return sub_1002F7390();
}

uint64_t sub_1002F9444(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1002F94C4(uint64_t a1)
{
  return sub_100034DAC(a1);
}

void sub_1002F94D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_1002FE3D0(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD))sub_10008D47C);
}

uint64_t sub_1002F94DC(uint64_t a1, uint64_t a2)
{
  return sub_1002FE4D8(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1000B15F8);
}

void sub_1002F94E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_1002FE56C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD))sub_10008D47C);
}

void sub_1002F94F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_1002FE63C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_10008D47C, (void (*)(uint64_t, uint64_t))sub_1000B15F8);
}

void sub_1002F950C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_1002FE818(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1000B15F8);
}

uint64_t sub_1002F9518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F9524);
}

uint64_t sub_1002F9528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F9534);
}

uint64_t sub_1002F9538(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0890, 1);
}

void sub_1002F9548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];

  v1 = v0;
  v34 = type metadata accessor for AutomationInfo(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = (_QWORD *)(v4 - v3);
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = sub_1000BA294(&qword_100BD67C0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = sub_1000BA294(&qword_100BD67C8);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100098728();
  v19 = v18 - v17;
  sub_1000BA294(&qword_100BD67D0);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  *(_QWORD *)v14 = static VerticalAlignment.center.getter(v24);
  *(_QWORD *)(v14 + 8) = 0;
  *(_BYTE *)(v14 + 16) = 1;
  v25 = sub_1000BA294(&qword_100BD67D8);
  sub_1002F97A4(v1, v14 + *(int *)(v25 + 44));
  static AccessibilityChildBehavior.combine.getter();
  sub_10003D2DC(&qword_100BD67E0, &qword_100BD67C0);
  v27 = v26;
  View.accessibilityElement(children:)(v9, v10, v26);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v9, v33);
  sub_100021A14(v14, &qword_100BD67C0);
  v35[0] = v10;
  v35[1] = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v35, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityRespondsToUserInteraction(_:)(1, v15, OpaqueTypeConformance2);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
  v29 = *(_QWORD *)(v31 + 48);
  *v5 = *(_QWORD *)(v31 + 40);
  v5[1] = v29;
  v30 = type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload(v5, v30, 1);
  swift_storeEnumTagMultiPayload(v5, v34, 1);
  sub_100335228();
  swift_bridgeObjectRetain(v29);
  sub_1000215BC((uint64_t)v5, type metadata accessor for AutomationInfo);
  sub_100021A14(v23, &qword_100BD67D0);
}

void sub_1002F97A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1000BA294(&qword_100BD67E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BD67F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v16 - v11;
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v13);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v14 = sub_1000BA294(&qword_100BD67F8);
  sub_1002F9930(a1, (uint64_t *)&v6[*(int *)(v14 + 44)]);
  sub_100037768((uint64_t)v6, (uint64_t)v9, &qword_100BD67E8);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = 0x3FF0000000000000;
  sub_100021A14((uint64_t)v6, &qword_100BD67E8);
  sub_1000787D4((uint64_t)v9, (uint64_t)v12, &qword_100BD67F0);
  sub_100037768((uint64_t)v12, (uint64_t)v9, &qword_100BD67F0);
  sub_100037768((uint64_t)v9, a2, &qword_100BD67F0);
  v15 = a2 + *(int *)(sub_1000BA294(&qword_100BD6800) + 48);
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 0;
  sub_100021A14((uint64_t)v12, &qword_100BD67F0);
  sub_100021A14((uint64_t)v9, &qword_100BD67F0);
}

double sub_1002F9930@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];

  v2 = a1;
  v63 = a1;
  v61 = a2;
  v59 = type metadata accessor for Description(0);
  __chkstk_darwin(v59);
  v62 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v60 = (uint64_t)&v55 - v5;
  v6 = type metadata accessor for Font.Leading(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WeatherAlert.Prominence(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SevereAlertComponentViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v2 + *(int *)(v16 + 36), v12);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  LODWORD(v2) = enum case for WeatherAlert.Prominence.low(_:);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (v17 == (_DWORD)v2)
  {
    v22 = *(_QWORD *)(v63 + 48);
    v64[0] = *(_QWORD *)(v63 + 40);
    v64[1] = v22;
    v23 = sub_100114EF8();
    swift_bridgeObjectRetain(v22);
    v24 = Text.init<A>(_:)(v64, &type metadata for String, v23);
    v26 = v25;
    v28 = v27;
    v30 = v29 & 1;
    v31 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Font.TextStyle.title3(_:), v8);
    static Font.Weight.bold.getter(v31);
    v32 = static Font.system(_:weight:)(v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v34 = v56;
    v33 = v57;
    v35 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for Font.Leading.tight(_:), v58);
    v36 = Font.leading(_:)(v34, v32);
    v37 = swift_release(v32);
    (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v34, v35, v37);
    v38 = v24;
    v39 = v26;
    v18 = Text.font(_:)(v36, v24, v26, v30, v28);
    v19 = v40;
    LOBYTE(v32) = v41;
    v21 = v42;
    swift_release(v36);
    v20 = v32 & 1;
    sub_1000D31B4(v38, v39, v30);
    swift_bridgeObjectRelease();
  }
  v43 = type metadata accessor for SevereAlertComponentView(0);
  v44 = v63;
  v45 = v63 + *(int *)(v43 + 20);
  v46 = *(_QWORD *)v45;
  v47 = *(_BYTE *)(v45 + 8);
  sub_10008D47C(*(_QWORD *)v45, v47);
  sub_1007A5B80();
  v49 = v48;
  sub_1000B15F8(v46, v47);
  v50 = v60;
  sub_100080C0C(v44, v60, type metadata accessor for SevereAlertComponentViewModel);
  *(_BYTE *)(v50 + *(int *)(v59 + 20)) = (v49 & 7) == 0;
  v51 = v62;
  sub_100080C0C(v50, v62, type metadata accessor for Description);
  v52 = v61;
  *v61 = v18;
  v52[1] = v19;
  v52[2] = v20;
  v52[3] = v21;
  v53 = sub_1000BA294(&qword_100BD6808);
  sub_100080C0C(v51, (uint64_t)v52 + *(int *)(v53 + 48), type metadata accessor for Description);
  sub_10010F980(v18, v19, v20, v21);
  sub_1000215BC(v50, type metadata accessor for Description);
  sub_1000215BC(v51, type metadata accessor for Description);
  return sub_10010F9B0(v18, v19, v20, v21);
}

uint64_t type metadata accessor for Description(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD6868, (uint64_t)&nominal type descriptor for Description);
}

void sub_1002F9D18(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = a1;
  v48 = type metadata accessor for ProminentPadDescription(0);
  __chkstk_darwin(v48);
  v45 = (uint64_t)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1000BA294(&qword_100BD68B8);
  __chkstk_darwin(v50);
  v52 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1000BA294(&qword_100BD68C0);
  __chkstk_darwin(v46);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1000BA294(&qword_100BD68C8);
  __chkstk_darwin(v51);
  v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StandardDescription(0);
  __chkstk_darwin(v49);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - v10;
  v12 = sub_1000BA294(&qword_100BD68D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + *(int *)(type metadata accessor for SevereAlertComponentViewModel(0) + 36);
  v16 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for Description(0) + 20));
  v17 = *(int *)(v12 + 48);
  v18 = type metadata accessor for WeatherAlert.Prominence(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v14, v15, v18);
  v14[v17] = v16;
  if (v16 == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
LABEL_6:
    sub_100080C0C(v1, (uint64_t)v8, type metadata accessor for SevereAlertComponentViewModel);
    v31 = v49;
    v32 = &v8[*(int *)(v49 + 20)];
    *(_QWORD *)v32 = swift_getKeyPath(&unk_1009943F0);
    v32[8] = 0;
    v22 = type metadata accessor for StandardDescription;
    sub_10007802C((uint64_t)v8, (uint64_t)v11, type metadata accessor for StandardDescription);
    sub_100080C0C((uint64_t)v11, (uint64_t)v5, type metadata accessor for StandardDescription);
    swift_storeEnumTagMultiPayload(v5, v46, 0);
    sub_10000F1C8(&qword_100BD68E0, type metadata accessor for StandardDescription);
    v34 = v33;
    sub_10000F1C8(&qword_100BD68E8, type metadata accessor for ProminentPadDescription);
    v35 = (uint64_t)v47;
    _ConditionalContent<>.init(storage:)(v5, v31, v48, v34, v36);
    v37 = v52;
    sub_100037768(v35, v52, &qword_100BD68C8);
    swift_storeEnumTagMultiPayload(v37, v50, 0);
    v38 = sub_1002FDC04();
    _ConditionalContent<>.init(storage:)(v37, v51, v31, v38, v34);
    sub_100021A14(v35, &qword_100BD68C8);
    v30 = (uint64_t)v11;
    goto LABEL_7;
  }
  v20 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v14, v18);
  if (v20 != enum case for WeatherAlert.Prominence.high(_:))
  {
    if (v20 != enum case for WeatherAlert.Prominence.low(_:))
    {
      sub_100080C0C(v1, (uint64_t)v8, type metadata accessor for SevereAlertComponentViewModel);
      v39 = v49;
      v40 = &v8[*(int *)(v49 + 20)];
      *(_QWORD *)v40 = swift_getKeyPath(&unk_1009943F0);
      v40[8] = 0;
      sub_10007802C((uint64_t)v8, (uint64_t)v11, type metadata accessor for StandardDescription);
      v41 = v52;
      sub_100080C0C((uint64_t)v11, v52, type metadata accessor for StandardDescription);
      swift_storeEnumTagMultiPayload(v41, v50, 1);
      v42 = sub_1002FDC04();
      sub_10000F1C8(&qword_100BD68E0, type metadata accessor for StandardDescription);
      _ConditionalContent<>.init(storage:)(v41, v51, v39, v42, v43);
      sub_1000215BC((uint64_t)v11, type metadata accessor for StandardDescription);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
      return;
    }
    goto LABEL_6;
  }
  v21 = v45;
  sub_100080C0C(v1, v45, type metadata accessor for SevereAlertComponentViewModel);
  v22 = type metadata accessor for ProminentPadDescription;
  sub_100080C0C(v21, (uint64_t)v5, type metadata accessor for ProminentPadDescription);
  swift_storeEnumTagMultiPayload(v5, v46, 1);
  sub_10000F1C8(&qword_100BD68E0, type metadata accessor for StandardDescription);
  v24 = v23;
  sub_10000F1C8(&qword_100BD68E8, type metadata accessor for ProminentPadDescription);
  v25 = (uint64_t)v47;
  v26 = v49;
  _ConditionalContent<>.init(storage:)(v5, v49, v48, v24, v27);
  v28 = v52;
  sub_100037768(v25, v52, &qword_100BD68C8);
  swift_storeEnumTagMultiPayload(v28, v50, 0);
  v29 = sub_1002FDC04();
  _ConditionalContent<>.init(storage:)(v28, v51, v26, v29, v24);
  sub_100021A14(v25, &qword_100BD68C8);
  v30 = v21;
LABEL_7:
  sub_1000215BC(v30, v22);
}

void sub_1002FA270(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a2;
  v43 = type metadata accessor for ProminentPadSingleDescription(0);
  __chkstk_darwin(v43);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD6AA8);
  __chkstk_darwin(v5);
  v46 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - v8;
  v10 = sub_1000BA294(&qword_100BD6AB0);
  __chkstk_darwin(v10);
  v45 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v44 = (uint64_t)&v42 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v42 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v42 - v24;
  v26 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  if (v26 >= 4)
  {
    sub_100080C0C(a1, (uint64_t)&v42 - v24, type metadata accessor for SevereAlertComponentViewModel);
    v27 = type metadata accessor for ProminentPadBulletedDescription(0);
    *(_QWORD *)&v25[*(int *)(v27 + 20)] = 4;
    *(_QWORD *)&v25[*(int *)(v27 + 24)] = 0x4018000000000000;
    v28 = (uint64_t)v25;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
LABEL_4:
    sub_100080C0C(a1, (uint64_t)v22, type metadata accessor for SevereAlertComponentViewModel);
    type metadata accessor for ProminentPadBulletedDescription(0);
    *(_QWORD *)&v22[*(int *)(v27 + 20)] = 3;
    *(_QWORD *)&v22[*(int *)(v27 + 24)] = 0x4018000000000000;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v27);
    goto LABEL_5;
  }
  v27 = type metadata accessor for ProminentPadBulletedDescription(0);
  v28 = (uint64_t)v25;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 1, 1, v27);
  if (v26 == 3)
    goto LABEL_4;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 1, 1, v27);
  if (v26 < 2)
  {
    v29 = (uint64_t)v19;
    v30 = 1;
    goto LABEL_6;
  }
LABEL_5:
  sub_100080C0C(a1, (uint64_t)v19, type metadata accessor for SevereAlertComponentViewModel);
  type metadata accessor for ProminentPadBulletedDescription(0);
  *(_QWORD *)&v19[*(int *)(v27 + 20)] = 2;
  *(_QWORD *)&v19[*(int *)(v27 + 24)] = 0x4018000000000000;
  v29 = (uint64_t)v19;
  v30 = 0;
LABEL_6:
  v31 = _s7Weather24LocationCompositionStateOwst_0(v29, v30, 1, v27);
  v32 = (uint64_t)v19;
  *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v31);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v33 = (uint64_t)&v9[*(int *)(sub_1000BA294(&qword_100BD6AB8) + 44)];
  sub_100080C0C(a1, (uint64_t)v4, type metadata accessor for SevereAlertComponentViewModel);
  v34 = &v4[*(int *)(v43 + 20)];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_1009943F0);
  v34[8] = 0;
  sub_10007802C((uint64_t)v4, v33, type metadata accessor for ProminentPadSingleDescription);
  v42 = v28;
  sub_100037768(v28, (uint64_t)v16, &qword_100BD6AB0);
  v35 = (uint64_t)v22;
  v36 = v44;
  sub_100037768((uint64_t)v22, v44, &qword_100BD6AB0);
  v37 = v45;
  sub_100037768(v32, v45, &qword_100BD6AB0);
  v38 = v46;
  sub_100037768((uint64_t)v9, v46, &qword_100BD6AA8);
  v39 = v32;
  v40 = v47;
  sub_100037768((uint64_t)v16, v47, &qword_100BD6AB0);
  v41 = (int *)sub_1000BA294(&qword_100BD6AC0);
  sub_100037768(v36, v40 + v41[12], &qword_100BD6AB0);
  sub_100037768(v37, v40 + v41[16], &qword_100BD6AB0);
  sub_100037768(v38, v40 + v41[20], &qword_100BD6AA8);
  sub_100021A14((uint64_t)v9, &qword_100BD6AA8);
  sub_100021A14(v39, &qword_100BD6AB0);
  sub_100021A14(v35, &qword_100BD6AB0);
  sub_100021A14(v42, &qword_100BD6AB0);
  sub_100021A14(v38, &qword_100BD6AA8);
  sub_100021A14(v37, &qword_100BD6AB0);
  sub_100021A14(v36, &qword_100BD6AB0);
  sub_100021A14((uint64_t)v16, &qword_100BD6AB0);
}

void sub_1002FA708(_BYTE *a1@<X8>)
{
  sub_1002FC0D0(&qword_100BD6AA0, (void (*)(uint64_t))sub_1002FA270, a1);
}

uint64_t sub_1002FA72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_1000BA294(&qword_100BD6C18);
  return sub_1002FA774(v2, (char *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_1002FA774@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  __n128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v108 = a2;
  v3 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v3);
  v107 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BlendMode(0);
  v105 = *(_QWORD *)(v5 - 8);
  v106 = v5;
  __chkstk_darwin(v5);
  v104 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.Leading(0);
  v97 = *(_QWORD *)(v7 - 8);
  v98 = v7;
  __chkstk_darwin(v7);
  v96 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v9);
  v94 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for Font.TextStyle(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1000BA294(&qword_100BC3B90);
  __chkstk_darwin(v99);
  v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v103 = (uint64_t)&v90 - v15;
  v16 = type metadata accessor for ProminentPadBulletedDescription(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100BD6C20);
  v101 = *(_QWORD *)(v20 - 8);
  v102 = v20;
  __chkstk_darwin(v20);
  v100 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v95 = (char *)&v90 - v23;
  v24 = *(_QWORD *)(a1 + 32);
  v25 = *(int *)(v16 + 20);
  v109 = sub_100280BA8(*(_QWORD *)(a1 + v25), v24);
  v110 = v26;
  v111 = v27;
  v112 = v28;
  KeyPath = swift_getKeyPath(&unk_100994648);
  sub_100080C0C(a1, (uint64_t)v19, type metadata accessor for ProminentPadBulletedDescription);
  v30 = *(unsigned __int8 *)(v17 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = swift_allocObject(&unk_100B6CD10, v31 + v18, v30 | 7);
  sub_10007802C((uint64_t)v19, v32 + v31, type metadata accessor for ProminentPadBulletedDescription);
  swift_bridgeObjectRetain(v24);
  v33 = sub_1000BA294(&qword_100BD6C28);
  v34 = sub_1000BA294(&qword_100BD6C30);
  sub_10003D2DC(&qword_100BD6C38, &qword_100BD6C28);
  v36 = v35;
  sub_10003D2DC(&qword_100BD6C40, &qword_100BD6C30);
  ForEach<>.init(_:id:content:)(&v109, KeyPath, sub_1002FF078, v32, v33, v34, v36, &protocol witness table for String, v37);
  v109 = sub_10045C0D0(*(_QWORD *)(a1 + v25));
  v110 = v38;
  v39 = sub_100114EF8();
  v40 = Text.init<A>(_:)(&v109, &type metadata for String, v39);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  v47 = v92;
  v48 = v91;
  v49 = v93;
  (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v91, enum case for Font.TextStyle.footnote(_:), v93);
  v50 = type metadata accessor for Font.Design(0);
  v51 = v94;
  _s7Weather24LocationCompositionStateOwst_0(v94, 1, 1, v50);
  v52 = v51;
  v53 = static Font.system(_:design:weight:)(v48, v51, 0, 1);
  sub_100021A14(v52, &qword_100BC3B98);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  v55 = v96;
  v54 = v97;
  v56 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, enum case for Font.Leading.tight(_:), v98);
  v57 = Font.leading(_:)(v55, v53);
  v58 = swift_release(v53);
  (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v55, v56, v58);
  v59 = Text.font(_:)(v57, v40, v42, v46, v44);
  v61 = v60;
  LOBYTE(v54) = v62;
  v64 = v63;
  swift_release(v57);
  sub_1000D31B4(v40, v42, v46);
  swift_bridgeObjectRelease();
  LODWORD(v109) = static HierarchicalShapeStyle.tertiary.getter(v65);
  v66 = Text.foregroundStyle<A>(_:)(&v109, v59, v61, v54 & 1, v64, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v68 = v67;
  v70 = v69;
  LOBYTE(v46) = v71 & 1;
  sub_1000D31B4(v59, v61, v54 & 1);
  v72 = swift_bridgeObjectRelease();
  v74 = v104;
  v73 = v105;
  v75 = v106;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v105 + 104))(v104, enum case for BlendMode.plusLighter(_:), v106, v72);
  v76 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v77 = v73;
  v78 = (uint64_t)v107;
  v76(v107, v74, v75);
  sub_100080C0C(v78, (uint64_t)&v13[*(int *)(v99 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v13 = v66;
  *((_QWORD *)v13 + 1) = v68;
  v13[16] = v46;
  *((_QWORD *)v13 + 3) = v70;
  sub_1000D55D4(v66, v68, v46);
  swift_bridgeObjectRetain(v70);
  sub_1000215BC(v78, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v75);
  sub_1000D31B4(v66, v68, v46);
  swift_bridgeObjectRelease();
  v79 = v103;
  sub_1000787D4((uint64_t)v13, v103, &qword_100BC3B90);
  v80 = v100;
  v81 = v101;
  v82 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  v83 = v95;
  v84 = v102;
  v82(v100, v95, v102);
  sub_100037768(v79, (uint64_t)v13, &qword_100BC3B90);
  v85 = v108;
  v82(v108, v80, v84);
  v86 = sub_1000BA294(&qword_100BD6C48);
  v87 = &v85[*(int *)(v86 + 48)];
  *(_QWORD *)v87 = 0x4014000000000000;
  v87[8] = 0;
  sub_100037768((uint64_t)v13, (uint64_t)&v85[*(int *)(v86 + 64)], &qword_100BC3B90);
  sub_100021A14(v79, &qword_100BC3B90);
  v88 = *(void (**)(char *, uint64_t))(v81 + 8);
  v88(v83, v84);
  sub_100021A14((uint64_t)v13, &qword_100BC3B90);
  return ((uint64_t (*)(char *, uint64_t))v88)(v80, v84);
}

uint64_t sub_1002FAE3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE __src[232];
  _BYTE v22[240];
  _QWORD v23[32];
  char v24;
  char v25;
  char v26;
  _QWORD v27[2];
  char v28;
  _BYTE v29[232];

  v5 = *a1;
  v6 = a1[1];
  v7 = type metadata accessor for ProminentPadBulletedDescription(0);
  v8 = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  static Alignment.center.getter(v7);
  _FrameLayout.init(width:height:alignment:)(0, 1, v8, 0);
  v10 = static VerticalAlignment.top.getter(v9);
  sub_1002FAFA4(v5, v6, (uint64_t)__src);
  v22[232] = 0;
  memcpy(&v22[7], __src, 0xE1uLL);
  v23[0] = v10;
  v23[1] = v8;
  LOBYTE(v23[2]) = 0;
  memcpy((char *)&v23[2] + 1, v22, 0xE8uLL);
  v26 = 1;
  v25 = v16;
  v24 = v18;
  memcpy((void *)(a3 + 64), v23, 0xF9uLL);
  v11 = v26;
  v12 = v25;
  v13 = v24;
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 16) = v15;
  *(_BYTE *)(a3 + 24) = v12;
  *(_QWORD *)(a3 + 32) = v17;
  *(_BYTE *)(a3 + 40) = v13;
  *(_QWORD *)(a3 + 48) = v19;
  *(_QWORD *)(a3 + 56) = v20;
  v27[0] = v10;
  v27[1] = v8;
  v28 = 0;
  memcpy(v29, v22, sizeof(v29));
  sub_1002FF0C4((uint64_t)v23);
  return sub_1002FF148((uint64_t)v27);
}

double sub_1002FAFA4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[128];
  _BYTE v44[136];
  _BYTE v45[145];
  _BYTE v46[7];
  char v47;
  _BYTE v48[7];
  char v49;
  _BYTE v50[7];
  char v51;
  _QWORD v52[2];
  char v53;
  _BYTE v54[128];

  v36 = a1;
  v5 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for Font.TextStyle.title3(_:), v8, v10);
  v13 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v13);
  v14 = static Font.system(_:design:weight:)(v12, v7, 0, 1);
  sub_100021A14((uint64_t)v7, &qword_100BC3B98);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v15 = Text.font(_:)(v14, 10649826, 0xA300000000000000, 0, _swiftEmptyArrayStorage);
  v17 = v16;
  LOBYTE(v12) = v18;
  v20 = v19;
  swift_release(v14);
  LOBYTE(v12) = v12 & 1;
  static Alignment.center.getter(v21);
  v22 = _FrameLayout.init(width:height:alignment:)(0x4034000000000000, 0, 0, 1);
  LOBYTE(v9) = v38;
  v34 = v39;
  v35 = v37;
  v23 = v40;
  v32 = v42;
  v33 = v41;
  v24 = static HorizontalAlignment.center.getter(v22);
  sub_1002FB290(v36, a2, (uint64_t)v43);
  v44[128] = 1;
  memcpy(&v44[7], v43, 0x79uLL);
  *(_QWORD *)v45 = v24;
  *(_QWORD *)&v45[8] = 0;
  v45[16] = 1;
  memcpy(&v45[17], v44, 0x80uLL);
  v51 = (char)v12;
  v49 = v9;
  v47 = v23;
  memcpy((void *)(a3 + 80), v45, 0x91uLL);
  v25 = v51;
  *(_DWORD *)(a3 + 17) = *(_DWORD *)v50;
  *(_DWORD *)(a3 + 20) = *(_DWORD *)&v50[3];
  v26 = v49;
  *(_DWORD *)(a3 + 41) = *(_DWORD *)v48;
  *(_DWORD *)(a3 + 44) = *(_DWORD *)&v48[3];
  v27 = v47;
  *(_DWORD *)(a3 + 57) = *(_DWORD *)v46;
  *(_DWORD *)(a3 + 60) = *(_DWORD *)&v46[3];
  *(_QWORD *)a3 = v15;
  *(_QWORD *)(a3 + 8) = v17;
  *(_BYTE *)(a3 + 16) = v25;
  v28 = v35;
  *(_QWORD *)(a3 + 24) = v20;
  *(_QWORD *)(a3 + 32) = v28;
  *(_BYTE *)(a3 + 40) = v26;
  *(_QWORD *)(a3 + 48) = v34;
  *(_BYTE *)(a3 + 56) = v27;
  v29 = v32;
  *(_QWORD *)(a3 + 64) = v33;
  *(_QWORD *)(a3 + 72) = v29;
  v52[0] = v24;
  v52[1] = 0;
  v53 = 1;
  memcpy(v54, v44, sizeof(v54));
  sub_1000D55D4(v15, v17, (char)v12);
  swift_bridgeObjectRetain(v20);
  sub_1002FF1CC((uint64_t)v45);
  sub_1002FF21C((uint64_t)v52);
  sub_1000D31B4(v15, v17, (char)v12);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1002FB290@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  char v37;
  char v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  unsigned __int8 v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  int v60;
  __int16 v61;
  _BYTE v62[7];
  char v63;
  _BYTE v64[7];
  char v65;
  _BYTE v66[7];
  char v67;
  char v68;

  v6 = type metadata accessor for Font.Leading(0);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x4010000000000000, 0);
  v52 = v53[2];
  v46 = v54;
  v51 = v55;
  v45 = v56;
  v49 = v58;
  v50 = v57;
  v53[0] = a1;
  v53[1] = a2;
  v17 = sub_100114EF8();
  swift_bridgeObjectRetain(a2);
  v18 = Text.init<A>(_:)(v53, &type metadata for String, v17);
  v20 = v19;
  v44 = v21;
  v23 = v22 & 1;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for Font.TextStyle.subheadline(_:), v12);
  v24 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v24);
  v25 = static Font.system(_:design:weight:)(v15, v11, 0, 1);
  sub_100021A14((uint64_t)v11, &qword_100BC3B98);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v27 = v47;
  v26 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v8, enum case for Font.Leading.tight(_:), v48);
  v28 = Font.leading(_:)(v8, v25);
  v29 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v8, v26, v29);
  v30 = Text.font(_:)(v28, v18, v20, v23, v44);
  v32 = v31;
  LOBYTE(v15) = v33;
  v35 = v34;
  swift_release(v28);
  sub_1000D31B4(v18, v20, v23);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_1009944F8);
  v68 = 1;
  v37 = v46;
  v67 = v46;
  v38 = v45;
  v65 = v45;
  v63 = v15 & 1;
  v59 = 0;
  *(_DWORD *)(a3 + 9) = v53[0];
  *(_DWORD *)(a3 + 12) = *(_DWORD *)((char *)v53 + 3);
  *(_DWORD *)(a3 + 25) = *(_DWORD *)v66;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)&v66[3];
  v39 = *(_DWORD *)v64;
  *(_DWORD *)(a3 + 44) = *(_DWORD *)&v64[3];
  *(_DWORD *)(a3 + 41) = v39;
  v40 = *(_DWORD *)v62;
  *(_DWORD *)(a3 + 84) = *(_DWORD *)&v62[3];
  *(_DWORD *)(a3 + 81) = v40;
  v41 = v60;
  *(_WORD *)(a3 + 102) = v61;
  *(_DWORD *)(a3 + 98) = v41;
  LOBYTE(v41) = v59;
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  *(_QWORD *)(a3 + 16) = v52;
  *(_BYTE *)(a3 + 24) = v37;
  *(_QWORD *)(a3 + 32) = v51;
  *(_BYTE *)(a3 + 40) = v38;
  v42 = v49;
  *(_QWORD *)(a3 + 48) = v50;
  *(_QWORD *)(a3 + 56) = v42;
  *(_QWORD *)(a3 + 64) = v30;
  *(_QWORD *)(a3 + 72) = v32;
  *(_BYTE *)(a3 + 80) = v15 & 1;
  *(_QWORD *)(a3 + 88) = v35;
  *(_WORD *)(a3 + 96) = 256;
  *(_QWORD *)(a3 + 104) = KeyPath;
  *(_QWORD *)(a3 + 112) = 2;
  *(_BYTE *)(a3 + 120) = v41;
  sub_1000D55D4(v30, v32, v15 & 1);
  swift_bridgeObjectRetain(v35);
  swift_retain();
  sub_1000D31B4(v30, v32, v15 & 1);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1002FB644@<D0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  char *v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double result;
  void (*v83)(char *, uint64_t, __n128);
  void (*v84)(char *);
  unsigned int v85;
  void (*v86)(char *, uint64_t);
  void (*v87)(char *, _QWORD, uint64_t, double);
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t KeyPath;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 v125;
  uint64_t v126;
  unsigned __int8 v127;
  uint64_t v128;
  uint64_t v129;

  v96 = a1;
  v2 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v2);
  v107 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for BlendMode(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1000BA294(&qword_100BC3B90);
  __chkstk_darwin(v103);
  v108 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v115 = (uint64_t)&v83 - v7;
  v95 = type metadata accessor for Font.Leading(0);
  v8 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v11);
  v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Font.TextStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x4024000000000000, 0);
  v102 = v124;
  v101 = v125;
  v100 = v126;
  v99 = v127;
  v98 = v128;
  v97 = v129;
  v20 = static Axis.Set.horizontal.getter(v19);
  v21 = v20;
  v22 = static Axis.Set.vertical.getter(v20);
  v23 = Axis.Set.init(rawValue:)(0);
  v24 = Axis.Set.init(rawValue:)(v23);
  if (Axis.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Axis.Set.init(rawValue:)(v23 | v21);
  v25 = Axis.Set.init(rawValue:)(v23);
  if (Axis.Set.init(rawValue:)(v25 & v22) == v22)
    v94 = v23;
  else
    v94 = Axis.Set.init(rawValue:)(v23 | v22);
  v26 = sub_1002FBF2C(v1, (uint64_t)&v116);
  v90 = v116;
  v89 = v117;
  v112 = v118;
  v91 = v119;
  v113 = v120;
  v93 = v121;
  v92 = v122;
  v114 = v123;
  v87 = *(void (**)(char *, _QWORD, uint64_t, double))(v15 + 104);
  v87(v17, enum case for Font.TextStyle.subheadline(_:), v14, v26);
  v27 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v27);
  v28 = static Font.system(_:design:weight:)(v17, v13, 0, 1);
  sub_100021A14((uint64_t)v13, &qword_100BC3B98);
  v86 = *(void (**)(char *, uint64_t))(v15 + 8);
  v86(v17, v14);
  v85 = enum case for Font.Leading.tight(_:);
  v84 = *(void (**)(char *))(v8 + 104);
  v29 = v95;
  v84(v10);
  v111 = Font.leading(_:)(v10, v28);
  v30 = swift_release(v28);
  v83 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
  v83(v10, v29, v30);
  KeyPath = swift_getKeyPath(&unk_100994528);
  v31 = (char *)v1 + *(int *)(type metadata accessor for ProminentPadSingleDescription(0) + 20);
  v32 = *(_QWORD *)v31;
  v33 = v31[8];
  sub_10008D47C(*(_QWORD *)v31, v33);
  sub_10010BCB4();
  v88 = v34;
  sub_1000B15F8(v32, v33);
  v109 = swift_getKeyPath(&unk_1009944F8);
  v116 = sub_10045C0D0(*(_QWORD *)(v1[4] + 16));
  v117 = v35;
  v36 = sub_100114EF8();
  v37 = Text.init<A>(_:)(&v116, &type metadata for String, v36);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  ((void (*)(char *, _QWORD, uint64_t))v87)(v17, enum case for Font.TextStyle.footnote(_:), v14);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v27);
  v44 = static Font.system(_:design:weight:)(v17, v13, 0, 1);
  sub_100021A14((uint64_t)v13, &qword_100BC3B98);
  v86(v17, v14);
  ((void (*)(char *, _QWORD, uint64_t))v84)(v10, v85, v29);
  v45 = Font.leading(_:)(v10, v44);
  v46 = swift_release(v44);
  v83(v10, v29, v46);
  v47 = Text.font(_:)(v45, v37, v39, v43, v41);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  swift_release(v45);
  LOBYTE(v45) = v51 & 1;
  sub_1000D31B4(v37, v39, v43);
  swift_bridgeObjectRelease();
  LODWORD(v116) = static HierarchicalShapeStyle.tertiary.getter(v54);
  v55 = Text.foregroundStyle<A>(_:)(&v116, v47, v49, v51 & 1, v53, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v57 = v56;
  v59 = v58;
  v61 = v60 & 1;
  sub_1000D31B4(v47, v49, v45);
  v62 = swift_bridgeObjectRelease();
  v63 = v105;
  v64 = v104;
  v65 = v106;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v105 + 104))(v104, enum case for BlendMode.plusLighter(_:), v106, v62);
  v66 = (uint64_t)v107;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v107, v64, v65);
  v67 = (uint64_t)v108;
  sub_100080C0C(v66, (uint64_t)&v108[*(int *)(v103 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v67 = v55;
  *(_QWORD *)(v67 + 8) = v57;
  *(_BYTE *)(v67 + 16) = v61;
  *(_QWORD *)(v67 + 24) = v59;
  sub_1000D55D4(v55, v57, v61);
  swift_bridgeObjectRetain(v59);
  sub_1000215BC(v66, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  sub_1000D31B4(v55, v57, v61);
  swift_bridgeObjectRelease();
  v68 = v115;
  sub_1000787D4(v67, v115, &qword_100BC3B90);
  sub_100037768(v68, v67, &qword_100BC3B90);
  v69 = v96;
  *v96 = 0;
  *((_BYTE *)v69 + 8) = 1;
  v69[2] = v102;
  *((_BYTE *)v69 + 24) = v101;
  v69[4] = v100;
  *((_BYTE *)v69 + 40) = v99;
  v70 = v97;
  v69[6] = v98;
  v69[7] = v70;
  *((_BYTE *)v69 + 64) = v94;
  v71 = v90;
  v72 = v89;
  v69[9] = v90;
  v69[10] = v72;
  LOBYTE(v68) = v112;
  *((_BYTE *)v69 + 88) = v112;
  v73 = v91;
  v75 = v113;
  v74 = v114;
  v69[12] = v91;
  v69[13] = v75;
  v76 = v93;
  v69[14] = v93;
  LOBYTE(v66) = v92;
  *((_BYTE *)v69 + 120) = v92;
  v77 = KeyPath;
  v69[16] = v74;
  v69[17] = v77;
  v69[18] = v111;
  *((_BYTE *)v69 + 152) = 0;
  *((_BYTE *)v69 + 153) = (v88 & 1) == 0;
  v69[20] = v109;
  v69[21] = 4;
  *((_BYTE *)v69 + 176) = 0;
  v69[23] = 0x4014000000000000;
  *((_BYTE *)v69 + 192) = 0;
  v78 = sub_1000BA294(&qword_100BD6C10);
  sub_100037768(v67, (uint64_t)v69 + *(int *)(v78 + 80), &qword_100BC3B90);
  sub_1000D55D4(v71, v72, v68);
  swift_bridgeObjectRetain(v73);
  sub_1000D55D4(v75, v76, v66);
  swift_bridgeObjectRetain(v74);
  v79 = KeyPath;
  swift_retain();
  v80 = v111;
  swift_retain();
  v81 = v109;
  swift_retain();
  sub_100021A14(v115, &qword_100BC3B90);
  sub_100021A14(v67, &qword_100BC3B90);
  sub_1000D31B4(v71, v72, v112);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v113, v76, v66);
  swift_release(v81);
  swift_release(v80);
  swift_release(v79);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1002FBF2C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  double result;
  uint64_t v29;
  uint64_t v30;

  v4 = type metadata accessor for ProminentPadSingleDescription(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = a1[2];
  v7 = a1[3];
  sub_100080C0C((uint64_t)a1, (uint64_t)v6, v9);
  if (v7)
  {
    v10 = v7;
  }
  else
  {
    v8 = *v6;
    v10 = v6[1];
    swift_bridgeObjectRetain(v10);
  }
  swift_bridgeObjectRetain(v7);
  sub_1000215BC((uint64_t)v6, type metadata accessor for ProminentPadSingleDescription);
  v29 = v8;
  v30 = v10;
  v11 = sub_100114EF8();
  v12 = Text.init<A>(_:)(&v29, &type metadata for String, v11);
  v14 = v13;
  v16 = v15;
  v18 = *a1;
  v17 = a1[1];
  v20 = v19 & 1;
  v29 = v18;
  v30 = v17;
  swift_bridgeObjectRetain(v17);
  v21 = Text.init<A>(_:)(&v29, &type metadata for String, v11);
  v23 = v22;
  v25 = v24;
  LOBYTE(v29) = v20;
  v27 = v26 & 1;
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v26 & 1;
  *(_QWORD *)(a2 + 56) = v24;
  sub_1000D55D4(v12, v14, v20);
  swift_bridgeObjectRetain(v16);
  sub_1000D55D4(v21, v23, v27);
  swift_bridgeObjectRetain(v25);
  sub_1000D31B4(v21, v23, v27);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v12, v14, v29);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1002FC0D0(uint64_t *a1@<X0>, void (*a2)(uint64_t)@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  *a3 = static Axis.Set.vertical.getter(a1);
  sub_1000BA294(a1);
  a2(v3);
  sub_100079F70();
}

void sub_1002FC114(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1000BA294(&qword_100BD6A28);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - v8;
  v10 = sub_1000BA294(&qword_100BD6A30);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v21 - v14;
  *(_QWORD *)v15 = static HorizontalAlignment.leading.getter(v16);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v17 = sub_1000BA294(&qword_100BD6A38);
  sub_1002FC2DC(a1, (uint64_t)&v15[*(int *)(v17 + 44)]);
  *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v18);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v19 = sub_1000BA294(&qword_100BD6A40);
  sub_1002FCBF0(a1, (uint64_t)&v9[*(int *)(v19 + 44)]);
  sub_100037768((uint64_t)v15, (uint64_t)v12, &qword_100BD6A30);
  sub_100037768((uint64_t)v9, (uint64_t)v6, &qword_100BD6A28);
  sub_100037768((uint64_t)v12, a2, &qword_100BD6A30);
  v20 = sub_1000BA294(&qword_100BD6A48);
  sub_100037768((uint64_t)v6, a2 + *(int *)(v20 + 48), &qword_100BD6A28);
  sub_100021A14((uint64_t)v9, &qword_100BD6A28);
  sub_100021A14((uint64_t)v15, &qword_100BD6A30);
  sub_100021A14((uint64_t)v6, &qword_100BD6A28);
  sub_100021A14((uint64_t)v12, &qword_100BD6A30);
}

double sub_1002FC2DC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char v57;
  char v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double result;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, __n128);
  unsigned int v101;
  void (*v102)(char *, _QWORD, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  _QWORD v128[2];
  _QWORD v129[2];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  unsigned __int8 v135;
  uint64_t v136;
  uint64_t v137;

  v4 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v4);
  v107 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for BlendMode(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1000BA294(&qword_100BC3B90);
  __chkstk_darwin(v103);
  v109 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1000BA294(&qword_100BD6A50);
  __chkstk_darwin(v111);
  v112 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD6A58);
  __chkstk_darwin(v9);
  v114 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1000BA294(&qword_100BD6A60);
  __chkstk_darwin(v126);
  v113 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD6A90);
  __chkstk_darwin(v12);
  v116 = (uint64_t)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v125 = (uint64_t)&v94 - v15;
  v16 = type metadata accessor for Font.Leading(0);
  v35 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v43 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x4014000000000000, 0);
  v124 = v132;
  v123 = v133;
  v122 = v134;
  v121 = v135;
  v120 = v136;
  v119 = v137;
  v115 = a1;
  v19 = a1[1];
  v130 = *a1;
  v131 = v19;
  v20 = sub_100114EF8();
  swift_bridgeObjectRetain(v19);
  v127 = v20;
  v21 = Text.init<A>(_:)(&v130, &type metadata for String, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  v28 = static Font.subheadline.getter(v21);
  v29 = *(void (**)(_QWORD))(v35 + 104);
  v101 = enum case for Font.Leading.tight(_:);
  v102 = (void (*)(char *, _QWORD, uint64_t))v29;
  v29(v43);
  v30 = Font.leading(_:)(v43, v28);
  v31 = swift_release(v28);
  v32 = *(void (**)(char *, uint64_t, __n128))(v35 + 8);
  v108 = v43;
  v110 = v16;
  v100 = v32;
  v32(v43, v16, v31);
  v118 = Text.font(_:)(v30, v21, v23, v27, v25);
  v117 = v33;
  LODWORD(v35) = v34;
  v37 = v36;
  swift_release(v30);
  sub_1000D31B4(v21, v23, v27);
  swift_bridgeObjectRelease();
  v38 = type metadata accessor for StandardDescription(0);
  v39 = v115;
  v40 = (char *)v115 + *(int *)(v38 + 20);
  v41 = *(_QWORD *)v40;
  LOBYTE(v21) = v40[8];
  sub_10008D47C(*(_QWORD *)v40, v21);
  sub_10010BCB4();
  LODWORD(v43) = v42;
  sub_1000B15F8(v41, v21);
  KeyPath = swift_getKeyPath(&unk_1009944F8);
  v45 = v39[8];
  if (v45)
  {
    v96 = v39[7];
    v130 = v96;
    v131 = v45;
    v95 = v45;
    swift_bridgeObjectRetain(v45);
    v46 = Text.init<A>(_:)(&v130, &type metadata for String, v127);
    v115 = v37;
    v48 = v47;
    v98 = v35;
    v50 = v49;
    v52 = v51 & 1;
    LODWORD(v130) = static HierarchicalShapeStyle.tertiary.getter(v46);
    v53 = Text.foregroundStyle<A>(_:)(&v130, v46, v48, v52, v50, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v99 = KeyPath;
    v55 = v54;
    v97 = (int)v43;
    v43 = v56;
    v58 = v57 & 1;
    sub_1000D31B4(v46, v48, v52);
    v59 = swift_bridgeObjectRelease();
    v60 = v105;
    v61 = v104;
    v62 = v106;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v105 + 104))(v104, enum case for BlendMode.plusLighter(_:), v106, v59);
    v63 = (uint64_t)v107;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v107, v61, v62);
    v64 = (uint64_t)v109;
    sub_100080C0C(v63, (uint64_t)&v109[*(int *)(v103 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    *(_QWORD *)v64 = v53;
    *(_QWORD *)(v64 + 8) = v55;
    *(_BYTE *)(v64 + 16) = v58;
    *(_QWORD *)(v64 + 24) = v43;
    sub_1000D55D4(v53, v55, v58);
    swift_bridgeObjectRetain(v43);
    sub_1000215BC(v63, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    v65 = v55;
    KeyPath = v99;
    sub_1000D31B4(v53, v65, v58);
    LOBYTE(v43) = v97;
    swift_bridgeObjectRelease();
    v66 = swift_getKeyPath(&unk_1009944F8);
    v67 = v112;
    sub_100037768(v64, v112, &qword_100BC3B90);
    v68 = v111;
    v69 = v67 + *(int *)(v111 + 36);
    *(_QWORD *)v69 = v66;
    *(_QWORD *)(v69 + 8) = 2;
    *(_BYTE *)(v69 + 16) = 0;
    sub_100021A14(v64, &qword_100BC3B90);
    v130 = v96;
    v131 = v95;
    v129[0] = 0x20A280E220;
    v129[1] = 0xA500000000000000;
    v128[0] = 8236;
    v128[1] = 0xE200000000000000;
    v70 = v127;
    v130 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v129, v128, 0, 0, 0, 1, &type metadata for String, &type metadata for String);
    v131 = v71;
    v72 = sub_1002FE2B8();
    v73 = (uint64_t)v114;
    View.accessibilityLabel<A>(_:)(&v130, v68, &type metadata for String, v72, v70);
    swift_bridgeObjectRelease();
    sub_100021A14(v67, &qword_100BD6A50);
    v75 = static Font.footnote.getter(v74);
    v76 = v108;
    v77 = v110;
    v102(v108, v101, v110);
    v78 = Font.leading(_:)(v76, v75);
    v79 = swift_release(v75);
    v100(v76, v77, v79);
    v35 = swift_getKeyPath(&unk_100994528);
    v80 = v113;
    sub_100037768(v73, v113, &qword_100BD6A58);
    v81 = v126;
    v82 = (uint64_t *)(v80 + *(int *)(v126 + 36));
    *v82 = v35;
    v82[1] = v78;
    LOBYTE(v35) = v98;
    v83 = v73;
    v37 = v115;
    sub_100021A14(v83, &qword_100BD6A58);
    v84 = v125;
    sub_1000787D4(v80, v125, &qword_100BD6A60);
    v85 = 0;
    v86 = v81;
  }
  else
  {
    v85 = 1;
    v84 = v125;
    v86 = v126;
  }
  _s7Weather24LocationCompositionStateOwst_0(v84, v85, 1, v86);
  v87 = v35 & 1;
  v88 = v116;
  sub_100037768(v84, v116, &qword_100BD6A90);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v124;
  *(_BYTE *)(a2 + 24) = v123;
  *(_QWORD *)(a2 + 32) = v122;
  *(_BYTE *)(a2 + 40) = v121;
  v89 = v119;
  *(_QWORD *)(a2 + 48) = v120;
  *(_QWORD *)(a2 + 56) = v89;
  v90 = v118;
  v91 = v117;
  *(_QWORD *)(a2 + 64) = v118;
  *(_QWORD *)(a2 + 72) = v91;
  *(_BYTE *)(a2 + 80) = v87;
  *(_QWORD *)(a2 + 88) = v37;
  *(_BYTE *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 97) = (v43 & 1) == 0;
  *(_QWORD *)(a2 + 104) = KeyPath;
  *(_QWORD *)(a2 + 112) = 4;
  *(_BYTE *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = 0x4014000000000000;
  *(_BYTE *)(a2 + 136) = 0;
  v92 = sub_1000BA294(&qword_100BD6A98);
  sub_100037768(v88, a2 + *(int *)(v92 + 80), &qword_100BD6A90);
  sub_1000D55D4(v90, v91, v87);
  swift_bridgeObjectRetain(v37);
  swift_retain();
  sub_100021A14(v84, &qword_100BD6A90);
  sub_100021A14(v88, &qword_100BD6A90);
  sub_1000D31B4(v90, v91, v87);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1002FCBF0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD);
  uint64_t v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double result;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, __n128);
  unsigned int v102;
  void (*v103)(char *, _QWORD, uint64_t);
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  _QWORD v125[2];
  _QWORD v126[2];
  uint64_t v127;
  uint64_t v128;

  v4 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v4);
  v110 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for BlendMode(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v106 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1000BA294(&qword_100BC3B90);
  __chkstk_darwin(v104);
  v111 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1000BA294(&qword_100BD6A50);
  __chkstk_darwin(v112);
  v113 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD6A58);
  __chkstk_darwin(v9);
  v117 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1000BA294(&qword_100BD6A60);
  __chkstk_darwin(v115);
  v116 = (uint64_t)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1000BA294(&qword_100BD6A68);
  __chkstk_darwin(v124);
  v114 = (uint64_t)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD6A70);
  __chkstk_darwin(v13);
  v122 = (uint64_t)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v121 = (uint64_t)&v95 - v16;
  v45 = type metadata accessor for Font.Leading(0);
  v37 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = a1;
  v19 = *a1;
  v20 = a1[1];
  v127 = v19;
  v128 = v20;
  v21 = sub_100114EF8();
  swift_bridgeObjectRetain(v20);
  v123 = v21;
  v22 = Text.init<A>(_:)(&v127, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = static Font.subheadline.getter(v22);
  v30 = *(void (**)(_QWORD))(v37 + 104);
  v102 = enum case for Font.Leading.tight(_:);
  v103 = (void (*)(char *, _QWORD, uint64_t))v30;
  v30(v18);
  v31 = Font.leading(_:)(v18, v29);
  v32 = swift_release(v29);
  v33 = *(void (**)(char *, uint64_t, __n128))(v37 + 8);
  v105 = v18;
  v107 = v45;
  v101 = v33;
  v33(v18, v45, v32);
  v34 = Text.font(_:)(v31, v22, v24, v28, v26);
  v119 = v35;
  v120 = v34;
  LODWORD(v37) = v36;
  v39 = v38;
  swift_release(v31);
  sub_1000D31B4(v22, v24, v28);
  swift_bridgeObjectRelease();
  v40 = type metadata accessor for StandardDescription(0);
  v41 = v118;
  v42 = (char *)v118 + *(int *)(v40 + 20);
  v43 = *(_QWORD *)v42;
  LOBYTE(v31) = v42[8];
  sub_10008D47C(*(_QWORD *)v42, v31);
  sub_10010BCB4();
  LODWORD(v45) = v44;
  sub_1000B15F8(v43, v31);
  KeyPath = swift_getKeyPath(&unk_1009944F8);
  v47 = v41[8];
  if (v47)
  {
    v97 = v41[7];
    v127 = v97;
    v128 = v47;
    v96 = v47;
    swift_bridgeObjectRetain(v47);
    v48 = Text.init<A>(_:)(&v127, &type metadata for String, v123);
    v118 = v39;
    v50 = v49;
    v99 = v37;
    v52 = v51;
    v54 = v53 & 1;
    LODWORD(v127) = static HierarchicalShapeStyle.tertiary.getter(v48);
    v55 = Text.foregroundStyle<A>(_:)(&v127, v48, v50, v54, v52, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v100 = KeyPath;
    v56 = v55;
    v58 = v57;
    v98 = v45;
    v45 = v59;
    v61 = v60 & 1;
    sub_1000D31B4(v48, v50, v54);
    v62 = swift_bridgeObjectRelease();
    v63 = v108;
    v64 = v106;
    v65 = v109;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v108 + 104))(v106, enum case for BlendMode.plusLighter(_:), v109, v62);
    v66 = (uint64_t)v110;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v110, v64, v65);
    v67 = (uint64_t)v111;
    sub_100080C0C(v66, (uint64_t)&v111[*(int *)(v104 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    *(_QWORD *)v67 = v56;
    *(_QWORD *)(v67 + 8) = v58;
    *(_BYTE *)(v67 + 16) = v61;
    *(_QWORD *)(v67 + 24) = v45;
    sub_1000D55D4(v56, v58, v61);
    swift_bridgeObjectRetain(v45);
    sub_1000215BC(v66, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    v68 = v56;
    KeyPath = v100;
    sub_1000D31B4(v68, v58, v61);
    LOBYTE(v45) = v98;
    swift_bridgeObjectRelease();
    v69 = swift_getKeyPath(&unk_1009944F8);
    v70 = v113;
    sub_100037768(v67, v113, &qword_100BC3B90);
    v71 = v112;
    v72 = v70 + *(int *)(v112 + 36);
    *(_QWORD *)v72 = v69;
    *(_QWORD *)(v72 + 8) = 2;
    *(_BYTE *)(v72 + 16) = 0;
    sub_100021A14(v67, &qword_100BC3B90);
    v127 = v97;
    v128 = v96;
    v126[0] = 0x20A280E220;
    v126[1] = 0xA500000000000000;
    v125[0] = 8236;
    v125[1] = 0xE200000000000000;
    v73 = v123;
    v127 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v126, v125, 0, 0, 0, 1, &type metadata for String, &type metadata for String);
    v128 = v74;
    v75 = sub_1002FE2B8();
    v76 = (uint64_t)v117;
    View.accessibilityLabel<A>(_:)(&v127, v71, &type metadata for String, v75, v73);
    swift_bridgeObjectRelease();
    sub_100021A14(v70, &qword_100BD6A50);
    v78 = static Font.caption2.getter(v77);
    v79 = v105;
    v80 = v107;
    v103(v105, v102, v107);
    v81 = Font.leading(_:)(v79, v78);
    v82 = swift_release(v78);
    v101(v79, v80, v82);
    v37 = swift_getKeyPath(&unk_100994528);
    v83 = v116;
    sub_100037768(v76, v116, &qword_100BD6A58);
    v84 = (uint64_t *)(v83 + *(int *)(v115 + 36));
    *v84 = v37;
    v84[1] = v81;
    sub_100021A14(v76, &qword_100BD6A58);
    v85 = v114;
    sub_100037768(v83, v114, &qword_100BD6A60);
    *(_QWORD *)(v85 + *(int *)(v124 + 36)) = 0x3FF0000000000000;
    v86 = v83;
    v39 = v118;
    LOBYTE(v37) = v99;
    sub_100021A14(v86, &qword_100BD6A60);
    v87 = v121;
    sub_1000787D4(v85, v121, &qword_100BD6A68);
    v88 = 0;
  }
  else
  {
    v88 = 1;
    v87 = v121;
  }
  _s7Weather24LocationCompositionStateOwst_0(v87, v88, 1, v124);
  v89 = v37 & 1;
  v90 = v122;
  sub_100037768(v87, v122, &qword_100BD6A70);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
  v92 = v119;
  v91 = v120;
  *(_QWORD *)(a2 + 16) = v120;
  *(_QWORD *)(a2 + 24) = v92;
  *(_BYTE *)(a2 + 32) = v89;
  *(_QWORD *)(a2 + 40) = v39;
  *(_BYTE *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 49) = (v45 & 1) == 0;
  *(_QWORD *)(a2 + 56) = KeyPath;
  *(_QWORD *)(a2 + 64) = 4;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0x4000000000000000;
  *(_QWORD *)(a2 + 88) = 0;
  *(_BYTE *)(a2 + 96) = 0;
  v93 = sub_1000BA294(&qword_100BD6A78);
  sub_100037768(v90, a2 + *(int *)(v93 + 80), &qword_100BD6A70);
  sub_1000D55D4(v91, v92, v89);
  swift_bridgeObjectRetain(v39);
  swift_retain();
  sub_100021A14(v87, &qword_100BD6A70);
  sub_100021A14(v90, &qword_100BD6A70);
  sub_1000D31B4(v91, v92, v89);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1002FD49C(_BYTE *a1@<X8>)
{
  sub_1002FC0D0(&qword_100BD6A20, (void (*)(uint64_t))sub_1002FC114, a1);
}

_QWORD *sub_1002FD4C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  void (*v20)(char *, char *, uint64_t, __n128);
  char *v21;
  char *v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v10 = a2[4];
    v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    v12 = a2[6];
    v11 = a2[7];
    a1[6] = v12;
    a1[7] = v11;
    v13 = a2[8];
    a1[8] = v13;
    v14 = type metadata accessor for SevereAlertComponentViewModel(0);
    v15 = *(int *)(v14 + 36);
    v21 = (char *)a2 + v15;
    v22 = (char *)v4 + v15;
    v16 = type metadata accessor for WeatherAlert.Prominence(0);
    v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    v17 = swift_bridgeObjectRetain(v13);
    v20(v22, v21, v16, v17);
    *(_QWORD *)((char *)v4 + *(int *)(v14 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v14 + 40));
    *((_BYTE *)v4 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return v4;
}

_QWORD *sub_1002FD5EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  __n128 v16;
  char *v18;
  char *v19;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v8 = a2[4];
  v7 = a2[5];
  a1[4] = v8;
  a1[5] = v7;
  v10 = a2[6];
  v9 = a2[7];
  a1[6] = v10;
  a1[7] = v9;
  v11 = a2[8];
  a1[8] = v11;
  v12 = type metadata accessor for SevereAlertComponentViewModel(0);
  v13 = *(int *)(v12 + 36);
  v18 = (char *)a2 + v13;
  v19 = (char *)a1 + v13;
  v14 = type metadata accessor for WeatherAlert.Prominence(0);
  v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  v16 = swift_bridgeObjectRetain(v11);
  v15(v19, v18, v14, v16);
  *(_QWORD *)((char *)a1 + *(int *)(v12 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 40));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1002FD6E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = a2[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  v9 = a2[6];
  a1[6] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  v10 = a2[8];
  a1[8] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for SevereAlertComponentViewModel(0);
  v12 = *(int *)(v11 + 36);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_QWORD *)((char *)a1 + *(int *)(v11 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 40));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002FD804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = type metadata accessor for SevereAlertComponentViewModel(0);
  v8 = *(int *)(v7 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(v7 + 40)) = *(_QWORD *)(a2 + *(int *)(v7 + 40));
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1002FD8AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for SevereAlertComponentViewModel(0);
  v11 = *(int *)(v10 + 36);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)((char *)a1 + *(int *)(v10 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v10 + 40));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002FD984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FD990);
}

void sub_1002FD990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA8C4();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_1000B250C(a1, a2, v4);
  else
    sub_100079F70();
}

uint64_t sub_1002FDA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FDA10);
}

void sub_1002FDA10(uint64_t a1, char a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(sub_1000BA8C4() - 8) + 84) == a3)
  {
    v7 = sub_1000B4784();
    sub_1000987C4(v7, v8, v9, v10);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
    sub_100079F70();
  }
}

uint64_t sub_1002FDA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001310AC(a1, a2, a3, (uint64_t)&unk_100994388);
}

unint64_t sub_1002FDA74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD68A0;
  if (!qword_100BD68A0)
  {
    v1 = sub_100075EB0(&qword_100BD68A8);
    sub_1002FDAF8();
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD68A0);
  }
  return result;
}

unint64_t sub_1002FDAF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_100BD68B0;
  if (!qword_100BD68B0)
  {
    v1 = sub_100075EB0(&qword_100BD67D0);
    v2 = sub_100075EB0(&qword_100BD67C0);
    sub_10003D2DC(&qword_100BD67E0, &qword_100BD67C0);
    v4[0] = v2;
    v4[1] = v3;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD68B0);
  }
  return result;
}

uint64_t sub_1002FDBC4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0918, 1);
}

uint64_t type metadata accessor for ProminentPadDescription(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD6948, (uint64_t)&nominal type descriptor for ProminentPadDescription);
}

uint64_t type metadata accessor for StandardDescription(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD69D8, (uint64_t)&nominal type descriptor for StandardDescription);
}

unint64_t sub_1002FDC04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD68D8;
  if (!qword_100BD68D8)
  {
    v1 = sub_100075EB0(&qword_100BD68C8);
    sub_10000F1C8(&qword_100BD68E0, type metadata accessor for StandardDescription);
    sub_10000F1C8(&qword_100BD68E8, type metadata accessor for ProminentPadDescription);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD68D8);
  }
  return result;
}

uint64_t *sub_1002FDCA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  char *v20;
  char *v21;

  v4 = type metadata accessor for SevereAlertComponentViewModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v10 = a2[4];
    v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    v12 = a2[6];
    v11 = a2[7];
    a1[6] = v12;
    a1[7] = v11;
    v13 = a2[8];
    a1[8] = v13;
    v14 = *(int *)(v4 + 36);
    v20 = (char *)a2 + v14;
    v21 = (char *)a1 + v14;
    v15 = type metadata accessor for WeatherAlert.Prominence(0);
    v16 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    v17 = swift_bridgeObjectRetain(v13);
    v16(v21, v20, v15, v17);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 40));
  }
  return a1;
}

uint64_t sub_1002FDDB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(sub_1000BA8C4() + 36);
  v3 = sub_1000BBFE4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1002FDE14(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  char *v17;
  char *v18;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = a2[4];
  v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  v9 = a2[6];
  v8 = a2[7];
  a1[6] = v9;
  a1[7] = v8;
  v10 = a2[8];
  a1[8] = v10;
  v11 = type metadata accessor for SevereAlertComponentViewModel(0);
  v12 = *(int *)(v11 + 36);
  v17 = (char *)a2 + v12;
  v18 = (char *)a1 + v12;
  v13 = type metadata accessor for WeatherAlert.Prominence(0);
  v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  v15 = swift_bridgeObjectRetain(v10);
  v14(v18, v17, v13, v15);
  *(_QWORD *)((char *)a1 + *(int *)(v11 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 40));
  return a1;
}

_QWORD *sub_1002FDEF8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v5 = a2[3];
  a1[3] = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease();
  v6 = a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  v7 = a2[6];
  a1[6] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  v8 = a2[8];
  a1[8] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for SevereAlertComponentViewModel(0);
  v10 = *(int *)(v9 + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + *(int *)(v9 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v9 + 40));
  return a1;
}

uint64_t sub_1002FE008(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = type metadata accessor for SevereAlertComponentViewModel(0);
  v6 = *(int *)(v5 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(v5 + 40)) = *(_QWORD *)(a2 + *(int *)(v5 + 40));
  return a1;
}

_QWORD *sub_1002FE0A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for SevereAlertComponentViewModel(0);
  v9 = *(int *)(v8 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *(_QWORD *)((char *)a1 + *(int *)(v8 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 40));
  return a1;
}

uint64_t sub_1002FE168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FF2C8);
}

uint64_t sub_1002FE174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FF2C4);
}

uint64_t sub_1002FE180(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for SevereAlertComponentViewModel(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002FE1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FE1F4);
}

uint64_t sub_1002FE1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FE204);
}

unint64_t sub_1002FE20C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6A10;
  if (!qword_100BD6A10)
  {
    v1 = sub_100075EB0(&qword_100BD6A18);
    sub_1002FDC04();
    sub_10000F1C8(&qword_100BD68E0, type metadata accessor for StandardDescription);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6A10);
  }
  return result;
}

uint64_t sub_1002FE290(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB09C8, 1);
}

uint64_t sub_1002FE2A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB09A0, 1);
}

unint64_t sub_1002FE2B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6A80;
  if (!qword_100BD6A80)
  {
    v1 = sub_100075EB0(&qword_100BD6A50);
    sub_1002FE33C();
    sub_10003D2DC(&qword_100BCD8A0, &qword_100BCD8A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6A80);
  }
  return result;
}

unint64_t sub_1002FE33C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6A88;
  if (!qword_100BD6A88)
  {
    v1 = sub_100075EB0(&qword_100BC3B90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6A88);
  }
  return result;
}

uint64_t type metadata accessor for ProminentPadSingleDescription(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD6B20, (uint64_t)&nominal type descriptor for ProminentPadSingleDescription);
}

uint64_t type metadata accessor for ProminentPadBulletedDescription(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD6BB0, (uint64_t)&nominal type descriptor for ProminentPadBulletedDescription);
}

void sub_1002FE3D0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;

  if ((*(_DWORD *)(*(_QWORD *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v11 = a2[4];
    v10 = a2[5];
    a1[4] = v11;
    a1[5] = v10;
    v13 = a2[6];
    v12 = a2[7];
    a1[6] = v13;
    a1[7] = v12;
    v14 = a2[8];
    a1[8] = v14;
    type metadata accessor for SevereAlertComponentViewModel(0);
    sub_100098BCC();
    v20 = v15;
    v21 = v16;
    v17 = sub_1000BBFE4();
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    v18 = swift_bridgeObjectRetain(v14);
    v19(v21, v20, v17, v18);
    *(_QWORD *)((char *)a1 + *(int *)(v4 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v4 + 40));
    sub_1000C2768(*(int *)(a3 + 20), (uint64_t)v19, v20, v21, a4);
    *(_QWORD *)a3 = v17;
    *(_BYTE *)(a3 + 8) = (_BYTE)a2;
  }
  sub_10009DE9C();
}

uint64_t sub_1002FE4D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(sub_1000BA8C4() + 36);
  v6 = sub_1000BBFE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return a3(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(unsigned __int8 *)(a1 + *(int *)(a2 + 20) + 8));
}

void sub_1002FE56C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v10 = a2[4];
  v9 = a2[5];
  a1[4] = v10;
  a1[5] = v9;
  v12 = a2[6];
  v11 = a2[7];
  a1[6] = v12;
  a1[7] = v11;
  v13 = a2[8];
  a1[8] = v13;
  sub_1000BA8C4();
  sub_100098BCC();
  v19 = v14;
  v20 = v15;
  v16 = sub_1000BBFE4();
  v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  v18 = swift_bridgeObjectRetain(v13);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v17)(v20, v19, v16, v18);
  *(_QWORD *)((char *)a1 + *(int *)(v4 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v4 + 40));
  sub_1000C2768(*(int *)(a3 + 20), v19, v20, a3, a4);
  *(_QWORD *)v17 = v16;
  *(_BYTE *)(v17 + 8) = (_BYTE)a2;
  sub_10009DE9C();
}

void sub_1002FE63C(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v10 = a2[1];
  a1[1] = v10;
  swift_bridgeObjectRetain(v10);
  sub_10009934C();
  a1[2] = a2[2];
  v11 = a2[3];
  a1[3] = v11;
  swift_bridgeObjectRetain(v11);
  sub_10009934C();
  v12 = a2[4];
  a1[4] = v12;
  swift_bridgeObjectRetain(v12);
  sub_10009934C();
  a1[5] = a2[5];
  v13 = a2[6];
  a1[6] = v13;
  swift_bridgeObjectRetain(v13);
  sub_10009934C();
  a1[7] = a2[7];
  v14 = a2[8];
  a1[8] = v14;
  swift_bridgeObjectRetain(v14);
  sub_10009934C();
  v15 = sub_1000BA8C4();
  v16 = *(int *)(v15 + 36);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1000BBFE4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  *(_QWORD *)((char *)a1 + *(int *)(v15 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v15 + 40));
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)v22;
  LOBYTE(a3) = v22[8];
  a4(*(_QWORD *)v22, a3);
  v24 = *(_QWORD *)v21;
  v25 = v21[8];
  *(_QWORD *)v21 = v23;
  v21[8] = a3;
  a5(v24, v25);
  sub_10009D300();
}

uint64_t sub_1002FE768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = sub_1000BA8C4();
  v8 = *(int *)(v7 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1000BBFE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(v7 + 40)) = *(_QWORD *)(a2 + *(int *)(v7 + 40));
  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  return a1;
}

void sub_1002FE818(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[3];
  a1[2] = a2[2];
  a1[3] = v9;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v10 = a2[6];
  a1[5] = a2[5];
  a1[6] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[8];
  a1[7] = a2[7];
  a1[8] = v11;
  swift_bridgeObjectRelease();
  v12 = sub_1000BA8C4();
  v13 = *(int *)(v12 + 36);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1000BBFE4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  *(_QWORD *)((char *)a1 + *(int *)(v12 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 40));
  v17 = *(int *)(a3 + 20);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = v19[8];
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v19;
  a4(v21, v22);
  sub_10009D300();
}

uint64_t sub_1002FE900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FE90C);
}

uint64_t sub_1002FE910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FE91C);
}

uint64_t *sub_1002FE920(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, char *, uint64_t, __n128);
  char *v22;
  char *v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v10 = a2[4];
    v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    v12 = a2[6];
    v11 = a2[7];
    a1[6] = v12;
    a1[7] = v11;
    v13 = a2[8];
    a1[8] = v13;
    v14 = type metadata accessor for SevereAlertComponentViewModel(0);
    v15 = *(int *)(v14 + 36);
    v22 = (char *)a2 + v15;
    v23 = (char *)v4 + v15;
    v16 = type metadata accessor for WeatherAlert.Prominence(0);
    v21 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    v17 = swift_bridgeObjectRetain(v13);
    v21(v23, v22, v16, v17);
    *(uint64_t *)((char *)v4 + *(int *)(v14 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 40));
    v18 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
  }
  return v4;
}

uint64_t sub_1002FEA50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for SevereAlertComponentViewModel(0) + 36);
  v3 = type metadata accessor for WeatherAlert.Prominence(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1002FEABC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  char *v19;
  char *v20;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v8 = a2[4];
  v7 = a2[5];
  a1[4] = v8;
  a1[5] = v7;
  v10 = a2[6];
  v9 = a2[7];
  a1[6] = v10;
  a1[7] = v9;
  v11 = a2[8];
  a1[8] = v11;
  v12 = type metadata accessor for SevereAlertComponentViewModel(0);
  v13 = *(int *)(v12 + 36);
  v19 = (char *)a2 + v13;
  v20 = (char *)a1 + v13;
  v14 = type metadata accessor for WeatherAlert.Prominence(0);
  v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  v16 = swift_bridgeObjectRetain(v11);
  v15(v20, v19, v14, v16);
  *(_QWORD *)((char *)a1 + *(int *)(v12 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 40));
  v17 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  return a1;
}

_QWORD *sub_1002FEBBC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = a2[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  v9 = a2[6];
  a1[6] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  v10 = a2[8];
  a1[8] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for SevereAlertComponentViewModel(0);
  v12 = *(int *)(v11 + 36);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_QWORD *)((char *)a1 + *(int *)(v11 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 40));
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1002FECE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = type metadata accessor for SevereAlertComponentViewModel(0);
  v8 = *(int *)(v7 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(v7 + 40)) = *(_QWORD *)(a2 + *(int *)(v7 + 40));
  v12 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

_QWORD *sub_1002FED98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for SevereAlertComponentViewModel(0);
  v11 = *(int *)(v10 + 36);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)((char *)a1 + *(int *)(v10 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v10 + 40));
  v15 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  return a1;
}

uint64_t sub_1002FEE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FEE84);
}

uint64_t sub_1002FEE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA8C4();
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1002FEEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FEEC0);
}

uint64_t sub_1002FEEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000BA8C4();
  v0 = sub_1000B4784();
  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t sub_1002FEEE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for SevereAlertComponentViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_1002FEF60()
{
  sub_10003D2DC(&qword_100BD6BF0, &qword_100BD6BF8);
}

void sub_1002FEF8C()
{
  sub_10003D2DC(&qword_100BD6C00, &qword_100BD6C08);
}

uint64_t sub_1002FEFB8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0A18, 1);
}

uint64_t sub_1002FEFC8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB09F0, 1);
}

uint64_t sub_1002FEFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for ProminentPadBulletedDescription(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(sub_1000BA8C4() + 36);
  v8 = sub_1000BBFE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1002FF078@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ProminentPadBulletedDescription(0) - 8) + 80);
  return sub_1002FAE3C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1002FF0C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  v5 = *(_BYTE *)(a1 + 208);
  v6 = *(_QWORD *)(a1 + 216);
  sub_1000D55D4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_1000D55D4(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  swift_retain();
  return a1;
}

uint64_t sub_1002FF148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 192);
  v3 = *(_QWORD *)(a1 + 200);
  v4 = *(_BYTE *)(a1 + 208);
  v5 = *(_QWORD *)(a1 + 232);
  sub_1000D31B4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1000D31B4(v2, v3, v4);
  swift_release(v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002FF1CC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 112);
  sub_1000D55D4(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  swift_bridgeObjectRetain(v2);
  swift_retain();
  return a1;
}

uint64_t sub_1002FF21C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 128);
  sub_1000D31B4(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  swift_release(v2);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1002FF26C()
{
  sub_10003D2DC(&qword_100BD6C50, &qword_100BD6C58);
}

void sub_1002FF298()
{
  sub_10003D2DC(&qword_100BD6C60, qword_100BD6C68);
}

uint64_t sub_1002FF2CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for ConditionDetailPlatterViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100994700;
    v4[2] = &unk_100994718;
    v4[3] = &unk_100994730;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
    return 0;
  }
  return result;
}

unint64_t sub_1002FF360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_BYTE *)(a2 + 16);
    sub_1000B2044(*(_QWORD *)a2, v7, v8);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = v8;
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v9;
    v10 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    v11 = *(int *)(v10 + 24);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    v14 = type metadata accessor for WeatherDescription(0);
    swift_bridgeObjectRetain(v9);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      v15 = sub_1000BA294(&qword_100BC3368);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    v18 = a2 + *(int *)(v10 + 28);
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v19 = (char *)&loc_1002FF4B4 + 4 * byte_100994660[swift_getEnumCaseMultiPayload(v18)];
    __asm { BR              X10 }
  }
  v16 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v17;
}

double sub_1003007C0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  void (*v48)(uint64_t, uint64_t, __n128);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  double result;
  _QWORD *v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, __n128);
  uint64_t v78;
  uint64_t v79;

  sub_10006BD8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for WeatherDescription(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v7))
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v7, v6);
      goto LABEL_41;
    case 1u:
      goto LABEL_25;
    case 2u:
      v9 = type metadata accessor for AttributedString(0);
      goto LABEL_20;
    case 3u:
      v9 = sub_1000BA294(&qword_100BD30F8);
      goto LABEL_20;
    case 4u:
      if (*(_QWORD *)(v7 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v10 = type metadata accessor for DetailComponentContainerViewModel(0);
      v11 = v7 + *(int *)(v10 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v11) == 1)
      {
        v78 = a2;
        swift_bridgeObjectRelease();
        v12 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v13 = v11 + v12[5];
        v14 = type metadata accessor for URL(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        v15 = swift_bridgeObjectRelease();
        v77 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 8);
        v77(v11 + v12[7], v14, v15);
        v16 = v11 + v12[8];
        a2 = v78;
        if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v14))
          ((void (*)(uint64_t, uint64_t))v77)(v16, v14);
      }
      v7 += *(int *)(v10 + 24);
      v17 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v17))
        goto LABEL_41;
      v9 = type metadata accessor for URL(0);
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
LABEL_41:
      v40 = a1 + v4[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload(v40))
        {
          case 0u:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v40, v6);
            break;
          case 1u:
            goto LABEL_64;
          case 2u:
            v41 = type metadata accessor for AttributedString(0);
            goto LABEL_59;
          case 3u:
            v41 = sub_1000BA294(&qword_100BD30F8);
            goto LABEL_59;
          case 4u:
            if (*(_QWORD *)(v40 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v42 = type metadata accessor for DetailComponentContainerViewModel(0);
            v43 = v40 + *(int *)(v42 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload(v43) == 1)
            {
              swift_bridgeObjectRelease();
              v44 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              v45 = v43 + v44[5];
              v46 = type metadata accessor for URL(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46))
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
              v47 = swift_bridgeObjectRelease();
              v48 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v46 - 8) + 8);
              v48(v43 + v44[7], v46, v47);
              v49 = v43 + v44[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v49, 1, v46))
                ((void (*)(uint64_t, uint64_t))v48)(v49, v46);
            }
            v50 = v40 + *(int *)(v42 + 24);
            v51 = type metadata accessor for DetailComponentAction(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v50, 1, v51))
            {
              v52 = type metadata accessor for URL(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v50, v52);
            }
            break;
          case 5u:
            if (*(_QWORD *)(v40 + 24))
            {
              sub_1000D31B4(*(_QWORD *)v40, *(_QWORD *)(v40 + 8), *(_BYTE *)(v40 + 16));
              swift_bridgeObjectRelease();
            }
            sub_1002387C0(*(_QWORD *)(v40 + 32), *(_QWORD *)(v40 + 40), *(_QWORD *)(v40 + 48), *(_QWORD *)(v40 + 56), *(_QWORD *)(v40 + 64), *(_QWORD *)(v40 + 72), *(_QWORD *)(v40 + 80), *(unsigned __int8 *)(v40 + 88), *(_BYTE *)(v40 + 89));
            break;
          case 6u:
            v41 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
LABEL_59:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
            break;
          case 7u:
            type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v40);
            if (EnumCaseMultiPayload == 1)
            {
              swift_bridgeObjectRelease();
              v56 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
              v57 = v40 + v56[5];
              v58 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
              v59 = v40 + v56[6];
              v60 = (int *)type metadata accessor for WeatherData(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v59, 1, (uint64_t)v60))
              {
                swift_bridgeObjectRelease();
                v61 = v59 + v60[5];
                v62 = type metadata accessor for Locale(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
                v63 = v59 + v60[6];
                v64 = type metadata accessor for WeatherDataModel(0);
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
                v65 = v59 + v60[7];
                v66 = sub_1000BA294(&qword_100BC3348);
                if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v66))
                {
                  v67 = type metadata accessor for Date(0);
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v65, v67);
                }
                v68 = v59 + v60[8];
                type metadata accessor for WeatherData.WeatherStatisticsState(0);
                v69 = swift_getEnumCaseMultiPayload(v68);
                if (v69 == 1)
                {
                  v70 = type metadata accessor for WeatherStatisticsModel(0);
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v68, v70);
                }
                else if (!v69)
                {
                  swift_bridgeObjectRelease();
                }
                v71 = v59 + v60[9];
                v72 = type metadata accessor for WeatherDataOverrides(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v72))
                {
                  v73 = type metadata accessor for Date(0);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v73))
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v71, v73);
                  v74 = v71 + *(int *)(v72 + 20);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v74, 1, v73))
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v74, v73);
                }
              }
              swift_bridgeObjectRelease();
              v75 = v40 + v56[8];
              v76 = type metadata accessor for WeatherMapOverlayKind(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v75, v76);
            }
            else if (!EnumCaseMultiPayload)
            {
              swift_bridgeObjectRelease();
LABEL_64:
              swift_bridgeObjectRelease();
            }
            break;
          default:
            break;
        }
      }
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 40)));
      v55 = (_QWORD *)(a1 + *(int *)(a2 + 44));
      if (*v55)
        *(_QWORD *)&result = swift_release(v55[1]).n128_u64[0];
      return result;
    case 5u:
      if (*(_QWORD *)(v7 + 24))
      {
        sub_1000D31B4(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
        swift_bridgeObjectRelease();
      }
      sub_1002387C0(*(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72), *(_QWORD *)(v7 + 80), *(unsigned __int8 *)(v7 + 88), *(_BYTE *)(v7 + 89));
      goto LABEL_41;
    case 6u:
      v9 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      goto LABEL_20;
    case 7u:
      type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      v18 = swift_getEnumCaseMultiPayload(v7);
      if (v18 == 1)
      {
        v79 = a2;
        swift_bridgeObjectRelease();
        v19 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
        v20 = v7 + v19[5];
        v21 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        v22 = v7 + v19[6];
        v23 = (int *)type metadata accessor for WeatherData(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, (uint64_t)v23))
        {
          swift_bridgeObjectRelease();
          v24 = v22 + v23[5];
          v25 = type metadata accessor for Locale(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
          v26 = v22 + v23[6];
          v27 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
          v28 = v22 + v23[7];
          v29 = sub_1000BA294(&qword_100BC3348);
          if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
          {
            v30 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v28, v30);
          }
          v31 = v22 + v23[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          v32 = swift_getEnumCaseMultiPayload(v31);
          if (v32 == 1)
          {
            v33 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v31, v33);
          }
          else if (!v32)
          {
            swift_bridgeObjectRelease();
          }
          v34 = v22 + v23[9];
          v35 = type metadata accessor for WeatherDataOverrides(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35))
          {
            v36 = type metadata accessor for Date(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v36))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v34, v36);
            v37 = v34 + *(int *)(v35 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v36))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v37, v36);
          }
        }
        swift_bridgeObjectRelease();
        v38 = v7 + v19[8];
        v39 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
        a2 = v79;
      }
      else if (!v18)
      {
        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
      }
      goto LABEL_41;
    default:
      goto LABEL_41;
  }
}

void sub_100301154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1000B2044(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  v9 = *(int *)(v8 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for WeatherDescription(0);
  swift_bridgeObjectRetain(v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    v13 = sub_1000BA294(&qword_100BC3368);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  v14 = a2 + *(int *)(v8 + 28);
  type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v15 = (char *)sub_10030127C + 4 * byte_100994680[swift_getEnumCaseMultiPayload(v14)];
  __asm { BR              X10 }
}

uint64_t sub_10030127C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10, void *a11, void *__dst, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v38, v42, v43);
  swift_storeEnumTagMultiPayload(v38, v37, v40);
  v44 = v39[8];
  v45 = (void *)(v35 + v44);
  v46 = (const void *)(v36 + v44);
  if (!_s7Weather24LocationCompositionStateOwet_0(v36 + v44, 1, v37))
  {
    v48 = (char *)&loc_100301BD4 + 4 * byte_100994688[swift_getEnumCaseMultiPayload(v46)];
    __asm { BR              X10 }
  }
  v47 = sub_1000BA294(&qword_100BD3108);
  memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  *(_BYTE *)(v35 + v39[9]) = *(_BYTE *)(v36 + v39[9]);
  *(_BYTE *)(v35 + v39[10]) = *(_BYTE *)(v36 + v39[10]);
  v49 = v41[10];
  *(_BYTE *)(v35 + v41[9]) = *(_BYTE *)(v36 + v41[9]);
  v50 = *(_OWORD *)(v36 + v49 + 24);
  *(_OWORD *)(v35 + v49 + 24) = v50;
  (**(void (***)(void))(v50 - 8))();
  v51 = v41[11];
  v52 = (_QWORD *)(v35 + v51);
  v53 = (_QWORD *)(v36 + v51);
  if (*v53)
  {
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
  }
  *(_QWORD *)(v35 + v41[12]) = *(_QWORD *)(v36 + v41[12]);
  return v35;
}

uint64_t sub_10030254C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  int v29;
  int v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_1000B2044(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v11 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v8;
  sub_10006BD8C(v9, v10, v11);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v14 = v13[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for WeatherDescription(0);
  v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v20 = *(_QWORD *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
LABEL_6:
    v21 = sub_1000BA294(&qword_100BC3368);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 24))(v15, v16, v17);
LABEL_7:
  if (a1 != a2)
  {
    v22 = v13[7];
    v23 = a2 + v22;
    sub_1000215BC(a1 + v22, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v24 = (char *)&loc_1003026DC + 4 * byte_100994690[swift_getEnumCaseMultiPayload(v23)];
    __asm { BR              X10 }
  }
  v25 = v13[8];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      v31 = (char *)&loc_100303070 + 4 * byte_100994698[swift_getEnumCaseMultiPayload(v27)];
      __asm { BR              X10 }
    }
    goto LABEL_15;
  }
  if (v30)
  {
    sub_1000215BC((uint64_t)v26, type metadata accessor for ConditionDetailPlatterViewModel.Body);
LABEL_15:
    v32 = sub_1000BA294(&qword_100BD3108);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_18;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v26, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    v33 = (char *)&loc_1003030F4 + 4 * byte_1009946A0[swift_getEnumCaseMultiPayload(v27)];
    __asm { BR              X10 }
  }
LABEL_18:
  *(_BYTE *)(a1 + v13[9]) = *(_BYTE *)(a2 + v13[9]);
  *(_BYTE *)(a1 + v13[10]) = *(_BYTE *)(a2 + v13[10]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  sub_100094D04((_QWORD *)(a1 + a3[10]), (_QWORD *)(a2 + a3[10]));
  v34 = a3[11];
  v35 = (_QWORD *)(a1 + v34);
  v36 = a2 + v34;
  v37 = *(_QWORD *)(a1 + v34);
  v38 = *(_QWORD *)(a2 + v34);
  if (!v37)
  {
    if (v38)
    {
      v41 = *(_QWORD *)(v36 + 8);
      *v35 = v38;
      v35[1] = v41;
      swift_retain();
      goto LABEL_25;
    }
LABEL_24:
    *(_OWORD *)v35 = *(_OWORD *)v36;
    goto LABEL_25;
  }
  if (!v38)
  {
    swift_release(v35[1]);
    goto LABEL_24;
  }
  v39 = *(_QWORD *)(v36 + 8);
  v40 = v35[1];
  *v35 = v38;
  v35[1] = v39;
  swift_retain();
  swift_release(v40);
LABEL_25:
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100304450(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  _OWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  _OWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  char *v185;
  char *v186;
  void *v187;
  char *v188;
  void (*__src)(char *, char *, uint64_t);
  char *__srca;
  uint64_t v191;
  _OWORD *v192;
  void (*v193)(char *, char *, uint64_t);
  uint64_t v194;
  void *v195;
  int *v196;
  void *v197;
  char *v198;
  int *v199;
  int *v200;
  uint64_t v201;
  int *v202;
  int *v203;
  void *v204;
  char *v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int *__dst;
  int *__dsta;
  char *__dstb;
  int *__dstc;
  int *__dstd;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v7 = v6[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for WeatherDescription(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC3368);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = v6[7];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v14))
  {
    case 0u:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v13, v14, v10);
      v16 = v13;
      v17 = v15;
      v18 = 0;
      goto LABEL_48;
    case 2u:
      v19 = type metadata accessor for AttributedString(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v13, v14, v19);
      v16 = v13;
      v17 = v15;
      v18 = 2;
      goto LABEL_48;
    case 3u:
      v20 = sub_1000BA294(&qword_100BD30F8);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
      v16 = v13;
      v17 = v15;
      v18 = 3;
      goto LABEL_48;
    case 4u:
      v203 = v6;
      __dst = a3;
      v21 = v14[1];
      *v13 = *v14;
      v13[1] = v21;
      v22 = type metadata accessor for DetailComponentContainerViewModel(0);
      v23 = *(int *)(v22 + 20);
      v24 = (char *)v13 + v23;
      v25 = (char *)v14 + v23;
      v26 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v25) == 1)
      {
        v191 = v26;
        v195 = (void *)v22;
        v208 = v15;
        *(_OWORD *)v24 = *(_OWORD *)v25;
        v199 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v27 = v199[5];
        v28 = &v24[v27];
        v29 = &v25[v27];
        v30 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
        {
          v31 = sub_1000BA294(&qword_100BD4280);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
        }
        else
        {
          v45 = v29;
          v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
          v46(v28, v45, v30);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
          v32 = v46;
        }
        *(_OWORD *)&v24[v199[6]] = *(_OWORD *)&v25[v199[6]];
        __src = v32;
        v32(&v24[v199[7]], &v25[v199[7]], v30);
        v47 = v199[8];
        v48 = &v24[v47];
        v49 = &v25[v47];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v47], 1, v30))
        {
          v50 = sub_1000BA294(&qword_100BD4280);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          __src(v48, v49, v30);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v30);
        }
        v6 = v203;
        v15 = v208;
        v22 = (uint64_t)v195;
        v24[v199[9]] = v25[v199[9]];
        swift_storeEnumTagMultiPayload(v24, v191, 1);
        a3 = __dst;
      }
      else
      {
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        a3 = __dst;
        v6 = v203;
      }
      v56 = *(int *)(v22 + 24);
      v57 = (char *)v13 + v56;
      v58 = (char *)v14 + v56;
      v59 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
      {
        v60 = sub_1000BA294(&qword_100BD3100);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        v61 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v57, v58, v61);
        v62 = sub_1000BA294(&qword_100BC5FE8);
        v57[*(int *)(v62 + 48)] = v58[*(int *)(v62 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
      }
      v16 = v13;
      v17 = v15;
      v18 = 4;
      goto LABEL_48;
    case 6u:
      v33 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v13, v14, v33);
      v16 = v13;
      v17 = v15;
      v18 = 6;
      goto LABEL_48;
    case 7u:
      v34 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      if (swift_getEnumCaseMultiPayload(v14) == 1)
      {
        v204 = (void *)v34;
        v209 = v15;
        *v13 = *v14;
        v35 = type metadata accessor for ConditionDetailMapViewModel(0);
        v36 = *(int *)(v35 + 20);
        v37 = (char *)v13 + v36;
        v38 = (char *)v14 + v36;
        v39 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        v200 = (int *)v35;
        v40 = *(int *)(v35 + 24);
        v41 = (_OWORD *)((char *)v13 + v40);
        v42 = (_OWORD *)((char *)v14 + v40);
        v43 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
        {
          v44 = sub_1000BA294(&qword_100BC3460);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          __dsta = a3;
          *v41 = *v42;
          v192 = v41;
          v196 = (int *)v43;
          v51 = *(int *)(v43 + 20);
          v52 = (char *)v41 + v51;
          v53 = (char *)v42 + v51;
          v54 = type metadata accessor for Locale(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
          {
            v55 = sub_1000BA294(&qword_100BC3340);
            memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
          }
          v63 = v196[6];
          v64 = (char *)v192 + v63;
          v65 = (char *)v42 + v63;
          v66 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
          v67 = v196[7];
          v68 = (char *)v192 + v67;
          v69 = (char *)v42 + v67;
          v70 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
          {
            v71 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            v72 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v68, v69, v72);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
          }
          v73 = v196[8];
          v74 = (char *)v192 + v73;
          v75 = (char *)v42 + v73;
          v76 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v75) == 1)
          {
            v77 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v74, v75, v77);
            swift_storeEnumTagMultiPayload(v74, v76, 1);
          }
          else
          {
            memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
          }
          a3 = __dsta;
          v78 = (uint64_t)v196;
          v79 = v196[9];
          __dstb = (char *)v192 + v79;
          v80 = (char *)v42 + v79;
          v81 = type metadata accessor for WeatherDataOverrides(0);
          __srca = v80;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
          {
            v82 = sub_1000BA294(&qword_100BC3350);
            memcpy(__dstb, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
            v83 = (uint64_t)v192;
          }
          else
          {
            v84 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srca, 1, v84))
            {
              v85 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              v86 = __dstb;
              memcpy(__dstb, __srca, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
            }
            else
            {
              v86 = __dstb;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(__dstb, __srca, v84);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v84);
            }
            v87 = *(int *)(v81 + 20);
            v186 = &v86[v87];
            v88 = &__srca[v87];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srca[v87], 1, v84))
            {
              v89 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v186, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v186, v88, v84);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v84);
            }
            v83 = (uint64_t)v192;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v81);
            v78 = (uint64_t)v196;
          }
          _s7Weather24LocationCompositionStateOwst_0(v83, 0, 1, v78);
        }
        *(_OWORD *)((char *)v13 + v200[7]) = *(_OWORD *)((char *)v14 + v200[7]);
        v90 = v200[8];
        v91 = (char *)v13 + v90;
        v92 = (char *)v14 + v90;
        v93 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
        *((_BYTE *)v13 + v200[9]) = *((_BYTE *)v14 + v200[9]);
        swift_storeEnumTagMultiPayload(v13, v204, 1);
        v15 = v209;
      }
      else
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      v16 = v13;
      v17 = v15;
      v18 = 7;
LABEL_48:
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      break;
    default:
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      break;
  }
  v94 = v6[8];
  v95 = (_OWORD *)(a1 + v94);
  v96 = (_OWORD *)(a2 + v94);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v94, 1, v15))
  {
    v97 = sub_1000BA294(&qword_100BD3108);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v96))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v95, v96, v10);
        v98 = v95;
        v99 = v15;
        v100 = 0;
        goto LABEL_95;
      case 2u:
        v101 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v95, v96, v101);
        v98 = v95;
        v99 = v15;
        v100 = 2;
        goto LABEL_95;
      case 3u:
        v102 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v95, v96, v102);
        v98 = v95;
        v99 = v15;
        v100 = 3;
        goto LABEL_95;
      case 4u:
        __dstc = a3;
        v103 = v96[1];
        *v95 = *v96;
        v95[1] = v103;
        v104 = type metadata accessor for DetailComponentContainerViewModel(0);
        v105 = *(int *)(v104 + 20);
        v106 = (char *)v95 + v105;
        v107 = (char *)v96 + v105;
        v108 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v107) == 1)
        {
          v197 = (void *)v104;
          v201 = v108;
          v210 = v15;
          *(_OWORD *)v106 = *(_OWORD *)v107;
          v109 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v110 = v109[5];
          v205 = &v106[v110];
          v111 = &v107[v110];
          v112 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
          {
            v113 = sub_1000BA294(&qword_100BD4280);
            memcpy(v205, v111, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
            v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32);
          }
          else
          {
            v127 = v111;
            v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32);
            v114(v205, v127, v112);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v205, 0, 1, v112);
          }
          *(_OWORD *)&v106[v109[6]] = *(_OWORD *)&v107[v109[6]];
          v193 = v114;
          v114(&v106[v109[7]], &v107[v109[7]], v112);
          v128 = v109[8];
          v206 = &v106[v128];
          v129 = &v107[v128];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v107[v128], 1, v112))
          {
            v130 = sub_1000BA294(&qword_100BD4280);
            memcpy(v206, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          }
          else
          {
            v193(v206, v129, v112);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v112);
          }
          v15 = v210;
          v104 = (uint64_t)v197;
          v106[v109[9]] = v107[v109[9]];
          swift_storeEnumTagMultiPayload(v106, v201, 1);
        }
        else
        {
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        a3 = __dstc;
        v136 = *(int *)(v104 + 24);
        v137 = (char *)v95 + v136;
        v138 = (char *)v96 + v136;
        v139 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v138, 1, v139))
        {
          v140 = sub_1000BA294(&qword_100BD3100);
          memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          v141 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v137, v138, v141);
          v142 = sub_1000BA294(&qword_100BC5FE8);
          v137[*(int *)(v142 + 48)] = v138[*(int *)(v142 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v137, 0, 1, v139);
        }
        v98 = v95;
        v99 = v15;
        v100 = 4;
        goto LABEL_95;
      case 6u:
        v115 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v95, v96, v115);
        v98 = v95;
        v99 = v15;
        v100 = 6;
        goto LABEL_95;
      case 7u:
        v116 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v96) == 1)
        {
          v211 = v15;
          __dstd = a3;
          *v95 = *v96;
          v117 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
          v118 = v117[5];
          v119 = (char *)v95 + v118;
          v120 = (char *)v96 + v118;
          v121 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
          v122 = v117[6];
          v123 = (_OWORD *)((char *)v95 + v122);
          v124 = (_OWORD *)((char *)v96 + v122);
          v125 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
          {
            v126 = sub_1000BA294(&qword_100BC3460);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            a3 = __dstd;
          }
          else
          {
            v194 = v116;
            *v123 = *v124;
            v202 = (int *)v125;
            v207 = (char *)v123;
            v131 = *(int *)(v125 + 20);
            v132 = (char *)v123 + v131;
            v133 = (char *)v124 + v131;
            v134 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
            {
              v135 = sub_1000BA294(&qword_100BC3340);
              memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
            }
            v143 = v202[6];
            v144 = &v207[v143];
            v145 = (char *)v124 + v143;
            v146 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
            v147 = v202[7];
            v148 = &v207[v147];
            v149 = (char *)v124 + v147;
            v150 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
            {
              v151 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
            }
            else
            {
              v152 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v148, v149, v152);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v150);
            }
            v153 = v202[8];
            v154 = &v207[v153];
            v155 = (char *)v124 + v153;
            v156 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v155) == 1)
            {
              v157 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v154, v155, v157);
              swift_storeEnumTagMultiPayload(v154, v156, 1);
            }
            else
            {
              memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
            }
            v159 = (uint64_t)v202;
            v158 = (uint64_t)v207;
            v160 = v202[9];
            v198 = &v207[v160];
            v161 = (uint64_t)v124 + v160;
            v162 = type metadata accessor for WeatherDataOverrides(0);
            v188 = (char *)v161;
            v163 = _s7Weather24LocationCompositionStateOwet_0(v161, 1, v162);
            v116 = v194;
            if (v163)
            {
              v164 = sub_1000BA294(&qword_100BC3350);
              memcpy(v198, v188, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
              a3 = __dstd;
            }
            else
            {
              v187 = (void *)v162;
              v165 = type metadata accessor for Date(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, v165))
              {
                v166 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                v167 = v198;
                memcpy(v198, v188, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
              }
              else
              {
                v167 = v198;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v198, v188, v165);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v198, 0, 1, v165);
              }
              v168 = *(int *)(v162 + 20);
              v185 = &v167[v168];
              v169 = &v188[v168];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v188[v168], 1, v165))
              {
                v170 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v185, v169, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v185, v169, v165);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, v165);
              }
              a3 = __dstd;
              v158 = (uint64_t)v207;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v198, 0, 1, (uint64_t)v187);
              v159 = (uint64_t)v202;
            }
            _s7Weather24LocationCompositionStateOwst_0(v158, 0, 1, v159);
          }
          *(_OWORD *)((char *)v95 + v117[7]) = *(_OWORD *)((char *)v96 + v117[7]);
          v171 = v117[8];
          v172 = (char *)v95 + v171;
          v173 = (char *)v96 + v171;
          v174 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v172, v173, v174);
          *((_BYTE *)v95 + v117[9]) = *((_BYTE *)v96 + v117[9]);
          swift_storeEnumTagMultiPayload(v95, v116, 1);
          v15 = v211;
        }
        else
        {
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        v98 = v95;
        v99 = v15;
        v100 = 7;
LABEL_95:
        swift_storeEnumTagMultiPayload(v98, v99, v100);
        break;
      default:
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v15);
  }
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v175 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v176 = a1 + v175;
  v177 = a2 + v175;
  v178 = *(_OWORD *)(v177 + 16);
  *(_OWORD *)v176 = *(_OWORD *)v177;
  *(_OWORD *)(v176 + 16) = v178;
  *(_QWORD *)(v176 + 32) = *(_QWORD *)(v177 + 32);
  v179 = a3[11];
  v180 = (_QWORD *)(a1 + v179);
  v181 = (uint64_t *)(a2 + v179);
  v182 = *v181;
  if (*v181)
  {
    v183 = v181[1];
    *v180 = v182;
    v180[1] = v183;
  }
  else
  {
    *(_OWORD *)v180 = *(_OWORD *)v181;
  }
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100305620(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *v102;
  _OWORD *v103;
  uint64_t v104;
  int v105;
  int v106;
  _OWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _OWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  int *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD *v135;
  _OWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  uint64_t v153;
  uint64_t v154;
  int *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _OWORD *v161;
  _OWORD *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  __int128 v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v275;
  void *v276;
  char *v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  void (*__src)(char *, char *, uint64_t);
  char *__srcd;
  char *__srca;
  char *__srcb;
  char *__srcc;
  uint64_t v287;
  _OWORD *v288;
  void *v289;
  int *v290;
  char *v291;
  void (*v292)(char *, char *, uint64_t);
  void *v293;
  void (*v294)(char *, char *, uint64_t);
  void *v295;
  void *v296;
  void *v297;
  char *v298;
  char *v299;
  char *__dst;
  int *__dsta;
  char *__dstb;
  void *__dstc;
  void *__dstd;
  int *__dste;
  int *__dstf;
  int *v307;
  void *v308;
  int *v309;
  char *v310;
  char *v311;
  char *v312;
  char *v313;
  int *v314;
  int *v315;
  int *v316;
  int *v317;
  int *v318;
  int *v319;
  int *v320;
  int *v321;
  int *v322;
  int *v323;
  int *v324;
  int *v325;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_10006BD8C(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v12 = v11[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for WeatherDescription(0);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_1000BA294(&qword_100BC3368);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  if (a1 != a2)
  {
    v20 = v11[7];
    v21 = (_OWORD *)(a1 + v20);
    v22 = (_OWORD *)(a2 + v20);
    sub_1000215BC(a1 + v20, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    v23 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload(v22))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v21, v22, v15);
        v24 = v21;
        v25 = v23;
        v26 = 0;
        goto LABEL_53;
      case 2u:
        v27 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v21, v22, v27);
        v24 = v21;
        v25 = v23;
        v26 = 2;
        goto LABEL_53;
      case 3u:
        v28 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v21, v22, v28);
        v24 = v21;
        v25 = v23;
        v26 = 3;
        goto LABEL_53;
      case 4u:
        v314 = a3;
        v320 = v11;
        v29 = v22[1];
        *v21 = *v22;
        v21[1] = v29;
        v30 = type metadata accessor for DetailComponentContainerViewModel(0);
        v31 = *(int *)(v30 + 20);
        v32 = (char *)v21 + v31;
        v33 = (char *)v22 + v31;
        v34 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v33) == 1)
        {
          v287 = v34;
          v289 = (void *)v30;
          *(_OWORD *)v32 = *(_OWORD *)v33;
          v35 = type metadata accessor for NewsArticleComponentContentViewModel(0);
          v36 = *(int *)(v35 + 20);
          __dst = &v32[v36];
          v307 = (int *)v35;
          v37 = &v33[v36];
          v38 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
          {
            v39 = sub_1000BA294(&qword_100BD4280);
            memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32);
          }
          else
          {
            v53 = v37;
            v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32);
            v54(__dst, v53, v38);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v38);
            v40 = v54;
          }
          *(_OWORD *)&v32[v307[6]] = *(_OWORD *)&v33[v307[6]];
          __src = v40;
          v40(&v32[v307[7]], &v33[v307[7]], v38);
          v55 = v307[8];
          __dstb = &v32[v55];
          v56 = &v33[v55];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v33[v55], 1, v38))
          {
            v57 = sub_1000BA294(&qword_100BD4280);
            memcpy(__dstb, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            __src(__dstb, v56, v38);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v38);
          }
          v30 = (uint64_t)v289;
          v32[v307[9]] = v33[v307[9]];
          swift_storeEnumTagMultiPayload(v32, v287, 1);
        }
        else
        {
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        v63 = *(int *)(v30 + 24);
        v64 = (char *)v21 + v63;
        v65 = (char *)v22 + v63;
        v66 = type metadata accessor for DetailComponentAction(0);
        a3 = v314;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
        {
          v67 = sub_1000BA294(&qword_100BD3100);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          v68 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v64, v65, v68);
          v69 = sub_1000BA294(&qword_100BC5FE8);
          v64[*(int *)(v69 + 48)] = v65[*(int *)(v69 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
        }
        v11 = v320;
        v24 = v21;
        v25 = v23;
        v26 = 4;
        goto LABEL_53;
      case 6u:
        v41 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v21, v22, v41);
        v24 = v21;
        v25 = v23;
        v26 = 6;
        goto LABEL_53;
      case 7u:
        v42 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v22) == 1)
        {
          v308 = (void *)v42;
          v321 = v11;
          *v21 = *v22;
          v43 = type metadata accessor for ConditionDetailMapViewModel(0);
          v44 = *(int *)(v43 + 20);
          v45 = (char *)v21 + v44;
          v46 = (char *)v22 + v44;
          v47 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
          __dsta = (int *)v43;
          v48 = *(int *)(v43 + 24);
          v49 = (_OWORD *)((char *)v21 + v48);
          v50 = (_OWORD *)((char *)v22 + v48);
          v51 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
          {
            v52 = sub_1000BA294(&qword_100BC3460);
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
            v11 = v321;
          }
          else
          {
            v315 = a3;
            *v49 = *v50;
            v288 = v49;
            v290 = (int *)v51;
            v58 = *(int *)(v51 + 20);
            v59 = (char *)v49 + v58;
            v60 = (char *)v50 + v58;
            v61 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
            {
              v62 = sub_1000BA294(&qword_100BC3340);
              memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
            }
            v70 = v290[6];
            __srcd = (char *)v288 + v70;
            v71 = (char *)v50 + v70;
            v72 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(__srcd, v71, v72);
            v73 = v290[7];
            v74 = (char *)v288 + v73;
            v75 = (char *)v50 + v73;
            v76 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
            {
              v77 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            }
            else
            {
              v78 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v74, v75, v78);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
            }
            v79 = v290[8];
            v80 = (char *)v288 + v79;
            v81 = (char *)v50 + v79;
            v82 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v81) == 1)
            {
              v83 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v80, v81, v83);
              swift_storeEnumTagMultiPayload(v80, v82, 1);
            }
            else
            {
              memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
            }
            v84 = (uint64_t)v288;
            v85 = (uint64_t)v290;
            v86 = v290[9];
            __srca = (char *)v288 + v86;
            v87 = (uint64_t)v50 + v86;
            v88 = type metadata accessor for WeatherDataOverrides(0);
            v279 = (char *)v87;
            v89 = _s7Weather24LocationCompositionStateOwet_0(v87, 1, v88);
            a3 = v315;
            if (v89)
            {
              v90 = sub_1000BA294(&qword_100BC3350);
              memcpy(__srca, v279, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
              v11 = v321;
            }
            else
            {
              v276 = (void *)v88;
              v91 = type metadata accessor for Date(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v91))
              {
                v92 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                v93 = __srca;
                memcpy(__srca, v279, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
              }
              else
              {
                v93 = __srca;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(__srca, v279, v91);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srca, 0, 1, v91);
              }
              v94 = *(int *)(v88 + 20);
              v275 = &v93[v94];
              v95 = &v279[v94];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v279[v94], 1, v91))
              {
                v96 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v275, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v275, v95, v91);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v275, 0, 1, v91);
              }
              v11 = v321;
              v84 = (uint64_t)v288;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srca, 0, 1, (uint64_t)v276);
              v85 = (uint64_t)v290;
            }
            _s7Weather24LocationCompositionStateOwst_0(v84, 0, 1, v85);
          }
          *(_OWORD *)((char *)v21 + __dsta[7]) = *(_OWORD *)((char *)v22 + __dsta[7]);
          v97 = __dsta[8];
          v98 = (char *)v21 + v97;
          v99 = (char *)v22 + v97;
          v100 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
          *((_BYTE *)v21 + __dsta[9]) = *((_BYTE *)v22 + __dsta[9]);
          swift_storeEnumTagMultiPayload(v21, v308, 1);
        }
        else
        {
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        v24 = v21;
        v25 = v23;
        v26 = 7;
LABEL_53:
        swift_storeEnumTagMultiPayload(v24, v25, v26);
        break;
      default:
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        break;
    }
  }
  v101 = v11[8];
  v102 = (_OWORD *)(a1 + v101);
  v103 = (_OWORD *)(a2 + v101);
  v104 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v104);
  v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104);
  if (v105)
  {
    if (!v106)
    {
      switch(swift_getEnumCaseMultiPayload(v103))
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v102, v103, v15);
          v107 = v102;
          v108 = v104;
          v109 = 0;
          goto LABEL_139;
        case 2u:
          v114 = type metadata accessor for AttributedString(0);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v102, v103, v114);
          v107 = v102;
          v108 = v104;
          v109 = 2;
          goto LABEL_139;
        case 3u:
          v115 = sub_1000BA294(&qword_100BD30F8);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v102, v103, v115);
          v107 = v102;
          v108 = v104;
          v109 = 3;
          goto LABEL_139;
        case 4u:
          v316 = a3;
          v322 = v11;
          v116 = v103[1];
          *v102 = *v103;
          v102[1] = v116;
          v117 = type metadata accessor for DetailComponentContainerViewModel(0);
          v118 = *(int *)(v117 + 20);
          v119 = (char *)v102 + v118;
          v120 = (char *)v103 + v118;
          v121 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload(v120) == 1)
          {
            v296 = (void *)v121;
            *(_OWORD *)v119 = *(_OWORD *)v120;
            v309 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            v122 = v309[5];
            v291 = &v119[v122];
            v123 = &v120[v122];
            v124 = type metadata accessor for URL(0);
            __dstc = (void *)v117;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v124))
            {
              v125 = sub_1000BA294(&qword_100BD4280);
              memcpy(v291, v123, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
              v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32);
            }
            else
            {
              v165 = v123;
              v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32);
              v126(v291, v165, v124);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v291, 0, 1, v124);
            }
            *(_OWORD *)&v119[v309[6]] = *(_OWORD *)&v120[v309[6]];
            v292 = v126;
            v126(&v119[v309[7]], &v120[v309[7]], v124);
            v166 = v309[8];
            v167 = &v119[v166];
            v168 = &v120[v166];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v120[v166], 1, v124))
            {
              v169 = sub_1000BA294(&qword_100BD4280);
              memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
            }
            else
            {
              v292(v167, v168, v124);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v124);
            }
            v119[v309[9]] = v120[v309[9]];
            swift_storeEnumTagMultiPayload(v119, v296, 1);
            v117 = (uint64_t)__dstc;
          }
          else
          {
            memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          v175 = *(int *)(v117 + 24);
          v176 = (char *)v102 + v175;
          v177 = (char *)v103 + v175;
          v178 = type metadata accessor for DetailComponentAction(0);
          a3 = v316;
          v11 = v322;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
          {
            v179 = sub_1000BA294(&qword_100BD3100);
            memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
          }
          else
          {
            v180 = type metadata accessor for URL(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v176, v177, v180);
            v181 = sub_1000BA294(&qword_100BC5FE8);
            v176[*(int *)(v181 + 48)] = v177[*(int *)(v181 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v178);
          }
          v107 = v102;
          v108 = v104;
          v109 = 4;
          goto LABEL_139;
        case 6u:
          v127 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v102, v103, v127);
          v107 = v102;
          v108 = v104;
          v109 = 6;
          goto LABEL_139;
        case 7u:
          v128 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
          if (swift_getEnumCaseMultiPayload(v103) == 1)
          {
            v317 = a3;
            v323 = v11;
            *v102 = *v103;
            v129 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
            v130 = v129[5];
            v131 = (char *)v102 + v130;
            v132 = (char *)v103 + v130;
            v133 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v131, v132, v133);
            v134 = v129[6];
            v135 = (_OWORD *)((char *)v102 + v134);
            v136 = (_OWORD *)((char *)v103 + v134);
            v137 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
            {
              v138 = sub_1000BA294(&qword_100BC3460);
              memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
              a3 = v317;
            }
            else
            {
              v293 = (void *)v128;
              *v135 = *v136;
              __dste = (int *)v137;
              v311 = (char *)v135;
              v170 = *(int *)(v137 + 20);
              v171 = (char *)v135 + v170;
              v172 = (char *)v136 + v170;
              v173 = type metadata accessor for Locale(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v173))
              {
                v174 = sub_1000BA294(&qword_100BC3340);
                memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v171, v172, v173);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v173);
              }
              v191 = __dste[6];
              v192 = &v311[v191];
              v193 = (char *)v136 + v191;
              v194 = type metadata accessor for WeatherDataModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v192, v193, v194);
              v195 = __dste[7];
              v196 = &v311[v195];
              v197 = (char *)v136 + v195;
              v198 = sub_1000BA294(&qword_100BC3348);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198))
              {
                v199 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
              }
              else
              {
                v207 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v196, v197, v207);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v198);
              }
              v208 = __dste[8];
              v209 = &v311[v208];
              v210 = (char *)v136 + v208;
              v211 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload(v210) == 1)
              {
                v212 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v209, v210, v212);
                swift_storeEnumTagMultiPayload(v209, v211, 1);
              }
              else
              {
                memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
              }
              v214 = (uint64_t)__dste;
              v213 = (uint64_t)v311;
              v215 = __dste[9];
              v298 = &v311[v215];
              v216 = (uint64_t)v136 + v215;
              v217 = type metadata accessor for WeatherDataOverrides(0);
              __srcb = (char *)v216;
              v218 = _s7Weather24LocationCompositionStateOwet_0(v216, 1, v217);
              v128 = (uint64_t)v293;
              if (v218)
              {
                v219 = sub_1000BA294(&qword_100BC3350);
                memcpy(v298, __srcb, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
                a3 = v317;
              }
              else
              {
                v280 = v217;
                v220 = type metadata accessor for Date(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srcb, 1, v220))
                {
                  v221 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  v222 = v298;
                  memcpy(v298, __srcb, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
                }
                else
                {
                  v222 = v298;
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 32))(v298, __srcb, v220);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 0, 1, v220);
                }
                v232 = *(int *)(v217 + 20);
                v277 = &v222[v232];
                v233 = &__srcb[v232];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srcb[v232], 1, v220))
                {
                  v234 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v277, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 32))(v277, v233, v220);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v277, 0, 1, v220);
                }
                v213 = (uint64_t)v311;
                a3 = v317;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 0, 1, v280);
                v214 = (uint64_t)__dste;
              }
              _s7Weather24LocationCompositionStateOwst_0(v213, 0, 1, v214);
            }
            *(_OWORD *)((char *)v102 + v129[7]) = *(_OWORD *)((char *)v103 + v129[7]);
            v248 = v129[8];
            v249 = (char *)v102 + v248;
            v250 = (char *)v103 + v248;
            v251 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 32))(v249, v250, v251);
            *((_BYTE *)v102 + v129[9]) = *((_BYTE *)v103 + v129[9]);
            swift_storeEnumTagMultiPayload(v102, v128, 1);
            v11 = v323;
          }
          else
          {
            memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          }
          v107 = v102;
          v108 = v104;
          v109 = 7;
LABEL_139:
          swift_storeEnumTagMultiPayload(v107, v108, v109);
          break;
        default:
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
      goto LABEL_152;
    }
    goto LABEL_60;
  }
  if (v106)
  {
    sub_1000215BC((uint64_t)v102, type metadata accessor for ConditionDetailPlatterViewModel.Body);
LABEL_60:
    v110 = *(_QWORD *)(sub_1000BA294(&qword_100BD3108) - 8);
LABEL_61:
    memcpy(v102, v103, *(_QWORD *)(v110 + 64));
    goto LABEL_152;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v102, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    switch(swift_getEnumCaseMultiPayload(v103))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v102, v103, v15);
        v111 = v102;
        v112 = v104;
        v113 = 0;
        break;
      case 2u:
        v139 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v102, v103, v139);
        v111 = v102;
        v112 = v104;
        v113 = 2;
        break;
      case 3u:
        v140 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v102, v103, v140);
        v111 = v102;
        v112 = v104;
        v113 = 3;
        break;
      case 4u:
        v318 = a3;
        v324 = v11;
        v141 = v103[1];
        *v102 = *v103;
        v102[1] = v141;
        v142 = type metadata accessor for DetailComponentContainerViewModel(0);
        v143 = *(int *)(v142 + 20);
        v144 = (char *)v102 + v143;
        v145 = (char *)v103 + v143;
        v146 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v145) == 1)
        {
          v297 = (void *)v142;
          __dstd = (void *)v146;
          *(_OWORD *)v144 = *(_OWORD *)v145;
          v147 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v148 = v147[5];
          v310 = &v144[v148];
          v149 = &v145[v148];
          v150 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
          {
            v151 = sub_1000BA294(&qword_100BD4280);
            memcpy(v310, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
            v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32);
          }
          else
          {
            v182 = v149;
            v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32);
            v152(v310, v182, v150);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v310, 0, 1, v150);
          }
          *(_OWORD *)&v144[v147[6]] = *(_OWORD *)&v145[v147[6]];
          v294 = v152;
          v152(&v144[v147[7]], &v145[v147[7]], v150);
          v183 = v147[8];
          v312 = &v144[v183];
          v184 = &v145[v183];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v145[v183], 1, v150))
          {
            v185 = sub_1000BA294(&qword_100BD4280);
            memcpy(v312, v184, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
          }
          else
          {
            v294(v312, v184, v150);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v312, 0, 1, v150);
          }
          v142 = (uint64_t)v297;
          v144[v147[9]] = v145[v147[9]];
          swift_storeEnumTagMultiPayload(v144, __dstd, 1);
        }
        else
        {
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        v200 = *(int *)(v142 + 24);
        v201 = (char *)v102 + v200;
        v202 = (char *)v103 + v200;
        v203 = type metadata accessor for DetailComponentAction(0);
        a3 = v318;
        v11 = v324;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, v203))
        {
          v204 = sub_1000BA294(&qword_100BD3100);
          memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
        }
        else
        {
          v205 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v201, v202, v205);
          v206 = sub_1000BA294(&qword_100BC5FE8);
          v201[*(int *)(v206 + 48)] = v202[*(int *)(v206 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v201, 0, 1, v203);
        }
        v111 = v102;
        v112 = v104;
        v113 = 4;
        break;
      case 6u:
        v153 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v102, v103, v153);
        v111 = v102;
        v112 = v104;
        v113 = 6;
        break;
      case 7u:
        v154 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v103) == 1)
        {
          v319 = a3;
          v325 = v11;
          *v102 = *v103;
          v155 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
          v156 = v155[5];
          v157 = (char *)v102 + v156;
          v158 = (char *)v103 + v156;
          v159 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
          v160 = v155[6];
          v161 = (_OWORD *)((char *)v102 + v160);
          v162 = (_OWORD *)((char *)v103 + v160);
          v163 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v163))
          {
            v164 = sub_1000BA294(&qword_100BC3460);
            memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
            a3 = v319;
          }
          else
          {
            v295 = (void *)v154;
            *v161 = *v162;
            __dstf = (int *)v163;
            v313 = (char *)v161;
            v186 = *(int *)(v163 + 20);
            v187 = (char *)v161 + v186;
            v188 = (char *)v162 + v186;
            v189 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, v189))
            {
              v190 = sub_1000BA294(&qword_100BC3340);
              memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v187, v188, v189);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, v189);
            }
            v223 = __dstf[6];
            v224 = &v313[v223];
            v225 = (char *)v162 + v223;
            v226 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v224, v225, v226);
            v227 = __dstf[7];
            v228 = &v313[v227];
            v229 = (char *)v162 + v227;
            v230 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v229, 1, v230))
            {
              v231 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
            }
            else
            {
              v235 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v228, v229, v235);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, v230);
            }
            v236 = __dstf[8];
            v237 = &v313[v236];
            v238 = (char *)v162 + v236;
            v239 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v238) == 1)
            {
              v240 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v237, v238, v240);
              swift_storeEnumTagMultiPayload(v237, v239, 1);
            }
            else
            {
              memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
            }
            v242 = (uint64_t)__dstf;
            v241 = (uint64_t)v313;
            v243 = __dstf[9];
            v299 = &v313[v243];
            v244 = (uint64_t)v162 + v243;
            v245 = type metadata accessor for WeatherDataOverrides(0);
            __srcc = (char *)v244;
            v246 = _s7Weather24LocationCompositionStateOwet_0(v244, 1, v245);
            v154 = (uint64_t)v295;
            if (v246)
            {
              v247 = sub_1000BA294(&qword_100BC3350);
              memcpy(v299, __srcc, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
              a3 = v319;
            }
            else
            {
              v281 = v245;
              v252 = type metadata accessor for Date(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srcc, 1, v252))
              {
                v253 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                v254 = v299;
                memcpy(v299, __srcc, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
              }
              else
              {
                v254 = v299;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v299, __srcc, v252);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v252);
              }
              v255 = *(int *)(v245 + 20);
              v278 = &v254[v255];
              v256 = &__srcc[v255];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srcc[v255], 1, v252))
              {
                v257 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v278, v256, *(_QWORD *)(*(_QWORD *)(v257 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v278, v256, v252);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v252);
              }
              v241 = (uint64_t)v313;
              a3 = v319;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v281);
              v242 = (uint64_t)__dstf;
            }
            _s7Weather24LocationCompositionStateOwst_0(v241, 0, 1, v242);
          }
          *(_OWORD *)((char *)v102 + v155[7]) = *(_OWORD *)((char *)v103 + v155[7]);
          v258 = v155[8];
          v259 = (char *)v102 + v258;
          v260 = (char *)v103 + v258;
          v261 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(v259, v260, v261);
          *((_BYTE *)v102 + v155[9]) = *((_BYTE *)v103 + v155[9]);
          swift_storeEnumTagMultiPayload(v102, v154, 1);
          v11 = v325;
        }
        else
        {
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        v111 = v102;
        v112 = v104;
        v113 = 7;
        break;
      default:
        v110 = *(_QWORD *)(v104 - 8);
        goto LABEL_61;
    }
    swift_storeEnumTagMultiPayload(v111, v112, v113);
  }
LABEL_152:
  *(_BYTE *)(a1 + v11[9]) = *(_BYTE *)(a2 + v11[9]);
  *(_BYTE *)(a1 + v11[10]) = *(_BYTE *)(a2 + v11[10]);
  v262 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v263 = a1 + v262;
  v264 = a2 + v262;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + v262));
  *(_QWORD *)(v263 + 32) = *(_QWORD *)(v264 + 32);
  v265 = *(_OWORD *)(v264 + 16);
  *(_OWORD *)v263 = *(_OWORD *)v264;
  *(_OWORD *)(v263 + 16) = v265;
  v266 = a3[11];
  v267 = (_QWORD *)(a1 + v266);
  v268 = a2 + v266;
  v269 = *(_QWORD *)(a1 + v266);
  v270 = *(_QWORD *)(a2 + v266);
  if (!v269)
  {
    if (v270)
    {
      v273 = *(_QWORD *)(v268 + 8);
      *v267 = v270;
      v267[1] = v273;
      goto LABEL_159;
    }
LABEL_158:
    *(_OWORD *)v267 = *(_OWORD *)v268;
    goto LABEL_159;
  }
  if (!v270)
  {
    swift_release(v267[1]);
    goto LABEL_158;
  }
  v271 = *(_QWORD *)(v268 + 8);
  v272 = v267[1];
  *v267 = v270;
  v267[1] = v271;
  swift_release(v272);
LABEL_159:
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1003070CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003070D8);
}

uint64_t sub_1003070D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1000B3B70();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_100307150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030715C);
}

uint64_t sub_10030715C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1000B3B70();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ConditionDetailPlatterView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConditionDetailPlatterView);
}

uint64_t sub_1003071DC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB0A7C, 1);
}

uint64_t sub_100307210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char v97[16];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *v110;

  v90 = a1;
  v95 = a2;
  v81 = type metadata accessor for AutomationInfo(0);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  sub_10009511C(v4);
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v93 = *(_QWORD *)(v5 - 8);
  v94 = (char *)v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v92 = v7;
  sub_100075EB0(&qword_100BD6CF0);
  v8 = sub_100075EB0(&qword_100BD6CF8);
  sub_100075EB0(&qword_100BD6D00);
  sub_100075EB0(&qword_100BD6D08);
  v88 = *(_QWORD *)(a1 + 16);
  v9 = type metadata accessor for Optional(255, v88);
  v10 = sub_1000DF564(v9);
  v11 = sub_1000D9548(v10);
  v12 = type metadata accessor for _ConditionalContent(255, v8, v11);
  sub_1000C43AC(v12);
  v13 = sub_100075EB0(&qword_100BD6D10);
  v14 = sub_1000D9CBC(v13);
  type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v15 = sub_100075EB0(&qword_100BD6D18);
  v16 = sub_1000C381C(v15);
  v87 = sub_1000AE86C(v16);
  v83 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for TupleView<A>);
  v17 = type metadata accessor for VStack(0, v87, v83);
  sub_1000BA8CC(*(_QWORD *)(v17 - 8));
  __chkstk_darwin(v18);
  v20 = (char *)v78 - v19;
  v21 = type metadata accessor for ModifiedContent(0, v17, &type metadata for _FlexFrameLayout);
  sub_1000BA8CC(*(_QWORD *)(v21 - 8));
  __chkstk_darwin(v22);
  v24 = (char *)v78 - v23;
  v25 = type metadata accessor for ModifiedContent(0, v21, &type metadata for _TransactionModifier);
  sub_1000BA8CC(*(_QWORD *)(v25 - 8));
  __chkstk_darwin(v26);
  sub_10009511C((uint64_t)v78 - v27);
  v28 = sub_100099A04((uint64_t)&protocol conformance descriptor for VStack<A>);
  v109 = v28;
  v110 = &protocol witness table for _FlexFrameLayout;
  v84 = sub_10009D4F0();
  v107 = v84;
  v108 = &protocol witness table for _TransactionModifier;
  v85 = sub_1000CFC5C();
  v105 = v25;
  v106 = v85;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v105, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  sub_1000BA8CC(*(_QWORD *)(OpaqueTypeMetadata2 - 8));
  __chkstk_darwin(v30);
  v32 = (char *)v78 - v31;
  v33 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v34 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v33);
  sub_1000BA8CC(*(_QWORD *)(v34 - 8));
  __chkstk_darwin(v35);
  v37 = (char *)v78 - v36;
  v38 = type metadata accessor for AutomationInfoViewModifier(255);
  v79 = v34;
  v39 = type metadata accessor for ModifiedContent(0, v34, v38);
  v80 = *(_QWORD *)(v39 - 8);
  sub_10009D98C();
  __chkstk_darwin(v40);
  v91 = (char *)v78 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  sub_10009511C((uint64_t)v78 - v43);
  v45 = static HorizontalAlignment.leading.getter(v44);
  v46 = *(_QWORD *)(v90 + 24);
  v98 = v88;
  v99 = v46;
  v100 = v96;
  v47 = VStack.init(alignment:spacing:content:)(v45, 0, 0, sub_10030C280, v97, v87, v83);
  v48 = static Alignment.center.getter(v47);
  v77 = v28;
  v49 = v24;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v48, v50, v17, v77);
  sub_1000988C4();
  v51(v20, v17);
  v52 = v86;
  View.transaction(_:)(sub_100309070, 0, v21, v84);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v49, v21);
  v54 = v92;
  static AccessibilityChildBehavior.contain.getter(v53);
  v55 = v85;
  View.accessibilityElement(children:)(v54, v25, v85);
  (*(void (**)(uint64_t, char *))(v93 + 8))(v54, v94);
  sub_1000988C4();
  v56(v52, v25);
  v105 = v25;
  v106 = v55;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v105, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v94 = v37;
  View.accessibilityRespondsToUserInteraction(_:)(0, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  v58 = v96;
  sub_1000988C4();
  v59(v32, OpaqueTypeMetadata2);
  v60 = *(_QWORD *)(v58 + 32);
  if (v60)
  {
    v61 = *(_QWORD *)(v58 + 24);
    v62 = *(_QWORD *)(v58 + 32);
  }
  else if (*(unsigned __int8 *)(v58 + 16) < 2u || *(_QWORD *)v58 ^ 1 | *(_QWORD *)(v58 + 8))
  {
    v61 = 0;
    v62 = 0xE000000000000000;
  }
  else
  {
    v62 = 0xE400000000000000;
    v61 = 1937204558;
  }
  v63 = (uint64_t)v82;
  v64 = v81;
  v65 = v80;
  v66 = v79;
  v67 = v78[2];
  v68 = v78[1];
  *v82 = v61;
  *(_QWORD *)(v63 + 8) = v62;
  *(_BYTE *)(v63 + 16) = 1;
  swift_storeEnumTagMultiPayload(v63, v64, 2);
  sub_10007A100((uint64_t)&qword_100BC4E48);
  v103 = OpaqueTypeConformance2;
  v104 = v69;
  swift_bridgeObjectRetain(v60);
  v70 = sub_10009D4F0();
  v71 = v91;
  v72 = v94;
  sub_100412BB4(v63, v66, v70);
  sub_1000215BC(v63, type metadata accessor for AutomationInfo);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v72, v66);
  sub_10007A100((uint64_t)&qword_100BC6768);
  v101 = v70;
  v102 = v73;
  v74 = sub_1000C4770((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  sub_1000B2074(v71, v39, v74);
  v75 = *(void (**)(char *, uint64_t))(v65 + 8);
  v75(v71, v39);
  sub_1000B1100(v67, v39, v95);
  return ((uint64_t (*)(uint64_t, uint64_t))v75)(v67, v39);
}

void sub_1003078AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t WitnessTable;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  double v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t (*v182)(uint64_t, uint64_t);
  uint64_t v183;
  _QWORD v184[3];
  _QWORD v185[3];
  _QWORD v186[15];
  char v187[24];
  uint64_t v188;
  char v189;
  uint64_t v190;
  char v191;
  __int128 v192;

  v182 = a3;
  v165 = a4;
  v6 = type metadata accessor for QuaternaryDividerStyle(0);
  v154 = *(_QWORD *)(v6 - 8);
  v155 = v6;
  __chkstk_darwin(v6);
  v152 = (uint64_t)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Divider(0);
  v150 = *(_QWORD *)(v8 - 8);
  v151 = v8;
  __chkstk_darwin(v8);
  v149 = (uint64_t)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD6D20);
  v158 = *(_QWORD *)(v10 - 8);
  v159 = v10;
  __chkstk_darwin(v10);
  v156 = (uint64_t)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1000BA294(&qword_100BD6D28);
  __chkstk_darwin(v153);
  v160 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1000BA294(&qword_100BD6D30);
  __chkstk_darwin(v163);
  v157 = (uint64_t)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1000BA294(&qword_100BD6D18);
  __chkstk_darwin(v175);
  v177 = (uint64_t)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v164 = (uint64_t)&v147 - v16;
  v17 = sub_100075EB0(&qword_100BD6CF8);
  v18 = sub_100075EB0(&qword_100BD6D00);
  v19 = sub_100075EB0(&qword_100BD6D08);
  v20 = a2;
  v166 = type metadata accessor for Optional(255, a2);
  v167 = type metadata accessor for _ConditionalContent(255, v19, v166);
  v168 = type metadata accessor for _ConditionalContent(255, v18, v167);
  v169 = type metadata accessor for _ConditionalContent(255, v17, v168);
  v21 = type metadata accessor for Group(255, v169);
  v22 = sub_100075EB0(&qword_100BD6D10);
  v170 = v21;
  v171 = type metadata accessor for ModifiedContent(255, v21, v22);
  v181 = type metadata accessor for ModifiedContent(0, v171, &type metadata for _PaddingLayout);
  v178 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v180 = (uint64_t)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v179 = (char *)&v147 - v25;
  v26 = sub_1000BA294(&qword_100BC3368);
  __chkstk_darwin(v26);
  v28 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000BA294(&qword_100BD6D38);
  __chkstk_darwin(v29);
  v31 = (char *)&v147 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000BA294(&qword_100BD6D40);
  __chkstk_darwin(v32);
  v34 = (char *)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v161 = (uint64_t)&v147 - v36;
  v37 = sub_1000BA294(&qword_100BD6D48);
  __chkstk_darwin(v37);
  v39 = (char *)&v147 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_1000BA294(&qword_100BD6CF0);
  __chkstk_darwin(v173);
  v174 = (uint64_t)&v147 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v44 = *(_QWORD *)(a1 + 32);
  v176 = v43;
  v172 = v20;
  v162 = (char *)&v147 - v45;
  if (v44)
  {
    v147 = v37;
    v148 = v32;
    v46 = *(_QWORD *)(v43 + 24);
    v47 = v43;
    *(_QWORD *)v31 = static HorizontalAlignment.leading.getter(v42);
    *((_QWORD *)v31 + 1) = 0;
    v31[16] = 0;
    v48 = sub_1000BA294(&qword_100BD6E70);
    sub_100308498(v46, v44, v47, (uint64_t)&v31[*(int *)(v48 + 44)]);
    v49 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    sub_100037768(v47 + *(int *)(v49 + 24), (uint64_t)v28, &qword_100BC3368);
    v50 = type metadata accessor for WeatherDescription(0);
    v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v50);
    sub_100021A14((uint64_t)v28, &qword_100BC3368);
    swift_beginAccess(&unk_100BE0830, &v188, 1, 0);
    if (v51 == 1)
      v53 = sub_10040922C();
    else
      v53 = sub_10040927C();
    v69 = v53;
    v70 = v54;
    v71 = v55;
    v72 = v56;
    v68 = v181;
    v73 = static Edge.Set.all.getter(v52);
    sub_100037768((uint64_t)v31, (uint64_t)v34, &qword_100BD6D38);
    v74 = v148;
    v75 = &v34[*(int *)(v148 + 36)];
    *v75 = v73;
    *((double *)v75 + 1) = v69;
    *((_QWORD *)v75 + 2) = v70;
    *((_QWORD *)v75 + 3) = v71;
    *((_QWORD *)v75 + 4) = v72;
    v75[40] = 0;
    sub_100021A14((uint64_t)v31, &qword_100BD6D38);
    v76 = v161;
    sub_1000787D4((uint64_t)v34, v161, &qword_100BD6D40);
    sub_100037768(v76, (uint64_t)v39, &qword_100BD6D40);
    swift_storeEnumTagMultiPayload(v39, v147, 0);
    v77 = sub_1000BA294(&qword_100BD6D50);
    sub_10030C718((uint64_t)&unk_100BD6D58);
    v79 = v78;
    sub_10030C658((uint64_t)&qword_100BD6D68);
    _ConditionalContent<>.init(storage:)(v39, v74, v77, v79, v80);
    sub_100021A14(v76, &qword_100BD6D40);
  }
  else
  {
    swift_beginAccess(&unk_100BE0830, v187, 1, 0);
    v57 = sub_10040922C();
    static Alignment.center.getter(v58);
    _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v57, 0);
    v59 = v188;
    v60 = v189;
    v61 = v190;
    v62 = v191;
    *(_QWORD *)v39 = 0;
    v39[8] = 1;
    *((_QWORD *)v39 + 2) = v59;
    v39[24] = v60;
    *((_QWORD *)v39 + 4) = v61;
    v39[40] = v62;
    *((_OWORD *)v39 + 3) = v192;
    swift_storeEnumTagMultiPayload(v39, v37, 1);
    v63 = sub_1000BA294(&qword_100BD6D50);
    sub_10030C718((uint64_t)&unk_100BD6D58);
    v65 = v64;
    sub_10030C658((uint64_t)&qword_100BD6D68);
    _ConditionalContent<>.init(storage:)(v39, v32, v63, v65, v66);
    v68 = v181;
  }
  v81 = v178;
  v82 = v182;
  v83 = type metadata accessor for ConditionDetailPlatterView(0, v172, (uint64_t)v182, v67);
  v84 = v180;
  v85 = v176;
  sub_100308BAC(v83, v180);
  sub_10030C45C((uint64_t)&unk_100BD6D70);
  v87 = v86;
  v88 = sub_10030C69C();
  sub_10030C718((uint64_t)&unk_100BD6E28);
  v90 = v89;
  v186[14] = v82;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v166);
  v186[12] = v90;
  v186[13] = WitnessTable;
  v92 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v167);
  v186[10] = v88;
  v186[11] = v92;
  v93 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v168);
  v186[8] = v87;
  v186[9] = v93;
  v186[7] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v169);
  v94 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v170);
  sub_10027248C((uint64_t)&unk_100BD6E40);
  v186[5] = v94;
  v186[6] = v95;
  v186[3] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v171);
  v186[4] = &protocol witness table for _PaddingLayout;
  v96 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v68);
  v97 = v179;
  sub_1000B2074(v84, v68, v96);
  v98 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8);
  v99 = v98(v84, v68);
  v100 = *(unsigned __int8 *)(v85 + *(int *)(v83 + 36));
  v182 = v98;
  v172 = v96;
  if (v100 == 1)
  {
    v101 = v149;
    v102 = Divider.init()(v99);
    v103 = v152;
    static DividerStyle<>.quaternary.getter(v102);
    sub_10007A100((uint64_t)&qword_100BC69B0);
    v105 = v104;
    sub_10007A100((uint64_t)&unk_100BD6E68);
    v106 = v155;
    v107 = v156;
    v171 = v83;
    v108 = v151;
    v109 = v105;
    v97 = v179;
    View.dividerStyle<A>(_:)(v103, v151, v155, v109, v110);
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v103, v106);
    v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v150 + 8))(v101, v108);
    LOBYTE(v106) = static Edge.Set.top.getter(v111);
    swift_beginAccess(&unk_100BE0830, &v183, 1, 0);
    v112 = sub_1004092CC();
    v113 = EdgeInsets.init(_all:)(v112);
    v115 = v114;
    v117 = v116;
    v119 = v118;
    v121 = v158;
    v120 = v159;
    v122 = (uint64_t)v160;
    (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v160, v107, v159);
    v123 = v122 + *(int *)(v153 + 36);
    *(_BYTE *)v123 = v106;
    *(double *)(v123 + 8) = v113;
    *(_QWORD *)(v123 + 16) = v115;
    *(_QWORD *)(v123 + 24) = v117;
    *(_QWORD *)(v123 + 32) = v119;
    *(_BYTE *)(v123 + 40) = 0;
    v124 = (uint64_t)v162;
    v81 = v178;
    v125 = v107;
    v68 = v181;
    v126 = (*(uint64_t (**)(uint64_t, uint64_t))(v121 + 8))(v125, v120);
    LOBYTE(v120) = static Edge.Set.horizontal.getter(v126);
    v127 = EdgeInsets.init(_all:)(*(double *)(v85 + *(int *)(v171 + 48)));
    v129 = v128;
    v131 = v130;
    v133 = v132;
    v134 = v157;
    sub_100037768(v122, v157, &qword_100BD6D28);
    v135 = v163;
    v136 = v134 + *(int *)(v163 + 36);
    *(_BYTE *)v136 = v120;
    *(double *)(v136 + 8) = v127;
    *(_QWORD *)(v136 + 16) = v129;
    *(_QWORD *)(v136 + 24) = v131;
    *(_QWORD *)(v136 + 32) = v133;
    *(_BYTE *)(v136 + 40) = 0;
    v137 = v122;
    v84 = v180;
    sub_100021A14(v137, &qword_100BD6D28);
    v138 = v164;
    sub_1000787D4(v134, v164, &qword_100BD6D30);
    v139 = 0;
  }
  else
  {
    v139 = 1;
    v138 = v164;
    v124 = (uint64_t)v162;
    v135 = v163;
  }
  _s7Weather24LocationCompositionStateOwst_0(v138, v139, 1, v135);
  v140 = v174;
  sub_100037768(v124, v174, &qword_100BD6CF0);
  v186[0] = v140;
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 16))(v84, v97, v68);
  v186[1] = v84;
  v141 = v177;
  sub_100037768(v138, v177, &qword_100BD6D18);
  v186[2] = v141;
  v185[0] = v173;
  v185[1] = v68;
  v185[2] = v175;
  v184[0] = sub_10030C778();
  v184[1] = v172;
  v184[2] = sub_10030C824();
  sub_10052800C((uint64_t)v186, 3, (uint64_t)v185, (uint64_t)v184, v142, v143, v144, v145, v147, v148, v149, v150, v151, v152, v153, v154, v155, v156);
  sub_100021A14(v138, &qword_100BD6D18);
  v146 = (void (*)(uint64_t, uint64_t))v182;
  v182((uint64_t)v97, v68);
  sub_100021A14(v124, &qword_100BD6CF0);
  sub_100021A14(v141, &qword_100BD6D18);
  v146(v84, v68);
  sub_100021A14(v140, &qword_100BD6CF0);
}

void sub_100308498(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  unsigned __int8 v115;
  _BYTE v116[160];
  _BYTE v117[144];
  _QWORD __src[19];

  v111 = a4;
  v7 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v7);
  v100 = (uint64_t)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Font.TextStyle(0);
  v98 = *(_QWORD *)(v9 - 8);
  v99 = v9;
  __chkstk_darwin(v9);
  v97 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v11);
  v96 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BC3368);
  __chkstk_darwin(v13);
  v108 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for WeatherDescription(0);
  v102 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v101 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AccessibilityTraits(0);
  v106 = *(_QWORD *)(v16 - 8);
  v107 = v16;
  __chkstk_darwin(v16);
  v105 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BD6E78);
  __chkstk_darwin(v18);
  v112 = (uint64_t)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v104 = (char *)&v96 - v21;
  __chkstk_darwin(v22);
  v113 = (uint64_t)&v96 - v23;
  __src[0] = a1;
  __src[1] = a2;
  v24 = sub_100114EF8();
  swift_bridgeObjectRetain(a2);
  v25 = Text.init<A>(_:)(__src, &type metadata for String, v24);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v103 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  v32 = *(int *)(v103 + 40);
  v109 = a3;
  if (*(_BYTE *)(a3 + v32) == 1)
  {
    swift_beginAccess(&unk_100BE0830, __src, 33, 0);
    sub_1004090E8();
  }
  else
  {
    swift_beginAccess(&unk_100BE0830, __src, 33, 0);
    sub_100409178();
  }
  v34 = v33;
  swift_endAccess(__src);
  v35 = v29 & 1;
  v36 = Text.font(_:)(v34, v25, v27, v35, v31);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  swift_release(v34);
  sub_1000D31B4(v25, v27, v35);
  swift_bridgeObjectRelease();
  v44 = static Alignment.leading.getter(v43);
  LOBYTE(v95) = 1;
  LOBYTE(v94) = 1;
  sub_100945D8C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v94, 0, v95, v44, v45, v36, v38, v40 & 1, v42);
  sub_1000D31B4(v36, v38, v40 & 1);
  swift_bridgeObjectRelease();
  v46 = memcpy(v116, __src, 0x90uLL);
  v47 = v105;
  static AccessibilityTraits.isHeader.getter(v46);
  v48 = sub_1000BA294(&qword_100BD6E18);
  sub_10030C658((uint64_t)&qword_100BD6E10);
  v49 = (uint64_t)v104;
  View.accessibilityAddTraits(_:)(v47, v48, v50);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v47, v107);
  memcpy(v117, v116, sizeof(v117));
  sub_10030C9E4((uint64_t)v117);
  sub_1000787D4(v49, v113, &qword_100BD6E78);
  v51 = v108;
  sub_100037768(v109 + *(int *)(v103 + 24), v108, &qword_100BC3368);
  v52 = v110;
  if (_s7Weather24LocationCompositionStateOwet_0(v51, 1, v110) == 1)
  {
    sub_100021A14(v51, &qword_100BC3368);
    v108 = 0;
    v109 = 0;
    v53 = 0;
    v106 = 0;
    v107 = 0;
    v54 = 0;
    v55 = 0.0;
    v56 = 0;
    v57 = 0;
    LODWORD(v110) = 0;
  }
  else
  {
    v58 = v101;
    v59 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v101, v51, v52);
    v61 = v97;
    v60 = v98;
    v62 = v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, enum case for Font.TextStyle.subheadline(_:), v99);
    v63 = type metadata accessor for Font.Design(0);
    v64 = v100;
    _s7Weather24LocationCompositionStateOwst_0(v100, 1, 1, v63);
    v65 = static Font.system(_:design:weight:)(v61, v64, 0, 1);
    sub_100021A14(v64, &qword_100BC3B98);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    v66 = v96;
    WeatherDescription.formatted(font:color:)(v65, 0);
    swift_release(v65);
    v67 = Text.init(_:)(v66);
    v69 = v68;
    v71 = v70;
    v73 = v72 & 1;
    v75 = static Color.secondary.getter(v74);
    v76 = Text.foregroundColor(_:)(v75, v67, v69, v73, v71);
    v108 = v77;
    v109 = v76;
    LODWORD(v106) = v78;
    v107 = v79;
    swift_release(v75);
    sub_1000D31B4(v67, v69, v73);
    swift_bridgeObjectRelease();
    LOBYTE(v54) = static Edge.Set.top.getter(v80);
    swift_beginAccess(&unk_100BE0830, v116, 1, 0);
    v81 = sub_100409208();
    v55 = EdgeInsets.init(_all:)(v81);
    v56 = v82;
    v57 = v83;
    v115 = v106 & 1;
    v114 = 0;
    v84 = *(void (**)(char *, uint64_t))(v59 + 8);
    v106 = v85;
    v84(v58, v52);
    v53 = v115;
    LODWORD(v110) = v114;
    v54 = v54;
  }
  v86 = v112;
  sub_100037768(v113, v112, &qword_100BD6E78);
  v87 = v86;
  v88 = v111;
  sub_100037768(v87, v111, &qword_100BD6E78);
  v89 = v88 + *(int *)(sub_1000BA294(&qword_100BD6E80) + 48);
  v91 = v108;
  v90 = v109;
  *(_QWORD *)v89 = v109;
  *(_QWORD *)(v89 + 8) = v91;
  v105 = (char *)v53;
  v92 = v106;
  v93 = v107;
  *(_QWORD *)(v89 + 16) = v53;
  *(_QWORD *)(v89 + 24) = v93;
  *(_QWORD *)(v89 + 32) = v54;
  *(double *)(v89 + 40) = v55;
  *(_QWORD *)(v89 + 48) = v56;
  *(_QWORD *)(v89 + 56) = v57;
  *(_QWORD *)(v89 + 64) = v92;
  *(_BYTE *)(v89 + 72) = v110;
  sub_10010F980(v90, v91, v53, v93);
  sub_100021A14(v113, &qword_100BD6E78);
  sub_10010F9B0(v90, v91, (char)v105, v93);
  sub_100021A14(v112, &qword_100BD6E78);
}

uint64_t sub_100308BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t WitnessTable;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  double *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  double *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[16];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[4];
  _BYTE v72[24];
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v64 = a2;
  v61 = type metadata accessor for RoundedRectangle(0);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  sub_10009511C(v4);
  v5 = sub_100075EB0(&qword_100BD6CF8);
  v6 = sub_100075EB0(&qword_100BD6D00);
  v7 = sub_100075EB0(&qword_100BD6D08);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = type metadata accessor for Optional(255, v8);
  v10 = type metadata accessor for _ConditionalContent(255, v7, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v6, v10);
  v12 = type metadata accessor for _ConditionalContent(255, v5, v11);
  v13 = type metadata accessor for Group(0, v12);
  sub_1000BA8CC(*(_QWORD *)(v13 - 8));
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  v17 = sub_100075EB0(&qword_100BD6D10);
  v59 = v13;
  v63 = type metadata accessor for ModifiedContent(0, v13, v17);
  sub_1000BA8CC(*(_QWORD *)(v63 - 8));
  __chkstk_darwin(v18);
  sub_10009511C((uint64_t)&v56 - v19);
  v20 = *(_QWORD *)(a1 + 24);
  v66 = v8;
  v67 = v20;
  v21 = v57;
  v68 = v57;
  sub_10030C45C((uint64_t)&unk_100BD6D70);
  v23 = v22;
  v24 = sub_10030C69C();
  sub_10030C718((uint64_t)&unk_100BD6E28);
  v26 = v25;
  v79 = v20;
  v27 = v16;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v9);
  v77 = v26;
  v78 = WitnessTable;
  v29 = sub_10007A030((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  v75 = v24;
  v76 = v29;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  v73 = v23;
  v74 = v30;
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v12);
  Group<A>.init(content:)(sub_10030CA20, v65, v12, v31);
  v32 = sub_1000B3B70();
  v33 = v32;
  if (*(_BYTE *)(v21 + *(int *)(v32 + 36)) == 1)
  {
    v34 = static Color.clear.getter(v32);
  }
  else
  {
    sub_10009922C((uint64_t)&unk_100BE0830, (uint64_t)v72, 33);
    v34 = sub_100409378();
    swift_endAccess(v72);
  }
  v71[0] = v34;
  v35 = v62;
  if (qword_100BC20C0 != -1)
    swift_once(&qword_100BC20C0, sub_1004049E8);
  sub_10009922C((uint64_t)&qword_100CAE968, (uint64_t)v72, 1);
  v36 = sub_1004043D0();
  v37 = v61;
  v38 = v58;
  v39 = (char *)v58 + *(int *)(v61 + 20);
  v40 = enum case for RoundedCornerStyle.continuous(_:);
  v41 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v39, v40, v41);
  *v38 = v36;
  v38[1] = v36;
  v71[3] = v31;
  v42 = v59;
  v43 = sub_1000C4770((uint64_t)&protocol conformance descriptor for <A> Group<A>);
  sub_10007A100((uint64_t)&unk_100BD6E88);
  View.background<A, B>(_:in:fillStyle:)(v71, v38, 256, v42, &type metadata for Color, v37, v43, &protocol witness table for Color, v44);
  sub_1000215BC((uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v45 = swift_release(v71[0]);
  v46 = (*(uint64_t (**)(char *, uint64_t, __n128))(v60 + 8))(v27, v42, v45);
  v47 = static Edge.Set.horizontal.getter(v46);
  if (*(_BYTE *)(v21 + *(int *)(v33 + 40)) == 1)
  {
    sub_10009922C((uint64_t)&unk_100BE0830, (uint64_t)v71, 1);
    sub_10040922C();
    v49 = v48;
  }
  else
  {
    sub_10009922C((uint64_t)&unk_100BE0830, (uint64_t)v71, 1);
    v49 = sub_10040908C();
  }
  v50 = v49;
  sub_10027248C((uint64_t)&unk_100BD6E40);
  v69 = v43;
  v70 = v51;
  v52 = v63;
  v53 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  View.padding(_:_:)(v47, *(_QWORD *)&v50, 0, v52, v53);
  sub_1000988C4();
  return v54(v35, v52);
}

uint64_t sub_100309070()
{
  return Transaction.animation.setter(0);
}

uint64_t sub_100309094()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD v4[2];

  v0 = sub_1008B634C();
  if (!v1)
    return 0;
  v4[0] = v0;
  v4[1] = v1;
  v2 = sub_100114EF8();
  return Text.init<A>(_:)(v4, &type metadata for String, v2);
}

void sub_1003090E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  _QWORD v80[2];
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v155 = a3;
  v148 = a1;
  v154 = a4;
  v109 = a2;
  v4 = type metadata accessor for Optional(0, a2);
  v88 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v93 = (char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v111 = (char *)v80 - v7;
  v8 = sub_100075EB0(&qword_100BD6D08);
  v157 = v4;
  v9 = type metadata accessor for _ConditionalContent(0, v8, v4);
  v120 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v119 = (char *)v80 - v10;
  v11 = sub_1000BA294(&qword_100BD6E38);
  __chkstk_darwin(v11);
  v90 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = v8;
  __chkstk_darwin(v13);
  v89 = (char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v97 = (char *)v80 - v16;
  v17 = sub_1000BA294(&qword_100BD30F8);
  v113 = *(_QWORD *)(v17 - 8);
  v114 = v17;
  __chkstk_darwin(v17);
  v112 = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for AttributedString.CharacterView(0);
  __chkstk_darwin(v96);
  v95 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1000BA294(&qword_100BD6E90);
  __chkstk_darwin(v128);
  v129 = (char *)v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BD6D00);
  __chkstk_darwin(v21);
  v130 = (char *)v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = v23;
  v153 = v9;
  v156 = type metadata accessor for _ConditionalContent(0, v23, v9);
  v146 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v145 = (char *)v80 - v24;
  v25 = type metadata accessor for AutomationInfoViewModifier(0);
  __chkstk_darwin(v25);
  v135 = (char *)v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for AttributedString(0);
  v122 = *(_QWORD *)(v27 - 8);
  v123 = v27;
  __chkstk_darwin(v27);
  v132 = (char *)v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v131 = (char *)v80 - v30;
  v143 = sub_1000BA294(&qword_100BD6DF8);
  __chkstk_darwin(v143);
  v94 = (char *)v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v99 = (char *)v80 - v33;
  __chkstk_darwin(v34);
  v91 = (char *)v80 - v35;
  __chkstk_darwin(v36);
  v116 = (char *)v80 - v37;
  __chkstk_darwin(v38);
  v115 = (char *)v80 - v39;
  v127 = sub_1000BA294(&qword_100BD6DE8);
  __chkstk_darwin(v127);
  v98 = (char *)v80 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v100 = (char *)v80 - v42;
  v125 = type metadata accessor for WeatherDescription(0);
  v110 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v92 = (char *)v80 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v133 = (char *)v80 - v45;
  v121 = sub_1000BA294(&qword_100BD6E98);
  __chkstk_darwin(v121);
  v124 = (char *)v80 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_1000BA294(&qword_100BD6DC0);
  __chkstk_darwin(v141);
  v126 = (char *)v80 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for PrecipitationTotalPlatterView(0);
  __chkstk_darwin(v81);
  v83 = (char *)v80 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1000BA294(&qword_100BD6DD0);
  __chkstk_darwin(v118);
  v82 = (char *)v80 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v87 = (char *)v80 - v51;
  v52 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
  v105 = *(_QWORD *)(v52 - 8);
  v106 = v52;
  __chkstk_darwin(v52);
  v104 = (char *)v80 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_1000BA294(&qword_100BD6EA0);
  __chkstk_darwin(v138);
  v140 = (char *)v80 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1000BA294(&qword_100BD6EA8);
  __chkstk_darwin(v103);
  v107 = (char *)v80 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1000BA294(&qword_100BD6D80);
  __chkstk_darwin(v139);
  v108 = (char *)v80 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1000BA294(&qword_100BD6CF8);
  __chkstk_darwin(v57);
  v142 = (char *)v80 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v136);
  v86 = (char *)v80 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v85 = (char *)v80 - v61;
  __chkstk_darwin(v62);
  v134 = (char *)v80 - v63;
  __chkstk_darwin(v64);
  v84 = (char *)v80 - v65;
  __chkstk_darwin(v66);
  v137 = (char *)v80 - v67;
  v68 = type metadata accessor for DetailComponentContainerView(0);
  __chkstk_darwin(v68);
  v69 = sub_1000BA294(&qword_100BD6DA0);
  __chkstk_darwin(v69);
  v102 = sub_1000BA294(&qword_100BD6D90);
  __chkstk_darwin(v102);
  v80[1] = (char *)v80 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  v101 = (char *)v80 - v72;
  v73 = type metadata accessor for DetailComponentContainerViewModel(0);
  __chkstk_darwin(v73);
  __chkstk_darwin(v74);
  v75 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  __chkstk_darwin(v75);
  v77 = (char *)v80 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = v57;
  v152 = type metadata accessor for _ConditionalContent(0, v57, v156);
  v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v150 = (char *)v80 - v78;
  v147 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100080C0C(v148 + *(int *)(v147 + 28), (uint64_t)v77, type metadata accessor for ConditionDetailPlatterViewModel.Body);
  v79 = (char *)sub_100309AD0 + 4 * word_1009946D0[swift_getEnumCaseMultiPayload(v77)];
  __asm { BR              X10 }
}

uint64_t sub_100309AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t WitnessTable;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v4 = *(_QWORD *)(v0 + 368);
  v5 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 32))(*(_QWORD *)(v0 + 432), v2, v4);
  v6 = static Font.body.getter(v5);
  v7 = *(_QWORD *)(v0 + 416);
  WeatherDescription.formatted(font:color:)(v6, 0);
  swift_release(v6);
  v8 = Text.init(_:)(v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v15 = static Alignment.leading.getter(v8);
  LOBYTE(v99) = 1;
  LOBYTE(v98) = 1;
  sub_100945D8C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v98, 0, v99, v15, v16, v8, v10, v14, v12);
  sub_1000D31B4(v8, v10, v14);
  swift_bridgeObjectRelease();
  v17 = memcpy((void *)(v0 + 1120), (const void *)(v0 + 896), 0x90uLL);
  if (*(_BYTE *)(v1 + *(int *)(*(_QWORD *)(v0 + 544) + 36)) == 1)
  {
    if (qword_100BC23B8 != -1)
      v17 = (void *)swift_once(&qword_100BC23B8, sub_1001593B8);
    v19 = *((_QWORD *)&xmmword_100CAEF78 + 1);
    v18 = *(double *)&xmmword_100CAEF78;
    v20 = qword_100CAEF88;
    v21 = qword_100CAEF90;
  }
  else
  {
    swift_beginAccess(&unk_100BE0830, v0 + 1088, 1, 0);
    v18 = sub_1004092F0();
    v19 = v22;
    v20 = v23;
    v21 = v24;
  }
  v25 = static Edge.Set.all.getter(v17);
  v26 = *(_QWORD *)(v1 + 32);
  if (v26)
  {
    v27 = *(_QWORD *)(v1 + 24);
    v28 = *(_QWORD *)(v1 + 32);
  }
  else if (*(unsigned __int8 *)(v1 + 16) < 2u || *(_QWORD *)v1 ^ 1 | *(_QWORD *)(v1 + 8))
  {
    v27 = 0;
    v28 = 0xE000000000000000;
  }
  else
  {
    v28 = 0xE400000000000000;
    v27 = 1937204558;
  }
  memcpy((void *)(v0 + 896), (const void *)(v0 + 1120), 0x90uLL);
  *(_BYTE *)(v0 + 1040) = v25;
  *(double *)(v0 + 1048) = v18;
  *(_QWORD *)(v0 + 1056) = v19;
  *(_QWORD *)(v0 + 1064) = v20;
  *(_QWORD *)(v0 + 1072) = v21;
  *(_BYTE *)(v0 + 1080) = 0;
  v29 = swift_bridgeObjectRetain(v26);
  v30 = *(_QWORD *)(v0 + 432);
  v31 = ((uint64_t (*)(__n128))WeatherDescription.string.getter)(v29);
  v32 = *(uint64_t **)(v0 + 40);
  *v32 = v27;
  v32[1] = v28;
  v32[2] = v31;
  v32[3] = v33;
  v34 = type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload(v32, v34, 11);
  swift_storeEnumTagMultiPayload(v32, *(_QWORD *)(v0 + 456), 1);
  v35 = *(_QWORD *)(v0 + 464);
  sub_100080C0C((uint64_t)v32, v35, type metadata accessor for AutomationInfo);
  v36 = v35;
  v37 = *(_QWORD *)(v0 + 440);
  sub_10007802C(v36, v37, type metadata accessor for AutomationInfo);
  v38 = *(_QWORD *)(v0 + 448);
  *(_QWORD *)v38 = 0;
  *(_QWORD *)(v38 + 8) = 0xE000000000000000;
  *(_QWORD *)(v38 + 16) = swift_getKeyPath(&unk_1009947A8);
  *(_BYTE *)(v38 + 24) = 0;
  v39 = type metadata accessor for AutomationInfoProperty(0);
  sub_10007802C(v37, v38 + *(int *)(v39 + 24), type metadata accessor for AutomationInfo);
  v40 = *(void **)(v0 + 288);
  sub_100080C0C(v38, (uint64_t)v40 + *(int *)(*(_QWORD *)(v0 + 512) + 36), type metadata accessor for AutomationInfoViewModifier);
  memcpy(v40, (const void *)(v0 + 896), 0xB9uLL);
  sub_10030CA34(v0 + 896);
  sub_1000215BC(v38, type metadata accessor for AutomationInfoViewModifier);
  sub_1000215BC((uint64_t)v32, type metadata accessor for AutomationInfo);
  sub_10030C9E4(v0 + 1120);
  v41 = sub_100309094();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v48 = *(_QWORD *)(v0 + 248);
  v49 = *(_QWORD *)(v0 + 104);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v30, v4);
  if (v47)
  {
    v51 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    *(_QWORD *)(v0 + 552) = v51;
    v51(v49, v4);
    v52 = v45 & 1;
  }
  else
  {
    v53 = static Font.body.getter(v50);
    v54 = *(_QWORD *)(v0 + 416);
    WeatherDescription.formatted(font:color:)(v53, 0);
    swift_release(v53);
    v41 = Text.init(_:)(v54);
    v43 = v55;
    v47 = v56;
    v57 = v48;
    v52 = v58 & 1;
    v59 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    *(_QWORD *)(v0 + 552) = v59;
    v59(v49, v4);
  }
  sub_10030C310((uint64_t)&unk_100BD6DF0);
  v60 = *(_QWORD *)(v0 + 152);
  v61 = *(_QWORD *)(v0 + 288);
  View.accessibilityLabel(_:)(v41, v43, v52, v47, *(_QWORD *)(v0 + 512), v62);
  sub_1000D31B4(v41, v43, v52);
  swift_bridgeObjectRelease();
  sub_100021A14(v61, &qword_100BD6DF8);
  v63 = v60;
  v64 = *(_QWORD *)(v0 + 168);
  sub_1000787D4(v63, v64, &qword_100BD6DE8);
  v65 = *(_QWORD *)(v0 + 360);
  sub_100037768(v64, v65, &qword_100BD6DE8);
  swift_storeEnumTagMultiPayload(v65, *(_QWORD *)(v0 + 336), 1);
  v66 = sub_10030C4AC();
  v67 = sub_10030C530();
  v68 = *(_QWORD *)(v0 + 376);
  _ConditionalContent<>.init(storage:)(v65, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 384), v66, v67);
  v69 = *(_QWORD *)(v0 + 488);
  sub_100037768(v68, v69, &qword_100BD6DC0);
  swift_storeEnumTagMultiPayload(v69, *(_QWORD *)(v0 + 472), 1);
  v70 = sub_10030C28C();
  sub_10030C438();
  v71 = *(_QWORD *)(v0 + 504);
  _ConditionalContent<>.init(storage:)(v69, *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 496), v70, v72);
  sub_100021A14(v68, &qword_100BD6DC0);
  sub_10030C45C((uint64_t)&unk_100BD6D70);
  v74 = v73;
  v75 = sub_10030C69C();
  sub_10030C718((uint64_t)&unk_100BD6E28);
  v77 = v76;
  v78 = *(_QWORD *)(v0 + 608);
  *(_QWORD *)(v0 + 784) = v78;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, *(_QWORD *)(v0 + 624));
  *(_QWORD *)(v0 + 768) = v77;
  *(_QWORD *)(v0 + 776) = WitnessTable;
  v80 = *(_QWORD *)(v0 + 592);
  v81 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v80);
  *(_QWORD *)(v0 + 752) = v75;
  *(_QWORD *)(v0 + 760) = v81;
  v82 = *(_QWORD *)(v0 + 616);
  v83 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v82);
  v84 = *(_QWORD *)(v0 + 568);
  sub_1001589C0(v71, *(_QWORD *)(v0 + 560), v82, v74, v83, v85, v86, v87, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109);
  sub_100021A14(v71, &qword_100BD6CF8);
  sub_100021A14(v64, &qword_100BD6DE8);
  (*(void (**)(_QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 368));
  sub_10030C45C((uint64_t)&unk_100BD6D70);
  v89 = v88;
  v90 = sub_10030C69C();
  sub_10030C718((uint64_t)&unk_100BD6E28);
  v92 = v91;
  *(_QWORD *)(v3 - 168) = v78;
  v93 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, *(_QWORD *)(v0 + 624));
  *(_QWORD *)(v3 - 184) = v92;
  *(_QWORD *)(v3 - 176) = v93;
  v94 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v80);
  *(_QWORD *)(v3 - 200) = v90;
  *(_QWORD *)(v3 - 192) = v94;
  v95 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v82);
  *(_QWORD *)(v3 - 216) = v89;
  *(_QWORD *)(v3 - 208) = v95;
  v96 = *(_QWORD *)(v0 + 584);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v96);
  sub_1000B1100(v84, v96, *(_QWORD *)(v0 + 600));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 576) + 8))(v84, v96);
}

uint64_t sub_10030B91C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1000BA294(&qword_100BD30F8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = __chkstk_darwin(v2);
  NonEmpty.elements.getter(&v17, v5);
  v16 = v17;
  KeyPath = swift_getKeyPath(&unk_100994800);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_100B6CDD8, v8 + v4, v7 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v10 = sub_1000BA294(&qword_100BD6EB8);
  v11 = sub_1000BA294(&qword_100BD6EC0);
  sub_10027248C((uint64_t)&unk_100BD6EC8);
  v13 = v12;
  sub_10027248C((uint64_t)&unk_100BD6ED0);
  return ForEach<>.init(_:id:content:)(&v16, KeyPath, sub_10030CAD8, v9, v10, v11, v13, &protocol witness table for String, v14);
}

uint64_t sub_10030BA9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  double v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  _QWORD v74[6];
  __int128 v75;
  char v76;
  _BYTE v77[144];
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[144];
  _BYTE *v87;
  uint64_t *v88;
  _BYTE *v89;
  _QWORD *v90;
  _BYTE v91[152];
  _BYTE v92[144];
  _QWORD v93[6];
  unsigned __int8 v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  unsigned __int8 v102;
  __int128 v103;
  _BYTE v104[144];
  _QWORD __src[19];

  *(_QWORD *)&v72 = a2;
  v73 = a3;
  v60 = type metadata accessor for ConditionDetailPlatterViewModel.TextSection(0);
  __chkstk_darwin(v60);
  v71 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributedString(0);
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  __chkstk_darwin(v5);
  v61 = a1;
  v62 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[1];
  v70 = *a1;
  v65 = v7;
  __src[0] = v70;
  __src[1] = v7;
  v8 = sub_100114EF8();
  swift_bridgeObjectRetain(v7);
  v9 = Text.init<A>(_:)(__src, &type metadata for String, v8);
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v16 = static Font.headline.getter(v9);
  v17 = Text.font(_:)(v16, v9, v11, v15, v13);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release(v16);
  v21 &= 1u;
  v24 = v15;
  v25 = v60;
  sub_1000D31B4(v9, v11, v24);
  swift_bridgeObjectRelease();
  v27 = static Alignment.leading.getter(v26);
  LOBYTE(v58) = 1;
  LOBYTE(v56) = 1;
  sub_100945D8C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v56, 0, v58, v27, v28, v17, v19, v21, v23);
  sub_1000D31B4(v17, v19, v21);
  swift_bridgeObjectRelease();
  memcpy(v104, __src, sizeof(v104));
  swift_beginAccess(&unk_100BE0830, v93, 1, 0);
  v29 = sub_10040932C();
  static Alignment.center.getter(v30);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v29, 0);
  v69 = v93[5];
  v68 = v94;
  v31 = v95;
  v32 = v96;
  v66 = v98;
  v67 = v97;
  v33 = v62;
  v34 = (char *)v61 + *(int *)(v25 + 20);
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v34, v64);
  v35 = Text.init(_:)(v33);
  v37 = v36;
  v39 = v38;
  LOBYTE(v13) = v40 & 1;
  v41 = static Alignment.leading.getter(v35);
  LOBYTE(v59) = 1;
  LOBYTE(v57) = 1;
  sub_100945D8C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v57, 0, v59, v41, v42, v35, v37, v13, v39);
  sub_1000D31B4(v35, v37, v13);
  swift_bridgeObjectRelease();
  memcpy(__src, v92, 0x90uLL);
  v43 = sub_1000BA294(&qword_100BD30F8);
  sub_10027248C((uint64_t)&unk_100BD6ED8);
  v44 = v71;
  NonEmpty<>.last.getter(v43, v45);
  v46 = v70 == *v44 && v65 == v44[1];
  if ((v46 || (_stringCompareWithSmolCheck(_:_:expecting:)(v70, v65, *v44) & 1) != 0)
    && (static AttributedString.== infix(_:_:)(v34, (char *)v44 + *(int *)(v25 + 20)) & 1) != 0)
  {
    sub_1000215BC((uint64_t)v44, type metadata accessor for ConditionDetailPlatterViewModel.TextSection);
    v47 = 0;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v72 = 0u;
    v52 = 1;
  }
  else
  {
    sub_1000215BC((uint64_t)v44, type metadata accessor for ConditionDetailPlatterViewModel.TextSection);
    v53 = sub_100409350();
    static Alignment.center.getter(v54);
    v47 = 1;
    _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v53, 0);
    v52 = 0;
    v48 = v99;
    v49 = v100;
    v50 = v101;
    v51 = v102;
    v72 = v103;
  }
  memcpy(v86, v104, sizeof(v86));
  v78 = 0;
  v79 = 1;
  v80 = v69;
  v81 = v68;
  v82 = v31;
  v83 = v32;
  v84 = v67;
  v85 = v66;
  v87 = v86;
  v88 = &v78;
  memcpy(v77, __src, sizeof(v77));
  v74[0] = 0;
  v74[1] = v47;
  v74[2] = v48;
  v74[3] = v49;
  v74[4] = v50;
  v74[5] = v51;
  v75 = v72;
  v76 = v52;
  v89 = v77;
  v90 = v74;
  sub_10035D8F0();
  memcpy(v91, v77, 0x90uLL);
  sub_10030C9E4((uint64_t)v91);
  memcpy(v92, v86, sizeof(v92));
  return sub_10030C9E4((uint64_t)v92);
}

uint64_t sub_10030BF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, __n128);
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *(_QWORD *)(a1 + 16);
  v36 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v35 = (char *)&v32 - v8;
  v9 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Optional(0, v5);
  v37 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - v19;
  v38 = a1;
  v21 = v2 + *(int *)(a1 + 44);
  v22 = *(void (**)(char *, __n128))v21;
  if (!*(_QWORD *)v21)
    goto LABEL_5;
  v33 = a2;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100080C0C(v2 + *(int *)(v24 + 28), (uint64_t)v11, type metadata accessor for ConditionDetailPlatterViewModel.Body);
  if (swift_getEnumCaseMultiPayload(v11) != 7)
  {
    sub_1000215BC((uint64_t)v11, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    a2 = v33;
LABEL_5:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 1, 1, v5);
    v27 = *(_QWORD *)(v38 + 24);
    goto LABEL_6;
  }
  sub_10007802C((uint64_t)v11, (uint64_t)v14, type metadata accessor for ConditionDetailDynamicContentIdentifier);
  v25 = swift_retain();
  v26 = v34;
  v22(v14, v25);
  sub_1000BF8D0((uint64_t)v22, v23);
  sub_1000215BC((uint64_t)v14, type metadata accessor for ConditionDetailDynamicContentIdentifier);
  v27 = *(_QWORD *)(v38 + 24);
  v28 = (uint64_t)v35;
  sub_1000B2074(v26, v5, v27);
  v29 = *(void (**)(char *, uint64_t))(v36 + 8);
  v29(v26, v5);
  sub_1000B1100(v28, v5, (uint64_t)v17);
  v29((char *)v28, v5);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v5);
  a2 = v33;
LABEL_6:
  sub_100158984((uint64_t)v17, v5, (uint64_t)v20);
  v30 = *(void (**)(char *, uint64_t))(v37 + 8);
  v30(v17, v15);
  v39 = v27;
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v15);
  sub_1000B1100((uint64_t)v20, v15, a2);
  return ((uint64_t (*)(char *, uint64_t))v30)(v20, v15);
}

void sub_10030C280(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003078AC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24), a1);
}

unint64_t sub_10030C28C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6D78;
  if (!qword_100BD6D78)
  {
    v1 = sub_100075EB0(&qword_100BD6D80);
    sub_10030C310((uint64_t)&unk_100BD6D88);
    sub_10030C3FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6D78);
  }
  return result;
}

void sub_10030C310(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000B4444(0, v3);
    v2();
    sub_10007A100((uint64_t)&qword_100BC6768);
    atomic_store(sub_10007A030((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_10030C378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6D98;
  if (!qword_100BD6D98)
  {
    v1 = sub_100075EB0(&qword_100BD6DA0);
    sub_10007A100((uint64_t)&unk_100BD6DA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6D98);
  }
  return result;
}

unint64_t sub_10030C3FC()
{
  unint64_t result;

  result = qword_100BD6DB0;
  if (!qword_100BD6DB0)
  {
    result = swift_getWitnessTable(&unk_1009D2940, &type metadata for ComparisonDetailComponentView);
    atomic_store(result, (unint64_t *)&qword_100BD6DB0);
  }
  return result;
}

void sub_10030C438()
{
  sub_10030C45C((uint64_t)&unk_100BD6DB8);
}

void sub_10030C45C(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t *v4;

  if (!sub_10009987C(a1))
  {
    sub_1000AE8E8(0, v4);
    v3();
    v2();
    atomic_store(sub_100099A04((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_10030C4AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6DC8;
  if (!qword_100BD6DC8)
  {
    v1 = sub_100075EB0(&qword_100BD6DD0);
    sub_10007A100((uint64_t)&unk_100BD6DD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6DC8);
  }
  return result;
}

unint64_t sub_10030C530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6DE0;
  if (!qword_100BD6DE0)
  {
    v1 = sub_100075EB0(&qword_100BD6DE8);
    sub_10030C310((uint64_t)&unk_100BD6DF0);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6DE0);
  }
  return result;
}

unint64_t sub_10030C5CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6E00;
  if (!qword_100BD6E00)
  {
    v1 = sub_100075EB0(&qword_100BD6E08);
    sub_10030C658((uint64_t)&qword_100BD6E10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6E00);
  }
  return result;
}

void sub_10030C658(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  if (!sub_10009987C(a1))
  {
    v3 = sub_1000AE8E8(0, v2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3), v1);
  }
  sub_100099960();
}

unint64_t sub_10030C69C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6E20;
  if (!qword_100BD6E20)
  {
    v1 = sub_100075EB0(&qword_100BD6D00);
    sub_10030C310((uint64_t)&unk_100BD6DF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6E20);
  }
  return result;
}

void sub_10030C718(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000AE8E8(0, v3);
    sub_10027248C(v2);
    atomic_store(sub_100099A04((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_10030C778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6E48;
  if (!qword_100BD6E48)
  {
    v1 = sub_100075EB0(&qword_100BD6CF0);
    sub_10030C718((uint64_t)&unk_100BD6D58);
    sub_10030C658((uint64_t)&qword_100BD6D68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6E48);
  }
  return result;
}

unint64_t sub_10030C824()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6E50;
  if (!qword_100BD6E50)
  {
    v1 = sub_100075EB0(&qword_100BD6D18);
    sub_10030C888();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6E50);
  }
  return result;
}

unint64_t sub_10030C888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6E58;
  if (!qword_100BD6E58)
  {
    v1 = sub_100075EB0(&qword_100BD6D30);
    sub_10030C8F4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6E58);
  }
  return result;
}

unint64_t sub_10030C8F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  result = qword_100BD6E60;
  if (!qword_100BD6E60)
  {
    v1 = sub_100075EB0(&qword_100BD6D28);
    v2 = type metadata accessor for Divider(255);
    v3 = type metadata accessor for QuaternaryDividerStyle(255);
    sub_10007A100((uint64_t)&qword_100BC69B0);
    v5 = v4;
    sub_10007A100((uint64_t)&unk_100BD6E68);
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v5;
    v7[3] = v6;
    swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.dividerStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6E60);
  }
  return result;
}

uint64_t sub_10030C9E4(uint64_t a1)
{
  sub_1000D31B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

void sub_10030CA20(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_1003090E4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10030CA34(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_1000D55D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_10030CA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000BA294(&qword_100BD30F8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10030CAD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BA294(&qword_100BD30F8) - 8) + 80);
  return sub_10030BA9C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_10030CB28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;

  v1 = *a1;
  sub_100075EB0(&qword_100BD6CF0);
  sub_100075EB0(&qword_100BD6CF8);
  sub_100075EB0(&qword_100BD6D00);
  v2 = sub_100075EB0(&qword_100BD6D08);
  v3 = type metadata accessor for Optional(255, v1);
  v4 = type metadata accessor for _ConditionalContent(255, v2, v3);
  v5 = sub_1000DF564(v4);
  v6 = sub_1000D9548(v5);
  sub_1000C43AC(v6);
  v7 = sub_100075EB0(&qword_100BD6D10);
  v8 = sub_1000D9CBC(v7);
  type metadata accessor for ModifiedContent(255, v8, &type metadata for _PaddingLayout);
  v9 = sub_100075EB0(&qword_100BD6D18);
  v10 = sub_1000C381C(v9);
  v11 = sub_1000AE86C(v10);
  v12 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for TupleView<A>);
  v13 = type metadata accessor for VStack(255, v11, v12);
  v14 = type metadata accessor for ModifiedContent(255, v13, &type metadata for _FlexFrameLayout);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _TransactionModifier);
  v26 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for VStack<A>);
  v27 = &protocol witness table for _FlexFrameLayout;
  v24 = sub_10007A030((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v25 = &protocol witness table for _TransactionModifier;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v22 = v15;
  v23 = WitnessTable;
  swift_getOpaqueTypeMetadata2(255, &v22, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v17 = type metadata accessor for AccessibilityAttachmentModifier(255);
  sub_1000BD3BC(v17, v18, v17);
  v19 = type metadata accessor for AutomationInfoViewModifier(255);
  sub_1000BD3BC(v19, v20, v19);
  v22 = v15;
  v23 = WitnessTable;
  swift_getOpaqueTypeConformance2(&v22, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_10007A100((uint64_t)&qword_100BC4E48);
  sub_1000CFC5C();
  sub_10007A100((uint64_t)&qword_100BC6768);
  return sub_1000C4770((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
}

uint64_t sub_10030CD70(Swift::Double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t), char a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t countAndFlagsBits;
  void *object;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String_optional v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *);
  unsigned int v98;
  uint64_t v99;
  char *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[2];
  uint64_t v113;
  uint64_t v114;
  Swift::String v115;
  Swift::String v116;

  v109 = a6;
  v111 = a5;
  v108 = type metadata accessor for WeatherFormatPlaceholder(0);
  v106 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v105 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC3340);
  __chkstk_darwin(v12);
  v104 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v107 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v100 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a7 & 1) != 0)
  {
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v115._countAndFlagsBits = 0xD00000000000006DLL;
    v115._object = (void *)0x80000001009FA7D0;
    v16._countAndFlagsBits = 0x7961646F54;
    v16._object = (void *)0xE500000000000000;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v115);
    countAndFlagsBits = v18._countAndFlagsBits;
    object = v18._object;

  }
  else
  {
    countAndFlagsBits = Date.dayOfWeek(timeZone:context:)(a8, 2);
    object = v21;
  }
  sub_1000B2E08();
  v23 = v22;
  v24 = *(_QWORD *)(v22 + 16);
  if (v24 >= *(_QWORD *)(v22 + 24) >> 1)
  {
    sub_1000B2E08();
    v23 = v22;
  }
  *(_QWORD *)(v23 + 16) = v24 + 1;
  v25 = v23;
  v26 = v23 + 16 * v24;
  *(_QWORD *)(v26 + 32) = countAndFlagsBits;
  *(_QWORD *)(v26 + 40) = object;
  if ((WeatherCondition.isPrecipitation.getter(v22) & 1) != 0
    && (v27 = Precipitation.accessibilityDescription(with:)(a1), v27.value._object))
  {
    v28 = v27.value._object;
    v29 = ((uint64_t (*)(void))WeatherCondition.description.getter)();
    v31 = v30;
    v113 = v29;
    v114 = v30;
    v32 = Precipitation.accessibilityDescription.getter();
    v34 = v33;
    v112[0] = v32;
    v112[1] = v33;
    v35 = sub_100114EF8();
    v36 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)(v112, &type metadata for String, &type metadata for String, v35, v35);
    swift_bridgeObjectRelease(v31);
    v37 = swift_bridgeObjectRelease(v34);
    if (v36)
    {
      v38 = WeatherCondition.description.getter(v37);
      v40 = v39;
      v41 = v25;
      v42 = *(_QWORD *)(v25 + 16);
      v43 = v42 + 1;
      if (v42 >= *(_QWORD *)(v41 + 24) >> 1)
      {
        sub_1000B2E08();
        v41 = v92;
      }
      *(_QWORD *)(v41 + 16) = v43;
      v44 = v41 + 16 * v42;
      *(_QWORD *)(v44 + 32) = v38;
      *(_QWORD *)(v44 + 40) = v40;
    }
    else
    {
      v41 = v25;
      v43 = *(_QWORD *)(v25 + 16);
    }
    if (v43 >= *(_QWORD *)(v41 + 24) >> 1)
    {
      sub_1000B2E08();
      v41 = v91;
    }
    v103 = v41;
    *(_QWORD *)(v41 + 16) = v43 + 1;
    v51 = v41 + 16 * v43;
    *(_QWORD *)(v51 + 32) = v27.value._countAndFlagsBits;
    v50 = v51 + 32;
  }
  else
  {
    v45 = ((uint64_t (*)(void))WeatherCondition.description.getter)();
    v28 = v46;
    v47 = v25;
    v48 = *(_QWORD *)(v25 + 16);
    if (v48 >= *(_QWORD *)(v25 + 24) >> 1)
    {
      sub_1000B2E08();
      v47 = v90;
    }
    v103 = v47;
    *(_QWORD *)(v47 + 16) = v48 + 1;
    v49 = v47 + 16 * v48;
    *(_QWORD *)(v49 + 32) = v45;
    v50 = v49 + 32;
  }
  *(_QWORD *)(v50 + 8) = v28;
  v52 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v116._countAndFlagsBits = 0xD00000000000004FLL;
  v116._object = (void *)0x80000001009FA780;
  v53._object = (void *)0x80000001009FA760;
  v53._countAndFlagsBits = 0xD000000000000015;
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v116);
  v101 = v55._object;
  v102 = v55._countAndFlagsBits;

  v56 = sub_1000BA294(&qword_100BC3C38);
  v57 = swift_allocObject(v56, 112, 7);
  *(_OWORD *)(v57 + 16) = xmmword_10097DA20;
  v58 = static Set<>.value.getter();
  v99 = type metadata accessor for Locale(0);
  v59 = v104;
  _s7Weather24LocationCompositionStateOwst_0(v104, 1, 1, v99);
  v60 = v100;
  static WeatherFormatStyle<>.weather(_:locale:)(v58, v59);
  swift_bridgeObjectRelease(v58);
  sub_1000AA25C(v59);
  v98 = enum case for WeatherFormatPlaceholder.none(_:);
  v62 = v105;
  v61 = v106;
  v97 = *(void (**)(char *))(v106 + 104);
  v63 = v108;
  v97(v105);
  v96 = type metadata accessor for UnitManager(0);
  v64 = static UnitManager.standard.getter(v96);
  v65 = sub_1000BA294(&qword_100BC4E68);
  v95 = v65;
  v94 = sub_100051B90((unint64_t *)&qword_100BCB9D8, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitTemperature.BaseWeatherFormatStyle);
  v66 = v110;
  v67 = Measurement.formatted<A>(_:placeholder:unitManager:)(v60, v62, v64, &protocol witness table for UnitManager, v65, v110, v94);
  v69 = v68;
  swift_release(v64);
  v109 = *(void (**)(char *, uint64_t))(v61 + 8);
  v109(v62, v63);
  v107 = *(_QWORD *)(v107 + 8);
  ((void (*)(char *, uint64_t))v107)(v60, v66);
  *(_QWORD *)(v57 + 56) = &type metadata for String;
  v70 = sub_1000B2E24();
  *(_QWORD *)(v57 + 64) = v70;
  *(_QWORD *)(v57 + 32) = v67;
  *(_QWORD *)(v57 + 40) = v69;
  v71 = static Set<>.value.getter();
  _s7Weather24LocationCompositionStateOwst_0(v59, 1, 1, v99);
  static WeatherFormatStyle<>.weather(_:locale:)(v71, v59);
  swift_bridgeObjectRelease(v71);
  sub_1000AA25C(v59);
  v72 = ((uint64_t (*)(char *, _QWORD, uint64_t))v97)(v62, v98, v63);
  v73 = static UnitManager.standard.getter(v72);
  v74 = Measurement.formatted<A>(_:placeholder:unitManager:)(v60, v62, v73, &protocol witness table for UnitManager, v95, v66, v94);
  v76 = v75;
  swift_release(v73);
  v109(v62, v63);
  ((void (*)(char *, uint64_t))v107)(v60, v66);
  *(_QWORD *)(v57 + 96) = &type metadata for String;
  *(_QWORD *)(v57 + 104) = v70;
  *(_QWORD *)(v57 + 72) = v74;
  *(_QWORD *)(v57 + 80) = v76;
  v77 = v101;
  v78 = String.init(format:_:)(v102, v101, v57);
  v80 = v79;
  swift_bridgeObjectRelease(v77);
  v81 = v103;
  v82 = *(_QWORD *)(v103 + 16);
  if (v82 >= *(_QWORD *)(v103 + 24) >> 1)
  {
    sub_1000B2E08();
    v81 = v89;
  }
  *(_QWORD *)(v81 + 16) = v82 + 1;
  v83 = v81 + 16 * v82;
  *(_QWORD *)(v83 + 32) = v78;
  *(_QWORD *)(v83 + 40) = v80;
  v113 = v81;
  v84 = v81;
  v85 = sub_1000BA294(&qword_100BF1280);
  v86 = sub_1000B2E60();
  v87 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v85, v86);
  swift_bridgeObjectRelease(v84);
  return v87;
}

uint64_t sub_10030D478()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 57, 7);
}

double destroy for ContentStatusBannerViewModel(_QWORD *a1)
{
  double result;
  unint64_t v3;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[5]).n128_u64[0];
  v3 = a1[7];
  if (v3 >= 2)
    *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for ContentStatusBannerViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2 + 6;
  v7 = a2[7];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  if (v7 >= 2)
  {
    a1[6] = *v6;
    a1[7] = v7;
    swift_bridgeObjectRetain(v7);
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)v6;
  }
  return a1;
}

_QWORD *assignWithCopy for ContentStatusBannerViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v5 = a2[3];
  a1[3] = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v6 = a2[5];
  a1[5] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a2[7];
  if (a1[7] >= 2uLL)
  {
    if (v7 >= 2)
    {
      a1[6] = a2[6];
      v9 = a2[7];
      a1[7] = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1001A27B4((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v7 < 2)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  a1[6] = a2[6];
  v8 = a2[7];
  a1[7] = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

_QWORD *assignWithTake for ContentStatusBannerViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2 + 6;
  if (a1[7] >= 2uLL)
  {
    v8 = a2[7];
    if (v8 >= 2)
    {
      a1[6] = *v7;
      a1[7] = v8;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1001A27B4((uint64_t)(a1 + 6));
  }
  *((_OWORD *)a1 + 3) = *(_OWORD *)v7;
  return a1;
}

ValueMetadata *type metadata accessor for FoundationContentStatusBannerLastUpdatedFormatter()
{
  return &type metadata for FoundationContentStatusBannerLastUpdatedFormatter;
}

uint64_t sub_10030D724(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0BA4, 1);
}

void sub_10030D734(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD v89[69];

  v89[63] = a1;
  v89[26] = sub_1000BA294(&qword_100BD6FA8);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  sub_10009511C(v4);
  v89[56] = sub_1000BA294(&qword_100BD6FB0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v6);
  sub_100079F7C();
  sub_10009511C(v7);
  sub_1000BA294(&qword_100BD6FB8);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v9);
  sub_100079F7C();
  sub_10009511C(v10);
  sub_1000BA294(&qword_100BD6FC0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  sub_10009511C(v12);
  v89[23] = sub_1000BA294(&qword_100BD6FC8);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  sub_10009511C(v14);
  v89[51] = sub_1000BA294(&qword_100BD6FD0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v16);
  sub_100079F7C();
  v89[30] = v17;
  v18 = sub_1000BE79C();
  v89[15] = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_10009511C((uint64_t)v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89[16] = v20;
  __chkstk_darwin(v21);
  sub_100079F7C();
  sub_10009511C(v22);
  v89[52] = sub_1000BA294(&qword_100BD6FD8);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100088FDC();
  sub_10009511C(v24);
  v89[48] = sub_1000BA294(&qword_100BD6FE0);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  sub_10009511C(v26);
  v89[53] = sub_1000BA294(&qword_100BD6FE8);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100088FDC();
  sub_10009511C(v28);
  v89[68] = sub_1000BA294(&qword_100BD6FF0);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100088FDC();
  sub_10009511C(v30);
  v89[14] = sub_1000BA294(&qword_100BD6FF8);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100088FDC();
  sub_10009511C(v32);
  v89[45] = sub_1000BA294(&qword_100BD7000);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v34);
  sub_100079F7C();
  sub_10009511C(v35);
  sub_1000BA294(&qword_100BD7008);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v37);
  sub_100079F7C();
  sub_10009511C(v38);
  v89[10] = sub_1000BA294(&qword_100BD7010);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_100088FDC();
  sub_10009511C(v40);
  v89[44] = sub_1000BA294(&qword_100BD7018);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v42);
  sub_100079F7C();
  sub_10009511C(v43);
  sub_1000BA294(&qword_100BD7020);
  sub_1000B42B0();
  __chkstk_darwin(v44);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v45);
  sub_100079F7C();
  sub_10009511C(v46);
  v89[38] = sub_1000BA294(&qword_100BD7028);
  sub_1000B42B0();
  __chkstk_darwin(v47);
  sub_100088FDC();
  sub_10009511C(v48);
  v89[61] = sub_1000BA294(&qword_100BD7030);
  sub_1000B42B0();
  __chkstk_darwin(v49);
  sub_100088FDC();
  sub_10009511C(v50);
  v89[5] = sub_1000BA294(&qword_100BD7038);
  sub_1000B42B0();
  __chkstk_darwin(v51);
  sub_100088FDC();
  sub_10009511C(v52);
  v89[39] = sub_1000BA294(&qword_100BD7040);
  sub_1000B42B0();
  __chkstk_darwin(v53);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v54);
  sub_100079F7C();
  sub_10009511C(v55);
  sub_1000BA294(&qword_100BD7048);
  sub_1000B42B0();
  __chkstk_darwin(v56);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v57);
  sub_100079F7C();
  sub_10009511C(v58);
  sub_1000BA294(&qword_100BD7050);
  sub_1000B42B0();
  __chkstk_darwin(v59);
  sub_100098728();
  v89[35] = sub_1000BA294(&qword_100BD7058);
  sub_1000B42B0();
  __chkstk_darwin(v60);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v61);
  sub_100079F7C();
  v89[4] = v62;
  type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  sub_1000B42B0();
  __chkstk_darwin(v63);
  sub_1000B30E0();
  __chkstk_darwin(v64);
  sub_100079F7C();
  sub_10009511C(v65);
  v89[64] = sub_1000BA294(&qword_100BD7060);
  sub_1000B42B0();
  __chkstk_darwin(v66);
  sub_100088FDC();
  v89[66] = v67;
  v89[57] = sub_1000BA294(&qword_100BD7068);
  sub_1000B42B0();
  __chkstk_darwin(v68);
  sub_100088FDC();
  sub_10009511C(v69);
  v89[32] = sub_1000BA294(&qword_100BD7070);
  sub_1000B42B0();
  __chkstk_darwin(v70);
  sub_100088FDC();
  sub_10009511C(v71);
  v89[58] = sub_1000BA294(&qword_100BD7078);
  sub_1000B42B0();
  __chkstk_darwin(v72);
  sub_100088FDC();
  sub_10009511C(v73);
  v89[65] = sub_1000BA294(&qword_100BD7080);
  sub_1000B42B0();
  __chkstk_darwin(v74);
  sub_100088FDC();
  v89[60] = v75;
  v89[31] = type metadata accessor for ContentViewiOS(0);
  sub_1000B42B0();
  __chkstk_darwin(v76);
  sub_100098728();
  type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  sub_1000B42B0();
  __chkstk_darwin(v77);
  sub_100098728();
  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
  sub_1000B42B0();
  __chkstk_darwin(v78);
  sub_100098728();
  v81 = v80 - v79;
  type metadata accessor for UnitsConfigurationViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v82);
  sub_100094EC4();
  sub_1000BA294(&qword_100BD7088);
  sub_1000B42B0();
  __chkstk_darwin(v83);
  sub_1000986FC();
  v89[62] = v84;
  __chkstk_darwin(v85);
  sub_100079F7C();
  v89[67] = v86;
  v87 = *(_QWORD *)(v1 + 8);
  swift_retain();
  sub_10017B3CC(v2);
  swift_release(v87);
  sub_10007802C(v2, v81, type metadata accessor for UnitsConfigurationViewModel.Representation);
  v88 = (char *)&loc_10030DF14 + *((int *)qword_10030EFA0 + swift_getEnumCaseMultiPayload(v81));
  __asm { BR              X10 }
}

void sub_10030DF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1000C665C(v1, v5 - 192);
  sub_1000C0DB8(v0, v5 - 464);
  sub_1000E7730();
  v6 = sub_100099A0C((uint64_t)&unk_100B6D160);
  sub_1000CCB3C(v6);
  sub_1000FD924();
  sub_1000BE8E8();
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000DA93C();
  sub_1000989C4();
  sub_1000C3850(v8, (uint64_t)"units_unit_section_title");
  sub_10009D4A8();
  v9 = sub_1000C14B8();
  sub_1000CE584(v9, v10);
  sub_1000C2788();
  sub_1000DAC40(v11);
  sub_10009945C();
  sub_1000CCB28();
  v12 = *(_QWORD *)(v5 - 688);
  sub_1000DB8DC(v2, v12);
  v13 = *(_QWORD *)(v5 - 424);
  sub_1000DD914(*(int *)(v13 + 36));
  sub_100098BE0(v12, v5 - 376);
  v14 = *(_QWORD *)(v5 - 408);
  sub_1000C09F8(v4, v14);
  sub_1000CCB58(v14, v5 - 176);
  sub_1000890C4((uint64_t)&unk_100BD70F8);
  sub_100316FC4((uint64_t)&unk_100BD7108);
  sub_100321DD8();
  sub_1000D8F28(v14, v13, v15, v16, v17);
  v18 = *(_QWORD *)(v5 - 264);
  sub_1000DB8DC(v3, v18);
  sub_1000B4798(v18, v5 - 24);
  sub_100316E10();
  v19 = sub_100316F18();
  sub_1000E6F80(v19);
  sub_10009E47C(v3);
  v20 = *(_QWORD *)(v5 - 208);
  sub_1000DB8DC(v2, v20);
  sub_1000916FC(v20, *(_QWORD *)(v5 - 224));
  sub_1000CD6F0((uint64_t)&unk_100BD70C8);
  sub_10030C45C((uint64_t)&unk_100BD7118);
  sub_1000D9558(v21);
  sub_10009E47C(v2);
  sub_1000D0C94();
  sub_100075DD0(*(_QWORD *)(v5 - 448));
  v22 = *(_QWORD *)(v5 - 240);
  sub_10011ABB4(v18, v22);
  v23 = *(_QWORD *)(v5 - 232);
  sub_10011ABB4(v22, v23);
  v24 = v23 + *(int *)(sub_1000BA294(&qword_100BD7120) + 48);
  *(_QWORD *)v24 = 0;
  *(_BYTE *)(v24 + 8) = 1;
  sub_100075DD0(v18);
  sub_100075DD0(v22);
}

void sub_10030EFBC(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  _QWORD *v6;
  uint64_t v7;
  Swift::String *v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String *v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String *v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  _QWORD v34[3];
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;

  sub_10007802C(a1, a3, type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
  v5 = (int *)type metadata accessor for ConditionsContentView(0);
  sub_10003C800(a2, a3 + v5[5]);
  v6 = (_QWORD *)(a3 + v5[6]);
  v34[0] = 0;
  State.init(wrappedValue:)(v34, &type metadata for CGFloat);
  v7 = v34[2];
  *v6 = v34[1];
  v6[1] = v7;
  v8 = (Swift::String *)(a3 + v5[7]);
  v9 = (void *)objc_opt_self(NSBundle);
  v10 = objc_msgSend(v9, "mainBundle");
  v11._countAndFlagsBits = 0xD000000000000018;
  v35._countAndFlagsBits = 0xD000000000000057;
  v35._object = (void *)0x80000001009FAA60;
  v11._object = (void *)0x80000001009FAA40;
  v12._countAndFlagsBits = 1684957527;
  v12._object = (void *)0xE400000000000000;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v35);

  *v8 = v13;
  v14 = (Swift::String *)(a3 + v5[8]);
  v15 = objc_msgSend(v9, "mainBundle");
  v16._countAndFlagsBits = 0xD000000000000021;
  v36._countAndFlagsBits = 0xD000000000000060;
  v36._object = (void *)0x80000001009FAAF0;
  v16._object = (void *)0x80000001009FAAC0;
  v17._countAndFlagsBits = 0x7469706963657250;
  v17._object = (void *)0xED00006E6F697461;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v36);

  *v14 = v18;
  v19 = (Swift::String *)(a3 + v5[9]);
  v20 = objc_msgSend(v9, "mainBundle");
  v37._object = (void *)0x80000001009FAB80;
  v21._object = (void *)0x80000001009FAB60;
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v22._countAndFlagsBits = 0x6572757373657250;
  v22._object = (void *)0xE800000000000000;
  v37._countAndFlagsBits = 0xD00000000000005BLL;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v37);

  *v19 = v23;
  v24 = (Swift::String *)(a3 + v5[10]);
  v25 = objc_msgSend(v9, "mainBundle");
  v38._object = (void *)0x80000001009FAC00;
  v26._object = (void *)0x80000001009FABE0;
  v26._countAndFlagsBits = 0xD00000000000001CLL;
  v27._countAndFlagsBits = 0x65636E6174736944;
  v27._object = (void *)0xE800000000000000;
  v38._countAndFlagsBits = 0xD00000000000005BLL;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v38);

  *v24 = v28;
  v29 = (Swift::String *)(a3 + v5[11]);
  v30 = objc_msgSend(v9, "mainBundle");
  v31._countAndFlagsBits = 0xD00000000000001FLL;
  v39._countAndFlagsBits = 0xD00000000000004ALL;
  v39._object = (void *)0x80000001009FAC80;
  v31._object = (void *)0x80000001009FAC60;
  v32._countAndFlagsBits = 0x74617265706D6554;
  v32._object = (void *)0xEB00000000657275;
  v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v39);

  *v29 = v33;
}

void sub_10030F310(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000ED430(a1, a2, a3);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100094EC4();
  sub_1000DB418((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  v9 = sub_1000B3B80();
  sub_1000DC390(v9);
  v10 = sub_100094F84();
  a5(v10);
  sub_10009E47C(v5);
  sub_10004A2A0();
}

void sub_10030F380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;

  v4 = type metadata accessor for UnitConfiguration.Temperature(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD7148);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v13, v14);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v4) == 1)
  {
    sub_1000DB418((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v4);
    sub_100615EE4((uint64_t)v10);
    sub_100021A14((uint64_t)v10, &qword_100BD7148);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_1000DB418((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v4);
    sub_100615EE4((uint64_t)v10);
    sub_100021A14((uint64_t)v10, &qword_100BD7148);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_10030F54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v7, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v8 = type metadata accessor for UnitConfiguration.Temperature(0);
  v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8);
  sub_1000215BC((uint64_t)v7, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  if (v9 == 1)
  {
    v10 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
    sub_1004EEBD4(a3 + *(int *)(v10 + 20), 0);
  }
  else
  {
    sub_1004EEDEC();
  }
}

void sub_10030F61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v7, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v8 = type metadata accessor for UnitConfiguration.Temperature(0);
  v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8);
  sub_1000215BC((uint64_t)v7, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  if (v9 == 1)
  {
    v10 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
    sub_1004EEBD4(a3 + *(int *)(v10 + 20), 1);
  }
  else
  {
    sub_1004EEF58();
  }
}

uint64_t sub_10030F6EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[6];

  v1 = *v0;
  sub_100043CA8((uint64_t)(v0 + 1), (uint64_t)v15);
  v15[5] = 0x4028000000000000;
  swift_retain();
  v2 = sub_1000BA294(&qword_100BC44A8);
  sub_10027248C((uint64_t)&qword_100BC44B0);
  v14[0] = ObservedObject.init(wrappedValue:)(v1, v2, v3);
  v14[1] = v4;
  v12 = v0;
  v5 = sub_1000BA294(&qword_100BD6F90);
  v6 = sub_10030FB7C();
  v7 = sub_100075EB0(&qword_100BC66F0);
  sub_10027248C((uint64_t)&unk_100BD6FA0);
  v13[0] = v7;
  v13[1] = v8;
  v9 = sub_10009885C((uint64_t)v13, (uint64_t)&opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>);
  View.toolbar<A>(content:)(sub_10030FB74, &v11, &type metadata for UnitsConfigurationView, v5, v6, v9);
  return sub_10030FBB8((uint64_t)v14);
}

uint64_t sub_10030F814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1000BA294(&qword_100BC66F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter(v9);
  v14 = a1;
  v10 = sub_1000BA294(&qword_100BC4FA0);
  sub_10027248C((uint64_t)&qword_100BC4FC0);
  ToolbarItem<>.init(placement:content:)(v4, sub_10030FBE4, v13, v10);
  sub_10027248C((uint64_t)&unk_100BD6FA0);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v5, v11);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10030F95C(uint64_t *a1)
{
  _OWORD *v1;
  __int128 v2;
  _OWORD v4[3];

  sub_10030FBEC(a1, (uint64_t)v4);
  v1 = (_OWORD *)swift_allocObject(&unk_100B6CFC0, 64, 7);
  v2 = v4[1];
  v1[1] = v4[0];
  v1[2] = v2;
  v1[3] = v4[2];
  return Button.init(action:label:)(sub_10030FC4C, v1, sub_10030FA0C, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_10030F9DC(uint64_t a1)
{
  sub_1000DB418((_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 32));
  sub_100615CD0();
}

void sub_10030FA0C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for Font.TextStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v10 = Text.init(_:tableName:bundle:comment:)(v6, v8, v7 & 1, v9, 0, 0, 0, "Button that dismisses presented unit configuration view");
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Font.TextStyle.body(_:), v2);
  static Font.Weight.semibold.getter(v17);
  v18 = static Font.system(_:weight:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v19 = Text.font(_:)(v18, v10, v12, v16, v14);
  v21 = v20;
  LOBYTE(v3) = v22;
  v24 = v23;
  swift_release(v18);
  sub_1000D31B4(v10, v12, v16);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v21;
  *(_BYTE *)(a1 + 16) = v3 & 1;
  *(_QWORD *)(a1 + 24) = v24;
}

uint64_t sub_10030FB74()
{
  uint64_t v0;

  return sub_10030F814(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10030FB7C()
{
  unint64_t result;

  result = qword_100BD6F98;
  if (!qword_100BD6F98)
  {
    result = swift_getWitnessTable(&unk_100994A68, &type metadata for UnitsConfigurationView);
    atomic_store(result, (unint64_t *)&qword_100BD6F98);
  }
  return result;
}

uint64_t sub_10030FBB8(uint64_t a1)
{
  destroy for HomeAndWorkRefinementView(a1);
  return a1;
}

uint64_t sub_10030FBE4()
{
  uint64_t v0;

  return sub_10030F95C(*(uint64_t **)(v0 + 16));
}

uint64_t sub_10030FBEC(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for TemperatureAveragesDetailView(a2, a1);
  return a2;
}

uint64_t sub_10030FC20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10030FC4C()
{
  uint64_t v0;

  sub_10030F9DC(v0 + 16);
}

uint64_t sub_10030FC54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_100321224(v1, a1, &qword_100BD7048);
  v3 = sub_1000BA294(&qword_100BD7048);
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v3);
  v4 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v5 = a1 + v4[5];
  v6 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  sub_100321224(v1 + v6[5], v5, &qword_100BD7020);
  v7 = sub_1000BA294(&qword_100BD7020);
  _s7Weather24LocationCompositionStateOwst_0(v5, 0, 1, v7);
  v8 = a1 + v4[6];
  sub_100321224(v1 + v6[6], v8, &qword_100BD7008);
  v9 = sub_1000BA294(&qword_100BD7008);
  _s7Weather24LocationCompositionStateOwst_0(v8, 0, 1, v9);
  v10 = a1 + v4[7];
  v11 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  _s7Weather24LocationCompositionStateOwst_0(v10, 1, 1, v11);
  v12 = a1 + v4[8];
  sub_100321224(v1 + v6[8], v12, &qword_100BD6FB8);
  v13 = sub_1000BA294(&qword_100BD6FB8);
  return _s7Weather24LocationCompositionStateOwst_0(v12, 0, 1, v13);
}

uint64_t sub_10030FDAC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[16];
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;

  v54 = a1;
  v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0, a2);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  __chkstk_darwin(v3);
  v51 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InsetGroupedListStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  v48 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD7350);
  v45 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1000BA294(&qword_100BD7358);
  v44 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BD7360);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BD7368);
  v18 = *(_QWORD *)(v17 - 8);
  v49 = v17;
  v50 = v18;
  __chkstk_darwin(v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v2;
  v21 = sub_1000BA294(&qword_100BD7370);
  sub_10027248C((uint64_t)&unk_100BD7378);
  v23 = List<>.init(content:)(sub_10031B7FC, v55, v21, v22);
  InsetGroupedListStyle.init()(v23);
  sub_10027248C((uint64_t)&unk_100BD7380);
  v24 = v47;
  View.listStyle<A>(_:)(v8, v9, v47, v25, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v24);
  v26.n128_f64[0] = (*(double (**)(char *, uint64_t))(v45 + 8))(v11, v9);
  v27 = static Color.secondary.getter(v26);
  KeyPath = swift_getKeyPath(&unk_100994C90);
  v29 = v44;
  v30 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v16, v13, v46);
  v31 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  *v31 = KeyPath;
  v31[1] = v27;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
  v32 = (uint64_t *)(v43 + *(int *)(type metadata accessor for ContentViewiOS(0) + 24));
  v34 = *v32;
  v33 = (_QWORD *)v32[1];
  v57 = v34;
  v58 = v33;
  v35 = sub_10031B80C();
  v36 = sub_100114EF8();
  View.navigationTitle<A>(_:)(&v57, v14, &type metadata for String, v35, v36);
  sub_100021A14((uint64_t)v16, &qword_100BD7360);
  v37 = v51;
  v38 = v52;
  v39 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v53);
  v57 = v14;
  v58 = &type metadata for String;
  v59 = v35;
  v60 = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v57, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v41 = v49;
  View.navigationBarTitleDisplayMode(_:)(v37, v49, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v20, v41);
}

void sub_100310158(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  Swift::String *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String *v36;
  id v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53[6];
  __int128 v54[5];
  Swift::String v55;
  Swift::String v56;

  v52 = a2;
  v50 = type metadata accessor for ConditionsView(0);
  __chkstk_darwin(v50);
  v51 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v49 = (uint64_t)&v44 - v5;
  v47 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v47);
  v46 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  v10 = sub_1000BA294(&qword_100BD7148);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD6FC0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TemperatureView(0);
  __chkstk_darwin(v16);
  v18 = (Swift::String *)((char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v45 = (uint64_t)&v44 - v20;
  v48 = type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  v21 = *(int *)(v48 + 28);
  v44 = a1;
  v22 = a1 + v21;
  sub_100321224(a1 + v21, (uint64_t)v15, &qword_100BD6FC0);
  v23 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  sub_100321224(v22 + *(int *)(v23 + 20), (uint64_t)v12, &qword_100BD7148);
  v24 = a1 + *(int *)(type metadata accessor for ContentViewiOS(0) + 20);
  sub_100043CA8(v24, (uint64_t)v54);
  v25 = (void *)objc_opt_self(NSBundle);
  v26 = objc_msgSend(v25, "mainBundle");
  v55._countAndFlagsBits = 0xD00000000000004ALL;
  v55._object = (void *)0x80000001009FAC80;
  v27._object = (void *)0x80000001009FAC60;
  v27._countAndFlagsBits = 0xD00000000000001FLL;
  v28._countAndFlagsBits = 0x74617265706D6554;
  v28._object = (void *)0xEB00000000657275;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v55);

  *v18 = v29;
  v30 = type metadata accessor for UnitConfiguration.Temperature(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v30);
  v31 = v46;
  sub_100080C0C((uint64_t)v9, v46, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  State.init(wrappedValue:)(v31, v47);
  sub_1000215BC((uint64_t)v9, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  sub_1003211F0((uint64_t)v15, (uint64_t)v18 + v16[5], &qword_100BD6FC0);
  sub_1003211F0((uint64_t)v12, (uint64_t)v18 + v16[7], &qword_100BD7148);
  sub_10003C800(v54, (uint64_t)v18 + v16[6]);
  v32 = v45;
  sub_10007802C((uint64_t)v18, v45, type metadata accessor for TemperatureView);
  v33 = v49;
  v34 = v44;
  sub_10030FC54(v49);
  v35 = v50;
  sub_100043CA8(v24, v33 + *(int *)(v50 + 20));
  v36 = (Swift::String *)(v33 + *(int *)(v35 + 24));
  v37 = objc_msgSend(v25, "mainBundle");
  v38._countAndFlagsBits = 0xD000000000000020;
  v56._countAndFlagsBits = 0xD000000000000083;
  v56._object = (void *)0x80000001009FAD00;
  v38._object = (void *)0x80000001009FACD0;
  v39._countAndFlagsBits = 0x6E5520726568744FLL;
  v39._object = (void *)0xEB00000000737469;
  v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v56);

  *v36 = v40;
  sub_100043CA8(v24, (uint64_t)v53);
  sub_1003106CC(v53, *(_BYTE *)(v34 + *(int *)(v48 + 36)), (uint64_t)v54);
  sub_100080C0C(v32, (uint64_t)v18, type metadata accessor for TemperatureView);
  v41 = v51;
  sub_100080C0C(v33, v51, type metadata accessor for ConditionsView);
  sub_10031B918((uint64_t)v54, (uint64_t)v53);
  v42 = v52;
  sub_100080C0C((uint64_t)v18, v52, type metadata accessor for TemperatureView);
  v43 = sub_1000BA294(&qword_100BD7390);
  sub_100080C0C(v41, v42 + *(int *)(v43 + 48), type metadata accessor for ConditionsView);
  sub_10031B918((uint64_t)v53, v42 + *(int *)(v43 + 64));
  sub_10031B94C(v54);
  sub_1000215BC(v33, type metadata accessor for ConditionsView);
  sub_1000215BC(v32, type metadata accessor for TemperatureView);
  sub_10031B94C(v53);
  sub_1000215BC(v41, type metadata accessor for ConditionsView);
  sub_1000215BC((uint64_t)v18, type metadata accessor for TemperatureView);
}

void sub_1003106CC(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;

  sub_10003C800(a1, a3);
  *(_BYTE *)(a3 + 40) = a2;
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7._countAndFlagsBits = 0xD000000000000023;
  v18._countAndFlagsBits = 0xD000000000000064;
  v18._object = (void *)0x80000001009FADC0;
  v7._object = (void *)0x80000001009FAD90;
  v8._countAndFlagsBits = 0x20746C7561666544;
  v8._object = (void *)0xED00007374696E55;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v18);

  *(Swift::String *)(a3 + 48) = v9;
  v10 = objc_msgSend(v5, "mainBundle");
  v11._countAndFlagsBits = 0xD000000000000029;
  v12._countAndFlagsBits = 0xD000000000000036;
  v19._countAndFlagsBits = 0xD00000000000006ALL;
  v19._object = (void *)0x80000001009FAEA0;
  v11._object = (void *)0x80000001009FAE30;
  v12._object = (void *)0x80000001009FAE60;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v19);

  *(Swift::String *)(a3 + 64) = v13;
  v14 = objc_msgSend(v5, "mainBundle");
  v15._countAndFlagsBits = 0xD00000000000002ALL;
  v20._countAndFlagsBits = 0xD000000000000074;
  v20._object = (void *)0x80000001009FAF60;
  v15._object = (void *)0x80000001009FAF10;
  v16._object = (void *)0x80000001009FAF40;
  v16._countAndFlagsBits = 0xD000000000000010;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v20);

  *(Swift::String *)(a3 + 80) = v17;
}

uint64_t sub_1003108B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  char *v29;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];

  v2 = v1;
  v36 = a1;
  v3 = type metadata accessor for TemperatureView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  v31[1] = v3;
  v6 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v33);
  v9 = (_QWORD *)((char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_1000BA294(&qword_100BD76E8);
  __chkstk_darwin(v37);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD76F0);
  v13 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  v35 = v13;
  __chkstk_darwin(v12);
  v32 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100310BE0(v2);
  v15 = (char *)v2 + *(int *)(v5 + 20);
  v16 = sub_1000BA294(&qword_100BD6FC0);
  sub_100080C0C((uint64_t)&v15[*(int *)(v16 + 36)], (uint64_t)v9, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  sub_100080C0C((uint64_t)v2, (uint64_t)v7, type metadata accessor for TemperatureView);
  v17 = *(unsigned __int8 *)(v4 + 80);
  v18 = (v17 + 16) & ~v17;
  v31[0] = v18 + v6;
  v19 = v17 | 7;
  v20 = swift_allocObject(&unk_100B6D548, v18 + v6, v17 | 7);
  sub_10007802C((uint64_t)v7, v20 + v18, type metadata accessor for TemperatureView);
  v21 = sub_1003214A4();
  sub_10007A100((uint64_t)&unk_100BD7730);
  v23 = v22;
  v24 = v33;
  View.onChange<A>(of:initial:_:)(v9, 1, sub_100321498, v20, v37, v33, v21, v22);
  swift_release(v20);
  sub_1000215BC((uint64_t)v9, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  sub_100021A14((uint64_t)v11, &qword_100BD76E8);
  v25 = sub_1000BA294(&qword_100BD74F8);
  State.wrappedValue.getter(v9, v25);
  sub_100080C0C((uint64_t)v2, (uint64_t)v7, type metadata accessor for TemperatureView);
  v26 = swift_allocObject(&unk_100B6D570, v31[0], v19);
  sub_10007802C((uint64_t)v7, v26 + v18, type metadata accessor for TemperatureView);
  v38[0] = v37;
  v38[1] = v24;
  v38[2] = v21;
  v38[3] = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v38, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v28 = v34;
  v29 = v32;
  View.onChange<A>(of:initial:_:)(v9, 0, sub_1003216D8, v26, v34, v24, OpaqueTypeConformance2, v23);
  swift_release(v26);
  sub_1000215BC((uint64_t)v9, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v29, v28);
}

uint64_t sub_100310BE0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];
  _QWORD v15[2];
  char v16;
  uint64_t v17;

  v14[2] = a1;
  v1 = *a1;
  v2 = a1[1];
  v3 = swift_bridgeObjectRetain(v2);
  v4 = static Color.secondary.getter(v3);
  v15[0] = v4;
  v5 = Text.foregroundStyle<A>(_:)(v15, v1, v2, 0, _swiftEmptyArrayStorage, &type metadata for Color, &protocol witness table for Color);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  swift_release(v4);
  swift_bridgeObjectRelease();
  v15[0] = v5;
  v15[1] = v7;
  v16 = v9 & 1;
  v17 = v11;
  v12 = sub_1000BA294(&qword_100BD7718);
  sub_100321580();
  return Section<>.init(header:content:)(v15, sub_10032172C, v14, &type metadata for Text, v12, &protocol witness table for Text);
}

uint64_t sub_100310CD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for TemperatureView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v20 = *(_QWORD *)(a1 + *(int *)(v5 + 20));
  v6 = v20;
  KeyPath = swift_getKeyPath(&unk_100994F38);
  sub_100080C0C(a1, (uint64_t)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TemperatureView);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_100B6D598, v9 + v4, v8 | 7);
  sub_10007802C((uint64_t)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for TemperatureView);
  swift_bridgeObjectRetain(v6);
  v11 = sub_1000BA294(&qword_100BD7738);
  v12 = sub_1000BA294(&qword_100BD7728);
  sub_10027248C((uint64_t)&unk_100BD7740);
  v14 = v13;
  sub_10007A100((uint64_t)&unk_100BD7748);
  v16 = v15;
  sub_10027248C((uint64_t)&unk_100BD7720);
  return ForEach<>.init(_:id:content:)(&v20, KeyPath, sub_100321738, v10, v11, v12, v14, v16, v17);
}

uint64_t sub_100310E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v21[1] = a3;
  v5 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TemperatureView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a2, (uint64_t)v12, type metadata accessor for TemperatureView);
  sub_100080C0C(a1, (uint64_t)v8, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v11 + v15 + v14) & ~v15;
  v17 = swift_allocObject(&unk_100B6D5C0, v16 + v7, v13 | v15 | 7);
  sub_10007802C((uint64_t)v12, v17 + v14, type metadata accessor for TemperatureView);
  sub_10007802C((uint64_t)v8, v17 + v16, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v23 = a1;
  v24 = a2;
  v18 = sub_1000BA294(&qword_100BD7750);
  sub_10027248C((uint64_t)&unk_100BD7758);
  return Button.init(action:label:)(sub_10032188C, v17, sub_1003218EC, v22, v18, v19);
}

void sub_100311000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v10 - v7;
  sub_100080C0C(a2, (uint64_t)&v10 - v7, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  type metadata accessor for TemperatureView(0);
  sub_100080C0C((uint64_t)v8, (uint64_t)v5, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v9 = sub_1000BA294(&qword_100BD74F8);
  State.wrappedValue.setter(v5, v9);
  sub_1000215BC((uint64_t)v8, type metadata accessor for UnitsConfigurationViewModel.Temperature);
}

__n128 sub_1003110E0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  __n128 result;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  char v14;
  uint64_t v15;
  char v16;
  __int128 v17;

  v6 = static VerticalAlignment.center.getter(a1);
  sub_100311164(a1, a2, (uint64_t)v13);
  v7 = v14;
  v8 = v15;
  v9 = v16;
  result = (__n128)v13[0];
  v11 = v13[1];
  v12 = v17;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  *(__n128 *)(a3 + 24) = result;
  *(_OWORD *)(a3 + 40) = v11;
  *(_BYTE *)(a3 + 56) = v7;
  *(_QWORD *)(a3 + 64) = v8;
  *(_BYTE *)(a3 + 72) = v9;
  *(_OWORD *)(a3 + 80) = v12;
  return result;
}

double sub_100311164@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v6 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - v10;
  sub_100080C0C(a1, (uint64_t)&v31 - v10, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v12 = type metadata accessor for UnitConfiguration.Temperature(0);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  sub_1000215BC((uint64_t)v11, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  if (v13 == 1)
  {
    v14 = type metadata accessor for TemperatureView(0);
    sub_1004EEBD4(a2 + *(int *)(v14 + 28), 0);
    v31 = v15;
    v32 = v16;
    v33 = 0;
    v34 = _swiftEmptyArrayStorage;
    v35 = 0;
  }
  else
  {
    sub_1004EEDEC();
    v31 = v17;
    v32 = v18;
    v33 = 0;
    v34 = _swiftEmptyArrayStorage;
    v35 = 1;
  }
  _ConditionalContent<>.init(storage:)(&v31, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  v19 = v36;
  v20 = v37;
  v21 = v38;
  v22 = v39;
  v23 = v40;
  type metadata accessor for TemperatureView(0);
  v24 = sub_1000BA294(&qword_100BD74F8);
  State.wrappedValue.getter(v8, v24);
  sub_100658A18();
  v26 = v25;
  sub_1000215BC((uint64_t)v8, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v27 = 0;
  v28 = 0;
  if ((v26 & 1) != 0)
  {
    v27 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
    v28 = static Color.blue.getter(v29);
  }
  *(_QWORD *)a3 = v19;
  *(_QWORD *)(a3 + 8) = v20;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v22;
  *(_BYTE *)(a3 + 32) = v23;
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 1;
  *(_QWORD *)(a3 + 56) = v27;
  *(_QWORD *)(a3 + 64) = v28;
  sub_100177CCC(v19, v20, v21, v22);
  sub_1003218F4(v27, v28);
  sub_100321920(v27, v28);
  return sub_100177CF4(v19, v20, v21, v22);
}

void sub_1003113A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v10 - v7;
  sub_100080C0C(a2, (uint64_t)&v10 - v7, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  type metadata accessor for TemperatureView(0);
  sub_100080C0C((uint64_t)v8, (uint64_t)v5, type metadata accessor for UnitsConfigurationViewModel.Temperature);
  v9 = sub_1000BA294(&qword_100BD74F8);
  State.wrappedValue.setter(v5, v9);
  sub_1000215BC((uint64_t)v8, type metadata accessor for UnitsConfigurationViewModel.Temperature);
}

void sub_100311488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = sub_1000BA294(&qword_100BD7148);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UnitConfiguration.Temperature(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a2, (uint64_t)v14, v15);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v8) == 1)
  {
    v16 = type metadata accessor for TemperatureView(0);
    sub_1000DB418((_QWORD *)(a3 + *(int *)(v16 + 24)), *(_QWORD *)(a3 + *(int *)(v16 + 24) + 24));
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v8);
    sub_100615EE4((uint64_t)v7);
    sub_100021A14((uint64_t)v7, &qword_100BD7148);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    v17 = type metadata accessor for TemperatureView(0);
    sub_1000DB418((_QWORD *)(a3 + *(int *)(v17 + 24)), *(_QWORD *)(a3 + *(int *)(v17 + 24) + 24));
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v8);
    sub_100615EE4((uint64_t)v7);
    sub_100021A14((uint64_t)v7, &qword_100BD7148);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_10031166C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[2];
  char v17;
  uint64_t v18;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ConditionsView(0) + 24));
  v2 = *v1;
  v3 = v1[1];
  v4 = swift_bridgeObjectRetain(v3);
  v5 = static Color.secondary.getter(v4);
  v16[0] = v5;
  v6 = Text.foregroundStyle<A>(_:)(v16, v2, v3, 0, _swiftEmptyArrayStorage, &type metadata for Color, &protocol witness table for Color);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_release(v5);
  swift_bridgeObjectRelease();
  v16[0] = v6;
  v16[1] = v8;
  v17 = v10 & 1;
  v18 = v12;
  v13 = type metadata accessor for ConditionsContentView(0);
  sub_10007A100((uint64_t)&unk_100BD76E0);
  return Section<>.init(header:content:)(v16, sub_10032148C, &v15, &type metadata for Text, v13, &protocol witness table for Text);
}

void sub_100311788(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];

  v4 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v6, v7);
  v8 = type metadata accessor for ConditionsView(0);
  sub_100043CA8(a1 + *(int *)(v8 + 20), (uint64_t)v10);
  sub_10030EFBC((uint64_t)v6, v10, a2);
}

void sub_10031182C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100311834(v1, a1);
}

void sub_100311834(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  _QWORD *v97;
  Swift::String *v98;
  void *v99;
  uint64_t v100;
  id v101;
  Swift::String v102;
  Swift::String v103;
  Swift::String v104;
  char *v105;
  uint64_t (**v106)(uint64_t, uint64_t);
  uint64_t (**v107)(uint64_t, uint64_t);
  void (**v108)(uint64_t);
  unsigned int v109;
  uint64_t v110;
  int v111;
  int v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int *v158;
  _QWORD *v159;
  Swift::String *v160;
  id v161;
  Swift::String v162;
  Swift::String v163;
  Swift::String v164;
  char *v165;
  _QWORD *v166;
  _QWORD *v167;
  void (**v168)(uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  int *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  Swift::String *v187;
  id v188;
  Swift::String v189;
  Swift::String v190;
  Swift::String v191;
  char *v192;
  _QWORD *v193;
  _QWORD *v194;
  void (**v195)(uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int *v200;
  uint64_t v201;
  int *v202;
  int **v203;
  int *v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int **v214;
  Swift::String *v215;
  id v216;
  Swift::String v217;
  Swift::String v218;
  Swift::String v219;
  char *v220;
  _QWORD *v221;
  _QWORD *v222;
  void (**v223)(uint64_t);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  int *v232;
  int **v233;
  int *v234;
  uint64_t v235;
  uint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  int **v244;
  Swift::String *v245;
  id v246;
  Swift::String v247;
  Swift::String v248;
  Swift::String v249;
  char *v250;
  _QWORD *v251;
  _QWORD *v252;
  void (**v253)(uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  int *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  int **v291;
  uint64_t v292;
  uint64_t v293;
  int **v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  int *v321;
  int *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  Swift::String v328;
  Swift::String v329;
  Swift::String v330;
  Swift::String v331;
  Swift::String v332;

  v313 = a2;
  v310 = sub_1000BA294(&qword_100BD7038);
  __chkstk_darwin(v310);
  v294 = (int **)((char *)&v263 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1000BA294(&qword_100BD71D8);
  __chkstk_darwin(v4);
  v306 = (uint64_t)&v263 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v305 = sub_1000BA294(&qword_100BD7048);
  __chkstk_darwin(v305);
  v292 = (uint64_t)&v263 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v293 = (uint64_t)&v263 - v8;
  v9 = sub_1000BA294(&qword_100BD7398);
  __chkstk_darwin(v9);
  v312 = (uint64_t)&v263 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v311 = (uint64_t)&v263 - v12;
  v304 = sub_1000BA294(&qword_100BD6FF8);
  __chkstk_darwin(v304);
  v291 = (int **)((char *)&v263 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1000BA294(&qword_100BD71E8);
  __chkstk_darwin(v14);
  v303 = (uint64_t)&v263 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = sub_1000BA294(&qword_100BD7008);
  __chkstk_darwin(v302);
  v289 = (uint64_t)&v263 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v290 = (uint64_t)&v263 - v18;
  v19 = sub_1000BA294(&qword_100BD73A0);
  __chkstk_darwin(v19);
  v309 = (uint64_t)&v263 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v318 = (uint64_t)&v263 - v22;
  v301 = sub_1000BA294(&qword_100BD7010);
  __chkstk_darwin(v301);
  v288 = (char *)&v263 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BD71E0);
  __chkstk_darwin(v24);
  v300 = (uint64_t)&v263 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v299 = sub_1000BA294(&qword_100BD7020);
  __chkstk_darwin(v299);
  v286 = (uint64_t)&v263 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v287 = (uint64_t)&v263 - v28;
  v29 = sub_1000BA294(&qword_100BD73A8);
  __chkstk_darwin(v29);
  v308 = (uint64_t)&v263 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v317 = (uint64_t)&v263 - v32;
  v298 = sub_1000BA294(&qword_100BD6FA8);
  __chkstk_darwin(v298);
  v285 = (char *)&v263 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000BA294(&qword_100BD71F8);
  __chkstk_darwin(v34);
  v297 = (uint64_t)&v263 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v296 = sub_1000BA294(&qword_100BD6FB8);
  __chkstk_darwin(v296);
  v283 = (uint64_t)&v263 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v284 = (uint64_t)&v263 - v38;
  v39 = sub_1000BA294(&qword_100BD73B0);
  __chkstk_darwin(v39);
  v307 = (uint64_t)&v263 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v324 = (uint64_t)&v263 - v42;
  v278 = type metadata accessor for QuaternaryDividerStyle(0);
  v277 = *(_QWORD *)(v278 - 8);
  __chkstk_darwin(v278);
  v276 = (char *)&v263 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275 = type metadata accessor for Divider(0);
  v274 = *(_QWORD *)(v275 - 8);
  __chkstk_darwin(v275);
  v273 = (char *)&v263 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v282 = sub_1000BA294(&qword_100BD6D20);
  v280 = *(_QWORD *)(v282 - 8);
  __chkstk_darwin(v282);
  v281 = (char *)&v263 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v279 = (char *)&v263 - v47;
  v322 = (int *)type metadata accessor for ConditionsContentView(0);
  v48 = *((_QWORD *)v322 - 1);
  v49 = *(_QWORD *)(v48 + 64);
  __chkstk_darwin(v322);
  v50 = sub_1000BA294(&qword_100BD6FC0);
  __chkstk_darwin(v50);
  v295 = (uint64_t)&v263 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = sub_1000BA294(&qword_100BD6FC8);
  __chkstk_darwin(v268);
  v267 = (char *)&v263 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = sub_1000BA294(&qword_100BD6FD0);
  __chkstk_darwin(v270);
  v272 = (uint64_t)&v263 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  v269 = (uint64_t)&v263 - v55;
  __chkstk_darwin(v56);
  v271 = (uint64_t)&v263 - v57;
  v58 = sub_1000BA294(&qword_100BD71F0);
  __chkstk_darwin(v58);
  v60 = (char *)&v263 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  v266 = *(char **)(v61 - 8);
  v62 = *((_QWORD *)v266 + 8);
  __chkstk_darwin(v61);
  v63 = (char *)&v263 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  v66 = (char *)&v263 - v65;
  v67 = sub_1000BA294(&qword_100BD73B8);
  __chkstk_darwin(v67);
  v314 = (uint64_t)&v263 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v69);
  v71 = (char *)&v263 - v70;
  v321 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  sub_100321224(a1 + v321[7], (uint64_t)v60, &qword_100BD71F0);
  v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61);
  v319 = v71;
  v320 = a1;
  v323 = (uint64_t)&v263 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v49;
  v315 = v48;
  v316 = v49;
  v74 = v48;
  v75 = v322;
  if (v72 == 1)
  {
    sub_100021A14((uint64_t)v60, &qword_100BD71F0);
    v76 = sub_1000BA294(&qword_100BD73C0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 1, 1, v76);
    v77 = v323;
    v78 = v73;
    v79 = v74;
    v80 = v75;
  }
  else
  {
    sub_10007802C((uint64_t)v60, (uint64_t)v66, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
    v81 = a1;
    v82 = (uint64_t *)(a1 + v75[11]);
    v84 = *v82;
    v83 = v82[1];
    v265 = v84;
    v264 = v83;
    sub_100321224((uint64_t)v66, v295, &qword_100BD6FC0);
    sub_100080C0C((uint64_t)v66, (uint64_t)v63, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
    v85 = v266[80];
    v86 = (v85 + 16) & ~v85;
    v87 = v86 + v62;
    v88 = v85 | 7;
    v89 = swift_allocObject(&unk_100B6D320, v86 + v62, v85 | 7);
    sub_10007802C((uint64_t)v63, v89 + v86, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
    v266 = v66;
    sub_100080C0C((uint64_t)v66, (uint64_t)v63, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
    v90 = swift_allocObject(&unk_100B6D348, v87, v88);
    sub_10007802C((uint64_t)v63, v90 + v86, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
    v91 = v81;
    v92 = v323;
    sub_100080C0C(v91, v323, type metadata accessor for ConditionsContentView);
    v93 = *(unsigned __int8 *)(v74 + 80);
    v94 = (v93 + 16) & ~v93;
    v95 = swift_allocObject(&unk_100B6D370, v94 + v73, v93 | 7);
    sub_10007802C(v92, v95 + v94, type metadata accessor for ConditionsContentView);
    v96 = (int *)v268;
    v97 = v267;
    v98 = (Swift::String *)&v267[*(int *)(v268 + 56)];
    v99 = (void *)objc_opt_self(NSBundle);
    v100 = v264;
    v101 = objc_msgSend(v99, "mainBundle", swift_bridgeObjectRetain(v264).n128_f64[0]);
    v328._countAndFlagsBits = 0xD000000000000051;
    v328._object = (void *)0x80000001009FA980;
    v102._object = (void *)0x80000001009FA960;
    v102._countAndFlagsBits = 0xD000000000000018;
    v103._countAndFlagsBits = 1953066581;
    v103._object = (void *)0xE400000000000000;
    v104 = NSLocalizedString(_:tableName:bundle:value:comment:)(v102, (Swift::String_optional)0, (NSBundle)v101, v103, v328);

    *v98 = v104;
    *v97 = v265;
    v97[1] = v100;
    sub_1003211F0(v295, (uint64_t)v97 + v96[9], &qword_100BD6FC0);
    v105 = (char *)v97 + v96[10];
    *(_QWORD *)v105 = 0;
    v105[8] = 1;
    v106 = (uint64_t (**)(uint64_t, uint64_t))((char *)v97 + v96[12]);
    *v106 = sub_100317028;
    v106[1] = (uint64_t (*)(uint64_t, uint64_t))v89;
    v107 = (uint64_t (**)(uint64_t, uint64_t))((char *)v97 + v96[13]);
    *v107 = sub_100317038;
    v107[1] = (uint64_t (*)(uint64_t, uint64_t))v90;
    v108 = (void (**)(uint64_t))((char *)v97 + v96[11]);
    *v108 = sub_10031BCE8;
    v108[1] = (void (*)(uint64_t))v95;
    v109 = static Edge.Set.vertical.getter();
    v110 = Edge.Set.init(rawValue:)(0);
    v111 = v110;
    v112 = Edge.Set.init(rawValue:)(v110);
    if (Edge.Set.init(rawValue:)(v112 & v109) != v109)
      LOBYTE(v111) = Edge.Set.init(rawValue:)(v111 | v109);
    v113 = EdgeInsets.init(_all:)(4.0);
    v115 = v114;
    v117 = v116;
    v119 = v118;
    v120 = v269;
    sub_100321224((uint64_t)v97, v269, &qword_100BD6FC8);
    v121 = v120 + *(int *)(v270 + 36);
    *(_BYTE *)v121 = v111;
    *(double *)(v121 + 8) = v113;
    *(_QWORD *)(v121 + 16) = v115;
    *(_QWORD *)(v121 + 24) = v117;
    *(_QWORD *)(v121 + 32) = v119;
    *(_BYTE *)(v121 + 40) = 0;
    sub_100021A14((uint64_t)v97, &qword_100BD6FC8);
    v122 = v271;
    sub_1003211F0(v120, v271, &qword_100BD6FD0);
    v123 = v273;
    v125 = Divider.init()(v124);
    v126 = v276;
    static DividerStyle<>.quaternary.getter(v125);
    sub_10007A100((uint64_t)&qword_100BC69B0);
    v128 = v127;
    sub_10007A100((uint64_t)&unk_100BD6E68);
    v129 = v281;
    v130 = v275;
    v131 = v278;
    View.dividerStyle<A>(_:)(v126, v275, v278, v128, v132);
    (*(void (**)(char *, uint64_t))(v277 + 8))(v126, v131);
    (*(void (**)(char *, uint64_t))(v274 + 8))(v123, v130);
    v133 = v280;
    v134 = v279;
    v135 = v282;
    (*(void (**)(char *, char *, uint64_t))(v280 + 32))(v279, v129, v282);
    v136 = v272;
    sub_100321224(v122, v272, &qword_100BD6FD0);
    v137 = *(void (**)(char *, char *, uint64_t))(v133 + 16);
    v137(v129, v134, v135);
    v138 = v314;
    sub_100321224(v136, v314, &qword_100BD6FD0);
    v139 = sub_1000BA294(qword_100BD73D0);
    v137((char *)(v138 + *(int *)(v139 + 48)), v129, v135);
    v140 = *(void (**)(char *, uint64_t))(v133 + 8);
    v140(v134, v135);
    sub_100021A14(v122, &qword_100BD6FD0);
    sub_1000215BC((uint64_t)v266, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
    v140(v129, v135);
    sub_100021A14(v136, &qword_100BD6FD0);
    v141 = sub_1000BA294(&qword_100BD73C0);
    _s7Weather24LocationCompositionStateOwst_0(v138, 0, 1, v141);
    sub_1003211F0(v138, (uint64_t)v319, &qword_100BD73B8);
    v80 = v322;
    v77 = v323;
    v79 = v315;
    v78 = v316;
  }
  v142 = v320;
  v143 = v297;
  sub_100321224(v320 + v321[8], v297, &qword_100BD71F8);
  if (_s7Weather24LocationCompositionStateOwet_0(v143, 1, v296) == 1)
  {
    sub_100021A14(v143, &qword_100BD71F8);
    v144 = 1;
    v145 = v324;
    v146 = v298;
  }
  else
  {
    v147 = v284;
    sub_1003211F0(v143, v284, &qword_100BD6FB8);
    v148 = (uint64_t *)(v142 + v80[7]);
    v149 = v148[1];
    v297 = *v148;
    v150 = v283;
    sub_100321224(v147, v283, &qword_100BD6FB8);
    v151 = (uint64_t *)(v142 + v80[6]);
    v152 = *v151;
    v153 = v151[1];
    v325 = v152;
    v326 = v153;
    swift_bridgeObjectRetain(v149);
    v154 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v327, v154);
    v296 = v327;
    sub_100080C0C(v142, v77, type metadata accessor for ConditionsContentView);
    v155 = *(unsigned __int8 *)(v79 + 80);
    v156 = (v155 + 16) & ~v155;
    v157 = swift_allocObject(&unk_100B6D2F8, v156 + v78, v155 | 7);
    sub_10007802C(v77, v157 + v156, type metadata accessor for ConditionsContentView);
    v158 = (int *)v298;
    v159 = v285;
    v160 = (Swift::String *)&v285[*(int *)(v298 + 56)];
    v161 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v329._countAndFlagsBits = 0xD000000000000051;
    v329._object = (void *)0x80000001009FA980;
    v162._object = (void *)0x80000001009FA960;
    v162._countAndFlagsBits = 0xD000000000000018;
    v163._countAndFlagsBits = 1953066581;
    v163._object = (void *)0xE400000000000000;
    v164 = NSLocalizedString(_:tableName:bundle:value:comment:)(v162, (Swift::String_optional)0, (NSBundle)v161, v163, v329);

    *v160 = v164;
    v142 = v320;
    *v159 = v297;
    v159[1] = v149;
    v146 = (uint64_t)v158;
    sub_1003211F0(v150, (uint64_t)v159 + v158[9], &qword_100BD6FB8);
    v165 = (char *)v159 + v158[10];
    *(_QWORD *)v165 = v296;
    v165[8] = 0;
    v166 = (_QWORD *)((char *)v159 + v158[12]);
    *v166 = 0;
    v166[1] = 0;
    v167 = (_QWORD *)((char *)v159 + v158[13]);
    *v167 = 0;
    v167[1] = 0;
    v168 = (void (**)(uint64_t))((char *)v159 + v158[11]);
    *v168 = sub_10031BC30;
    v168[1] = (void (*)(uint64_t))v157;
    sub_100021A14(v147, &qword_100BD6FB8);
    v145 = v324;
    sub_1003211F0((uint64_t)v159, v324, &qword_100BD6FA8);
    v144 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v145, v144, 1, v146);
  v169 = v300;
  sub_100321224(v142 + v321[5], v300, &qword_100BD71E0);
  if (_s7Weather24LocationCompositionStateOwet_0(v169, 1, v299) == 1)
  {
    sub_100021A14(v169, &qword_100BD71E0);
    v170 = 1;
    v171 = v317;
    v172 = (int *)v301;
  }
  else
  {
    v173 = v287;
    sub_1003211F0(v169, v287, &qword_100BD7020);
    v174 = v322;
    v175 = (uint64_t *)(v142 + v322[8]);
    v176 = v175[1];
    v300 = *v175;
    v177 = v286;
    sub_100321224(v173, v286, &qword_100BD7020);
    v178 = (uint64_t *)(v142 + v174[6]);
    v179 = *v178;
    v180 = v178[1];
    v325 = v179;
    v326 = v180;
    swift_bridgeObjectRetain(v176);
    v181 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v327, v181);
    v299 = v327;
    v182 = v323;
    sub_100080C0C(v142, v323, type metadata accessor for ConditionsContentView);
    v183 = *(unsigned __int8 *)(v315 + 80);
    v184 = (v183 + 16) & ~v183;
    v185 = swift_allocObject(&unk_100B6D2D0, v184 + v316, v183 | 7);
    sub_10007802C(v182, v185 + v184, type metadata accessor for ConditionsContentView);
    v172 = (int *)v301;
    v186 = v288;
    v187 = (Swift::String *)&v288[*(int *)(v301 + 56)];
    v188 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v330._countAndFlagsBits = 0xD000000000000051;
    v330._object = (void *)0x80000001009FA980;
    v189._object = (void *)0x80000001009FA960;
    v189._countAndFlagsBits = 0xD000000000000018;
    v190._countAndFlagsBits = 1953066581;
    v190._object = (void *)0xE400000000000000;
    v191 = NSLocalizedString(_:tableName:bundle:value:comment:)(v189, (Swift::String_optional)0, (NSBundle)v188, v190, v330);

    *v187 = v191;
    v142 = v320;
    *v186 = v300;
    v186[1] = v176;
    sub_1003211F0(v177, (uint64_t)v186 + v172[9], &qword_100BD7020);
    v192 = (char *)v186 + v172[10];
    *(_QWORD *)v192 = v299;
    v192[8] = 0;
    v193 = (_QWORD *)((char *)v186 + v172[12]);
    *v193 = 0;
    v193[1] = 0;
    v194 = (_QWORD *)((char *)v186 + v172[13]);
    *v194 = 0;
    v194[1] = 0;
    v195 = (void (**)(uint64_t))((char *)v186 + v172[11]);
    *v195 = sub_10031BC10;
    v195[1] = (void (*)(uint64_t))v185;
    sub_100021A14(v173, &qword_100BD7020);
    v196 = (uint64_t)v186;
    v171 = v317;
    sub_1003211F0(v196, v317, &qword_100BD7010);
    v170 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v171, v170, 1, (uint64_t)v172);
  v197 = v303;
  sub_100321224(v142 + v321[6], v303, &qword_100BD71E8);
  if (_s7Weather24LocationCompositionStateOwet_0(v197, 1, v302) == 1)
  {
    sub_100021A14(v197, &qword_100BD71E8);
    v198 = 1;
    v199 = v318;
    v200 = (int *)v304;
  }
  else
  {
    v201 = v290;
    sub_1003211F0(v197, v290, &qword_100BD7008);
    v202 = v322;
    v203 = (int **)(v142 + v322[9]);
    v204 = v203[1];
    v321 = *v203;
    v205 = v289;
    sub_100321224(v201, v289, &qword_100BD7008);
    v206 = (uint64_t *)(v142 + v202[6]);
    v207 = *v206;
    v208 = v206[1];
    v325 = v207;
    v326 = v208;
    swift_bridgeObjectRetain(v204);
    v209 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v327, v209);
    v303 = v327;
    v210 = v323;
    sub_100080C0C(v142, v323, type metadata accessor for ConditionsContentView);
    v211 = *(unsigned __int8 *)(v315 + 80);
    v212 = (v211 + 16) & ~v211;
    v213 = swift_allocObject(&unk_100B6D2A8, v212 + v316, v211 | 7);
    sub_10007802C(v210, v213 + v212, type metadata accessor for ConditionsContentView);
    v200 = (int *)v304;
    v214 = v291;
    v215 = (Swift::String *)((char *)v291 + *(int *)(v304 + 56));
    v216 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v331._countAndFlagsBits = 0xD000000000000051;
    v331._object = (void *)0x80000001009FA980;
    v217._object = (void *)0x80000001009FA960;
    v217._countAndFlagsBits = 0xD000000000000018;
    v218._countAndFlagsBits = 1953066581;
    v218._object = (void *)0xE400000000000000;
    v219 = NSLocalizedString(_:tableName:bundle:value:comment:)(v217, (Swift::String_optional)0, (NSBundle)v216, v218, v331);

    *v215 = v219;
    v142 = v320;
    *v214 = v321;
    v214[1] = v204;
    sub_1003211F0(v205, (uint64_t)v214 + v200[9], &qword_100BD7008);
    v220 = (char *)v214 + v200[10];
    *(_QWORD *)v220 = v303;
    v220[8] = 0;
    v221 = (int **)((char *)v214 + v200[12]);
    *v221 = 0;
    v221[1] = 0;
    v222 = (int **)((char *)v214 + v200[13]);
    *v222 = 0;
    v222[1] = 0;
    v223 = (void (**)(uint64_t))((char *)v214 + v200[11]);
    *v223 = sub_10031BBF0;
    v223[1] = (void (*)(uint64_t))v213;
    sub_100021A14(v201, &qword_100BD7008);
    v224 = (uint64_t)v214;
    v199 = v318;
    sub_1003211F0(v224, v318, &qword_100BD6FF8);
    v198 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v199, v198, 1, (uint64_t)v200);
  v225 = v306;
  sub_100321224(v142, v306, &qword_100BD71D8);
  if (_s7Weather24LocationCompositionStateOwet_0(v225, 1, v305) == 1)
  {
    sub_100021A14(v225, &qword_100BD71D8);
    v226 = 1;
    v227 = v311;
    v228 = (uint64_t)v319;
    v229 = (int *)v310;
  }
  else
  {
    v230 = v225;
    v231 = v293;
    sub_1003211F0(v230, v293, &qword_100BD7048);
    v232 = v322;
    v233 = (int **)(v142 + v322[10]);
    v234 = v233[1];
    v321 = *v233;
    v235 = v292;
    sub_100321224(v231, v292, &qword_100BD7048);
    v236 = (uint64_t *)(v142 + v232[6]);
    v237 = *v236;
    v238 = v236[1];
    v325 = v237;
    v326 = v238;
    swift_bridgeObjectRetain(v234);
    v239 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v327, v239);
    v322 = (int *)v327;
    v240 = v323;
    sub_100080C0C(v142, v323, type metadata accessor for ConditionsContentView);
    v241 = *(unsigned __int8 *)(v315 + 80);
    v242 = (v241 + 16) & ~v241;
    v243 = swift_allocObject(&unk_100B6D280, v242 + v316, v241 | 7);
    sub_10007802C(v240, v243 + v242, type metadata accessor for ConditionsContentView);
    v229 = (int *)v310;
    v244 = v294;
    v245 = (Swift::String *)((char *)v294 + *(int *)(v310 + 56));
    v246 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v332._countAndFlagsBits = 0xD000000000000051;
    v332._object = (void *)0x80000001009FA980;
    v247._object = (void *)0x80000001009FA960;
    v247._countAndFlagsBits = 0xD000000000000018;
    v248._countAndFlagsBits = 1953066581;
    v248._object = (void *)0xE400000000000000;
    v249 = NSLocalizedString(_:tableName:bundle:value:comment:)(v247, (Swift::String_optional)0, (NSBundle)v246, v248, v332);

    *v245 = v249;
    *v244 = v321;
    v244[1] = v234;
    sub_1003211F0(v235, (uint64_t)v244 + v229[9], &qword_100BD7048);
    v250 = (char *)v244 + v229[10];
    *(_QWORD *)v250 = v322;
    v250[8] = 0;
    v251 = (int **)((char *)v244 + v229[12]);
    *v251 = 0;
    v251[1] = 0;
    v252 = (int **)((char *)v244 + v229[13]);
    *v252 = 0;
    v252[1] = 0;
    v253 = (void (**)(uint64_t))((char *)v244 + v229[11]);
    *v253 = sub_10031B97C;
    v253[1] = (void (*)(uint64_t))v243;
    sub_100021A14(v231, &qword_100BD7048);
    v227 = v311;
    sub_1003211F0((uint64_t)v244, v311, &qword_100BD7038);
    v226 = 0;
    v228 = (uint64_t)v319;
  }
  _s7Weather24LocationCompositionStateOwst_0(v227, v226, 1, (uint64_t)v229);
  v254 = v314;
  sub_100321224(v228, v314, &qword_100BD73B8);
  v255 = v307;
  sub_100321224(v324, v307, &qword_100BD73B0);
  v256 = v317;
  v257 = v308;
  sub_100321224(v317, v308, &qword_100BD73A8);
  v258 = v318;
  v259 = v309;
  sub_100321224(v318, v309, &qword_100BD73A0);
  v260 = v312;
  sub_100321224(v227, v312, &qword_100BD7398);
  v261 = v313;
  sub_100321224(v254, v313, &qword_100BD73B8);
  v262 = (int *)sub_1000BA294(&qword_100BD73C8);
  sub_100321224(v255, v261 + v262[12], &qword_100BD73B0);
  sub_100321224(v257, v261 + v262[16], &qword_100BD73A8);
  sub_100321224(v259, v261 + v262[20], &qword_100BD73A0);
  sub_100321224(v260, v261 + v262[24], &qword_100BD7398);
  sub_100021A14(v227, &qword_100BD7398);
  sub_100021A14(v258, &qword_100BD73A0);
  sub_100021A14(v256, &qword_100BD73A8);
  sub_100021A14(v324, &qword_100BD73B0);
  sub_100021A14((uint64_t)v319, &qword_100BD73B8);
  sub_100021A14(v260, &qword_100BD7398);
  sub_100021A14(v259, &qword_100BD73A0);
  sub_100021A14(v257, &qword_100BD73A8);
  sub_100021A14(v255, &qword_100BD73B0);
  sub_100021A14(v254, &qword_100BD73B8);
}

void sub_1003132B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for UnitConfiguration.Temperature(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD7148);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v13, v14);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v4) == 1)
  {
    v15 = type metadata accessor for ConditionsContentView(0);
    sub_1000DB418((_QWORD *)(a2 + *(int *)(v15 + 20)), *(_QWORD *)(a2 + *(int *)(v15 + 20) + 24));
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v4);
    sub_100615EE4((uint64_t)v10);
    sub_100021A14((uint64_t)v10, &qword_100BD7148);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    v16 = type metadata accessor for ConditionsContentView(0);
    sub_1000DB418((_QWORD *)(a2 + *(int *)(v16 + 20)), *(_QWORD *)(a2 + *(int *)(v16 + 20) + 24));
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v4);
    sub_100615EE4((uint64_t)v10);
    sub_100021A14((uint64_t)v10, &qword_100BD7148);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_100313494(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000ED430(a1, a2, a3);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100094EC4();
  v9 = type metadata accessor for ConditionsContentView(0);
  sub_1000DB418((_QWORD *)(a2 + *(int *)(v9 + 20)), *(_QWORD *)(a2 + *(int *)(v9 + 20) + 24));
  v10 = sub_1000B3B80();
  sub_1000DC390(v10);
  v11 = sub_100094F84();
  a5(v11);
  sub_100075DD0(v5);
  sub_10004A2A0();
}

uint64_t sub_100313514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t *, uint64_t, __n128);
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t WitnessTable;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t *, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];

  v70 = a2;
  v4 = type metadata accessor for MenuPickerStyle(0);
  __chkstk_darwin(v4);
  v68 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = type metadata accessor for Binding(0, v6);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v52 - v8);
  v10 = *(_QWORD *)(a1 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v12);
  v61 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  v58 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(v58 + 8);
  v67 = v6;
  v71[0] = v6;
  v71[1] = v4;
  v69 = v4;
  v62 = v19;
  v71[2] = v19;
  v71[3] = &protocol witness table for MenuPickerStyle;
  v63 = type metadata accessor for PickerSection(0, (uint64_t)v71);
  v66 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v64 = (uint64_t)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v65 = (char *)&v52 - v23;
  v25 = *v2;
  v24 = v2[1];
  v26 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(v10 + 16);
  v26(v18, v2, a1, v22);
  if (v24)
  {
    v59 = v24;
    v60 = v25;
  }
  else
  {
    v27 = (uint64_t *)&v18[*(int *)(a1 + 56)];
    v28 = *v27;
    v59 = v27[1];
    v60 = v28;
    swift_bridgeObjectRetain(v59);
  }
  v29 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
  v30 = swift_bridgeObjectRetain(v24);
  v29(v18, a1, v30);
  sub_1003138D0(a1, v9);
  v31 = *(int *)(a1 + 40);
  v54 = *(uint64_t *)((char *)v2 + *(int *)(a1 + 36));
  v57 = *(uint64_t *)((char *)v2 + v31);
  v56 = *((unsigned __int8 *)v2 + v31 + 8);
  v53 = (void (*)(char *, uint64_t *, uint64_t))v26;
  ((void (*)(char *, uint64_t *, uint64_t))v26)(v15, v2, a1);
  v32 = *(unsigned __int8 *)(v10 + 80);
  v55 = v9;
  v33 = (v32 + 32) & ~v32;
  v34 = v33 + v11;
  v35 = v32 | 7;
  v36 = swift_allocObject(&unk_100B6D1E0, v34, v32 | 7);
  v37 = v67;
  v38 = v15;
  v39 = v58;
  *(_QWORD *)(v36 + 16) = v67;
  *(_QWORD *)(v36 + 24) = v39;
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v40(v36 + v33, v38, a1);
  v41 = v61;
  v53(v61, v2, a1);
  v42 = swift_allocObject(&unk_100B6D208, v34, v35);
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v39;
  v40(v42 + v33, v41, a1);
  v43 = v54;
  v44 = swift_bridgeObjectRetain(v54);
  v45 = (uint64_t)v68;
  MenuPickerStyle.init()(v44);
  v46 = v64;
  sub_100313BC0(v60, v59, v45, (uint64_t)v55, v43, v57, v56, (uint64_t)sub_10031B588, v64, v36, (uint64_t)sub_10031B648, v42, v37, v69, v62, (uint64_t)&protocol witness table for MenuPickerStyle);
  v47 = v63;
  WitnessTable = swift_getWitnessTable(&unk_100994E08, v63);
  v49 = (uint64_t)v65;
  sub_1000B2074(v46, v47, WitnessTable);
  v50 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v50(v46, v47);
  sub_1000B1100(v49, v47, v70);
  return ((uint64_t (*)(uint64_t, uint64_t))v50)(v49, v47);
}

_QWORD *sub_1003138D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v24[2];
  char *v25;
  _QWORD *v26;

  v26 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(a1);
  v25 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v24 - v7;
  v24[0] = *(_QWORD *)(v3 + 16);
  ((void (*)(char *, __n128))v24[0])((char *)v24 - v7, v6);
  v9 = type metadata accessor for MainActor(0);
  v10 = static MainActor.shared.getter(v9);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 48) & ~v11;
  v13 = v12 + v4;
  v14 = v11 | 7;
  v15 = (char *)swift_allocObject(&unk_100B6D230, v12 + v4, v11 | 7);
  *((_QWORD *)v15 + 2) = v10;
  *((_QWORD *)v15 + 3) = &protocol witness table for MainActor;
  v17 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  *((_QWORD *)v15 + 4) = v17;
  *((_QWORD *)v15 + 5) = v16;
  v18 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v18(&v15[v12], v8, a1);
  v19 = v25;
  v20 = ((uint64_t (*)(char *, _QWORD, uint64_t))v24[0])(v25, v24[1], a1);
  v21 = static MainActor.shared.getter(v20);
  v22 = (char *)swift_allocObject(&unk_100B6D258, v13, v14);
  *((_QWORD *)v22 + 2) = v21;
  *((_QWORD *)v22 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v22 + 4) = v17;
  *((_QWORD *)v22 + 5) = v16;
  v18(&v22[v12], v19, a1);
  return Binding.init(get:set:)(v26, sub_10031B6D8, v15, sub_10031B7C0, v22, v17);
}

uint64_t sub_100313A64(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t, _QWORD, __n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v9 = a3 + *(int *)(type metadata accessor for ConditionContentView(0, a4, a5, a4) + 48);
  v10 = *(uint64_t (**)(uint64_t, _QWORD, __n128))v9;
  if (*(_QWORD *)v9)
  {
    v11 = *(_QWORD *)(v9 + 8);
    v12 = swift_retain();
    v13 = v10(a1, a2 & 1, v12);
    sub_1000BF8D0((uint64_t)v10, v11);
    return v13;
  }
  else if ((a2 & 1) != 0)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  }
  else
  {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  }
}

uint64_t sub_100313B18(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t, _QWORD, __n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v9 = a3 + *(int *)(type metadata accessor for ConditionContentView(0, a4, a5, a4) + 52);
  v10 = *(uint64_t (**)(uint64_t, _QWORD, __n128))v9;
  if (!*(_QWORD *)v9)
    return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  v11 = *(_QWORD *)(v9 + 8);
  v12 = swift_retain();
  v13 = v10(a1, a2 & 1, v12);
  sub_1000BF8D0((uint64_t)v10, v11);
  return v13;
}

uint64_t sub_100313BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int *v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD v35[4];

  v35[0] = a13;
  v35[1] = a14;
  v35[2] = a15;
  v35[3] = a16;
  v22 = (int *)type metadata accessor for PickerSection(0, (uint64_t)v35);
  v23 = (_QWORD *)(a9 + v22[19]);
  *v23 = swift_getKeyPath(&unk_100994C60);
  v24 = sub_1000BA294(&qword_100BC2990);
  v25 = swift_storeEnumTagMultiPayload(v23, v24, 0);
  v26 = (_QWORD *)(a9 + v22[13]);
  *v26 = a1;
  v26[1] = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(a14 - 8) + 32))(a9 + v22[14], a3, a14, v25);
  v27 = type metadata accessor for Binding(0, a13);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a9, a4, v27);
  *(_QWORD *)(a9 + v22[16]) = a5;
  v29 = a9 + v22[15];
  *(_QWORD *)v29 = a6;
  *(_BYTE *)(v29 + 8) = a7 & 1;
  v30 = (_QWORD *)(a9 + v22[17]);
  *v30 = a8;
  v30[1] = a10;
  v31 = (_QWORD *)(a9 + v22[18]);
  *v31 = a11;
  v31[1] = a12;
  return result;
}

uint64_t sub_100313D2C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a1 + *(int *)(type metadata accessor for ConditionContentView(0, a2, a3, a2) + 36);
  v9 = v7 + *(int *)(type metadata accessor for UnitsConfigurationViewModel.Configuration(0, a2, a3, v8) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v9, a2);
}

uint64_t sub_100313D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = type metadata accessor for ConditionContentView(0, a5, a6, a4);
  return (*(uint64_t (**)(uint64_t))(a4 + *(int *)(v8 + 44)))(a1);
}

uint64_t sub_100313DEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeMetadata2;
  uint64_t TupleTypeMetadata3;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v108 = a2;
  v3 = sub_100075EB0(&qword_100BD75E0);
  v4 = sub_100075EB0(&qword_100BD75E8);
  v5 = a1[2];
  v6 = type metadata accessor for Array(255, v5);
  v7 = sub_100075EB0(&qword_100BD75F0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v9 = a1[4];
  v125 = v6;
  v126 = v5;
  v102 = v5;
  v127 = v7;
  v128 = WitnessTable;
  v101 = v9;
  v129 = v9;
  v10 = type metadata accessor for ForEach(255, &v125);
  sub_1003208AC((uint64_t)&unk_100BD75F8);
  v12 = v11;
  v124 = sub_100320A3C();
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v10);
  v125 = v4;
  v126 = v10;
  v127 = v12;
  v128 = v13;
  v14 = type metadata accessor for Menu(255, &v125);
  v15 = type metadata accessor for DefaultMenuStyle(255);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v14);
  sub_10007A100((uint64_t)&unk_100BD7648);
  v125 = v14;
  v126 = v15;
  v127 = v16;
  v128 = v17;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v125, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v3, &type metadata for Spacer, OpaqueTypeMetadata2, 0, 0);
  v20 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v20);
  v22 = type metadata accessor for HStack(255, v20, v21);
  v23 = sub_100075EB0(&qword_100BD7650);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v23, OpaqueTypeMetadata2, 0, 0);
  v99 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v97 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v99);
  v25 = type metadata accessor for VStack(255, v99, v97);
  v26 = swift_getTupleTypeMetadata2(255, v22, v25, 0, 0);
  v93 = type metadata accessor for TupleView(255, v26);
  v91 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v93);
  v27 = type metadata accessor for ViewThatFits(0, v93);
  v96 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v94 = (uint64_t)&v90 - v28;
  v106 = v29;
  v30 = type metadata accessor for ModifiedContent(0, v29, &type metadata for _FlexFrameLayout);
  v98 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v32 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v100 = (char *)&v90 - v34;
  v90 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v35);
  v37 = (char *)&v90 - v36;
  v107 = v25;
  v38 = type metadata accessor for ModifiedContent(0, v25, &type metadata for _FlexFrameLayout);
  v92 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v40 = (char *)&v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v95 = (uint64_t)&v90 - v42;
  v43 = type metadata accessor for DynamicTypeSize(0);
  v44 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v46 = (char *)&v90 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v30;
  v104 = type metadata accessor for _ConditionalContent(0, v38, v30);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v109 = (uint64_t)&v90 - v47;
  sub_10010FD3C();
  LOBYTE(v25) = DynamicTypeSize.isAccessibilitySize.getter();
  v48 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v46, v43);
  if ((v25 & 1) != 0)
  {
    v50 = static HorizontalAlignment.leading.getter(v48);
    __chkstk_darwin(v50);
    v89 = a1[3];
    v52 = VStack.init(alignment:spacing:content:)(v51, 0, 1, sub_100320AE4, &v87, v99, v97);
    v53 = static Alignment.leading.getter(v52);
    v55 = v54;
    v56 = v107;
    v57 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v107);
    LOBYTE(v89) = 1;
    LOBYTE(v88) = 1;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v88, 0, v89, v53, v55, v56, v57);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v37, v56);
    v112 = v57;
    v113 = &protocol witness table for _FlexFrameLayout;
    v58 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
    v59 = v95;
    sub_1000B2074(v40, v38, v58);
    v60 = *(void (**)(char *, uint64_t))(v92 + 8);
    v60(v40, v38);
    sub_1000B1100(v59, v38, (uint64_t)v40);
    v61 = v106;
    v110 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v106);
    v111 = &protocol witness table for _FlexFrameLayout;
    v62 = v105;
    v63 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v105);
    sub_1001589C0((uint64_t)v40, v38, v62, v58, v63, v64, v65, v66, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99);
    v60(v40, v38);
    v60((char *)v59, v38);
  }
  else
  {
    v67 = static Axis.Set.horizontal.getter(v49);
    v68 = __chkstk_darwin(v67);
    v89 = a1[3];
    v69 = v94;
    v70 = ViewThatFits.init(in:content:)(v68);
    v71 = static Alignment.leading.getter(v70);
    v73 = v72;
    v61 = v106;
    v74 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v106);
    LOBYTE(v89) = 1;
    LOBYTE(v88) = 1;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v88, 0, v89, v71, v73, v61, v74);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v69, v61);
    v122 = v74;
    v123 = &protocol witness table for _FlexFrameLayout;
    v62 = v105;
    v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v105);
    v76 = (uint64_t)v100;
    sub_1000B2074(v32, v62, v75);
    v77 = *(void (**)(char *, uint64_t))(v98 + 8);
    v77(v32, v62);
    sub_1000B1100(v76, v62, (uint64_t)v32);
    v56 = v107;
    v120 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v107);
    v121 = &protocol witness table for _FlexFrameLayout;
    v78 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
    sub_1000B20B0((uint64_t)v32, v38, v62, v78, v75, v79, v80, v81, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99);
    v77(v32, v62);
    v77((char *)v76, v62);
  }
  v118 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v56);
  v119 = &protocol witness table for _FlexFrameLayout;
  v82 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
  v116 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v61);
  v117 = &protocol witness table for _FlexFrameLayout;
  v83 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v62);
  v114 = v82;
  v115 = v83;
  v84 = v104;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v104);
  v85 = v109;
  sub_1000B1100(v109, v84, v108);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v103 + 8))(v85, v84);
}

void sub_100314724(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v5 = sub_1000BA294(&qword_100BD7678);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD7668);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v2 + *(int *)(a1 + 52));
  v12 = v11[1];
  v28 = *v11;
  v29 = v12;
  v13 = sub_100114EF8();
  swift_bridgeObjectRetain(v12);
  v14 = Text.init<A>(_:)(&v28, &type metadata for String, v13);
  v16 = v15;
  v28 = v14;
  v29 = v15;
  v18 = v17 & 1;
  v30 = v17 & 1;
  v31 = v19;
  View.accessibilityHidden(_:)(1, &type metadata for Text, &protocol witness table for Text);
  sub_1000D31B4(v14, v16, v18);
  swift_bridgeObjectRelease();
  v21 = static Font.body.getter(v20);
  KeyPath = swift_getKeyPath(&unk_100994ED8);
  sub_100321224((uint64_t)v7, (uint64_t)v10, &qword_100BD7678);
  v23 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v23 = KeyPath;
  v23[1] = v21;
  sub_100021A14((uint64_t)v7, &qword_100BD7678);
  v24 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v25 = Color.init(_:)(v24);
  v26 = swift_getKeyPath(&unk_100994E58);
  sub_100321224((uint64_t)v10, a2, &qword_100BD7668);
  v27 = (uint64_t *)(a2 + *(int *)(sub_1000BA294(&qword_100BD7650) + 36));
  *v27 = v26;
  v27[1] = v25;
  sub_100021A14((uint64_t)v10, &qword_100BD7668);
}

uint64_t sub_100314920@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v31 = a2;
  v29 = type metadata accessor for DefaultMenuStyle(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100075EB0(&qword_100BD75E8);
  v5 = a1[2];
  v6 = type metadata accessor for Array(255, v5);
  v7 = sub_100075EB0(&qword_100BD75F0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v9 = a1[4];
  v45 = v6;
  v46 = v5;
  v47 = v7;
  v48 = WitnessTable;
  v49 = v9;
  v10 = type metadata accessor for ForEach(255, &v45);
  sub_1003208AC((uint64_t)&unk_100BD75F8);
  v12 = v11;
  v44 = sub_100320A3C();
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v10);
  v45 = v4;
  v46 = v10;
  v47 = v12;
  v48 = v13;
  v14 = type metadata accessor for Menu(0, &v45);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v26 - v16;
  v18 = a1[3];
  v39 = v5;
  v40 = v18;
  v19 = a1[5];
  v41 = v9;
  v42 = v19;
  v43 = v28;
  v33 = v5;
  v34 = v18;
  v35 = v9;
  v36 = v19;
  v37 = v28;
  v20 = Menu.init(content:label:)(sub_100320C60, v38, sub_100320C6C, v32, v4, v10, v12, v13);
  v21 = v27;
  DefaultMenuStyle.init()(v20);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v14);
  sub_10007A100((uint64_t)&unk_100BD7648);
  v23 = v29;
  View.menuStyle<A>(_:)(v21, v14, v29, v22, v24);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_100314B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t TupleTypeMetadata3;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[16];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75[16];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t WitnessTable;
  uint64_t v87;

  v67 = a5;
  v64 = a4;
  v56 = a3;
  v66 = a1;
  v68 = a6;
  v9 = sub_100075EB0(&qword_100BD7650);
  v10 = sub_100075EB0(&qword_100BD75E8);
  v65 = a2;
  v83 = type metadata accessor for Array(255, a2);
  v84 = a2;
  v85 = sub_100075EB0(&qword_100BD75F0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v83);
  v87 = a4;
  v11 = type metadata accessor for ForEach(255, &v83);
  sub_1003208AC((uint64_t)&unk_100BD75F8);
  v13 = v12;
  v82[2] = sub_100320A3C();
  v14 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v11);
  v83 = v10;
  v84 = v11;
  v85 = v13;
  WitnessTable = v14;
  v15 = type metadata accessor for Menu(255, &v83);
  v16 = type metadata accessor for DefaultMenuStyle(255);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v15);
  sub_10007A100((uint64_t)&unk_100BD7648);
  v83 = v15;
  v84 = v16;
  v85 = v17;
  WitnessTable = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v83, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v9, OpaqueTypeMetadata2, 0, 0);
  v62 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v61 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v62);
  v21 = type metadata accessor for VStack(0, v62, v61);
  v63 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v59 = (uint64_t)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v60 = (uint64_t)&v55 - v24;
  v25 = sub_100075EB0(&qword_100BD75E0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v25, &type metadata for Spacer, OpaqueTypeMetadata2, 0, 0);
  v27 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v27);
  v29 = type metadata accessor for HStack(0, v27, v28);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v55 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v55 = (uint64_t)&v55 - v34;
  v35 = v65;
  v76 = v65;
  v77 = a3;
  v36 = v64;
  v37 = v67;
  v78 = v64;
  v79 = v67;
  v38 = v66;
  v80 = v66;
  v39 = j___s7SwiftUI17VerticalAlignmentV6centerACvgZ(v27);
  HStack.init(alignment:spacing:content:)(v39, 0, 1, sub_1003211E4, v75, v27, v28);
  v57 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v29);
  v40 = v55;
  sub_1000B2074(v32, v29, v57);
  v41 = v30;
  v58 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
  v42 = v58(v32, v29);
  v43 = static HorizontalAlignment.leading.getter(v42);
  v70 = v35;
  v71 = v56;
  v72 = v36;
  v73 = v37;
  v74 = v38;
  v44 = v59;
  VStack.init(alignment:spacing:content:)(v43, 0, 1, sub_100320AE4, v69, v62, v61);
  v45 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v21);
  v46 = v60;
  sub_1000B2074(v44, v21, v45);
  v47 = v63;
  v48 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v48(v44, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v32, v40, v29);
  v83 = (uint64_t)v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v44, v46, v21);
  v84 = v44;
  v82[0] = v29;
  v82[1] = v21;
  v81[0] = v57;
  v81[1] = v45;
  sub_10052800C((uint64_t)&v83, 2, (uint64_t)v82, (uint64_t)v81, v49, v50, v51, v52, v55, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, v64);
  v48(v46, v21);
  v53 = v58;
  v58((char *)v40, v29);
  v48(v44, v21);
  return v53(v32, v29);
}

void sub_100315094(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  _QWORD v49[3];
  uint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t WitnessTable;
  uint64_t v57;

  v44 = (uint64_t *)a3;
  v45 = a5;
  v46 = a1;
  v47 = a6;
  v8 = sub_100075EB0(&qword_100BD75E8);
  v53 = type metadata accessor for Array(255, a2);
  v54 = a2;
  v55 = sub_100075EB0(&qword_100BD75F0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v53);
  v57 = a4;
  v9 = type metadata accessor for ForEach(255, &v53);
  sub_1003208AC((uint64_t)&unk_100BD75F8);
  v11 = v10;
  v52 = sub_100320A3C();
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v9);
  v53 = v8;
  v54 = (uint64_t *)v9;
  v55 = v11;
  WitnessTable = v12;
  v13 = type metadata accessor for Menu(255, &v53);
  v42 = (uint64_t *)type metadata accessor for DefaultMenuStyle(255);
  v39 = v13;
  v41 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v13);
  sub_10007A100((uint64_t)&unk_100BD7648);
  v40 = v14;
  v53 = v13;
  v54 = v42;
  v55 = v41;
  WitnessTable = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v53, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 0);
  v43 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v39 - v19;
  v21 = sub_1000BA294(&qword_100BD7650);
  __chkstk_darwin(v21);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BD75E0);
  __chkstk_darwin(v24);
  v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v39 - v28;
  v53 = (uint64_t)a2;
  v54 = v44;
  v55 = a4;
  WitnessTable = v45;
  v30 = (_QWORD *)type metadata accessor for PickerSection(0, (uint64_t)&v53);
  sub_100314724((uint64_t)v30, (uint64_t)v23);
  sub_100321224((uint64_t)v23, (uint64_t)v26, &qword_100BD7650);
  *(_WORD *)&v26[*(int *)(v24 + 36)] = 257;
  sub_100021A14((uint64_t)v23, &qword_100BD7650);
  sub_1003211F0((uint64_t)v26, (uint64_t)v29, &qword_100BD75E0);
  sub_100314920(v30, (uint64_t)v17);
  v53 = v39;
  v54 = v42;
  v55 = v41;
  WitnessTable = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v53, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
  sub_1000B2074(v17, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  v32 = v43;
  v33 = *(void (**)(char *, uint64_t))(v43 + 8);
  v33(v17, OpaqueTypeMetadata2);
  sub_100321224((uint64_t)v29, (uint64_t)v26, &qword_100BD75E0);
  v50 = 0;
  v51 = 1;
  v53 = (uint64_t)v26;
  v54 = &v50;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v17, v20, OpaqueTypeMetadata2);
  v55 = (uint64_t)v17;
  v49[0] = v24;
  v49[1] = &type metadata for Spacer;
  v49[2] = OpaqueTypeMetadata2;
  v34 = sub_100321258();
  v48[1] = &protocol witness table for Spacer;
  v48[2] = OpaqueTypeConformance2;
  sub_10052800C((uint64_t)&v53, 3, (uint64_t)v49, (uint64_t)v48, v35, v36, v37, v38, v39, v40, v41, (uint64_t)v42, v43, (uint64_t)v44, v45, v46, v47, v34);
  v33(v20, OpaqueTypeMetadata2);
  sub_100021A14((uint64_t)v29, &qword_100BD75E0);
  v33(v17, OpaqueTypeMetadata2);
  sub_100021A14((uint64_t)v26, &qword_100BD75E0);
}

void sub_10031547C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_1000986AC();
  v52 = v0;
  v53 = v1;
  v41 = v2;
  v42 = v3;
  v5 = v4;
  v7 = v6;
  v43 = v8;
  v44 = v9;
  v10 = sub_100075EB0(&qword_100BD75E8);
  v11 = sub_10011E6B8();
  v47 = (void *)type metadata accessor for Array(v11, v12);
  v48 = (uint64_t)v7;
  v49 = sub_100075EB0(&qword_100BD75F0);
  v50 = sub_100099A04((uint64_t)&protocol conformance descriptor for [A]);
  v51 = v5;
  v13 = type metadata accessor for ForEach(255, &v47);
  sub_1003208AC((uint64_t)&unk_100BD75F8);
  v15 = v14;
  v46[2] = sub_100320A3C();
  v16 = sub_100099A04((uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  v47 = (void *)v10;
  v48 = v13;
  v49 = (uint64_t)v15;
  v50 = v16;
  type metadata accessor for Menu(255, &v47);
  v39 = sub_10009DEE4();
  v38 = sub_10007A030((uint64_t)&protocol conformance descriptor for Menu<A, B>);
  sub_10007A100((uint64_t)&unk_100BD7648);
  v18 = v17;
  v47 = v15;
  v48 = v39;
  v49 = v38;
  v50 = v17;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v47, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 0);
  v20 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v37 - v24;
  v40 = sub_1000BA294(&qword_100BD7650);
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_1000B30E0();
  __chkstk_darwin(v27);
  v29 = (char *)&v37 - v28;
  v47 = v7;
  v48 = v41;
  v49 = v5;
  v50 = v42;
  v30 = (_QWORD *)type metadata accessor for PickerSection(0, (uint64_t)&v47);
  sub_100314724((uint64_t)v30, (uint64_t)v29);
  sub_100314920(v30, (uint64_t)v22);
  v47 = v15;
  v48 = v39;
  v49 = v38;
  v50 = v18;
  v31 = sub_10009885C((uint64_t)&v47, (uint64_t)&opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>);
  sub_1000B2074(v22, OpaqueTypeMetadata2, v31);
  sub_10009E65C((uint64_t)v22);
  sub_100321224((uint64_t)v29, (uint64_t)&type metadata accessor for DefaultMenuStyle, &qword_100BD7650);
  v47 = &type metadata accessor for DefaultMenuStyle;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v25, OpaqueTypeMetadata2);
  v48 = (uint64_t)v22;
  v46[0] = v40;
  v46[1] = OpaqueTypeMetadata2;
  sub_100320AF0((uint64_t)&unk_100BD7658);
  sub_10052800C((uint64_t)&v47, 2, (uint64_t)v46, (uint64_t)&v45, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v32, v31);
  sub_10009E65C((uint64_t)v25);
  sub_100021A14((uint64_t)v29, &qword_100BD7650);
  sub_10009E65C((uint64_t)v22);
  sub_100021A14((uint64_t)&type metadata accessor for DefaultMenuStyle, &qword_100BD7650);
}

uint64_t sub_10031576C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t WitnessTable;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v41 = a3;
  v47 = a6;
  v53 = a2;
  v54 = a3;
  v55 = a4;
  v56 = a5;
  v37 = a5;
  v10 = type metadata accessor for PickerSection(0, (uint64_t)&v53);
  v40 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v40 + 64);
  __chkstk_darwin(v10);
  v39 = (char *)&v36 - v12;
  v13 = type metadata accessor for Array(255, a2);
  v45 = v13;
  v14 = sub_100075EB0(&qword_100BD75F0);
  v44 = v14;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v13);
  v53 = v13;
  v54 = a2;
  v55 = v14;
  v56 = WitnessTable;
  v57 = a4;
  v15 = a4;
  v36 = a4;
  v16 = type metadata accessor for ForEach(0, &v53);
  v46 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v42 = (char *)&v36 - v20;
  v53 = *(_QWORD *)(a1 + *(int *)(v10 + 64));
  v21 = v53;
  v22 = v41;
  v48 = a2;
  v49 = v41;
  v50 = v15;
  v51 = a5;
  KeyPath = swift_getKeyPath(&unk_100994EC0);
  v23 = v39;
  v24 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, a1, v10);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = v24;
  v27 = (v25 + 48) & ~v25;
  v28 = (char *)swift_allocObject(&unk_100B6D480, v27 + v11, v25 | 7);
  *((_QWORD *)v28 + 2) = a2;
  *((_QWORD *)v28 + 3) = v22;
  v29 = v36;
  v30 = v37;
  *((_QWORD *)v28 + 4) = v36;
  *((_QWORD *)v28 + 5) = v30;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v28[v27], v23, v10);
  v31 = sub_100320A3C();
  swift_bridgeObjectRetain(v21);
  ForEach<>.init(_:id:content:)(&v53, KeyPath, sub_100320DAC, v28, v45, v44, WitnessTable, v29, v31);
  v52 = v31;
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v16);
  v33 = (uint64_t)v42;
  sub_1000B2074(v18, v16, v32);
  v34 = *(void (**)(char *, uint64_t))(v46 + 8);
  v34(v18, v16);
  sub_1000B1100(v33, v16, v47);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v16);
}

uint64_t sub_100315A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v28[1] = a7;
  v13 = sub_1000BA294(&qword_100BD7640);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a3;
  v30 = a4;
  v31 = a5;
  v32 = a6;
  v17 = type metadata accessor for PickerSection(0, (uint64_t)&v29);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + *(int *)(v17 + 68)))(a1, 1);
  v30 = v18;
  v19 = sub_100315B98(a1, (_QWORD *)v17);
  v21 = v20;
  LOBYTE(a3) = v22;
  v23 = sub_100114EF8();
  Toggle<>.init<A>(_:isOn:)(&v29, v19, v21, a3 & 1, &type metadata for String, v23);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + *(int *)(v17 + 72)))(a1, 1);
  v30 = v24;
  sub_10027248C((uint64_t)&unk_100BD7638);
  View.accessibilityLabel<A>(_:)(&v29, v13, &type metadata for String, v25, v23);
  v26 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v26);
}

uint64_t sub_100315B98(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  void (*v27)(char *, char *, _QWORD *);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, _QWORD *);
  uint64_t v45;
  void (*v46)(__n128);
  uint64_t v47;
  char *v48;
  uint64_t v49;

  v47 = a1;
  v4 = *(a2 - 1);
  __chkstk_darwin(a1);
  v6 = v5;
  v39 = v5;
  v7 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v7;
  v8 = a2[2];
  v9 = *(_QWORD *)(v8 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = v12;
  v42 = v12;
  v48 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *(void (**)(__n128))(v9 + 16);
  v46(v11);
  v44 = *(void (**)(char *, uint64_t, _QWORD *))(v4 + 16);
  v44(v7, v2, a2);
  v43 = type metadata accessor for MainActor(0);
  v14 = static MainActor.shared.getter(v43);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 64) & ~v15;
  v17 = *(unsigned __int8 *)(v4 + 80);
  v18 = (v13 + v17 + v16) & ~v17;
  v40 = v15 | v17 | 7;
  v19 = (_QWORD *)swift_allocObject(&unk_100B6D4A8, v18 + v6, v40);
  v19[2] = v14;
  v19[3] = &protocol witness table for MainActor;
  v20 = a2[4];
  v36 = a2[3];
  v21 = v36;
  v19[4] = v8;
  v19[5] = v21;
  v37 = a2[5];
  v22 = v37;
  v38 = v20;
  v19[6] = v20;
  v19[7] = v22;
  v23 = (char *)v19 + v16;
  v24 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v25 = v48;
  v24(v23, v48, v8);
  v26 = (char *)v19 + v18;
  v27 = *(void (**)(char *, char *, _QWORD *))(v4 + 32);
  v28 = v41;
  v27(v26, v41, a2);
  v44(v28, v45, a2);
  v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v25, v47, v8);
  v30 = static MainActor.shared.getter(v29);
  v31 = (v17 + 64) & ~v17;
  v32 = (v39 + v31 + v15) & ~v15;
  v33 = (char *)swift_allocObject(&unk_100B6D4D0, v32 + v42, v40);
  *((_QWORD *)v33 + 2) = v30;
  *((_QWORD *)v33 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v33 + 4) = v8;
  *((_QWORD *)v33 + 5) = v36;
  v34 = v37;
  *((_QWORD *)v33 + 6) = v38;
  *((_QWORD *)v33 + 7) = v34;
  v27(&v33[v31], v28, a2);
  v24(&v33[v32], v48, v8);
  Binding.init(get:set:)(&v49, sub_100320F54, v19, sub_100321140, v33, &type metadata for Bool);
  return v49;
}

void sub_100315DFC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t OpaqueTypeConformance2;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, _QWORD);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  __n128 v84;
  char v85;
  __n128 v86;
  char v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v64 = a5;
  v63 = a4;
  v62 = a3;
  v65 = a1;
  v79 = a6;
  v8 = type metadata accessor for DynamicTypeSize(0);
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  __chkstk_darwin(v8);
  v72 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v10);
  v74 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for AccessibilityChildBehavior(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1000BA294(&qword_100BD7680);
  v71 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1000BA294(&qword_100BD7608);
  __chkstk_darwin(v73);
  v69 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v66 = (char *)&v61 - v18;
  v19 = sub_1000BA294(&qword_100BD75E8);
  __chkstk_darwin(v19);
  v76 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = static VerticalAlignment.center.getter(v21);
  v23 = a1;
  v24 = a2;
  sub_100316378(v23, a2, (uint64_t)&v81);
  v25 = v81;
  v26 = v82;
  v27 = v83;
  v28 = v85;
  v29 = v86.n128_u64[0];
  v61 = v84;
  v30 = static Color.secondary.getter(v84);
  KeyPath = swift_getKeyPath(&unk_100994E58);
  v81 = v22;
  v82 = 0;
  LOBYTE(v83) = 1;
  v84.n128_u64[0] = v25;
  v84.n128_u64[1] = v26;
  v85 = v27;
  v86 = v61;
  v87 = v28;
  v88 = v29;
  v89 = KeyPath;
  v90 = v30;
  static AccessibilityChildBehavior.ignore.getter(KeyPath);
  v32 = sub_1000BA294(&qword_100BD7610);
  v33 = sub_1003209A0();
  View.accessibilityElement(children:)(v13, v32, v33);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v68);
  v34 = v86.n128_u64[1];
  v36 = v88;
  v35 = v89;
  v37 = v90;
  sub_1000D31B4(v84.n128_i64[0], v84.n128_i64[1], v85);
  swift_release(v35);
  swift_release(v36);
  swift_release(v34);
  swift_bridgeObjectRelease();
  v38 = v66;
  swift_release(v37);
  v39 = v24;
  v81 = v24;
  v82 = v62;
  v83 = v63;
  v84.n128_u64[0] = v64;
  v40 = type metadata accessor for PickerSection(0, (uint64_t)&v81);
  v41 = v65;
  v42 = (unint64_t *)(v65 + *(int *)(v40 + 52));
  v44 = *v42;
  v43 = v42[1];
  v81 = v44;
  v82 = v43;
  v80[0] = v32;
  v80[1] = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v80, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v46 = sub_100114EF8();
  v47 = (uint64_t)v69;
  v48 = v70;
  View.accessibilityLabel<A>(_:)(&v81, v70, &type metadata for String, OpaqueTypeConformance2, v46);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v15, v48);
  v49 = *(uint64_t (**)(char *, _QWORD))(v41 + *(int *)(v40 + 72));
  v50 = type metadata accessor for Binding(0, v39);
  v51 = v74;
  Binding.wrappedValue.getter(v50);
  v52 = v49(v51, 0);
  v54 = v53;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v51, v39);
  v81 = v52;
  v82 = v54;
  v55 = (uint64_t)v38;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v81, v73, &type metadata for String, v46);
  swift_bridgeObjectRelease();
  sub_100021A14(v47, &qword_100BD7608);
  v56 = v72;
  sub_10010FD3C();
  DynamicTypeSize.isAccessibilitySize.getter();
  v57 = v78;
  v58 = *(void (**)(char *, uint64_t))(v77 + 8);
  v58(v56, v78);
  sub_10010FD3C();
  LOBYTE(v52) = DynamicTypeSize.isAccessibilitySize.getter();
  v59 = ((uint64_t (*)(char *, uint64_t))v58)(v56, v57);
  if ((v52 & 1) != 0)
    static Alignment.leading.getter(v59);
  else
    static Alignment.center.getter(v59);
  v60 = (uint64_t)v76;
  sub_100946054();
  sub_100021A14(v55, &qword_100BD7608);
  sub_1003211F0(v60, v79, &qword_100BD75E8);
}

double sub_100316378@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  double result;
  _QWORD v21[4];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = v9;
  v21[1] = v10;
  v21[2] = v11;
  v21[3] = v12;
  v13 = *(uint64_t (**)(char *, _QWORD))(a1
                                                 + *(int *)(type metadata accessor for PickerSection(0, (uint64_t)v21)
                                                          + 68));
  v14 = type metadata accessor for Binding(0, a2);
  Binding.wrappedValue.getter(v14);
  v15 = v13(v8, 0);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  KeyPath = swift_getKeyPath(&unk_100994E88);
  v19 = Image.init(systemName:)(0xD000000000000017, 0x80000001009FAFE0);
  *(_QWORD *)a3 = v15;
  *(_QWORD *)(a3 + 8) = v17;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 32) = KeyPath;
  *(_BYTE *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = v19;
  sub_1000D55D4(v15, v17, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  swift_retain();
  sub_1000D31B4(v15, v17, 0);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1003164CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X6>, _BYTE *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v9 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Binding(0, v12);
  Binding.wrappedValue.getter(v13);
  LOBYTE(a4) = dispatch thunk of static Equatable.== infix(_:_:)(a2, v11, a3, *(_QWORD *)(a4 + 8));
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, a3);
  *a5 = a4 & 1;
  return result;
}

_BYTE *sub_100316588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v7 = *(_QWORD *)(a6 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (_BYTE *)__chkstk_darwin(v8);
  v14 = (char *)&v17 - v13;
  if (*result == 1)
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v15((char *)&v17 - v13, v12, a6);
    v15(v10, (uint64_t)v14, a6);
    v16 = type metadata accessor for Binding(0, a6);
    Binding.wrappedValue.setter(v10, v16);
    return (_BYTE *)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, a6);
  }
  return result;
}

uint64_t sub_100316660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v21 = v1;
  v22 = v2;
  v3 = sub_100114EF8();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(&v21, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  KeyPath = swift_getKeyPath(&unk_100994E88);
  v13 = static Color.secondary.getter(v12);
  v14 = swift_getKeyPath(&unk_100994E58);
  v21 = v4;
  v22 = v6;
  v23 = v8 & 1;
  v24 = v10;
  v25 = KeyPath;
  v26 = 0;
  v27 = 1;
  v28 = v14;
  v29 = v13;
  v15 = sub_1000BA294(&qword_100BD7690);
  v16 = sub_1000BA294(&qword_100BD7698);
  v17 = sub_1003212E4();
  sub_100320AF0((uint64_t)&unk_100BD76A8);
  return Section<>.init(footer:content:)(&v21, sub_1003212DC, &v20, v15, v16, v17, v18);
}

uint64_t sub_10031678C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  char v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t *v12;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE __src[96];

  v4 = sub_1000BA294(&qword_100BC4FA0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10031B918(a1, (uint64_t)__src);
  v8 = swift_allocObject(&unk_100B6D4F8, 112, 7);
  memcpy((void *)(v8 + 16), __src, 0x60uLL);
  v15 = a1;
  Button.init(action:label:)(sub_100321464, v8, sub_10032146C, v14, &type metadata for Text, &protocol witness table for Text);
  v9 = *(_BYTE *)(a1 + 40);
  KeyPath = swift_getKeyPath(&unk_100994F08);
  v11 = swift_allocObject(&unk_100B6D520, 17, 7);
  *(_BYTE *)(v11 + 16) = v9;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 16))(a2, v7, v4);
  v12 = (uint64_t *)(a2 + *(int *)(sub_1000BA294(&qword_100BD7690) + 36));
  *v12 = KeyPath;
  v12[1] = (uint64_t)sub_1001545E8;
  v12[2] = v11;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1003168E8(_QWORD *a1)
{
  sub_1000DB418(a1, a1[3]);
  sub_100615F0C();
}

void sub_100316910(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  v4 = *(_QWORD *)(a1 + 88);
  v24[0] = *(_QWORD *)(a1 + 80);
  v24[1] = v4;
  v5 = sub_100114EF8();
  swift_bridgeObjectRetain(v4);
  v6 = Text.init<A>(_:)(v24, &type metadata for String, v5);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  if (*(_BYTE *)(a1 + 40) == 1)
    v14 = static Color.gray.getter(v7);
  else
    v14 = static Color.blue.getter(v7);
  v15 = v14;
  v16 = v11 & 1;
  v24[0] = v14;
  v17 = Text.foregroundStyle<A>(_:)(v24, v6, v9, v16, v13, &type metadata for Color, &protocol witness table for Color);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_1000D31B4(v6, v9, v16);
  swift_release(v15);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = v21 & 1;
  *(_QWORD *)(a2 + 24) = v23;
}

uint64_t initializeWithCopy for UnitsConfigurationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v6 - 8);
  v9 = swift_retain(v4);
  v8(a1 + 16, v5, v7, v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

_QWORD *assignWithCopy for UnitsConfigurationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v4);
  sub_100094D04(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for UnitsConfigurationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 16));
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for UnitsConfigurationView()
{
  return &type metadata for UnitsConfigurationView;
}

void sub_100316B5C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  ValueMetadata *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v0 = sub_100075EB0(&qword_100BD6F90);
  v1 = sub_10030FB7C();
  v2 = sub_100075EB0(&qword_100BC66F0);
  sub_10027248C((uint64_t)&unk_100BD6FA0);
  v5 = (ValueMetadata *)v2;
  v6 = v3;
  v4 = sub_10009885C((uint64_t)&v5, (uint64_t)&opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>);
  v5 = &type metadata for UnitsConfigurationView;
  v6 = v0;
  v7 = v1;
  v8 = v4;
  sub_10009885C((uint64_t)&v5, (uint64_t)&opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>);
  sub_10003BCFC();
}

uint64_t sub_100316BF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0C88, 1);
}

uint64_t type metadata accessor for ContentViewiOS(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD7300, (uint64_t)&nominal type descriptor for ContentViewiOS);
}

uint64_t sub_100316C14(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UnitsConfigurationView(a2, a1);
  return a2;
}

void sub_100316C4C(uint64_t a1)
{
  uint64_t v1;

  sub_10030F310(a1, v1 + 16, qword_100BD7150, (uint64_t)&type metadata accessor for UnitConfiguration.WindSpeed, (void (*)(uint64_t))sub_100615EF8);
}

unint64_t sub_100316C7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7090;
  if (!qword_100BD7090)
  {
    v1 = sub_100075EB0(&qword_100BD6FE8);
    sub_100316FC4((uint64_t)&unk_100BD7098);
    sub_100316D08();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7090);
  }
  return result;
}

unint64_t sub_100316D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD70A8;
  if (!qword_100BD70A8)
  {
    v1 = sub_100075EB0(&qword_100BD6FD0);
    sub_10027248C((uint64_t)&unk_100BD70B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD70A8);
  }
  return result;
}

unint64_t sub_100316D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD70B8;
  if (!qword_100BD70B8)
  {
    v1 = sub_100075EB0(&qword_100BD6FB0);
    sub_10027248C((uint64_t)&unk_100BD70C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD70B8);
  }
  return result;
}

unint64_t sub_100316E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD70D0;
  if (!qword_100BD70D0)
  {
    v1 = sub_100075EB0(&qword_100BD7078);
    sub_10007A100((uint64_t)&unk_100BD70D8);
    sub_100316E94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD70D0);
  }
  return result;
}

unint64_t sub_100316E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD70E0;
  if (!qword_100BD70E0)
  {
    v1 = sub_100075EB0(&qword_100BD7058);
    sub_10027248C((uint64_t)&unk_100BD70E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD70E0);
  }
  return result;
}

unint64_t sub_100316F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD70F0;
  if (!qword_100BD70F0)
  {
    v1 = sub_100075EB0(&qword_100BD7030);
    sub_100316FC4((uint64_t)&unk_100BD70F8);
    sub_100316FC4((uint64_t)&unk_100BD7108);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD70F0);
  }
  return result;
}

void sub_100316FC4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000AE8E8(0, v3);
    sub_10027248C(v2);
    atomic_store(sub_100099A04((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

uint64_t sub_100317028(uint64_t a1, uint64_t a2)
{
  return sub_10031BCA0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_10030F54C);
}

uint64_t sub_100317038(uint64_t a1, uint64_t a2)
{
  return sub_10031BCA0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_10030F61C);
}

void sub_100317048(uint64_t a1)
{
  uint64_t v1;

  sub_10030F380(a1, v1 + 16);
}

void sub_100317054(uint64_t a1)
{
  uint64_t v1;

  sub_10030F310(a1, v1 + 16, &qword_100BD7140, (uint64_t)&type metadata accessor for UnitConfiguration.Pressure, (void (*)(uint64_t))sub_100615ED0);
}

void sub_100317088(uint64_t a1)
{
  uint64_t v1;

  sub_10030F310(a1, v1 + 16, &qword_100BD7138, (uint64_t)&type metadata accessor for UnitConfiguration.Precipitation, (void (*)(uint64_t))sub_100615D5C);
}

uint64_t sub_1003170BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 80, 7);
}

void sub_1003170E8(uint64_t a1)
{
  uint64_t v1;

  sub_10030F310(a1, v1 + 16, &qword_100BD7130, (uint64_t)&type metadata accessor for UnitConfiguration.Distance, (void (*)(uint64_t))sub_100615D48);
}

uint64_t type metadata accessor for ConditionsContentView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD7258, (uint64_t)&nominal type descriptor for ConditionsContentView);
}

uint64_t sub_10031712C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[7];

  v7[0] = &unk_100994AD8;
  result = type metadata accessor for UnitsConfigurationViewModel.Configuration(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[1] = *(_QWORD *)(result - 8) + 64;
    v7[2] = &unk_100994AF0;
    v7[3] = (char *)&value witness table for () + 64;
    v7[4] = &unk_100994AD8;
    v7[5] = &unk_100994AD8;
    v7[6] = &unk_100994B08;
    swift_initStructMetadata(a1, 0, 7, v7, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1003171C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(unint64_t, unint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v9 = v8 & (v6 + 16);
  v10 = v6 + 8;
  v11 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  v12 = v6 & 0x100000;
  if (v7 > 7
    || v12 != 0
    || ((((((((v11 + v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + v9);
    swift_retain(v15);
  }
  else
  {
    v16 = ~v7;
    v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    v18 = (_QWORD *)(v8 & ((unint64_t)a1 + 23));
    v19 = (uint64_t *)(v8 & ((unint64_t)a2 + 23));
    v20 = *v19;
    *v18 = *v19;
    v21 = ((unint64_t)v18 + v10) & v16;
    v22 = ((unint64_t)v19 + v10) & v16;
    v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v20);
    v23(v21, v22, v4);
    v24 = ((unint64_t)v18 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v19 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)v25;
    *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
    *(_QWORD *)v24 = v26;
    v27 = (_QWORD *)(((unint64_t)v18 + v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v19 + v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    v31 = (unint64_t *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    v32 = *v31;
    swift_retain(v29);
    if (v32 < 0xFFFFFFFF)
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
    }
    else
    {
      v33 = v31[1];
      *(_QWORD *)v30 = v32;
      *(_QWORD *)(v30 + 8) = v33;
      swift_retain(v33);
    }
    v34 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    v35 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v35 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
    else
    {
      v36 = *(_QWORD *)(v35 + 8);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *(_QWORD *)(v34 + 8) = v36;
      swift_retain(v36);
    }
    v37 = (_QWORD *)((v34 + 23) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)((v35 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v37 = *v38;
    v39 = v38[1];
    v37[1] = v39;
    swift_bridgeObjectRetain(v39);
  }
  return a1;
}

double sub_1003173B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (_QWORD *)((a1 + (v6 | 7) + 16) & ~(v6 | 7));
  v8 = swift_bridgeObjectRelease(*v7);
  (*(void (**)(unint64_t, uint64_t, __n128))(v5 + 8))(((unint64_t)v7 + v6 + 8) & ~v6, v4, v8);
  v9 = ((unint64_t)v7 + ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v9 + 8));
  v10 = (_QWORD *)((v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v10 >= 0xFFFFFFFFuLL)
    swift_release(v10[1]);
  v11 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v11 >= 0xFFFFFFFFuLL)
    swift_release(v11[1]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8) + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_100317494(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(unint64_t, unint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v33;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 | 7) + 16;
  v33 = a1;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  v10 = (uint64_t *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  v11 = *v10;
  *v9 = *v10;
  v12 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v11);
  v12(((unint64_t)v9 + v7 + 8) & ~v7, ((unint64_t)v10 + v7 + 8) & ~v7, v5);
  v13 = *(_QWORD *)(v6 + 64) + ((v7 + 8) & ~v7);
  v14 = (char *)v9 + v13;
  v15 = (char *)v10 + v13;
  v16 = (unint64_t)(v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (unint64_t)(v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = v18;
  v19 = (_QWORD *)((unint64_t)(v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((unint64_t)(v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = (unint64_t *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = *v23;
  swift_retain(v21);
  if (v24 < 0xFFFFFFFF)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  else
  {
    v25 = v23[1];
    *(_QWORD *)v22 = v24;
    *(_QWORD *)(v22 + 8) = v25;
    swift_retain(v25);
  }
  v26 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v27 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  else
  {
    v28 = *(_QWORD *)(v27 + 8);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_QWORD *)(v26 + 8) = v28;
    swift_retain(v28);
  }
  v29 = (_QWORD *)((v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v31 = v30[1];
  v29[1] = v31;
  swift_bridgeObjectRetain(v31);
  return v33;
}

_QWORD *sub_10031762C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 | 7) + 16;
  v12 = (uint64_t *)(((unint64_t)a1 + v11) & ~(v10 | 7));
  v13 = (uint64_t *)(((unint64_t)a2 + v11) & ~(v10 | 7));
  v14 = *v13;
  v15 = *v12;
  *v12 = *v13;
  swift_bridgeObjectRetain(v14);
  v16 = swift_bridgeObjectRelease(v15);
  (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v9 + 24))(((unint64_t)v12 + v10 + 8) & ~v10, ((unint64_t)v13 + v10 + 8) & ~v10, v8, v16);
  v17 = *(_QWORD *)(v9 + 64) + ((v10 + 8) & ~v10);
  v18 = (char *)v12 + v17;
  v19 = (char *)v13 + v17;
  v20 = (unint64_t)(v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (unint64_t)(v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = v22;
  v23 = (_QWORD *)((unint64_t)(v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((unint64_t)(v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = v24[1];
  v26 = v23[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain(v25);
  swift_release(v26);
  v27 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (unint64_t *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = *v28;
  if (*v27 < 0xFFFFFFFFuLL)
  {
    if (v29 >= 0xFFFFFFFF)
    {
      v32 = v28[1];
      *v27 = v29;
      v27[1] = v32;
      swift_retain(v32);
      goto LABEL_8;
    }
  }
  else
  {
    if (v29 >= 0xFFFFFFFF)
    {
      v30 = v28[1];
      v31 = v27[1];
      *v27 = v29;
      v27[1] = v30;
      swift_retain(v30);
      swift_release(v31);
      goto LABEL_8;
    }
    swift_release(v27[1]);
  }
  *(_OWORD *)v27 = *(_OWORD *)v28;
LABEL_8:
  v33 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = (unint64_t *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = *v34;
  if (*v33 < 0xFFFFFFFFuLL)
  {
    if (v35 >= 0xFFFFFFFF)
    {
      v38 = v34[1];
      *v33 = v35;
      v33[1] = v38;
      swift_retain(v38);
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    goto LABEL_15;
  }
  if (v35 < 0xFFFFFFFF)
  {
    swift_release(v33[1]);
    goto LABEL_14;
  }
  v36 = v34[1];
  v37 = v33[1];
  *v33 = v35;
  v33[1] = v36;
  swift_retain(v36);
  swift_release(v37);
LABEL_15:
  v39 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = v40[1];
  v42 = v39[1];
  v39[1] = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease(v42);
  return a1;
}

_OWORD *sub_100317864(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  _OWORD *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 | 7) + 16;
  v7 = (_QWORD *)(((unint64_t)a1 + v6) & ~(v5 | 7));
  v8 = (_QWORD *)(((unint64_t)a2 + v6) & ~(v5 | 7));
  *v7 = *v8;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v7 + v5 + 8) & ~v5, ((unint64_t)v8 + v5 + 8) & ~v5);
  v9 = *(_QWORD *)(v4 + 64) + ((v5 + 8) & ~v5);
  v10 = (char *)v7 + v9;
  v11 = (char *)v8 + v9;
  v12 = (unint64_t)(v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (unint64_t)(v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = (_OWORD *)((unint64_t)(v10 + 23) & 0xFFFFFFFFFFFFF8);
  v16 = (_OWORD *)((unint64_t)(v11 + 23) & 0xFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v18 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  else
  {
    v19 = *(_QWORD *)(v18 + 8);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_QWORD *)(v17 + 8) = v19;
  }
  v20 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v21 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  else
  {
    v22 = *(_QWORD *)(v21 + 8);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_QWORD *)(v20 + 8) = v22;
  }
  *(_OWORD *)((v20 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v21 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1003179A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 | 7) + 16;
  v12 = (uint64_t *)(((unint64_t)a1 + v11) & ~(v10 | 7));
  v13 = (uint64_t *)(((unint64_t)a2 + v11) & ~(v10 | 7));
  v14 = *v12;
  *v12 = *v13;
  v15 = swift_bridgeObjectRelease(v14);
  (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v9 + 40))(((unint64_t)v12 + v10 + 8) & ~v10, ((unint64_t)v13 + v10 + 8) & ~v10, v8, v15);
  v16 = *(_QWORD *)(v9 + 64) + ((v10 + 8) & ~v10);
  v17 = (char *)v12 + v16;
  v18 = (unint64_t)v13 + v16;
  v19 = (unint64_t)(v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = v21;
  v22 = (unint64_t)(v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 += 23;
  v23 = *(_QWORD *)(v22 + 8);
  v24 = (v18 & 0xFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v22 = *(_OWORD *)(v18 & 0xFFFFFFFFFFFFF8);
  swift_release(v23);
  v25 = (_QWORD *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v24 & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF8);
  if (*v25 < 0xFFFFFFFFuLL)
  {
    if (v27 >= 0xFFFFFFFF)
    {
      v30 = *(_QWORD *)(v26 + 8);
      *v25 = v27;
      v25[1] = v30;
      goto LABEL_8;
    }
  }
  else
  {
    if (v27 >= 0xFFFFFFFF)
    {
      v28 = *(_QWORD *)(v26 + 8);
      v29 = v25[1];
      *v25 = v27;
      v25[1] = v28;
      swift_release(v29);
      goto LABEL_8;
    }
    swift_release(v25[1]);
  }
  *(_OWORD *)v25 = *(_OWORD *)v26;
LABEL_8:
  v31 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = (unint64_t *)((v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = *v32;
  if (*v31 < 0xFFFFFFFFuLL)
  {
    if (v33 >= 0xFFFFFFFF)
    {
      v36 = v32[1];
      *v31 = v33;
      v31[1] = v36;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)v31 = *(_OWORD *)v32;
    goto LABEL_15;
  }
  if (v33 < 0xFFFFFFFF)
  {
    swift_release(v31[1]);
    goto LABEL_14;
  }
  v34 = v32[1];
  v35 = v31[1];
  *v31 = v33;
  v31[1] = v34;
  swift_release(v35);
LABEL_15:
  v37 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = v37[1];
  v37[1] = v38[1];
  swift_bridgeObjectRelease(v39);
  return a1;
}

uint64_t sub_100317B9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t *v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = v8 | 7;
  v10 = v8 + 8;
  if (v7 >= a2)
  {
    v15 = (unint64_t *)((a1 + v9 + 16) & ~v9);
    if ((v6 & 0x80000000) != 0)
    {
      return _s7Weather24LocationCompositionStateOwet_0(((unint64_t)v15 + v10) & ~v8, v6, v4);
    }
    else
    {
      v16 = *v15;
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  else
  {
    if (((((((((((*(_QWORD *)(v5 + 64) + (v10 & ~v8) + ((v8 + 16) & ~v9) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100317C50 + 4 * byte_100994990[v13]))();
  }
}

void sub_100317CD8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((*(_QWORD *)(v5 + 64)
             + ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
             + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(*(unsigned __int8 *)(v5 + 80) | 7))
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64)
               + ((*(unsigned __int8 *)(v5 + 80) + 8) & ~*(unsigned __int8 *)(v5 + 80))
               + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(*(unsigned __int8 *)(v5 + 80) | 7))
               + 23) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_100317E04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;

  *(_BYTE *)(v7 + v8) = 0;
  if ((_DWORD)a1)
  {
    v9 = (_QWORD *)((v7 + v5 + 16) & v6);
    if ((a2 & 0x80000000) != 0)
    {
      return _s7Weather24LocationCompositionStateOwst_0(((unint64_t)v9 + v4) & a4, a1, a2, a3);
    }
    else
    {
      if ((a1 & 0x80000000) != 0)
        v10 = a1 ^ 0x80000000;
      else
        v10 = (a1 - 1);
      *v9 = v10;
    }
  }
  return result;
}

uint64_t type metadata accessor for ConditionContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConditionContentView);
}

uint64_t *sub_100317E98(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  __n128 v16;
  int *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  void (*v28)(char *, char *, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int *v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t, __n128);
  __n128 v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  char *v96;
  char *v97;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD7048);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1000BA294(&qword_100BD71D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = *(int *)(v7 + 36);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for UnitConfiguration.Distance(0);
      v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
      v16 = swift_bridgeObjectRetain(v10);
      v15(v12, v13, v14, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
    v18 = v17[5];
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = sub_1000BA294(&qword_100BD7020);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      v22 = sub_1000BA294(&qword_100BD71E0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v23 = *v20;
      *v19 = *v20;
      v24 = *(int *)(v21 + 36);
      v25 = (char *)v19 + v24;
      v96 = (char *)v20 + v24;
      v26 = type metadata accessor for UnitConfiguration.Precipitation(0);
      v27 = v17;
      v28 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
      v29 = swift_bridgeObjectRetain(v23);
      v28(v25, v96, v26, v29);
      v17 = v27;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    v30 = v17[6];
    v31 = (uint64_t *)((char *)a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    v33 = sub_1000BA294(&qword_100BD7008);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      v34 = sub_1000BA294(&qword_100BD71E8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = *v32;
      *v31 = *v32;
      v36 = *(int *)(v33 + 36);
      v37 = (char *)v31 + v36;
      v97 = (char *)v32 + v36;
      v38 = type metadata accessor for UnitConfiguration.Pressure(0);
      v39 = v17;
      v40 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v38 - 8) + 16);
      v41 = swift_bridgeObjectRetain(v35);
      v40(v37, v97, v38, v41);
      v17 = v39;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    v42 = v17[7];
    v43 = (uint64_t *)((char *)a1 + v42);
    v44 = (uint64_t *)((char *)a2 + v42);
    v45 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      v46 = sub_1000BA294(&qword_100BD71F0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v47 = *v44;
      *v43 = *v44;
      swift_bridgeObjectRetain(v47);
      v48 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
      v49 = (char *)v43 + v48;
      v50 = (char *)v44 + v48;
      v51 = type metadata accessor for UnitConfiguration.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
      {
        v52 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
      }
      v53 = *(int *)(v45 + 20);
      v54 = (char *)v43 + v53;
      v55 = (char *)v44 + v53;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v51))
      {
        v56 = sub_1000BA294(&qword_100BD7148);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v54, v55, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v51);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    v57 = v17[8];
    v58 = (uint64_t *)((char *)a1 + v57);
    v59 = (uint64_t *)((char *)a2 + v57);
    v60 = sub_1000BA294(&qword_100BD6FB8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
    {
      v61 = sub_1000BA294(&qword_100BD71F8);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v62 = *v59;
      *v58 = *v59;
      v63 = *(int *)(v60 + 36);
      v64 = (char *)v58 + v63;
      v65 = (char *)v59 + v63;
      v66 = type metadata accessor for UnitConfiguration.WindSpeed(0);
      v67 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v66 - 8) + 16);
      v68 = swift_bridgeObjectRetain(v62);
      v67(v64, v65, v66, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
    }
    v69 = a3[5];
    v70 = *(_OWORD *)((char *)a2 + v69 + 24);
    *(_OWORD *)((char *)a1 + v69 + 24) = v70;
    (**(void (***)(void))(v70 - 8))();
    v71 = a3[6];
    v72 = a3[7];
    v73 = (uint64_t *)((char *)a1 + v71);
    v74 = (uint64_t *)((char *)a2 + v71);
    v75 = v74[1];
    *v73 = *v74;
    v73[1] = v75;
    v76 = (uint64_t *)((char *)a1 + v72);
    v77 = (uint64_t *)((char *)a2 + v72);
    v78 = v77[1];
    *v76 = *v77;
    v76[1] = v78;
    v79 = a3[8];
    v80 = a3[9];
    v81 = (uint64_t *)((char *)a1 + v79);
    v82 = (uint64_t *)((char *)a2 + v79);
    v83 = v82[1];
    *v81 = *v82;
    v81[1] = v83;
    v84 = (uint64_t *)((char *)a1 + v80);
    v85 = (uint64_t *)((char *)a2 + v80);
    v86 = v85[1];
    *v84 = *v85;
    v84[1] = v86;
    v87 = a3[10];
    v88 = a3[11];
    v89 = (uint64_t *)((char *)a1 + v87);
    v90 = (uint64_t *)((char *)a2 + v87);
    v91 = v90[1];
    *v89 = *v90;
    v89[1] = v91;
    v92 = (uint64_t *)((char *)a1 + v88);
    v93 = (uint64_t *)((char *)a2 + v88);
    v94 = v93[1];
    *v92 = *v93;
    v92[1] = v94;
    swift_retain();
    swift_bridgeObjectRetain(v78);
    swift_bridgeObjectRetain(v83);
    swift_bridgeObjectRetain(v86);
    swift_bridgeObjectRetain(v91);
    swift_bridgeObjectRetain(v94);
  }
  return a1;
}

double sub_1003183EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;

  v4 = sub_1000BA294(&qword_100BD7048);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 36);
    v6 = type metadata accessor for UnitConfiguration.Distance(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v8 = a1 + v7[5];
  v9 = sub_1000BA294(&qword_100BD7020);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 36);
    v11 = type metadata accessor for UnitConfiguration.Precipitation(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + v7[6];
  v13 = sub_1000BA294(&qword_100BD7008);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v13 + 36);
    v15 = type metadata accessor for UnitConfiguration.Pressure(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + v7[7];
  v17 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
  {
    swift_bridgeObjectRelease();
    v18 = v16 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v19 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    v20 = v16 + *(int *)(v17 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v20, v19);
  }
  v21 = a1 + v7[8];
  v22 = sub_1000BA294(&qword_100BD6FB8);
  if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    v23 = v21 + *(int *)(v22 + 36);
    v24 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 20)));
  swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t *sub_100318698(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int *v25;
  int *v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int *v38;
  int *v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t, __n128);
  __n128 v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  char *v96;
  char *v97;

  v6 = sub_1000BA294(&qword_100BD7048);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = *a2;
    *a1 = *a2;
    v9 = *(int *)(v6 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for UnitConfiguration.Distance(0);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    v14 = swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v16 = v15[5];
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = sub_1000BA294(&qword_100BD7020);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = *v18;
    *v17 = *v18;
    v22 = *(int *)(v19 + 36);
    v23 = (char *)v17 + v22;
    v96 = (char *)v18 + v22;
    v24 = type metadata accessor for UnitConfiguration.Precipitation(0);
    v25 = a3;
    v26 = v15;
    v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
    v28 = swift_bridgeObjectRetain(v21);
    v27(v23, v96, v24, v28);
    v15 = v26;
    a3 = v25;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v29 = v15[6];
  v30 = (uint64_t *)((char *)a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  v32 = sub_1000BA294(&qword_100BD7008);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    v33 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = *v31;
    *v30 = *v31;
    v35 = *(int *)(v32 + 36);
    v36 = (char *)v30 + v35;
    v97 = (char *)v31 + v35;
    v37 = type metadata accessor for UnitConfiguration.Pressure(0);
    v38 = a3;
    v39 = v15;
    v40 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v37 - 8) + 16);
    v41 = swift_bridgeObjectRetain(v34);
    v40(v36, v97, v37, v41);
    v15 = v39;
    a3 = v38;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  v42 = v15[7];
  v43 = (uint64_t *)((char *)a1 + v42);
  v44 = (uint64_t *)((char *)a2 + v42);
  v45 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
  {
    v46 = sub_1000BA294(&qword_100BD71F0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = *v44;
    *v43 = *v44;
    swift_bridgeObjectRetain(v47);
    v48 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v49 = (char *)v43 + v48;
    v50 = (char *)v44 + v48;
    v51 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
    {
      v52 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
    }
    v53 = *(int *)(v45 + 20);
    v54 = (char *)v43 + v53;
    v55 = (char *)v44 + v53;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v51))
    {
      v56 = sub_1000BA294(&qword_100BD7148);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v54, v55, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v51);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
  }
  v57 = v15[8];
  v58 = (uint64_t *)((char *)a1 + v57);
  v59 = (uint64_t *)((char *)a2 + v57);
  v60 = sub_1000BA294(&qword_100BD6FB8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
  {
    v61 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    v62 = *v59;
    *v58 = *v59;
    v63 = *(int *)(v60 + 36);
    v64 = (char *)v58 + v63;
    v65 = (char *)v59 + v63;
    v66 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    v67 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v66 - 8) + 16);
    v68 = swift_bridgeObjectRetain(v62);
    v67(v64, v65, v66, v68);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
  }
  v69 = a3[5];
  v70 = *(_OWORD *)((char *)a2 + v69 + 24);
  *(_OWORD *)((char *)a1 + v69 + 24) = v70;
  (**(void (***)(void))(v70 - 8))();
  v71 = a3[6];
  v72 = a3[7];
  v73 = (uint64_t *)((char *)a1 + v71);
  v74 = (uint64_t *)((char *)a2 + v71);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  v76 = (uint64_t *)((char *)a1 + v72);
  v77 = (uint64_t *)((char *)a2 + v72);
  v78 = v77[1];
  *v76 = *v77;
  v76[1] = v78;
  v79 = a3[8];
  v80 = a3[9];
  v81 = (uint64_t *)((char *)a1 + v79);
  v82 = (uint64_t *)((char *)a2 + v79);
  v83 = v82[1];
  *v81 = *v82;
  v81[1] = v83;
  v84 = (uint64_t *)((char *)a1 + v80);
  v85 = (uint64_t *)((char *)a2 + v80);
  v86 = v85[1];
  *v84 = *v85;
  v84[1] = v86;
  v87 = a3[10];
  v88 = a3[11];
  v89 = (uint64_t *)((char *)a1 + v87);
  v90 = (uint64_t *)((char *)a2 + v87);
  v91 = v90[1];
  *v89 = *v90;
  v89[1] = v91;
  v92 = (uint64_t *)((char *)a1 + v88);
  v93 = (uint64_t *)((char *)a2 + v88);
  v94 = v93[1];
  *v92 = *v93;
  v92[1] = v94;
  swift_retain();
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRetain(v91);
  swift_bridgeObjectRetain(v94);
  return a1;
}

uint64_t *sub_100318BD0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int *v28;
  int *v29;
  void (*v30)(char *, char *, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int *v43;
  int *v44;
  void (*v45)(char *, char *, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  size_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  int v83;
  size_t v84;
  void *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t, __n128);
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  char *__src;
  char *__srca;

  v6 = sub_1000BA294(&qword_100BD7048);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = *(int *)(v6 + 36);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for UnitConfiguration.Distance(0);
      v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
      v15 = swift_bridgeObjectRetain(v9);
      v14(v11, v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_100021A14((uint64_t)a1, &qword_100BD7048);
LABEL_6:
    v16 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v63 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRelease();
  v64 = *(int *)(v6 + 36);
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 24))(v65, v66, v67);
LABEL_7:
  v17 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v18 = v17[5];
  v19 = (uint64_t *)((char *)a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  v21 = sub_1000BA294(&qword_100BD7020);
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      v24 = *v20;
      *v19 = *v20;
      v25 = *(int *)(v21 + 36);
      v26 = (char *)v19 + v25;
      __src = (char *)v20 + v25;
      v27 = type metadata accessor for UnitConfiguration.Precipitation(0);
      v28 = a3;
      v29 = v17;
      v30 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v27 - 8) + 16);
      v31 = swift_bridgeObjectRetain(v24);
      v30(v26, __src, v27, v31);
      v17 = v29;
      a3 = v28;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_100021A14((uint64_t)v19, &qword_100BD7020);
LABEL_12:
    v32 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  v68 = *v20;
  *v19 = *v20;
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRelease();
  v69 = *(int *)(v21 + 36);
  v70 = (char *)v19 + v69;
  v71 = (char *)v20 + v69;
  v72 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v70, v71, v72);
LABEL_13:
  v33 = v17[6];
  v34 = (uint64_t *)((char *)a1 + v33);
  v35 = (uint64_t *)((char *)a2 + v33);
  v36 = sub_1000BA294(&qword_100BD7008);
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36);
  v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      v39 = *v35;
      *v34 = *v35;
      v40 = *(int *)(v36 + 36);
      v41 = (char *)v34 + v40;
      __srca = (char *)v35 + v40;
      v42 = type metadata accessor for UnitConfiguration.Pressure(0);
      v43 = a3;
      v44 = v17;
      v45 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v42 - 8) + 16);
      v46 = swift_bridgeObjectRetain(v39);
      v45(v41, __srca, v42, v46);
      v17 = v44;
      a3 = v43;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v38)
  {
    sub_100021A14((uint64_t)v34, &qword_100BD7008);
LABEL_18:
    v47 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_19;
  }
  v73 = *v35;
  *v34 = *v35;
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRelease();
  v74 = *(int *)(v36 + 36);
  v75 = (char *)v34 + v74;
  v76 = (char *)v35 + v74;
  v77 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 24))(v75, v76, v77);
LABEL_19:
  v48 = v17[7];
  v49 = (uint64_t *)((char *)a1 + v48);
  v50 = (uint64_t *)((char *)a2 + v48);
  v51 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v51);
  v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51);
  if (v52)
  {
    if (!v53)
    {
      v54 = *v50;
      *v49 = *v50;
      swift_bridgeObjectRetain(v54);
      v55 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
      v56 = (char *)v49 + v55;
      v57 = (char *)v50 + v55;
      v58 = type metadata accessor for UnitConfiguration.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
      {
        v59 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
      }
      v86 = *(int *)(v51 + 20);
      v87 = (char *)v49 + v86;
      v88 = (char *)v50 + v86;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v58))
      {
        v89 = sub_1000BA294(&qword_100BD7148);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v87, v88, v58);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v58);
      }
      v90 = (uint64_t)v49;
      v91 = v51;
      goto LABEL_38;
    }
    goto LABEL_25;
  }
  if (v53)
  {
    sub_1000215BC((uint64_t)v49, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
LABEL_25:
    v60 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD71F0) - 8) + 64);
    v61 = v49;
    v62 = v50;
LABEL_26:
    memcpy(v61, v62, v60);
    goto LABEL_39;
  }
  v78 = *v50;
  *v49 = *v50;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRelease();
  v79 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v80 = (uint64_t)v49 + v79;
  v81 = (char *)v50 + v79;
  v82 = type metadata accessor for UnitConfiguration.Temperature(0);
  v143 = v80;
  LODWORD(v80) = _s7Weather24LocationCompositionStateOwet_0(v80, 1, v82);
  v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82);
  if ((_DWORD)v80)
  {
    if (v83)
    {
      v84 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for UnitsConfigurationViewModel.Temperature(0) - 8) + 64);
      v85 = (void *)v143;
LABEL_49:
      memcpy(v85, v81, v84);
      goto LABEL_52;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v143, v81, v82);
    _s7Weather24LocationCompositionStateOwst_0(v143, 0, 1, v82);
  }
  else
  {
    v136 = *(_QWORD *)(v82 - 8);
    if (v83)
    {
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v143, v82);
      v84 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for UnitsConfigurationViewModel.Temperature(0) - 8) + 64);
      v85 = (void *)v143;
      goto LABEL_49;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v136 + 24))(v143, v81, v82);
  }
LABEL_52:
  v137 = *(int *)(v51 + 20);
  v138 = (uint64_t)v49 + v137;
  v139 = (uint64_t)v50 + v137;
  v140 = _s7Weather24LocationCompositionStateOwet_0(v138, 1, v82);
  v141 = _s7Weather24LocationCompositionStateOwet_0(v139, 1, v82);
  if (v140)
  {
    if (!v141)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v138, v139, v82);
      v90 = v138;
      v91 = v82;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v90, 0, 1, v91);
      goto LABEL_39;
    }
    goto LABEL_57;
  }
  v142 = *(_QWORD *)(v82 - 8);
  if (v141)
  {
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v138, v82);
LABEL_57:
    v60 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD7148) - 8) + 64);
    v61 = (void *)v138;
    v62 = (const void *)v139;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 24))(v138, v139, v82);
LABEL_39:
  v92 = v17[8];
  v93 = (uint64_t *)((char *)a1 + v92);
  v94 = (uint64_t *)((char *)a2 + v92);
  v95 = sub_1000BA294(&qword_100BD6FB8);
  v96 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v95);
  v97 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95);
  if (!v96)
  {
    if (!v97)
    {
      v131 = *v94;
      *v93 = *v94;
      swift_bridgeObjectRetain(v131);
      swift_bridgeObjectRelease();
      v132 = *(int *)(v95 + 36);
      v133 = (char *)v93 + v132;
      v134 = (char *)v94 + v132;
      v135 = type metadata accessor for UnitConfiguration.WindSpeed(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 24))(v133, v134, v135);
      goto LABEL_45;
    }
    sub_100021A14((uint64_t)v93, &qword_100BD6FB8);
    goto LABEL_44;
  }
  if (v97)
  {
LABEL_44:
    v105 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_45;
  }
  v98 = *v94;
  *v93 = *v94;
  v99 = *(int *)(v95 + 36);
  v100 = (char *)v93 + v99;
  v101 = (char *)v94 + v99;
  v102 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  v103 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v102 - 8) + 16);
  v104 = swift_bridgeObjectRetain(v98);
  v103(v100, v101, v102, v104);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
LABEL_45:
  sub_100094D04((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]));
  v106 = a3[6];
  v107 = (uint64_t *)((char *)a1 + v106);
  v108 = (uint64_t *)((char *)a2 + v106);
  *v107 = *v108;
  v109 = v107[1];
  v107[1] = v108[1];
  swift_retain();
  swift_release(v109);
  v110 = a3[7];
  v111 = (uint64_t *)((char *)a1 + v110);
  v112 = (uint64_t *)((char *)a2 + v110);
  *v111 = *v112;
  v113 = v112[1];
  v111[1] = v113;
  swift_bridgeObjectRetain(v113);
  swift_bridgeObjectRelease();
  v114 = a3[8];
  v115 = (uint64_t *)((char *)a1 + v114);
  v116 = (uint64_t *)((char *)a2 + v114);
  *v115 = *v116;
  v117 = v116[1];
  v115[1] = v117;
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRelease();
  v118 = a3[9];
  v119 = (uint64_t *)((char *)a1 + v118);
  v120 = (uint64_t *)((char *)a2 + v118);
  *v119 = *v120;
  v121 = v120[1];
  v119[1] = v121;
  swift_bridgeObjectRetain(v121);
  swift_bridgeObjectRelease();
  v122 = a3[10];
  v123 = (uint64_t *)((char *)a1 + v122);
  v124 = (uint64_t *)((char *)a2 + v122);
  *v123 = *v124;
  v125 = v124[1];
  v123[1] = v125;
  swift_bridgeObjectRetain(v125);
  swift_bridgeObjectRelease();
  v126 = a3[11];
  v127 = (uint64_t *)((char *)a1 + v126);
  v128 = (uint64_t *)((char *)a2 + v126);
  *v127 = *v128;
  v129 = v128[1];
  v127[1] = v129;
  swift_bridgeObjectRetain(v129);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_100319518(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v6 = sub_1000BA294(&qword_100BD7048);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnitConfiguration.Distance(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v13 = v12[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = sub_1000BA294(&qword_100BD7020);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v18 = *(int *)(v16 + 36);
    v19 = (char *)v14 + v18;
    v20 = (char *)v15 + v18;
    v21 = type metadata accessor for UnitConfiguration.Precipitation(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v22 = v12[6];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = sub_1000BA294(&qword_100BD7008);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    v26 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v27 = *(int *)(v25 + 36);
    v28 = (char *)v23 + v27;
    v29 = (char *)v24 + v27;
    v30 = type metadata accessor for UnitConfiguration.Pressure(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  v31 = v12[7];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_1000BA294(&qword_100BD71F0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    v36 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v37 = (char *)v32 + v36;
    v38 = (char *)v33 + v36;
    v39 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      v40 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    v41 = *(int *)(v34 + 20);
    v42 = (char *)v32 + v41;
    v43 = (char *)v33 + v41;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      v44 = sub_1000BA294(&qword_100BD7148);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  v45 = v12[8];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = sub_1000BA294(&qword_100BD6FB8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
  {
    v49 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    *v46 = *v47;
    v50 = *(int *)(v48 + 36);
    v51 = (char *)v46 + v50;
    v52 = (char *)v47 + v50;
    v53 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
  }
  v54 = a3[5];
  v55 = a3[6];
  v56 = (char *)a1 + v54;
  v57 = (char *)a2 + v54;
  v58 = *(_OWORD *)v57;
  v59 = *((_OWORD *)v57 + 1);
  *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
  *(_OWORD *)v56 = v58;
  *((_OWORD *)v56 + 1) = v59;
  *(_OWORD *)((char *)a1 + v55) = *(_OWORD *)((char *)a2 + v55);
  v60 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v60) = *(_OWORD *)((char *)a2 + v60);
  v61 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v61) = *(_OWORD *)((char *)a2 + v61);
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  return a1;
}

_QWORD *sub_100319988(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  size_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  int v67;
  size_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  __int128 v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;

  v6 = sub_1000BA294(&qword_100BD7048);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 36);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for UnitConfiguration.Distance(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_100021A14((uint64_t)a1, &qword_100BD7048);
LABEL_6:
    v13 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_bridgeObjectRelease();
  v51 = *(int *)(v6 + 36);
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
LABEL_7:
  v14 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v15 = v14[5];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = sub_1000BA294(&qword_100BD7020);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      *v16 = *v17;
      v21 = *(int *)(v18 + 36);
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = type metadata accessor for UnitConfiguration.Precipitation(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_100021A14((uint64_t)v16, &qword_100BD7020);
LABEL_12:
    v25 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  *v16 = *v17;
  swift_bridgeObjectRelease();
  v55 = *(int *)(v18 + 36);
  v56 = (char *)v16 + v55;
  v57 = (char *)v17 + v55;
  v58 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
LABEL_13:
  v26 = v14[6];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = sub_1000BA294(&qword_100BD7008);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      *v27 = *v28;
      v32 = *(int *)(v29 + 36);
      v33 = (char *)v27 + v32;
      v34 = (char *)v28 + v32;
      v35 = type metadata accessor for UnitConfiguration.Pressure(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    sub_100021A14((uint64_t)v27, &qword_100BD7008);
LABEL_18:
    v36 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  *v27 = *v28;
  swift_bridgeObjectRelease();
  v59 = *(int *)(v29 + 36);
  v60 = (char *)v27 + v59;
  v61 = (char *)v28 + v59;
  v62 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
LABEL_19:
  v37 = v14[7];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      *v38 = *v39;
      v43 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
      v44 = (char *)v38 + v43;
      v45 = (char *)v39 + v43;
      v46 = type metadata accessor for UnitConfiguration.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        v47 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      v70 = *(int *)(v40 + 20);
      v71 = (char *)v38 + v70;
      v72 = (char *)v39 + v70;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v46))
      {
        v73 = sub_1000BA294(&qword_100BD7148);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v71, v72, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v46);
      }
      v74 = (uint64_t)v38;
      v75 = v40;
      goto LABEL_38;
    }
    goto LABEL_25;
  }
  if (v42)
  {
    sub_1000215BC((uint64_t)v38, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
LABEL_25:
    v48 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD71F0) - 8) + 64);
    v49 = v38;
    v50 = v39;
LABEL_26:
    memcpy(v49, v50, v48);
    goto LABEL_39;
  }
  *v38 = *v39;
  swift_bridgeObjectRelease();
  v63 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v64 = (uint64_t)v38 + v63;
  v65 = (char *)v39 + v63;
  v66 = type metadata accessor for UnitConfiguration.Temperature(0);
  v132 = v64;
  LODWORD(v64) = _s7Weather24LocationCompositionStateOwet_0(v64, 1, v66);
  v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if ((_DWORD)v64)
  {
    if (v67)
    {
      v68 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for UnitsConfigurationViewModel.Temperature(0) - 8) + 64);
      v69 = (void *)v132;
LABEL_49:
      memcpy(v69, v65, v68);
      goto LABEL_52;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v132, v65, v66);
    _s7Weather24LocationCompositionStateOwst_0(v132, 0, 1, v66);
  }
  else
  {
    v125 = *(_QWORD *)(v66 - 8);
    if (v67)
    {
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v132, v66);
      v68 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for UnitsConfigurationViewModel.Temperature(0) - 8) + 64);
      v69 = (void *)v132;
      goto LABEL_49;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v125 + 40))(v132, v65, v66);
  }
LABEL_52:
  v126 = *(int *)(v40 + 20);
  v127 = (uint64_t)v38 + v126;
  v128 = (uint64_t)v39 + v126;
  v129 = _s7Weather24LocationCompositionStateOwet_0(v127, 1, v66);
  v130 = _s7Weather24LocationCompositionStateOwet_0(v128, 1, v66);
  if (v129)
  {
    if (!v130)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v127, v128, v66);
      v74 = v127;
      v75 = v66;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v75);
      goto LABEL_39;
    }
    goto LABEL_57;
  }
  v131 = *(_QWORD *)(v66 - 8);
  if (v130)
  {
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v127, v66);
LABEL_57:
    v48 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD7148) - 8) + 64);
    v49 = (void *)v127;
    v50 = (const void *)v128;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 40))(v127, v128, v66);
LABEL_39:
  v76 = v14[8];
  v77 = (_QWORD *)((char *)a1 + v76);
  v78 = (_QWORD *)((char *)a2 + v76);
  v79 = sub_1000BA294(&qword_100BD6FB8);
  v80 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v79);
  v81 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79);
  if (!v80)
  {
    if (!v81)
    {
      *v77 = *v78;
      swift_bridgeObjectRelease();
      v121 = *(int *)(v79 + 36);
      v122 = (char *)v77 + v121;
      v123 = (char *)v78 + v121;
      v124 = type metadata accessor for UnitConfiguration.WindSpeed(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 40))(v122, v123, v124);
      goto LABEL_45;
    }
    sub_100021A14((uint64_t)v77, &qword_100BD6FB8);
    goto LABEL_44;
  }
  if (v81)
  {
LABEL_44:
    v86 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_45;
  }
  *v77 = *v78;
  v82 = *(int *)(v79 + 36);
  v83 = (char *)v77 + v82;
  v84 = (char *)v78 + v82;
  v85 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v83, v84, v85);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
LABEL_45:
  v87 = a3[5];
  v88 = (char *)a1 + v87;
  v89 = (char *)a2 + v87;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + v87));
  v90 = *((_OWORD *)v89 + 1);
  *(_OWORD *)v88 = *(_OWORD *)v89;
  *((_OWORD *)v88 + 1) = v90;
  *((_QWORD *)v88 + 4) = *((_QWORD *)v89 + 4);
  v91 = a3[6];
  v92 = (_QWORD *)((char *)a1 + v91);
  v93 = (_QWORD *)((char *)a2 + v91);
  *v92 = *v93;
  v94 = v92[1];
  v92[1] = v93[1];
  swift_release(v94);
  v95 = a3[7];
  v96 = (_QWORD *)((char *)a1 + v95);
  v97 = (_QWORD *)((char *)a2 + v95);
  v99 = *v97;
  v98 = v97[1];
  *v96 = v99;
  v96[1] = v98;
  swift_bridgeObjectRelease();
  v100 = a3[8];
  v101 = (_QWORD *)((char *)a1 + v100);
  v102 = (_QWORD *)((char *)a2 + v100);
  v104 = *v102;
  v103 = v102[1];
  *v101 = v104;
  v101[1] = v103;
  swift_bridgeObjectRelease();
  v105 = a3[9];
  v106 = (_QWORD *)((char *)a1 + v105);
  v107 = (_QWORD *)((char *)a2 + v105);
  v109 = *v107;
  v108 = v107[1];
  *v106 = v109;
  v106[1] = v108;
  swift_bridgeObjectRelease();
  v110 = a3[10];
  v111 = (_QWORD *)((char *)a1 + v110);
  v112 = (_QWORD *)((char *)a2 + v110);
  v114 = *v112;
  v113 = v112[1];
  *v111 = v114;
  v111[1] = v113;
  swift_bridgeObjectRelease();
  v115 = a3[11];
  v116 = (_QWORD *)((char *)a1 + v115);
  v117 = (_QWORD *)((char *)a2 + v115);
  v119 = *v117;
  v118 = v117[1];
  *v116 = v119;
  v116[1] = v118;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10031A208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031A214);
}

void sub_10031A214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10011B270(a1, a2, a3, type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
}

uint64_t sub_10031A220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031A22C);
}

void sub_10031A22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10011D78C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
}

uint64_t sub_10031A238(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "(";
    v4[2] = &unk_100994AD8;
    v4[3] = &unk_100994B08;
    v4[4] = &unk_100994B08;
    v4[5] = &unk_100994B08;
    v4[6] = &unk_100994B08;
    v4[7] = &unk_100994B08;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_10031A2C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    swift_bridgeObjectRetain(v5);
    v8 = *(int *)(sub_1000BA294(&qword_100BD7048) + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnitConfiguration.Distance(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
    v13 = v12[5];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v16;
    swift_bridgeObjectRetain(v16);
    v17 = *(int *)(sub_1000BA294(&qword_100BD7020) + 36);
    v18 = &v14[v17];
    v19 = &v15[v17];
    v20 = type metadata accessor for UnitConfiguration.Precipitation(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = v12[6];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(_QWORD *)((char *)a2 + v21);
    *(_QWORD *)((char *)a1 + v21) = v24;
    swift_bridgeObjectRetain(v24);
    v25 = *(int *)(sub_1000BA294(&qword_100BD7008) + 36);
    v26 = &v22[v25];
    v27 = &v23[v25];
    v28 = type metadata accessor for UnitConfiguration.Pressure(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    v29 = v12[7];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *(_QWORD *)((char *)a2 + v29);
    *(_QWORD *)((char *)a1 + v29) = v32;
    swift_bridgeObjectRetain(v32);
    v33 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v34 = &v30[v33];
    v35 = &v31[v33];
    v36 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      v37 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    v38 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
    v39 = &v30[v38];
    v40 = &v31[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v31[v38], 1, v36))
    {
      v41 = sub_1000BA294(&qword_100BD7148);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    v42 = v12[8];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = *(_QWORD *)((char *)a2 + v42);
    *(_QWORD *)((char *)a1 + v42) = v45;
    swift_bridgeObjectRetain(v45);
    v46 = *(int *)(sub_1000BA294(&qword_100BD6FB8) + 36);
    v47 = &v43[v46];
    v48 = &v44[v46];
    v49 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
    *((_BYTE *)a1 + v12[9]) = *((_BYTE *)a2 + v12[9]);
    *((_BYTE *)a1 + v12[10]) = *((_BYTE *)a2 + v12[10]);
    v50 = *(int *)(a3 + 20);
    v51 = *(_OWORD *)((char *)a2 + v50 + 24);
    *(_OWORD *)((char *)a1 + v50 + 24) = v51;
    (**(void (***)(void))(v51 - 8))();
    v52 = *(int *)(a3 + 24);
    v53 = (_QWORD *)((char *)a1 + v52);
    v54 = (_QWORD *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    swift_bridgeObjectRetain(v55);
  }
  return a1;
}

double sub_10031A5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(sub_1000BA294(&qword_100BD7048) + 36);
  v5 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  v7 = a1 + v6[5];
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(sub_1000BA294(&qword_100BD7020) + 36);
  v9 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + v6[6];
  swift_bridgeObjectRelease();
  v11 = v10 + *(int *)(sub_1000BA294(&qword_100BD7008) + 36);
  v12 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + v6[7];
  swift_bridgeObjectRelease();
  v14 = v13 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v15 = type metadata accessor for UnitConfiguration.Temperature(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v13 + *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
  v17 = a1 + v6[8];
  swift_bridgeObjectRelease();
  v18 = v17 + *(int *)(sub_1000BA294(&qword_100BD6FB8) + 36);
  v19 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 20)));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_10031A7B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;

  v6 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  v7 = *(int *)(sub_1000BA294(&qword_100BD7048) + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  v12 = v11[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v15;
  swift_bridgeObjectRetain(v15);
  v16 = *(int *)(sub_1000BA294(&qword_100BD7020) + 36);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = v11[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v23;
  swift_bridgeObjectRetain(v23);
  v24 = *(int *)(sub_1000BA294(&qword_100BD7008) + 36);
  v25 = &v21[v24];
  v26 = &v22[v24];
  v27 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  v28 = v11[7];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v31;
  swift_bridgeObjectRetain(v31);
  v32 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v33 = &v29[v32];
  v34 = &v30[v32];
  v35 = type metadata accessor for UnitConfiguration.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
  {
    v36 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
  }
  v37 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  v38 = &v29[v37];
  v39 = &v30[v37];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v30[v37], 1, v35))
  {
    v40 = sub_1000BA294(&qword_100BD7148);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v38, v39, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v35);
  }
  v41 = v11[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)((char *)a2 + v41);
  *(_QWORD *)((char *)a1 + v41) = v44;
  swift_bridgeObjectRetain(v44);
  v45 = *(int *)(sub_1000BA294(&qword_100BD6FB8) + 36);
  v46 = &v42[v45];
  v47 = &v43[v45];
  v48 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
  *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
  *((_BYTE *)a1 + v11[10]) = *((_BYTE *)a2 + v11[10]);
  v49 = *(int *)(a3 + 20);
  v50 = *(_OWORD *)((char *)a2 + v49 + 24);
  *(_OWORD *)((char *)a1 + v49 + 24) = v50;
  (**(void (***)(void))(v50 - 8))();
  v51 = *(int *)(a3 + 24);
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  swift_bridgeObjectRetain(v54);
  return a1;
}

_QWORD *sub_10031AAA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;

  v6 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(sub_1000BA294(&qword_100BD7048) + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  v12 = v11[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = *(int *)(sub_1000BA294(&qword_100BD7020) + 36);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = v11[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease();
  v24 = *(int *)(sub_1000BA294(&qword_100BD7008) + 36);
  v25 = &v21[v24];
  v26 = &v22[v24];
  v27 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = v11[7];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease();
  v32 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v33 = &v29[v32];
  v34 = &v30[v32];
  v35 = type metadata accessor for UnitConfiguration.Temperature(0);
  v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v38 = *(_QWORD *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v35);
LABEL_6:
    v39 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v33, v34, v35);
LABEL_7:
  v40 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  v41 = &v29[v40];
  v42 = &v30[v40];
  v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v29[v40], 1, v35);
  v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v35);
  if (!v43)
  {
    v45 = *(_QWORD *)(v35 - 8);
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v41, v42, v35);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v35);
    goto LABEL_12;
  }
  if (v44)
  {
LABEL_12:
    v46 = sub_1000BA294(&qword_100BD7148);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v41, v42, v35);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v35);
LABEL_13:
  v47 = v11[8];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = *(_QWORD *)((char *)a2 + v47);
  *(_QWORD *)((char *)a1 + v47) = v50;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRelease();
  v51 = *(int *)(sub_1000BA294(&qword_100BD6FB8) + 36);
  v52 = &v48[v51];
  v53 = &v49[v51];
  v54 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
  *((_BYTE *)a1 + v11[10]) = *((_BYTE *)a2 + v11[10]);
  sub_100094D04((_QWORD *)((char *)a1 + *(int *)(a3 + 20)), (_QWORD *)((char *)a2 + *(int *)(a3 + 20)));
  v55 = *(int *)(a3 + 24);
  v56 = (_QWORD *)((char *)a1 + v55);
  v57 = (_QWORD *)((char *)a2 + v55);
  *v56 = *v57;
  v58 = v57[1];
  v56[1] = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_10031AE60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;

  *a1 = *a2;
  v6 = *(int *)(sub_1000BA294(&qword_100BD7048) + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  v11 = v10[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v14 = *(int *)(sub_1000BA294(&qword_100BD7020) + 36);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = v10[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v21 = *(int *)(sub_1000BA294(&qword_100BD7008) + 36);
  v22 = &v19[v21];
  v23 = &v20[v21];
  v24 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = v10[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  v28 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v29 = &v26[v28];
  v30 = &v27[v28];
  v31 = type metadata accessor for UnitConfiguration.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    v32 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  v33 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  v34 = &v26[v33];
  v35 = &v27[v33];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v27[v33], 1, v31))
  {
    v36 = sub_1000BA294(&qword_100BD7148);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v34, v35, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v31);
  }
  v37 = v10[8];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);
  v40 = *(int *)(sub_1000BA294(&qword_100BD6FB8) + 36);
  v41 = &v38[v40];
  v42 = &v39[v40];
  v43 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  *((_BYTE *)a1 + v10[9]) = *((_BYTE *)a2 + v10[9]);
  *((_BYTE *)a1 + v10[10]) = *((_BYTE *)a2 + v10[10]);
  v44 = *(int *)(a3 + 20);
  v45 = *(int *)(a3 + 24);
  v46 = (char *)a1 + v44;
  v47 = (char *)a2 + v44;
  v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
  *(_OWORD *)((char *)a1 + v45) = *(_OWORD *)((char *)a2 + v45);
  return a1;
}

_QWORD *sub_10031B124(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(sub_1000BA294(&qword_100BD7048) + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  v11 = v10[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_bridgeObjectRelease();
  v14 = *(int *)(sub_1000BA294(&qword_100BD7020) + 36);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = v10[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRelease();
  v21 = *(int *)(sub_1000BA294(&qword_100BD7008) + 36);
  v22 = &v19[v21];
  v23 = &v20[v21];
  v24 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = v10[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRelease();
  v28 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v29 = &v26[v28];
  v30 = &v27[v28];
  v31 = type metadata accessor for UnitConfiguration.Temperature(0);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v34 = *(_QWORD *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_6:
    v35 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v29, v30, v31);
LABEL_7:
  v36 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  v37 = &v26[v36];
  v38 = &v27[v36];
  v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v26[v36], 1, v31);
  v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v31);
  if (!v39)
  {
    v41 = *(_QWORD *)(v31 - 8);
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v37, v38, v31);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v31);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    v42 = sub_1000BA294(&qword_100BD7148);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v37, v38, v31);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v31);
LABEL_13:
  v43 = v10[8];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  *(_QWORD *)((char *)a1 + v43) = *(_QWORD *)((char *)a2 + v43);
  swift_bridgeObjectRelease();
  v46 = *(int *)(sub_1000BA294(&qword_100BD6FB8) + 36);
  v47 = &v44[v46];
  v48 = &v45[v46];
  v49 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
  *((_BYTE *)a1 + v10[9]) = *((_BYTE *)a2 + v10[9]);
  *((_BYTE *)a1 + v10[10]) = *((_BYTE *)a2 + v10[10]);
  v50 = *(int *)(a3 + 20);
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + v50));
  v53 = *((_OWORD *)v52 + 1);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v53;
  *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
  v54 = *(int *)(a3 + 24);
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10031B4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031B4C8);
}

void sub_10031B4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10011B270(a1, a2, a3, type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
}

uint64_t sub_10031B4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031B4E0);
}

void sub_10031B4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10011D78C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
}

uint64_t sub_10031B4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031F6C0(a1, a2, a3, type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
}

void sub_10031B4F8()
{
  sub_10027248C((uint64_t)&unk_100BD7340);
}

uint64_t sub_10031B524(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0E04, 1);
}

uint64_t sub_10031B534(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0DDC, 1);
}

uint64_t sub_10031B544(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB0DA8, 1);
}

uint64_t type metadata accessor for PickerSection(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for PickerSection);
}

uint64_t sub_10031B588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10031B654(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100313A64, a4);
}

uint64_t sub_10031B598()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1000986AC();
  v3 = *(_QWORD *)(v1 + 16);
  sub_1000F3F5C(v4, v5, v6, v7);
  v8 = v1 + ((v2 + 32) & ~v2);
  swift_bridgeObjectRelease();
  v9 = v8 + v0[9];
  swift_bridgeObjectRelease();
  v14 = sub_1000C0150(v10, v11, v12, v13);
  sub_100099254(v9 + *(int *)(v14 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  sub_10009DAA8(v8 + v0[11]);
  v15 = (_QWORD *)(v8 + v0[12]);
  if (*v15)
    sub_10009DAA8((uint64_t)v15);
  v16 = (_QWORD *)(v8 + v0[13]);
  if (*v16)
    sub_10009DAA8((uint64_t)v16);
  sub_1000BA548(v8 + v0[14]);
  v17 = sub_1000BD3C8();
  return sub_1000BBBC0(v17, v18, v19);
}

uint64_t sub_10031B648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10031B654(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100313B18, a4);
}

uint64_t sub_10031B654(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ConditionContentView(0, v7, v8, a4) - 8) + 80);
  return a3(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_10031B6D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_1000F43F0(a1, a2, a3, a4);
  return sub_100313D2C(v5 + v9, v6, v7, a5);
}

uint64_t sub_10031B718()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1000986AC();
  v3 = *(_QWORD *)(v1 + 32);
  sub_1000F3F5C(v4, v5, v6, v7);
  sub_10011DB50();
  v8 = v1 + v2;
  sub_10009C0D4();
  v9 = v1 + v2 + v0[9];
  swift_bridgeObjectRelease();
  v14 = sub_1000C0150(v10, v11, v12, v13);
  sub_100099254(v9 + *(int *)(v14 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  sub_10009DAA8(v1 + v2 + v0[11]);
  v15 = (_QWORD *)(v1 + v2 + v0[12]);
  if (*v15)
    sub_10009DAA8((uint64_t)v15);
  v16 = (_QWORD *)(v8 + v0[13]);
  if (*v16)
    sub_10009DAA8((uint64_t)v16);
  sub_1000BA548(v8 + v0[14]);
  v17 = sub_1000BD3C8();
  return sub_1000BBBC0(v17, v18, v19);
}

uint64_t sub_10031B7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_1000F43F0(a1, a2, a3, a4);
  return sub_100313D9C(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v4 + v8, v5, v6);
}

void sub_10031B7FC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100310158(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10031B80C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  result = qword_100BD7388;
  if (!qword_100BD7388)
  {
    v1 = sub_100075EB0(&qword_100BD7360);
    v2 = sub_100075EB0(&qword_100BD7350);
    v3 = type metadata accessor for InsetGroupedListStyle(255);
    sub_10027248C((uint64_t)&unk_100BD7380);
    v5[0] = v2;
    v5[1] = v3;
    v5[2] = v4;
    v5[3] = &protocol witness table for InsetGroupedListStyle;
    swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    sub_10027248C((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7388);
  }
  return result;
}

uint64_t type metadata accessor for ConditionsView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD74B8, (uint64_t)&nominal type descriptor for ConditionsView);
}

uint64_t type metadata accessor for TemperatureView(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD7558, (uint64_t)&nominal type descriptor for TemperatureView);
}

uint64_t sub_10031B918(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SetUnitsToDefaultView(a2, a1);
  return a2;
}

_QWORD *sub_10031B94C(_QWORD *a1)
{
  destroy for SetUnitsToDefaultView(a1);
  return a1;
}

void sub_10031B97C(uint64_t a1)
{
  sub_10031BC4C(a1, &qword_100BD7130, (uint64_t)&type metadata accessor for UnitConfiguration.Distance, (void (*)(uint64_t))sub_100615D48);
}

uint64_t sub_10031B99C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v2 = (int *)type metadata accessor for ConditionsContentView(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = v0 + v5;
  v8 = sub_1000BA294(&qword_100BD7048);
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v5, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = type metadata accessor for UnitConfiguration.Distance(0);
    sub_1000B2568(v9);
  }
  v10 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v11 = sub_1000BA294(&qword_100BD7020);
  if (!sub_1000C24F4(v11))
  {
    sub_100321DEC();
    v12 = type metadata accessor for UnitConfiguration.Precipitation(0);
    sub_1000989A0(v12);
  }
  v13 = sub_1000BA294(&qword_100BD7008);
  if (!sub_1000C24F4(v13))
  {
    sub_100321DEC();
    v14 = type metadata accessor for UnitConfiguration.Pressure(0);
    sub_1000989A0(v14);
  }
  v15 = v7 + *(int *)(v10 + 28);
  v16 = sub_1000BE79C();
  if (!sub_1000C24F4(v16))
  {
    v25 = v0;
    v17 = v6;
    sub_100321DEC();
    v18 = v15 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v19 = sub_10011DC84();
    if (!sub_1000952CC(v18))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    v20 = v15 + *(int *)(v1 + 20);
    v6 = v17;
    v0 = v25;
    if (!sub_1000952CC(v20))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v20, v19);
  }
  v21 = v7 + *(int *)(v10 + 32);
  v22 = sub_1000BA294(&qword_100BD6FB8);
  if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    v23 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    sub_1000B2568(v23);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v7 + v2[5]));
  sub_10009DAA8(v7 + v2[6]);
  sub_1000BA548(v7 + v2[7]);
  sub_1000BA548(v7 + v2[8]);
  sub_1000BA548(v7 + v2[9]);
  sub_1000BA548(v7 + v2[10]);
  sub_1000BA548(v7 + v2[11]);
  return swift_deallocObject(v0, v5 + v6, v4 | 7);
}

void sub_10031BBF0(uint64_t a1)
{
  sub_10031BC4C(a1, &qword_100BD7140, (uint64_t)&type metadata accessor for UnitConfiguration.Pressure, (void (*)(uint64_t))sub_100615ED0);
}

void sub_10031BC10(uint64_t a1)
{
  sub_10031BC4C(a1, &qword_100BD7138, (uint64_t)&type metadata accessor for UnitConfiguration.Precipitation, (void (*)(uint64_t))sub_100615D5C);
}

void sub_10031BC30(uint64_t a1)
{
  sub_10031BC4C(a1, qword_100BD7150, (uint64_t)&type metadata accessor for UnitConfiguration.WindSpeed, (void (*)(uint64_t))sub_100615EF8);
}

void sub_10031BC4C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v8;

  type metadata accessor for ConditionsContentView(0);
  sub_1000987F4();
  sub_100313494(a1, v8, a2, a3, a4);
  sub_10004A2A0();
}

uint64_t sub_10031BCA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;

  sub_1000BE79C();
  v4 = sub_10009BCCC();
  return a3(v4, a2);
}

void sub_10031BCE8(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for ConditionsContentView(0);
  sub_1000987F4();
  sub_1003132B4(a1, v2);
}

void sub_10031BD14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v2 = type metadata accessor for Binding(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100994B08;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = &unk_100994AF0;
      v8[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v8[5] = (char *)&value witness table for () + 64;
      v8[6] = (char *)&value witness table for () + 64;
      sub_100158C7C(319, (unint64_t *)&qword_100BD7458, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[7] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 0, 8, v8, a1 + 48);
      }
    }
  }
}

uint64_t *sub_10031BE04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, unint64_t, uint64_t, __n128);
  __n128 v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(unint64_t, unint64_t, uint64_t);
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  unsigned int v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;

  v58 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v58 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 16) & ~(unint64_t)v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v57 = v9 + 16;
  v59 = *(_QWORD *)(v8 + 64);
  v60 = *(_QWORD *)(a3 + 24);
  v10 = type metadata accessor for DynamicTypeSize(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 & 0xF8 | 7;
  v14 = (v12 & 0xF8) + 23;
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v15 = 8;
  else
    v15 = *(_QWORD *)(v11 + 64);
  v16 = v9 | (unint64_t)v6 | v13;
  v17 = (v9 | v6 | v12) & 0x100000;
  v18 = *a2;
  v61 = a1;
  *a1 = *a2;
  if (v16 != 7
    || v17 != 0
    || v15
     + ((v14
       + ((((((v59
             + ((v9 + 16 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v9)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13)
     + 1 > 0x18)
  {
    v61 = (uint64_t *)(v18 + ((v16 + 16) & ~v16));
LABEL_21:
    swift_retain(v18);
    return v61;
  }
  v53 = v10;
  v54 = v14;
  v21 = ~(unint64_t)v9;
  v55 = ~v13;
  v56 = v11;
  v22 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v23 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = *v23;
  *v22 = *v23;
  v25 = ((unint64_t)v22 + v6 + 8) & ~(unint64_t)v6;
  v26 = ((unint64_t)v23 + v6 + 8) & ~(unint64_t)v6;
  v27 = *(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v5 + 16);
  swift_retain(v18);
  v28 = swift_retain(v24);
  v27(v25, v26, v58, v28);
  v29 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v31 = v30[1];
  v29[1] = v31;
  v32 = ((unint64_t)v29 + v57) & v21;
  v33 = ((unint64_t)v30 + v57) & v21;
  v34 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain(v31);
  v34(v32, v33, v60);
  v35 = (v32 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v33 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v35 = v37;
  v38 = (_QWORD *)((v32 + v59 + 23) & 0xFFFFFFFFFFFFF8);
  v39 = (uint64_t *)((v33 + v59 + 23) & 0xFFFFFFFFFFFFF8);
  v40 = *v39;
  *v38 = *v39;
  v41 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v45 = (_QWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = (_QWORD *)(((unint64_t)v44 + v54) & v55);
  v48 = (uint64_t *)(((unint64_t)v45 + v54) & v55);
  v49 = *((unsigned __int8 *)v48 + v15);
  swift_bridgeObjectRetain(v40);
  swift_retain(v43);
  v50 = swift_retain(v46);
  if (v49 >= 2)
  {
    if (v15 <= 3)
      v51 = v15;
    else
      v51 = 4;
    __asm { BR              X11 }
  }
  if (v49 != 1)
  {
    v18 = *v48;
    *v47 = *v48;
    *((_BYTE *)v47 + v15) = 0;
    goto LABEL_21;
  }
  (*(void (**)(_QWORD *, uint64_t *, uint64_t, __n128))(v56 + 16))(v47, v48, v53, v50);
  *((_BYTE *)v47 + v15) = 1;
  return v61;
}

uint64_t sub_10031C148(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;

  v4 = (unint64_t)a1 + 15;
  swift_release(*a1);
  v4 &= 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)v4);
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))((v4 + v6 + 8) & ~v6);
  v7 = ((unint64_t)a1 + *(_QWORD *)(v5 + 64) + ((v6 + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_bridgeObjectRelease(*(_QWORD *)(v7 + 8));
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v10 = (v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t, __n128))(v9 + 8))(v10, v8);
  v11 = *(_QWORD *)(v9 + 64) + v10 + 23;
  v12 = (v11 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8));
  v12 &= 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v12 + 8));
  v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v13 + 8));
  v14 = *(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (_QWORD *)((v13 + v15 + 16) & ~v15);
  v17 = *(_QWORD *)(v14 + 64);
  if (v17 <= 8)
    v17 = 8;
  v18 = *((unsigned __int8 *)v16 + v17);
  if (v18 >= 2)
  {
    if (v17 <= 3)
      v19 = v17;
    else
      v19 = 4;
    __asm { BR              X14 }
  }
  if (v18 == 1)
    return (*(uint64_t (**)(void))(v14 + 8))();
  else
    return swift_release(*v16);
}

uint64_t *sub_10031C2F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  unsigned int v51;
  __n128 v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  v6 = *a2;
  *a1 = *a2;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 16);
  swift_retain(v6);
  v16 = swift_retain(v9);
  v15(v13, v14, v10, v16);
  v17 = ((v12 + 16) & ~v12) + *(_QWORD *)(v11 + 64) + 7;
  v18 = (_QWORD *)(((unint64_t)a1 + v17) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)a2 + v17) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = v19[1];
  v18[1] = v20;
  v21 = *(_QWORD *)(a3 + 24);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = ((unint64_t)v18 + v23 + 16) & ~v23;
  v25 = ((unint64_t)v19 + v23 + 16) & ~v23;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  swift_bridgeObjectRetain(v20);
  v26(v24, v25, v21);
  v27 = *(_QWORD *)(v22 + 64);
  v28 = v24 + v27;
  v29 = v25 + v27;
  v30 = (v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v32;
  v33 = (_QWORD *)((v28 + 23) & 0xFFFFFFFFFFFFF8);
  v34 = (uint64_t *)((v29 + 23) & 0xFFFFFFFFFFFFF8);
  v35 = *v34;
  *v33 = *v34;
  v36 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = type metadata accessor for DynamicTypeSize(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(_DWORD *)(v43 + 80) & 0xF8;
  v45 = v44 + 23;
  v46 = (unint64_t)v39 + v44 + 23;
  v47 = ~v44 & 0xFFFFFFFFFFFFFFF8;
  v48 = (_QWORD *)(v46 & v47);
  v49 = (uint64_t *)(((unint64_t)v40 + v45) & v47);
  if (*(_QWORD *)(v43 + 64) <= 8uLL)
    v50 = 8;
  else
    v50 = *(_QWORD *)(v43 + 64);
  v51 = *((unsigned __int8 *)v49 + v50);
  swift_bridgeObjectRetain(v35);
  swift_retain(v38);
  v52 = swift_retain(v41);
  if (v51 >= 2)
  {
    if (v50 <= 3)
      v53 = v50;
    else
      v53 = 4;
    __asm { BR              X11 }
  }
  if (v51 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t, __n128))(v43 + 16))(v48, v49, v42, v52);
    v54 = 1;
  }
  else
  {
    v55 = *v49;
    *v48 = *v49;
    swift_retain(v55);
    v54 = 0;
  }
  *((_BYTE *)v48 + v50) = v54;
  return a1;
}

uint64_t *sub_10031C57C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;

  v6 = *a1;
  v8 = (unint64_t)a2 + 15;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  v9 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)v8;
  v11 = *v9;
  *v9 = *(_QWORD *)v8;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))(((unint64_t)v9 + v13 + 8) & ~v13, (v13 + 8 + v8) & ~v13);
  v14 = ((v13 + 16) & ~v13) + *(_QWORD *)(v12 + 64) + 7;
  v15 = (_QWORD *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = v16[1];
  v18 = v15[1];
  v15[1] = v17;
  swift_bridgeObjectRetain(v17);
  v19 = swift_bridgeObjectRelease(v18);
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = ((unint64_t)v15 + v21 + 16) & ~v21;
  v23 = ((unint64_t)v16 + v21 + 16) & ~v21;
  (*(void (**)(uint64_t, uint64_t, __n128))(v20 + 24))(v22, v23, v19);
  v24 = *(_QWORD *)(v20 + 64);
  v25 = v22 + v24;
  v26 = v23 + v24;
  v27 = (v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = v29;
  v25 += 23;
  v26 += 23;
  v31 = (v26 & 0xFFFFFFFFFFFFF8) + 15;
  v30 = *(_QWORD *)(v26 & 0xFFFFFFFFFFFFF8);
  v32 = *(_QWORD *)(v25 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v25 & 0xFFFFFFFFFFFFFFF8) = v30;
  v33 = (v25 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v32);
  v33 &= 0xFFFFFFFFFFFFFFF8;
  v31 &= 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)(v31 + 8);
  v35 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v31;
  *(_QWORD *)(v33 + 8) = v34;
  swift_retain(v34);
  swift_release(v35);
  v36 = (_QWORD *)((v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)((v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  v38 = v37[1];
  v39 = v36[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_retain(v38);
  swift_release(v39);
  v40 = type metadata accessor for DynamicTypeSize(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(_DWORD *)(v41 + 80) & 0xF8;
  v43 = v42 + 23;
  v44 = (unint64_t)v36 + v42 + 23;
  v45 = ~v42 & 0xFFFFFFFFFFFFFFF8;
  v46 = (_QWORD *)(v44 & v45);
  v47 = (unint64_t)v37 + v43;
  v48 = (uint64_t *)(v47 & v45);
  if ((v44 & v45) != (v47 & v45))
  {
    v49 = v40;
    if (*(_QWORD *)(v41 + 64) <= 8uLL)
      v50 = 8;
    else
      v50 = *(_QWORD *)(v41 + 64);
    v51 = *((unsigned __int8 *)v46 + v50);
    if (v51 >= 2)
    {
      if (v50 <= 3)
        v52 = v50;
      else
        v52 = 4;
      __asm { BR              X12 }
    }
    if (v51 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v41 + 8))(v46, v40);
    else
      swift_release(*v46);
    v53 = *((unsigned __int8 *)v48 + v50);
    if (v53 >= 2)
    {
      if (v50 <= 3)
        v54 = v50;
      else
        v54 = 4;
      __asm { BR              X12 }
    }
    if (v53 == 1)
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v41 + 16))(v46, v48, v49);
      *((_BYTE *)v46 + v50) = 1;
    }
    else
    {
      v55 = *v48;
      *v46 = *v48;
      *((_BYTE *)v46 + v50) = 0;
      swift_retain(v55);
    }
  }
  return a1;
}

_QWORD *sub_10031C8BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  char v39;

  *a1 = *a2;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(((unint64_t)v6 + v9 + 8) & ~v9, ((unint64_t)v7 + v9 + 8) & ~v9);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v11 = (_OWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = ((unint64_t)v11 + v14 + 16) & ~v14;
  v16 = ((unint64_t)v12 + v14 + 16) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v15, v16);
  v17 = *(_QWORD *)(v13 + 64);
  v18 = v15 + v17;
  v19 = v16 + v17;
  v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = v22;
  v23 = (_QWORD *)((v18 + 23) & 0xFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v19 + 23) & 0xFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_OWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_OWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = *(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8);
  v30 = *(_DWORD *)(v29 + 80) & 0xF8;
  v31 = v30 + 23;
  v32 = (unint64_t)v27 + v30 + 23;
  v33 = ~v30 & 0xFFFFFFFFFFFFFFF8;
  v34 = (_QWORD *)(v32 & v33);
  v35 = (_QWORD *)(((unint64_t)v28 + v31) & v33);
  if (*(_QWORD *)(v29 + 64) <= 8uLL)
    v36 = 8;
  else
    v36 = *(_QWORD *)(v29 + 64);
  v37 = *((unsigned __int8 *)v35 + v36);
  if (v37 >= 2)
  {
    if (v36 <= 3)
      v38 = v36;
    else
      v38 = 4;
    __asm { BR              X13 }
  }
  if (v37 == 1)
  {
    (*(void (**)(_QWORD *))(v29 + 32))(v34);
    v39 = 1;
  }
  else
  {
    v39 = 0;
    *v34 = *v35;
  }
  *((_BYTE *)v34 + v36) = v39;
  return a1;
}

uint64_t *sub_10031CADC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  char v50;

  v6 = *a1;
  v7 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release(v6);
  v8 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *v8;
  *v8 = *(_QWORD *)v7;
  swift_release(v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))(((unint64_t)v8 + v11 + 8) & ~v11, (v11 + 8 + v7) & ~v11);
  v12 = ((v11 + 16) & ~v11) + *(_QWORD *)(v10 + 64) + 7;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = v13[1];
  v13[1] = v14[1];
  v16 = swift_bridgeObjectRelease(v15);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = ((unint64_t)v13 + v18 + 16) & ~v18;
  v20 = ((unint64_t)v14 + v18 + 16) & ~v18;
  (*(void (**)(uint64_t, uint64_t, __n128))(v17 + 40))(v19, v20, v16);
  v21 = *(_QWORD *)(v17 + 64);
  v22 = v19 + v21;
  v23 = v20 + v21;
  v24 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = v26;
  v22 += 23;
  v27 = (_QWORD *)((v23 + 23) & 0xFFFFFFFFFFFFF8);
  v28 = *(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF8) = *v27;
  v29 = (v22 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease(v28);
  v29 &= 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)(v29 + 8);
  v32 = *(_OWORD *)v30;
  v30 += 23;
  *(_OWORD *)v29 = v32;
  swift_release(v31);
  v33 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)(v33 + 8);
  *(_OWORD *)v33 = *(_OWORD *)(v30 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v34);
  v35 = type metadata accessor for DynamicTypeSize(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_DWORD *)(v36 + 80) & 0xF8;
  v38 = v37 + 23;
  v39 = v37 + 23 + v33;
  v40 = ~v37 & 0xFFFFFFFFFFFFFFF8;
  v41 = (_QWORD *)(v39 & v40);
  v42 = v38 + (v30 & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(v42 & v40);
  if ((v39 & v40) != (v42 & v40))
  {
    v44 = v35;
    if (*(_QWORD *)(v36 + 64) <= 8uLL)
      v45 = 8;
    else
      v45 = *(_QWORD *)(v36 + 64);
    v46 = *((unsigned __int8 *)v41 + v45);
    if (v46 >= 2)
    {
      if (v45 <= 3)
        v47 = v45;
      else
        v47 = 4;
      __asm { BR              X12 }
    }
    if (v46 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v36 + 8))(v41, v35);
    else
      swift_release(*v41);
    v48 = *((unsigned __int8 *)v43 + v45);
    if (v48 >= 2)
    {
      if (v45 <= 3)
        v49 = v45;
      else
        v49 = 4;
      __asm { BR              X12 }
    }
    if (v48 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v36 + 32))(v41, v43, v44);
      v50 = 1;
    }
    else
    {
      v50 = 0;
      *v41 = *v43;
    }
    *((_BYTE *)v41 + v45) = v50;
  }
  return a1;
}

uint64_t sub_10031CDE4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  unsigned int v24;
  int v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t *v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v6 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8);
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v13 + 64);
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = ((v15 + 16) & ~v15) + *(_QWORD *)(v7 + 64);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = v17 + 16;
  if (a2 <= v12)
    goto LABEL_30;
  v19 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v20 = v14
      + ((v19
        + ((((((*(_QWORD *)(v10 + 64) + ((v18 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v17) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v19)
      + 1;
  v21 = 8 * v20;
  if (v20 > 3)
    goto LABEL_13;
  v24 = ((a2 - v12 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v24))
  {
    v22 = *(_DWORD *)(a1 + v20);
    if (v22)
      goto LABEL_21;
  }
  else
  {
    if (v24 <= 0xFF)
    {
      if (v24 < 2)
        goto LABEL_30;
LABEL_13:
      v22 = *(unsigned __int8 *)(a1 + v20);
      if (!*(_BYTE *)(a1 + v20))
        goto LABEL_30;
LABEL_21:
      v25 = (v22 - 1) << v21;
      if (v20 > 3)
        v25 = 0;
      if ((_DWORD)v20)
      {
        if (v20 <= 3)
          v26 = v20;
        else
          v26 = 4;
        __asm { BR              X11 }
      }
      return v12 + v25 + 1;
    }
    v22 = *(unsigned __int16 *)(a1 + v20);
    if (*(_WORD *)(a1 + v20))
      goto LABEL_21;
  }
LABEL_30:
  if (v9 >= v11)
  {
    v29 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v8 & 0x80000000) != 0)
      return _s7Weather24LocationCompositionStateOwet_0(((unint64_t)v29 + v15 + 8) & ~v15, v8, v5);
    v28 = *v29;
  }
  else
  {
    v27 = (a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    if ((v12 & 0x80000000) != 0)
      return _s7Weather24LocationCompositionStateOwet_0((v18 + v27) & ~v17, v11, v6);
    v28 = *(_QWORD *)(v27 + 8);
  }
  if (v28 >= 0xFFFFFFFF)
    LODWORD(v28) = -1;
  return (v28 + 1);
}

void sub_10031D048(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  _BYTE *v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8);
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v11 = 8;
  else
    v11 = *(_QWORD *)(v10 + 64);
  v12 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v13 = v11
      + ((v12
        + ((((((*(_QWORD *)(v8 + 64)
              + ((*(unsigned __int8 *)(v8 + 80)
                + 16
                + ((((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
                  + *(_QWORD *)(v6 + 64)
                  + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v12)
      + 1;
  v14 = 8 * v13;
  if (a3 <= v9)
  {
    v16 = 0;
    v15 = a1;
  }
  else
  {
    v15 = a1;
    if (v13 <= 3)
    {
      v18 = ((a3 - v9 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v18))
      {
        v16 = &dword_100000004;
      }
      else if (v18 >= 0x100)
      {
        v16 = 2;
      }
      else
      {
        v16 = v18 > 1;
      }
    }
    else
    {
      v16 = &_mh_execute_header.magic + 1;
    }
  }
  if (v9 < a2)
  {
    v17 = ~v9 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v17 & ~(-1 << v14);
        bzero(v15, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)v15 = v19;
          v15[2] = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)v15 = v19;
        }
        else
        {
          *v15 = v19;
        }
      }
    }
    else
    {
      bzero(v15, v13);
      *(_DWORD *)v15 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

double destroy for SetUnitsToDefaultView(_QWORD *a1)
{
  double result;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SetUnitsToDefaultView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t assignWithCopy for SetUnitsToDefaultView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100094D04((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetUnitsToDefaultView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetUnitsToDefaultView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetUnitsToDefaultView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetUnitsToDefaultView()
{
  return &type metadata for SetUnitsToDefaultView;
}

uint64_t *sub_10031D63C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  int *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t, __n128);
  __n128 v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1000BA294(&qword_100BD7048);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      v7 = sub_1000BA294(&qword_100BD71D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = *(int *)(v6 + 36);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for UnitConfiguration.Distance(0);
      v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
      v15 = swift_bridgeObjectRetain(v9);
      v14(v11, v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
    v16 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
    v17 = v16[5];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = sub_1000BA294(&qword_100BD7020);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = sub_1000BA294(&qword_100BD71E0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = *v19;
      *v18 = *v19;
      v23 = *(int *)(v20 + 36);
      v24 = (char *)v18 + v23;
      v25 = (char *)v19 + v23;
      v26 = type metadata accessor for UnitConfiguration.Precipitation(0);
      v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
      v28 = swift_bridgeObjectRetain(v22);
      v27(v24, v25, v26, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v29 = v16[6];
    v30 = (uint64_t *)((char *)a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = sub_1000BA294(&qword_100BD7008);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
    {
      v33 = sub_1000BA294(&qword_100BD71E8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = *v31;
      *v30 = *v31;
      v35 = *(int *)(v32 + 36);
      v36 = (char *)v30 + v35;
      v37 = (char *)v31 + v35;
      v38 = type metadata accessor for UnitConfiguration.Pressure(0);
      v39 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v38 - 8) + 16);
      v40 = swift_bridgeObjectRetain(v34);
      v39(v36, v37, v38, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
    }
    v41 = v16[7];
    v42 = (uint64_t *)((char *)a1 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
    {
      v45 = sub_1000BA294(&qword_100BD71F0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v46 = *v43;
      *v42 = *v43;
      swift_bridgeObjectRetain(v46);
      v47 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
      v48 = (char *)v42 + v47;
      v49 = (char *)v43 + v47;
      v50 = type metadata accessor for UnitConfiguration.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
      {
        v51 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
      }
      v52 = *(int *)(v44 + 20);
      v53 = (char *)v42 + v52;
      v54 = (char *)v43 + v52;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v50))
      {
        v55 = sub_1000BA294(&qword_100BD7148);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v53, v54, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v50);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
    }
    v56 = v16[8];
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)a2 + v56);
    v59 = sub_1000BA294(&qword_100BD6FB8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
    {
      v60 = sub_1000BA294(&qword_100BD71F8);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      v61 = *v58;
      *v57 = *v58;
      v62 = *(int *)(v59 + 36);
      v63 = (char *)v57 + v62;
      v64 = (char *)v58 + v62;
      v65 = type metadata accessor for UnitConfiguration.WindSpeed(0);
      v66 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v65 - 8) + 16);
      v67 = swift_bridgeObjectRetain(v61);
      v66(v63, v64, v65, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
    }
    v68 = *(int *)(a3 + 20);
    v69 = *(_OWORD *)((char *)a2 + v68 + 24);
    *(_OWORD *)((char *)a1 + v68 + 24) = v69;
    (**(void (***)(void))(v69 - 8))();
    v70 = *(int *)(a3 + 24);
    v71 = (uint64_t *)((char *)a1 + v70);
    v72 = (uint64_t *)((char *)a2 + v70);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    swift_bridgeObjectRetain(v73);
  }
  return a1;
}

double sub_10031DAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;

  v4 = sub_1000BA294(&qword_100BD7048);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 36);
    v6 = type metadata accessor for UnitConfiguration.Distance(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v8 = a1 + v7[5];
  v9 = sub_1000BA294(&qword_100BD7020);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 36);
    v11 = type metadata accessor for UnitConfiguration.Precipitation(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + v7[6];
  v13 = sub_1000BA294(&qword_100BD7008);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v13 + 36);
    v15 = type metadata accessor for UnitConfiguration.Pressure(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + v7[7];
  v17 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
  {
    swift_bridgeObjectRelease();
    v18 = v16 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v19 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    v20 = v16 + *(int *)(v17 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v20, v19);
  }
  v21 = a1 + v7[8];
  v22 = sub_1000BA294(&qword_100BD6FB8);
  if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    v23 = v21 + *(int *)(v22 + 36);
    v24 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 20)));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t *sub_10031DD58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t, __n128);
  __n128 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t, __n128);
  __n128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;

  v5 = sub_1000BA294(&qword_100BD7048);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v5))
  {
    v6 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    v8 = *(int *)(v5 + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnitConfiguration.Distance(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11, v13);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v5);
  }
  v14 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v15 = v14[5];
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = sub_1000BA294(&qword_100BD7020);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = *v17;
    *v16 = *v17;
    v21 = *(int *)(v18 + 36);
    v22 = (char *)v16 + v21;
    v23 = (char *)v17 + v21;
    v24 = type metadata accessor for UnitConfiguration.Precipitation(0);
    v25 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
    v26 = swift_bridgeObjectRetain(v20);
    v25(v22, v23, v24, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v27 = v14[6];
  v28 = (uint64_t *)((char *)a1 + v27);
  v29 = (uint64_t *)((char *)a2 + v27);
  v30 = sub_1000BA294(&qword_100BD7008);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = *v29;
    *v28 = *v29;
    v33 = *(int *)(v30 + 36);
    v34 = (char *)v28 + v33;
    v35 = (char *)v29 + v33;
    v36 = type metadata accessor for UnitConfiguration.Pressure(0);
    v37 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v36 - 8) + 16);
    v38 = swift_bridgeObjectRetain(v32);
    v37(v34, v35, v36, v38);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  v39 = v14[7];
  v40 = (uint64_t *)((char *)a1 + v39);
  v41 = (uint64_t *)((char *)a2 + v39);
  v42 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    v43 = sub_1000BA294(&qword_100BD71F0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = *v41;
    *v40 = *v41;
    swift_bridgeObjectRetain(v44);
    v45 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v46 = (char *)v40 + v45;
    v47 = (char *)v41 + v45;
    v48 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
    {
      v49 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
    }
    v50 = *(int *)(v42 + 20);
    v51 = (char *)v40 + v50;
    v52 = (char *)v41 + v50;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v48))
    {
      v53 = sub_1000BA294(&qword_100BD7148);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v51, v52, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v48);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
  }
  v54 = v14[8];
  v55 = (uint64_t *)((char *)a1 + v54);
  v56 = (uint64_t *)((char *)a2 + v54);
  v57 = sub_1000BA294(&qword_100BD6FB8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
  {
    v58 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v59 = *v56;
    *v55 = *v56;
    v60 = *(int *)(v57 + 36);
    v61 = (char *)v55 + v60;
    v62 = (char *)v56 + v60;
    v63 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    v64 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v63 - 8) + 16);
    v65 = swift_bridgeObjectRetain(v59);
    v64(v61, v62, v63, v65);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
  }
  v66 = *(int *)(a3 + 20);
  v67 = *(_OWORD *)((char *)a2 + v66 + 24);
  *(_OWORD *)((char *)a1 + v66 + 24) = v67;
  (**(void (***)(void))(v67 - 8))();
  v68 = *(int *)(a3 + 24);
  v69 = (uint64_t *)((char *)a1 + v68);
  v70 = (uint64_t *)((char *)a2 + v68);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  swift_bridgeObjectRetain(v71);
  return a1;
}

uint64_t *sub_10031E1EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t, __n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  size_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t, __n128);
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;

  v6 = sub_1000BA294(&qword_100BD7048);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = *(int *)(v6 + 36);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for UnitConfiguration.Distance(0);
      v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
      v15 = swift_bridgeObjectRetain(v9);
      v14(v11, v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_100021A14((uint64_t)a1, &qword_100BD7048);
LABEL_6:
    v16 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v70 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRelease();
  v71 = *(int *)(v6 + 36);
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  v74 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
LABEL_7:
  v17 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v18 = v17[5];
  v19 = (uint64_t *)((char *)a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  v21 = sub_1000BA294(&qword_100BD7020);
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      v24 = *v20;
      *v19 = *v20;
      v25 = *(int *)(v21 + 36);
      v26 = (char *)v19 + v25;
      v130 = (char *)v20 + v25;
      v27 = a1;
      v28 = a2;
      v29 = v17;
      v30 = a3;
      v31 = type metadata accessor for UnitConfiguration.Precipitation(0);
      v32 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v31 - 8) + 16);
      v33 = swift_bridgeObjectRetain(v24);
      v34 = v31;
      a3 = v30;
      v17 = v29;
      a2 = v28;
      a1 = v27;
      v32(v26, v130, v34, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_100021A14((uint64_t)v19, &qword_100BD7020);
LABEL_12:
    v35 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v75 = *v20;
  *v19 = *v20;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease();
  v76 = *(int *)(v21 + 36);
  v77 = (char *)v19 + v76;
  v78 = (char *)v20 + v76;
  v79 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 24))(v77, v78, v79);
LABEL_13:
  v36 = v17[6];
  v37 = (uint64_t *)((char *)a1 + v36);
  v38 = (uint64_t *)((char *)a2 + v36);
  v39 = sub_1000BA294(&qword_100BD7008);
  v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
  if (v40)
  {
    if (!v41)
    {
      v42 = *v38;
      *v37 = *v38;
      v43 = *(int *)(v39 + 36);
      v44 = (char *)v37 + v43;
      v131 = (char *)v38 + v43;
      v45 = a1;
      v46 = a2;
      v47 = v17;
      v48 = a3;
      v49 = type metadata accessor for UnitConfiguration.Pressure(0);
      v50 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v49 - 8) + 16);
      v51 = swift_bridgeObjectRetain(v42);
      v52 = v49;
      a3 = v48;
      v17 = v47;
      a2 = v46;
      a1 = v45;
      v50(v44, v131, v52, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v41)
  {
    sub_100021A14((uint64_t)v37, &qword_100BD7008);
LABEL_18:
    v53 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_19;
  }
  v80 = *v38;
  *v37 = *v38;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease();
  v81 = *(int *)(v39 + 36);
  v82 = (char *)v37 + v81;
  v83 = (char *)v38 + v81;
  v84 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 24))(v82, v83, v84);
LABEL_19:
  v54 = v17[7];
  v55 = (uint64_t *)((char *)a1 + v54);
  v56 = (uint64_t *)((char *)a2 + v54);
  v57 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  v58 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v57);
  v59 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57);
  if (v58)
  {
    if (!v59)
    {
      v60 = a3;
      v61 = *v56;
      *v55 = *v56;
      swift_bridgeObjectRetain(v61);
      v62 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
      v63 = (char *)v55 + v62;
      v64 = (char *)v56 + v62;
      v65 = type metadata accessor for UnitConfiguration.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
      {
        v66 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
      }
      v92 = *(int *)(v57 + 20);
      v93 = (char *)v55 + v92;
      v94 = (char *)v56 + v92;
      a3 = v60;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v65))
      {
        v95 = sub_1000BA294(&qword_100BD7148);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v93, v94, v65);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v65);
      }
      v96 = (uint64_t)v55;
      v97 = v57;
      goto LABEL_38;
    }
    goto LABEL_25;
  }
  if (v59)
  {
    sub_1000215BC((uint64_t)v55, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
LABEL_25:
    v67 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD71F0) - 8) + 64);
    v68 = v55;
    v69 = v56;
LABEL_26:
    memcpy(v68, v69, v67);
    goto LABEL_39;
  }
  v132 = a3;
  v85 = *v56;
  *v55 = *v56;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease();
  v86 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v87 = (char *)v55 + v86;
  v88 = (char *)v56 + v86;
  v89 = type metadata accessor for UnitConfiguration.Temperature(0);
  v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v89);
  v91 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89);
  if (v90)
  {
    if (!v91)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v89);
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  v122 = *(_QWORD *)(v89 - 8);
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v122 + 8))(v87, v89);
LABEL_49:
    v123 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(char *, char *, uint64_t))(v122 + 24))(v87, v88, v89);
LABEL_50:
  v124 = *(int *)(v57 + 20);
  v125 = (uint64_t)v55 + v124;
  v126 = (uint64_t)v56 + v124;
  v127 = _s7Weather24LocationCompositionStateOwet_0(v125, 1, v89);
  v128 = _s7Weather24LocationCompositionStateOwet_0(v126, 1, v89);
  a3 = v132;
  if (v127)
  {
    if (!v128)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v125, v126, v89);
      v96 = v125;
      v97 = v89;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v96, 0, 1, v97);
      goto LABEL_39;
    }
    goto LABEL_55;
  }
  v129 = *(_QWORD *)(v89 - 8);
  if (v128)
  {
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v125, v89);
LABEL_55:
    v67 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD7148) - 8) + 64);
    v68 = (void *)v125;
    v69 = (const void *)v126;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 24))(v125, v126, v89);
LABEL_39:
  v98 = v17[8];
  v99 = (uint64_t *)((char *)a1 + v98);
  v100 = (uint64_t *)((char *)a2 + v98);
  v101 = sub_1000BA294(&qword_100BD6FB8);
  v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v101);
  v103 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101);
  if (!v102)
  {
    if (!v103)
    {
      v117 = *v100;
      *v99 = *v100;
      swift_bridgeObjectRetain(v117);
      swift_bridgeObjectRelease();
      v118 = *(int *)(v101 + 36);
      v119 = (char *)v99 + v118;
      v120 = (char *)v100 + v118;
      v121 = type metadata accessor for UnitConfiguration.WindSpeed(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 24))(v119, v120, v121);
      goto LABEL_45;
    }
    sub_100021A14((uint64_t)v99, &qword_100BD6FB8);
    goto LABEL_44;
  }
  if (v103)
  {
LABEL_44:
    v111 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    goto LABEL_45;
  }
  v104 = *v100;
  *v99 = *v100;
  v105 = *(int *)(v101 + 36);
  v106 = (char *)v99 + v105;
  v107 = (char *)v100 + v105;
  v108 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  v109 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v108 - 8) + 16);
  v110 = swift_bridgeObjectRetain(v104);
  v109(v106, v107, v108, v110);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
LABEL_45:
  sub_100094D04((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)));
  v112 = *(int *)(a3 + 24);
  v113 = (uint64_t *)((char *)a1 + v112);
  v114 = (uint64_t *)((char *)a2 + v112);
  *v113 = *v114;
  v115 = v114[1];
  v113[1] = v115;
  swift_bridgeObjectRetain(v115);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_10031EA68(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;

  v6 = sub_1000BA294(&qword_100BD7048);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnitConfiguration.Distance(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v13 = v12[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = sub_1000BA294(&qword_100BD7020);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v18 = *(int *)(v16 + 36);
    v19 = (char *)v14 + v18;
    v20 = (char *)v15 + v18;
    v21 = type metadata accessor for UnitConfiguration.Precipitation(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v22 = v12[6];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = sub_1000BA294(&qword_100BD7008);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    v26 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v27 = *(int *)(v25 + 36);
    v28 = (char *)v23 + v27;
    v29 = (char *)v24 + v27;
    v30 = type metadata accessor for UnitConfiguration.Pressure(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  v31 = v12[7];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_1000BA294(&qword_100BD71F0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    v36 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v37 = (char *)v32 + v36;
    v38 = (char *)v33 + v36;
    v39 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      v40 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    v41 = *(int *)(v34 + 20);
    v42 = (char *)v32 + v41;
    v43 = (char *)v33 + v41;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      v44 = sub_1000BA294(&qword_100BD7148);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  v45 = v12[8];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = sub_1000BA294(&qword_100BD6FB8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
  {
    v49 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    *v46 = *v47;
    v50 = *(int *)(v48 + 36);
    v51 = (char *)v46 + v50;
    v52 = (char *)v47 + v50;
    v53 = type metadata accessor for UnitConfiguration.WindSpeed(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
  }
  v54 = *(int *)(a3 + 20);
  v55 = *(int *)(a3 + 24);
  v56 = (char *)a1 + v54;
  v57 = (char *)a2 + v54;
  v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
  *(_OWORD *)((char *)a1 + v55) = *(_OWORD *)((char *)a2 + v55);
  return a1;
}

_QWORD *sub_10031EEA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;

  v6 = sub_1000BA294(&qword_100BD7048);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 36);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for UnitConfiguration.Distance(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_100021A14((uint64_t)a1, &qword_100BD7048);
LABEL_6:
    v13 = sub_1000BA294(&qword_100BD71D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_bridgeObjectRelease();
  v52 = *(int *)(v6 + 36);
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = type metadata accessor for UnitConfiguration.Distance(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
LABEL_7:
  v14 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  v15 = v14[5];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = sub_1000BA294(&qword_100BD7020);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      *v16 = *v17;
      v21 = *(int *)(v18 + 36);
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = type metadata accessor for UnitConfiguration.Precipitation(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_100021A14((uint64_t)v16, &qword_100BD7020);
LABEL_12:
    v25 = sub_1000BA294(&qword_100BD71E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  *v16 = *v17;
  swift_bridgeObjectRelease();
  v56 = *(int *)(v18 + 36);
  v57 = (char *)v16 + v56;
  v58 = (char *)v17 + v56;
  v59 = type metadata accessor for UnitConfiguration.Precipitation(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
LABEL_13:
  v26 = v14[6];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = sub_1000BA294(&qword_100BD7008);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      *v27 = *v28;
      v32 = *(int *)(v29 + 36);
      v33 = (char *)v27 + v32;
      v34 = (char *)v28 + v32;
      v35 = type metadata accessor for UnitConfiguration.Pressure(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    sub_100021A14((uint64_t)v27, &qword_100BD7008);
LABEL_18:
    v36 = sub_1000BA294(&qword_100BD71E8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  *v27 = *v28;
  swift_bridgeObjectRelease();
  v60 = *(int *)(v29 + 36);
  v61 = (char *)v27 + v60;
  v62 = (char *)v28 + v60;
  v63 = type metadata accessor for UnitConfiguration.Pressure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
LABEL_19:
  v37 = v14[7];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (!v41)
  {
    if (v42)
    {
      sub_1000215BC((uint64_t)v38, type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
      goto LABEL_25;
    }
    v107 = a3;
    *v38 = *v39;
    swift_bridgeObjectRelease();
    v64 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v65 = (char *)v38 + v64;
    v66 = (char *)v39 + v64;
    v67 = type metadata accessor for UnitConfiguration.Temperature(0);
    v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v67);
    v69 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67);
    if (v68)
    {
      if (!v69)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
LABEL_49:
        v101 = *(int *)(v40 + 20);
        v102 = (uint64_t)v38 + v101;
        v103 = (uint64_t)v39 + v101;
        v104 = _s7Weather24LocationCompositionStateOwet_0(v102, 1, v67);
        v105 = _s7Weather24LocationCompositionStateOwet_0(v103, 1, v67);
        a3 = v107;
        if (v104)
        {
          if (!v105)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v102, v103, v67);
            _s7Weather24LocationCompositionStateOwst_0(v102, 0, 1, v67);
            goto LABEL_38;
          }
        }
        else
        {
          v106 = *(_QWORD *)(v67 - 8);
          if (!v105)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 40))(v102, v103, v67);
            goto LABEL_38;
          }
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v102, v67);
        }
        v49 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD7148) - 8) + 64);
        v50 = (void *)v102;
        v51 = (const void *)v103;
LABEL_26:
        memcpy(v50, v51, v49);
        goto LABEL_38;
      }
    }
    else
    {
      v99 = *(_QWORD *)(v67 - 8);
      if (!v69)
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 40))(v65, v66, v67);
        goto LABEL_49;
      }
      (*(void (**)(char *, uint64_t))(v99 + 8))(v65, v67);
    }
    v100 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    goto LABEL_49;
  }
  if (v42)
  {
LABEL_25:
    v49 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD71F0) - 8) + 64);
    v50 = v38;
    v51 = v39;
    goto LABEL_26;
  }
  v43 = a3;
  *v38 = *v39;
  v44 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v45 = (char *)v38 + v44;
  v46 = (char *)v39 + v44;
  v47 = type metadata accessor for UnitConfiguration.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
  {
    v48 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
  }
  v70 = *(int *)(v40 + 20);
  v71 = (char *)v38 + v70;
  v72 = (char *)v39 + v70;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v47))
  {
    v73 = sub_1000BA294(&qword_100BD7148);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v71, v72, v47);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v47);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  a3 = v43;
LABEL_38:
  v74 = v14[8];
  v75 = (_QWORD *)((char *)a1 + v74);
  v76 = (_QWORD *)((char *)a2 + v74);
  v77 = sub_1000BA294(&qword_100BD6FB8);
  v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v77);
  v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77);
  if (!v78)
  {
    if (!v79)
    {
      *v75 = *v76;
      swift_bridgeObjectRelease();
      v95 = *(int *)(v77 + 36);
      v96 = (char *)v75 + v95;
      v97 = (char *)v76 + v95;
      v98 = type metadata accessor for UnitConfiguration.WindSpeed(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 40))(v96, v97, v98);
      goto LABEL_44;
    }
    sub_100021A14((uint64_t)v75, &qword_100BD6FB8);
    goto LABEL_43;
  }
  if (v79)
  {
LABEL_43:
    v84 = sub_1000BA294(&qword_100BD71F8);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_44;
  }
  *v75 = *v76;
  v80 = *(int *)(v77 + 36);
  v81 = (char *)v75 + v80;
  v82 = (char *)v76 + v80;
  v83 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
LABEL_44:
  v85 = *(int *)(a3 + 20);
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + v85));
  v88 = *((_OWORD *)v87 + 1);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *((_OWORD *)v86 + 1) = v88;
  *((_QWORD *)v86 + 4) = *((_QWORD *)v87 + 4);
  v89 = *(int *)(a3 + 24);
  v90 = (_QWORD *)((char *)a1 + v89);
  v91 = (_QWORD *)((char *)a2 + v89);
  v93 = *v91;
  v92 = v91[1];
  *v90 = v93;
  v90[1] = v92;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10031F684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031F690);
}

void sub_10031F690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10011B270(a1, a2, a3, type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
}

uint64_t sub_10031F69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031F6A8);
}

void sub_10031F6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10011D78C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
}

uint64_t sub_10031F6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031F6C0(a1, a2, a3, type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
}

uint64_t sub_10031F6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[3];

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = "(";
    v7[2] = &unk_100994B08;
    swift_initStructMetadata(a1, 256, 3, v7, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_10031F73C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v11;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v11);
    v12 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = type metadata accessor for UnitConfiguration.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    v18 = a3[6];
    v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)a1 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
    v20 = a3[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v20, 1, v15))
    {
      v23 = sub_1000BA294(&qword_100BD7148);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v21, v22, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v15);
    }
    v24 = a3[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v15))
    {
      v27 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v25, v26, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v15);
    }
    v28 = sub_1000BA294(&qword_100BD74F8);
    *(_QWORD *)&v25[*(int *)(v28 + 28)] = *(_QWORD *)&v26[*(int *)(v28 + 28)];
  }
  swift_retain();
  return a1;
}

double sub_10031F964(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v6 = type metadata accessor for UnitConfiguration.Temperature(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + a2[6]));
  v7 = a1 + a2[7];
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v7, v6);
  v8 = a1 + a2[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v8, v6);
  v9 = *(_QWORD *)(v8 + *(int *)(sub_1000BA294(&qword_100BD74F8) + 28));
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

_QWORD *sub_10031FA6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7);
  *(_QWORD *)((char *)a1 + v7) = v10;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v10);
  v11 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = type metadata accessor for UnitConfiguration.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[6];
  v17 = *(_OWORD *)((char *)a2 + v16 + 24);
  *(_OWORD *)((char *)a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v18, 1, v14))
  {
    v21 = sub_1000BA294(&qword_100BD7148);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v19, v20, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v14);
  }
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v14))
  {
    v25 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v23, v24, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v14);
  }
  v26 = sub_1000BA294(&qword_100BD74F8);
  *(_QWORD *)&v23[*(int *)(v26 + 28)] = *(_QWORD *)&v24[*(int *)(v26 + 28)];
  swift_retain();
  return a1;
}

_QWORD *sub_10031FC6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7);
  *(_QWORD *)((char *)a1 + v7) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = type metadata accessor for UnitConfiguration.Temperature(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  sub_100094D04((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v19, 1, v14);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v14);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v20, v21, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v14 - 8);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v14);
LABEL_12:
    v25 = sub_1000BA294(&qword_100BD7148);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v20, v21, v14);
LABEL_13:
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v26, 1, v14);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v14);
  if (!v29)
  {
    v31 = *(_QWORD *)(v14 - 8);
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v27, v28, v14);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v14);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    v32 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v27, v28, v14);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v14);
LABEL_19:
  v33 = *(int *)(sub_1000BA294(&qword_100BD74F8) + 28);
  v34 = *(_QWORD *)&v27[v33];
  *(_QWORD *)&v27[v33] = *(_QWORD *)&v28[v33];
  swift_retain();
  swift_release(v34);
  return a1;
}

_OWORD *sub_10031FF60(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  v9 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for UnitConfiguration.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    v13 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v19 = (char *)a1 + v15;
  v20 = (char *)a2 + v15;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v15, 1, v12))
  {
    v21 = sub_1000BA294(&qword_100BD7148);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v19, v20, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v12);
  }
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v12))
  {
    v25 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v23, v24, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v12);
  }
  v26 = sub_1000BA294(&qword_100BD74F8);
  *(_QWORD *)&v23[*(int *)(v26 + 28)] = *(_QWORD *)&v24[*(int *)(v26 + 28)];
  return a1;
}

_QWORD *sub_100320144(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_bridgeObjectRelease();
  v10 = *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v11 = &v8[v10];
  v12 = &v9[v10];
  v13 = type metadata accessor for UnitConfiguration.Temperature(0);
  v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    v17 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_7:
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + v18));
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v22, 1, v13);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v13);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v23, v24, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v27 = *(_QWORD *)(v13 - 8);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v13);
LABEL_12:
    v28 = sub_1000BA294(&qword_100BD7148);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v23, v24, v13);
LABEL_13:
  v29 = a3[8];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v29, 1, v13);
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v13);
  if (!v32)
  {
    v34 = *(_QWORD *)(v13 - 8);
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v30, v31, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v13);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    v35 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v30, v31, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v13);
LABEL_19:
  v36 = *(int *)(sub_1000BA294(&qword_100BD74F8) + 28);
  v37 = *(_QWORD *)&v30[v36];
  *(_QWORD *)&v30[v36] = *(_QWORD *)&v31[v36];
  swift_release(v37);
  return a1;
}

uint64_t sub_10032042C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100320438);
}

void sub_100320438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 8));
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000BA294(&qword_100BD6FC0);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = a3[5];
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BD7148);
      if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
      {
        v7 = v9;
        v8 = a3[7];
      }
      else
      {
        v7 = sub_1000BA294(&qword_100BD74F8);
        v8 = a3[8];
      }
    }
    sub_1000B250C(a1 + v8, a2, v7);
  }
}

uint64_t sub_1003204E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003204F0);
}

void sub_1003204F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    sub_1000BA294(&qword_100BD6FC0);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_1000BA294(&qword_100BD7148);
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[7];
      }
      else
      {
        v8 = sub_1000BA294(&qword_100BD74F8);
        v9 = a4[8];
      }
    }
    sub_1000987C4(a1 + v9, a2, a2, v8);
  }
}

void sub_100320594(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v8[0] = &unk_100994B08;
  sub_100320678(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v8[2] = "(";
    sub_100158C7C(319, (unint64_t *)&qword_100BD7578, (uint64_t (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_100158C7C(319, (unint64_t *)&unk_100BD7580, type metadata accessor for UnitsConfigurationViewModel.Temperature, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_100320678(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_100BD7568)
  {
    v2 = type metadata accessor for UnitsConfigurationViewModel.Temperature(255);
    sub_10007A100((uint64_t)&unk_100BD7570);
    v5 = type metadata accessor for UnitsConfigurationViewModel.Configuration(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_100BD7568);
  }
}

uint64_t sub_1003206F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for MenuPickerStyle(255);
  v4 = *(_QWORD *)(v2 + 8);
  v7[0] = v1;
  v7[1] = v3;
  v7[2] = v4;
  v7[3] = &protocol witness table for MenuPickerStyle;
  v5 = type metadata accessor for PickerSection(255, (uint64_t)v7);
  return swift_getWitnessTable(&unk_100994E08, v5);
}

void sub_10032074C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;

  v0 = sub_100075EB0(&qword_100BD7368);
  v2 = sub_100075EB0(&qword_100BD7360);
  v3 = &type metadata for String;
  v4 = sub_10031B80C();
  v5 = sub_100114EF8();
  v1 = sub_10009885C((uint64_t)&v2, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>);
  v2 = v0;
  v3 = (_QWORD *)v1;
  sub_10009885C((uint64_t)&v2, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>);
  sub_10003BCFC();
}

unint64_t sub_1003207CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD75C0;
  if (!qword_100BD75C0)
  {
    v1 = sub_100075EB0(&qword_100BD75C8);
    sub_10027248C((uint64_t)&unk_100BD75D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD75C0);
  }
  return result;
}

uint64_t sub_100320848(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0EBC, 1);
}

uint64_t sub_100320858(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0E94, 1);
}

uint64_t sub_100320868(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0E6C, 1);
}

uint64_t sub_100320878(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_100AB0E2C, 1);
}

void sub_1003208AC(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000AE8E8(0, v3);
    v2();
    atomic_store(sub_100099A04((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_1003208F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BD7600;
  if (!qword_100BD7600)
  {
    v1 = sub_100075EB0(&qword_100BD7608);
    v2[0] = sub_100075EB0(&qword_100BD7610);
    v2[1] = sub_1003209A0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7600);
  }
  return result;
}

unint64_t sub_1003209A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7618;
  if (!qword_100BD7618)
  {
    v1 = sub_100075EB0(&qword_100BD7610);
    sub_10027248C((uint64_t)&unk_100BD7620);
    sub_10027248C((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7618);
  }
  return result;
}

unint64_t sub_100320A3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7630;
  if (!qword_100BD7630)
  {
    v1 = sub_100075EB0(&qword_100BD75F0);
    sub_10027248C((uint64_t)&unk_100BD7638);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7630);
  }
  return result;
}

uint64_t sub_100320AD8()
{
  return sub_100141088((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100314B94);
}

uint64_t sub_100320AE4()
{
  return sub_100141088((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100314720);
}

void sub_100320AF0(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000B4444(0, v3);
    v2();
    sub_10027248C((uint64_t)&qword_100BC4B98);
    atomic_store(sub_10007A030((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_100320B58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7660;
  if (!qword_100BD7660)
  {
    v1 = sub_100075EB0(&qword_100BD7668);
    sub_100320BDC();
    sub_10027248C((uint64_t)&qword_100BC4E20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7660);
  }
  return result;
}

unint64_t sub_100320BDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7670;
  if (!qword_100BD7670)
  {
    v1 = sub_100075EB0(&qword_100BD7678);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7670);
  }
  return result;
}

uint64_t sub_100320C60()
{
  return sub_100141088((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031576C);
}

uint64_t sub_100320C6C()
{
  return sub_100141088((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100315DFC);
}

uint64_t sub_100320C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v0 + 40);
  v21 = *(_QWORD *)(v0 + 16);
  v1 = v21;
  v22 = *(_OWORD *)(v0 + 24);
  v20 = v22;
  v23 = v2;
  v3 = (int *)type metadata accessor for PickerSection(0, (uint64_t)&v21);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  v8 = sub_100110274();
  sub_100099254(v0 + v6 + *(int *)(v8 + 32), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
  sub_1000BA548(v0 + v6 + v3[13]);
  sub_100109934(v0 + v6 + v3[14], v9, v10, v11, v12, v13, v14, v15, v20);
  swift_bridgeObjectRelease();
  sub_10009DAA8(v0 + v6 + v3[17]);
  sub_10009DAA8(v0 + v6 + v3[18]);
  v16 = (_QWORD *)(v0 + v6 + v3[19]);
  v17 = sub_1000BA294(&qword_100BC2990);
  if (sub_10009DA58(v17) == 1)
  {
    v18 = sub_10003BC60();
    sub_10003BC44(v18);
  }
  else
  {
    swift_release(*v16);
  }
  return swift_deallocObject(v0, v6 + v7, v5 | 7);
}

uint64_t sub_100320DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PickerSection(0, (uint64_t)v11) - 8) + 80);
  return sub_100315A0C(a1, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

void sub_100320E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = (int *)sub_1000BF154(*(_QWORD *)(v0 + 56), v20, v22, v2, v23, v24);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  sub_10011DB50();
  v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v0 + ((v4 + 64) & ~v4), v2);
  swift_release(*(_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  v9 = sub_100110274();
  v8(v0 + v5 + *(int *)(v9 + 32), v2);
  sub_1000BA548(v0 + v5 + v6[13]);
  sub_100109934(v0 + v5 + v6[14], v10, v11, v12, v13, v14, v15, v16, v21);
  swift_bridgeObjectRelease();
  sub_10009DAA8(v0 + v5 + v6[17]);
  sub_10009DAA8(v0 + v5 + v6[18]);
  v17 = (_QWORD *)(v0 + v5 + v6[19]);
  v18 = sub_1000BA294(&qword_100BC2990);
  if (sub_10009DA58(v18) == 1)
  {
    v19 = sub_10003BC60();
    sub_10003BC44(v19);
  }
  else
  {
    swift_release(*v17);
  }
  swift_deallocObject(v0, v5 + v1, v4 | v7 | 7);
  sub_10009E26C();
}

uint64_t sub_100320F54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[4];

  v3 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v7 = (*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9[0] = v3;
  v9[1] = v4;
  v9[2] = v5;
  v9[3] = v6;
  type metadata accessor for PickerSection(0, (uint64_t)v9);
  return sub_1003164CC(v1[2], (uint64_t)v1 + v7, v3, v5, a1);
}

void sub_100320FF4()
{
  char *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v1 = *((_QWORD *)v0 + 4);
  v2 = (int *)sub_1000BF154(*((_QWORD *)v0 + 7), v23, v25, v1, v26, v27);
  v3 = *((_QWORD *)v2 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*(_QWORD *)&v0[v4]);
  swift_release(*(_QWORD *)&v0[v4 + 8]);
  v8 = type metadata accessor for Binding(0, v1);
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(&v0[v4 + *(int *)(v8 + 32)], v1);
  sub_1000BA548((uint64_t)&v0[v4 + v2[13]]);
  sub_100109934((uint64_t)&v0[v4 + v2[14]], v10, v11, v12, v13, v14, v15, v16, v24);
  swift_bridgeObjectRelease();
  sub_10009DAA8((uint64_t)&v0[v4 + v2[17]]);
  sub_10009DAA8((uint64_t)&v0[v4 + v2[18]]);
  v17 = &v0[v4 + v2[19]];
  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v17) == 1)
  {
    v18 = sub_10003BC60();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    v19 = swift_release(*(_QWORD *)v17);
  }
  ((void (*)(char *, uint64_t, __n128))v9)(&v0[(v4 + v5 + v7) & ~v7], v1, v19);
  v20 = sub_1000BD3C8();
  swift_deallocObject(v20, v21, v22);
  sub_10009E26C();
}

_BYTE *sub_100321140(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v11[0] = v1[4];
  v3 = v11[0];
  v11[1] = v4;
  v11[2] = v5;
  v11[3] = v6;
  v7 = *(_QWORD *)(type metadata accessor for PickerSection(0, (uint64_t)v11) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_100316588(a1, v1[2], v1[3], (uint64_t)v1 + v8, (uint64_t)v1 + ((v8 + *(_QWORD *)(v7 + 64) + v9) & ~v9), v3);
}

uint64_t sub_1003211E4()
{
  return sub_100141088((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100315094);
}

void sub_1003211F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1000ED430(a1, a2, a3);
  sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_10004A298();
}

void sub_100321224(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1000ED430(a1, a2, a3);
  sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_10004A298();
}

unint64_t sub_100321258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7688;
  if (!qword_100BD7688)
  {
    v1 = sub_100075EB0(&qword_100BD75E0);
    sub_100320AF0((uint64_t)&unk_100BD7658);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7688);
  }
  return result;
}

uint64_t sub_1003212DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10031678C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003212E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD76A0;
  if (!qword_100BD76A0)
  {
    v1 = sub_100075EB0(&qword_100BD7690);
    sub_10027248C((uint64_t)&qword_100BC4FC0);
    sub_10027248C((uint64_t)&qword_100BC6718);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD76A0);
  }
  return result;
}

void sub_100321380()
{
  sub_1003208AC((uint64_t)&unk_100BD76B0);
}

unint64_t sub_1003213A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD76C0;
  if (!qword_100BD76C0)
  {
    v1 = sub_100075EB0(&qword_100BD76C8);
    sub_10027248C((uint64_t)&qword_100BD76D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD76C0);
  }
  return result;
}

uint64_t sub_100321428()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 112, 7);
}

void sub_100321464()
{
  uint64_t v0;

  sub_1003168E8((_QWORD *)(v0 + 16));
}

void sub_10032146C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100316910(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10032147C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10032148C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100311788(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100321498(uint64_t a1, uint64_t a2)
{
  return sub_1003216E4(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1003113A8);
}

unint64_t sub_1003214A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD76F8;
  if (!qword_100BD76F8)
  {
    v1 = sub_100075EB0(&qword_100BD76E8);
    sub_100321508();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD76F8);
  }
  return result;
}

unint64_t sub_100321508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7700;
  if (!qword_100BD7700)
  {
    v1 = sub_100075EB0(&qword_100BD7708);
    sub_100321580();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7700);
  }
  return result;
}

unint64_t sub_100321580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7710;
  if (!qword_100BD7710)
  {
    v1 = sub_100075EB0(&qword_100BD7718);
    sub_10027248C((uint64_t)&unk_100BD7720);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7710);
  }
  return result;
}

uint64_t sub_100321600()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for TemperatureView(0);
  sub_1000BDCA4();
  sub_10009C0D4();
  v2 = v1 + v0[5];
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v4 = sub_10011DC84();
  if (!sub_1000CF764(v3))
    sub_1000C1DE4();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v1 + v0[6]));
  if (!sub_1000CF764(v1 + v0[7]))
    sub_1000C1DE4();
  v5 = v1 + v0[8];
  if (!sub_1000CF764(v5))
    sub_100099254(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8));
  v6 = sub_1000BA294(&qword_100BD74F8);
  swift_release(*(_QWORD *)(v5 + *(int *)(v6 + 28)));
  v7 = sub_1000BD3C8();
  return sub_1000B4380(v7, v8, v9);
}

uint64_t sub_1003216D8(uint64_t a1, uint64_t a2)
{
  return sub_1003216E4(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_100311488);
}

uint64_t sub_1003216E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;

  type metadata accessor for TemperatureView(0);
  v4 = sub_10009BCCC();
  return a3(v4, a2);
}

uint64_t sub_10032172C()
{
  uint64_t v0;

  return sub_100310CD8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100321738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  type metadata accessor for TemperatureView(0);
  sub_1000987F4();
  return sub_100310E6C(a1, v4, a2);
}

uint64_t sub_100321774()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1000986AC();
  v1 = (int *)type metadata accessor for TemperatureView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(type metadata accessor for UnitsConfigurationViewModel.Temperature(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v5 + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v0 + v4;
  sub_10009C0D4();
  v11 = v0 + v4 + v1[5];
  swift_bridgeObjectRelease();
  v12 = v11 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  sub_10011DC84();
  if (!sub_100086130(v12))
    sub_1000FDB24();
  v13 = v4 + v8;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v10 + v1[6]));
  if (!sub_100086130(v10 + v1[7]))
    sub_1000FDB24();
  v14 = v13 & ~v7;
  v15 = v10 + v1[8];
  if (!sub_100086130(v15))
    sub_10009BF00();
  v16 = sub_1000BA294(&qword_100BD74F8);
  swift_release(*(_QWORD *)(v15 + *(int *)(v16 + 28)));
  if (!sub_100086130(v0 + v14))
    sub_10009BF00();
  return sub_1000BBBC0(v0, v14 + v9, v3 | v7 | 7);
}

void sub_10032188C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for TemperatureView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UnitsConfigurationViewModel.Temperature(0) - 8)
                          + 80);
  sub_100311000(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

double sub_1003218EC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1003110E0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1).n128_u64[0];
  return result;
}

double sub_1003218F4(uint64_t a1, uint64_t a2)
{
  double result;

  if (a1)
  {
    swift_retain(a1);
    *(_QWORD *)&result = swift_retain(a2).n128_u64[0];
  }
  return result;
}

uint64_t sub_100321920(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_release(result);
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_10032194C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t TupleTypeMetadata3;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *a1;
  v2 = a1[2];
  sub_100075EB0(&qword_100BD7650);
  v3 = sub_100075EB0(&qword_100BD75E8);
  v34 = type metadata accessor for Array(255, v1);
  v35 = v1;
  v36 = sub_100075EB0(&qword_100BD75F0);
  v37 = sub_100321DD0((uint64_t)&protocol conformance descriptor for [A]);
  v38 = v2;
  v4 = type metadata accessor for ForEach(255, &v34);
  sub_1003208AC((uint64_t)&unk_100BD75F8);
  v6 = v5;
  sub_100320A3C();
  v7 = sub_100321DD0((uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  v34 = v3;
  v35 = v4;
  v36 = v6;
  v37 = v7;
  type metadata accessor for Menu(255, &v34);
  v8 = sub_10009DEE4();
  v9 = sub_10007A030((uint64_t)&protocol conformance descriptor for Menu<A, B>);
  sub_10007A100((uint64_t)&unk_100BD7648);
  v34 = v3;
  v35 = v8;
  v36 = v9;
  v37 = v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v34, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 0);
  v12 = sub_10011E6B8();
  v14 = sub_10004A36C(v12, v13, OpaqueTypeMetadata2);
  v15 = sub_1000AE86C(v14);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v16 = sub_10011E6B8();
  v19 = type metadata accessor for VStack(v16, v17, v18);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for _FlexFrameLayout);
  v21 = sub_100075EB0(&qword_100BD75E0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v21, &type metadata for Spacer, OpaqueTypeMetadata2, 0, 0);
  v23 = sub_1000AE86C(TupleTypeMetadata3);
  v24 = sub_1000ED26C(v23);
  v25 = type metadata accessor for HStack(255, OpaqueTypeMetadata2, v24);
  v26 = sub_10004A36C(255, v25, v19);
  v27 = sub_1000AE86C(v26);
  sub_1000ED26C(v27);
  v28 = type metadata accessor for ViewThatFits(255, OpaqueTypeMetadata2);
  v29 = type metadata accessor for ModifiedContent(255, v28, &type metadata for _FlexFrameLayout);
  v30 = sub_10011E6B8();
  v32 = type metadata accessor for _ConditionalContent(v30, v31, v29);
  sub_10007A030((uint64_t)&protocol conformance descriptor for VStack<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  sub_100321DD0((uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
  sub_100099A04((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v32);
}

unint64_t sub_100321BF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7760;
  if (!qword_100BD7760)
  {
    v1 = sub_100075EB0(&qword_100BD7768);
    sub_1003212E4();
    sub_100320AF0((uint64_t)&unk_100BD76A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7760);
  }
  return result;
}

unint64_t sub_100321C88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD7770;
  if (!qword_100BD7770)
  {
    v1 = sub_100075EB0(&qword_100BD7778);
    sub_10007A100((uint64_t)&unk_100BD76E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD7770);
  }
  return result;
}

uint64_t sub_100321D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v0 = sub_100075EB0(&qword_100BD76F0);
  v1 = type metadata accessor for UnitsConfigurationViewModel.Temperature(255);
  v2 = sub_100075EB0(&qword_100BD76E8);
  v3 = sub_1003214A4();
  sub_10007A100((uint64_t)&unk_100BD7730);
  v5 = v4;
  v8 = v2;
  v9 = v1;
  v10 = v3;
  v11 = v4;
  v6 = sub_10009885C((uint64_t)&v8, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  v8 = v0;
  v9 = v1;
  v10 = v6;
  v11 = v5;
  return sub_10009885C((uint64_t)&v8, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
}

uint64_t sub_100321DD0(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(a1, v1);
}

double sub_100321DEC()
{
  _QWORD *v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*v0).n128_u64[0];
  return result;
}

uint64_t *sub_100321DF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100321E90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100321F00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100321F74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100321FE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100322054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100322060);
}

uint64_t sub_100322060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100098A00();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_100322088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100322094);
}

uint64_t sub_100322094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_100098A00();
  v0 = sub_1000B4784();
  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t type metadata accessor for LollipopMarkModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD77D8, (uint64_t)&nominal type descriptor for LollipopMarkModel);
}

uint64_t sub_1003220C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

BOOL sub_100322140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  if ((static Date.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v2 = type metadata accessor for LollipopMarkModel(0);
  sub_1000D11B0(*(int *)(v2 + 20));
  if (!v4)
    return 0;
  sub_1000D11B0(*(int *)(v3 + 24));
  if (!v4)
    return 0;
  sub_1000D11B0(*(int *)(v5 + 28));
  return v4 != 0;
}

uint64_t *sub_1003221A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(uint64_t *)((char *)a1 + v8[5]) = *(uint64_t *)((char *)a2 + v8[5]);
    *(uint64_t *)((char *)a1 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v11[16] = v12[16];
    v14 = *((_QWORD *)v12 + 3);
    *((_QWORD *)v11 + 3) = v14;
    v15 = (char *)a1 + v10;
    v16 = (char *)a2 + v10;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v15[16] = v16[16];
    v18 = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 3) = v18;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
  }
  return a1;
}

double sub_1003222A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));
  v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v6 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_100322318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v12;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  *(_QWORD *)(v10 + 24) = v13;
  v14 = a1 + v9;
  v15 = a2 + v9;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 24) = v17;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t sub_1003223F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *(_QWORD *)(v9 + 8) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *(_QWORD *)(v14 + 8) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 24) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100322510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_OWORD *)(a1 + v8);
  v11 = (_OWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_OWORD *)(a1 + v9);
  v14 = (_OWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_1003225B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10032269C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003226A8);
}

uint64_t sub_1003226A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for LollipopMarkModel(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_100322724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100322730);
}

uint64_t sub_100322730(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = type metadata accessor for LollipopMarkModel(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = sub_1000B4784();
    return _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for LollipopMark(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD7870, (uint64_t)&nominal type descriptor for LollipopMark);
}

uint64_t sub_1003227B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for LollipopMarkModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = " ";
    v4[2] = " ";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100322824(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB0F34, 1);
}

uint64_t sub_100322834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(_QWORD, _QWORD);
  uint64_t (*v84)(_QWORD, _QWORD);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(_QWORD, _QWORD);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_QWORD, _QWORD);
  uint64_t v96;
  char *v97;
  uint64_t v98;
  void (*v99)(_QWORD, _QWORD);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t);
  void (*v130)(char *, uint64_t);
  void (*v131)(uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t (*v140)(_QWORD, _QWORD);
  void (*v141)(_QWORD, _QWORD);
  void (*v142)(_QWORD, _QWORD);
  uint64_t v143;
  uint64_t v144;
  void (*v145)(_QWORD, _QWORD);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD v172[2];
  char v173[8];
  char v174[8];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v149 = a1;
  v2 = sub_1000BA294(&qword_100BD78B0);
  sub_1000B43A4(v2, (uint64_t)&v175);
  sub_1000BBFEC(v3);
  __chkstk_darwin(v4);
  sub_1000986FC();
  v150 = v5;
  __chkstk_darwin(v6);
  v8 = sub_1000987B4((uint64_t)&v133 - v7);
  v9 = type metadata accessor for BlendMode(v8);
  sub_1000B43A4(v9, (uint64_t)v174);
  sub_1000BBFEC(v10);
  __chkstk_darwin(v11);
  sub_100088FDC();
  v13 = sub_1000987B4(v12);
  v164 = type metadata accessor for BasicChartSymbolShape(v13);
  sub_1000BBFEC(*(_QWORD *)(v164 - 8));
  __chkstk_darwin(v14);
  sub_100088FDC();
  v158 = v15;
  sub_1000BA294(&qword_100BD78B8);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v156 = v17;
  v161 = type metadata accessor for PointMark(0);
  sub_1000BBFEC(*(_QWORD *)(v161 - 8));
  __chkstk_darwin(v18);
  sub_100088FDC();
  v155 = v19;
  v159 = sub_1000BA294(&qword_100BD78C0);
  sub_1000BBFEC(*(_QWORD *)(v159 - 8));
  __chkstk_darwin(v20);
  sub_100088FDC();
  v157 = v21;
  v160 = sub_1000BA294(&qword_100BD78C8);
  sub_1000BBFEC(*(_QWORD *)(v160 - 8));
  __chkstk_darwin(v22);
  sub_100088FDC();
  v146 = v23;
  v166 = sub_1000BA294(&qword_100BD78D0);
  v163 = *(_QWORD *)(v166 - 8);
  sub_10009D98C();
  __chkstk_darwin(v24);
  sub_1000986FC();
  v165 = v25;
  __chkstk_darwin(v26);
  v162 = (char *)&v133 - v27;
  v28 = type metadata accessor for LollipopMarkModel(0);
  sub_1000B43A4(v28, (uint64_t)&v170);
  sub_10009D98C();
  __chkstk_darwin(v29);
  sub_100098728();
  v32 = v31 - v30;
  sub_1000BA294(&qword_100BD78D8);
  sub_10009D98C();
  __chkstk_darwin(v33);
  sub_100098728();
  v36 = v35 - v34;
  v37 = type metadata accessor for RectangleMark(0);
  sub_1000BBFEC(*(_QWORD *)(v37 - 8));
  __chkstk_darwin(v38);
  sub_100098728();
  v41 = v40 - v39;
  v42 = sub_1000BA294(&qword_100BD78E0);
  sub_1000B43A4(v42, (uint64_t)&v177);
  v169 = v43;
  sub_10009D98C();
  __chkstk_darwin(v44);
  sub_1000986FC();
  v168 = v45;
  __chkstk_darwin(v46);
  v48 = sub_1000987B4((uint64_t)&v133 - v47);
  v137 = type metadata accessor for LollipopMark(v48);
  v49 = v1;
  v50 = v1 + *(int *)(v137 + 20);
  v51 = *(_QWORD *)v50;
  v52 = *(_QWORD *)(v50 + 8);
  v53 = *(unsigned __int8 *)(v50 + 16);
  v54 = *(_QWORD *)(v50 + 24);
  v167 = v49;
  sub_100323218(v49, v32);
  v55 = type metadata accessor for Date(0);
  v56 = v54;
  v57 = v55;
  static PlottableValue.value(_:_:)(v51, v52, v53, v56, v32, v55, &protocol witness table for Date);
  v58 = v32;
  v152 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8);
  v152(v32, v57);
  if (qword_100BC20C0 != -1)
    swift_once(&qword_100BC20C0, sub_1004049E8);
  swift_beginAccess(&qword_100CAE968, v173, 1, 0);
  v59 = sub_1004043F8();
  v60 = RectangleMark.init<A>(x:yStart:yEnd:width:)(v36, 0, 0, *(_QWORD *)&v59, 0, 0x3FF0000000000000, 0, v57, &protocol witness table for Date);
  v61 = v57;
  v62 = static Color.white.getter(v60);
  v170 = v62;
  v63 = v168;
  ChartContent.foregroundStyle<A>(_:)(&v170, v37, &type metadata for Color, &protocol witness table for RectangleMark, &protocol witness table for Color);
  swift_release(v62);
  sub_1000988C4();
  v64(v41, v37);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 32))(v153, v63, v154);
  v65 = *(_QWORD *)v50;
  v66 = *(_QWORD *)(v50 + 8);
  v67 = *(unsigned __int8 *)(v50 + 16);
  v68 = *(_QWORD *)(v50 + 24);
  v69 = v167;
  v70 = v58;
  v134 = v58;
  sub_100323218(v167, v58);
  v133 = v36;
  static PlottableValue.value(_:_:)(v65, v66, v67, v68, v58, v61, &protocol witness table for Date);
  v136 = v61;
  sub_100095288((uint64_t)&v176);
  v71 = sub_1000C5D0C();
  v139 = *(int *)(v72 + 20);
  v170 = *(_QWORD *)(v69 + v139);
  v73 = v156;
  static PlottableValue.value(_:_:)(v71, v74, v75, v76, &v170, &type metadata for Double, &protocol witness table for Double);
  v77 = v155;
  PointMark.init<A, B>(x:y:)(v36, v73, v61, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v78);
  sub_1000C5398();
  v79 = sub_10032325C();
  v80 = v157;
  v81 = v161;
  v82 = v164;
  v138 = v79;
  ChartContent.symbol<A>(_:)(v70, v161, v164, &protocol witness table for PointMark, v79);
  sub_1000988C4();
  v142 = v83;
  v83(v70, v82);
  sub_1000988C4();
  v140 = v84;
  v85 = v84(v77, v81);
  v170 = v81;
  v171 = v82;
  v172[0] = &protocol witness table for PointMark;
  v172[1] = v79;
  v86 = sub_1000E6FA0(v85, (uint64_t)&opaque type descriptor for <<opaque return type of ChartContent.symbol<A>(_:)>>);
  v87 = v146;
  v88 = v159;
  v89 = v86;
  v135 = v86;
  ChartContent.symbolSize(_:)(v159, v86, 400.0);
  sub_1000988C4();
  v141 = v90;
  v91 = v88;
  v90(v80, v88);
  v92 = v144;
  v93 = v134;
  v94 = v143;
  v95 = v145;
  v96 = (*(uint64_t (**)(uint64_t, _QWORD, void (*)(_QWORD, _QWORD)))(v144 + 104))(v143, enum case for BlendMode.destinationOut(_:), v145);
  v170 = v91;
  v171 = v89;
  v137 = sub_1000E6FA0(v96, (uint64_t)&opaque type descriptor for <<opaque return type of ChartContent.symbolSize(_:)>>);
  v97 = v165;
  v98 = v160;
  ChartContent.blendMode(_:)(v94, v160, v137);
  (*(void (**)(uint64_t, _QWORD))(v92 + 8))(v94, v95);
  sub_1000988C4();
  v145 = v99;
  v99(v87, v98);
  (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v162, v97, v166);
  v100 = *(_QWORD *)v50;
  v101 = *(_QWORD *)(v50 + 8);
  v102 = *(unsigned __int8 *)(v50 + 16);
  v103 = *(_QWORD *)(v50 + 24);
  v104 = v167;
  sub_100323218(v167, v93);
  v105 = v133;
  v106 = v100;
  v107 = v136;
  static PlottableValue.value(_:_:)(v106, v101, v102, v103, v93, v136, &protocol witness table for Date);
  sub_100095288((uint64_t)&v176);
  v108 = sub_1000C5D0C();
  v170 = *(_QWORD *)(v104 + v109);
  v110 = v156;
  static PlottableValue.value(_:_:)(v108, v111, v112, v113, &v170, &type metadata for Double, &protocol witness table for Double);
  PointMark.init<A, B>(x:y:)(v105, v110, v107, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v114);
  sub_1000C5398();
  ChartContent.symbol<A>(_:)(v105, v161, v164, &protocol witness table for PointMark, v138);
  sub_100095288((uint64_t)v173);
  sub_100095288((uint64_t)&v171);
  ChartContent.symbolSize(_:)(v159, v135, 256.0);
  v115 = sub_100095288((uint64_t)v172);
  v116 = static Color.white.getter(v115);
  v170 = v116;
  v117 = v150;
  ChartContent.foregroundStyle<A>(_:)(&v170, v160, &type metadata for Color, v137, &protocol witness table for Color);
  swift_release(v116);
  sub_100095288((uint64_t)v174);
  v118 = v148;
  v119 = v147;
  v120 = v151;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v147, v117, v151);
  v121 = v168;
  v122 = v153;
  v123 = v154;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 16))(v168, v153, v154);
  v170 = v121;
  v124 = v163;
  v125 = (uint64_t)v97;
  v126 = v97;
  v127 = v162;
  v128 = v166;
  (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v126, v162, v166);
  v171 = v125;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v117, v119, v120);
  v172[0] = v117;
  sub_10073B4F4();
  v129 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
  v129(v119, v120);
  v130 = *(void (**)(char *, uint64_t))(v124 + 8);
  v130(v127, v128);
  v131 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
  v131(v122, v123);
  v129(v117, v120);
  v130(v165, v128);
  return ((uint64_t (*)(uint64_t, uint64_t))v131)(v168, v123);
}

uint64_t sub_100323200()
{
  return static ChartContent._chartContentCount(inputs:)();
}

uint64_t sub_100323218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LollipopMarkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10032325C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD78E8;
  if (!qword_100BD78E8)
  {
    v1 = type metadata accessor for BasicChartSymbolShape(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BasicChartSymbolShape, v1);
    atomic_store(result, (unint64_t *)&qword_100BD78E8);
  }
  return result;
}

unint64_t sub_1003232A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;

  result = qword_100BD78F0;
  if (!qword_100BD78F0)
  {
    v1 = sub_100075EB0(&qword_100BD78F8);
    v9 = type metadata accessor for RectangleMark(255);
    v10 = &type metadata for Color;
    v11 = &protocol witness table for RectangleMark;
    v12 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v2 = sub_100075EB0(&qword_100BD78C8);
    v3 = sub_100075EB0(&qword_100BD78C0);
    v4 = type metadata accessor for PointMark(255);
    v5 = type metadata accessor for BasicChartSymbolShape(255);
    v6 = sub_10032325C();
    v9 = v4;
    v10 = (void *)v5;
    v11 = &protocol witness table for PointMark;
    v12 = (void *)v6;
    v7 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.symbol<A>(_:)>>, 1);
    v9 = v3;
    v10 = (void *)v7;
    v8 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.symbolSize(_:)>>, 1);
    v9 = v2;
    v10 = (void *)v8;
    v14 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.blendMode(_:)>>, 1);
    v9 = v2;
    v10 = &type metadata for Color;
    v11 = (void *)v8;
    v12 = &protocol witness table for Color;
    v15 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD78F0);
  }
  return result;
}

uint64_t LocalSearchCompleterManager.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate;
  sub_10009922C(v0 + OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate, (uint64_t)v3, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t LocalSearchCompleterManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate;
  sub_10009922C(v5, (uint64_t)v7, 1);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*LocalSearchCompleterManager.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  sub_10009922C(v1 + v4, (uint64_t)v3, 33);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100323530;
}

id sub_100323534()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager____lazy_storage___searchCompleter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager____lazy_storage___searchCompleter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager____lazy_storage___searchCompleter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)MKLocalSearchCompleter), "init");
    objc_msgSend(v4, "w_applyLocalitiesAndLandmarksFilterType");
    objc_msgSend(v4, "setDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

Swift::Void __swiftcall LocalSearchCompleterManager.searchLocations(for:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v9;
  id v10;
  NSString v11;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = sub_100323534();
  v4 = objc_msgSend(v3, "queryFragment");

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  if (v5 == countAndFlagsBits && v7 == object)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, countAndFlagsBits);
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      v10 = sub_100323534();
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "setQueryFragment:", v11);

      return;
    }
  }
  _s7Weather27LocalSearchCompleterManagerC25completerDidUpdateResultsyySo07MKLocalcD0CF_0();
}

void _s7Weather27LocalSearchCompleterManagerC25completerDidUpdateResultsyySo07MKLocalcD0CF_0()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[5];
  char v27[24];

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = type metadata accessor for SearchLocation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100323534();
  v8 = objc_msgSend(v7, "results");

  v9 = sub_100324034();
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v16 = v10;
    else
      v16 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v13 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v11)
    goto LABEL_16;
LABEL_3:
  v26[0] = _swiftEmptyArrayStorage;
  sub_100605F6C();
  if (v11 < 0)
  {
    __break(1u);
    return;
  }
  v24 = ObjectType;
  v25 = v1;
  v12 = 0;
  v13 = (_QWORD *)v26[0];
  do
  {
    if ((v10 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
    else
      v14 = *(id *)(v10 + 8 * v12 + 32);
    SearchLocation.init(searchCompletion:)(v14, v6);
    v26[0] = v13;
    v15 = v13[2];
    if (v15 >= v13[3] >> 1)
    {
      sub_100605F6C();
      v13 = (_QWORD *)v26[0];
    }
    ++v12;
    v13[2] = v15 + 1;
    sub_100324070((uint64_t)v6, (uint64_t)v13+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15);
  }
  while (v11 != v12);
  swift_bridgeObjectRelease();
  ObjectType = v24;
  v1 = v25;
LABEL_17:
  v17 = &v1[OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate], v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v17);
  if (Strong)
  {
    v19 = Strong;
    v20 = *((_QWORD *)v17 + 1);
    v21 = swift_getObjectType(Strong);
    v26[3] = ObjectType;
    v26[4] = &protocol witness table for LocalSearchCompleterManager;
    v26[0] = v1;
    v22 = *(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v20 + 8);
    v23 = v1;
    v22(v26, v13, v21, v20);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v19);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

id LocalSearchCompleterManager.init()()
{
  char *v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  v1 = (objc_class *)sub_10009D408();
  v2 = &v0[OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager____lazy_storage___searchCompleter] = 0;
  v4.receiver = v0;
  v4.super_class = v1;
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t sub_1003239F0()
{
  return LocalSearchCompleterManager.delegate.getter();
}

uint64_t sub_100323A10(uint64_t a1, uint64_t a2)
{
  return LocalSearchCompleterManager.delegate.setter(a1, a2);
}

uint64_t (*sub_100323A30(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess(v4 + v5, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_100323530;
}

void sub_100323AA8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

void sub_100323B1C(uint64_t a1, uint64_t a2)
{
  LocalSearchCompleterManager.searchLocations(for:)(*(Swift::String *)&a1);
}

uint64_t LocalSearchCompleterManager.completer(_:didFailWithError:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];
  uint64_t v31;
  _BYTE v32[16];

  v4 = sub_10009D408();
  if (qword_100BC2428 != -1)
    swift_once(&qword_100BC2428, sub_1006F37B8);
  v5 = type metadata accessor for Logger(0);
  sub_1000AECD4(v5, (uint64_t)qword_100CAF070);
  v6 = v2;
  sub_1000B47AC();
  v7 = (char *)v6;
  v8 = sub_1000B47AC();
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.error.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v29 = v4;
    v12 = swift_slowAlloc(32, -1);
    v28 = swift_slowAlloc(64, -1);
    v30[0] = v28;
    *(_DWORD *)v12 = 141558531;
    v31 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
    *(_WORD *)(v12 + 12) = 2085;
    v13 = sub_100323534();
    v14 = objc_msgSend(v13, "queryFragment");

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v31 = sub_1000CE1C8(v15, v17, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2082;
    v31 = a2;
    sub_1000B47AC();
    sub_1000BA294(&qword_100BD7910);
    v18 = String.init<A>(describing:)(&v31);
    v31 = sub_1000CE1C8(v18, v19, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
    swift_bridgeObjectRelease();
    sub_1000B47A4();
    sub_1000B47A4();
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "Received an error while requesting a local search completion. searchQuery=%{sensitive,mask.hash}s, error=%{public}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy(v28, 2);
    sub_1000986F0(v28);
    v20 = v12;
    v4 = v29;
    sub_1000986F0(v20);
  }
  else
  {

    sub_1000B47A4();
    sub_1000B47A4();
  }

  v21 = &v7[OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate];
  sub_10009922C((uint64_t)&v7[OBJC_IVAR____TtC7Weather27LocalSearchCompleterManager_delegate], (uint64_t)&v31, 0);
  result = swift_unknownObjectWeakLoadStrong(v21);
  if (result)
  {
    v23 = result;
    v24 = *((_QWORD *)v21 + 1);
    ObjectType = swift_getObjectType(result);
    v30[3] = v4;
    v30[4] = (uint64_t)&protocol witness table for LocalSearchCompleterManager;
    v30[0] = (uint64_t)v7;
    v26 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v24 + 16);
    v27 = v7;
    v26(v30, a2, ObjectType, v24);
    swift_unknownObjectRelease(v23);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
  }
  return result;
}

void *sub_100323ED0(char *__src, size_t __n, char *__dst)
{
  void *result;
  const char *v5;
  uint64_t v6;

  if ((__n & 0x8000000000000000) != 0)
  {
    v5 = "UnsafeMutableRawPointer.initializeMemory with negative count";
    v6 = 60;
  }
  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst)
      return memcpy(__dst, __src, __n);
    v5 = "UnsafeMutableRawPointer.initializeMemory overlapping range";
    v6 = 58;
  }
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, v5, v6, 2, "Swift/UnsafeRawPointer.swift", 28);
  __break(1u);
  return result;
}

char *sub_100323F94(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25);
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t type metadata accessor for LocalSearchCompleterManager()
{
  return objc_opt_self(_TtC7Weather27LocalSearchCompleterManager);
}

unint64_t sub_100324034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD79A8;
  if (!qword_100BD79A8)
  {
    v1 = objc_opt_self(MKLocalSearchCompletion);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100BD79A8);
  }
  return result;
}

uint64_t sub_100324070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1003240B4()
{
  _QWORD *v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 17);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 22);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 27);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 42);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 47);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 52);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 57);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 62);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 67);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 77);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 82);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 87);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 92);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 97);
  return v0;
}

uint64_t sub_100324168()
{
  uint64_t v0;

  sub_1003240B4();
  return swift_deallocClassInstance(v0, 816, 7);
}

ValueMetadata *type metadata accessor for AirQualityDetailTracker()
{
  return &type metadata for AirQualityDetailTracker;
}

uint64_t sub_100324198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  Swift::Int v67;
  unint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  unsigned __int8 *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t EnumCaseMultiPayload;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned __int8 *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t result;
  uint64_t v127;
  uint64_t v128[4];
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unsigned __int8 *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;

  v142 = a2;
  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v141 = v4;
  v5 = sub_10009876C();
  type metadata accessor for WeatherMapTrackingState(v5);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v140 = v7;
  v8 = sub_10009876C();
  v137 = type metadata accessor for WeatherMapOverlayKind(v8);
  v136 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  sub_100088FDC();
  v139 = v9;
  v10 = sub_10009876C();
  v11 = type metadata accessor for InteractiveMapInput(v10);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v131 = v13;
  v14 = sub_10009876C();
  v130 = type metadata accessor for WeatherData(v14);
  v150 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  sub_1000986FC();
  sub_1000BA30C();
  v16 = __chkstk_darwin(v15);
  v18 = (uint64_t)v128 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)v128 - v19;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v23);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v24);
  v26 = (char *)v128 - v25;
  v27 = type metadata accessor for LocationWeatherDataState(0);
  v152 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v28);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v29);
  sub_1000860D0();
  v153 = v30;
  __chkstk_darwin(v31);
  v33 = (char *)v128 - v32;
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v35);
  v145 = (uint64_t)v128 - v36;
  v37 = sub_10009876C();
  v143 = type metadata accessor for WeatherMapPresentationState(v37);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_100088FDC();
  v146 = v39;
  v133 = *(int *)(v11 + 20);
  v40 = *(_QWORD *)(a1 + v133);
  v41 = *(_QWORD *)(v40 + 16);
  v144 = a1;
  v151 = v27;
  v138 = (int *)v11;
  if (!v41)
  {
    swift_bridgeObjectRetain(v40);
    v46 = &_swiftEmptyDictionarySingleton;
LABEL_23:
    sub_1000986E8();
    v79 = v138;
    v80 = v144;
    v81 = v146;
    sub_100095B78(v144 + v138[11], (uint64_t)v146, type metadata accessor for WeatherMapPresentationState);
    v82 = (uint64_t *)&v81[*(int *)(v143 + 28)];
    v83 = v82[1];
    v84 = v132;
    v155 = (uint64_t)v46;
    if (v83)
    {
      v85 = *v82;
      v86 = *(_QWORD *)(v80 + v79[8] + 16);
      swift_bridgeObjectRetain(v83);
      sub_1000EED10(v85, v83, v86);
      sub_1000986E8();
      if (_s7Weather24LocationCompositionStateOwet_0(v84, 1, v27) == 1)
      {
        sub_100021A14(v84, &qword_100BC3380);
      }
      else
      {
        sub_1000C5D24(v84, (uint64_t)&v158);
        sub_1000C5D24(v85, (uint64_t)&v159);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v85);
        if ((_DWORD)EnumCaseMultiPayload == 1)
        {
          v88 = v85 + *(int *)(sub_1000BA294(&qword_100BC3358) + 48);
          v89 = v128[0];
          sub_10007C77C(v85, v128[0], type metadata accessor for WeatherData);
          sub_10009BC18(v90, type metadata accessor for NewsDataModel);
          sub_1000215BC(v88, type metadata accessor for PreprocessedWeatherData);
          sub_10007C77C(v89, v145, type metadata accessor for WeatherData);
          v91 = 0;
          goto LABEL_30;
        }
        sub_10009BC18(EnumCaseMultiPayload, type metadata accessor for LocationWeatherDataState);
      }
    }
    v91 = 1;
LABEL_30:
    v92 = v130;
    sub_10009DE90(v145, v91);
    LODWORD(v154) = v146[1];
    v93 = *v146;
    v94 = *(_QWORD *)(v80 + v79[8] + 16);
    v95 = (uint64_t *)(v80 + v79[7]);
    v96 = *v95;
    v97 = v95[1];
    swift_bridgeObjectRetain(v97);
    v98 = v134;
    sub_1000EED10(v96, v97, v94);
    v99 = v97;
    v100 = v98;
    swift_bridgeObjectRelease(v99);
    v101 = v135;
    sub_10003773C(v98, v135, &qword_100BC3380);
    if (_s7Weather24LocationCompositionStateOwet_0(v101, 1, v151) == 1)
    {
      sub_100021A14(v98, &qword_100BC3380);
      sub_100021A14(v101, &qword_100BC3380);
      v102 = v129;
      sub_10009DE90(v129, 1);
      sub_100021A14(v102, &qword_100BC3460);
      sub_1000CCB64(v103, v104, type metadata accessor for InteractiveMapInput);
    }
    else
    {
      v106 = v129;
      sub_1000EADE8();
      sub_100021A14(v100, &qword_100BC3380);
      sub_10009BC18(v107, type metadata accessor for LocationWeatherDataState);
      v108 = _s7Weather24LocationCompositionStateOwet_0(v106, 1, v92);
      sub_100021A14(v106, &qword_100BC3460);
      sub_1000CCB64(v109, v110, type metadata accessor for InteractiveMapInput);
      if (v108 != 1)
      {
        LODWORD(v156) = 0;
        goto LABEL_35;
      }
    }
    LODWORD(v156) = *(unsigned __int8 *)(v101 + v79[9]);
LABEL_35:
    v111 = v93 == 4;
    v112 = (v154 & 0xC0) == 64;
    sub_10009BC18(v105, type metadata accessor for InteractiveMapInput);
    v113 = v139;
    v114 = v144;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v139, v144, v137);
    v115 = *(_QWORD *)(v114 + v133);
    v116 = *v95;
    v117 = v95[1];
    LODWORD(v154) = *(unsigned __int8 *)(v114 + v79[10]);
    v118 = *v82;
    v119 = v82[1];
    v152 = v116;
    v153 = v118;
    LODWORD(v151) = *(unsigned __int8 *)(v114 + v79[12]);
    v120 = v146;
    v121 = v140;
    sub_100095B78((uint64_t)&v146[*(int *)(v143 + 32)], v140, type metadata accessor for WeatherMapTrackingState);
    swift_bridgeObjectRetain(v119);
    swift_bridgeObjectRetain(v115);
    swift_bridgeObjectRetain(v117);
    sub_1000215BC((uint64_t)v120, type metadata accessor for WeatherMapPresentationState);
    v122 = v114 + v79[13];
    v123 = v141;
    sub_10003773C(v122, v141, &qword_100BC3620);
    v127 = v119;
    v124 = v142;
    sub_10038CF3C(v113, v115, v152, v117, v155, v156, v154, v153, v142, v127, v112, v112, v111, v111, v151, v145, v121, v123);
    v125 = type metadata accessor for InteractiveMapViewModel(0);
    return _s7Weather24LocationCompositionStateOwst_0(v124, 0, 1, v125);
  }
  v154 = (uint64_t)v33;
  v42 = *(_QWORD *)(type metadata accessor for Location(0) - 8);
  v43 = v40 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
  v44 = a1 + *(int *)(v11 + 32);
  v155 = *(_QWORD *)(v42 + 72);
  v156 = v44;
  v128[1] = v40;
  v45 = swift_bridgeObjectRetain_n(v40, 2);
  v46 = &_swiftEmptyDictionarySingleton;
  v147 = v26;
  v148 = v20;
  v149 = v18;
  while (1)
  {
    v47 = *(_QWORD *)(v156 + 16);
    v48 = Location.id.getter(v45);
    if (*(_QWORD *)(v47 + 16) && (v49 = sub_1000991C8(v48), (v50 & 1) != 0))
    {
      sub_100095B78(*(_QWORD *)(v47 + 56) + *(_QWORD *)(v152 + 72) * v49, (uint64_t)v26, type metadata accessor for LocationWeatherDataState);
      v51 = 0;
    }
    else
    {
      v51 = 1;
    }
    sub_10009DE90((uint64_t)v26, v51);
    sub_1000986E8();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27) == 1)
    {
      sub_100021A14((uint64_t)v26, &qword_100BC3380);
      goto LABEL_20;
    }
    v52 = v154;
    sub_10007C77C((uint64_t)v26, v154, type metadata accessor for LocationWeatherDataState);
    v53 = v153;
    sub_100095B78(v52, v153, type metadata accessor for LocationWeatherDataState);
    if (swift_getEnumCaseMultiPayload(v53) != 1)
    {
      sub_1000215BC(v52, type metadata accessor for LocationWeatherDataState);
      sub_1000215BC(v53, type metadata accessor for LocationWeatherDataState);
      goto LABEL_20;
    }
    v54 = sub_1000BA294(&qword_100BC3358);
    v55 = v53;
    v56 = v53 + *(int *)(v54 + 48);
    v57 = v55 + *(int *)(v54 + 64);
    sub_10007C77C(v55, (uint64_t)v20, type metadata accessor for WeatherData);
    sub_1000215BC(v57, type metadata accessor for NewsDataModel);
    sub_1000215BC(v56, type metadata accessor for PreprocessedWeatherData);
    v59 = Location.id.getter(v58);
    v61 = v60;
    sub_100095B78((uint64_t)v20, v18, type metadata accessor for WeatherData);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v46);
    v157 = v46;
    v63 = sub_1000991C8(v59);
    v65 = v46[2];
    v66 = (v64 & 1) == 0;
    v67 = v65 + v66;
    if (__OFADD__(v65, v66))
      break;
    v68 = v63;
    v18 = v64;
    sub_1000BA294(&qword_100BD7B80);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v67))
    {
      v69 = sub_1000991C8(v59);
      if ((v18 & 1) != (v70 & 1))
        goto LABEL_38;
      v68 = v69;
    }
    v46 = v157;
    if ((v18 & 1) != 0)
    {
      v71 = sub_1000D9CCC();
      sub_100324BCC(v71, v72);
    }
    else
    {
      v157[(v68 >> 6) + 8] |= 1 << v68;
      v73 = (uint64_t *)(v46[6] + 16 * v68);
      *v73 = v59;
      v73[1] = v61;
      v74 = sub_1000D9CCC();
      sub_10007C77C(v74, v75, type metadata accessor for WeatherData);
      v76 = v46[2];
      v77 = __OFADD__(v76, 1);
      v78 = v76 + 1;
      if (v77)
        goto LABEL_37;
      v46[2] = v78;
      swift_bridgeObjectRetain(v61);
    }
    swift_bridgeObjectRelease(v61);
    swift_bridgeObjectRelease(0x8000000000000000);
    v20 = v148;
    sub_1000215BC((uint64_t)v148, type metadata accessor for WeatherData);
    sub_1000215BC(v154, type metadata accessor for LocationWeatherDataState);
    v27 = v151;
    v26 = v147;
LABEL_20:
    v43 += v155;
    if (!--v41)
    {
      sub_1000986E8();
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for InteractiveMapViewModelFactory()
{
  return objc_opt_self(_TtC7Weather30InteractiveMapViewModelFactory);
}

uint64_t sub_100324BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100324C10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t i;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __int128 v21;
  uint64_t v22;
  __int128 v23[2];
  _BYTE v24[40];
  _BYTE v25[152];

  v1 = sub_1000BA294(&qword_100BD7C68);
  inited = swift_initStackObject(v1, v25);
  *(_OWORD *)(inited + 16) = xmmword_10098B610;
  v3 = v0[2];
  if (v3)
  {
    v4 = sub_1000CCB78();
    sub_100086DA4(&qword_100BD7C80, type metadata accessor for LocationNetworkActivityFlow, (uint64_t)&unk_1009CEFF0);
    v6 = v3;
  }
  else
  {
    v6 = 0;
    v4 = 0;
    v5 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = v5;
  v7 = v0[3];
  if (v7)
  {
    v8 = sub_1000CCB78();
    sub_100086DA4(&qword_100BD7C80, type metadata accessor for LocationNetworkActivityFlow, (uint64_t)&unk_1009CEFF0);
    v10 = v7;
  }
  else
  {
    v10 = 0;
    v8 = 0;
    v9 = 0;
    *(_QWORD *)(inited + 80) = 0;
    *(_QWORD *)(inited + 88) = 0;
  }
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 96) = v8;
  *(_QWORD *)(inited + 104) = v9;
  v11 = v0[4];
  if (v11)
  {
    v12 = type metadata accessor for InteractiveMapNetworkActivityFlow(0);
    sub_100086DA4(&qword_100BD7C78, type metadata accessor for InteractiveMapNetworkActivityFlow, (uint64_t)&unk_1009D1D08);
  }
  else
  {
    v12 = 0;
    v13 = 0;
    *(_QWORD *)(inited + 120) = 0;
    *(_QWORD *)(inited + 128) = 0;
  }
  *(_QWORD *)(inited + 112) = v11;
  *(_QWORD *)(inited + 136) = v12;
  *(_QWORD *)(inited + 144) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = _swiftEmptyArrayStorage;
  for (i = 32; i != 152; i += 40)
  {
    sub_100037768(inited + i, (uint64_t)v24, &qword_100BD7C70);
    sub_1000787D4((uint64_t)v24, (uint64_t)&v21, &qword_100BD7C70);
    if (v22)
    {
      sub_10003C800(&v21, (uint64_t)v23);
      sub_10003C800(v23, (uint64_t)&v21);
      if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      {
        sub_1000B47B4(0, v14[2] + 1);
        v14 = v18;
      }
      v17 = v14[2];
      v16 = v14[3];
      if (v17 >= v16 >> 1)
      {
        sub_1000B47B4(v16 > 1, v17 + 1);
        v14 = v19;
      }
      v14[2] = v17 + 1;
      sub_10003C800(&v21, (uint64_t)&v14[5 * v17 + 4]);
    }
    else
    {
      sub_100021AA4((uint64_t)&v21, &qword_100BD7C70);
    }
  }
  swift_setDeallocating(inited);
  sub_1005004D4();
  return v14;
}

void sub_100324E50()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    sub_100006D3C();
  sub_10004A298();
}

void sub_100324E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(v2 + 24))
    sub_10012D0C4(a1, a2, 1);
  sub_10004A298();
}

double sub_100324E9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = sub_100324C10();
  v5 = v4[2];
  if (v5)
  {
    v6 = v4 + 4;
    do
    {
      v7 = v6[3];
      v8 = v6[4];
      sub_1000DB418(v6, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, v7, v8);
      v6 += 5;
      --v5;
    }
    while (v5);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_100324F24()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return v0;
}

uint64_t sub_100324F50()
{
  uint64_t v0;

  sub_100324F24();
  return swift_deallocClassInstance(v0, 40, 7);
}

void sub_100324F70(uint64_t a1, uint64_t a2)
{
  _QWORD v4[6];

  v4[5] = sub_100324C10();
  v4[2] = a1;
  sub_1000BA294(&qword_100BD7C58);
  sub_1000DD93C();
  sub_100081288(&qword_100BD7C60, &qword_100BD7C58);
  sub_1000C4784(a2, (uint64_t)v4);
  swift_bridgeObjectRelease();
  sub_1000C2728();
}

uint64_t sub_100324FF0(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1[3];
  v6 = a1[4];
  sub_1000DB418(a1, v5);
  return a3(a2, v5, *(_QWORD *)(v6 + 8));
}

void sub_100325054(uint64_t a1)
{
  sub_100324F70(a1, (uint64_t)sub_1003250C4);
}

void sub_10032507C(uint64_t a1)
{
  sub_100324F70(a1, (uint64_t)sub_1003250A4);
}

uint64_t sub_1003250A4(_QWORD *a1)
{
  uint64_t v1;

  return sub_100324FF0(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t, _QWORD))&dispatch thunk of WeatherMapNetworkActivityProvider.networkActivityForMapOverlayTile(purpose:));
}

uint64_t sub_1003250C4(_QWORD *a1)
{
  uint64_t v1;

  return sub_100324FF0(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t, _QWORD))&dispatch thunk of WeatherMapNetworkActivityProvider.networkActivityForMapMetadata(purpose:));
}

void sub_1003250E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1000878BC();
  sub_1000B42B0();
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_10009E540();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v14 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v17 = v15;
  swift_release(v14);
  sub_1000C5D34(OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_map);
  sub_1000C661C();
  sub_100098B50();
  _s7Weather24LocationCompositionStateOwst_0(v13, 0, 1, v2);
  sub_1000C5D34(OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_airQuality);
  sub_1000C661C();
  sub_100098B50();
  sub_1000C5D34(OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_severeAlert);
  sub_1000C661C();
  sub_100098B50();
  sub_1001F16A4(v17, v13, (uint64_t)v8, (uint64_t)v6);
  sub_100098640();
}

void sub_100325250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 *v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 *v60;
  __n128 *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  _BYTE v107[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = sub_1000878BC();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_10009E540();
  v9 = a1;
  v10 = a1 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map, (uint64_t)v107);
  sub_10003773C(v10, v6, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7) == 1)
  {
    sub_100021A14(v6, &qword_100BC4A98);
    v11 = sub_1000BA294(&qword_100BCC750);
    v12 = swift_allocObject(v11, 248, 7);
    *(_OWORD *)(v12 + 16) = xmmword_10098E040;
    v13 = sub_1000BA294(&qword_100BCC758);
    v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = *(_QWORD *)(v8 + 72);
    v16 = v13;
    v17 = (__n128 *)sub_1000BA6B8(v13);
    v18 = sub_100099954(v17, (__n128)xmmword_10097CA50);
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_severeAlert, (uint64_t)v18 + v14);
    *(_QWORD *)(v12 + 32) = sub_1000B4580();
    *(_QWORD *)(v12 + 40) = v19;
    *(_QWORD *)(v12 + 48) = v20;
    v21 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000D11D8(v21);
    sub_10009F7F4(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23);
    *(_QWORD *)(v12 + 56) = sub_1000B4580();
    *(_QWORD *)(v12 + 64) = v24;
    *(_QWORD *)(v12 + 72) = v25;
    v26 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000D11D8(v26);
    sub_10009F7F4(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28);
    *(_QWORD *)(v12 + 80) = sub_1000B4580();
    *(_QWORD *)(v12 + 88) = v29;
    *(_QWORD *)(v12 + 96) = v30;
    v31 = sub_1000BA6B8(v16);
    *(_OWORD *)(v31 + 16) = v106;
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_airQuality, v31 + v14);
    *(_QWORD *)(v12 + 104) = sub_100080C44(v31);
    *(_QWORD *)(v12 + 112) = v32;
    *(_QWORD *)(v12 + 120) = v33;
    v34 = (__n128 *)sub_1000C2514(v16, v14 + 2 * v15);
    v35 = (char *)sub_100099954(v34, (__n128)xmmword_10097DA20) + v14;
    v36 = *(_QWORD *)(a1 + 16);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v35);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 128) = sub_1000B4580();
    *(_QWORD *)(v12 + 136) = v37;
    *(_QWORD *)(v12 + 144) = v38;
    v39 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v39);
    sub_100095B78(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v35, type metadata accessor for LocationComponentContainerViewModel);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 152) = sub_1000B4580();
    *(_QWORD *)(v12 + 160) = v40;
    *(_QWORD *)(v12 + 168) = v41;
    v42 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v42);
    sub_100098A1C(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v35);
    sub_100098A1C(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 176) = sub_1000B4580();
    *(_QWORD *)(v12 + 184) = v43;
    *(_QWORD *)(v12 + 192) = v44;
    v45 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v45);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v35);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 200) = sub_1000B4580();
    *(_QWORD *)(v12 + 208) = v46;
    *(_QWORD *)(v12 + 216) = v47;
    v48 = sub_1000BA6B8(v16);
    *(_OWORD *)(v48 + 16) = v106;
    v49 = *(_QWORD *)(a1 + 16);
    sub_10009D3BC(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v14);
    sub_10009D3BC(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v14 + v15);
    *(_QWORD *)(v12 + 224) = sub_100080C44(v48);
    *(_QWORD *)(v12 + 232) = v50;
    *(_QWORD *)(v12 + 240) = v51;
  }
  else
  {
    sub_10007C77C(v6, v1, type metadata accessor for LocationComponentContainerViewModel);
    v52 = sub_1000BA294(&qword_100BCC750);
    v53 = swift_allocObject(v52, 272, 7);
    *(_OWORD *)(v53 + 16) = xmmword_10097FA60;
    v54 = sub_1000BA294(&qword_100BCC758);
    v55 = *(_QWORD *)(v8 + 72);
    v56 = *(unsigned __int8 *)(v8 + 80);
    v57 = (v56 + 32) & ~v56;
    v105 = v1;
    v58 = v56 | 7;
    v59 = v54;
    v60 = (__n128 *)swift_allocObject(v54, v57 + v55, v56 | 7);
    v61 = sub_100099954(v60, (__n128)xmmword_10097CA50);
    sub_1000B4590(v9 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_severeAlert, (uint64_t)v61 + v57);
    *(_QWORD *)(v53 + 32) = sub_1000B4588();
    *(_QWORD *)(v53 + 40) = v62;
    *(_QWORD *)(v53 + 48) = v63;
    v64 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v64);
    sub_1000B4590(v65 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v66);
    *(_QWORD *)(v53 + 56) = sub_1000B4588();
    *(_QWORD *)(v53 + 64) = v67;
    *(_QWORD *)(v53 + 72) = v68;
    v69 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v69);
    sub_1000B4590(v70 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
    *(_QWORD *)(v53 + 80) = sub_1000B4588();
    *(_QWORD *)(v53 + 88) = v72;
    *(_QWORD *)(v53 + 96) = v73;
    v74 = sub_1000BA5D8();
    *(_OWORD *)(v74 + 16) = v106;
    sub_1000B4590(v9 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_airQuality, v74 + v57);
    *(_QWORD *)(v53 + 104) = sub_1000B4588();
    *(_QWORD *)(v53 + 112) = v75;
    *(_QWORD *)(v53 + 120) = v76;
    v77 = sub_1000BA5D8();
    *(_OWORD *)(v77 + 16) = v106;
    sub_1000B4590(v1, v77 + v57);
    *(_QWORD *)(v53 + 128) = sub_1000B4580();
    *(_QWORD *)(v53 + 136) = v78;
    *(_QWORD *)(v53 + 144) = v79;
    v80 = v9;
    v81 = (__n128 *)swift_allocObject(v59, v57 + 2 * v55, v58);
    v82 = (char *)sub_100099954(v81, (__n128)xmmword_10097DA20) + v57;
    v83 = *(_QWORD *)(v80 + 16);
    v103 = v80;
    sub_1000B4590(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v82);
    v104 = v55;
    sub_1000B4590(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 152) = sub_1000B4588();
    *(_QWORD *)(v53 + 160) = v84;
    *(_QWORD *)(v53 + 168) = v85;
    v86 = (__n128 *)sub_1000C2514(v59, v57 + 2 * v55);
    sub_1000C52D8(v86);
    v87 = *(_QWORD *)(v80 + 16);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v82);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 176) = sub_1000B4588();
    *(_QWORD *)(v53 + 184) = v88;
    *(_QWORD *)(v53 + 192) = v89;
    v90 = v57 + 2 * v55;
    v91 = (__n128 *)sub_1000C2514(v59, v90);
    sub_1000C52D8(v91);
    v92 = *(_QWORD *)(v103 + 16);
    sub_1000B4590(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v82);
    sub_100098A1C(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 200) = sub_1000B4588();
    *(_QWORD *)(v53 + 208) = v93;
    *(_QWORD *)(v53 + 216) = v94;
    v95 = (__n128 *)sub_1000C2514(v59, v90);
    sub_1000C52D8(v95);
    v96 = *(_QWORD *)(v103 + 16);
    sub_100095B78(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v82, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v82[v55], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v53 + 224) = sub_1000B4588();
    *(_QWORD *)(v53 + 232) = v97;
    *(_QWORD *)(v53 + 240) = v98;
    v99 = swift_allocObject(v59, v90, v58);
    *(_OWORD *)(v99 + 16) = v106;
    v100 = *(_QWORD *)(v103 + 16);
    sub_100098B48(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v99 + v57);
    sub_100098B48(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v57 + v104);
    *(_QWORD *)(v53 + 248) = sub_100080C44(v99);
    *(_QWORD *)(v53 + 256) = v101;
    *(_QWORD *)(v53 + 264) = v102;
    sub_1000215BC(v105, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_10032598C(char a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94[32];

  v93 = a3;
  v5 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v92 = v7;
  __chkstk_darwin(v8);
  v91 = (uint64_t)&v68 - v9;
  __chkstk_darwin(v10);
  v90 = (uint64_t)&v68 - v11;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v68 - v20;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_1000986FC();
  v89 = v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v68 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v68 - v31;
  if (a1)
  {
    if (a1 == 1)
    {
      if ((a2 & 1) != 0)
      {
        v33 = &qword_100BD8058;
        goto LABEL_11;
      }
    }
    else if ((a2 & 1) != 0)
    {
      v33 = &qword_100BD8428;
      goto LABEL_11;
    }
    v33 = &qword_100BD8240;
  }
  else if ((a2 & 1) != 0)
  {
    v33 = &qword_100BD7C88;
  }
  else
  {
    v33 = &qword_100BD7E70;
  }
LABEL_11:
  v34 = *((_BYTE *)v33 + 224);
  v76 = *v33;
  v75 = v33[1];
  v74 = v33[2];
  v73 = v33[3];
  v35 = v33[8];
  v79 = v33[9];
  v80 = v35;
  v36 = v33[10];
  v77 = v33[11];
  v78 = v36;
  v37 = v33[24];
  v72 = v33[25];
  v71 = v33[26];
  v70 = v33[27];
  v38 = v33[49];
  v83 = v33[50];
  v84 = v38;
  v39 = v33[51];
  v81 = v33[52];
  v82 = v39;
  v40 = v33[57];
  v87 = v33[58];
  v88 = v40;
  v41 = v93 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map;
  v43 = v33[59];
  v42 = v33[60];
  v85 = v43;
  v86 = v42;
  sub_1000992EC(v93 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map, (uint64_t)v94);
  sub_10003773C(v41, v15, &qword_100BC4A98);
  v44 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v44) == 1)
  {
    sub_100021A14(v15, &qword_100BC4A98);
LABEL_16:
    v45 = 1;
    goto LABEL_17;
  }
  v69 = v37;
  sub_10009D3BC(v15 + *(int *)(v44 + 20), (uint64_t)v18);
  sub_1000215BC(v15, type metadata accessor for LocationComponentContainerViewModel);
  sub_10007C77C((uint64_t)v18, (uint64_t)v21, type metadata accessor for LocationComponentViewModel);
  if ((v34 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v21, type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10007C77C((uint64_t)v21, (uint64_t)v29, type metadata accessor for LocationComponentViewModel);
  v45 = 0;
  v46 = &v29[*(int *)(v5 + 20)];
  v47 = v72;
  *(_QWORD *)v46 = v69;
  *((_QWORD *)v46 + 1) = v47;
  v48 = v70;
  *((_QWORD *)v46 + 2) = v71;
  *((_QWORD *)v46 + 3) = v48;
LABEL_17:
  sub_1000988B8((uint64_t)v29, v45);
  sub_1002228F0((uint64_t)v29, (uint64_t)v32);
  sub_10009D3BC(v93 + *(int *)(v44 + 20) + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_airQuality, (uint64_t)v26);
  v49 = &v26[*(int *)(v5 + 20)];
  v50 = v75;
  *(_QWORD *)v49 = v76;
  *((_QWORD *)v49 + 1) = v50;
  v51 = v73;
  *((_QWORD *)v49 + 2) = v74;
  *((_QWORD *)v49 + 3) = v51;
  sub_1000988B8((uint64_t)v26, 0);
  v52 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v53 = v90;
  sub_10009D3BC(v52, v90);
  v54 = (uint64_t *)(v53 + *(int *)(v5 + 20));
  v55 = v79;
  *v54 = v80;
  v54[1] = v55;
  v56 = v77;
  v54[2] = v78;
  v54[3] = v56;
  v57 = v89;
  sub_10003773C((uint64_t)v32, v89, &qword_100BCC760);
  v58 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v59 = v91;
  sub_10009D3BC(v58, v91);
  v60 = (uint64_t *)(v59 + *(int *)(v5 + 20));
  v61 = v83;
  *v60 = v84;
  v60[1] = v61;
  v62 = v81;
  v60[2] = v82;
  v60[3] = v62;
  v63 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v64 = v92;
  sub_10009D3BC(v63, v92);
  v65 = (uint64_t *)(v64 + *(int *)(v5 + 20));
  v66 = v87;
  *v65 = v88;
  v65[1] = v66;
  v67 = v86;
  v65[2] = v85;
  v65[3] = v67;
  sub_10087CED0((uint64_t)v26, v53, v57, v59, v64);
  sub_100021A14((uint64_t)v32, &qword_100BCC760);
  sub_100098640();
}

ValueMetadata *type metadata accessor for WindComparisonTextBuilder()
{
  return &type metadata for WindComparisonTextBuilder;
}

uint64_t sub_100325E98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  double v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  double v74;
  double v75;
  double v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;

  v2 = sub_1000BA294(&qword_100BCB938);
  v80 = *(_QWORD *)(v2 - 8);
  v81 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BCB720);
  __chkstk_darwin(v5);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v78 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v78 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v78 - v15;
  v17 = type metadata accessor for ConditionUnits(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for PastDataComparisonTextContext(0);
  v22 = a1 + *(int *)(v21 + 36);
  v82 = v20;
  v83 = v18;
  v23 = v20;
  v24 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v23, v22, v17);
  sub_100326438(a1 + *(int *)(v21 + 52), (uint64_t)v16);
  v25 = type metadata accessor for ExtremaResult(0);
  v26 = sub_1000BC008((uint64_t)v16);
  if (v27)
  {
LABEL_5:
    sub_100326480((uint64_t)v16);
    sub_100326438(a1 + *(int *)(v21 + 48), (uint64_t)v10);
    v31 = sub_1000BC008((uint64_t)v10);
    if (!v27)
    {
      v32 = ExtremaResult.maxValue.getter(v31);
      v33 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v33(v10, v25);
      sub_100326438(a1 + *(int *)(v21 + 40), (uint64_t)v7);
      v34 = sub_1000BC008((uint64_t)v7);
      if (!v27)
      {
        ExtremaResult.maxValue.getter(v34);
        v67 = ((uint64_t (*)(char *, uint64_t))v33)(v7, v25);
        v49 = v82;
        ConditionUnits.windSpeed.getter(v67);
        v68 = sub_1000DB8E4();
        sub_1000C27E0(v68);
        v69 = v81;
        sub_1000DD948(v81);
        v70 = sub_1000C5D44();
        v71 = ((uint64_t (*)(uint64_t, uint64_t))v21)(v70, v69);
        v72 = round(v32);
        v73 = ConditionUnits.windSpeed.getter(v71);
        sub_1000B47C0(v73);
        sub_1000DD948(v69);
        v75 = v74;
        ((void (*)(char *, uint64_t))v21)(v4, v69);
        v76 = round(v75);
        if (v72 >= v76)
        {
          if (v76 >= v72)
          {
            sub_1000C4794((uint64_t)"The wind speed today is similar to yesterday.");
            sub_1000C53B0();
          }
          else
          {
            sub_1000C4794((uint64_t)"The wind speed today is lower than yesterday.");
          }
          sub_1000C3898();
        }
        else
        {
          sub_1000BA908(0xD00000000000002ELL, (uint64_t)"The wind speed today is higher than yesterday.");
          sub_1000C3898();
        }
        goto LABEL_26;
      }
      v10 = v7;
    }
    sub_100326480((uint64_t)v10);
    v49 = v82;
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_1000AECD4(v35, (uint64_t)qword_100CAF0E8);
    v21 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter(v21, v37);
    if (os_log_type_enabled((os_log_t)v21, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v21, v38, "Missing extrema values for building wind comparison text", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
    sub_1000C38A4();
    v47 = 0;
    goto LABEL_27;
  }
  v79 = v17;
  v28 = ExtremaResult.maxValue.getter(v26);
  v29 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
  v29(v16, v25);
  sub_100326438(a1 + *(int *)(v21 + 44), (uint64_t)v13);
  v30 = sub_1000BC008((uint64_t)v13);
  if (v27)
  {
    v16 = v13;
    v24 = v79;
    goto LABEL_5;
  }
  ExtremaResult.maxValue.getter(v30);
  v48 = ((uint64_t (*)(char *, uint64_t))v29)(v13, v25);
  v49 = v82;
  ConditionUnits.windGust.getter(v48);
  v50 = sub_1000DB8E4();
  sub_1000C27E0(v50);
  v51 = v81;
  sub_1000DD948(v81);
  v52 = sub_1000C5D44();
  v53 = ((uint64_t (*)(uint64_t, uint64_t))v21)(v52, v51);
  v54 = round(v28);
  v55 = ConditionUnits.windGust.getter(v53);
  sub_1000B47C0(v55);
  sub_1000DD948(v51);
  v57 = v56;
  ((void (*)(char *, uint64_t))v21)(v4, v51);
  v58 = round(v57);
  if (v54 >= v58)
  {
    v24 = v79;
    if (v58 >= v54)
      sub_1000BA908(0xD000000000000032, (uint64_t)"The peak gust speed today is similar to yesterday.");
    else
      sub_1000BA908(0xD000000000000032, (uint64_t)"The peak gust speed today is lower than yesterday.");
    sub_1000C53B0();
    sub_1000C3898();
LABEL_26:
    sub_1000C38A4();
LABEL_27:
    Text.init(_:tableName:bundle:comment:)(v40, v41, v42, v43, v44, v45, v46, v47);
    sub_1000DCD9C();
    goto LABEL_28;
  }
  sub_1000BA908(0xD000000000000033, (uint64_t)"The peak gust speed today is higher than yesterday.");
  sub_1000C53B0();
  sub_1000C3898();
  sub_1000C38A4();
  Text.init(_:tableName:bundle:comment:)(v59, v60, v61, v62, v63, v64, v65, v66);
  sub_1000DCD9C();
  v24 = v79;
LABEL_28:
  (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v24);
  return v21;
}

uint64_t sub_100326418(uint64_t a1)
{
  return sub_100325E98(a1);
}

uint64_t sub_100326438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100326480(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BCB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

#error "1003265F8: call analysis failed (funcsize=95)"

unint64_t sub_100326650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD86A8;
  if (!qword_100BD86A8)
  {
    v1 = type metadata accessor for NotificationsOptInReducer();
    result = swift_getWitnessTable(&unk_10099547C, v1);
    atomic_store(result, (unint64_t *)&qword_100BD86A8);
  }
  return result;
}

void *VerticalSizingBehaviorKey.defaultValue.unsafeMutableAddressor()
{
  return &static VerticalSizingBehaviorKey.defaultValue;
}

unint64_t sub_10032669C()
{
  unint64_t result;

  result = qword_100BD86B0;
  if (!qword_100BD86B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SizingBehavior, &type metadata for SizingBehavior);
    atomic_store(result, (unint64_t *)&qword_100BD86B0);
  }
  return result;
}

uint64_t sub_1003266D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_10032669C();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

ValueMetadata *type metadata accessor for VerticalSizingBehaviorKey()
{
  return &type metadata for VerticalSizingBehaviorKey;
}

void sub_100326738(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  _QWORD v22[2];

  v22[1] = a1;
  v2 = type metadata accessor for MoonComponentView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10009D50C();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD8790);
  __chkstk_darwin(v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter(v13);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v14 = sub_1000BA294(&qword_100BD8798);
  sub_100326940(v1, (uint64_t)&v12[*(int *)(v14 + 44)]);
  sub_10015922C();
  sub_100080C0C(v1, (uint64_t)v5, type metadata accessor for MoonComponentView);
  v15 = *(unsigned __int8 *)(v3 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_100B6D9C8, v16 + v4, v15 | 7);
  sub_10007802C((uint64_t)v5, v17 + v16, type metadata accessor for MoonComponentView);
  sub_10003D2DC(&qword_100BD87A0, &qword_100BD8790);
  v19 = v18;
  sub_10000F1C8(&qword_100C0A050, (uint64_t (*)(uint64_t))&type metadata accessor for ScenePhase);
  View.onChange<A>(of:initial:_:)(v9, 0, sub_10032C72C, v17, v10, v6, v19, v20);
  v21 = swift_release(v17);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v21);
  sub_100021A14((uint64_t)v12, &qword_100BD8790);
}

uint64_t sub_100326940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  unint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  unint64_t v66;

  v64 = a2;
  v3 = type metadata accessor for MoonComponentView(0);
  v52 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v52 + 64);
  __chkstk_darwin(v3);
  v53 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1000BA294(&qword_100BD87A8);
  v56 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v54 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v55 = (char *)&v51 - v7;
  v60 = sub_1000BA294(&qword_100BD87B0);
  __chkstk_darwin(v60);
  v62 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1000BA294(&qword_100BD87B8);
  __chkstk_darwin(v59);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294(&qword_100BD87C0);
  v14 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v51 - v18;
  v20 = a1 + *(int *)(v3 + 28);
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_10008D47C(*(_QWORD *)v20, v22);
  sub_100109B54();
  v24 = v23;
  sub_1000B15F8(v21, v22);
  if ((v24 & 1) != 0)
  {
    sub_100326E08((uint64_t)v13);
    static AccessibilityChildBehavior.combine.getter();
    v25 = sub_10032C788();
    v26 = (uint64_t (*)(uint64_t))v59;
    View.accessibilityElement(children:)(v11, v59, v25);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v58);
    sub_100021A14((uint64_t)v13, &qword_100BD87B8);
    v27 = v61;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v61);
    v28 = v62;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v62, v19, v27);
    swift_storeEnumTagMultiPayload(v28, v60, 0);
    v65 = v26;
    v66 = v25;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v30 = sub_100075EB0(&qword_100BD87C8);
    sub_10003D2DC(&qword_100BD87D0, &qword_100BD87C8);
    v65 = (uint64_t (*)(uint64_t))v30;
    v66 = v31;
    v32 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    _ConditionalContent<>.init(storage:)(v28, v27, v63, OpaqueTypeConformance2, v32);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v27);
  }
  else
  {
    v34 = v53;
    sub_100080C0C(a1, v53, type metadata accessor for MoonComponentView);
    v35 = *(unsigned __int8 *)(v52 + 80);
    v36 = (v35 + 16) & ~v35;
    v37 = swift_allocObject(&unk_100B6D9F0, v36 + v4, v35 | 7);
    sub_10007802C(v34, v37 + v36, type metadata accessor for MoonComponentView);
    v65 = sub_10032C77C;
    v66 = v37;
    static AccessibilityChildBehavior.combine.getter();
    v38 = sub_1000BA294(&qword_100BD87C8);
    sub_10003D2DC(&qword_100BD87D0, &qword_100BD87C8);
    v40 = v39;
    v41 = v54;
    View.accessibilityElement(children:)(v11, v38, v39);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v58);
    v42 = swift_release(v66);
    v44 = v55;
    v43 = v56;
    v45 = v41;
    v46 = v63;
    (*(void (**)(char *, char *, uint64_t, __n128))(v56 + 32))(v55, v45, v63, v42);
    v47 = v62;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v62, v44, v46);
    swift_storeEnumTagMultiPayload(v47, v60, 1);
    v48 = sub_10032C788();
    v65 = (uint64_t (*)(uint64_t))v59;
    v66 = v48;
    v49 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v65 = (uint64_t (*)(uint64_t))v38;
    v66 = v40;
    v50 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    _ConditionalContent<>.init(storage:)(v47, v61, v46, v49, v50);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v46);
  }
}

void sub_100326E08(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = v1;
  v45 = a1;
  v44 = sub_1000BA294(&qword_100BD87F8);
  __chkstk_darwin(v44);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD8800);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1000BA294(&qword_100BD87E8);
  __chkstk_darwin(v43);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v42 = (char *)&v40 - v11;
  v12 = type metadata accessor for ContentSizeCategory(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MoonComponentView(0);
  sub_100109D64();
  v17 = ContentSizeCategory.isAccessibilityCategory.getter();
  v18 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) != 0)
  {
    v41 = v7;
    v21 = v43;
    v20 = v44;
    v22 = *(int *)(v16 + 48);
    v23 = v2;
    v24 = *(_QWORD **)(v2 + v22 + 40);
    if (v24[2])
    {
      v26 = v24[4];
      v25 = v24[5];
      swift_bridgeObjectRetain(v25);
    }
    else
    {
      v26 = 0;
      v25 = 0;
    }
    v36 = v20;
    *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v18);
    *((_QWORD *)v9 + 1) = 0x4018000000000000;
    v9[16] = 0;
    sub_1000BA294(&qword_100BD8810);
    sub_1003287B4(v23, v26, v25);
    swift_bridgeObjectRelease();
    v28 = &qword_100BD87E8;
    v4 = v42;
    sub_1000787D4((uint64_t)v9, (uint64_t)v42, &qword_100BD87E8);
    v37 = (uint64_t)v41;
    sub_100037768((uint64_t)v4, (uint64_t)v41, &qword_100BD87E8);
    swift_storeEnumTagMultiPayload(v37, v5, 0);
    sub_10003D2DC(&qword_100BD87E0, &qword_100BD87E8);
    v30 = v38;
    sub_10003D2DC(&qword_100BD87F0, &qword_100BD87F8);
    v32 = v39;
    v34 = (char *)v37;
    v35 = v21;
    v33 = v36;
  }
  else
  {
    *v4 = static Axis.Set.horizontal.getter(v19);
    v27 = sub_1000BA294(&qword_100BD8808);
    sub_1003275C0(v2, (uint64_t)&v4[*(int *)(v27 + 44)]);
    v28 = &qword_100BD87F8;
    sub_100037768((uint64_t)v4, (uint64_t)v7, &qword_100BD87F8);
    swift_storeEnumTagMultiPayload(v7, v5, 1);
    sub_10003D2DC(&qword_100BD87E0, &qword_100BD87E8);
    v30 = v29;
    sub_10003D2DC(&qword_100BD87F0, &qword_100BD87F8);
    v32 = v31;
    v33 = v44;
    v34 = v7;
    v35 = v43;
  }
  _ConditionalContent<>.init(storage:)(v34, v35, v33, v30, v32);
  sub_100021A14((uint64_t)v4, v28);
}

double sub_10032714C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  int v27;
  int v28;
  uint64_t v29;
  double result;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = type metadata accessor for ScenePhase(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - v10;
  if (qword_100BC2410 != -1)
    swift_once(&qword_100BC2410, sub_10015961C);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_1000AECD4(v12, (uint64_t)qword_100CAF028);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v14 = v43(v11, a2, v5);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v42 = a3;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v41 = a2;
    v39 = v19;
    v46 = v19;
    v40 = v13;
    *(_DWORD *)v18 = 136315138;
    v38 = v18 + 4;
    v20 = sub_10032749C();
    v44 = sub_1000CE1C8(v20, v21, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    v22 = swift_bridgeObjectRelease();
    v23 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    v23(v11, v5, v22);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "MoonComponentView:scenePhase change:%s", v18, 0xCu);
    v24 = v39;
    swift_arrayDestroy(v39, 1);
    v25 = v24;
    a2 = v41;
    swift_slowDealloc(v25, -1, -1);
    v26 = v18;
    a3 = v42;
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    ((void (*)(char *, uint64_t))v23)(v11, v5);
  }

  v43(v8, a2, v5);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  v28 = enum case for ScenePhase.active(_:);
  v29 = ((uint64_t (*)(char *, uint64_t))v23)(v8, v5);
  if (v27 == v28)
  {
    v31 = Logger.logObject.getter(v29);
    v32 = static os_log_type_t.default.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "MoonComponentView:forceUpdateFlag", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    v34 = a3 + *(int *)(type metadata accessor for MoonComponentView(0) + 56);
    v36 = *(_QWORD *)(v34 + 8);
    LOBYTE(v46) = *(_BYTE *)v34;
    v35 = v46;
    v47 = v36;
    swift_retain();
    v37 = sub_1000BA294(&qword_100BC5608);
    State.wrappedValue.getter(&v44, v37);
    LOBYTE(v46) = v35;
    v47 = v36;
    HIBYTE(v45) = (v44 & 1) == 0;
    State.wrappedValue.setter((char *)&v45 + 7, v37);
    *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  }
  return result;
}

uint64_t sub_10032749C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for ScenePhase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for ScenePhase.background(_:))
    return 0x756F72676B636162;
  if (v6 == enum case for ScenePhase.inactive(_:))
    return 0x6576697463616E69;
  if (v6 == enum case for ScenePhase.active(_:))
    return 0x657669746361;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 4271950;
}

void sub_1003275C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1000BA294(&qword_100BD8868);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - v8;
  v10 = sub_1000BA294(&qword_100BD8870);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v19 - v14;
  sub_100327758((uint64_t)&v19 - v14);
  *v9 = static Axis.Set.vertical.getter(v16);
  v17 = sub_1000BA294(&qword_100BD8878);
  sub_100327978(a1, (uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_100037768((uint64_t)v15, (uint64_t)v12, &qword_100BD8870);
  sub_100037768((uint64_t)v9, (uint64_t)v6, &qword_100BD8868);
  sub_100037768((uint64_t)v12, a2, &qword_100BD8870);
  v18 = sub_1000BA294(&qword_100BD8880);
  sub_100037768((uint64_t)v6, a2 + *(int *)(v18 + 48), &qword_100BD8868);
  sub_100021A14((uint64_t)v9, &qword_100BD8868);
  sub_100021A14((uint64_t)v15, &qword_100BD8870);
  sub_100021A14((uint64_t)v6, &qword_100BD8868);
  sub_100021A14((uint64_t)v12, &qword_100BD8870);
}

void sub_100327758(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_1000BA294(&qword_100BD88B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BD88B8);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for HorizontalABWithB1x1RatioLayout(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v19 - v14);
  sub_100120350();
  *v15 = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0xD00000000000001FLL, 0x80000001009FBA50);
  v16 = (_QWORD *)((char *)v15 + v10[5]);
  *v16 = swift_getKeyPath(&unk_100995650);
  v17 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v16, v17, 0);
  *(_QWORD *)((char *)v15 + v10[6]) = 0x4059000000000000;
  *(_QWORD *)((char *)v15 + v10[7]) = 0x4030000000000000;
  sub_10007802C((uint64_t)v15, (uint64_t)v12, type metadata accessor for HorizontalABWithB1x1RatioLayout);
  sub_100080C0C((uint64_t)v12, (uint64_t)v9, type metadata accessor for HorizontalABWithB1x1RatioLayout);
  sub_100037768((uint64_t)v9, a1, &qword_100BD88B8);
  sub_10032818C(v2, (uint64_t)v6);
  sub_100021A14((uint64_t)v9, &qword_100BD88B8);
  v18 = sub_1000BA294(&qword_100BD8870);
  sub_1000787D4((uint64_t)v6, a1 + *(int *)(v18 + 44), &qword_100BD88B0);
  sub_1000215BC((uint64_t)v12, type metadata accessor for HorizontalABWithB1x1RatioLayout);
}

void sub_100327978(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  int v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a2;
  v3 = sub_1000BA294(&qword_100BD8888);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1000BA294(&qword_100BD8890);
  __chkstk_darwin(v45);
  v46 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - v17;
  v19 = sub_1000BA294(&qword_100BD8870);
  __chkstk_darwin(v19);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v44 - v23;
  sub_100327758((uint64_t)&v44 - v23);
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v25);
  *((_QWORD *)v5 + 1) = 0x4024000000000000;
  v5[16] = 0;
  sub_1000BA294(&qword_100BD8898);
  v26 = sub_1003284EC(a1);
  v27 = static Edge.Set.top.getter(v26);
  v28 = v27;
  v29 = static Edge.Set.bottom.getter(v27);
  v30 = Edge.Set.init(rawValue:)(0);
  v31 = Edge.Set.init(rawValue:)(v30);
  if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
    v30 = Edge.Set.init(rawValue:)(v30 | v28);
  v32 = Edge.Set.init(rawValue:)(v30);
  if (Edge.Set.init(rawValue:)(v32 & v29) != v29)
    LOBYTE(v30) = Edge.Set.init(rawValue:)(v30 | v29);
  v33 = EdgeInsets.init(_all:)(10.0);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_100037768((uint64_t)v5, (uint64_t)v9, &qword_100BD8888);
  v40 = &v9[*(int *)(v45 + 36)];
  *v40 = v30;
  *((double *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  sub_100021A14((uint64_t)v5, &qword_100BD8888);
  sub_1000787D4((uint64_t)v9, (uint64_t)v12, &qword_100BD8890);
  sub_1000787D4((uint64_t)v12, (uint64_t)v15, &qword_100BD8890);
  sub_1000787D4((uint64_t)v15, (uint64_t)v18, &qword_100BD8890);
  sub_100037768((uint64_t)v24, (uint64_t)v21, &qword_100BD8870);
  v41 = v46;
  sub_100037768((uint64_t)v18, v46, &qword_100BD8890);
  v42 = v47;
  sub_100037768((uint64_t)v21, v47, &qword_100BD8870);
  v43 = sub_1000BA294(&qword_100BD88A0);
  sub_100037768(v41, v42 + *(int *)(v43 + 48), &qword_100BD8890);
  sub_100021A14((uint64_t)v18, &qword_100BD8890);
  sub_100021A14((uint64_t)v24, &qword_100BD8870);
  sub_100021A14(v41, &qword_100BD8890);
  sub_100021A14((uint64_t)v21, &qword_100BD8870);
}

void sub_100327CC8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  CGFloat v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  CGRect v74;
  CGRect v75;

  v68 = a1;
  v70 = a3;
  v69 = type metadata accessor for NamedCoordinateSpace(0);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v66 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BlendMode(0);
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  v6 = __chkstk_darwin(v5);
  v63 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for MoonView.RenderBehavior(0, v6);
  v58 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for MoonView(0, v12);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1000BA294(&qword_100BD88C8);
  __chkstk_darwin(v56);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294(&qword_100BD88D0);
  __chkstk_darwin(v61);
  v57 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MoonComponentView(0);
  v21 = a2 + *(int *)(v20 + 48);
  v22 = type metadata accessor for MoonComponentViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v21 + *(int *)(v22 + 28), v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v9, enum case for MoonView.RenderBehavior.renderOnceAfterUpdate(_:), v59);
  v23 = (char *)(a2 + *(int *)(v20 + 56));
  v24 = *v23;
  v25 = *((_QWORD *)v23 + 1);
  v71 = v24;
  v72 = v25;
  v26 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v73, v26);
  MoonView.init(date:renderBehavior:forceUpdateFlag:)(v14, v9, v73);
  v28 = v63;
  v27 = v64;
  v29 = v65;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, enum case for BlendMode.screen(_:), v65);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(&v18[*(int *)(v56 + 36)], v28, v29);
  v30 = v60;
  v31 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v18, v16, v62);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v31);
  v33 = (uint64_t)v57;
  v34 = *(double *)(v21 + *(int *)(v22 + 36)) * 0.0174532925;
  v35 = static UnitPoint.center.getter(v32);
  v37 = v36;
  sub_100037768((uint64_t)v18, v33, &qword_100BD88C8);
  v38 = v33 + *(int *)(v61 + 36);
  *(double *)v38 = v34;
  *(double *)(v38 + 8) = v35;
  *(_QWORD *)(v38 + 16) = v37;
  sub_100021A14((uint64_t)v18, &qword_100BD88C8);
  if (qword_100BC20F0 != -1)
    swift_once(&qword_100BC20F0, sub_10043E348);
  v39 = v69;
  v40 = sub_1000AECD4(v69, (uint64_t)qword_100CAEB78);
  v42 = v66;
  v41 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v40, v39);
  v43 = GeometryProxy.frame<A>(in:)(v42, v39, &protocol witness table for NamedCoordinateSpace);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
  v50 = v43 + 1.0;
  v74.origin.x = v43;
  v74.origin.y = v45;
  v74.size.width = v47;
  v74.size.height = v49;
  v51 = CGRectGetWidth(v74) + -2.0;
  v75.origin.x = v43;
  v75.origin.y = v45;
  v75.size.width = v47;
  v75.size.height = v49;
  v52 = CGRectGetHeight(v75) + -2.0;
  v53 = v70;
  sub_100037768(v33, v70, &qword_100BD88D0);
  v54 = v53 + *(int *)(sub_1000BA294(&qword_100BD88D8) + 36);
  *(double *)v54 = v50;
  *(double *)(v54 + 8) = v45 + 1.0;
  *(CGFloat *)(v54 + 16) = v51;
  *(CGFloat *)(v54 + 24) = v52;
  *(_BYTE *)(v54 + 32) = 0;
  sub_100021A14(v33, &qword_100BD88D0);
}

void sub_10032818C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  int v29;
  int v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a2;
  v3 = type metadata accessor for MoonComponentView(0);
  v46 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v47 = v4;
  v49 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD8888);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD8890);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v45 - v21;
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v23);
  *((_QWORD *)v7 + 1) = 0x4024000000000000;
  v7[16] = 0;
  sub_1000BA294(&qword_100BD8898);
  v48 = a1;
  v24 = sub_1003284EC(a1);
  v25 = static Edge.Set.top.getter(v24);
  v26 = v25;
  v27 = static Edge.Set.bottom.getter(v25);
  v28 = Edge.Set.init(rawValue:)(0);
  v29 = Edge.Set.init(rawValue:)(v28);
  if (Edge.Set.init(rawValue:)(v29 & v26) != v26)
    v28 = Edge.Set.init(rawValue:)(v28 | v26);
  v30 = Edge.Set.init(rawValue:)(v28);
  if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
    LOBYTE(v28) = Edge.Set.init(rawValue:)(v28 | v27);
  v31 = EdgeInsets.init(_all:)(10.0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_100037768((uint64_t)v7, (uint64_t)v13, &qword_100BD8888);
  v38 = &v13[*(int *)(v8 + 36)];
  *v38 = v28;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_100021A14((uint64_t)v7, &qword_100BD8888);
  sub_1000787D4((uint64_t)v13, (uint64_t)v16, &qword_100BD8890);
  sub_1000787D4((uint64_t)v16, (uint64_t)v19, &qword_100BD8890);
  sub_1000787D4((uint64_t)v19, (uint64_t)v22, &qword_100BD8890);
  v39 = v49;
  sub_100080C0C(v48, v49, type metadata accessor for MoonComponentView);
  v40 = *(unsigned __int8 *)(v46 + 80);
  v41 = (v40 + 16) & ~v40;
  v42 = swift_allocObject(&unk_100B6DA68, v41 + v47, v40 | 7);
  sub_10007802C(v39, v42 + v41, type metadata accessor for MoonComponentView);
  sub_100037768((uint64_t)v22, (uint64_t)v10, &qword_100BD8890);
  v43 = v50;
  sub_100037768((uint64_t)v10, v50, &qword_100BD8890);
  v44 = (uint64_t (**)(uint64_t))(v43 + *(int *)(sub_1000BA294(&qword_100BD88C0) + 48));
  *v44 = sub_10032CA18;
  v44[1] = (uint64_t (*)(uint64_t))v42;
  swift_retain();
  sub_100021A14((uint64_t)v22, &qword_100BD8890);
  swift_release(v42);
  sub_100021A14((uint64_t)v10, &qword_100BD8890);
}

uint64_t sub_1003284EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for MoonComponentView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v18 = *(_QWORD *)(a1 + *(int *)(v5 + 48) + 40);
  v6 = v18;
  KeyPath = swift_getKeyPath(&unk_100995760);
  sub_100080C0C(a1, (uint64_t)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonComponentView);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_100B6DA40, v9 + v4, v8 | 7);
  sub_10007802C((uint64_t)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for MoonComponentView);
  swift_bridgeObjectRetain(v6);
  v11 = sub_1000BA294(&qword_100BD36B0);
  v12 = type metadata accessor for MoonComponentView.RowView(0);
  sub_10003D2DC(&qword_100BD8820, &qword_100BD36B0);
  v14 = v13;
  sub_10000F1C8(&qword_100BD88A8, type metadata accessor for MoonComponentView.RowView);
  return ForEach<>.init(_:id:content:)(&v18, KeyPath, sub_10032C9D4, v10, v11, v12, v14, &protocol witness table for String, v15);
}

void sub_100328668(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3[2];
  char v4;

  v2 = *(_OWORD *)(a1 + 16);
  v3[0] = *(_OWORD *)a1;
  v3[1] = v2;
  v4 = *(_BYTE *)(a1 + 32);
  sub_1003286A4(v3, a2);
}

void sub_1003286A4(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  double v9;
  __int128 v10;
  uint64_t v11;
  _BYTE v13[24];
  __int128 v14;

  v5 = type metadata accessor for MoonComponentViewModel(0);
  __chkstk_darwin(v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = *a1;
  sub_1002BDF38((uint64_t)(a1 + 1), (uint64_t)v13);
  v8 = type metadata accessor for MoonComponentView(0);
  sub_100080C0C(v2 + *(int *)(v8 + 48), (uint64_t)v7, type metadata accessor for MoonComponentViewModel);
  sub_1002BDF74((uint64_t)&v14);
  sub_1002BDF9C((uint64_t)v13);
  v9 = sub_100329038();
  *(_QWORD *)a2 = swift_getKeyPath(&unk_100995780);
  *(_BYTE *)(a2 + 8) = 0;
  v10 = a1[1];
  *(_OWORD *)(a2 + 16) = *a1;
  *(_OWORD *)(a2 + 32) = v10;
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 32);
  v11 = type metadata accessor for MoonComponentView.RowView(0);
  sub_10007802C((uint64_t)v7, a2 + *(int *)(v11 + 24), type metadata accessor for MoonComponentViewModel);
  *(double *)(a2 + *(int *)(v11 + 28)) = v9;
}

uint64_t sub_1003287B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for MoonComponentView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v22 = *(_QWORD *)(a1 + *(int *)(v9 + 48) + 40);
  v10 = v22;
  KeyPath = swift_getKeyPath(&unk_100995760);
  sub_100080C0C(a1, (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonComponentView);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(&unk_100B6DA18, v13 + v8, v12 | 7);
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  sub_10007802C((uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for MoonComponentView);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(v10);
  v15 = sub_1000BA294(&qword_100BD36B0);
  v16 = sub_1000BA294(&qword_100BD8818);
  sub_10003D2DC(&qword_100BD8820, &qword_100BD36B0);
  v18 = v17;
  sub_10003D2DC(&qword_100BD8828, &qword_100BD8818);
  return ForEach<>.init(_:id:content:)(&v22, KeyPath, sub_10032C980, v14, v15, v16, v18, &protocol witness table for String, v19);
}

void sub_10032894C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];
  char v10;

  v7 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v7;
  v10 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a4 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 0;
  v8 = sub_1000BA294(&qword_100BD8830);
  sub_1003289C8(v9, a2, a3, a4 + *(int *)(v8 + 44));
}

void sub_1003289C8(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_1000BA294(&qword_100BD8838);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - v12;
  *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v14);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v15 = sub_1000BA294(&qword_100BD8840);
  sub_100328AF4(a1, a2, a3, (uint64_t)&v13[*(int *)(v15 + 44)]);
  sub_100037768((uint64_t)v13, (uint64_t)v10, &qword_100BD8838);
  sub_100037768((uint64_t)v10, a4, &qword_100BD8838);
  v16 = a4 + *(int *)(sub_1000BA294(&qword_100BD8848) + 48);
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  sub_100021A14((uint64_t)v13, &qword_100BD8838);
  sub_100021A14((uint64_t)v10, &qword_100BD8838);
}

void sub_100328AF4(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD v87[3];

  v81 = a3;
  v74 = a2;
  v84 = a4;
  v5 = sub_1000BA294(&qword_100BD8850);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v83 = (uint64_t)&v71 - v9;
  v10 = type metadata accessor for Font.Leading(0);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  __chkstk_darwin(v10);
  v79 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle(0);
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PrimaryDividerStyle(0);
  v73 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Divider(0);
  v72 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BC6998);
  v71 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BD8858);
  __chkstk_darwin(v24);
  v80 = (uint64_t)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v85 = v7;
  v86 = (uint64_t)&v71 - v29;
  v82 = a1;
  v31 = *a1;
  v30 = a1[1];
  if (v28
    && (v31 == v74 ? (v32 = v30 == v28) : (v32 = 0),
        v32 || (v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v30, v74), (v27 & 1) != 0)))
  {
    v33 = 1;
    v35 = v75;
    v34 = v76;
    v36 = v86;
  }
  else
  {
    v37 = Divider.init()(v27);
    static DividerStyle<>.primary.getter(v37);
    sub_10000F1C8(&qword_100BC69B0, (uint64_t (*)(uint64_t))&type metadata accessor for Divider);
    v39 = v38;
    sub_10000F1C8(&qword_100BC69B8, (uint64_t (*)(uint64_t))&type metadata accessor for PrimaryDividerStyle);
    View.dividerStyle<A>(_:)(v17, v18, v15, v39, v40);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v17, v15);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v18);
    v36 = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v86, v23, v21);
    v33 = 0;
    v35 = v75;
    v34 = v76;
  }
  _s7Weather24LocationCompositionStateOwst_0(v36, v33, 1, v21);
  v87[0] = v31;
  v87[1] = v30;
  v41 = sub_100114EF8();
  swift_bridgeObjectRetain(v30);
  v42 = Text.init<A>(_:)(v87, &type metadata for String, v41);
  v44 = v43;
  v46 = v45;
  v48 = v47 & 1;
  v50 = v77;
  v49 = v78;
  v51 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v77 + 104))(v14, enum case for Font.TextStyle.subheadline(_:), v78);
  static Font.Weight.medium.getter(v51);
  v52 = static Font.system(_:weight:)(v14);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v49);
  v53 = v79;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v79, enum case for Font.Leading.tight(_:), v34);
  v54 = Font.leading(_:)(v53, v52);
  v55 = swift_release(v52);
  (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v53, v34, v55);
  v56 = Text.font(_:)(v54, v42, v44, v48, v46);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  swift_release(v54);
  LOBYTE(v54) = v60 & 1;
  sub_1000D31B4(v42, v44, v48);
  swift_bridgeObjectRelease();
  v63 = sub_100329038();
  v64 = v83;
  sub_1003291EC((uint64_t)v82, v83, v63);
  v65 = v86;
  v66 = v80;
  sub_100037768(v86, v80, &qword_100BD8858);
  v67 = (uint64_t)v85;
  sub_100037768(v64, (uint64_t)v85, &qword_100BD8850);
  v68 = v84;
  sub_100037768(v66, v84, &qword_100BD8858);
  v69 = sub_1000BA294(&qword_100BD8860);
  v70 = v68 + *(int *)(v69 + 48);
  *(_QWORD *)v70 = v56;
  *(_QWORD *)(v70 + 8) = v58;
  *(_BYTE *)(v70 + 16) = v54;
  *(_QWORD *)(v70 + 24) = v62;
  sub_100037768(v67, v68 + *(int *)(v69 + 64), &qword_100BD8850);
  sub_1000D55D4(v56, v58, v54);
  swift_bridgeObjectRetain(v62);
  sub_100021A14(v64, &qword_100BD8850);
  sub_100021A14(v65, &qword_100BD8858);
  sub_100021A14(v67, &qword_100BD8850);
  sub_1000D31B4(v56, v58, v54);
  swift_bridgeObjectRelease();
  sub_100021A14(v66, &qword_100BD8858);
}

double sub_100329038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  double result;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for MoonComponentView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorSchemeContrast(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - v10;
  sub_100114A94();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ColorSchemeContrast.increased(_:), v5);
  v12 = static ColorSchemeContrast.== infix(_:_:)(v11, v8);
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v13(v11, v5);
  sub_100080C0C(v1, (uint64_t)v4, type metadata accessor for MoonComponentView);
  if ((v12 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v4, type metadata accessor for MoonComponentView);
    return 1.0;
  }
  else
  {
    v15 = &v4[*(int *)(v2 + 24)];
    v16 = *(_QWORD *)v15;
    v17 = v15[8];
    sub_10008D47C(*(_QWORD *)v15, v17);
    sub_100109B54();
    v19 = v18;
    sub_1000B15F8(v16, v17);
    sub_1000215BC((uint64_t)v4, type metadata accessor for MoonComponentView);
    result = 0.27;
    if ((v19 & 1) != 0)
      return 1.0;
  }
  return result;
}

void sub_1003291EC(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v47 = a2;
  v5 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v5);
  v46 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BlendMode(0);
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  __chkstk_darwin(v7);
  v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Font.Leading(0);
  v9 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1000BA294(&qword_100BC3B90);
  v16 = __chkstk_darwin(v42);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v21 = *(unsigned __int8 *)(a1 + 32);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v15, enum case for Font.TextStyle.subheadline(_:), v12, v16);
  v22 = sub_100121DEC(v19, v20, v21);
  static Font.Weight.medium.getter(v22);
  v23 = static Font.system(_:weight:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v24 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Font.Leading.tight(_:), v41);
  v25 = Font.leading(_:)(v11, v23);
  v26 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v24, v26);
  v27 = Text.init(temporalString:font:)(v19, v20, v21, v25);
  v29 = v28;
  v31 = v30;
  LOBYTE(v23) = v32 & 1;
  v34 = v43;
  v33 = v44;
  v35 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, enum case for BlendMode.plusLighter(_:), v45);
  v36 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v37 = v33;
  v38 = (uint64_t)v46;
  v36(v46, v34, v35);
  sub_100080C0C(v38, (uint64_t)&v18[*(int *)(v42 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v18 = v27;
  *((_QWORD *)v18 + 1) = v29;
  v18[16] = v23;
  *((_QWORD *)v18 + 3) = v31;
  sub_1000D55D4(v27, v29, v23);
  swift_bridgeObjectRetain(v31);
  sub_1000215BC(v38, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v35);
  sub_1000D31B4(v27, v29, v23);
  swift_bridgeObjectRelease();
  v39 = v47;
  sub_100037768((uint64_t)v18, v47, &qword_100BC3B90);
  *(double *)(v39 + *(int *)(sub_1000BA294(&qword_100BD8850) + 36)) = a3;
  sub_100021A14((uint64_t)v18, &qword_100BC3B90);
}

void sub_10032951C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;

  GeometryProxy.size.getter(a1);
  v6 = v5 - sub_10032959C() + -3.0;
  *(_QWORD *)a3 = static HorizontalAlignment.leading.getter(v7);
  *(_QWORD *)(a3 + 8) = 0x4008000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  v8 = sub_1000BA294(&qword_100BD88E0);
  sub_1003296D8(a2, a3 + *(int *)(v8 + 44), v6);
}

double sub_10032959C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  double v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v18;

  v1 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + *(int *)(type metadata accessor for MoonComponentView(0) + 48);
  v5 = *(_QWORD *)(v4 + 8);
  v6 = 0.0;
  if (v5)
  {
    v7 = *(unsigned __int8 *)(v4 + 32);
    if (v7 != 255)
    {
      v8 = sub_100329B88(*(_QWORD *)v4, v5, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v7);
      v10 = v9;
      v12 = v11;
      v14 = v13 & 1;
      v15 = type metadata accessor for Text.WritingMode(0);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v15);
      Text.Measurements.size(of:in:writingMode:)(v8, v10, v14, v12, v3, INFINITY, INFINITY);
      v6 = v16;
      sub_1000D31B4(v8, v10, v14);
      swift_bridgeObjectRelease();
      sub_100021A14((uint64_t)v3, &qword_100BC39D0);
    }
  }
  return v6;
}

void sub_1003296D8(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;

  v6 = sub_1000BA294(&qword_100BD88E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - v10;
  v13 = static VerticalAlignment.center.getter(v12);
  sub_100329A54(a1, (uint64_t)&v62, a3);
  v14 = v62;
  LODWORD(v15) = v63;
  v17 = v64;
  v16 = v65;
  v60 = v66;
  v59 = v67;
  v58 = v68;
  v57 = v69;
  v56 = v70;
  v55 = v71;
  v54 = v72;
  v53 = v73;
  v18 = a1 + *(int *)(type metadata accessor for MoonComponentView(0) + 48);
  v19 = *(_QWORD *)(v18 + 8);
  if (!v19 || (v20 = *(unsigned __int8 *)(v18 + 32), v20 == 255))
  {
    v39 = sub_1000BA294(&qword_100BD88F0);
    v40 = (uint64_t)v11;
    v41 = 1;
  }
  else
  {
    v52 = v13;
    v45 = *(_QWORD *)v18;
    v21 = sub_100329B88(v45, v19, *(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 24), v20);
    v46 = v21;
    v48 = v16;
    v23 = v22;
    v25 = v24;
    v47 = v24;
    v51 = v14;
    v27 = v26 & 1;
    KeyPath = swift_getKeyPath(&unk_1009957A8);
    v49 = v17;
    v29 = KeyPath;
    v30 = swift_getKeyPath(&unk_1009957D8);
    v50 = v15;
    v15 = v30;
    v62 = v21;
    v63 = v23;
    LOBYTE(v64) = v27;
    v65 = v25;
    v66 = v29;
    v67 = 1;
    LOBYTE(v68) = 0;
    v69 = v30;
    v70 = 0x3FE0000000000000;
    v61[0] = v45;
    v61[1] = v19;
    v31 = sub_1000BA294(&qword_100BD8900);
    v32 = sub_10032CA68();
    v33 = sub_100114EF8();
    v34 = v32;
    v13 = v52;
    View.accessibilityLabel<A>(_:)(v61, v31, &type metadata for String, v34, v33);
    v35 = v23;
    v16 = v48;
    v36 = v27;
    v14 = v51;
    sub_1000D31B4(v46, v35, v36);
    v37 = v15;
    LOBYTE(v15) = v50;
    swift_release(v37);
    v38 = v29;
    v17 = v49;
    swift_release(v38);
    swift_bridgeObjectRelease();
    v39 = sub_1000BA294(&qword_100BD88F0);
    v40 = (uint64_t)v11;
    v41 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v40, v41, 1, v39);
  sub_100037768((uint64_t)v11, (uint64_t)v8, &qword_100BD88E8);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v14;
  *(_BYTE *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v60;
  *(_BYTE *)(a2 + 64) = v59;
  *(_QWORD *)(a2 + 72) = v58;
  *(_BYTE *)(a2 + 80) = v57;
  v42 = v55;
  *(_QWORD *)(a2 + 88) = v56;
  *(_QWORD *)(a2 + 96) = v42;
  *(_QWORD *)(a2 + 104) = v54;
  *(_BYTE *)(a2 + 112) = v53;
  v43 = sub_1000BA294(&qword_100BD88F8);
  sub_100037768((uint64_t)v8, a2 + *(int *)(v43 + 48), &qword_100BD88E8);
  swift_retain();
  sub_100021A14((uint64_t)v11, &qword_100BD88E8);
  sub_100021A14((uint64_t)v8, &qword_100BD88E8);
  swift_release(v16);
}

double sub_100329A54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  double result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  __int128 v22;

  v6 = type metadata accessor for MoonComponentView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  sub_100080C0C(a1, (uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonComponentView);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_100B6DA90, v10 + v8, v9 | 7);
  sub_10007802C((uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for MoonComponentView);
  static Alignment.center.getter(v12);
  _FrameLayout.init(width:height:alignment:)(*(_QWORD *)&a3, 0, *(_QWORD *)&a3, 0);
  v13 = v18;
  v14 = v19;
  v15 = v20;
  v16 = v21;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = sub_10032CA18;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v13;
  *(_BYTE *)(a2 + 40) = v14;
  *(_QWORD *)(a2 + 48) = v15;
  *(_BYTE *)(a2 + 56) = v16;
  result = *(double *)&v22;
  *(_OWORD *)(a2 + 64) = v22;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 1;
  return result;
}

uint64_t sub_100329B88(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v99[12];
  unsigned int v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[3];

  LODWORD(v106) = a5;
  v104 = a1;
  v105 = a4;
  v7 = type metadata accessor for Font.Leading(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v99[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v11);
  v13 = &v99[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for Font.TextStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = &v99[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v15 + 104))(v18, enum case for Font.TextStyle.subheadline(_:), v14, v16);
  v19 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v19);
  v20 = static Font.system(_:design:weight:)(v18, v13, 0, 1);
  v21 = (uint64_t)v13;
  v22 = v104;
  sub_100021A14(v21, &qword_100BC3B98);
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v18, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Font.Leading.tight(_:), v7);
  v23 = Font.leading(_:)(v10, v20);
  v24 = swift_release(v20);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v24);
  v25 = v22;
  v108 = v22;
  v109 = a2;
  v103 = a3;
  v112[0] = TemporalString.string.getter(a3, v105, v106);
  v112[1] = v26;
  v27 = sub_100114EF8();
  v28 = StringProtocol.localizedStandardRange<A>(of:)(v112, &type metadata for String, &type metadata for String, v27, v27);
  v30 = v29;
  LOBYTE(v10) = v31;
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v108 = v25;
    v109 = a2;
    swift_bridgeObjectRetain(a2);
    v90 = Text.init<A>(_:)(&v108, &type metadata for String, v27);
    v92 = v91;
    v94 = v93;
    v96 = v95 & 1;
    swift_retain();
    v89 = Text.font(_:)(v97, v90, v92, v96, v94);
    swift_release(v23);
    v86 = v90;
    v87 = v92;
    v88 = v96;
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    v102 = v30;
    v32 = v25;
    v33 = String.subscript.getter(15, v28);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    swift_bridgeObjectRelease();
    v108 = v33;
    v109 = v35;
    v110 = v37;
    v111 = v39;
    v101 = sub_10023E9AC();
    v40 = Text.init<A>(_:)(&v108, &type metadata for Substring, v101);
    v42 = v41;
    v44 = v43;
    v46 = v45 & 1;
    swift_retain();
    v48 = Text.font(_:)(v47, v40, v42, v46, v44);
    v50 = v49;
    LOBYTE(v35) = v51;
    v107 = v23;
    v53 = v52;
    swift_release(v107);
    v54 = v35 & 1;
    sub_1000D31B4(v40, v42, v46);
    swift_bridgeObjectRelease();
    swift_retain();
    v55 = v103;
    v56 = v105;
    v57 = v106;
    sub_100121DEC(v103, v105, v106);
    v58 = Text.init(temporalString:font:)(v55, v56, v57, v107);
    v60 = v59;
    v62 = v61 & 1;
    v64 = static Text.+ infix(_:_:)(v48, v50, v54, v53, v58, v59, v62, v63);
    v105 = v65;
    v106 = v64;
    v103 = v66;
    v100 = v67 & 1;
    sub_1000D31B4(v58, v60, v62);
    swift_bridgeObjectRelease();
    sub_1000D31B4(v48, v50, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain(a2);
    v108 = sub_1008687CC(v102, v32, a2);
    v109 = v68;
    v110 = v69;
    v111 = v70;
    v71 = Text.init<A>(_:)(&v108, &type metadata for Substring, v101);
    v73 = v72;
    v75 = v74;
    v77 = v76 & 1;
    swift_retain();
    v78 = Text.font(_:)(v107, v71, v73, v77, v75);
    v80 = v79;
    LOBYTE(v48) = v81;
    v83 = v82;
    swift_release(v107);
    sub_1000D31B4(v71, v73, v77);
    swift_bridgeObjectRelease();
    v85 = v105;
    v84 = v106;
    LOBYTE(v73) = v100;
    v104 = static Text.+ infix(_:_:)(v106, v105, v100, v103, v78, v80, v48 & 1, v83);
    sub_1000D31B4(v78, v80, v48 & 1);
    v23 = v107;
    swift_bridgeObjectRelease();
    v86 = v84;
    v87 = v85;
    v88 = v73;
    v89 = v104;
  }
  sub_1000D31B4(v86, v87, v88);
  swift_release(v23);
  swift_bridgeObjectRelease();
  return v89;
}

uint64_t sub_10032A0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, uint64_t a6@<D0>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  *(_QWORD *)a5 = swift_getKeyPath(&unk_1009955D0);
  *(_BYTE *)(a5 + 8) = 0;
  v12 = (int *)type metadata accessor for MoonComponentView(0);
  sub_1000787D4(a1, a5 + v12[5], &qword_100BCD380);
  v13 = a5 + v12[6];
  *(_QWORD *)v13 = swift_getKeyPath(&unk_1009955F8);
  *(_BYTE *)(v13 + 8) = 0;
  v14 = a5 + v12[7];
  *(_QWORD *)v14 = swift_getKeyPath(&unk_100995628);
  *(_BYTE *)(v14 + 8) = 0;
  v15 = (_QWORD *)(a5 + v12[8]);
  *v15 = swift_getKeyPath(&unk_100995650);
  v16 = sub_1000BA294(&qword_100BC37D8);
  sub_1000BA934(v16);
  v17 = (_QWORD *)(a5 + v12[9]);
  *v17 = swift_getKeyPath(&unk_100995680);
  v18 = sub_1000BA294(&qword_100BD86C0);
  sub_1000BA934(v18);
  sub_1000787D4(a2, a5 + v12[10], &qword_100BCD698);
  Text.Measurements.init()(v19);
  sub_10007802C(a3, a5 + v12[12], type metadata accessor for MoonComponentViewModel);
  v20 = a5 + v12[13];
  type metadata accessor for CGRect(0);
  v28 = sub_1000C0DD8(v21, v21, v22, v23, v24, v25, v26, v27, a6);
  *(_OWORD *)v20 = v38;
  *(_OWORD *)(v20 + 16) = v39;
  *(_QWORD *)(v20 + 32) = v40;
  v29 = a5 + v12[14];
  LOBYTE(v37) = a4;
  result = sub_1000C0DD8(v28, (uint64_t)&type metadata for Bool, v30, v31, v32, v33, v34, v35, v37);
  *(_BYTE *)v29 = v38;
  *(_QWORD *)(v29 + 8) = *((_QWORD *)&v38 + 1);
  return result;
}

void sub_10032A270(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t OpaqueTypeConformance2;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  _QWORD __src[14];

  v2 = v1;
  v101 = a1;
  v3 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v3);
  v89 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for AccessibilityChildBehavior(0);
  v93 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v92 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BD89A8);
  __chkstk_darwin(v6);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1000BA294(&qword_100BD89B0);
  __chkstk_darwin(v97);
  v91 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1000BA294(&qword_100BD89B8);
  v99 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v98 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BD89C0);
  __chkstk_darwin(v11);
  v90 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v96 = (char *)&v82 - v14;
  __chkstk_darwin(v15);
  v100 = (uint64_t)&v82 - v16;
  v86 = type metadata accessor for PrimaryDividerStyle(0);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Divider(0);
  v84 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1000BA294(&qword_100BC6998);
  v83 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BD8858);
  __chkstk_darwin(v24);
  v94 = (uint64_t)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v102 = (uint64_t)&v82 - v27;
  v28 = type metadata accessor for MoonComponentView.RowView(0);
  v29 = *(_QWORD **)(v2 + *(int *)(v28 + 24) + 40);
  if (!v29[2])
    goto LABEL_8;
  v31 = v29[4];
  v30 = v29[5];
  v33 = *(_QWORD *)(v2 + 16);
  v32 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain(v30);
  if (!v30)
    goto LABEL_8;
  if (v33 == v31 && v30 == v32)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v32, v31);
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
LABEL_10:
    v43 = 1;
    v44 = (uint64_t)v90;
    v45 = v89;
    v46 = v88;
    v41 = v102;
    v42 = v87;
    goto LABEL_11;
  }
LABEL_8:
  v36 = Divider.init()(v28);
  static DividerStyle<>.primary.getter(v36);
  sub_10000F1C8(&qword_100BC69B0, (uint64_t (*)(uint64_t))&type metadata accessor for Divider);
  v38 = v37;
  sub_10000F1C8(&qword_100BC69B8, (uint64_t (*)(uint64_t))&type metadata accessor for PrimaryDividerStyle);
  v39 = v86;
  View.dividerStyle<A>(_:)(v18, v19, v86, v38, v40);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v18, v39);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v19);
  v41 = v102;
  v42 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v102, v23, v87);
  v43 = 0;
  v44 = (uint64_t)v90;
  v45 = v89;
  v46 = v88;
LABEL_11:
  _s7Weather24LocationCompositionStateOwst_0(v41, v43, 1, v42);
  v47 = *(_QWORD *)v2;
  v48 = *(_BYTE *)(v2 + 8);
  sub_10008D47C(*(_QWORD *)v2, v48);
  sub_10010BCB4();
  v50 = (v49 & 1) == 0;
  v51 = sub_1000B15F8(v47, v48);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v51);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v52 = sub_1000BA294(&qword_100BD89C8);
  sub_10032AA24(v2, v50, (uint64_t)&v8[*(int *)(v52 + 44)]);
  v54 = static Alignment.center.getter(v53);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, 0, 1, 0, 1, 0, 1, 0x4034000000000000, 0, 0, 1, 0, 1, v54, v55);
  v56 = v91;
  sub_100037768((uint64_t)v8, v91, &qword_100BD89A8);
  v57 = v97;
  memcpy((void *)(v56 + *(int *)(v97 + 36)), __src, 0x70uLL);
  sub_100021A14((uint64_t)v8, &qword_100BD89A8);
  v58 = v92;
  static AccessibilityChildBehavior.ignore.getter(v59);
  v60 = sub_10032D4C4();
  v61 = v98;
  View.accessibilityElement(children:)(v58, v57, v60);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v58, v95);
  sub_100021A14(v56, &qword_100BD89B0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(2, 2);
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v62);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v2 + 16));
  v63._countAndFlagsBits = 8250;
  v63._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v63);
  v64._countAndFlagsBits = TemporalString.string.getter(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48));
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v64);
  swift_bridgeObjectRelease();
  v65._countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v65);
  v66 = LocalizedStringKey.init(stringInterpolation:)(v45);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v103[0] = v57;
  v103[1] = v60;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v103, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v74 = v70 & 1;
  v75 = (uint64_t)v96;
  View.accessibilityLabel(_:)(v66, v68, v74, v72, v46, OpaqueTypeConformance2);
  swift_bridgeObjectRelease();
  v76 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v99 + 8))(v61, v46, v76);
  v77 = v100;
  sub_1000787D4(v75, v100, &qword_100BD89C0);
  v78 = v102;
  v79 = v94;
  sub_100037768(v102, v94, &qword_100BD8858);
  sub_100037768(v77, v44, &qword_100BD89C0);
  v80 = v101;
  sub_100037768(v79, v101, &qword_100BD8858);
  v81 = sub_1000BA294(&qword_100BD89E0);
  sub_100037768(v44, v80 + *(int *)(v81 + 48), &qword_100BD89C0);
  sub_100021A14(v77, &qword_100BD89C0);
  sub_100021A14(v78, &qword_100BD8858);
  sub_100021A14(v44, &qword_100BD89C0);
  sub_100021A14(v79, &qword_100BD8858);
}

double sub_10032AA24@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  double result;
  _BYTE v40[12];
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  int v46;
  _OWORD v47[2];
  char v48;

  v46 = a2;
  v5 = sub_1000BA294(&qword_100BD8850);
  __chkstk_darwin(v5);
  v45 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v44 = &v40[-v8];
  v43 = type metadata accessor for Font.Leading(0);
  v9 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for Font.TextStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v40[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)&v47[0] = *(_QWORD *)(a1 + 16);
  *((_QWORD *)&v47[0] + 1) = v16;
  v17 = sub_100114EF8();
  swift_bridgeObjectRetain(v16);
  v18 = Text.init<A>(_:)(v47, &type metadata for String, v17);
  v20 = v19;
  v42 = v21;
  v41 = v22 & 1;
  v23 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for Font.TextStyle.subheadline(_:), v12);
  static Font.Weight.medium.getter(v23);
  v24 = static Font.system(_:weight:)(v15);
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  v25 = v43;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Font.Leading.tight(_:), v43);
  v26 = Font.leading(_:)(v11, v24);
  v27 = swift_release(v24);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v25, v27);
  LOBYTE(v25) = v41;
  v28 = Text.font(_:)(v26, v18, v20, v41, v42);
  v30 = v29;
  LOBYTE(v24) = v31;
  v43 = v32;
  swift_release(v26);
  LOBYTE(v26) = v24 & 1;
  sub_1000D31B4(v18, v20, v25);
  swift_bridgeObjectRelease();
  v33 = *(_OWORD *)(a1 + 32);
  v47[0] = *(_OWORD *)(a1 + 16);
  v47[1] = v33;
  v48 = *(_BYTE *)(a1 + 48);
  v34 = type metadata accessor for MoonComponentView.RowView(0);
  v35 = v44;
  sub_1003291EC((uint64_t)v47, (uint64_t)v44, *(double *)(a1 + *(int *)(v34 + 28)));
  v36 = v45;
  sub_100037768((uint64_t)v35, (uint64_t)v45, &qword_100BD8850);
  *(_QWORD *)a3 = v28;
  *(_QWORD *)(a3 + 8) = v30;
  *(_BYTE *)(a3 + 16) = v24 & 1;
  v37 = v43;
  *(_QWORD *)(a3 + 24) = v43;
  *(_BYTE *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 33) = v46;
  *(_QWORD *)(a3 + 40) = 0x4024000000000000;
  *(_BYTE *)(a3 + 48) = 0;
  v38 = sub_1000BA294(&qword_100BD89E8);
  sub_100037768((uint64_t)v36, a3 + *(int *)(v38 + 64), &qword_100BD8850);
  sub_1000D55D4(v28, v30, v26);
  swift_bridgeObjectRetain(v37);
  sub_100021A14((uint64_t)v35, &qword_100BD8850);
  sub_100021A14((uint64_t)v36, &qword_100BD8850);
  sub_1000D31B4(v28, v30, v26);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t *sub_10032AD58(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, __n128);
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  char *v69;
  char *v70;
  int *v72;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *v4 = v7;
    *((_BYTE *)v4 + 8) = v8;
    v9 = a3[5];
    v10 = (uint64_t *)((char *)v4 + v9);
    v11 = (_QWORD *)(a2 + v9);
    v12 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      v13 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_10008D47C(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    v17[8] = v20;
    v21 = a3[7];
    v22 = (char *)v4 + v21;
    v23 = a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = *(_BYTE *)(v23 + 8);
    sub_10008D47C(*(_QWORD *)v23, v25);
    *(_QWORD *)v22 = v24;
    v22[8] = v25;
    v26 = a3[8];
    v27 = (uint64_t *)((char *)v4 + v26);
    v28 = (_QWORD *)(a2 + v26);
    v29 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v28) == 1)
    {
      v30 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
      v31 = 1;
    }
    else
    {
      *v27 = *v28;
      swift_retain();
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v29, v31);
    v32 = a3[9];
    v33 = (uint64_t *)((char *)v4 + v32);
    v34 = (_QWORD *)(a2 + v32);
    v35 = sub_1000BA294(&qword_100BD86C0);
    if (swift_getEnumCaseMultiPayload(v34) == 1)
    {
      v36 = type metadata accessor for ForegroundEffect(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36))
      {
        v37 = sub_1000BA294(&qword_100BC5B30);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        v38 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
        v38 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v36);
      }
    }
    else
    {
      *v33 = *v34;
      swift_retain();
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v33, v35, v38);
    v39 = a3[10];
    v40 = (uint64_t *)((char *)v4 + v39);
    v41 = (_QWORD *)(a2 + v39);
    v42 = sub_1000BA294(&qword_100C09EB0);
    if (swift_getEnumCaseMultiPayload(v41) == 1)
    {
      v43 = type metadata accessor for ScenePhase(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
      v44 = 1;
    }
    else
    {
      *v40 = *v41;
      swift_retain();
      v44 = 0;
    }
    swift_storeEnumTagMultiPayload(v40, v42, v44);
    v45 = a3[11];
    v46 = (char *)v4 + v45;
    v47 = a2 + v45;
    v48 = type metadata accessor for Text.Measurements(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    v49 = a3[12];
    v50 = (char *)v4 + v49;
    v51 = a2 + v49;
    v52 = *(_QWORD *)(a2 + v49 + 8);
    *(_QWORD *)v50 = *(_QWORD *)(a2 + v49);
    *((_QWORD *)v50 + 1) = v52;
    v53 = *(unsigned __int8 *)(a2 + v49 + 32);
    swift_bridgeObjectRetain(v52);
    v72 = a3;
    if (v53 == 255)
    {
      *((_OWORD *)v50 + 1) = *(_OWORD *)(v51 + 16);
      v50[32] = *(_BYTE *)(v51 + 32);
    }
    else
    {
      v54 = *(_QWORD *)(v51 + 16);
      v55 = *(_QWORD *)(v51 + 24);
      sub_100121DEC(v54, v55, v53);
      *((_QWORD *)v50 + 2) = v54;
      *((_QWORD *)v50 + 3) = v55;
      v50[32] = v53;
    }
    v56 = *(_QWORD *)(v51 + 40);
    *((_QWORD *)v50 + 5) = v56;
    v57 = (int *)type metadata accessor for MoonComponentViewModel(0);
    v58 = v57[7];
    v59 = &v50[v58];
    v60 = v51 + v58;
    v61 = type metadata accessor for Date(0);
    v62 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v61 - 8) + 16);
    v63 = swift_bridgeObjectRetain(v56);
    v62(v59, v60, v61, v63);
    v50[v57[8]] = *(_BYTE *)(v51 + v57[8]);
    *(_QWORD *)&v50[v57[9]] = *(_QWORD *)(v51 + v57[9]);
    v64 = v72[13];
    v65 = v72[14];
    v66 = (char *)v4 + v64;
    v67 = a2 + v64;
    v68 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *((_OWORD *)v66 + 1) = v68;
    *((_QWORD *)v66 + 4) = *(_QWORD *)(v67 + 32);
    v69 = (char *)v4 + v65;
    v70 = (char *)(a2 + v65);
    *v69 = *v70;
    *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
    swift_retain();
  }
  swift_retain();
  return v4;
}

double sub_10032B198(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  double result;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = (_QWORD *)(a1 + a2[5]);
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release(*v4);
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  v6 = (_QWORD *)(a1 + a2[8]);
  sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release(*v6);
  }
  v8 = (_QWORD *)(a1 + a2[9]);
  sub_1000BA294(&qword_100BD86C0);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v9 = type metadata accessor for ForegroundEffect(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release(*v8);
  }
  v10 = (_QWORD *)(a1 + a2[10]);
  sub_1000BA294(&qword_100C09EB0);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v11 = type metadata accessor for ScenePhase(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release(*v10);
  }
  v12 = a1 + a2[11];
  v13 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = a1 + a2[12];
  swift_bridgeObjectRelease();
  v15 = *(unsigned __int8 *)(v14 + 32);
  if (v15 != 255)
    sub_100121E04(*(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), v15);
  swift_bridgeObjectRelease();
  v16 = v14 + *(int *)(type metadata accessor for MoonComponentViewModel(0) + 28);
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  swift_release(*(_QWORD *)(a1 + a2[13] + 32));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[14] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10032B3E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  int *v70;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    *v9 = *v10;
    swift_retain();
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_10008D47C(*(_QWORD *)v16, v18);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v18;
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10008D47C(*(_QWORD *)v21, v23);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  v24 = a3[8];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v26) == 1)
  {
    v28 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
    v29 = 1;
  }
  else
  {
    *v25 = *v26;
    swift_retain();
    v29 = 0;
  }
  swift_storeEnumTagMultiPayload(v25, v27, v29);
  v30 = a3[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = sub_1000BA294(&qword_100BD86C0);
  if (swift_getEnumCaseMultiPayload(v32) == 1)
  {
    v34 = type metadata accessor for ForegroundEffect(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34))
    {
      v35 = sub_1000BA294(&qword_100BC5B30);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      v36 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v36 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v34);
    }
  }
  else
  {
    *v31 = *v32;
    swift_retain();
    v36 = 0;
  }
  swift_storeEnumTagMultiPayload(v31, v33, v36);
  v37 = a3[10];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = sub_1000BA294(&qword_100C09EB0);
  if (swift_getEnumCaseMultiPayload(v39) == 1)
  {
    v41 = type metadata accessor for ScenePhase(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v38, v39, v41);
    v42 = 1;
  }
  else
  {
    *v38 = *v39;
    swift_retain();
    v42 = 0;
  }
  swift_storeEnumTagMultiPayload(v38, v40, v42);
  v43 = a3[11];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[12];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)(a2 + v47 + 8);
  *(_QWORD *)v48 = *(_QWORD *)(a2 + v47);
  *(_QWORD *)(v48 + 8) = v50;
  v51 = *(unsigned __int8 *)(a2 + v47 + 32);
  swift_bridgeObjectRetain(v50);
  v70 = a3;
  if (v51 == 255)
  {
    *(_OWORD *)(v48 + 16) = *(_OWORD *)(v49 + 16);
    *(_BYTE *)(v48 + 32) = *(_BYTE *)(v49 + 32);
  }
  else
  {
    v52 = *(_QWORD *)(v49 + 16);
    v53 = *(_QWORD *)(v49 + 24);
    sub_100121DEC(v52, v53, v51);
    *(_QWORD *)(v48 + 16) = v52;
    *(_QWORD *)(v48 + 24) = v53;
    *(_BYTE *)(v48 + 32) = v51;
  }
  v54 = *(_QWORD *)(v49 + 40);
  *(_QWORD *)(v48 + 40) = v54;
  v55 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v56 = v55[7];
  v57 = v48 + v56;
  v58 = v49 + v56;
  v59 = type metadata accessor for Date(0);
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v59 - 8) + 16);
  v61 = swift_bridgeObjectRetain(v54);
  v60(v57, v58, v59, v61);
  *(_BYTE *)(v48 + v55[8]) = *(_BYTE *)(v49 + v55[8]);
  *(_QWORD *)(v48 + v55[9]) = *(_QWORD *)(v49 + v55[9]);
  v62 = v70[13];
  v63 = v70[14];
  v64 = a1 + v62;
  v65 = a2 + v62;
  v66 = *(_OWORD *)(v65 + 16);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *(_OWORD *)(v64 + 16) = v66;
  *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
  v67 = a1 + v63;
  v68 = a2 + v63;
  *(_BYTE *)v67 = *(_BYTE *)v68;
  *(_QWORD *)(v67 + 8) = *(_QWORD *)(v68 + 8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10032B7FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  __int128 *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[5];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_100021A14(a1 + v10, &qword_100BC68C8);
    v13 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      *v11 = *v12;
      swift_retain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_BYTE *)(v18 + 8);
  sub_10008D47C(*(_QWORD *)v18, v20);
  v21 = *(_QWORD *)v17;
  v22 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v20;
  sub_1000B15F8(v21, v22);
  v23 = a3[7];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_BYTE *)(v25 + 8);
  sub_10008D47C(*(_QWORD *)v25, v27);
  v28 = *(_QWORD *)v24;
  v29 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v27;
  sub_1000B15F8(v28, v29);
  if (a1 != a2)
  {
    v30 = a3[8];
    v31 = (_QWORD *)(a1 + v30);
    v32 = (_QWORD *)(a2 + v30);
    sub_100021A14(a1 + v30, &qword_100BC37D8);
    v33 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v32) == 1)
    {
      v34 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = 1;
    }
    else
    {
      *v31 = *v32;
      swift_retain();
      v35 = 0;
    }
    swift_storeEnumTagMultiPayload(v31, v33, v35);
    v36 = a3[9];
    v37 = (_QWORD *)(a1 + v36);
    v38 = (_QWORD *)(a2 + v36);
    sub_100021A14(a1 + v36, &qword_100BD86C0);
    v39 = sub_1000BA294(&qword_100BD86C0);
    if (swift_getEnumCaseMultiPayload(v38) == 1)
    {
      v40 = type metadata accessor for ForegroundEffect(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40))
      {
        v41 = sub_1000BA294(&qword_100BC5B30);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        v42 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v37, v38, v40);
        v42 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v40);
      }
    }
    else
    {
      *v37 = *v38;
      swift_retain();
      v42 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v39, v42);
    v43 = a3[10];
    v44 = (_QWORD *)(a1 + v43);
    v45 = (_QWORD *)(a2 + v43);
    sub_100021A14(a1 + v43, &qword_100C09EB0);
    v46 = sub_1000BA294(&qword_100C09EB0);
    if (swift_getEnumCaseMultiPayload(v45) == 1)
    {
      v47 = type metadata accessor for ScenePhase(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
      v48 = 1;
    }
    else
    {
      *v44 = *v45;
      swift_retain();
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v44, v46, v48);
  }
  v49 = a3[11];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
  v53 = a3[12];
  v54 = a1 + v53;
  v55 = a2 + v53;
  *(_QWORD *)v54 = *(_QWORD *)(a2 + v53);
  v56 = *(_QWORD *)(a2 + v53 + 8);
  *(_QWORD *)(v54 + 8) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease();
  v57 = (__int128 *)(v54 + 16);
  v58 = (__int128 *)(v55 + 16);
  v59 = *(unsigned __int8 *)(v55 + 32);
  if (*(unsigned __int8 *)(v54 + 32) == 255)
  {
    if (v59 == 255)
    {
      v68 = *v58;
      *(_BYTE *)(v54 + 32) = *(_BYTE *)(v55 + 32);
      *v57 = v68;
    }
    else
    {
      v65 = *(_QWORD *)(v55 + 16);
      v66 = *(_QWORD *)(v55 + 24);
      sub_100121DEC(v65, v66, *(_BYTE *)(v55 + 32));
      *(_QWORD *)(v54 + 16) = v65;
      *(_QWORD *)(v54 + 24) = v66;
      *(_BYTE *)(v54 + 32) = v59;
    }
  }
  else if (v59 == 255)
  {
    sub_1002BD858(v54 + 16);
    v67 = *(_BYTE *)(v55 + 32);
    *v57 = *v58;
    *(_BYTE *)(v54 + 32) = v67;
  }
  else
  {
    v60 = *(_QWORD *)(v55 + 16);
    v61 = *(_QWORD *)(v55 + 24);
    sub_100121DEC(v60, v61, *(_BYTE *)(v55 + 32));
    v62 = *(_QWORD *)(v54 + 16);
    v63 = *(_QWORD *)(v54 + 24);
    *(_QWORD *)(v54 + 16) = v60;
    *(_QWORD *)(v54 + 24) = v61;
    v64 = *(_BYTE *)(v54 + 32);
    *(_BYTE *)(v54 + 32) = v59;
    sub_100121E04(v62, v63, v64);
  }
  v69 = *(_QWORD *)(v55 + 40);
  *(_QWORD *)(v54 + 40) = v69;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRelease();
  v70 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v71 = v70[7];
  v72 = v54 + v71;
  v73 = v55 + v71;
  v74 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
  *(_BYTE *)(v54 + v70[8]) = *(_BYTE *)(v55 + v70[8]);
  *(_QWORD *)(v54 + v70[9]) = *(_QWORD *)(v55 + v70[9]);
  v75 = a3[13];
  v76 = (_QWORD *)(a1 + v75);
  v77 = (_QWORD *)(a2 + v75);
  *v76 = *v77;
  v76[1] = v77[1];
  v76[2] = v77[2];
  v76[3] = v77[3];
  v78 = v76[4];
  v76[4] = v77[4];
  swift_retain();
  swift_release(v78);
  v79 = a3[14];
  v80 = a1 + v79;
  v81 = a2 + v79;
  *(_BYTE *)v80 = *(_BYTE *)v81;
  v82 = *(_QWORD *)(v80 + 8);
  *(_QWORD *)(v80 + 8) = *(_QWORD *)(v81 + 8);
  swift_retain();
  swift_release(v82);
  return a1;
}

uint64_t sub_10032BD14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v19) == 1)
  {
    v21 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload(v18, v20, 1);
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v22 = a3[9];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_1000BA294(&qword_100BD86C0);
  if (swift_getEnumCaseMultiPayload(v24) == 1)
  {
    v26 = type metadata accessor for ForegroundEffect(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26))
    {
      v27 = sub_1000BA294(&qword_100BC5B30);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v26);
    }
    swift_storeEnumTagMultiPayload(v23, v25, 1);
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v28 = a3[10];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = sub_1000BA294(&qword_100C09EB0);
  if (swift_getEnumCaseMultiPayload(v30) == 1)
  {
    v32 = type metadata accessor for ScenePhase(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
    swift_storeEnumTagMultiPayload(v29, v31, 1);
  }
  else
  {
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
  v37 = a3[12];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(a2 + v37 + 16);
  *(_OWORD *)v38 = *(_OWORD *)(a2 + v37);
  *(_OWORD *)(v38 + 16) = v40;
  *(_BYTE *)(v38 + 32) = *(_BYTE *)(a2 + v37 + 32);
  *(_QWORD *)(v38 + 40) = *(_QWORD *)(a2 + v37 + 40);
  v41 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v42 = v41[7];
  v43 = v38 + v42;
  v44 = v39 + v42;
  v45 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
  *(_BYTE *)(v38 + v41[8]) = *(_BYTE *)(v39 + v41[8]);
  *(_QWORD *)(v38 + v41[9]) = *(_QWORD *)(v39 + v41[9]);
  v46 = a3[13];
  v47 = a3[14];
  v48 = a1 + v46;
  v49 = a2 + v46;
  v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  return a1;
}

uint64_t sub_10032C08C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = a3[5];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    sub_100021A14(a1 + v10, &qword_100BC68C8);
    v13 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = *v17;
  LOBYTE(v17) = *((_BYTE *)v17 + 8);
  v19 = *(_QWORD *)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = (_BYTE)v17;
  sub_1000B15F8(v19, v20);
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  v25 = *(_QWORD *)v22;
  v26 = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = (_BYTE)v23;
  sub_1000B15F8(v25, v26);
  if ((uint64_t *)a1 != a2)
  {
    v27 = a3[8];
    v28 = (void *)(a1 + v27);
    v29 = (char *)a2 + v27;
    sub_100021A14(a1 + v27, &qword_100BC37D8);
    v30 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v29) == 1)
    {
      v31 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload(v28, v30, 1);
    }
    else
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    v32 = a3[9];
    v33 = (void *)(a1 + v32);
    v34 = (char *)a2 + v32;
    sub_100021A14(a1 + v32, &qword_100BD86C0);
    v35 = sub_1000BA294(&qword_100BD86C0);
    if (swift_getEnumCaseMultiPayload(v34) == 1)
    {
      v36 = type metadata accessor for ForegroundEffect(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36))
      {
        v37 = sub_1000BA294(&qword_100BC5B30);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v34, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v36);
      }
      swift_storeEnumTagMultiPayload(v33, v35, 1);
    }
    else
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    v38 = a3[10];
    v39 = (void *)(a1 + v38);
    v40 = (char *)a2 + v38;
    sub_100021A14(a1 + v38, &qword_100C09EB0);
    v41 = sub_1000BA294(&qword_100C09EB0);
    if (swift_getEnumCaseMultiPayload(v40) == 1)
    {
      v42 = type metadata accessor for ScenePhase(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload(v39, v41, 1);
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
  }
  v43 = a3[11];
  v44 = a1 + v43;
  v45 = (uint64_t)a2 + v43;
  v46 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[12];
  v48 = a1 + v47;
  v49 = (uint64_t)a2 + v47;
  v50 = *(uint64_t *)((char *)a2 + v47 + 8);
  *(_QWORD *)v48 = *(uint64_t *)((char *)a2 + v47);
  *(_QWORD *)(v48 + 8) = v50;
  swift_bridgeObjectRelease();
  v51 = (_OWORD *)(v49 + 16);
  v52 = *(unsigned __int8 *)(v48 + 32);
  if (v52 == 255)
    goto LABEL_22;
  v53 = *(unsigned __int8 *)(v49 + 32);
  if (v53 == 255)
  {
    sub_1002BD858(v48 + 16);
LABEL_22:
    *(_OWORD *)(v48 + 16) = *v51;
    *(_BYTE *)(v48 + 32) = *(_BYTE *)(v49 + 32);
    goto LABEL_23;
  }
  v54 = *(_QWORD *)(v48 + 16);
  v55 = *(_QWORD *)(v48 + 24);
  *(_OWORD *)(v48 + 16) = *v51;
  *(_BYTE *)(v48 + 32) = v53;
  sub_100121E04(v54, v55, v52);
LABEL_23:
  *(_QWORD *)(v48 + 40) = *(_QWORD *)(v49 + 40);
  swift_bridgeObjectRelease();
  v56 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v57 = v56[7];
  v58 = v48 + v57;
  v59 = v49 + v57;
  v60 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v58, v59, v60);
  *(_BYTE *)(v48 + v56[8]) = *(_BYTE *)(v49 + v56[8]);
  *(_QWORD *)(v48 + v56[9]) = *(_QWORD *)(v49 + v56[9]);
  v61 = a3[13];
  v62 = a1 + v61;
  v63 = (uint64_t)a2 + v61;
  v64 = *(_OWORD *)(v63 + 16);
  *(_OWORD *)v62 = *(_OWORD *)v63;
  *(_OWORD *)(v62 + 16) = v64;
  v65 = *(_QWORD *)(v62 + 32);
  *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
  swift_release(v65);
  v66 = a3[14];
  v67 = a1 + v66;
  v68 = (uint64_t)a2 + v66;
  *(_BYTE *)v67 = *(_BYTE *)v68;
  v69 = *(_QWORD *)(v67 + 8);
  *(_QWORD *)(v67 + 8) = *(_QWORD *)(v68 + 8);
  swift_release(v69);
  return a1;
}

uint64_t sub_10032C4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10032C504);
}

void sub_10032C504(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  sub_1000BA294(&qword_100BCD380);
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = a3[5];
  }
  else
  {
    sub_1000BA294((uint64_t *)&unk_100C09CA0);
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v8 = a3[8];
    }
    else
    {
      sub_1000BA294(&qword_100BD86C8);
      sub_100088FF0();
      if (v11)
      {
        v7 = v12;
        v8 = a3[9];
      }
      else
      {
        sub_1000BA294(&qword_100BCD698);
        sub_100088FF0();
        if (v13)
        {
          v7 = v14;
          v8 = a3[10];
        }
        else
        {
          type metadata accessor for Text.Measurements(0);
          sub_100088FF0();
          if (v15)
          {
            v7 = v16;
            v8 = a3[11];
          }
          else
          {
            sub_1000DB8F0();
            sub_100088FF0();
            if (!v17)
            {
              sub_100079F70();
              return;
            }
            v7 = v18;
            v8 = a3[12];
          }
        }
      }
    }
  }
  sub_1000B250C(a1 + v8, a2, v7);
}

uint64_t sub_10032C610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10032C61C);
}

void sub_10032C61C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  sub_1000BA294(&qword_100BCD380);
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = a4[5];
  }
  else
  {
    sub_1000BA294((uint64_t *)&unk_100C09CA0);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v9 = a4[8];
    }
    else
    {
      sub_1000BA294(&qword_100BD86C8);
      sub_10009D2E8();
      if (v12)
      {
        v8 = v13;
        v9 = a4[9];
      }
      else
      {
        sub_1000BA294(&qword_100BCD698);
        sub_10009D2E8();
        if (v14)
        {
          v8 = v15;
          v9 = a4[10];
        }
        else
        {
          type metadata accessor for Text.Measurements(0);
          sub_10009D2E8();
          if (v16)
          {
            v8 = v17;
            v9 = a4[11];
          }
          else
          {
            sub_1000DB8F0();
            sub_10009D2E8();
            if (!v18)
            {
              *(_QWORD *)(a1 + a4[13] + 32) = a2;
              sub_100079F70();
              return;
            }
            v8 = v19;
            v9 = a4[12];
          }
        }
      }
    }
  }
  sub_1000987C4(a1 + v9, a2, a2, v8);
}

uint64_t sub_10032C718(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB12F8, 1);
}

double sub_10032C72C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MoonComponentView(0) - 8) + 80);
  return sub_10032714C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_10032C77C(uint64_t a1)
{
  return sub_10032CA24(a1, (uint64_t (*)(uint64_t))sub_10032951C);
}

unint64_t sub_10032C788()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD87D8;
  if (!qword_100BD87D8)
  {
    v1 = sub_100075EB0(&qword_100BD87B8);
    sub_10003D2DC(&qword_100BD87E0, &qword_100BD87E8);
    sub_10003D2DC(&qword_100BD87F0, &qword_100BD87F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD87D8);
  }
  return result;
}

uint64_t sub_10032C824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v4 = type metadata accessor for MoonComponentView(0);
  swift_bridgeObjectRelease();
  sub_100099474();
  v5 = sub_1000BA294(&qword_100BC68C8);
  if (sub_100098814(v5) == 1)
  {
    v6 = type metadata accessor for ColorSchemeContrast(0);
    sub_1000987E0(v6);
  }
  else
  {
    sub_1000B4394();
  }
  sub_1000C47A8();
  v7 = sub_1000BA294(&qword_100BC37D8);
  if (sub_100098814(v7) == 1)
  {
    v8 = type metadata accessor for ContentSizeCategory(0);
    sub_1000987E0(v8);
  }
  else
  {
    sub_1000B4394();
  }
  v9 = sub_1000BA294(&qword_100BD86C0);
  if (sub_100098814(v9) == 1)
  {
    v10 = type metadata accessor for ForegroundEffect(0);
    if (!sub_1000BC04C(v10))
      sub_100098C04();
  }
  else
  {
    sub_1000B4394();
  }
  v11 = v2 + *(int *)(v4 + 40);
  v12 = sub_1000BA294(&qword_100C09EB0);
  if (sub_100098814(v12) == 1)
  {
    v13 = sub_10009D50C();
    sub_1000987E0(v13);
  }
  else
  {
    sub_1000B4394();
  }
  v14 = sub_1000CD700();
  sub_1000987E0(v14);
  sub_100098C18();
  v15 = *(unsigned __int8 *)(v3 + 32);
  if (v15 != 255)
    sub_100121E04(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v15);
  sub_1000BD3D8();
  sub_1000DB8F0();
  v16 = sub_1000D1DA0();
  sub_1000989A0(v16);
  sub_1000D11FC();
  sub_1000D8F34();
  return sub_1000BBBC0(v0, v1, v11);
}

void sub_10032C980(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MoonComponentView(0) - 8) + 80);
  sub_10032894C(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 32) & ~v5), a2);
}

void sub_10032C9D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1000DD978(a1);
  sub_100328668(v1, v2);
}

uint64_t type metadata accessor for MoonComponentView.RowView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD8968, (uint64_t)&nominal type descriptor for MoonComponentView.RowView);
}

uint64_t sub_10032CA18(uint64_t a1)
{
  return sub_10032CA24(a1, (uint64_t (*)(uint64_t))sub_100327CC8);
}

uint64_t sub_10032CA24(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  v2 = sub_1000DD978(a1);
  return a2(v2);
}

unint64_t sub_10032CA68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD8908;
  if (!qword_100BD8908)
  {
    v1 = sub_100075EB0(&qword_100BD8900);
    sub_100157390();
    sub_10003D2DC(&qword_100BCDE00, &qword_100BCDE08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD8908);
  }
  return result;
}

unint64_t sub_10032CAF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v12 = *(_BYTE *)(a2 + 48);
    swift_bridgeObjectRetain(v9);
    sub_100121DEC(v10, v11, v12);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = v12;
    v13 = *(int *)(a3 + 24);
    v14 = a1 + v13;
    v15 = a2 + v13;
    v16 = *(_QWORD *)(a2 + v13 + 8);
    *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
    *(_QWORD *)(v14 + 8) = v16;
    v17 = *(unsigned __int8 *)(a2 + v13 + 32);
    swift_bridgeObjectRetain(v16);
    v30 = a3;
    if (v17 == 255)
    {
      *(_OWORD *)(v14 + 16) = *(_OWORD *)(v15 + 16);
      *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
    }
    else
    {
      v18 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      sub_100121DEC(v18, v19, v17);
      *(_QWORD *)(v14 + 16) = v18;
      *(_QWORD *)(v14 + 24) = v19;
      *(_BYTE *)(v14 + 32) = v17;
    }
    v21 = *(_QWORD *)(v15 + 40);
    *(_QWORD *)(v14 + 40) = v21;
    v22 = (int *)type metadata accessor for MoonComponentViewModel(0);
    v23 = v22[7];
    v24 = v14 + v23;
    v25 = v15 + v23;
    v26 = type metadata accessor for Date(0);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
    v28 = swift_bridgeObjectRetain(v21);
    v27(v24, v25, v26, v28);
    *(_BYTE *)(v14 + v22[8]) = *(_BYTE *)(v15 + v22[8]);
    *(_QWORD *)(v14 + v22[9]) = *(_QWORD *)(v15 + v22[9]);
    *(_QWORD *)(a1 + *(int *)(v30 + 28)) = *(_QWORD *)(a2 + *(int *)(v30 + 28));
  }
  return a1;
}

uint64_t sub_10032CC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_bridgeObjectRelease();
  sub_100121E04(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(unsigned __int8 *)(v4 + 32);
  if (v5 != 255)
    sub_100121E04(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v5);
  swift_bridgeObjectRelease();
  v6 = v4 + *(int *)(type metadata accessor for MoonComponentViewModel(0) + 28);
  v7 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_10032CD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v28;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain(v8);
  sub_100121DEC(v9, v10, v11);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = v11;
  v28 = a3;
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(unsigned __int8 *)(a2 + v12 + 32);
  swift_bridgeObjectRetain(v15);
  if (v16 == 255)
  {
    *(_OWORD *)(v13 + 16) = *(_OWORD *)(v14 + 16);
    *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  }
  else
  {
    v17 = *(_QWORD *)(v14 + 16);
    v18 = *(_QWORD *)(v14 + 24);
    sub_100121DEC(v17, v18, v16);
    *(_QWORD *)(v13 + 16) = v17;
    *(_QWORD *)(v13 + 24) = v18;
    *(_BYTE *)(v13 + 32) = v16;
  }
  v19 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 40) = v19;
  v20 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v21 = v20[7];
  v22 = v13 + v21;
  v23 = v14 + v21;
  v24 = type metadata accessor for Date(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
  v26 = swift_bridgeObjectRetain(v19);
  v25(v22, v23, v24, v26);
  *(_BYTE *)(v13 + v20[8]) = *(_BYTE *)(v14 + v20[8]);
  *(_QWORD *)(v13 + v20[9]) = *(_QWORD *)(v14 + v20[9]);
  *(_QWORD *)(a1 + *(int *)(v28 + 28)) = *(_QWORD *)(a2 + *(int *)(v28 + 28));
  return a1;
}

uint64_t sub_10032CE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_BYTE *)(a2 + 48);
  sub_100121DEC(v11, v12, v13);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v12;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v13;
  sub_100121E04(v14, v15, v16);
  v17 = *(int *)(a3 + 24);
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17 + 8);
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease();
  v21 = (__int128 *)(v18 + 16);
  v22 = (__int128 *)(v19 + 16);
  v23 = *(unsigned __int8 *)(v19 + 32);
  if (*(unsigned __int8 *)(v18 + 32) == 255)
  {
    if (v23 == 255)
    {
      v32 = *v22;
      *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
      *v21 = v32;
    }
    else
    {
      v29 = *(_QWORD *)(v19 + 16);
      v30 = *(_QWORD *)(v19 + 24);
      sub_100121DEC(v29, v30, *(_BYTE *)(v19 + 32));
      *(_QWORD *)(v18 + 16) = v29;
      *(_QWORD *)(v18 + 24) = v30;
      *(_BYTE *)(v18 + 32) = v23;
    }
  }
  else if (v23 == 255)
  {
    sub_1002BD858(v18 + 16);
    v31 = *(_BYTE *)(v19 + 32);
    *v21 = *v22;
    *(_BYTE *)(v18 + 32) = v31;
  }
  else
  {
    v24 = *(_QWORD *)(v19 + 16);
    v25 = *(_QWORD *)(v19 + 24);
    sub_100121DEC(v24, v25, *(_BYTE *)(v19 + 32));
    v26 = *(_QWORD *)(v18 + 16);
    v27 = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v18 + 16) = v24;
    *(_QWORD *)(v18 + 24) = v25;
    v28 = *(_BYTE *)(v18 + 32);
    *(_BYTE *)(v18 + 32) = v23;
    sub_100121E04(v26, v27, v28);
  }
  v33 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 40) = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease();
  v34 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v35 = v34[7];
  v36 = v18 + v35;
  v37 = v19 + v35;
  v38 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  *(_BYTE *)(v18 + v34[8]) = *(_BYTE *)(v19 + v34[8]);
  *(_QWORD *)(v18 + v34[9]) = *(_QWORD *)(v19 + v34[9]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10032D07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(a2 + v7 + 32);
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(a2 + v7 + 40);
  v11 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v12 = v11[7];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_BYTE *)(v8 + v11[8]) = *(_BYTE *)(v9 + v11[8]);
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10032D15C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = *((_BYTE *)a2 + 48);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  v14 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v11;
  sub_100121E04(v12, v13, v14);
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = (uint64_t)a2 + v15;
  v18 = *(uint64_t *)((char *)a2 + v15 + 8);
  *(_QWORD *)v16 = *(uint64_t *)((char *)a2 + v15);
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  v19 = (_OWORD *)(v17 + 16);
  v20 = *(unsigned __int8 *)(v16 + 32);
  if (v20 == 255)
    goto LABEL_5;
  v21 = *(unsigned __int8 *)(v17 + 32);
  if (v21 == 255)
  {
    sub_1002BD858(v16 + 16);
LABEL_5:
    *(_OWORD *)(v16 + 16) = *v19;
    *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
    goto LABEL_6;
  }
  v22 = *(_QWORD *)(v16 + 16);
  v23 = *(_QWORD *)(v16 + 24);
  *(_OWORD *)(v16 + 16) = *v19;
  *(_BYTE *)(v16 + 32) = v21;
  sub_100121E04(v22, v23, v20);
LABEL_6:
  *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
  swift_bridgeObjectRelease();
  v24 = (int *)type metadata accessor for MoonComponentViewModel(0);
  v25 = v24[7];
  v26 = v16 + v25;
  v27 = v17 + v25;
  v28 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  *(_BYTE *)(v16 + v24[8]) = *(_BYTE *)(v17 + v24[8]);
  *(_QWORD *)(v16 + v24[9]) = *(_QWORD *)(v17 + v24[9]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10032D2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10032D2C8);
}

void sub_10032D2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000DB8F0();
    sub_1000B250C(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_10032D328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10032D334);
}

void sub_10032D334(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    v7 = sub_1000DB8F0();
    sub_1000987C4(a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

uint64_t sub_10032D38C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\t";
  v4[1] = "!";
  result = type metadata accessor for MoonComponentViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10032D414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v0 = sub_100075EB0(&qword_100BD8790);
  v1 = type metadata accessor for ScenePhase(255);
  sub_10003D2DC(&qword_100BD87A0, &qword_100BD8790);
  v3 = v2;
  sub_10000F1C8(&qword_100C0A050, (uint64_t (*)(uint64_t))&type metadata accessor for ScenePhase);
  v6[0] = v0;
  v6[1] = v1;
  v6[2] = v3;
  v6[3] = v4;
  return swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_10032D4B4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1320, 1);
}

unint64_t sub_10032D4C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD89D0;
  if (!qword_100BD89D0)
  {
    v1 = sub_100075EB0(&qword_100BD89B0);
    sub_10003D2DC(&qword_100BD89D8, &qword_100BD89A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD89D0);
  }
  return result;
}

void sub_10032D548()
{
  sub_10003D2DC(&qword_100BD89F0, &qword_100BD89F8);
}

void sub_10032D574(_QWORD *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  double v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __int128 v51;
  double v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __int128 v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  int *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  int *v116;
  _QWORD *v117;
  _QWORD *v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  int *v137;
  _QWORD *v138;
  _QWORD *v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v167;
  _QWORD v168[2];
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  unint64_t v186;
  __n128 v187;
  unint64_t v188;
  __n128 v189;
  unint64_t v190;
  _BYTE v191[24];
  __int128 v192;
  uint64_t v193;
  uint64_t v194;

  v179 = a3;
  v185 = a4;
  v6 = type metadata accessor for Locale.NumberingSystem(0);
  v170 = *(_QWORD *)(v6 - 8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v169 = v8;
  v178 = type metadata accessor for Locale.Language(0);
  v177 = *(_QWORD *)(v178 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v176 = v10;
  v180 = type metadata accessor for Locale(0);
  v174 = *(_QWORD *)(v180 - 8);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v12);
  v173 = (char *)v168 - v13;
  sub_1000BA294(&qword_100BC39D8);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v175 = v15;
  sub_1000BA294(&qword_100BD8A00);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v17);
  v19 = (char *)v168 - v18;
  type metadata accessor for AttributeContainer(0);
  sub_10009D98C();
  __chkstk_darwin(v20);
  v22 = (char *)v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = type metadata accessor for AttributedString(0);
  v186 = *(_QWORD *)(v183 - 8);
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v24);
  sub_1000BA30C();
  v26 = __chkstk_darwin(v25);
  v28 = (char *)v168 - v27;
  v29 = __chkstk_darwin(v26);
  v184 = (char *)v168 - v30;
  __chkstk_darwin(v29);
  v32 = (char *)v168 - v31;
  v33 = type metadata accessor for DetailChartCondition(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)v168 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B2FD0((uint64_t)v36, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
  v37 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v36, v33);
  if (v37 == enum case for DetailChartCondition.humidity(_:))
  {
    sub_100043CA8(v182, (uint64_t)&v192);
    v38 = v193;
    v182 = v194;
    v181 = sub_1000DB418(&v192, v193);
    v39 = a1[3];
    if (v39)
    {
      v180 = a1[2];
      v40 = v39;
    }
    else
    {
      v180 = 0;
      v40 = 0xE000000000000000;
    }
    v46 = a1;
    sub_1000CCBA8();
    v47 = sub_1000BD3E8();
    v189.n128_u64[0] = v48;
    v189.n128_u64[1] = v49;
    v190 = *(_QWORD *)&v47;
    swift_bridgeObjectRetain(v39);
    v50 = sub_100862770();
    v51 = xmmword_100C0DFA8;
    sub_1000E6FAC(v190, v189);
    sub_10032E2E4(v51, *((uint64_t *)&v51 + 1));
    sub_1000CCBA8();
    v52 = sub_1000BD3E8();
    v187.n128_u64[0] = v53;
    v187.n128_u64[1] = v54;
    v188 = *(_QWORD *)&v52;
    v55 = sub_1008627B4();
    v56 = xmmword_100C0DFA8;
    sub_1000E6FAC(v188, v187);
    sub_10032E2E4(v56, *((uint64_t *)&v56 + 1));
    v57 = sub_1000BD3E8();
    v59 = v58;
    v60 = v57;
    swift_release(v61);
    swift_release(v59);
    dispatch thunk of HumidityTitleStringBuilderType.makeAttributedHumidityString(_:symbolFont:symbolColor:symbolSpacing:)(v180, v40, v50, v55, v38, v182, v60);
    swift_release(v55);
    swift_bridgeObjectRelease(v40);
    swift_release(v50);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v192);
    v62 = v183;
    (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v184, v32, v183);
    if (a1[11])
    {
      v63 = a1[10];
      v64 = a1[11];
    }
    else
    {
      v63 = 0;
      v64 = 0xE000000000000000;
    }
    if (v46[15])
    {
      v65 = v46[14];
      v66 = v46[15];
    }
    else
    {
      v65 = 0;
      v66 = 0xE000000000000000;
    }
    v192 = *(_OWORD *)v46;
    sub_1000DF574();
    v67 = v186;
    v68 = *(void (**)(char *, uint64_t))(v186 + 8);
    sub_10009EF94();
    sub_1000989F8();
    v68(v32, v62);
    v69 = v185;
    *(_OWORD *)v185 = v192;
    v70 = (int *)sub_1000D9580();
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v69[v70[5]], v184, v62);
    v71 = &v69[v70[6]];
    *(_QWORD *)v71 = 0;
    *((_QWORD *)v71 + 1) = 0;
    v72 = &v69[v70[7]];
    *(_QWORD *)v72 = v63;
    *((_QWORD *)v72 + 1) = v64;
    v73 = &v69[v70[8]];
    *(_QWORD *)v73 = 0;
    *((_QWORD *)v73 + 1) = 0;
    v74 = &v69[v70[9]];
    *(_QWORD *)v74 = v65;
    *((_QWORD *)v74 + 1) = v66;
    v75 = &v69[v70[10]];
    *(_QWORD *)v75 = 0;
    *((_QWORD *)v75 + 1) = 0;
    v69[v70[11]] = 0;
    v76 = sub_1000BA944();
    v77 = v69;
    v78 = 2;
    goto LABEL_18;
  }
  if (v37 == enum case for DetailChartCondition.pressure(_:))
  {
    if (a1[3])
    {
      v41 = a1[2];
      v42 = a1[3];
    }
    else
    {
      v41 = 0;
      v42 = 0xE000000000000000;
    }
    if (a1[11])
    {
      v84 = a1[10];
      v85 = a1[11];
    }
    else
    {
      v84 = 0;
      v85 = 0xE000000000000000;
    }
    v86 = *a1;
    v87 = a1[1];
LABEL_28:
    v88 = v185;
    *(_QWORD *)v185 = v86;
    *((_QWORD *)v88 + 1) = v87;
    *((_QWORD *)v88 + 2) = v41;
    *((_QWORD *)v88 + 3) = v42;
    *((_QWORD *)v88 + 4) = v84;
    *((_QWORD *)v88 + 5) = v85;
    v89 = sub_1000BA944();
    *((_QWORD *)v88 + 6) = 0;
    *((_QWORD *)v88 + 7) = 0;
    *((_WORD *)v88 + 32) = 0;
    sub_1000C14D0(v89, v89);
    sub_10009EF94();
    sub_1000989F8();
    v90 = v87;
LABEL_67:
    swift_bridgeObjectRetain(v90);
    return;
  }
  v43 = a1;
  if (v37 == enum case for DetailChartCondition.precipitationTotal(_:))
  {
    if (a1[3])
    {
      v44 = a1[2];
      v45 = a1[3];
    }
    else
    {
      v44 = 0;
      v45 = 0xE000000000000000;
    }
    v192 = *(_OWORD *)a1;
    sub_1000DF574();
    v91 = sub_1000860DC();
    AttributeContainer.init()(v91);
    AttributedString.init(_:attributes:)(v44, v45, v22);
    v81 = a1[15];
    if (v81)
      v92 = a1[14];
    else
      v92 = 0;
    if (v81)
      v93 = a1[15];
    else
      v93 = 0xE000000000000000;
    v94 = (uint64_t)v185;
    *(_OWORD *)v185 = v192;
    v95 = (int *)sub_1000D9580();
    (*(void (**)(uint64_t, char *, uint64_t))(v186 + 32))(v94 + v95[5], v28, v183);
    v96 = (_QWORD *)(v94 + v95[6]);
    *v96 = 0;
    v96[1] = 0;
    v97 = (_QWORD *)(v94 + v95[7]);
    *v97 = 0;
    v97[1] = 0xE000000000000000;
    v98 = (_QWORD *)(v94 + v95[8]);
    *v98 = 0;
    v98[1] = 0;
    v99 = (_QWORD *)(v94 + v95[9]);
    *v99 = v92;
    v99[1] = v93;
    v100 = (_QWORD *)(v94 + v95[10]);
    *v100 = 0;
    v100[1] = 0;
    *(_BYTE *)(v94 + v95[11]) = 0;
    v101 = sub_1000BA944();
    sub_1000BA718(v94, v101);
LABEL_66:
    v90 = v81;
    goto LABEL_67;
  }
  if (v37 == enum case for DetailChartCondition.temperature(_:))
  {
    sub_10032E29C((uint64_t)(a1 + 4), (uint64_t)v191);
    sub_10032E29C((uint64_t)v191, (uint64_t)&v192);
    v79 = *((_QWORD *)&v192 + 1);
    if (*((_QWORD *)&v192 + 1))
    {
      v80 = v192;
      v81 = a1[3];
      if (v81)
      {
        v82 = a1[2];
        v83 = a1[3];
      }
      else
      {
        v82 = 0;
        v83 = 0xE000000000000000;
      }
      v104 = a1[1];
      v105 = a1[10];
      v106 = a1[11];
      v107 = v185;
      *(_QWORD *)v185 = *a1;
      *((_QWORD *)v107 + 1) = v104;
      *((_QWORD *)v107 + 2) = v82;
      *((_QWORD *)v107 + 3) = v83;
      *((_QWORD *)v107 + 4) = v80;
      *((_QWORD *)v107 + 5) = v79;
      *((_QWORD *)v107 + 6) = v105;
      *((_QWORD *)v107 + 7) = v106;
      *((_WORD *)v107 + 32) = 0;
      v108 = sub_1000BA944();
      sub_1000C14D0(v108, v108);
      sub_1002BDF74((uint64_t)v191);
    }
    else
    {
      v81 = a1[3];
      if (v81)
      {
        v102 = a1[2];
        v103 = a1[3];
      }
      else
      {
        v102 = 0;
        v103 = 0xE000000000000000;
      }
      v122 = a1[1];
      v123 = a1[10];
      v124 = a1[11];
      v125 = v185;
      *(_QWORD *)v185 = *a1;
      *((_QWORD *)v125 + 1) = v122;
      *((_QWORD *)v125 + 2) = v102;
      *((_QWORD *)v125 + 3) = v103;
      *((_QWORD *)v125 + 4) = v123;
      *((_QWORD *)v125 + 5) = v124;
      v126 = sub_1000BA944();
      swift_storeEnumTagMultiPayload(v125, v126, 0);
    }
    sub_1000860DC();
    sub_1000989F8();
    goto LABEL_66;
  }
  if (v37 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    v192 = *(_OWORD *)a1;
    if (a1[3])
    {
      sub_1000DB8F8();
      sub_1000DF574();
      sub_1000CD710();
      sub_1000DD9B0((uint64_t)v19);
    }
    else
    {
      sub_1000C5D58((uint64_t)v19);
    }
    v109 = (uint64_t)v181;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v33) == 1)
    {
      sub_1000D9D08();
      sub_100021A68((uint64_t)v19, &qword_100BD8A00);
    }
    else
    {
      sub_1000B2FD0(v109, (uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v186 + 32));
    }
    if (a1[5])
    {
      v110 = a1[4];
      v111 = a1[5];
    }
    else
    {
      v110 = 0;
      v111 = 0xE000000000000000;
    }
    v112 = v43[15];
    if (v112)
    {
      v113 = v43[14];
      v114 = v43[15];
    }
    else
    {
      v113 = 0;
      v114 = 0xE000000000000000;
    }
    sub_10032E29C((uint64_t)(v43 + 10), (uint64_t)v191);
    v115 = (uint64_t)v185;
    *(_OWORD *)v185 = v192;
    v116 = (int *)sub_1000D9580();
    sub_1000B47F0(v115 + v116[5]);
    v117 = (_QWORD *)(v115 + v116[6]);
    *v117 = 0;
    v117[1] = 0;
    v118 = (_QWORD *)(v115 + v116[7]);
    *v118 = v110;
    v118[1] = v111;
    sub_10032E29C((uint64_t)v191, v115 + v116[8]);
    v119 = (_QWORD *)(v115 + v116[9]);
    *v119 = v113;
    v119[1] = v114;
    v120 = (_QWORD *)(v115 + v116[10]);
    *v120 = 0;
    v120[1] = 0;
    *(_BYTE *)(v115 + v116[11]) = 0;
    v121 = sub_1000BA944();
    sub_1000BA718(v115, v121);
    sub_10009EF94();
    sub_1002BDF74((uint64_t)v191);
LABEL_59:
    v90 = v112;
    goto LABEL_67;
  }
  if (v37 == enum case for DetailChartCondition.uvIndex(_:) || v37 == enum case for DetailChartCondition.visibility(_:))
  {
    if (a1[3])
    {
      v41 = a1[2];
      v42 = a1[3];
    }
    else
    {
      v41 = 0;
      v42 = 0xE000000000000000;
    }
    if (a1[11])
    {
      v84 = a1[10];
      v85 = a1[11];
    }
    else
    {
      v84 = 0;
      v85 = 0xE000000000000000;
    }
    v86 = *a1;
    v87 = a1[1];
    goto LABEL_28;
  }
  if (v37 == enum case for DetailChartCondition.wind(_:))
  {
    v192 = *(_OWORD *)a1;
    if (a1[3])
    {
      sub_1000DB8F8();
      sub_1000DF574();
      v127 = v171;
      sub_1000CD710();
      sub_1000DD9B0(v127);
    }
    else
    {
      v127 = v171;
      sub_1000C5D58(v171);
    }
    v131 = v172;
    if (_s7Weather24LocationCompositionStateOwet_0(v127, 1, v33) == 1)
    {
      sub_1000D9D08();
      sub_100021A68(v127, &qword_100BD8A00);
    }
    else
    {
      sub_1000B2FD0(v131, v127, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v186 + 32));
    }
    if (a1[11])
    {
      v132 = a1[10];
      v133 = a1[11];
    }
    else
    {
      v132 = 0;
      v133 = 0xE000000000000000;
    }
    v112 = v43[15];
    if (v112)
    {
      v134 = v43[14];
      v135 = v43[15];
    }
    else
    {
      v134 = 0;
      v135 = 0xE000000000000000;
    }
    v136 = (uint64_t)v185;
    *(_OWORD *)v185 = v192;
    v137 = (int *)sub_1000D9580();
    sub_1000B47F0(v136 + v137[5]);
    v138 = (_QWORD *)(v136 + v137[6]);
    *v138 = 0;
    v138[1] = 0;
    v139 = (_QWORD *)(v136 + v137[7]);
    *v139 = v132;
    v139[1] = v133;
    v140 = (_QWORD *)(v136 + v137[8]);
    *v140 = 0;
    v140[1] = 0;
    v141 = (_QWORD *)(v136 + v137[9]);
    *v141 = v134;
    v141[1] = v135;
    v142 = (_QWORD *)(v136 + v137[10]);
    *v142 = 0;
    v142[1] = 0;
    *(_BYTE *)(v136 + v137[11]) = v179 & 1;
    v143 = sub_1000BA944();
    sub_1000BA718(v136, v143);
    sub_10009EF94();
    goto LABEL_59;
  }
  if (v37 == enum case for DetailChartCondition.chanceOfRain(_:))
  {
    v128 = a1[3];
    if (v128)
    {
      v129 = a1[2];
      v130 = v43[3];
    }
    else
    {
      v129 = 0;
      v130 = 0xE000000000000000;
    }
    v144 = v43[11];
    v168[0] = v6;
    if (v144)
    {
      v145 = v43[10];
      v146 = v144;
    }
    else
    {
      v145 = 0;
      v146 = 0xE000000000000000;
    }
    v147 = v43;
    v148 = *v43;
    v149 = v147[1];
    swift_bridgeObjectRetain(v128);
    sub_10009EF94();
    sub_1000860DC();
    v150 = sub_1000D120C();
    v151 = v176;
    Locale.language.getter(v150);
    v152 = sub_1000C53E8();
    v153 = v175;
    Locale.Language.languageCode.getter(v152);
    v154 = v153;
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v151, v178);
    v155 = type metadata accessor for Locale.LanguageCode(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v154, 1, v155) == 1)
    {
      sub_100021A68(v154, &qword_100BC39D8);
    }
    else
    {
      v186 = v146;
      v146 = v145;
      v145 = v130;
      v130 = v129;
      v129 = Locale.LanguageCode.identifier.getter();
      v157 = v156;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 8))(v154, v155);
      if (v129 == 29281 && v157 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease(0xE200000000000000);
        sub_1000CFC68();
      }
      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)(v129, v157, 29281, 0xE200000000000000, 0);
        sub_10009DED8();
        sub_1000CFC68();
        if ((v154 & 1) == 0)
          goto LABEL_107;
      }
      v160 = sub_1000D120C();
      v161 = v169;
      Locale.numberingSystem.getter(v160);
      v162 = sub_1000C53E8();
      v163 = Locale.NumberingSystem.identifier.getter(v162);
      v165 = v164;
      (*(void (**)(uint64_t, _QWORD))(v170 + 8))(v161, v168[0]);
      if (v163 != 1650553441 || v165 != 0xE400000000000000)
      {
        _stringCompareWithSmolCheck(_:_:expecting:)(v163, v165, 1650553441, 0xE400000000000000, 0);
        sub_10009DED8();
        v159 = v163 ^ 1;
LABEL_107:
        v167 = v185;
        *(_QWORD *)v185 = v148;
        *((_QWORD *)v167 + 1) = v149;
        *((_QWORD *)v167 + 2) = v129;
        *((_QWORD *)v167 + 3) = v130;
        *((_QWORD *)v167 + 4) = v145;
        *((_QWORD *)v167 + 5) = v146;
        *((_QWORD *)v167 + 6) = 0;
        *((_QWORD *)v167 + 7) = 0;
        v167[64] = 1;
        v167[65] = v159 & 1;
        v76 = sub_1000BA944();
        v77 = v167;
        v78 = 1;
LABEL_18:
        swift_storeEnumTagMultiPayload(v77, v76, v78);
        return;
      }
      swift_bridgeObjectRelease(0xE400000000000000);
    }
    v159 = 0;
    goto LABEL_107;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
}

uint64_t sub_10032E29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032E2E4(uint64_t result, uint64_t a2)
{
  if (result != 1)
  {
    swift_release(result);
    return swift_release(a2);
  }
  return result;
}

ValueMetadata *type metadata accessor for LollipopDetailViewModelFactory()
{
  return &type metadata for LollipopDetailViewModelFactory;
}

uint64_t sub_10032E324(__n128 a1, __n128 a2, __n128 a3)
{
  uint64_t result;

  a2.n128_u64[0] = 0x406D600000000000;
  a1.n128_u64[0] = 1.0;
  a3.n128_u64[0] = 28.0;
  result = sub_1000BC060(a1, a2, a3);
  qword_100CAE680 = result;
  return result;
}

uint64_t sub_10032E350(__n128 a1, __n128 a2, __n128 a3)
{
  uint64_t result;

  if (qword_100BC1F88 != -1)
    swift_once(&qword_100BC1F88, sub_10032E39C);
  result = sub_1000C2810((uint64_t)&xmmword_100CAE690, a1, a2, a3);
  qword_100CAE688 = result;
  return result;
}

double sub_10032E39C()
{
  double result;

  result = 1.0;
  xmmword_100CAE690 = xmmword_100995900;
  *(_OWORD *)&qword_100CAE6A0 = xmmword_100995910;
  return result;
}

uint64_t sub_10032E3BC(__n128 a1, __n128 a2, __n128 a3)
{
  uint64_t result;

  if (qword_100BC1FB8 != -1)
    swift_once(&qword_100BC1FB8, sub_10032E4A0);
  result = sub_1000C2810((uint64_t)&xmmword_100CAE6E0, a1, a2, a3);
  qword_100CAE6B0 = result;
  return result;
}

uint64_t sub_10032E408(__n128 a1, double a2, __n128 a3)
{
  uint64_t result;

  a1.n128_u64[0] = 0x3FD51EB851EB851FLL;
  a3.n128_u64[0] = 0x3FEA8F5C28F5C28FLL;
  result = sub_1000BA94C(a1, a2, a3);
  qword_100CAE6B8 = result;
  return result;
}

uint64_t sub_10032E43C(__n128 a1, double a2, __n128 a3)
{
  uint64_t result;

  a1.n128_u64[0] = 0x3FD51EB851EB851FLL;
  a3.n128_u64[0] = 0x3FE570A3D70A3D71;
  result = sub_1000BA94C(a1, a2, a3);
  qword_100CAE6C0 = result;
  return result;
}

uint64_t sub_10032E470(__n128 a1, __n128 a2, __n128 a3)
{
  uint64_t result;

  a2.n128_u64[0] = 0x4059000000000000;
  a3.n128_u64[0] = 0x4041800000000000;
  a1.n128_u64[0] = 1.0;
  result = sub_1000BC060(a1, a2, a3);
  qword_100CAE6C8 = result;
  return result;
}

double sub_10032E4A0()
{
  double result;

  result = 1.0;
  xmmword_100CAE6E0 = xmmword_100995920;
  *(_OWORD *)&qword_100CAE6F0 = xmmword_100995930;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsTracker()
{
  return &type metadata for NotificationSettingsTracker;
}

uint64_t *sub_10032E4D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for WeatherCondition(0);
    swift_bridgeObjectRetain(v7);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BC3660);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 24);
    v15 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = v15;
    swift_bridgeObjectRetain(v15);
  }
  return v4;
}

_QWORD *sub_10032E5D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1000BA294(&qword_100BC3660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = *(_QWORD *)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10032E718(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for WeatherCondition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_1000BA294(&qword_100BC3660);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_10032E7E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1000BA294(&qword_100BC3660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

void sub_10032E910(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v4 = sub_1000CCBBC();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  v9 = sub_1000BA294(&qword_100BD8AA8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BC3660);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_10009883C();
  v17 = v15 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v32 - v22;
  v24 = a1[1];
  v25 = *a1 == *a2 && v24 == a2[1];
  if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(*a1, v24, *a2) & 1) != 0)
  {
    v33 = v5;
    v26 = type metadata accessor for ConditionPickerMenuViewModel.Row(0);
    sub_10008046C((uint64_t)a1 + *(int *)(v26 + 20), (uint64_t)v23);
    sub_10008046C((uint64_t)a2 + *(int *)(v26 + 20), (uint64_t)v20);
    v27 = v13 + *(int *)(v9 + 48);
    sub_10008046C((uint64_t)v23, v13);
    sub_10008046C((uint64_t)v20, v27);
    sub_100098750(v13);
    if (!v25)
    {
      sub_10008046C(v13, v17);
      sub_100098750(v27);
      if (!v28)
      {
        v29 = v33;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v8, v27, v4);
        v30 = sub_10006E924();
        dispatch thunk of static Equatable.== infix(_:_:)(v17, v8, v4, v30);
        v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v31(v8, v4);
        sub_1000BBB54((uint64_t)v20);
        sub_1000BBB54((uint64_t)v23);
        v31(v17, v4);
        sub_1000BBB54(v13);
        goto LABEL_15;
      }
      sub_1000BBB54((uint64_t)v20);
      sub_1000BBB54((uint64_t)v23);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v17, v4);
LABEL_14:
      sub_100021A68(v13, &qword_100BD8AA8);
      goto LABEL_15;
    }
    sub_1000BBB54((uint64_t)v20);
    sub_1000BBB54((uint64_t)v23);
    sub_100098750(v27);
    if (!v25)
      goto LABEL_14;
    sub_100021A68(v13, &qword_100BC3660);
  }
LABEL_15:
  sub_100098640();
}

uint64_t *sub_10032EB98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for WeatherCondition(0);
    swift_bridgeObjectRetain(v5);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      v10 = sub_1000BA294(&qword_100BC3660);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
  }
  return v3;
}

_QWORD *sub_10032EC80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1000BA294(&qword_100BC3660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  return a1;
}

_OWORD *sub_10032ED9C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for WeatherCondition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1000BA294(&qword_100BC3660);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_10032EE48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1000BA294(&qword_100BC3660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_10032EF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10032EF60);
}

uint64_t sub_10032EF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10032EF70);
}

_QWORD *sub_10032EF74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v14 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        v19 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = *((_OWORD *)v21 + 1);
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v22;
        v20[32] = v21[32];
        v10 = a1;
        v11 = a3;
        v12 = 2;
        goto LABEL_20;
      case 1:
        v23 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v24 = type metadata accessor for URL(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
            v25 = sub_1000BA294(&qword_100BC5FE8);
            *((_BYTE *)a1 + *(int *)(v25 + 48)) = *((_BYTE *)a2 + *(int *)(v25 + 48));
            v26 = a1;
            v27 = v23;
            v28 = 0;
            goto LABEL_15;
          case 1u:
            v29 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a1, a2, v29);
            v26 = a1;
            v27 = v23;
            v28 = 1;
            goto LABEL_15;
          case 2u:
            v30 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
            v31 = sub_1000BA294(&qword_100BC5FF8);
            *((_BYTE *)a1 + *(int *)(v31 + 48)) = *((_BYTE *)a2 + *(int *)(v31 + 48));
            v26 = a1;
            v27 = v23;
            v28 = 2;
            goto LABEL_15;
          case 4u:
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v32 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
            v33 = (char *)a1 + v32;
            v34 = (char *)a2 + v32;
            v35 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
            v26 = a1;
            v27 = v23;
            v28 = 4;
LABEL_15:
            swift_storeEnumTagMultiPayload(v26, v27, v28);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
            break;
        }
        v36 = sub_1000BA294(&qword_100BC5FC8);
        v37 = *(int *)(v36 + 48);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *((_OWORD *)v38 + 1) = v40;
        v38[32] = v39[32];
        v41 = *(int *)(v36 + 64);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
        {
          v45 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
        }
        v10 = a1;
        v11 = a3;
        v12 = 1;
        goto LABEL_20;
      case 0:
        v9 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = a1;
        v11 = a3;
        v12 = 0;
LABEL_20:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_10032F2E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = a1;
  result = swift_getEnumCaseMultiPayload(a1);
  switch((_DWORD)result)
  {
    case 2:
      v5 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v1, v5);
      v1 += *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
      v3 = type metadata accessor for LocationOfInterest(0);
      goto LABEL_8;
    case 1:
      type metadata accessor for LocationComponentAction(0);
      switch(swift_getEnumCaseMultiPayload(v1))
      {
        case 0u:
          v4 = type metadata accessor for URL(0);
          goto LABEL_12;
        case 1u:
          v4 = type metadata accessor for WeatherMapOverlayKind(0);
          goto LABEL_12;
        case 2u:
          v4 = type metadata accessor for DetailCondition(0);
LABEL_12:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1, v4);
          break;
        case 4u:
          v9 = v1 + *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v10 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
      v11 = v1 + *(int *)(sub_1000BA294(&qword_100BC5FC8) + 64);
      v12 = type metadata accessor for Date(0);
      result = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v12);
      if (!(_DWORD)result)
      {
        v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v8 = v11;
        v6 = v12;
        return v7(v8, v6);
      }
      break;
    case 0:
      v3 = type metadata accessor for Location(0);
LABEL_8:
      v6 = v3;
      v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v8 = v1;
      return v7(v8, v6);
  }
  return result;
}

_BYTE *sub_10032F45C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  __int128 v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
      v17[32] = v18[32];
      v8 = a1;
      v9 = a3;
      v10 = 2;
      goto LABEL_18;
    case 1:
      v20 = type metadata accessor for LocationComponentAction(0);
      switch(swift_getEnumCaseMultiPayload(a2))
      {
        case 0u:
          v21 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
          v22 = sub_1000BA294(&qword_100BC5FE8);
          a1[*(int *)(v22 + 48)] = a2[*(int *)(v22 + 48)];
          v23 = a1;
          v24 = v20;
          v25 = 0;
          goto LABEL_13;
        case 1u:
          v26 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
          v23 = a1;
          v24 = v20;
          v25 = 1;
          goto LABEL_13;
        case 2u:
          v27 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
          v28 = sub_1000BA294(&qword_100BC5FF8);
          a1[*(int *)(v28 + 48)] = a2[*(int *)(v28 + 48)];
          v23 = a1;
          v24 = v20;
          v25 = 2;
          goto LABEL_13;
        case 4u:
          *a1 = *a2;
          v29 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v30 = &a1[v29];
          v31 = &a2[v29];
          v32 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
          v23 = a1;
          v24 = v20;
          v25 = 4;
LABEL_13:
          swift_storeEnumTagMultiPayload(v23, v24, v25);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          break;
      }
      v33 = sub_1000BA294(&qword_100BC5FC8);
      v34 = *(int *)(v33 + 48);
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
      v35[32] = v36[32];
      v38 = *(int *)(v33 + 64);
      v39 = &a1[v38];
      v40 = &a2[v38];
      v41 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        v42 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      v8 = a1;
      v9 = a3;
      v10 = 1;
      goto LABEL_18;
    case 0:
      v7 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
LABEL_18:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_10032F7A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for LocationViewAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v11 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        v12 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
        v16 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = *(_OWORD *)v18;
        v20 = *((_OWORD *)v18 + 1);
        v17[32] = v18[32];
        *(_OWORD *)v17 = v19;
        *((_OWORD *)v17 + 1) = v20;
        v8 = a1;
        v9 = a3;
        v10 = 2;
        goto LABEL_19;
      case 1:
        v21 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v22 = type metadata accessor for URL(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
            v23 = sub_1000BA294(&qword_100BC5FE8);
            a1[*(int *)(v23 + 48)] = a2[*(int *)(v23 + 48)];
            v24 = a1;
            v25 = v21;
            v26 = 0;
            goto LABEL_14;
          case 1u:
            v27 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
            v24 = a1;
            v25 = v21;
            v26 = 1;
            goto LABEL_14;
          case 2u:
            v28 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
            v29 = sub_1000BA294(&qword_100BC5FF8);
            a1[*(int *)(v29 + 48)] = a2[*(int *)(v29 + 48)];
            v24 = a1;
            v25 = v21;
            v26 = 2;
            goto LABEL_14;
          case 4u:
            *a1 = *a2;
            v30 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
            v31 = &a1[v30];
            v32 = &a2[v30];
            v33 = type metadata accessor for Location(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
            v24 = a1;
            v25 = v21;
            v26 = 4;
LABEL_14:
            swift_storeEnumTagMultiPayload(v24, v25, v26);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            break;
        }
        v34 = sub_1000BA294(&qword_100BC5FC8);
        v35 = *(int *)(v34 + 48);
        v36 = &a1[v35];
        v37 = &a2[v35];
        v38 = *(_OWORD *)v37;
        v39 = *((_OWORD *)v37 + 1);
        v36[32] = v37[32];
        *(_OWORD *)v36 = v38;
        *((_OWORD *)v36 + 1) = v39;
        v40 = *(int *)(v34 + 64);
        v41 = &a1[v40];
        v42 = &a2[v40];
        v43 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
        {
          v44 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
        }
        v8 = a1;
        v9 = a3;
        v10 = 1;
        goto LABEL_19;
      case 0:
        v7 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = a1;
        v9 = a3;
        v10 = 0;
LABEL_19:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_10032FB04(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  __int128 v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      v16 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
      v17[32] = v18[32];
      v8 = a1;
      v9 = a3;
      v10 = 2;
      goto LABEL_18;
    case 1:
      v20 = type metadata accessor for LocationComponentAction(0);
      switch(swift_getEnumCaseMultiPayload(a2))
      {
        case 0u:
          v21 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
          v22 = sub_1000BA294(&qword_100BC5FE8);
          a1[*(int *)(v22 + 48)] = a2[*(int *)(v22 + 48)];
          v23 = a1;
          v24 = v20;
          v25 = 0;
          goto LABEL_13;
        case 1u:
          v26 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
          v23 = a1;
          v24 = v20;
          v25 = 1;
          goto LABEL_13;
        case 2u:
          v27 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
          v28 = sub_1000BA294(&qword_100BC5FF8);
          a1[*(int *)(v28 + 48)] = a2[*(int *)(v28 + 48)];
          v23 = a1;
          v24 = v20;
          v25 = 2;
          goto LABEL_13;
        case 4u:
          *a1 = *a2;
          v29 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v30 = &a1[v29];
          v31 = &a2[v29];
          v32 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
          v23 = a1;
          v24 = v20;
          v25 = 4;
LABEL_13:
          swift_storeEnumTagMultiPayload(v23, v24, v25);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          break;
      }
      v33 = sub_1000BA294(&qword_100BC5FC8);
      v34 = *(int *)(v33 + 48);
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
      v35[32] = v36[32];
      v38 = *(int *)(v33 + 64);
      v39 = &a1[v38];
      v40 = &a2[v38];
      v41 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        v42 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      v8 = a1;
      v9 = a3;
      v10 = 1;
      goto LABEL_18;
    case 0:
      v7 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
LABEL_18:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_10032FE4C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  __int128 v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for LocationViewAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v11 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v12 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        v16 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v19;
        v17[32] = v18[32];
        v8 = a1;
        v9 = a3;
        v10 = 2;
        goto LABEL_19;
      case 1:
        v20 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v21 = type metadata accessor for URL(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
            v22 = sub_1000BA294(&qword_100BC5FE8);
            a1[*(int *)(v22 + 48)] = a2[*(int *)(v22 + 48)];
            v23 = a1;
            v24 = v20;
            v25 = 0;
            goto LABEL_14;
          case 1u:
            v26 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
            v23 = a1;
            v24 = v20;
            v25 = 1;
            goto LABEL_14;
          case 2u:
            v27 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
            v28 = sub_1000BA294(&qword_100BC5FF8);
            a1[*(int *)(v28 + 48)] = a2[*(int *)(v28 + 48)];
            v23 = a1;
            v24 = v20;
            v25 = 2;
            goto LABEL_14;
          case 4u:
            *a1 = *a2;
            v29 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
            v30 = &a1[v29];
            v31 = &a2[v29];
            v32 = type metadata accessor for Location(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
            v23 = a1;
            v24 = v20;
            v25 = 4;
LABEL_14:
            swift_storeEnumTagMultiPayload(v23, v24, v25);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
            break;
        }
        v33 = sub_1000BA294(&qword_100BC5FC8);
        v34 = *(int *)(v33 + 48);
        v35 = &a1[v34];
        v36 = &a2[v34];
        v37 = *((_OWORD *)v36 + 1);
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v37;
        v35[32] = v36[32];
        v38 = *(int *)(v33 + 64);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
        {
          v42 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
        }
        v8 = a1;
        v9 = a3;
        v10 = 1;
        goto LABEL_19;
      case 0:
        v7 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = a1;
        v9 = a3;
        v10 = 0;
LABEL_19:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1003301AC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  type metadata accessor for LocationFooterAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100088FDC();
  v16[2] = v3;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v16[1] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v16[4] = (char *)v16 - v7;
  type metadata accessor for LocationComponentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v16[3] = v9;
  v10 = type metadata accessor for Location(0);
  __chkstk_darwin(v10);
  type metadata accessor for LocationViewAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BD8BF8);
  v19 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  sub_100088FDC();
  v18 = v14;
  sub_100080C0C(v1, (uint64_t)v13, type metadata accessor for LocationViewAction);
  v15 = (char *)sub_100330364 + 4 * byte_100995A7E[swift_getEnumCaseMultiPayload(v13)];
  __asm { BR              X10 }
}

uint64_t sub_100330364()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v1);
  v5 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v5, v0 + 9);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0x6E6F697461636F6CLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = v1;
  sub_100077A84((_QWORD *)(inited + 48));
  (*(void (**)(void))(v4 + 16))();
  Dictionary.init(dictionaryLiteral:)(inited);
  v7 = sub_1000DD9D4();
  sub_10009D514(v7, v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
  v10 = (_QWORD *)v0[8];
  v11 = v0[7];
  v10[3] = v0[5];
  v10[4] = sub_100330890();
  sub_100077A84(v10);
  return (*(uint64_t (**)(void))(v11 + 32))();
}

uint64_t sub_100330834(uint64_t a1)
{
  uint64_t v2;

  sub_1003308E4(&qword_100BD8C08, (uint64_t)&unk_100995AE8);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_10033086C()
{
  sub_1003308E4(&qword_100BC5FD8, (uint64_t)&unk_100995AC0);
}

unint64_t sub_100330890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD8C00;
  if (!qword_100BD8C00)
  {
    v1 = sub_100075EB0(&qword_100BD8BF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD8C00);
  }
  return result;
}

uint64_t sub_1003308D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_1003308E4(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for LocationViewAction(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

uint64_t sub_100330920(int a1, int a2)
{
  uint64_t v2;
  unsigned int v3;

  if (a1 == 2)
  {
    v2 = 0;
    if (a2 != 2)
      return v2;
    goto LABEL_6;
  }
  if (a1 == 3)
  {
    v2 = 0;
    if (a2 != 3)
      return v2;
LABEL_6:
    v3 = a1 ^ a2;
LABEL_9:
    if (((v3 >> 8) & 1) == 0)
    {
      if (BYTE2(a1) == 2)
      {
        if (BYTE2(a2) != 2)
          return 0;
      }
      else if (BYTE2(a1) == 3)
      {
        if (BYTE2(a2) != 3)
          return 0;
      }
      else if ((BYTE2(a2) & 0xFE) == 2 || ((((a1 & 0x10000) == 0) ^ ((a2 & 0x10000u) >> 16)) & 1) == 0)
      {
        return 0;
      }
      return 1;
    }
    return v2;
  }
  if ((a2 & 0xFE) == 2)
    return 0;
  v2 = 0;
  v3 = a1 ^ a2;
  if (((a1 ^ a2) & 1) == 0)
    goto LABEL_9;
  return v2;
}

uint64_t sub_1003309E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;

  if (a1[1])
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | (a1[2] << 16) | *a1;
  if (a2[1])
    v4 = 256;
  else
    v4 = 0;
  return sub_100330920(v3, v4 | (a2[2] << 16) | *a2);
}

void sub_100330A20(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  _BYTE v142[24];
  uint64_t v143;

  v128 = a3;
  v129 = a2;
  v127 = a1;
  v131 = a5;
  sub_1000BA294(&qword_100BD8CA8);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v135 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  sub_100079F7C();
  v136 = v9;
  sub_1000BA294(&qword_100BD8CB0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_1000986FC();
  v130 = v11;
  sub_10009D2A4();
  __chkstk_darwin(v12);
  v14 = (char *)&v126 - v13;
  sub_1000BA294(&qword_100BD8CB8);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_1000986FC();
  v134 = v16;
  sub_10009D2A4();
  __chkstk_darwin(v17);
  sub_100079F7C();
  v138 = v18;
  sub_1000BA294(&qword_100BD8CC0);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v133 = v20;
  sub_10009D2A4();
  __chkstk_darwin(v21);
  sub_100079F7C();
  v139 = v22;
  v23 = sub_1000BA294(&qword_100BD8CC8);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_100098728();
  v27 = v26 - v25;
  v28 = sub_1000BA294(&qword_100BD8CD0);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100098728();
  v32 = v31 - v30;
  v33 = sub_1000BA294(&qword_100BD8CD8);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  sub_100098728();
  v37 = v36 - v35;
  sub_1000BA294(&qword_100BD8CE0);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_1000986FC();
  v137 = v39;
  sub_10009D2A4();
  __chkstk_darwin(v40);
  sub_100079F7C();
  v140 = v41;
  v42 = sub_1000DCDC4();
  v132 = v14;
  if (v143)
  {
    v43 = sub_1000BA294(&qword_100BD8D20);
    if ((swift_dynamicCast(&v141, v142, v43, &type metadata for NotificationsOptInListTip, 6) & 1) != 0)
    {
      v142[0] = v141;
      v44 = sub_1000989D4((uint64_t)&unk_100B6DDD0);
      *(_BYTE *)(v44 + 16) = v127;
      v45 = v128;
      v46 = v129;
      *(_QWORD *)(v44 + 24) = v129;
      *(_QWORD *)(v44 + 32) = v45;
      *(_QWORD *)(v44 + 40) = a4;
      v47 = sub_100162BE8();
      swift_unknownObjectRetain(v46);
      sub_100094EE4();
      TipView.init(_:arrowEdge:action:)(v142, 4, sub_100331638, v44, &type metadata for NotificationsOptInListTip, v47);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v32, v37, v33);
      swift_storeEnumTagMultiPayload(v32, v28, 0);
      sub_1000E6FC8(&qword_100BD8D28, &qword_100BD8CD8);
      sub_1000E6FC8(&qword_100BD8D30, &qword_100BD8CC8);
      v48 = v137;
      sub_1000B4804(v49, v50, v51, v52, v49);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v33);
      v53 = sub_1000BA294(&qword_100BD8CF0);
      sub_10009926C(v48, 0, v54, v53);
      sub_1003315EC(v48, v140);
      v55 = v130;
      v56 = v131;
      v57 = v138;
      goto LABEL_11;
    }
  }
  else
  {
    sub_1000DD9F0(v42, &qword_100BD8CE8);
  }
  v57 = v138;
  v58 = sub_1000DCDC4();
  if (!v143)
  {
    sub_1000DD9F0(v58, &qword_100BD8CE8);
    goto LABEL_9;
  }
  v59 = sub_1000BA294(&qword_100BD8D20);
  if (!sub_1000BA958(v59, v60, v61, (uint64_t)&type metadata for NotificationsResubscriptionListTip))
  {
LABEL_9:
    v73 = sub_1000BA294(&qword_100BD8CF0);
    sub_10009926C(v140, 1, v74, v73);
    goto LABEL_10;
  }
  v62 = sub_1000989D4((uint64_t)&unk_100B6DDA8);
  *(_BYTE *)(v62 + 16) = v127;
  v126 = v23;
  sub_100098C28((_QWORD *)v62);
  v63 = sub_100162D68();
  sub_100094EE4();
  v64 = sub_1000D1744();
  TipView.init(_:arrowEdge:action:)(v64, 4, sub_1003315CC, v62, &type metadata for NotificationsResubscriptionListTip, v63);
  v65 = v126;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v32, v27, v126);
  swift_storeEnumTagMultiPayload(v32, v28, 1);
  sub_1000E6FC8(&qword_100BD8D28, &qword_100BD8CD8);
  sub_1000E6FC8(&qword_100BD8D30, &qword_100BD8CC8);
  v66 = v137;
  sub_1000B4804(v67, v68, v69, v70, v67);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v65);
  v71 = sub_1000BA294(&qword_100BD8CF0);
  sub_10009926C(v66, 0, v72, v71);
  sub_1003315EC(v66, v140);
LABEL_10:
  v55 = v130;
  v56 = v131;
LABEL_11:
  v75 = v139;
  v76 = sub_1000DCDC4();
  if (v143)
  {
    v77 = sub_1000BA294(&qword_100BD8D20);
    if (sub_1000BA958(v77, v78, v79, (uint64_t)&type metadata for HomeAndWorkAddedTip))
    {
      v80 = sub_1000989D4((uint64_t)&unk_100B6DD80);
      *(_BYTE *)(v80 + 16) = v127;
      sub_100098C28((_QWORD *)v80);
      v81 = sub_100162DE0();
      sub_100094EE4();
      v82 = sub_1000D1744();
      TipView.init(_:arrowEdge:action:)(v82, 4, sub_1003315B8, v80, &type metadata for HomeAndWorkAddedTip, v81);
    }
  }
  else
  {
    sub_1000DD9F0(v76, &qword_100BD8CE8);
  }
  v83 = (uint64_t)v132;
  v84 = sub_1000BA294(&qword_100BD8CF8);
  v87 = sub_1000C4804(v75, v85, v86, v84);
  if (v143)
  {
    v88 = sub_1000BA294(&qword_100BD8D20);
    if (sub_1000BA958(v88, v89, v90, (uint64_t)&type metadata for HomeAndWorkUpdatedTip))
    {
      v91 = sub_100162DA4();
      sub_1000C38B4(v91, v92, (uint64_t)LocationSearchEntityFromStringResolver.init(), v93, (uint64_t)&type metadata for HomeAndWorkUpdatedTip);
    }
  }
  else
  {
    sub_1000DD9F0(v87, &qword_100BD8CE8);
  }
  v94 = sub_1000BA294(&qword_100BD8D00);
  v97 = sub_1000C4804(v57, v95, v96, v94);
  if (v143)
  {
    v98 = sub_1000BA294(&qword_100BD8D20);
    if (sub_1000BA958(v98, v99, v100, (uint64_t)&type metadata for HomeUpdatedTip))
    {
      v101 = sub_100162D2C();
      sub_1000C38B4(v101, v102, (uint64_t)LocationSearchEntityFromStringResolver.init(), v103, (uint64_t)&type metadata for HomeUpdatedTip);
    }
  }
  else
  {
    sub_1000DD9F0(v97, &qword_100BD8CE8);
  }
  v104 = sub_1000BA294(&qword_100BD8D08);
  v107 = sub_1000C4804(v83, v105, v106, v104);
  if (!v143)
  {
    sub_1000DD9F0(v107, &qword_100BD8CE8);
    goto LABEL_27;
  }
  v108 = sub_1000BA294(&qword_100BD8D20);
  if (!sub_1000BA958(v108, v109, v110, (uint64_t)&type metadata for WorkUpdatedTip))
  {
LABEL_27:
    v114 = 1;
    goto LABEL_28;
  }
  v111 = sub_100162CF0();
  sub_1000C38B4(v111, v112, (uint64_t)LocationSearchEntityFromStringResolver.init(), v113, (uint64_t)&type metadata for WorkUpdatedTip);
  v114 = 0;
LABEL_28:
  v115 = sub_1000BA294(&qword_100BD8D10);
  v116 = v136;
  sub_10009926C(v136, v114, v117, v115);
  v118 = v137;
  sub_10007EBC8(v140, v137, &qword_100BD8CE0);
  v119 = v75;
  v120 = v133;
  sub_10007EBC8(v119, v133, &qword_100BD8CC0);
  v121 = v57;
  v122 = v134;
  sub_10007EBC8(v121, v134, &qword_100BD8CB8);
  sub_10007EBC8(v83, v55, &qword_100BD8CB0);
  v123 = v135;
  sub_10007EBC8(v116, v135, &qword_100BD8CA8);
  sub_10007EBC8(v118, v56, &qword_100BD8CE0);
  v124 = v83;
  v125 = (int *)sub_1000BA294(&qword_100BD8D18);
  sub_10007EBC8(v120, v56 + v125[12], &qword_100BD8CC0);
  sub_10007EBC8(v122, v56 + v125[16], &qword_100BD8CB8);
  sub_10007EBC8(v55, v56 + v125[20], &qword_100BD8CB0);
  sub_10007EBC8(v123, v56 + v125[24], &qword_100BD8CA8);
  sub_100021AA4(v116, &qword_100BD8CA8);
  sub_100021AA4(v124, &qword_100BD8CB0);
  sub_100021AA4(v138, &qword_100BD8CB8);
  sub_100021AA4(v139, &qword_100BD8CC0);
  sub_100021AA4(v140, &qword_100BD8CE0);
  sub_100021AA4(v123, &qword_100BD8CA8);
  sub_100021AA4(v55, &qword_100BD8CB0);
  sub_100021AA4(v122, &qword_100BD8CB8);
  sub_100021AA4(v120, &qword_100BD8CC0);
  sub_100021AA4(v118, &qword_100BD8CE0);
}

uint64_t sub_100331290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for Tips.InvalidationReason(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10082FB80(3);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Tips.InvalidationReason.actionPerformed(_:), v0);
  v4 = sub_100162DE0();
  Tip.invalidate(reason:)(v3, &type metadata for HomeAndWorkAddedTip, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_100331338(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_100330A20(*(unsigned __int8 *)v1, v1[1], v1[2], v1[3], a1);
}

uint64_t initializeBufferWithCopyOfBuffer for ListTipGroupViewModel(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ListTipGroupViewModel(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  BOOL v5;

  if (!a2)
  {
    v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = a1[3];
      if (a1[3])
        goto LABEL_5;
    }
    else
    {
      v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
      {
LABEL_5:
        v3 = (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  v4 = a1[1];
  v5 = v4 >= 2;
  v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ListTipGroupViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 1) = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListTipGroupViewModel()
{
  return &type metadata for ListTipGroupViewModel;
}

uint64_t destroy for ListTipGroupView(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for ListTipGroupView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_unknownObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for ListTipGroupView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for ListTipGroupView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for ListTipGroupView()
{
  return &type metadata for ListTipGroupView;
}

uint64_t sub_1003315A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB14C4, 1);
}

uint64_t sub_1003315B8()
{
  return sub_100331290();
}

uint64_t sub_1003315CC()
{
  return sub_1005B4BC4();
}

uint64_t sub_1003315EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD8CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100331638()
{
  uint64_t v0;

  sub_1005B4AA8(*(_BYTE *)(v0 + 16));
}

void sub_100331660()
{
  sub_10003D310(&qword_100BD8D38, &qword_100BD8D40, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t *sub_10033168C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1000BA294(&qword_100BD8D48);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for ColorScheme(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
  }
  swift_retain();
  return a1;
}

double sub_100331770(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = type metadata accessor for ColorScheme(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = *(_QWORD *)(a1 + *(int *)(sub_1000BA294(&qword_100BD8D48) + 28));
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

char *sub_1003317D4(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for ColorScheme(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  }
  v6 = sub_1000BA294(&qword_100BD8D48);
  *(_QWORD *)&a1[*(int *)(v6 + 28)] = *(_QWORD *)&a2[*(int *)(v6 + 28)];
  swift_retain();
  return a1;
}

char *sub_10033188C(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for ColorScheme(0);
  v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
  v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
LABEL_7:
  v9 = *(int *)(sub_1000BA294(&qword_100BD8D48) + 28);
  v10 = *(_QWORD *)&a1[v9];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_retain();
  swift_release(v10);
  return a1;
}

char *sub_100331998(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for ColorScheme(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  }
  v6 = sub_1000BA294(&qword_100BD8D48);
  *(_QWORD *)&a1[*(int *)(v6 + 28)] = *(_QWORD *)&a2[*(int *)(v6 + 28)];
  return a1;
}

char *sub_100331A4C(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for ColorScheme(0);
  v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
  v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
LABEL_7:
  v9 = *(int *)(sub_1000BA294(&qword_100BD8D48) + 28);
  v10 = *(_QWORD *)&a1[v9];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_release(v10);
  return a1;
}

uint64_t sub_100331B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100331B5C);
}

uint64_t sub_100331B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD8D48);
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100331B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100331BA0);
}

uint64_t sub_100331BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD8D48);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WeatherMapStatusBarColorSceneModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD8DA8;
  if (!qword_100BD8DA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WeatherMapStatusBarColorSceneModifier);
  return result;
}

void sub_100331C14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100331C7C(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

void sub_100331C7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BD8DB8)
  {
    v2 = sub_100075EB0((uint64_t *)&unk_100C09DB0);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BD8DB8);
  }
}

uint64_t sub_100331CD4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1514, 1);
}

uint64_t sub_100331CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a1;
  v31 = a2;
  v3 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - v7;
  v9 = sub_1000BA968();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD8DE8);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294(&qword_100BD8DF0);
  v16 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033204C(v2, (uint64_t)v12);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B6DE40, v20 + v11, v19 | 7);
  sub_100332134((uint64_t)v12, v21 + v20);
  v22 = sub_1000BA294(&qword_100BD8DF8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v15, v29, v22);
  v23 = (uint64_t (**)(uint64_t))&v15[*(int *)(v13 + 36)];
  *v23 = sub_100332178;
  v23[1] = (uint64_t (*)(uint64_t))v21;
  v24 = sub_1000BA294(&qword_100BD8D48);
  State.wrappedValue.getter(v5, v24);
  v25 = type metadata accessor for ColorScheme(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v25) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v8, enum case for ColorScheme.dark(_:), v25);
    sub_100021A68((uint64_t)v5, (uint64_t *)&unk_100C09DB0);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v8, v5, v25);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v25);
  v26 = sub_1003321B0();
  View.statusBarPreserving(preferredColorScheme:)(v8, v13, v26);
  sub_100021A68((uint64_t)v8, (uint64_t *)&unk_100C09DB0);
  sub_100021A68((uint64_t)v15, &qword_100BD8DE8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v31, v18, v30);
}

uint64_t sub_100331F80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - v6;
  sub_10033224C(a1, (uint64_t)&v10 - v6);
  sub_10033224C((uint64_t)v7, (uint64_t)v4);
  v8 = sub_1000BA294(&qword_100BD8D48);
  State.wrappedValue.setter(v4, v8);
  return sub_100021A68((uint64_t)v7, (uint64_t *)&unk_100C09DB0);
}

uint64_t sub_10033204C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherMapStatusBarColorSceneModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100332090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_1000BA968() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for ColorScheme(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  v6 = sub_1000BA294(&qword_100BD8D48);
  swift_release(*(_QWORD *)(v0 + v3 + *(int *)(v6 + 28)));
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100332134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherMapStatusBarColorSceneModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100332178(uint64_t a1)
{
  sub_1000BA968();
  return sub_100331F80(a1);
}

unint64_t sub_1003321B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD8E00;
  if (!qword_100BD8E00)
  {
    v1 = sub_100075EB0(&qword_100BD8DE8);
    sub_10005F124(&qword_100BD8E08, &qword_100BD8DF8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10005F124(&qword_100BD8E10, &qword_100BD8E18, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD8E00);
  }
  return result;
}

uint64_t sub_10033224C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100332294()
{
  _QWORD v1[2];

  v1[0] = sub_100075EB0(&qword_100BD8DE8);
  v1[1] = sub_1003321B0();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.statusBarPreserving(preferredColorScheme:)>>, 1);
}

uint64_t *sub_1003322E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for WeatherDescription(0);
    swift_bridgeObjectRetain(v4);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      v10 = sub_1000BA294(&qword_100BC3368);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t *sub_1003323C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherDescription(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1000BA294(&qword_100BC3368);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  return a1;
}

_QWORD *sub_1003324D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for WeatherDescription(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1000BA294(&qword_100BC3368);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_100332584(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for WeatherDescription(0);
  v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1000BA294(&qword_100BC3368);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_100332690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10033269C);
}

uint64_t sub_10033269C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BC3368);
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100332714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100332720);
}

_QWORD *sub_100332720(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC3368);
    return (_QWORD *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100332790(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x65646F4D77656976 && a2 == 0xE90000000000006CLL)
  {
    v5 = 0xE90000000000006CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65646F4D77656976, 0xE90000000000006CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x637365446F726568 && a2 == 0xEF6E6F6974706972)
  {
    swift_bridgeObjectRelease(0xEF6E6F6974706972);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x637365446F726568, 0xEF6E6F6974706972, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1003328AC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x637365446F726568;
  else
    return 0x65646F4D77656976;
}

uint64_t sub_1003328F4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  uint64_t v20;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BD8EE0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_100332D10();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys, &type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys, v12, v10, v11);
  v20 = *v3;
  v19 = 0;
  v13 = sub_100332E08();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v19, v5, &type metadata for HourlyForecastComponentViewModel, v13);
  if (!v2)
  {
    v14 = (char *)v3 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0) + 20);
    v18 = 1;
    v15 = type metadata accessor for WeatherDescription(0);
    v16 = sub_100087964(&qword_100BCDEC0, (uint64_t)&protocol conformance descriptor for WeatherDescription);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v14, &v18, v5, v15, v16);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

void sub_100332A50(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;

  sub_1000BA294(&qword_100BC3368);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v17 = v6 - v5;
  v18 = sub_1000BA294(&qword_100BD8EC8);
  __chkstk_darwin(v18);
  sub_100098728();
  v7 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = (_QWORD *)(v10 - v9);
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_100332D10();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys, &type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys, v14, v12, v13);
  if (v2)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    v20 = 0;
    sub_100332D4C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for HourlyForecastComponentViewModel, &v20, v18);
    *v11 = v21;
    v15 = type metadata accessor for WeatherDescription(0);
    v19 = 1;
    sub_100087964(&qword_100BCDEB0, (uint64_t)&protocol conformance descriptor for WeatherDescription);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v15, &v19, v18, v15);
    sub_1000C38C4();
    sub_1000F6C3C(v17, (uint64_t)v11 + *(int *)(v7 + 20));
    sub_100332D88((uint64_t)v11, a2);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    sub_100332DCC((uint64_t)v11);
  }
}

uint64_t sub_100332C68()
{
  char *v0;

  return sub_1003328AC(*v0);
}

uint64_t sub_100332C70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100332790(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100332C94(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100332D10();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100332CBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100332D10();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100332CE4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100332A50(a1, a2);
}

uint64_t sub_100332CF8(_QWORD *a1)
{
  return sub_1003328F4(a1);
}

unint64_t sub_100332D10()
{
  unint64_t result;

  result = qword_100BD8ED0;
  if (!qword_100BD8ED0)
  {
    result = swift_getWitnessTable(&unk_100995E4C, &type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD8ED0);
  }
  return result;
}

unint64_t sub_100332D4C()
{
  unint64_t result;

  result = qword_100BD8ED8;
  if (!qword_100BD8ED8)
  {
    result = swift_getWitnessTable(&unk_1009AD2CC, &type metadata for HourlyForecastComponentViewModel);
    atomic_store(result, (unint64_t *)&qword_100BD8ED8);
  }
  return result;
}

uint64_t sub_100332D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100332DCC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100332E08()
{
  unint64_t result;

  result = qword_100BD8EE8;
  if (!qword_100BD8EE8)
  {
    result = swift_getWitnessTable(&unk_1009AD2A4, &type metadata for HourlyForecastComponentViewModel);
    atomic_store(result, (unint64_t *)&qword_100BD8EE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HourlyForecastComponentPreprocessedDataModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100332E90 + 4 * byte_100995CA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100332EC4 + 4 * byte_100995CA0[v4]))();
}

uint64_t sub_100332EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100332ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100332ED4);
  return result;
}

uint64_t sub_100332EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100332EE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100332EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100332EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_100332F14()
{
  unint64_t result;

  result = qword_100BD8EF0;
  if (!qword_100BD8EF0)
  {
    result = swift_getWitnessTable(&unk_100995E24, &type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD8EF0);
  }
  return result;
}

unint64_t sub_100332F54()
{
  unint64_t result;

  result = qword_100BD8EF8;
  if (!qword_100BD8EF8)
  {
    result = swift_getWitnessTable(&unk_100995D94, &type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD8EF8);
  }
  return result;
}

unint64_t sub_100332F94()
{
  unint64_t result;

  result = qword_100BD8F00;
  if (!qword_100BD8F00)
  {
    result = swift_getWitnessTable(&unk_100995DBC, &type metadata for HourlyForecastComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BD8F00);
  }
  return result;
}

_QWORD *sub_100332FD0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v113)(char *, char *, uint64_t, __n128);
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  _QWORD *v119;
  __int128 v120;
  _QWORD *v121;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v13 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *v16 = *v17;
    *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
    v120 = *(_OWORD *)((char *)a2 + v15);
    *(_OWORD *)((char *)a1 + v15) = v120;
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)a1 + v18 + 24) = v21;
    v22 = v21;
    v23 = **(void (***)(char *, char *, uint64_t))(v21 - 8);
    swift_retain();
    swift_unknownObjectRetain(v120);
    v23(v19, v20, v22);
    v118 = a3;
    v24 = a3[8];
    v121 = a1;
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for LocationModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = (int *)type metadata accessor for ListLocationViewModel(0);
    v29 = v28[5];
    v30 = &v25[v29];
    v31 = &v26[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = v28[6];
    v33 = &v25[v32];
    v34 = &v26[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = v28[7];
    v37 = &v25[v36];
    v38 = &v26[v36];
    v39 = type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain(v35);
    if (swift_getEnumCaseMultiPayload(v38) == 1)
    {
      v40 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40))
      {
        v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        v42 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v37, v38, v40);
        v42 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v40);
      }
    }
    else
    {
      v43 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v43;
      swift_bridgeObjectRetain(v43);
      v42 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v39, v42);
    v44 = v28[8];
    v45 = &v25[v44];
    v46 = &v26[v44];
    v47 = *(_QWORD *)v46;
    v48 = *((_QWORD *)v46 + 1);
    v49 = *((_QWORD *)v46 + 2);
    v50 = *((_QWORD *)v46 + 3);
    v51 = v46[32];
    sub_100176D88(*(_QWORD *)v46, v48, v49, v50, v51);
    *(_QWORD *)v45 = v47;
    *((_QWORD *)v45 + 1) = v48;
    *((_QWORD *)v45 + 2) = v49;
    *((_QWORD *)v45 + 3) = v50;
    v45[32] = v51;
    v25[v28[9]] = v26[v28[9]];
    v52 = v28[10];
    v53 = &v25[v52];
    v54 = &v26[v52];
    v55 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
    {
      v56 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
    }
    v57 = v28[11];
    v58 = &v25[v57];
    v59 = &v26[v57];
    v60 = type metadata accessor for TimeZone(0);
    v119 = a2;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
    {
      v61 = sub_1000BA294(&qword_100BCCC50);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
    }
    v62 = v28[12];
    v63 = &v25[v62];
    v64 = &v26[v62];
    v117 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v117;
    v65 = v28[13];
    v66 = &v25[v65];
    v67 = &v26[v65];
    v116 = *((_QWORD *)v67 + 1);
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *((_QWORD *)v66 + 1) = v116;
    v25[v28[14]] = v26[v28[14]];
    v68 = v28[15];
    v69 = &v25[v68];
    v70 = &v26[v68];
    v71 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_QWORD *)v69 + 1) = v71;
    v72 = v28[16];
    v73 = &v25[v72];
    v74 = &v26[v72];
    v75 = *((_QWORD *)v74 + 1);
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = v75;
    v76 = v28[17];
    v77 = &v25[v76];
    v78 = &v26[v76];
    v79 = *((_QWORD *)v78 + 1);
    *(_QWORD *)v77 = *(_QWORD *)v78;
    *((_QWORD *)v77 + 1) = v79;
    v80 = v28[18];
    v81 = &v25[v80];
    v82 = &v26[v80];
    v83 = *((_QWORD *)v82 + 1);
    *(_QWORD *)v81 = *(_QWORD *)v82;
    *((_QWORD *)v81 + 1) = v83;
    v84 = v28[19];
    v85 = &v25[v84];
    v86 = &v26[v84];
    v87 = *((_QWORD *)v86 + 1);
    *(_QWORD *)v85 = *(_QWORD *)v86;
    *((_QWORD *)v85 + 1) = v87;
    v88 = v28[20];
    v89 = &v25[v88];
    v90 = &v26[v88];
    v91 = *((_QWORD *)v90 + 1);
    *(_QWORD *)v89 = *(_QWORD *)v90;
    *((_QWORD *)v89 + 1) = v91;
    v25[v28[21]] = v26[v28[21]];
    v92 = v28[22];
    v114 = &v26[v92];
    v115 = &v25[v92];
    v93 = type metadata accessor for WeatherConditionBackgroundModel(0);
    v113 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v93 - 8) + 16);
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v116);
    swift_bridgeObjectRetain(v71);
    swift_bridgeObjectRetain(v75);
    swift_bridgeObjectRetain(v79);
    swift_bridgeObjectRetain(v83);
    swift_bridgeObjectRetain(v87);
    v94 = swift_bridgeObjectRetain(v91);
    v113(v115, v114, v93, v94);
    v25[v28[23]] = v26[v28[23]];
    v25[v28[24]] = v26[v28[24]];
    v95 = v28[25];
    v96 = &v25[v95];
    v97 = &v26[v95];
    v98 = *((_QWORD *)v97 + 1);
    *(_QWORD *)v96 = *(_QWORD *)v97;
    *((_QWORD *)v96 + 1) = v98;
    *(_QWORD *)&v25[v28[26]] = *(_QWORD *)&v26[v28[26]];
    v99 = v118[9];
    v100 = v118[10];
    v13 = v121;
    v101 = (_QWORD *)((char *)v121 + v99);
    v102 = (_QWORD *)((char *)v119 + v99);
    v103 = v102[1];
    *v101 = *v102;
    v101[1] = v103;
    *(_QWORD *)((char *)v121 + v100) = *(_QWORD *)((char *)v119 + v100);
    v104 = v118[11];
    v105 = v118[12];
    v106 = (_QWORD *)((char *)v121 + v104);
    v107 = (_QWORD *)((char *)v119 + v104);
    v108 = v107[1];
    *v106 = *v107;
    v106[1] = v108;
    v109 = (char *)v121 + v105;
    v110 = (char *)v119 + v105;
    v111 = *((_QWORD *)v110 + 1);
    *(_QWORD *)v109 = *(_QWORD *)v110;
    *((_QWORD *)v109 + 1) = v111;
    v109[16] = v110[16];
    swift_bridgeObjectRetain(v98);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

double sub_100333588(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  double result;

  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    v4 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5] + 8));
  swift_unknownObjectRelease(*(_QWORD *)((char *)a1 + a2[6]));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + a2[7]));
  v5 = (char *)a1 + a2[8];
  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)&v5[v7[7]];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v9 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v10 = &v5[v7[8]];
  sub_100176DD4(*(_QWORD *)v10, *((_QWORD *)v10 + 1), *((_QWORD *)v10 + 2), *((_QWORD *)v10 + 3), v10[32]);
  v11 = (uint64_t)&v5[v7[10]];
  v12 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = (uint64_t)&v5[v7[11]];
  v14 = type metadata accessor for TimeZone(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = &v5[v7[22]];
  v16 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)((char *)a1 + a2[9] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[11] + 8));
  v17 = (_QWORD *)((char *)a1 + a2[12]);
  swift_release(*v17);
  *(_QWORD *)&result = swift_release(v17[1]).n128_u64[0];
  return result;
}

_QWORD *sub_100333844(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v110)(char *, char *, uint64_t, __n128);
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  int *v116;
  _QWORD *v117;
  _QWORD *v118;

  v6 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *v13 = *v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v115 = *(_OWORD *)((char *)a2 + v12);
  *(_OWORD *)((char *)a1 + v12) = v115;
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_OWORD *)((char *)a2 + v15 + 24);
  *(_OWORD *)((char *)a1 + v15 + 24) = v18;
  v19 = v18;
  v20 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
  swift_retain();
  swift_unknownObjectRetain(v115);
  v20(v16, v17, v19);
  v116 = a3;
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = (int *)type metadata accessor for ListLocationViewModel(0);
  v26 = v25[5];
  v27 = &v22[v26];
  v28 = &v23[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v25[6];
  v30 = &v22[v29];
  v31 = &v23[v29];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  v33 = v25[7];
  v34 = &v22[v33];
  v35 = &v23[v33];
  v36 = type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain(v32);
  v117 = a2;
  if (swift_getEnumCaseMultiPayload(v35) == 1)
  {
    v37 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37))
    {
      v38 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      v39 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
      v39 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v37);
    }
  }
  else
  {
    v40 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v40;
    swift_bridgeObjectRetain(v40);
    v39 = 0;
  }
  swift_storeEnumTagMultiPayload(v34, v36, v39);
  v41 = v25[8];
  v42 = &v22[v41];
  v43 = &v23[v41];
  v44 = *(_QWORD *)v43;
  v45 = *((_QWORD *)v43 + 1);
  v46 = *((_QWORD *)v43 + 2);
  v47 = *((_QWORD *)v43 + 3);
  v48 = v43[32];
  sub_100176D88(*(_QWORD *)v43, v45, v46, v47, v48);
  *(_QWORD *)v42 = v44;
  *((_QWORD *)v42 + 1) = v45;
  *((_QWORD *)v42 + 2) = v46;
  *((_QWORD *)v42 + 3) = v47;
  v42[32] = v48;
  v22[v25[9]] = v23[v25[9]];
  v49 = v25[10];
  v50 = &v22[v49];
  v51 = &v23[v49];
  v52 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
  {
    v53 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
  }
  v54 = v25[11];
  v55 = &v22[v54];
  v56 = &v23[v54];
  v57 = type metadata accessor for TimeZone(0);
  v118 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
  {
    v58 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
  }
  v59 = v25[12];
  v60 = &v22[v59];
  v61 = &v23[v59];
  v114 = *((_QWORD *)v61 + 1);
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *((_QWORD *)v60 + 1) = v114;
  v62 = v25[13];
  v63 = &v22[v62];
  v64 = &v23[v62];
  v113 = *((_QWORD *)v64 + 1);
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *((_QWORD *)v63 + 1) = v113;
  v22[v25[14]] = v23[v25[14]];
  v65 = v25[15];
  v66 = &v22[v65];
  v67 = &v23[v65];
  v68 = *((_QWORD *)v67 + 1);
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *((_QWORD *)v66 + 1) = v68;
  v69 = v25[16];
  v70 = &v22[v69];
  v71 = &v23[v69];
  v72 = *((_QWORD *)v71 + 1);
  *(_QWORD *)v70 = *(_QWORD *)v71;
  *((_QWORD *)v70 + 1) = v72;
  v73 = v25[17];
  v74 = &v22[v73];
  v75 = &v23[v73];
  v76 = *((_QWORD *)v75 + 1);
  *(_QWORD *)v74 = *(_QWORD *)v75;
  *((_QWORD *)v74 + 1) = v76;
  v77 = v25[18];
  v78 = &v22[v77];
  v79 = &v23[v77];
  v80 = *((_QWORD *)v79 + 1);
  *(_QWORD *)v78 = *(_QWORD *)v79;
  *((_QWORD *)v78 + 1) = v80;
  v81 = v25[19];
  v82 = &v22[v81];
  v83 = &v23[v81];
  v84 = *((_QWORD *)v83 + 1);
  *(_QWORD *)v82 = *(_QWORD *)v83;
  *((_QWORD *)v82 + 1) = v84;
  v85 = v25[20];
  v86 = &v22[v85];
  v87 = &v23[v85];
  v88 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = *(_QWORD *)v87;
  *((_QWORD *)v86 + 1) = v88;
  v22[v25[21]] = v23[v25[21]];
  v89 = v25[22];
  v111 = &v23[v89];
  v112 = &v22[v89];
  v90 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v110 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v90 - 8) + 16);
  swift_bridgeObjectRetain(v114);
  swift_bridgeObjectRetain(v113);
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRetain(v84);
  v91 = swift_bridgeObjectRetain(v88);
  v110(v112, v111, v90, v91);
  v22[v25[23]] = v23[v25[23]];
  v22[v25[24]] = v23[v25[24]];
  v92 = v25[25];
  v93 = &v22[v92];
  v94 = &v23[v92];
  v95 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = *(_QWORD *)v94;
  *((_QWORD *)v93 + 1) = v95;
  *(_QWORD *)&v22[v25[26]] = *(_QWORD *)&v23[v25[26]];
  v96 = v116[9];
  v97 = v116[10];
  v98 = (_QWORD *)((char *)v118 + v96);
  v99 = (_QWORD *)((char *)v117 + v96);
  v100 = v99[1];
  *v98 = *v99;
  v98[1] = v100;
  *(_QWORD *)((char *)v118 + v97) = *(_QWORD *)((char *)v117 + v97);
  v101 = v116[11];
  v102 = v116[12];
  v103 = (_QWORD *)((char *)v118 + v101);
  v104 = (_QWORD *)((char *)v117 + v101);
  v105 = v104[1];
  *v103 = *v104;
  v103[1] = v105;
  v106 = (char *)v118 + v102;
  v107 = (char *)v117 + v102;
  v108 = *((_QWORD *)v107 + 1);
  *(_QWORD *)v106 = *(_QWORD *)v107;
  *((_QWORD *)v106 + 1) = v108;
  v106[16] = v107[16];
  swift_bridgeObjectRetain(v95);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v118;
}

_QWORD *sub_100333DD4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  int *v126;
  _QWORD *v127;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BC2990);
    v6 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *v12 = *v13;
  v14 = *((_QWORD *)v12 + 1);
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release(v14);
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = *v17;
  v19 = v17[1];
  v20 = *v16;
  *v16 = *v17;
  swift_unknownObjectRetain(v18);
  swift_unknownObjectRelease(v20);
  v16[1] = v19;
  sub_100094D04((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  v126 = a3;
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = (int *)type metadata accessor for ListLocationViewModel(0);
  v26 = v25[5];
  v27 = &v22[v26];
  v28 = &v23[v26];
  v29 = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v29;
  v30 = v25[6];
  v31 = &v22[v30];
  v32 = &v23[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v34 = v25[7];
    v35 = &v22[v34];
    v36 = &v23[v34];
    sub_1000215BC((uint64_t)&v22[v34], type metadata accessor for ListLocationRowPrimaryText);
    v37 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v36) == 1)
    {
      v38 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v38))
      {
        v39 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        v40 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
        v40 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v38);
      }
    }
    else
    {
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v41 = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 1) = v41;
      swift_bridgeObjectRetain(v41);
      v40 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v37, v40);
  }
  v127 = a2;
  v42 = v25[8];
  v43 = &v22[v42];
  v44 = &v23[v42];
  v45 = *(_QWORD *)v44;
  v46 = *((_QWORD *)v44 + 1);
  v47 = *((_QWORD *)v44 + 2);
  v48 = *((_QWORD *)v44 + 3);
  v49 = v44[32];
  sub_100176D88(*(_QWORD *)v44, v46, v47, v48, v49);
  v50 = *(_QWORD *)v43;
  v51 = *((_QWORD *)v43 + 1);
  v52 = *((_QWORD *)v43 + 2);
  v53 = *((_QWORD *)v43 + 3);
  *(_QWORD *)v43 = v45;
  *((_QWORD *)v43 + 1) = v46;
  *((_QWORD *)v43 + 2) = v47;
  *((_QWORD *)v43 + 3) = v48;
  v54 = v43[32];
  v43[32] = v49;
  sub_100176DD4(v50, v51, v52, v53, v54);
  v22[v25[9]] = v23[v25[9]];
  v55 = v25[10];
  v56 = &v22[v55];
  v57 = &v23[v55];
  v58 = type metadata accessor for Date(0);
  v59 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v58);
  v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v61 = *(_QWORD *)(v58 - 8);
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v56, v58);
LABEL_18:
    v62 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v56, v57, v58);
LABEL_19:
  v63 = v25[11];
  v64 = &v22[v63];
  v65 = &v23[v63];
  v66 = type metadata accessor for TimeZone(0);
  v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (!v67)
  {
    v69 = *(_QWORD *)(v66 - 8);
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 24))(v64, v65, v66);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v66);
    goto LABEL_24;
  }
  if (v68)
  {
LABEL_24:
    v70 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
LABEL_25:
  v71 = v25[12];
  v72 = &v22[v71];
  v73 = &v23[v71];
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v74 = *((_QWORD *)v73 + 1);
  *((_QWORD *)v72 + 1) = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease();
  v75 = v25[13];
  v76 = &v22[v75];
  v77 = &v23[v75];
  *(_QWORD *)v76 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *((_QWORD *)v76 + 1) = v78;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRelease();
  v22[v25[14]] = v23[v25[14]];
  v79 = v25[15];
  v80 = &v22[v79];
  v81 = &v23[v79];
  *(_QWORD *)v80 = *(_QWORD *)v81;
  v82 = *((_QWORD *)v81 + 1);
  *((_QWORD *)v80 + 1) = v82;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRelease();
  v83 = v25[16];
  v84 = &v22[v83];
  v85 = &v23[v83];
  *(_QWORD *)v84 = *(_QWORD *)v85;
  v86 = *((_QWORD *)v85 + 1);
  *((_QWORD *)v84 + 1) = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease();
  v87 = v25[17];
  v88 = &v22[v87];
  v89 = &v23[v87];
  *(_QWORD *)v88 = *(_QWORD *)v89;
  v90 = *((_QWORD *)v89 + 1);
  *((_QWORD *)v88 + 1) = v90;
  swift_bridgeObjectRetain(v90);
  swift_bridgeObjectRelease();
  v91 = v25[18];
  v92 = &v22[v91];
  v93 = &v23[v91];
  *(_QWORD *)v92 = *(_QWORD *)v93;
  v94 = *((_QWORD *)v93 + 1);
  *((_QWORD *)v92 + 1) = v94;
  swift_bridgeObjectRetain(v94);
  swift_bridgeObjectRelease();
  v95 = v25[19];
  v96 = &v22[v95];
  v97 = &v23[v95];
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v98 = *((_QWORD *)v97 + 1);
  *((_QWORD *)v96 + 1) = v98;
  swift_bridgeObjectRetain(v98);
  swift_bridgeObjectRelease();
  v99 = v25[20];
  v100 = &v22[v99];
  v101 = &v23[v99];
  *(_QWORD *)v100 = *(_QWORD *)v101;
  v102 = *((_QWORD *)v101 + 1);
  *((_QWORD *)v100 + 1) = v102;
  swift_bridgeObjectRetain(v102);
  swift_bridgeObjectRelease();
  v22[v25[21]] = v23[v25[21]];
  v103 = v25[22];
  v104 = &v22[v103];
  v105 = &v23[v103];
  v106 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 24))(v104, v105, v106);
  v22[v25[23]] = v23[v25[23]];
  v22[v25[24]] = v23[v25[24]];
  v107 = v25[25];
  v108 = &v22[v107];
  v109 = &v23[v107];
  *(_QWORD *)v108 = *(_QWORD *)v109;
  v110 = *((_QWORD *)v109 + 1);
  *((_QWORD *)v108 + 1) = v110;
  swift_bridgeObjectRetain(v110);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v22[v25[26]] = *(_QWORD *)&v23[v25[26]];
  v111 = v126[9];
  v112 = (_QWORD *)((char *)a1 + v111);
  v113 = (_QWORD *)((char *)v127 + v111);
  *v112 = *v113;
  v114 = v112[1];
  v112[1] = v113[1];
  swift_retain();
  swift_release(v114);
  *(_QWORD *)((char *)a1 + v126[10]) = *(_QWORD *)((char *)v127 + v126[10]);
  v115 = v126[11];
  v116 = (_QWORD *)((char *)a1 + v115);
  v117 = (_QWORD *)((char *)v127 + v115);
  v118 = v117[1];
  v119 = v116[1];
  *v116 = *v117;
  v116[1] = v118;
  swift_retain();
  swift_release(v119);
  v120 = v126[12];
  v121 = (char *)a1 + v120;
  v122 = (char *)v127 + v120;
  v123 = *(_QWORD *)((char *)a1 + v120);
  *(_QWORD *)((char *)a1 + v120) = *(_QWORD *)((char *)v127 + v120);
  swift_retain();
  swift_release(v123);
  v124 = *((_QWORD *)v121 + 1);
  *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
  swift_retain();
  swift_release(v124);
  v121[16] = v122[16];
  return a1;
}

char *sub_1003344FC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;

  v6 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = a3[8];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *(_OWORD *)v12;
  v14 = *((_OWORD *)v12 + 1);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_OWORD *)v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  v15 = &a1[v10];
  v16 = &a2[v10];
  v17 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = (int *)type metadata accessor for ListLocationViewModel(0);
  v19 = v18[5];
  v20 = &v15[v19];
  v21 = &v16[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_OWORD *)&v15[v18[6]] = *(_OWORD *)&v16[v18[6]];
  v22 = v18[7];
  v23 = &v15[v22];
  v24 = &v16[v22];
  v25 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v24) == 1)
  {
    v26 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26))
    {
      v27 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v26);
    }
    swift_storeEnumTagMultiPayload(v23, v25, 1);
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v28 = v18[8];
  v29 = &v15[v28];
  v30 = &v16[v28];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  v29[32] = v30[32];
  v15[v18[9]] = v16[v18[9]];
  v32 = v18[10];
  v33 = &v15[v32];
  v34 = &v16[v32];
  v35 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
  {
    v36 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
  }
  v37 = v18[11];
  v38 = &v15[v37];
  v39 = &v16[v37];
  v40 = type metadata accessor for TimeZone(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  *(_OWORD *)&v15[v18[12]] = *(_OWORD *)&v16[v18[12]];
  *(_OWORD *)&v15[v18[13]] = *(_OWORD *)&v16[v18[13]];
  v15[v18[14]] = v16[v18[14]];
  *(_OWORD *)&v15[v18[15]] = *(_OWORD *)&v16[v18[15]];
  *(_OWORD *)&v15[v18[16]] = *(_OWORD *)&v16[v18[16]];
  *(_OWORD *)&v15[v18[17]] = *(_OWORD *)&v16[v18[17]];
  *(_OWORD *)&v15[v18[18]] = *(_OWORD *)&v16[v18[18]];
  *(_OWORD *)&v15[v18[19]] = *(_OWORD *)&v16[v18[19]];
  *(_OWORD *)&v15[v18[20]] = *(_OWORD *)&v16[v18[20]];
  v15[v18[21]] = v16[v18[21]];
  v42 = v18[22];
  v43 = &v15[v42];
  v44 = &v16[v42];
  v45 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
  v15[v18[23]] = v16[v18[23]];
  v15[v18[24]] = v16[v18[24]];
  *(_OWORD *)&v15[v18[25]] = *(_OWORD *)&v16[v18[25]];
  *(_QWORD *)&v15[v18[26]] = *(_QWORD *)&v16[v18[26]];
  v46 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v46] = *(_QWORD *)&a2[v46];
  v47 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v48[16] = v49[16];
  *(_OWORD *)v48 = *(_OWORD *)v49;
  return a1;
}

char *sub_10033492C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BC2990);
    v6 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *v9 = *v10;
  v11 = *((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release(v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  v16 = *(_QWORD *)v13;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  swift_unknownObjectRelease(v16);
  *((_QWORD *)v13 + 1) = v15;
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&a1[v17]);
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = (int *)type metadata accessor for ListLocationViewModel(0);
  v26 = v25[5];
  v27 = &v22[v26];
  v28 = &v23[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v25[6];
  v30 = &v22[v29];
  v31 = &v23[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v34 = v25[7];
    v35 = &v22[v34];
    v36 = &v23[v34];
    sub_1000215BC((uint64_t)&v22[v34], type metadata accessor for ListLocationRowPrimaryText);
    v37 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v36) == 1)
    {
      v38 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v38))
      {
        v39 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v38);
      }
      swift_storeEnumTagMultiPayload(v35, v37, 1);
    }
    else
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
  }
  v40 = v25[8];
  v41 = &v22[v40];
  v42 = &v23[v40];
  v43 = v42[32];
  v44 = *(_QWORD *)v41;
  v45 = *((_QWORD *)v41 + 1);
  v46 = *((_QWORD *)v41 + 2);
  v47 = *((_QWORD *)v41 + 3);
  v48 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v48;
  v49 = v41[32];
  v41[32] = v43;
  sub_100176DD4(v44, v45, v46, v47, v49);
  v22[v25[9]] = v23[v25[9]];
  v50 = v25[10];
  v51 = &v22[v50];
  v52 = &v23[v50];
  v53 = type metadata accessor for Date(0);
  v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v53);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v53);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  v56 = *(_QWORD *)(v53 - 8);
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v51, v53);
LABEL_17:
    v57 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v51, v52, v53);
LABEL_18:
  v58 = v25[11];
  v59 = &v22[v58];
  v60 = &v23[v58];
  v61 = type metadata accessor for TimeZone(0);
  v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v61);
  v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61);
  if (!v62)
  {
    v64 = *(_QWORD *)(v61 - 8);
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v59, v60, v61);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v61);
    goto LABEL_23;
  }
  if (v63)
  {
LABEL_23:
    v65 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
LABEL_24:
  v66 = v25[12];
  v67 = &v22[v66];
  v68 = &v23[v66];
  v70 = *(_QWORD *)v68;
  v69 = *((_QWORD *)v68 + 1);
  *(_QWORD *)v67 = v70;
  *((_QWORD *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  v71 = v25[13];
  v72 = &v22[v71];
  v73 = &v23[v71];
  v75 = *(_QWORD *)v73;
  v74 = *((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = v75;
  *((_QWORD *)v72 + 1) = v74;
  swift_bridgeObjectRelease();
  v22[v25[14]] = v23[v25[14]];
  v76 = v25[15];
  v77 = &v22[v76];
  v78 = &v23[v76];
  v80 = *(_QWORD *)v78;
  v79 = *((_QWORD *)v78 + 1);
  *(_QWORD *)v77 = v80;
  *((_QWORD *)v77 + 1) = v79;
  swift_bridgeObjectRelease();
  v81 = v25[16];
  v82 = &v22[v81];
  v83 = &v23[v81];
  v85 = *(_QWORD *)v83;
  v84 = *((_QWORD *)v83 + 1);
  *(_QWORD *)v82 = v85;
  *((_QWORD *)v82 + 1) = v84;
  swift_bridgeObjectRelease();
  v86 = v25[17];
  v87 = &v22[v86];
  v88 = &v23[v86];
  v90 = *(_QWORD *)v88;
  v89 = *((_QWORD *)v88 + 1);
  *(_QWORD *)v87 = v90;
  *((_QWORD *)v87 + 1) = v89;
  swift_bridgeObjectRelease();
  v91 = v25[18];
  v92 = &v22[v91];
  v93 = &v23[v91];
  v95 = *(_QWORD *)v93;
  v94 = *((_QWORD *)v93 + 1);
  *(_QWORD *)v92 = v95;
  *((_QWORD *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  v96 = v25[19];
  v97 = &v22[v96];
  v98 = &v23[v96];
  v100 = *(_QWORD *)v98;
  v99 = *((_QWORD *)v98 + 1);
  *(_QWORD *)v97 = v100;
  *((_QWORD *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  v101 = v25[20];
  v102 = &v22[v101];
  v103 = &v23[v101];
  v105 = *(_QWORD *)v103;
  v104 = *((_QWORD *)v103 + 1);
  *(_QWORD *)v102 = v105;
  *((_QWORD *)v102 + 1) = v104;
  swift_bridgeObjectRelease();
  v22[v25[21]] = v23[v25[21]];
  v106 = v25[22];
  v107 = &v22[v106];
  v108 = &v23[v106];
  v109 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 40))(v107, v108, v109);
  v22[v25[23]] = v23[v25[23]];
  v22[v25[24]] = v23[v25[24]];
  v110 = v25[25];
  v111 = &v22[v110];
  v112 = &v23[v110];
  v114 = *(_QWORD *)v112;
  v113 = *((_QWORD *)v112 + 1);
  *(_QWORD *)v111 = v114;
  *((_QWORD *)v111 + 1) = v113;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v22[v25[26]] = *(_QWORD *)&v23[v25[26]];
  v115 = a3[9];
  v116 = &a1[v115];
  v117 = &a2[v115];
  v119 = *(_QWORD *)v117;
  v118 = *((_QWORD *)v117 + 1);
  v120 = *((_QWORD *)v116 + 1);
  *(_QWORD *)v116 = v119;
  *((_QWORD *)v116 + 1) = v118;
  swift_release(v120);
  v121 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v122 = *(_QWORD *)&a1[v121 + 8];
  *(_OWORD *)&a1[v121] = *(_OWORD *)&a2[v121];
  swift_release(v122);
  v123 = a3[12];
  v124 = &a1[v123];
  v125 = &a2[v123];
  v126 = *(_QWORD *)&a1[v123];
  *(_QWORD *)&a1[v123] = *(_QWORD *)v125;
  swift_release(v126);
  v127 = *((_QWORD *)v124 + 1);
  *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
  swift_release(v127);
  v124[16] = v125[16];
  return a1;
}

uint64_t sub_100334F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100334F4C);
}

void sub_100334F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_10009E50C();
  sub_1000BA294(&qword_100BD8F08);
  sub_100088FF0();
  if (v7)
  {
    v8 = v6;
    v9 = v4;
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_10003BCA4(*(_QWORD *)(v4 + *(int *)(a3 + 24)));
      sub_100079F70();
      return;
    }
    v8 = sub_1000C53F8();
    v9 = v4 + *(int *)(a3 + 32);
  }
  sub_1000B250C(v9, v3, v8);
}

uint64_t sub_100334FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100334FCC);
}

void sub_100334FCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_10009E50C();
  sub_1000BA294(&qword_100BD8F08);
  sub_10009D2E8();
  if (v9)
  {
    v10 = v8;
    v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
      sub_100079F70();
      return;
    }
    v10 = sub_1000C53F8();
    v11 = v5 + *(int *)(a4 + 32);
  }
  sub_1000987C4(v11, v4, v4, v10);
}

uint64_t type metadata accessor for ListLocationRowView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD8F68, (uint64_t)&nominal type descriptor for ListLocationRowView);
}

void sub_10033505C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  sub_100335124(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100995EF8;
    v6[2] = &unk_100995F10;
    v6[3] = &unk_100995F28;
    v4 = type metadata accessor for ListLocationViewModel(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = &unk_100995F10;
      v6[6] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[7] = (char *)&value witness table for () + 64;
      v6[8] = &unk_100995F40;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

void sub_100335124(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BD7458)
  {
    v2 = type metadata accessor for DynamicTypeSize(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BD7458);
  }
}

uint64_t sub_100335178(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1630, 1);
}

void sub_100335188()
{
  sub_1003352C8();
}

void sub_1003351A4()
{
  sub_1003352C8();
}

void sub_1003351C0()
{
  sub_1003352C8();
}

void sub_1003351DC()
{
  sub_1003352C8();
}

void sub_1003351F8()
{
  sub_1003352C8();
}

void sub_100335214()
{
  sub_10011A604();
}

void sub_100335228()
{
  sub_1003352C8();
}

void sub_100335244()
{
  sub_1003352C8();
}

void sub_100335260()
{
  sub_10011A604();
}

void sub_100335274()
{
  sub_1003352C8();
}

void sub_100335290()
{
  sub_1003352C8();
}

void sub_1003352AC()
{
  sub_1003352C8();
}

void sub_1003352C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;

  sub_1000986AC();
  v4 = v3;
  v6 = v5;
  sub_1000ECF70();
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100094F2C();
  __chkstk_darwin(v8);
  sub_1000CDF04();
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000CFC7C();
  sub_1000BDCC4();
  *v2 = 0;
  v2[1] = 0xE000000000000000;
  KeyPath = swift_getKeyPath(&unk_100995FA8);
  v11 = sub_1000DC69C(KeyPath);
  sub_1000C21A4(v11);
  v4(v1, v0, v6);
  v12 = sub_100079FD4();
  sub_10007802C((uint64_t)v2, v0 + *(int *)(v12 + 36), type metadata accessor for AutomationInfoViewModifier);
  sub_100098640();
}

void sub_100335384()
{
  sub_1003352C8();
}

void sub_1003353A0()
{
  sub_1003352C8();
}

void sub_1003353BC()
{
  sub_1003352C8();
}

void sub_1003353D8()
{
  sub_1003352C8();
}

void sub_1003353F4()
{
  sub_10011A604();
}

void sub_100335408()
{
  sub_10011A604();
}

void sub_10033541C()
{
  sub_10011A604();
}

void sub_100335430()
{
  sub_10011A604();
}

void sub_100335444()
{
  sub_10011A604();
}

void sub_100335458()
{
  sub_1003352C8();
}

void sub_100335474()
{
  sub_10011A604();
}

void sub_100335488()
{
  sub_10011A604();
}

void sub_10033549C()
{
  sub_10011A604();
}

void sub_1003354B0()
{
  sub_1003352C8();
}

void sub_1003354CC()
{
  sub_1003352C8();
}

void sub_1003354E8()
{
  sub_1003352C8();
}

void sub_100335504()
{
  sub_1003352C8();
}

void sub_100335520()
{
  sub_1003352C8();
}

void sub_10033553C()
{
  sub_1003352C8();
}

void sub_100335558()
{
  sub_1003352C8();
}

void sub_100335574()
{
  sub_10011A604();
}

void sub_100335588()
{
  sub_10011A604();
}

void sub_10033559C()
{
  sub_1003352C8();
}

void sub_1003355B8()
{
  sub_1003352C8();
}

void sub_1003355D4()
{
  sub_1003352C8();
}

void sub_1003355F0()
{
  sub_10011A604();
}

void sub_100335604()
{
  sub_1003352C8();
}

void sub_100335620()
{
  sub_1003352C8();
}

void sub_10033563C()
{
  sub_1003352C8();
}

void sub_100335658()
{
  sub_1003352C8();
}

void sub_100335674()
{
  sub_10011A604();
}

void sub_100335688()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];

  sub_1000986AC();
  v27 = v3;
  v26 = type metadata accessor for AutomationInfo(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100079FBC();
  v5 = sub_1000B25E8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BD8FC0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100099234();
  sub_1000BA294(&qword_100BD8FC8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v2 = static HorizontalAlignment.center.getter(v13);
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = 0;
  sub_1000BA294(&qword_100BD8FD0);
  sub_100095B78(v0, (uint64_t)v8, type metadata accessor for ListLocationRowView);
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_100B6DFE8, v15 + v7, v14 | 7);
  sub_10007802C((uint64_t)v8, v16 + v15, type metadata accessor for ListLocationRowView);
  v17 = sub_1000BA294(&qword_100BD8FD8);
  v18 = sub_100075EB0(&qword_100BD8FE0);
  v19 = sub_100336958();
  v28[0] = v18;
  v28[1] = &type metadata for Bool;
  v28[2] = v19;
  v28[3] = &protocol witness table for Bool;
  v20 = sub_10009885C((uint64_t)v28, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  ScrollEventStateReader.init(content:)(sub_100336910, v16, v17, v20);
  v21 = v0 + *(int *)(v5 + 32);
  v22 = (_QWORD *)(v21 + *(int *)(sub_1000C53F8() + 24));
  v23 = v22[1];
  *v1 = *v22;
  v1[1] = v23;
  v24 = type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload(v1, v24, 0);
  swift_storeEnumTagMultiPayload(v1, v26, 1);
  sub_1003352C8();
  swift_bridgeObjectRetain(v23);
  sub_1000215BC((uint64_t)v1, type metadata accessor for AutomationInfo);
  sub_100021A14(v2, &qword_100BD8FC0);
  v25 = v27;
  sub_10009BF14((uint64_t)v12, v27);
  *(_BYTE *)(v25 + *(int *)(sub_1000BA294(&qword_100BD9008) + 36)) = 1;
  sub_10009E47C((uint64_t)v12);
  sub_100098640();
}

uint64_t sub_1003358F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t active;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (**v94)();
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t *v126;
  uint64_t *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135[8];
  uint64_t v136;
  _QWORD v137[2];
  char v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  __int128 v142;

  v132 = a1;
  v133 = a3;
  v4 = type metadata accessor for ScrollEventState(0);
  v130 = *(_QWORD *)(v4 - 8);
  v131 = v4;
  __chkstk_darwin(v4);
  v128 = v5;
  v129 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
  __chkstk_darwin(v6);
  v127 = (uint64_t *)((char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v126 = (uint64_t *)((char *)&v101 - v9);
  v10 = type metadata accessor for Location.Identifier(0);
  v103 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v101 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_1000BA294(&qword_100BCD780);
  __chkstk_darwin(v108);
  v105 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BCD680);
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v101 - v16;
  active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active);
  v104 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ListLocationViewModel(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for LocationRowButtonStyle(0);
  __chkstk_darwin(v117);
  v116 = (char **)((char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = (int *)type metadata accessor for ListLocationRowView(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  v27 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1000BA294(&qword_100BD8FF0);
  v110 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v29 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1000BA294(&qword_100BD9010);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1000BA294(&qword_100BD8FE0);
  __chkstk_darwin(v123);
  v125 = (char *)&v101 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1000BA294(&qword_100BD8FD8);
  v122 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v121 = (char *)&v101 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(a2, (uint64_t)v27, type metadata accessor for ListLocationRowView);
  v33 = *(unsigned __int8 *)(v25 + 80);
  v34 = (v33 + 16) & ~v33;
  v134 = v34 + v26;
  v111 = v33 | 7;
  v35 = swift_allocObject(&unk_100B6E010, v34 + v26, v33 | 7);
  v115 = v34;
  v113 = v27;
  sub_10007802C((uint64_t)v27, v35 + v34, type metadata accessor for ListLocationRowView);
  v136 = a2;
  v36 = sub_1000BA294(&qword_100BD9018);
  sub_10034AEE4((uint64_t)&unk_100BD9020);
  v109 = v29;
  v37 = v35;
  v38 = (uint64_t)v105;
  Button.init(action:label:)(sub_100340200, v37, sub_100340214, v135, v36, v39);
  v40 = v24[7];
  v41 = (uint64_t *)(a2 + v24[6]);
  v42 = *v41;
  v106 = v41[1];
  sub_100043CA8(a2 + v40, (uint64_t)&v142);
  v43 = a2 + v24[8];
  v114 = v22;
  sub_100095B78(v43, (uint64_t)v22, type metadata accessor for ListLocationViewModel);
  v44 = *(_QWORD *)(a2 + v24[10]);
  v45 = *(_QWORD *)(a2 + v24[9] + 8);
  v107 = v42;
  swift_unknownObjectRetain(v42);
  swift_retain();
  v46 = (uint64_t)v104;
  sub_10006BDA4();
  swift_release(v45);
  LocationModel.identifier.getter(v47);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v10);
  v48 = v38 + *(int *)(v108 + 48);
  sub_1000787D4(v46, v38, &qword_100BCD680);
  sub_100037794((uint64_t)v17, v48, &qword_100BCD680);
  if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v10) == 1)
  {
    sub_100021A14((uint64_t)v17, &qword_100BCD680);
    v49 = _s7Weather24LocationCompositionStateOwet_0(v48, 1, v10);
    if (v49 == 1)
      v50 = &qword_100BCD680;
    else
      v50 = &qword_100BCD780;
    if (v49 == 1)
      v51 = -1;
    else
      v51 = 0;
  }
  else
  {
    v108 = v44;
    v52 = v102;
    sub_100037794(v38, v102, &qword_100BCD680);
    if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v10) == 1)
    {
      sub_100021A14((uint64_t)v17, &qword_100BCD680);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v52, v10);
      v51 = 0;
      v50 = &qword_100BCD780;
    }
    else
    {
      v53 = v103;
      v54 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v101, v48, v10);
      sub_10007A100((uint64_t)&qword_100BC3640);
      v51 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v54, v10, v55);
      v56 = *(void (**)(char *, uint64_t))(v53 + 8);
      v56(v54, v10);
      v50 = &qword_100BCD680;
      sub_100021A14((uint64_t)v17, &qword_100BCD680);
      v56((char *)v52, v10);
    }
    v44 = v108;
  }
  sub_100021A14(v38, v50);
  v57 = a2 + v24[5];
  v58 = *(_BYTE *)v57;
  v59 = *(_QWORD *)(v57 + 8);
  LOBYTE(v139) = v58;
  v140 = v59;
  v60 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(v137, v60);
  v61 = v137[0];
  v62 = a2 + v24[12];
  v63 = *(_QWORD *)v62;
  v64 = *(_QWORD *)(v62 + 8);
  LOBYTE(v62) = *(_BYTE *)(v62 + 16);
  v137[0] = v63;
  v137[1] = v64;
  v138 = v62;
  v65 = sub_1000BA294((uint64_t *)&unk_100BD4270);
  Binding.projectedValue.getter(v65);
  v66 = v139;
  v67 = v140;
  v68 = v141;
  KeyPath = swift_getKeyPath(&unk_100995FD0);
  v70 = (uint64_t)v126;
  *v126 = KeyPath;
  v71 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v70, v71, 0);
  v72 = swift_getKeyPath(&unk_100996000);
  v73 = (uint64_t)v127;
  *v127 = v72;
  swift_storeEnumTagMultiPayload(v73, v71, 0);
  v100 = v67;
  v74 = v116;
  sub_100336684(v107, v106, &v142, (uint64_t)v114, v44, v51 & 1, v61, v70, v116, v73, v66, v100, v68);
  sub_10034AEE4((uint64_t)&unk_100BD8FF8);
  v76 = v75;
  sub_10007A100((uint64_t)&unk_100BD9000);
  v77 = v118;
  v78 = v112;
  v79 = v109;
  View.buttonStyle<A>(_:)(v74, v112, v117, v76, v80);
  sub_1000215BC((uint64_t)v74, type metadata accessor for LocationRowButtonStyle);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v79, v78);
  v81 = (uint64_t)v113;
  sub_100095B78(a2, (uint64_t)v113, type metadata accessor for ListLocationRowView);
  v83 = v129;
  v82 = v130;
  v84 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v129, v132, v131);
  v85 = *(unsigned __int8 *)(v82 + 80);
  v86 = (v134 + v85) & ~v85;
  v87 = v111;
  v88 = swift_allocObject(&unk_100B6E038, v86 + v128, v111 | v85);
  v128 = a2;
  v89 = v115;
  sub_10007802C(v81, v88 + v115, type metadata accessor for ListLocationRowView);
  (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v88 + v86, v83, v84);
  v90 = v119;
  v91 = (uint64_t)v125;
  v92 = v120;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v125, v77, v120);
  v93 = v123;
  v94 = (uint64_t (**)())(v91 + *(int *)(v123 + 36));
  *v94 = sub_100340498;
  v94[1] = (uint64_t (*)())v88;
  v94[2] = 0;
  v94[3] = 0;
  v95 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v77, v92);
  LOBYTE(v142) = ScrollEventState.isScrolling.getter(v95) & 1;
  sub_100095B78(v128, v81, type metadata accessor for ListLocationRowView);
  v96 = swift_allocObject(&unk_100B6E060, v134, v87);
  sub_10007802C(v81, v96 + v89, type metadata accessor for ListLocationRowView);
  v97 = sub_100336958();
  v98 = v121;
  View.onChange<A>(of:initial:_:)(&v142, 0, sub_1003404B8, v96, v93, &type metadata for Bool, v97, &protocol witness table for Bool);
  swift_release(v96);
  sub_100021A14(v91, &qword_100BD8FE0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v122 + 32))(v133, v98, v124);
}

uint64_t sub_100336384(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ListLocationRowView(0);
  return (*(uint64_t (**)(void))(a1 + *(int *)(v2 + 44)))();
}

void sub_1003363B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BD9028);
  sub_100336400(a1, a2 + *(int *)(v4 + 44));
}

void sub_100336400(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v27 = type metadata accessor for LocationRowContentView(0);
  __chkstk_darwin(v27);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD9030);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocationRowContentViewLargeText(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010FD3C();
  v16 = DynamicTypeSize.isAccessibilitySize.getter(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v17 = a1 + *(int *)(type metadata accessor for ListLocationRowView(0) + 32);
  if ((v16 & 1) != 0)
  {
    sub_100095B78(v17, (uint64_t)v10, type metadata accessor for ListLocationViewModel);
    v18 = type metadata accessor for LocationRowContentViewLargeText;
    sub_100095B78((uint64_t)v10, (uint64_t)v7, type metadata accessor for LocationRowContentViewLargeText);
    swift_storeEnumTagMultiPayload(v7, v5, 0);
    sub_10007A100((uint64_t)&unk_100BD9038);
    v20 = v19;
    sub_10007A100((uint64_t)&unk_100BD9040);
    _ConditionalContent<>.init(storage:)(v7, v8, v27, v20, v21);
    v22 = (uint64_t)v10;
  }
  else
  {
    sub_100095B78(v17, (uint64_t)v4, type metadata accessor for ListLocationViewModel);
    v18 = type metadata accessor for LocationRowContentView;
    sub_100095B78((uint64_t)v4, (uint64_t)v7, type metadata accessor for LocationRowContentView);
    swift_storeEnumTagMultiPayload(v7, v5, 1);
    sub_10007A100((uint64_t)&unk_100BD9038);
    v24 = v23;
    sub_10007A100((uint64_t)&unk_100BD9040);
    _ConditionalContent<>.init(storage:)(v7, v8, v27, v24, v25);
    v22 = (uint64_t)v4;
  }
  sub_1000215BC(v22, v18);
}

void sub_100336684(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;

  *a9 = a1;
  a9[1] = a2;
  sub_10003C800(a3, (uint64_t)(a9 + 2));
  v19 = (int *)type metadata accessor for LocationRowButtonStyle(0);
  sub_10007802C(a4, (uint64_t)a9 + v19[6], type metadata accessor for ListLocationViewModel);
  *(_QWORD *)((char *)a9 + v19[7]) = a5;
  *((_BYTE *)a9 + v19[8]) = a6;
  *((_BYTE *)a9 + v19[9]) = a7;
  v20 = (char *)a9 + v19[10];
  v28 = 0;
  State.init(wrappedValue:)(&v28, &type metadata for Bool);
  v21 = v30;
  *v20 = v29;
  *((_QWORD *)v20 + 1) = v21;
  v22 = (char *)a9 + v19[11];
  v28 = 1;
  State.init(wrappedValue:)(&v28, &type metadata for Bool);
  v23 = v30;
  *v22 = v29;
  *((_QWORD *)v22 + 1) = v23;
  v24 = (char *)a9 + v19[12];
  v28 = 0;
  State.init(wrappedValue:)(&v28, &type metadata for Bool);
  v25 = v30;
  *v24 = v29;
  *((_QWORD *)v24 + 1) = v25;
  sub_1000787D4(a8, (uint64_t)a9 + v19[13], (uint64_t *)&unk_100C09CB0);
  v26 = (char *)a9 + v19[14];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_100996028);
  v26[8] = 0;
  sub_1000787D4(a10, (uint64_t)a9 + v19[15], (uint64_t *)&unk_100C09CB0);
  v27 = (char *)a9 + v19[16];
  *(_QWORD *)v27 = a11;
  *((_QWORD *)v27 + 1) = a12;
  v27[16] = a13;
}

uint64_t sub_10033682C(uint64_t a1)
{
  char v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[9];
  uint64_t v9;

  v2 = ScrollEventState.isScrolling.getter(a1);
  v3 = (char *)(a1 + *(int *)(type metadata accessor for ListLocationRowView(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v8[1] = v4;
  v9 = v5;
  v8[0] = v2 & 1;
  v6 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(v8, v6);
}

uint64_t sub_1003368A0(uint64_t a1, char *a2, uint64_t a3)
{
  char v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[9];
  uint64_t v10;

  v3 = *a2;
  v4 = (char *)(a3 + *(int *)(type metadata accessor for ListLocationRowView(0) + 20));
  v5 = *v4;
  v6 = *((_QWORD *)v4 + 1);
  v9[1] = v5;
  v10 = v6;
  v9[0] = v3;
  v7 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(v9, v7);
}

uint64_t sub_100336910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000B25E8() - 8) + 80);
  return sub_1003358F4(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100336958()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  result = qword_100BD8FE8;
  if (!qword_100BD8FE8)
  {
    v1 = sub_100075EB0(&qword_100BD8FE0);
    v2 = sub_100075EB0(&qword_100BD8FF0);
    v3 = type metadata accessor for LocationRowButtonStyle(255);
    sub_10034AEE4((uint64_t)&unk_100BD8FF8);
    v5 = v4;
    sub_10007A100((uint64_t)&unk_100BD9000);
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v5;
    v7[3] = v6;
    swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD8FE8);
  }
  return result;
}

uint64_t type metadata accessor for LocationRowButtonStyle(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD90C0, (uint64_t)&nominal type descriptor for LocationRowButtonStyle);
}

void sub_100336A5C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  int v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD v88[3];

  v2 = v1;
  v84 = a1;
  v3 = type metadata accessor for LocationRowContentView(0);
  __chkstk_darwin(v3);
  v75 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD9300);
  __chkstk_darwin(v5);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1000BA294(&qword_100BD9308);
  __chkstk_darwin(v76);
  v78 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1000BA294(&qword_100BD9310);
  __chkstk_darwin(v77);
  v81 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD9318);
  __chkstk_darwin(v10);
  v80 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v79 = (uint64_t)&v74 - v13;
  v14 = sub_1000BA294(&qword_100BD9320);
  __chkstk_darwin(v14);
  v83 = (uint64_t)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v74 - v17;
  v19 = sub_1000BA294(&qword_100BD9328);
  __chkstk_darwin(v19);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BD9330);
  __chkstk_darwin(v22);
  v82 = (uint64_t)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v74 - v25;
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v74 - v29;
  *(_QWORD *)v21 = static VerticalAlignment.top.getter(v28);
  *((_QWORD *)v21 + 1) = 0;
  v31 = 1;
  v21[16] = 1;
  v32 = sub_1000BA294(&qword_100BD9338);
  sub_100337120(v1, (uint64_t)&v21[*(int *)(v32 + 44)]);
  swift_beginAccess(&xmmword_100BFE5C8, v88, 33, 0);
  sub_1006D1094();
  v34 = v33;
  v35 = swift_endAccess(v88);
  static Alignment.top.getter(v35);
  _FrameLayout.init(width:height:alignment:)(0, 1, v34, 0);
  sub_100037794((uint64_t)v21, (uint64_t)v26, &qword_100BD9328);
  v36 = &v26[*(int *)(v22 + 36)];
  v37 = v86;
  *(_OWORD *)v36 = v85;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v87;
  sub_100021A14((uint64_t)v21, &qword_100BD9328);
  sub_1000787D4((uint64_t)v26, (uint64_t)v30, &qword_100BD9330);
  v38 = type metadata accessor for ListLocationViewModel(0);
  if ((*(_BYTE *)(v1 + *(int *)(v38 + 84)) & 1) == 0)
  {
    v39 = v38;
    *(_QWORD *)v7 = static VerticalAlignment.bottom.getter();
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 1;
    v40 = sub_1000BA294(&qword_100BD9340);
    sub_100338480(v1, (uint64_t)&v7[*(int *)(v40 + 44)]);
    v41 = static Edge.Set.trailing.getter();
    v42 = Edge.Set.init(rawValue:)(0);
    v43 = v42;
    v44 = Edge.Set.init(rawValue:)(v42);
    if (Edge.Set.init(rawValue:)(v44 & v41) != v41)
      LOBYTE(v43) = Edge.Set.init(rawValue:)(v43 | v41);
    v45 = *((_QWORD *)sub_1008F9934() + 2);
    swift_bridgeObjectRelease();
    v46 = v2;
    v47 = v75;
    sub_100095B78(v46, v75, type metadata accessor for LocationRowContentView);
    if (v45)
    {
      sub_1000215BC(v47, type metadata accessor for LocationRowContentView);
      v48 = 0.0;
    }
    else
    {
      v49 = *(unsigned __int8 *)(v47 + *(int *)(v39 + 96));
      sub_1000215BC(v47, type metadata accessor for LocationRowContentView);
      v48 = 4.0;
      if (v49)
        v48 = 0.0;
    }
    v50 = EdgeInsets.init(_all:)(v48);
    v52 = v51;
    v54 = v53;
    v56 = v55;
    v57 = v78;
    sub_100037794((uint64_t)v7, v78, &qword_100BD9300);
    v58 = v57 + *(int *)(v76 + 36);
    *(_BYTE *)v58 = v43;
    *(double *)(v58 + 8) = v50;
    *(_QWORD *)(v58 + 16) = v52;
    *(_QWORD *)(v58 + 24) = v54;
    *(_QWORD *)(v58 + 32) = v56;
    *(_BYTE *)(v58 + 40) = 0;
    sub_100021A14((uint64_t)v7, &qword_100BD9300);
    swift_beginAccess(&xmmword_100BFE5C8, v88, 33, 0);
    sub_1006D1360();
    v60 = v59;
    swift_endAccess(v88);
    v61 = v81;
    sub_100037794(v57, v81, &qword_100BD9308);
    v62 = (_QWORD *)(v61 + *(int *)(v77 + 36));
    *v62 = 0;
    v62[1] = v60;
    sub_100021A14(v57, &qword_100BD9308);
    swift_beginAccess(&xmmword_100BFE5C8, v88, 33, 0);
    v63 = sub_1006D13AC();
    v64 = swift_endAccess(v88);
    static Alignment.bottom.getter(v64);
    _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v63, 0);
    v65 = v80;
    sub_100037794(v61, v80, &qword_100BD9310);
    v66 = (_OWORD *)(v65 + *(int *)(v10 + 36));
    v67 = v88[1];
    *v66 = v88[0];
    v66[1] = v67;
    v66[2] = v88[2];
    sub_100021A14(v61, &qword_100BD9310);
    v68 = v65;
    v69 = v79;
    sub_1000787D4(v68, v79, &qword_100BD9318);
    sub_1000787D4(v69, (uint64_t)v18, &qword_100BD9318);
    v31 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, v31, 1, v10);
  v70 = v82;
  sub_100037794((uint64_t)v30, v82, &qword_100BD9330);
  v71 = v83;
  sub_100037794((uint64_t)v18, v83, &qword_100BD9320);
  v72 = v84;
  sub_100037794(v70, v84, &qword_100BD9330);
  v73 = sub_1000BA294(&qword_100BD9348);
  sub_100037794(v71, v72 + *(int *)(v73 + 48), &qword_100BD9320);
  sub_100021A14((uint64_t)v18, &qword_100BD9320);
  sub_100021A14((uint64_t)v30, &qword_100BD9330);
  sub_100021A14(v71, &qword_100BD9320);
  sub_100021A14(v70, &qword_100BD9330);
}

void sub_100337120(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  double v67;
  double v68;
  void *v69;
  void *v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _BYTE v167[40];
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned __int8 v171;
  uint64_t v172;
  uint64_t v173;

  v4 = type metadata accessor for VFXForegroundModifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RowElementStyle(0);
  __chkstk_darwin(v7);
  v154 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_1000BA294(&qword_100BD9418);
  __chkstk_darwin(v157);
  v10 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v146 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v146 - v15;
  v17 = sub_1000BA294(&qword_100BD9420);
  __chkstk_darwin(v17);
  v19 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v146 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v146 - v24;
  *(_QWORD *)v22 = static HorizontalAlignment.leading.getter(v26);
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v27 = sub_1000BA294(&qword_100BD9428);
  sub_100337AE4(a1, (uint64_t)&v22[*(int *)(v27 + 44)]);
  sub_1000787D4((uint64_t)v22, (uint64_t)v25, &qword_100BD9420);
  v28 = type metadata accessor for ListLocationViewModel(0);
  v29 = a1;
  v30 = (uint64_t *)(a1 + *(int *)(v28 + 68));
  v31 = v30[1];
  v163 = a2;
  v162 = v10;
  v161 = v16;
  v160 = v19;
  v159 = v25;
  v158 = v6;
  v156 = v29;
  v155 = v28;
  v147 = v13;
  if (v31)
  {
    v32 = *v30;
    v33 = (uint64_t *)(v29 + *(int *)(v28 + 64));
    v34 = v33[1];
    v164 = *v33;
    v168 = v164;
    v169 = v34;
    v153 = v34;
    v35 = sub_100114EF8();
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v34);
    v36 = Text.init<A>(_:)(&v168, &type metadata for String, v35);
    v38 = v37;
    v40 = v39;
    v42 = v41 & 1;
    swift_beginAccess(&xmmword_100BFE5C8, &v168, 33, 0);
    sub_1006D0A5C();
    v44 = v43;
    swift_endAccess(&v168);
    v45 = Font.init(_:)(v44);
    v149 = Text.font(_:)(v45, v36, v38, v42, v40);
    v151 = v46;
    LOBYTE(v44) = v47;
    v152 = v48;
    swift_release(v45);
    v150 = v44 & 1;
    sub_1000D31B4(v36, v38, v42);
    swift_bridgeObjectRelease();
    v168 = v32;
    v169 = v31;
    v49 = Text.init<A>(_:)(&v168, &type metadata for String, v35);
    v51 = v50;
    v53 = v52;
    v55 = v54 & 1;
    swift_beginAccess(&xmmword_100BFE5C8, &v168, 33, 0);
    sub_1006D0B34();
    v57 = v56;
    swift_endAccess(&v168);
    v58 = Font.init(_:)(v57);
    v59 = Text.font(_:)(v58, v49, v51, v55, v53);
    v61 = v60;
    LOBYTE(v57) = v62;
    v64 = v63;
    swift_release(v58);
    sub_1000D31B4(v49, v51, v55);
    swift_bridgeObjectRelease();
    swift_beginAccess(&xmmword_100BFE5C8, &v168, 33, 0);
    sub_1006D0A5C();
    v66 = v65;
    swift_endAccess(&v168);
    objc_msgSend(v66, "capHeight");
    v68 = v67;

    swift_beginAccess(&xmmword_100BFE5C8, &v168, 33, 0);
    sub_1006D0B34();
    v70 = v69;
    swift_endAccess(&v168);
    objc_msgSend(v70, "capHeight");
    v72 = v71;

    v73 = Text.baselineOffset(_:)(v59, v61, v57 & 1, v64, v68 - v72 + -1.0);
    v75 = v74;
    v77 = v76;
    v79 = v78 & 1;
    sub_1000D31B4(v59, v61, v57 & 1);
    swift_bridgeObjectRelease();
    v80 = v149;
    v81 = v151;
    LOBYTE(v55) = v150;
    v82 = static Text.+ infix(_:_:)(v149, v151, v150, v152, v73, v75, v79, v77);
    v165 = v83;
    v166 = v82;
    v85 = v84;
    v87 = v86;
    sub_1000D31B4(v73, v75, v79);
    v88 = v153;
    swift_bridgeObjectRelease();
    v89 = v80;
    v90 = v87;
    v91 = v81;
    v93 = v165;
    v92 = v166;
    sub_1000D31B4(v89, v91, v55);
  }
  else
  {
    v94 = (uint64_t *)(v29 + *(int *)(v28 + 64));
    v95 = v94[1];
    v164 = *v94;
    v168 = v164;
    v169 = v95;
    v96 = sub_100114EF8();
    swift_bridgeObjectRetain(v95);
    v97 = Text.init<A>(_:)(&v168, &type metadata for String, v96);
    v99 = v98;
    v101 = v100;
    v103 = v102 & 1;
    swift_beginAccess(&xmmword_100BFE5C8, &v168, 33, 0);
    sub_1006D0A5C();
    v105 = v104;
    swift_endAccess(&v168);
    v106 = Font.init(_:)(v105);
    v92 = Text.font(_:)(v106, v97, v99, v103, v101);
    v93 = v107;
    v85 = v108;
    v90 = v109;
    swift_release(v106);
    v110 = v99;
    v88 = v95;
    sub_1000D31B4(v97, v110, v103);
  }
  v111 = (uint64_t)v154;
  swift_bridgeObjectRelease();
  v113 = static Color.black.getter(v112);
  v114 = Color.opacity(_:)(0.25);
  swift_release(v113);
  LODWORD(v153) = v85;
  v115 = 0;
  v165 = v93;
  v166 = v92;
  v154 = v90;
  v116 = Text.shadow(color:radius:x:y:)(v114, v92, v93, v85 & 1, v90, 3.0, 0.0, 2.0);
  v118 = v117;
  v120 = v119;
  v122 = v121;
  swift_release(v114);
  swift_beginAccess(&xmmword_100BFE5C8, &v168, 33, 0);
  sub_1006D1094();
  v124 = v123;
  v125 = swift_endAccess(&v168);
  static Alignment.center.getter(v125);
  _FrameLayout.init(width:height:alignment:)(0, 1, v124, 0);
  v126 = v168;
  v127 = v164 == 11565 && v88 == 0xE200000000000000;
  LODWORD(v152) = v169;
  v151 = v170;
  v150 = v171;
  v149 = v172;
  v148 = v173;
  if (v127)
  {
    v129 = (uint64_t)v147;
  }
  else
  {
    v128 = _stringCompareWithSmolCheck(_:_:expecting:)(v164, v88, 11565);
    v129 = (uint64_t)v147;
    if ((v128 & 1) == 0)
    {
      swift_beginAccess(&xmmword_100BFE5C8, v167, 33, 0);
      sub_1006D10E0();
      v115 = v130;
      swift_endAccess(v167);
    }
  }
  if ((*(_BYTE *)(v156 + *(int *)(v155 + 104)) & 2) != 0)
  {
    v132 = enum case for BlendMode.normal(_:);
    v133 = type metadata accessor for BlendMode(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 104))(v111, v132, v133);
    v131 = 0;
  }
  else
  {
    v131 = 1;
  }
  v134 = sub_1000BA294(&qword_100BD93B0);
  _s7Weather24LocationCompositionStateOwst_0(v111, v131, 1, v134);
  v135 = v111;
  v136 = v111;
  v137 = (uint64_t)v158;
  sub_100095B78(v135, (uint64_t)v158, type metadata accessor for RowElementStyle);
  sub_100095B78(v137, v129 + *(int *)(v157 + 36), type metadata accessor for VFXForegroundModifier);
  *(_QWORD *)v129 = v116;
  *(_QWORD *)(v129 + 8) = v118;
  *(_BYTE *)(v129 + 16) = v120 & 1;
  *(_QWORD *)(v129 + 24) = v122;
  *(_QWORD *)(v129 + 32) = v126;
  *(_BYTE *)(v129 + 40) = v152;
  *(_QWORD *)(v129 + 48) = v151;
  *(_BYTE *)(v129 + 56) = v150;
  v138 = v148;
  *(_QWORD *)(v129 + 64) = v149;
  *(_QWORD *)(v129 + 72) = v138;
  *(_QWORD *)(v129 + 80) = 0x3FF0000000000000;
  *(_QWORD *)(v129 + 88) = v115;
  *(_QWORD *)(v129 + 96) = 0;
  sub_1000D55D4(v116, v118, v120 & 1);
  swift_bridgeObjectRetain(v122);
  sub_1000215BC(v137, type metadata accessor for VFXForegroundModifier);
  sub_1000215BC(v136, type metadata accessor for RowElementStyle);
  sub_1000D31B4(v116, v118, v120 & 1);
  swift_bridgeObjectRelease();
  v139 = (uint64_t)v161;
  sub_1000787D4(v129, (uint64_t)v161, &qword_100BD9418);
  v140 = (uint64_t)v159;
  v141 = (uint64_t)v160;
  sub_100037794((uint64_t)v159, (uint64_t)v160, &qword_100BD9420);
  v142 = (uint64_t)v162;
  sub_100037794(v139, (uint64_t)v162, &qword_100BD9418);
  v143 = v163;
  sub_100037794(v141, v163, &qword_100BD9420);
  v144 = sub_1000BA294(&qword_100BD9430);
  v145 = v143 + *(int *)(v144 + 48);
  *(_QWORD *)v145 = 0x4020000000000000;
  *(_BYTE *)(v145 + 8) = 0;
  sub_100037794(v142, v143 + *(int *)(v144 + 64), &qword_100BD9418);
  sub_1000D31B4(v166, v165, v153 & 1);
  swift_bridgeObjectRelease();
  sub_100021A14(v139, &qword_100BD9418);
  sub_100021A14(v140, &qword_100BD9420);
  sub_100021A14(v142, &qword_100BD9418);
  sub_100021A14(v141, &qword_100BD9420);
}

void sub_100337AE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  unsigned __int8 v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD v118[3];

  v86 = a1;
  v4 = type metadata accessor for RedactionReasons(0);
  v110 = *(_QWORD *)(v4 - 8);
  v111 = v4;
  __chkstk_darwin(v4);
  v109 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RowElementStyle(0);
  __chkstk_darwin(v6);
  v88 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for LocationRowSubheadingView(0);
  __chkstk_darwin(v97);
  v96 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1000BA294(&qword_100BD9438);
  __chkstk_darwin(v99);
  v87 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1000BA294(&qword_100BD9440);
  __chkstk_darwin(v103);
  v106 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1000BA294(&qword_100BD9448);
  __chkstk_darwin(v104);
  v108 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v105 = (char *)&v85 - v13;
  __chkstk_darwin(v14);
  v107 = (uint64_t)&v85 - v15;
  v98 = type metadata accessor for ListLocationViewModel(0);
  v16 = (_QWORD *)(a1 + *(int *)(v98 + 24));
  v17 = v16[1];
  *(_QWORD *)&v118[0] = *v16;
  *((_QWORD *)&v118[0] + 1) = v17;
  v18 = sub_100114EF8();
  swift_bridgeObjectRetain(v17);
  v19 = Text.init<A>(_:)(v118, &type metadata for String, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = static Color.black.getter(v19);
  v27 = Color.opacity(_:)(0.25);
  swift_release(v26);
  v28 = Text.shadow(color:radius:x:y:)(v27, v19, v21, v25, v23, 3.0, 0.0, 2.0);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  swift_release(v27);
  v35 = v32 & 1;
  v36 = v21;
  v37 = (uint64_t)v88;
  v38 = v25;
  v39 = v86;
  sub_1000D31B4(v19, v36, v38);
  v40 = (uint64_t)v87;
  swift_bridgeObjectRelease();
  swift_beginAccess(&xmmword_100BFE5C8, v118, 33, 0);
  v41 = sub_1006D0C04();
  swift_endAccess(v118);
  v42 = Font.init(_:)(v41);
  v101 = Text.font(_:)(v42, v28, v30, v35, v34);
  v100 = v43;
  v89 = v44;
  v102 = v45;
  swift_release(v42);
  sub_1000D31B4(v28, v30, v35);
  swift_bridgeObjectRelease();
  swift_beginAccess(&xmmword_100BFE5C8, v118, 33, 0);
  v46 = sub_1006D0C04();
  swift_endAccess(v118);
  objc_msgSend(v46, "capHeight");
  v48 = v47;

  static Alignment.center.getter(v49);
  v50 = 1;
  _FrameLayout.init(width:height:alignment:)(0, 1, v48, 0);
  v95 = v112;
  v94 = v113;
  v93 = v114;
  v92 = v115;
  v91 = v116;
  v90 = v117;
  KeyPath = swift_getKeyPath(&unk_1009961D0);
  v52 = v96;
  sub_100095B78(v39, v96, type metadata accessor for ListLocationViewModel);
  v53 = v97;
  v54 = v52 + *(int *)(v97 + 20);
  *(_QWORD *)v54 = swift_getKeyPath(&unk_100996140);
  *(_BYTE *)(v54 + 8) = 0;
  v55 = (_QWORD *)(v52 + *(int *)(v53 + 24));
  *v55 = swift_getKeyPath(&unk_100996200);
  v56 = sub_1000BA294(&qword_100BC2990);
  swift_storeEnumTagMultiPayload(v55, v56, 0);
  swift_beginAccess(&xmmword_100BFE5C8, v118, 33, 0);
  sub_1006D0E58();
  v58 = v57;
  swift_endAccess(v118);
  objc_msgSend(v58, "capHeight");
  v60 = v59;

  static Alignment.center.getter(v61);
  _FrameLayout.init(width:height:alignment:)(0, 1, v60, 0);
  sub_100095B78(v52, v40, type metadata accessor for LocationRowSubheadingView);
  v62 = (_OWORD *)(v40 + *(int *)(v99 + 36));
  v63 = v118[1];
  *v62 = v118[0];
  v62[1] = v63;
  v62[2] = v118[2];
  sub_1000215BC(v52, type metadata accessor for LocationRowSubheadingView);
  if ((*(_BYTE *)(v39 + *(int *)(v98 + 104)) & 1) != 0)
  {
    v64 = enum case for BlendMode.plusLighter(_:);
    v65 = type metadata accessor for BlendMode(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v37, v64, v65);
    v50 = 0;
  }
  v66 = sub_1000BA294(&qword_100BD93B0);
  _s7Weather24LocationCompositionStateOwst_0(v37, v50, 1, v66);
  v67 = v89 & 1;
  v68 = (uint64_t)v106;
  sub_100095B78(v37, (uint64_t)&v106[*(int *)(v103 + 36)], type metadata accessor for RowElementStyle);
  sub_100037794(v40, v68, &qword_100BD9438);
  sub_1000215BC(v37, type metadata accessor for RowElementStyle);
  sub_100021A14(v40, &qword_100BD9438);
  v69 = swift_getKeyPath(&unk_1009961A0);
  v70 = sub_1008F9934();
  v71 = v109;
  sub_1003382F0((uint64_t)v70);
  swift_bridgeObjectRelease();
  v72 = (uint64_t)v105;
  v73 = (uint64_t *)&v105[*(int *)(v104 + 36)];
  v74 = sub_1000BA294(&qword_100BD9350);
  v76 = v110;
  v75 = v111;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))((char *)v73 + *(int *)(v74 + 28), v71, v111);
  *v73 = v69;
  sub_100037794(v68, v72, &qword_100BD9440);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v75);
  sub_100021A14(v68, &qword_100BD9440);
  v77 = v107;
  sub_1000787D4(v72, v107, &qword_100BD9448);
  v78 = v108;
  sub_100037794(v77, v108, &qword_100BD9448);
  v79 = v101;
  v80 = v100;
  *(_QWORD *)a2 = v101;
  *(_QWORD *)(a2 + 8) = v80;
  *(_BYTE *)(a2 + 16) = v67;
  v81 = v102;
  v82 = v95;
  *(_QWORD *)(a2 + 24) = v102;
  *(_QWORD *)(a2 + 32) = v82;
  *(_BYTE *)(a2 + 40) = v94;
  *(_QWORD *)(a2 + 48) = v93;
  *(_BYTE *)(a2 + 56) = v92;
  v83 = v90;
  *(_QWORD *)(a2 + 64) = v91;
  *(_QWORD *)(a2 + 72) = v83;
  *(_QWORD *)(a2 + 80) = KeyPath;
  *(_QWORD *)(a2 + 88) = 1;
  *(_BYTE *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  v84 = sub_1000BA294(&qword_100BD9450);
  sub_100037794(v78, a2 + *(int *)(v84 + 64), &qword_100BD9448);
  sub_1000D55D4(v79, v80, v67);
  swift_bridgeObjectRetain(v81);
  swift_retain();
  sub_100021A14(v77, &qword_100BD9448);
  sub_100021A14(v78, &qword_100BD9448);
  sub_1000D31B4(v79, v80, v67);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
}

uint64_t sub_1003382F0(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;

  sub_10048BC30(1u, a1);
  if ((v1 & 1) != 0)
  {
    v2 = sub_1000BA294(&qword_100BD9468);
    v3 = type metadata accessor for RedactionReasons(0);
    v4 = swift_allocObject(v2, ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) | 7);
    *(_OWORD *)(v4 + 16) = xmmword_10097CA50;
    static RedactionReasons.placeholder.getter();
    v19 = (_QWORD *)v4;
    sub_10007A100((uint64_t)&qword_100BCD4E8);
    v6 = v5;
    v7 = sub_1000BA294(&qword_100BD9458);
    sub_10034AEE4((uint64_t)&unk_100BD9460);
    v9 = v8;
    v10 = v7;
    v11 = v3;
    v12 = v6;
  }
  else
  {
    v13 = type metadata accessor for RedactionReasons(0);
    v19 = _swiftEmptyArrayStorage;
    sub_10007A100((uint64_t)&qword_100BCD4E8);
    v15 = v14;
    v16 = sub_1000BA294(&qword_100BD9458);
    sub_10034AEE4((uint64_t)&unk_100BD9460);
    v9 = v17;
    v10 = v16;
    v11 = v13;
    v12 = v15;
  }
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v10, v9, v11, v12);
}

void sub_100338480(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  __n128 v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  unint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t OpaqueTypeConformance2;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  char *v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  int v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  char *v147;
  __n128 v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD v201[2];
  _QWORD *v202;
  uint64_t v203;

  v194 = a2;
  v195 = a1;
  v200 = sub_1000BA294(&qword_100BD9350);
  __chkstk_darwin(v200);
  v175 = (uint64_t *)((char *)&v166 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v182 = sub_1000BA294(&qword_100BD9358);
  __chkstk_darwin(v182);
  v176 = (char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v177 = (uint64_t)&v166 - v6;
  v180 = sub_1000BA294(&qword_100BD9360);
  __chkstk_darwin(v180);
  v181 = (uint64_t)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for TemperatureHighLowTextVertical(0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD9368);
  __chkstk_darwin(v9);
  v168 = (char *)&v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_1000BA294(&qword_100BD9370);
  __chkstk_darwin(v167);
  v173 = (uint64_t)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_1000BA294(&qword_100BD9378);
  __chkstk_darwin(v178);
  v172 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v174 = (uint64_t)&v166 - v14;
  v15 = type metadata accessor for LocationRowContentView(0);
  __chkstk_darwin(v15);
  v191 = (uint64_t)&v166 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BD9380);
  __chkstk_darwin(v17);
  v193 = (uint64_t)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v179 = (char *)&v166 - v20;
  v21 = type metadata accessor for AccessibilityChildBehavior(0);
  v186 = *(_QWORD *)(v21 - 8);
  v187 = v21;
  __chkstk_darwin(v21);
  v185 = (char *)&v166 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = type metadata accessor for RedactionReasons(0);
  v184 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v197 = (char *)&v166 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for RowElementStyle(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DescriptionView(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294(&qword_100BD9388);
  __chkstk_darwin(v30);
  v32 = (char *)&v166 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_1000BA294(&qword_100BD9390);
  __chkstk_darwin(v183);
  v34 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1000BA294(&qword_100BD9398);
  __chkstk_darwin(v35);
  v37 = (char *)&v166 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1000BA294(&qword_100BD93A0);
  v189 = *(_QWORD *)(v38 - 8);
  v190 = v38;
  __chkstk_darwin(v38);
  v196 = (char *)&v166 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000BA294(&qword_100BD93A8);
  __chkstk_darwin(v40);
  v192 = (uint64_t)&v166 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v188 = (char *)&v166 - v43;
  __chkstk_darwin(v44);
  v199 = (uint64_t)&v166 - v45;
  sub_100095B78(a1, (uint64_t)v29, type metadata accessor for ListLocationViewModel);
  v46 = &v29[*(int *)(v27 + 20)];
  *(_QWORD *)v46 = swift_getKeyPath(&unk_100996140);
  v46[8] = 0;
  swift_beginAccess(&xmmword_100BFE5C8, &v202, 33, 0);
  sub_1006D1130();
  v48 = v47;
  swift_endAccess(&v202);
  v49 = Font.init(_:)(v48);
  KeyPath = swift_getKeyPath(&unk_100996170);
  sub_100095B78((uint64_t)v29, (uint64_t)v32, type metadata accessor for DescriptionView);
  v51 = (uint64_t *)&v32[*(int *)(v30 + 36)];
  *v51 = KeyPath;
  v51[1] = v49;
  sub_1000215BC((uint64_t)v29, type metadata accessor for DescriptionView);
  v52 = enum case for BlendMode.plusLighter(_:);
  v53 = type metadata accessor for BlendMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v26, v52, v53);
  v54 = sub_1000BA294(&qword_100BD93B0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v54);
  sub_100095B78((uint64_t)v26, (uint64_t)&v34[*(int *)(v183 + 36)], type metadata accessor for RowElementStyle);
  sub_100037794((uint64_t)v32, (uint64_t)v34, &qword_100BD9388);
  sub_1000215BC((uint64_t)v26, type metadata accessor for RowElementStyle);
  sub_100021A14((uint64_t)v32, &qword_100BD9388);
  v55 = swift_getKeyPath(&unk_1009961A0);
  v56 = v195;
  v57 = sub_1008F9934();
  v58 = v197;
  sub_1006BABC4((uint64_t)v57);
  v59 = swift_bridgeObjectRelease();
  v60 = (uint64_t *)&v37[*(int *)(v35 + 36)];
  v61 = (char *)v60 + *(int *)(v200 + 28);
  v62 = v184;
  v63 = v58;
  v64 = v58;
  v65 = v198;
  v183 = *(_QWORD *)(v184 + 16);
  ((void (*)(char *, char *, uint64_t, __n128))v183)(v61, v63, v198, v59);
  *v60 = v55;
  sub_100037794((uint64_t)v34, (uint64_t)v37, &qword_100BD9390);
  v184 = *(_QWORD *)(v62 + 8);
  ((void (*)(char *, uint64_t))v184)(v64, v65);
  sub_100021A14((uint64_t)v34, &qword_100BD9390);
  v66 = v185;
  static AccessibilityChildBehavior.ignore.getter(v67);
  v68 = sub_1003453D8();
  v69 = v35;
  View.accessibilityElement(children:)(v66, v35, v68);
  (*(void (**)(char *, uint64_t))(v186 + 8))(v66, v187);
  sub_100021A14((uint64_t)v37, &qword_100BD9398);
  v70 = (int *)type metadata accessor for ListLocationViewModel(0);
  v71 = (uint64_t *)(v56 + v70[15]);
  v72 = v71[1];
  v73 = (uint64_t *)(v56 + v70[12]);
  v75 = *v73;
  v74 = v73[1];
  if (v72)
  {
    v76 = *v71;
    swift_bridgeObjectRetain_n(v71[1], 2);
    swift_bridgeObjectRetain(v74);
    sub_1000B2E08();
    v78 = v77;
    v79 = v77[2];
    if (v79 >= v77[3] >> 1)
    {
      sub_1000B2E08();
      v78 = v165;
    }
    v78[2] = v79 + 1;
    v80 = &v78[2 * v79];
    v80[4] = v76;
    v80[5] = v72;
  }
  else
  {
    swift_bridgeObjectRetain(v73[1]);
    v78 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain(v74);
  if ((swift_isUniquelyReferenced_nonNull_native(v78) & 1) == 0)
  {
    sub_1000B2E08();
    v78 = v163;
  }
  v81 = v78[2];
  if (v81 >= v78[3] >> 1)
  {
    sub_1000B2E08();
    v78 = v164;
  }
  v78[2] = v81 + 1;
  v82 = &v78[2 * v81];
  v82[4] = v75;
  v82[5] = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v202 = v78;
  v83 = sub_1000BA294(&qword_100BF1280);
  sub_10034AEE4((uint64_t)&qword_100BD35B0);
  v85 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v83, v84);
  v87 = v86;
  swift_bridgeObjectRelease();
  v202 = (_QWORD *)v85;
  v203 = v87;
  v201[0] = v69;
  v201[1] = v68;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v201, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v89 = sub_100114EF8();
  v90 = (uint64_t)v188;
  v91 = v190;
  v92 = OpaqueTypeConformance2;
  v93 = v196;
  View.accessibilityLabel<A>(_:)(&v202, v190, &type metadata for String, v92, v89);
  v94 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v189 + 8))(v93, v91, v94);
  sub_1000787D4(v90, v199, &qword_100BD93A8);
  v95 = v195;
  LOBYTE(v93) = *(_BYTE *)(v195 + v70[24]);
  v96 = v191;
  sub_100095B78(v195, v191, type metadata accessor for LocationRowContentView);
  if ((v93 & 1) == 0)
  {
    sub_1000215BC(v96, type metadata accessor for LocationRowContentView);
    goto LABEL_14;
  }
  v97 = sub_1008F9934();
  sub_10048BC30(2u, (uint64_t)v97);
  v99 = v98;
  swift_bridgeObjectRelease();
  sub_1000215BC(v96, type metadata accessor for LocationRowContentView);
  if ((v99 & 1) != 0)
  {
LABEL_14:
    v136 = v70[19];
    v137 = (uint64_t *)(v95 + v70[18]);
    v138 = v137[1];
    v191 = *v137;
    v139 = *(_QWORD *)(v95 + v136 + 8);
    v196 = *(char **)(v95 + v136);
    swift_bridgeObjectRetain(v138);
    swift_bridgeObjectRetain(v139);
    v140 = sub_1008F9934();
    sub_10048BC30(2u, (uint64_t)v140);
    LODWORD(v190) = v141;
    swift_bridgeObjectRelease();
    v142 = (uint64_t *)(v95 + v70[20]);
    v144 = *v142;
    v143 = v142[1];
    v145 = swift_getKeyPath(&unk_1009961A0);
    swift_bridgeObjectRetain(v143);
    v146 = sub_1008F9934();
    v147 = v197;
    sub_1006BABCC((uint64_t)v146);
    v148 = swift_bridgeObjectRelease();
    v149 = v175;
    v150 = v198;
    ((void (*)(char *, char *, uint64_t, __n128))v183)((char *)v175 + *(int *)(v200 + 28), v147, v198, v148);
    *v149 = v145;
    v151 = v182;
    v152 = (uint64_t)v176;
    sub_100037794((uint64_t)v149, (uint64_t)&v176[*(int *)(v182 + 36)], &qword_100BD9350);
    *(_QWORD *)v152 = v191;
    *(_QWORD *)(v152 + 8) = v138;
    *(_QWORD *)(v152 + 16) = v196;
    *(_QWORD *)(v152 + 24) = v139;
    *(_BYTE *)(v152 + 32) = v190 & 1;
    *(_QWORD *)(v152 + 40) = v144;
    *(_QWORD *)(v152 + 48) = v143;
    swift_bridgeObjectRetain(v138);
    swift_bridgeObjectRetain(v139);
    swift_bridgeObjectRetain(v143);
    sub_100021A14((uint64_t)v149, &qword_100BD9350);
    ((void (*)(char *, uint64_t))v184)(v147, v150);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v129 = &qword_100BD9358;
    v153 = v177;
    sub_1000787D4(v152, v177, &qword_100BD9358);
    v154 = v181;
    sub_100037794(v153, v181, &qword_100BD9358);
    swift_storeEnumTagMultiPayload(v154, v180, 1);
    v155 = sub_100345590();
    v156 = sub_100345714();
    v134 = (uint64_t)v179;
    _ConditionalContent<>.init(storage:)(v154, v178, v151, v155, v156);
    v135 = v153;
    goto LABEL_15;
  }
  v100 = v70[19];
  v101 = (uint64_t *)(v95 + v70[18]);
  v102 = *v101;
  v103 = v101[1];
  v104 = *(_QWORD *)(v95 + v100);
  v105 = *(_QWORD *)(v95 + v100 + 8);
  swift_bridgeObjectRetain(v103);
  swift_bridgeObjectRetain(v105);
  v106 = v169;
  TemperatureHighLowTextVertical.init(highTemperature:lowTemperature:showNumericOnlyHighLow:scaleFactor:additionalSpacing:)(v102, v103, v104, v105, 0, 1.0, 0.0);
  v107 = (_QWORD *)(v95 + v70[20]);
  v108 = v107[1];
  v202 = (_QWORD *)*v107;
  v203 = v108;
  swift_bridgeObjectRetain(v108);
  v109 = Text.init<A>(_:)(&v202, &type metadata for String, v89);
  v111 = v110;
  v113 = v112;
  v115 = v114 & 1;
  sub_10007A100((uint64_t)&unk_100BC3BA8);
  v116 = (uint64_t)v168;
  v117 = v171;
  View.accessibilityLabel(_:)(v109, v111, v115, v113, v171, v118);
  sub_1000D31B4(v109, v111, v115);
  v119 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v106, v117, v119);
  v120 = v173;
  sub_100037794(v116, v173, &qword_100BD9368);
  *(_OWORD *)(v120 + *(int *)(v167 + 36)) = xmmword_100995EA0;
  sub_100021A14(v116, &qword_100BD9368);
  v121 = swift_getKeyPath(&unk_1009961A0);
  v122 = sub_1008F9934();
  v123 = v197;
  sub_1006BABCC((uint64_t)v122);
  v124 = swift_bridgeObjectRelease();
  v125 = v178;
  v126 = (uint64_t)v172;
  v127 = (uint64_t *)&v172[*(int *)(v178 + 36)];
  v128 = v198;
  ((void (*)(char *, char *, uint64_t, __n128))v183)((char *)v127 + *(int *)(v200 + 28), v123, v198, v124);
  *v127 = v121;
  sub_100037794(v120, v126, &qword_100BD9370);
  ((void (*)(char *, uint64_t))v184)(v123, v128);
  sub_100021A14(v120, &qword_100BD9370);
  v129 = &qword_100BD9378;
  v130 = v174;
  sub_1000787D4(v126, v174, &qword_100BD9378);
  v131 = v181;
  sub_100037794(v130, v181, &qword_100BD9378);
  swift_storeEnumTagMultiPayload(v131, v180, 0);
  v132 = sub_100345590();
  v133 = sub_100345714();
  v134 = (uint64_t)v179;
  _ConditionalContent<>.init(storage:)(v131, v125, v182, v132, v133);
  v135 = v130;
LABEL_15:
  sub_100021A14(v135, v129);
  v157 = v199;
  v158 = v192;
  sub_100037794(v199, v192, &qword_100BD93A8);
  v159 = v193;
  sub_100037794(v134, v193, &qword_100BD9380);
  v160 = v194;
  sub_100037794(v158, v194, &qword_100BD93A8);
  v161 = sub_1000BA294(&qword_100BD9410);
  v162 = v160 + *(int *)(v161 + 48);
  *(_QWORD *)v162 = 0x4020000000000000;
  *(_BYTE *)(v162 + 8) = 0;
  sub_100037794(v159, v160 + *(int *)(v161 + 64), &qword_100BD9380);
  sub_100021A14(v134, &qword_100BD9380);
  sub_100021A14(v157, &qword_100BD93A8);
  sub_100021A14(v159, &qword_100BD9380);
  sub_100021A14(v158, &qword_100BD93A8);
}

__n128 sub_1003393E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __n128 result;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[24];
  _OWORD v29[5];
  uint64_t v30;
  uint64_t v31;
  char v32;

  sub_1000986AC();
  v1 = v0;
  v3 = v2;
  v4 = sub_1000FDA20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_100339588(v0, (uint64_t)v29);
  v26 = v29[1];
  v27 = v29[0];
  v25 = v29[2];
  v24 = v29[3];
  v23 = v29[4];
  v22 = v30;
  v21 = v31;
  v7 = v32;
  sub_1000B3110(v8, (uint64_t)v28);
  sub_1006D0E58();
  v10 = v9;
  swift_endAccess(v28);
  v11 = Font.init(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100996170);
  v13 = swift_getKeyPath(&unk_1009964F0);
  sub_100095B78(v1, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LocationRowSubheadingView);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_100B6E2A8, v15 + v6, v14 | 7);
  sub_10007802C((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for LocationRowSubheadingView);
  v17 = v26;
  *(_OWORD *)v3 = v27;
  *(_OWORD *)(v3 + 16) = v17;
  v18 = v24;
  *(_OWORD *)(v3 + 32) = v25;
  *(_OWORD *)(v3 + 48) = v18;
  *(_OWORD *)(v3 + 64) = v23;
  v19 = v21;
  *(_QWORD *)(v3 + 80) = v22;
  *(_QWORD *)(v3 + 88) = v19;
  *(_BYTE *)(v3 + 96) = v7;
  *(_QWORD *)(v3 + 104) = KeyPath;
  *(_QWORD *)(v3 + 112) = v11;
  *(_QWORD *)(v3 + 120) = v13;
  *(_QWORD *)(v3 + 128) = sub_10034A478;
  *(_QWORD *)(v3 + 136) = v16;
  sub_100098640();
  return result;
}

double sub_100339588@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[32];
  uint64_t v33;
  char v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[32];
  __int128 v38;
  __int128 v39;
  char v40;

  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationRowSubheadingView(0);
  sub_10010FD3C();
  v9 = DynamicTypeSize.isAccessibilitySize.getter(v8);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v11 = static HorizontalAlignment.leading.getter(v10);
    sub_100339FEC(a1, (uint64_t)&v35);
    v12 = 256;
    if (!v37[1])
      v12 = 0;
    v28 = v11;
    v29 = xmmword_100995EC0;
    v30 = v35;
    v31 = v36;
    *(_QWORD *)v32 = v12 | v37[0];
    *(_OWORD *)&v32[8] = *(_OWORD *)&v37[8];
    *(_QWORD *)&v32[24] = v37[24];
    v33 = v38;
    v34 = 0;
  }
  else
  {
    v13 = static VerticalAlignment.center.getter(v10);
    sub_100339918(a1, (uint64_t)&v35);
    v14 = 256;
    if (!BYTE1(v38))
      v14 = 0;
    v28 = v13;
    v29 = xmmword_100995EB0;
    v30 = v35;
    *(_QWORD *)&v31 = v36;
    *((_QWORD *)&v31 + 1) = *((_QWORD *)&v36 + 1);
    *(_OWORD *)v32 = *(_OWORD *)v37;
    *(_OWORD *)&v32[16] = *(_OWORD *)&v37[16];
    v33 = v14 | v38;
    v34 = 1;
  }
  v15 = sub_1000BA294(&qword_100BD9878);
  v16 = sub_1000BA294(&qword_100BD9880);
  sub_10034AEE4((uint64_t)&unk_100BD9888);
  v18 = v17;
  sub_10034AEE4((uint64_t)&unk_100BD9890);
  _ConditionalContent<>.init(storage:)(&v28, v15, v16, v18, v19);
  result = *(double *)&v35;
  v21 = v36;
  v22 = *(_OWORD *)v37;
  v23 = *(_OWORD *)&v37[16];
  v24 = v38;
  v25 = v39;
  v26 = v40;
  *(_OWORD *)a2 = v35;
  *(_OWORD *)(a2 + 16) = v21;
  *(_OWORD *)(a2 + 32) = v22;
  *(_OWORD *)(a2 + 48) = v23;
  *(_OWORD *)(a2 + 64) = v24;
  *(_OWORD *)(a2 + 80) = v25;
  *(_BYTE *)(a2 + 96) = v26;
  return result;
}

uint64_t sub_1003397AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for TimeZone(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.timeZone.setter(v4);
}

void sub_100339828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1000BA294(&qword_100BCCC50);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ListLocationViewModel(0);
  if ((*(_BYTE *)(a2 + *(int *)(v7 + 36)) & 1) == 0)
  {
    sub_100037794(a2 + *(int *)(v7 + 44), (uint64_t)v6, &qword_100BCCC50);
    v8 = type metadata accessor for TimeZone(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v8) == 1)
    {
      sub_100021A14((uint64_t)v6, &qword_100BCCC50);
    }
    else
    {
      v9 = *(_QWORD *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
    }
  }
}

void sub_100339918(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int16 v47;
  __int128 v48;
  __int128 v49;
  unsigned __int8 v50;
  char v51;
  _BYTE v52[32];

  v4 = sub_100339C40();
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = static Color.black.getter(v4);
  swift_beginAccess(&xmmword_100BFE5C8, v52, 1, 0);
  v12 = sub_1006D13DC();
  v13 = Color.opacity(_:)(v12);
  swift_release(v11);
  v14 = sub_1006D1400();
  v15 = sub_1006D1424();
  v16 = sub_100409208();
  v17 = Text.shadow(color:radius:x:y:)(v13, v4, v6, v10, v8, v14, v15, v16);
  v19 = v18;
  v44 = v20;
  v22 = v21;
  swift_release(v13);
  sub_1000D31B4(v4, v6, v10);
  swift_bridgeObjectRelease();
  v23 = a1 + *(int *)(type metadata accessor for ListLocationViewModel(0) + 32);
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(_QWORD *)(v23 + 24);
  v28 = *(unsigned __int8 *)(v23 + 32);
  if (!v28)
  {
    *(_QWORD *)&v45 = v24;
    *((_QWORD *)&v45 + 1) = v25;
    v46 = 0uLL;
    LOBYTE(v47) = 1;
    sub_100176D88(v24, v25, v26, v27, 0);
    v35 = sub_10034A524();
LABEL_6:
    _ConditionalContent<>.init(storage:)(&v45, &type metadata for EmptyView, &unk_100B6E328, &protocol witness table for EmptyView, v35);
    v45 = v48;
    v46 = v49;
    v47 = v50;
    v36 = sub_1000BA294(&qword_100BD98B0);
    sub_10034A49C((uint64_t)&unk_100BD98B8);
    v34 = v37;
    v33 = v36;
    v32 = v35;
    goto LABEL_7;
  }
  if (v28 != 1)
  {
    v35 = sub_10034A524();
    v45 = 0u;
    v46 = 0u;
    LOBYTE(v47) = 0;
    goto LABEL_6;
  }
  *(_QWORD *)&v45 = v26;
  *((_QWORD *)&v45 + 1) = v27;
  *(_QWORD *)&v46 = v24;
  *((_QWORD *)&v46 + 1) = v25;
  v47 = 256;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v27);
  v29 = sub_1000BA294(&qword_100BD98B0);
  sub_10034A49C((uint64_t)&unk_100BD98B8);
  v31 = v30;
  v32 = sub_10034A524();
  v33 = v29;
  v34 = v31;
LABEL_7:
  _ConditionalContent<>.init(storage:)(&v45, v33, &unk_100B6E328, v34, v32);
  v38 = v48;
  v39 = v49;
  v40 = v50;
  v41 = v51;
  v42 = v48;
  v43 = v49;
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = v44 & 1;
  *(_QWORD *)(a2 + 24) = v22;
  *(_OWORD *)(a2 + 32) = v38;
  *(_OWORD *)(a2 + 48) = v39;
  *(_BYTE *)(a2 + 64) = v40;
  *(_BYTE *)(a2 + 65) = v41;
  sub_1000D55D4(v17, v19, v44 & 1);
  swift_bridgeObjectRetain(v22);
  sub_10034A560(v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v40, v41);
  sub_10034A5C8(v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v40, v41);
  sub_1000D31B4(v17, v19, v44 & 1);
  swift_bridgeObjectRelease();
}

uint64_t sub_100339C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __n128 v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = v0;
  v2 = type metadata accessor for Text.DateStyle(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v52 = (uint64_t)&v47 - v15;
  v16 = type metadata accessor for ListLocationRowPrimaryText(0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for ListLocationViewModel(0);
  sub_100095B78(v1 + *(int *)(v19 + 28), (uint64_t)v18, type metadata accessor for ListLocationRowPrimaryText);
  if (swift_getEnumCaseMultiPayload(v18) == 1)
  {
    v20 = (uint64_t)v18;
    v21 = v52;
    sub_1000787D4(v20, v52, (uint64_t *)&unk_100BD35A0);
    sub_100037794(v21, (uint64_t)v13, (uint64_t *)&unk_100BD35A0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v53) == 1)
    {
      sub_100021A14((uint64_t)v13, (uint64_t *)&unk_100BD35A0);
      v22 = LocalizedStringKey.init(stringLiteral:)(0x6D612030303A3030, 0xE800000000000000);
      v26 = Text.init(_:tableName:bundle:comment:)(v22, v24, v23 & 1, v25, 0, 0, 0, "Widest possible time string - used for a UI placeholder while resolving a time zone");
    }
    else
    {
      v29 = v5;
      v50 = v10;
      v51 = v5;
      v30 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v31 = v53;
      v30(v10, v13, v53);
      v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v29 + 16))(v7, v10, v31);
      static Text.DateStyle.time.getter(v32);
      v48 = Text.init(_:style:)(v7, v4);
      v49 = v33;
      v35 = v34;
      v36 = (uint64_t *)(v1 + *(int *)(v19 + 100));
      v37 = v36[1];
      v39 = v38 & 1;
      v54 = *v36;
      v55 = v37;
      v40 = sub_100114EF8();
      swift_bridgeObjectRetain(v37);
      v41 = Text.init<A>(_:)(&v54, &type metadata for String, v40);
      v43 = v42;
      LOBYTE(v29) = v44 & 1;
      v26 = Text.accessibilityLabel(_:)();
      sub_1000D31B4(v41, v43, v29);
      swift_bridgeObjectRelease();
      sub_1000D31B4(v48, v35, v39);
      v45 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v50, v53, v45);
    }
    sub_100021A14(v52, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    v27 = v18[1];
    v54 = *v18;
    v55 = v27;
    v28 = sub_100114EF8();
    return Text.init<A>(_:)(&v54, &type metadata for String, v28);
  }
  return v26;
}

void sub_100339FEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int16 v46;
  __int128 v47;
  __int128 v48;
  unsigned __int8 v49;
  char v50;

  v3 = a1 + *(int *)(type metadata accessor for ListLocationViewModel(0) + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(v3 + 32);
  if (!v8)
  {
    *(_QWORD *)&v44 = v4;
    *((_QWORD *)&v44 + 1) = v5;
    v45 = 0uLL;
    LOBYTE(v46) = 1;
    sub_100176D88(v4, v5, v6, v7, 0);
    v15 = sub_10034A4E8();
LABEL_6:
    _ConditionalContent<>.init(storage:)(&v44, &type metadata for EmptyView, &unk_100B6E3A8, &protocol witness table for EmptyView, v15);
    v44 = v47;
    v45 = v48;
    v46 = v49;
    v16 = sub_1000BA294(&qword_100BD9898);
    sub_10034A49C((uint64_t)&unk_100BD98A0);
    v14 = v17;
    v13 = v16;
    v12 = v15;
    goto LABEL_7;
  }
  if (v8 != 1)
  {
    v15 = sub_10034A4E8();
    v44 = 0u;
    v45 = 0u;
    LOBYTE(v46) = 0;
    goto LABEL_6;
  }
  *(_QWORD *)&v44 = v6;
  *((_QWORD *)&v44 + 1) = v7;
  *(_QWORD *)&v45 = v4;
  *((_QWORD *)&v45 + 1) = v5;
  v46 = 256;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  v9 = sub_1000BA294(&qword_100BD9898);
  sub_10034A49C((uint64_t)&unk_100BD98A0);
  v11 = v10;
  v12 = sub_10034A4E8();
  v13 = v9;
  v14 = v11;
LABEL_7:
  _ConditionalContent<>.init(storage:)(&v44, v13, &unk_100B6E3A8, v14, v12);
  v42 = *((_QWORD *)&v47 + 1);
  v43 = v47;
  v40 = *((_QWORD *)&v48 + 1);
  v41 = v48;
  v38 = v50;
  v39 = v49;
  v18 = sub_100339C40();
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v25 = static Color.black.getter(v18);
  swift_beginAccess(&xmmword_100BFE5C8, &v47, 1, 0);
  v26 = sub_1006D13DC();
  v27 = Color.opacity(_:)(v26);
  swift_release(v25);
  v28 = sub_1006D1400();
  v29 = sub_1006D1424();
  v30 = sub_100409208();
  v31 = Text.shadow(color:radius:x:y:)(v27, v18, v20, v24, v22, v28, v29, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_release(v27);
  sub_1000D31B4(v18, v20, v24);
  swift_bridgeObjectRelease();
  LOBYTE(v44) = v38;
  *(_QWORD *)a2 = v43;
  *(_QWORD *)(a2 + 8) = v42;
  *(_QWORD *)(a2 + 16) = v41;
  *(_QWORD *)(a2 + 24) = v40;
  *(_BYTE *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 33) = v38;
  *(_QWORD *)(a2 + 40) = v31;
  *(_QWORD *)(a2 + 48) = v33;
  *(_BYTE *)(a2 + 56) = v35 & 1;
  *(_QWORD *)(a2 + 64) = v37;
  sub_10034A560(v43, v42, v41, v40, v39, v38);
  sub_1000D55D4(v31, v33, v35 & 1);
  swift_bridgeObjectRetain(v37);
  sub_1000D31B4(v31, v33, v35 & 1);
  swift_bridgeObjectRelease();
  sub_10034A5C8(v43, v42, v41, v40, v39, v44);
}

void sub_10033A31C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  void (**v56)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (**v81)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (**v92)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void (**v113)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[2];

  v114 = a1;
  v115 = sub_1000BA294(&qword_100BD97C8);
  __chkstk_darwin(v115);
  v3 = (char *)&v101 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DescriptionView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v110 = sub_1000BA294(&qword_100BD97D0);
  __chkstk_darwin(v110);
  v113 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))((char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = sub_1000BA294(&qword_100BD97D8);
  __chkstk_darwin(v105);
  v106 = (uint64_t *)((char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = sub_1000BA294(&qword_100BD97E0);
  __chkstk_darwin(v111);
  v107 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v10);
  v103 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for BlendMode(0);
  v12 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v14 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1000BA294(&qword_100BD97E8);
  __chkstk_darwin(v109);
  v16 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v104 = (uint64_t)&v101 - v18;
  v19 = sub_1000BA294(&qword_100BD97F0);
  __chkstk_darwin(v19);
  v112 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for ListLocationViewModel(0);
  v22 = (uint64_t *)(v1 + v21[13]);
  v23 = v22[1];
  if (v23)
  {
    v108 = v19;
    v24 = *v22;
    v25 = (uint64_t *)(v1 + v21[12]);
    v27 = *v25;
    v26 = v25[1];
    v28 = v27 & 0xFFFFFFFFFFFFLL;
    if ((v26 & 0x2000000000000000) != 0)
      v29 = HIBYTE(v26) & 0xF;
    else
      v29 = v28;
    if (v29)
    {
      sub_100095B78(v1, (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DescriptionView);
      v30 = *(unsigned __int8 *)(v5 + 80);
      v31 = (v30 + 32) & ~v30;
      v32 = swift_allocObject(&unk_100B6E280, v31 + v6, v30 | 7);
      *(_QWORD *)(v32 + 16) = v24;
      *(_QWORD *)(v32 + 24) = v23;
      sub_10007802C((uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, type metadata accessor for DescriptionView);
      v33 = v113;
      *v113 = sub_10034A1E8;
      v33[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v32;
      swift_storeEnumTagMultiPayload(v33, v110, 1);
      swift_bridgeObjectRetain(v23);
      v34 = sub_1000BA294(&qword_100BD9838);
      v35 = sub_100349EE0();
      sub_10034AEE4((uint64_t)&unk_100BD9830);
      v36 = (uint64_t)v112;
      _ConditionalContent<>.init(storage:)(v33, v111, v34, v35, v37);
      v38 = (uint64_t)v3;
      v39 = v115;
    }
    else
    {
      v63 = *(unsigned __int8 *)(v1 + v21[14]);
      swift_bridgeObjectRetain(v23);
      v64 = Image.init(systemName:)(v24, v23);
      v65 = static Color.black.getter(v64);
      v66 = Color.opacity(_:)(0.25);
      swift_release(v65);
      v38 = (uint64_t)v3;
      v39 = v115;
      if (v63 == 1)
      {
        v67 = objc_msgSend((id)objc_opt_self(UIColor), "quaternaryLabelColor");
        v68 = Color.init(uiColor:)(v67);
        KeyPath = swift_getKeyPath(&unk_100996490);
        v70 = v66;
        v71 = v102;
        (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for BlendMode.plusLighter(_:), v102);
        v72 = (uint64_t)v103;
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v103, v14, v71);
        sub_100095B78(v72, (uint64_t)&v16[*(int *)(v109 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
        *(_QWORD *)v16 = v64;
        *((_QWORD *)v16 + 1) = v70;
        *((_OWORD *)v16 + 1) = xmmword_100995EB0;
        *((_QWORD *)v16 + 4) = 0x4000000000000000;
        *((_QWORD *)v16 + 5) = KeyPath;
        *((_QWORD *)v16 + 6) = v68;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v73 = v72;
        v39 = v115;
        sub_1000215BC(v73, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v71);
        swift_release(v68);
        swift_release(KeyPath);
        swift_release(v70);
        swift_release(v64);
        v74 = v104;
        sub_1000787D4((uint64_t)v16, v104, &qword_100BD97E8);
        v75 = v106;
        sub_100037794(v74, (uint64_t)v106, &qword_100BD97E8);
        swift_storeEnumTagMultiPayload(v75, v105, 0);
        v76 = sub_1000BA294(&qword_100BD9828);
        sub_100345634((uint64_t)&unk_100BD9808);
        v78 = v77;
        sub_10030C658((uint64_t)&unk_100BD9820);
        v79 = (uint64_t)v107;
        _ConditionalContent<>.init(storage:)(v75, v109, v76, v78, v80);
        v81 = v113;
        sub_100037794(v79, (uint64_t)v113, &qword_100BD97E0);
        swift_storeEnumTagMultiPayload(v81, v110, 0);
        v82 = sub_1000BA294(&qword_100BD9838);
        v83 = sub_100349EE0();
        sub_10034AEE4((uint64_t)&unk_100BD9830);
        v36 = (uint64_t)v112;
        _ConditionalContent<>.init(storage:)(v81, v111, v82, v83, v84);
        sub_100021A14(v79, &qword_100BD97E0);
        sub_100021A14(v74, &qword_100BD97E8);
      }
      else
      {
        v85 = v105;
        v86 = v106;
        *v106 = v64;
        v86[1] = v66;
        *((_OWORD *)v86 + 1) = xmmword_100995EB0;
        v86[4] = 0x4000000000000000;
        swift_storeEnumTagMultiPayload(v86, v85, 1);
        swift_retain();
        swift_retain();
        v87 = sub_1000BA294(&qword_100BD9828);
        sub_100345634((uint64_t)&unk_100BD9808);
        v89 = v88;
        sub_10030C658((uint64_t)&unk_100BD9820);
        v90 = (uint64_t)v107;
        _ConditionalContent<>.init(storage:)(v86, v109, v87, v89, v91);
        v92 = v113;
        sub_100037794(v90, (uint64_t)v113, &qword_100BD97E0);
        swift_storeEnumTagMultiPayload(v92, v110, 0);
        v93 = sub_1000BA294(&qword_100BD9838);
        v94 = sub_100349EE0();
        sub_10034AEE4((uint64_t)&unk_100BD9830);
        v95 = v64;
        v36 = (uint64_t)v112;
        _ConditionalContent<>.init(storage:)(v92, v111, v93, v94, v96);
        sub_100021A14(v90, &qword_100BD97E0);
        swift_release(v66);
        swift_release(v95);
      }
    }
    v97 = v108;
    sub_100037794(v36, v38, &qword_100BD97F0);
    swift_storeEnumTagMultiPayload(v38, v39, 0);
    v98 = sub_1000BA294(&qword_100BCD898);
    v99 = sub_100349E5C();
    sub_10034A030((uint64_t)&qword_100BCD890);
    _ConditionalContent<>.init(storage:)(v38, v97, v98, v99, v100);
    sub_100021A14(v36, &qword_100BD97F0);
  }
  else
  {
    v40 = (_QWORD *)(v1 + v21[12]);
    v41 = v40[1];
    v116[0] = *v40;
    v116[1] = v41;
    v42 = sub_100114EF8();
    swift_bridgeObjectRetain(v41);
    v43 = Text.init<A>(_:)(v116, &type metadata for String, v42);
    v45 = v44;
    v47 = v46;
    v49 = v48 & 1;
    v50 = static Color.black.getter(v43);
    v51 = Color.opacity(_:)(0.25);
    swift_release(v50);
    v52 = Text.shadow(color:radius:x:y:)(v51, v43, v45, v49, v47, 3.0, 0.0, 2.0);
    v54 = v53;
    LODWORD(v112) = v55;
    v113 = v56;
    swift_release(v51);
    sub_1000D31B4(v43, v45, v49);
    swift_bridgeObjectRelease();
    v57 = *((_QWORD *)sub_1008F9934() + 2);
    swift_bridgeObjectRelease();
    if (v57)
      v58 = 1;
    else
      v58 = 2;
    v59 = swift_getKeyPath(&unk_1009961D0);
    *(_QWORD *)v3 = v52;
    *((_QWORD *)v3 + 1) = v54;
    v3[16] = v112 & 1;
    *((_QWORD *)v3 + 3) = v113;
    *((_QWORD *)v3 + 4) = v59;
    *((_QWORD *)v3 + 5) = v58;
    v3[48] = 0;
    swift_storeEnumTagMultiPayload(v3, v115, 1);
    v60 = sub_1000BA294(&qword_100BCD898);
    v61 = sub_100349E5C();
    sub_10034A030((uint64_t)&qword_100BCD890);
    _ConditionalContent<>.init(storage:)(v3, v19, v60, v61, v62);
  }
}

void sub_10033ACA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  double v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t KeyPath;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v66 = a1;
  v74 = a4;
  v73 = sub_1000BA294(&qword_100BCF148);
  __chkstk_darwin(v73);
  v7 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Image.Scale(0);
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  __chkstk_darwin(v8);
  v68 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1000BA294(&qword_100BD9840);
  __chkstk_darwin(v67);
  v65 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1000BA294(&qword_100BD9848);
  __chkstk_darwin(v72);
  v71 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 2);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v15);
  swift_bridgeObjectRetain(a3);
  v16 = Image.init(systemName:)(a2, a3);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release(v16);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v17);
  v19 = GeometryProxy.size.getter(v18);
  v20._countAndFlagsBits = sub_10033B110(v19);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v21);
  v22 = LocalizedStringKey.init(stringInterpolation:)(v12);
  v26 = Text.init(_:tableName:bundle:comment:)(v22, v24, v23 & 1, v25, 0, 0, 0, 0);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = static Color.black.getter(v26);
  v34 = Color.opacity(_:)(0.25);
  swift_release(v33);
  v35 = Text.shadow(color:radius:x:y:)(v34, v26, v28, v32, v30, 3.0, 0.0, 2.0);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_release(v34);
  LOBYTE(v34) = v39 & 1;
  sub_1000D31B4(v26, v28, v32);
  v42 = swift_bridgeObjectRelease();
  v44 = v68;
  v43 = v69;
  v45 = v70;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v69 + 104))(v68, enum case for Image.Scale.small(_:), v70, v42);
  KeyPath = swift_getKeyPath(&unk_1009964C0);
  v47 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  v48 = v43;
  v49 = v45;
  v47((char *)v7 + *(int *)(v73 + 28), v44, v45);
  v50 = (uint64_t)v7;
  *v7 = KeyPath;
  v51 = (uint64_t)v65;
  sub_100037794(v50, (uint64_t)&v65[*(int *)(v67 + 36)], &qword_100BCF148);
  *(_QWORD *)v51 = v35;
  *(_QWORD *)(v51 + 8) = v37;
  *(_BYTE *)(v51 + 16) = v34;
  *(_QWORD *)(v51 + 24) = v41;
  sub_1000D55D4(v35, v37, v34);
  swift_bridgeObjectRetain(v41);
  sub_100021A14(v50, &qword_100BCF148);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v49);
  sub_1000D31B4(v35, v37, v34);
  swift_bridgeObjectRelease();
  v52 = swift_getKeyPath(&unk_1009961D0);
  v53 = v71;
  sub_100037794(v51, v71, &qword_100BD9840);
  v54 = v53 + *(int *)(v72 + 36);
  *(_QWORD *)v54 = v52;
  *(_QWORD *)(v54 + 8) = 2;
  *(_BYTE *)(v54 + 16) = 0;
  sub_100021A14(v51, &qword_100BD9840);
  v56 = GeometryProxy.size.getter(v55);
  v58 = GeometryProxy.size.getter(v57);
  v60 = v59;
  static Alignment.bottomLeading.getter(v58);
  _FrameLayout.init(width:height:alignment:)(*(_QWORD *)&v56, 0, v60, 0);
  v61 = v74;
  sub_100037794(v53, v74, &qword_100BD9848);
  v62 = (_OWORD *)(v61 + *(int *)(sub_1000BA294(&qword_100BD9850) + 36));
  v63 = v76;
  *v62 = v75;
  v62[1] = v63;
  v62[2] = v77;
  sub_100021A14(v53, &qword_100BD9848);
}

uint64_t sub_10033B110(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t inited;
  NSString *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  Swift::String v17;
  _QWORD v19[3];
  _BYTE v20[48];

  v2 = v1;
  v4 = sub_1000BA294(&qword_100BD9858);
  inited = swift_initStackObject(v4, v20);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  swift_beginAccess(&xmmword_100BFE5C8, v19, 33, 0);
  v6 = NSFontAttributeName;
  sub_1006D1130();
  *(_QWORD *)(inited + 40) = v7;
  swift_endAccess(v19);
  type metadata accessor for Key(0);
  sub_1000A0794(0, (unint64_t *)&qword_100BD35F0, UIFont_ptr);
  sub_10007A100((uint64_t)&qword_100BC2CC0);
  v8 = Dictionary.init(dictionaryLiteral:)(inited);
  v9 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ListLocationViewModel(0) + 48));
  v10 = *v9;
  v11 = (void *)v9[1];
  v12 = String._bridgeToObjectiveC()();
  sub_1002BA888(v8);
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = sub_10034A248(v14, v12);

  v16 = 10;
  if (v15 > a1)
    v16 = 32;
  v19[0] = v16;
  v19[1] = 0xE100000000000000;
  swift_bridgeObjectRetain(0xE100000000000000);
  v17._countAndFlagsBits = v10;
  v17._object = v11;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  return v19[0];
}

uint64_t sub_10033B2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
    return 0x2D2D2D2D2D2D2D2DLL;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 2);
  v5._countAndFlagsBits = 14920;
  v5._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v5);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)v1);
  v6._countAndFlagsBits = 978067488;
  v6._object = (void *)0xE400000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v6);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v1 + 16));
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
  v8 = LocalizedStringKey.init(stringInterpolation:)(v4);
  return Text.init(_:tableName:bundle:comment:)(v8, v10, v9 & 1, v11, 0, 0, 0, "High temperature and Low temperature with 2 space separation.  Translator note: you may wish to consider the non breaking space character in the string to help avoid awkward line breaks. See discussion in rdar://79211665. You may also wish to consider a soft line break between the temperatures if the language would often span 2 lines.");
}

void sub_10033B3B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;

  sub_1000986AC();
  v1 = v0;
  v59 = v2;
  v52 = type metadata accessor for AccessibilityChildBehavior(0);
  v51 = *(_QWORD *)(v52 - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BD9798);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v53 = v8;
  v56 = sub_1000BA294(&qword_100BD97A0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000986FC();
  v55 = v10;
  __chkstk_darwin(v11);
  v54 = (char *)&v50 - v12;
  v13 = sub_10033B2A0();
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Color.black.getter(v13);
  v21 = Color.opacity(_:)(0.25);
  swift_release(v20);
  v22 = Text.shadow(color:radius:x:y:)(v21, v13, v15, v19, v17, 3.0, 0.0, 2.0);
  v24 = v23;
  v26 = v25;
  v50 = v27;
  v28 = v21;
  v29 = v1;
  swift_release(v28);
  sub_1000D31B4(v13, v15, v19);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100996460);
  v31 = KeyPath;
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    v34 = static Font.body.getter(KeyPath);
  }
  else
  {
    sub_1000B3110(KeyPath, (uint64_t)&v60);
    sub_1006D0E58();
    v33 = v32;
    swift_endAccess(&v60);
    v34 = Font.init(_:)(v33);
  }
  v35 = v34;
  v36 = swift_getKeyPath(&unk_100996170);
  v37 = swift_getKeyPath(&unk_1009961D0);
  *(_QWORD *)&v60 = v22;
  *((_QWORD *)&v60 + 1) = v24;
  v61 = v26 & 1;
  v62 = v50;
  v63 = v31;
  v64 = 2;
  v65 = v36;
  v66 = v35;
  v67 = v37;
  v68 = 2;
  v69 = 0;
  static AccessibilityChildBehavior.ignore.getter(v37);
  v38 = sub_1000BA294(&qword_100BD97A8);
  v39 = sub_100349D34();
  v40 = v53;
  View.accessibilityElement(children:)(v5, v38, v39);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v52);
  v41 = v63;
  v42 = v65;
  v43 = v66;
  v44 = v67;
  sub_1000D31B4(v60, *((uint64_t *)&v60 + 1), v61);
  swift_release(v44);
  swift_release(v42);
  swift_release(v41);
  swift_bridgeObjectRelease();
  swift_release(v43);
  *(_QWORD *)&v60 = v38;
  *((_QWORD *)&v60 + 1) = v39;
  v45 = sub_10009885C((uint64_t)&v60, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v46 = v55;
  v47 = v58;
  View.accessibilityRespondsToUserInteraction(_:)(1, v58, v45);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v40, v47);
  v60 = *(_OWORD *)(v29 + 40);
  v48 = sub_100114EF8();
  v49 = (uint64_t)v54;
  ModifiedContent<>.accessibilityLabel<A>(_:)(&v60, v56, &type metadata for String, v48);
  sub_100021A14(v46, &qword_100BD97A0);
  sub_1000787D4(v49, v59, &qword_100BD97A0);
  sub_100098640();
}

void sub_10033B6EC()
{
  sub_10033B3B8();
}

void sub_10033B72C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;

  *(_QWORD *)a5 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a5 + 8) = 0x4008000000000000;
  *(_BYTE *)(a5 + 16) = 0;
  v10 = sub_1000BA294(&qword_100BD99E0);
  sub_10033B7A0(a1, a2, a3, a4, a5 + *(int *)(v10 + 44));
}

void sub_10033B7A0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t OpaqueTypeConformance2;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[3];
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  char v111[16];

  v85 = a4;
  v84 = a3;
  v103 = a2;
  v105 = a1;
  v100 = a5;
  v99 = type metadata accessor for AccessibilityChildBehavior(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v96 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1000BA294(&qword_100BCF148);
  __chkstk_darwin(v90);
  v89 = (uint64_t *)((char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = type metadata accessor for Image.Scale(0);
  v102 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v101 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1000BA294(&qword_100BD9840);
  __chkstk_darwin(v88);
  v86 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1000BA294(&qword_100BD99E8);
  v97 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v91 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD99F0);
  __chkstk_darwin(v10);
  v93 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v94 = (uint64_t)&v83 - v13;
  v14 = sub_1000BA294(&qword_100BD7678);
  __chkstk_darwin(v14);
  v92 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v104 = (uint64_t)&v83 - v17;
  v18 = LocalizedStringKey.init(stringLiteral:)(10649826, 0xA300000000000000);
  v22 = Text.init(_:tableName:bundle:comment:)(v18, v20, v19 & 1, v21, 0, 0, 0, "Separator between time and location texts");
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = static Color.black.getter(v22);
  swift_beginAccess(&xmmword_100BFE5C8, v111, 1, 0);
  v30 = sub_1006D13DC();
  v31 = Color.opacity(_:)(v30);
  swift_release(v29);
  v32 = sub_1006D1400();
  v33 = sub_1006D1424();
  v34 = sub_100409208();
  v35 = Text.shadow(color:radius:x:y:)(v31, v22, v24, v28, v26, v32, v33, v34);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_release(v31);
  sub_1000D31B4(v22, v24, v28);
  swift_bridgeObjectRelease();
  v107 = v35;
  v108 = v37;
  v109 = v39 & 1;
  v110 = v41;
  View.accessibilityHidden(_:)(1, &type metadata for Text, &protocol witness table for Text);
  sub_1000D31B4(v35, v37, v39 & 1);
  swift_bridgeObjectRelease();
  v42 = sub_10033BEE4(v105, v103, v84, v85);
  v44 = v43;
  v46 = v45;
  v48 = v47 & 1;
  v49 = static Color.black.getter(v42);
  v50 = sub_1006D13DC();
  v51 = Color.opacity(_:)(v50);
  swift_release(v49);
  v52 = sub_1006D1400();
  v53 = sub_1006D1424();
  v54 = sub_100409208();
  v55 = Text.shadow(color:radius:x:y:)(v51, v42, v44, v48, v46, v52, v53, v54);
  v57 = v56;
  LOBYTE(v22) = v58;
  v60 = v59;
  swift_release(v51);
  LOBYTE(v22) = v22 & 1;
  sub_1000D31B4(v42, v44, v48);
  v61 = swift_bridgeObjectRelease();
  v63 = v101;
  v62 = v102;
  v64 = v87;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v102 + 104))(v101, enum case for Image.Scale.small(_:), v87, v61);
  KeyPath = swift_getKeyPath(&unk_1009964C0);
  v66 = v89;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))((char *)v89 + *(int *)(v90 + 28), v63, v64);
  *v66 = KeyPath;
  v67 = v88;
  v68 = (uint64_t)v86;
  sub_100037794((uint64_t)v66, (uint64_t)&v86[*(int *)(v88 + 36)], &qword_100BCF148);
  *(_QWORD *)v68 = v55;
  *(_QWORD *)(v68 + 8) = v57;
  *(_BYTE *)(v68 + 16) = v22;
  *(_QWORD *)(v68 + 24) = v60;
  sub_1000D55D4(v55, v57, v22);
  swift_bridgeObjectRetain(v60);
  sub_100021A14((uint64_t)v66, &qword_100BCF148);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v64);
  sub_1000D31B4(v55, v57, v22);
  swift_bridgeObjectRelease();
  v69 = v96;
  static AccessibilityChildBehavior.ignore.getter(v70);
  sub_10034A030((uint64_t)&qword_100BD99F8);
  v72 = v71;
  v73 = v91;
  View.accessibilityElement(children:)(v69, v67, v71);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v69, v99);
  sub_100021A14(v68, &qword_100BD9840);
  v107 = v105;
  v108 = (uint64_t)v103;
  v106[0] = v67;
  v106[1] = v72;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v106, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v75 = sub_100114EF8();
  v76 = (uint64_t)v93;
  v77 = v95;
  View.accessibilityLabel<A>(_:)(&v107, v95, &type metadata for String, OpaqueTypeConformance2, v75);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v73, v77);
  v78 = v94;
  sub_1000787D4(v76, v94, &qword_100BD99F0);
  v79 = v104;
  v80 = v92;
  sub_100037794(v104, v92, &qword_100BD7678);
  sub_100037794(v78, v76, &qword_100BD99F0);
  v81 = v100;
  sub_100037794(v80, v100, &qword_100BD7678);
  v82 = sub_1000BA294(&qword_100BD9A00);
  sub_100037794(v76, v81 + *(int *)(v82 + 48), &qword_100BD99F0);
  sub_100021A14(v78, &qword_100BD99F0);
  sub_100021A14(v79, &qword_100BD7678);
  sub_100021A14(v76, &qword_100BD99F0);
  sub_100021A14(v80, &qword_100BD7678);
}

void sub_10033BED8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10033B72C(*(_QWORD *)v1, *(void **)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10033BEE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  _QWORD v19[2];

  type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000BCED8();
  if (a4)
  {
    swift_bridgeObjectRetain(a4);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 2);
    sub_10009DEF0();
    v10 = Image.init(systemName:)(a3, a4);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_release(v10);
    v11._countAndFlagsBits = 32;
    v11._object = (void *)0xE100000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
    v12._countAndFlagsBits = a1;
    v12._object = a2;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v12);
    sub_10009DEF0();
    v13 = LocalizedStringKey.init(stringInterpolation:)(v4);
    return Text.init(_:tableName:bundle:comment:)(v13, v15, v14 & 1, v16, 0, 0, 0, 0);
  }
  else
  {
    v19[0] = a1;
    v19[1] = a2;
    v18 = sub_100114EF8();
    swift_bridgeObjectRetain(a2);
    return Text.init<A>(_:)(v19, &type metadata for String, v18);
  }
}

void sub_10033BFFC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  _QWORD v61[3];
  char v62[32];

  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v55 = v11;
  v49 = sub_1000BA294(&qword_100BCF148);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v48 = v13;
  v14 = sub_10009876C();
  v46 = type metadata accessor for Image.Scale(v14);
  v59 = *(_QWORD *)(v46 - 8);
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v58 = v16;
  v47 = sub_1000BA294(&qword_100BD99A8);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100079F58();
  v53 = sub_1000BA294(&qword_100BD99B0);
  v54 = *(_QWORD *)(v53 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v50 = v19;
  v20 = sub_10033BEE4(a1, a2, a3, a4);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v27 = static Color.black.getter(v20);
  sub_1000C4828(v27, (uint64_t)v62);
  v28 = sub_1006D13DC();
  v29 = Color.opacity(_:)(v28);
  swift_release(v27);
  v30 = sub_1006D1400();
  v31 = sub_1006D1424();
  v32 = sub_100409208();
  v33 = Text.shadow(color:radius:x:y:)(v29, v20, v22, v26, v24, v30, v31, v32);
  v35 = v34;
  v37 = v36;
  v45 = v38;
  swift_release(v29);
  sub_1000D31B4(v20, v22, v26);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_1009961D0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104))(v58, enum case for Image.Scale.small(_:), v46);
  v40 = swift_getKeyPath(&unk_1009964C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))((char *)v48 + *(int *)(v49 + 28), v58, v46);
  *v48 = v40;
  sub_10009BF14((uint64_t)v48, v4 + *(int *)(v47 + 36));
  *(_QWORD *)v4 = v33;
  *(_QWORD *)(v4 + 8) = v35;
  *(_BYTE *)(v4 + 16) = v37 & 1;
  *(_QWORD *)(v4 + 24) = v45;
  *(_WORD *)(v4 + 32) = 256;
  *(_QWORD *)(v4 + 40) = KeyPath;
  *(_QWORD *)(v4 + 48) = 2;
  *(_BYTE *)(v4 + 56) = 0;
  sub_1000D55D4(v33, v35, v37 & 1);
  swift_bridgeObjectRetain(v45);
  swift_retain();
  sub_10009E47C((uint64_t)v48);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v46);
  sub_1000D31B4(v33, v35, v37 & 1);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  static AccessibilityChildBehavior.ignore.getter(v41);
  v42 = sub_10034ACD0();
  View.accessibilityElement(children:)(v55, v47, v42);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
  sub_100021A14(v4, &qword_100BD99A8);
  v61[0] = a1;
  v61[1] = a2;
  v60[0] = v47;
  v60[1] = v42;
  v43 = sub_10009885C((uint64_t)v60, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v44 = sub_100114EF8();
  View.accessibilityLabel<A>(_:)(v61, v53, &type metadata for String, v43, v44);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v53);
  sub_10009990C();
}

void sub_10033C3C0()
{
  uint64_t v0;

  sub_10033BFFC(*(_QWORD *)v0, *(void **)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10033C3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for UserInterfaceSizeClass(0);
  v37 = *(_QWORD *)(v1 - 8);
  v38 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - v14;
  v16 = type metadata accessor for LocationRowButtonStyle(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(unsigned __int8 *)(v0 + *(int *)(v19 + 32));
  sub_100095B78(v0, (uint64_t)v18, v21);
  if (v20 != 1)
  {
    sub_1000215BC((uint64_t)v18, type metadata accessor for LocationRowButtonStyle);
    goto LABEL_6;
  }
  v36 = v3;
  v23 = (uint64_t)v9;
  sub_10011AA68(v22);
  v25 = v37;
  v24 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v12, enum case for UserInterfaceSizeClass.compact(_:), v38);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v24);
  v26 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100037794((uint64_t)v15, (uint64_t)v6, &qword_100BC5A68);
  sub_100037794((uint64_t)v12, v26, &qword_100BC5A68);
  v27 = (uint64_t)v6;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v24) != 1)
  {
    v29 = v23;
    sub_100037794((uint64_t)v6, v23, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v24) != 1)
    {
      v30 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v36, v26, v24);
      sub_10007A100((uint64_t)&qword_100BC5AB8);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v30, v24, v31);
      v33 = *(void (**)(char *, uint64_t))(v25 + 8);
      v33(v30, v24);
      sub_100021A14((uint64_t)v12, &qword_100BC5A68);
      sub_100021A14((uint64_t)v15, &qword_100BC5A68);
      sub_1000215BC((uint64_t)v18, type metadata accessor for LocationRowButtonStyle);
      v33((char *)v29, v24);
      sub_100021A14(v27, &qword_100BC5A68);
      v28 = v32 ^ 1;
      return v28 & 1;
    }
    sub_100021A14((uint64_t)v12, &qword_100BC5A68);
    sub_100021A14((uint64_t)v15, &qword_100BC5A68);
    sub_1000215BC((uint64_t)v18, type metadata accessor for LocationRowButtonStyle);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v12, &qword_100BC5A68);
  sub_100021A14((uint64_t)v15, &qword_100BC5A68);
  sub_1000215BC((uint64_t)v18, type metadata accessor for LocationRowButtonStyle);
  if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v24) != 1)
  {
LABEL_9:
    sub_100021A14((uint64_t)v6, &qword_100BC5E60);
    v28 = 1;
    return v28 & 1;
  }
  sub_100021A14((uint64_t)v6, &qword_100BC5A68);
LABEL_6:
  v28 = 0;
  return v28 & 1;
}

uint64_t sub_10033C794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = type metadata accessor for UserInterfaceSizeClass(0);
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  __chkstk_darwin(v1);
  v32 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v33);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v14 = type metadata accessor for LocationRowButtonStyle(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v0 + *(int *)(v17 + 56);
  v19 = *(_QWORD *)v18;
  v20 = *(_BYTE *)(v18 + 8);
  sub_10008D47C(*(_QWORD *)v18, v20);
  sub_100109B54();
  v22 = v21;
  sub_1000B15F8(v19, v20);
  sub_100095B78(v0, (uint64_t)v16, type metadata accessor for LocationRowButtonStyle);
  if ((v22 & 1) == 0)
  {
    sub_1000215BC((uint64_t)v16, type metadata accessor for LocationRowButtonStyle);
LABEL_9:
    v27 = 0;
    return v27 & 1;
  }
  sub_10011AA68(v23);
  v24 = v34;
  v25 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v10, enum case for UserInterfaceSizeClass.compact(_:), v35);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v25);
  v26 = (uint64_t)&v4[*(int *)(v33 + 48)];
  sub_100037794((uint64_t)v13, (uint64_t)v4, &qword_100BC5A68);
  sub_100037794((uint64_t)v10, v26, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v25) != 1)
  {
    sub_100037794((uint64_t)v4, (uint64_t)v7, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v25) != 1)
    {
      v29 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v32, v26, v25);
      sub_10007A100((uint64_t)&qword_100BC5AB8);
      v27 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v29, v25, v30);
      v31 = *(void (**)(char *, uint64_t))(v24 + 8);
      v31(v29, v25);
      sub_100021A14((uint64_t)v10, &qword_100BC5A68);
      sub_100021A14((uint64_t)v13, &qword_100BC5A68);
      sub_1000215BC((uint64_t)v16, type metadata accessor for LocationRowButtonStyle);
      v31(v7, v25);
      sub_100021A14((uint64_t)v4, &qword_100BC5A68);
      return v27 & 1;
    }
    sub_100021A14((uint64_t)v10, &qword_100BC5A68);
    sub_100021A14((uint64_t)v13, &qword_100BC5A68);
    sub_1000215BC((uint64_t)v16, type metadata accessor for LocationRowButtonStyle);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
    goto LABEL_8;
  }
  sub_100021A14((uint64_t)v10, &qword_100BC5A68);
  sub_100021A14((uint64_t)v13, &qword_100BC5A68);
  sub_1000215BC((uint64_t)v16, type metadata accessor for LocationRowButtonStyle);
  if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v25) != 1)
  {
LABEL_8:
    sub_100021A14((uint64_t)v4, &qword_100BC5E60);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v4, &qword_100BC5A68);
  v27 = 1;
  return v27 & 1;
}

uint64_t sub_10033CB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (**v65)(uint64_t);
  char *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t (**v78)(uint64_t);
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  void (*v130)(char *, uint64_t);
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char v156;
  int *v157;
  void (*v158)(char *, uint64_t);
  char *v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  int *v173;
  uint64_t v174;
  __n128 v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  char v180;
  void (*v181)(char *, uint64_t);
  int v182;
  double v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char v188;
  char v189;
  char v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char v199;
  uint64_t v200;
  _QWORD *v201;
  double v202;
  double v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  void (*v224)(char *, char *, uint64_t);
  id v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  uint64_t v274;
  char *v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  int *v284;
  _QWORD v285[2];
  char v286;
  _QWORD *v287;
  uint64_t v288;
  char v289;

  v3 = v2;
  v268 = a2;
  v267 = type metadata accessor for PrimitiveButtonStyleConfiguration(0);
  v266 = *(_QWORD *)(v267 - 8);
  __chkstk_darwin(v267);
  v263 = v5;
  v265 = (char *)&v220 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = type metadata accessor for Location.Identifier(0);
  v261 = *(_QWORD *)(v262 - 8);
  __chkstk_darwin(v262);
  v260 = (char *)&v220 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UserInterfaceSizeClass(0);
  v281 = *(_QWORD *)(v7 - 8);
  v282 = v7;
  __chkstk_darwin(v7);
  v222 = (char *)&v220 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v269);
  v259 = (uint64_t)&v220 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v250 = (char *)&v220 - v11;
  v12 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v12);
  v221 = (uint64_t)&v220 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v270 = (uint64_t)&v220 - v15;
  __chkstk_darwin(v16);
  v258 = (char *)&v220 - v17;
  __chkstk_darwin(v18);
  v220 = (uint64_t)&v220 - v19;
  __chkstk_darwin(v20);
  v271 = (uint64_t)&v220 - v21;
  __chkstk_darwin(v22);
  v272 = (uint64_t)&v220 - v23;
  v246 = type metadata accessor for AccessibilityTraits(0);
  v248 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v249 = (char *)&v220 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v247 = (char *)&v220 - v26;
  v244 = type metadata accessor for Color.RGBColorSpace(0);
  v243 = *(_QWORD *)(v244 - 8);
  __chkstk_darwin(v244);
  v242 = (char *)&v220 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = (int *)type metadata accessor for LocationRowButtonStyle(0);
  v28 = *((_QWORD *)v284 - 1);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v284);
  v274 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v229 = *(_QWORD *)(v274 - 8);
  __chkstk_darwin(v274);
  v31 = (char *)&v220 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = type metadata accessor for PrimitiveButtonStyleConfiguration.Label(0);
  v227 = *(_QWORD *)(v228 - 8);
  __chkstk_darwin(v228);
  v33 = (char *)&v220 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_1000BA294(&qword_100BD91D0);
  __chkstk_darwin(v226);
  v35 = (char *)&v220 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = sub_1000BA294(&qword_100BD91D8);
  __chkstk_darwin(v231);
  v230 = (uint64_t)&v220 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = sub_1000BA294(&qword_100BD91E0);
  v235 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin(v236);
  v232 = (char *)&v220 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = sub_1000BA294(&qword_100BD91E8);
  __chkstk_darwin(v234);
  v233 = (char *)&v220 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1000BA294(&qword_100BD91F0);
  __chkstk_darwin(v39);
  v239 = (uint64_t)&v220 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = sub_1000BA294(&qword_100BD91F8);
  __chkstk_darwin(v241);
  v240 = (uint64_t)&v220 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = sub_1000BA294(&qword_100BD9200);
  __chkstk_darwin(v238);
  v237 = (char *)&v220 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = sub_1000BA294(&qword_100BD9208);
  __chkstk_darwin(v245);
  v275 = (char *)&v220 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v276 = (char *)&v220 - v45;
  v46 = sub_1000BA294(&qword_100BD9210);
  __chkstk_darwin(v46);
  v280 = (uint64_t)&v220 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = sub_1000BA294(&qword_100BD9218);
  __chkstk_darwin(v251);
  v252 = (char *)&v220 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = sub_1000BA294(&qword_100BD9220);
  __chkstk_darwin(v255);
  v257 = (uint64_t)&v220 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_1000BA294(&qword_100BD9228);
  v254 = *(_QWORD *)(v256 - 8);
  __chkstk_darwin(v256);
  v253 = (char *)&v220 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = a1;
  PrimitiveButtonStyleConfiguration.label.getter(v51);
  v225 = (id)objc_opt_self(NSNotificationCenter);
  v52 = objc_msgSend(v225, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIPresentationControllerPresentationTransitionDidEndNotification, 0);

  v273 = (uint64_t *)v3;
  v283 = (uint64_t)&v220 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(v3, v283, type metadata accessor for LocationRowButtonStyle);
  v53 = *(unsigned __int8 *)(v28 + 80);
  v54 = (v53 + 16) & ~v53;
  v279 = v54;
  v277 = v54 + v29;
  v278 = v53 | 7;
  v55 = swift_allocObject(&unk_100B6E088, v54 + v29, v53 | 7);
  sub_10007802C((uint64_t)&v220 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v55 + v54, type metadata accessor for LocationRowButtonStyle);
  v56 = v227;
  v57 = v33;
  v58 = v33;
  v59 = v228;
  (*(void (**)(char *, char *, uint64_t))(v227 + 16))(v35, v58, v228);
  v60 = v226;
  v61 = &v35[*(int *)(v226 + 52)];
  v62 = v35;
  v223 = v35;
  v63 = v229;
  v224 = *(void (**)(char *, char *, uint64_t))(v229 + 16);
  v64 = v274;
  v224(v61, v31, v274);
  v65 = (uint64_t (**)(uint64_t))&v62[*(int *)(v60 + 56)];
  *v65 = sub_1003446FC;
  v65[1] = (uint64_t (*)(uint64_t))v55;
  v229 = *(_QWORD *)(v63 + 8);
  v66 = v31;
  ((void (*)(char *, uint64_t))v229)(v31, v64);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v59);
  v67 = objc_msgSend(v225, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIPresentationControllerDismissalTransitionDidEndNotification, 0);

  v68 = v283;
  sub_100095B78((uint64_t)v273, v283, type metadata accessor for LocationRowButtonStyle);
  v70 = v277;
  v69 = v278;
  v71 = swift_allocObject(&unk_100B6E0B0, v277, v278);
  v72 = v279;
  sub_10007802C(v68, v71 + v279, type metadata accessor for LocationRowButtonStyle);
  v73 = (uint64_t)v223;
  v74 = v230;
  sub_100037794((uint64_t)v223, v230, &qword_100BD91D0);
  v75 = v231;
  v76 = v31;
  v77 = v274;
  v224((char *)(v74 + *(int *)(v231 + 52)), v76, v274);
  v78 = (uint64_t (**)(uint64_t))(v74 + *(int *)(v75 + 56));
  *v78 = sub_100344944;
  v78[1] = (uint64_t (*)(uint64_t))v71;
  ((void (*)(char *, uint64_t))v229)(v66, v77);
  v79 = v73;
  v80 = v273;
  sub_100021A14(v79, &qword_100BD91D0);
  LOBYTE(v287) = sub_10033C794() & 1;
  sub_100095B78((uint64_t)v80, v68, type metadata accessor for LocationRowButtonStyle);
  v81 = swift_allocObject(&unk_100B6E0D8, v70, v69);
  sub_10007802C(v68, v81 + v72, type metadata accessor for LocationRowButtonStyle);
  sub_10034AEE4((uint64_t)&unk_100BD9230);
  v82 = v232;
  View.onChange<A>(of:initial:_:)(&v287, 0, sub_100344988, v81, v75, &type metadata for Bool, v83, &protocol witness table for Bool);
  swift_release(v81);
  sub_100021A14(v74, &qword_100BD91D8);
  LOBYTE(v71) = static Edge.Set.all.getter(v84);
  v85 = EdgeInsets.init(_all:)(16.0);
  v87 = v86;
  v89 = v88;
  v91 = v90;
  v92 = v235;
  v93 = (uint64_t)v233;
  v94 = v236;
  (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v233, v82, v236);
  v95 = v93 + *(int *)(v234 + 36);
  *(_BYTE *)v95 = v71;
  *(double *)(v95 + 8) = v85;
  *(_QWORD *)(v95 + 16) = v87;
  *(_QWORD *)(v95 + 24) = v89;
  *(_QWORD *)(v95 + 32) = v91;
  *(_BYTE *)(v95 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v82, v94);
  v96 = v284;
  v97 = (uint64_t)v80 + v284[6];
  v236 = *v80;
  v235 = v80[1];
  LODWORD(v82) = *((unsigned __int8 *)v80 + v284[9]);
  v98 = (char *)v80 + v284[12];
  v99 = *v98;
  v100 = *((_QWORD *)v98 + 1);
  LOBYTE(v287) = v99;
  v288 = v100;
  v101 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(v285, v101);
  LOBYTE(v75) = v285[0];
  v102 = (char *)v80 + v96[11];
  v103 = *v102;
  v104 = *((_QWORD *)v102 + 1);
  LOBYTE(v287) = v103;
  v288 = v104;
  v274 = v101;
  State.wrappedValue.getter(v285, v101);
  LOBYTE(v71) = v285[0];
  v105 = v242;
  (*(void (**)(char *, _QWORD, uint64_t))(v243 + 104))(v242, enum case for Color.RGBColorSpace.sRGB(_:), v244);
  v106 = Color.init(_:white:opacity:)(v105, 0.8, 1.0);
  v107 = v239;
  v108 = v75;
  v109 = (uint64_t)v237;
  sub_10033E70C(v97, v236, v235, (uint64_t)(v80 + 2), (int)v82, v108, v71, v106, v239);
  v110 = v96;
  v111 = v238;
  swift_release(v106);
  sub_100021A14(v93, &qword_100BD91E8);
  v112 = v240;
  sub_100037794(v107, v240, &qword_100BD91F0);
  *(_BYTE *)(v112 + *(int *)(v241 + 36)) = 0;
  sub_100021A14(v107, &qword_100BD91F0);
  v243 = type metadata accessor for ListLocationViewModel(0);
  v113 = *(int *)(v243 + 92);
  v244 = v97;
  LOBYTE(v93) = *(_BYTE *)(v97 + v113);
  LOBYTE(v107) = sub_10033C3CC();
  v114 = (char *)v80 + v110[16];
  v115 = *(_QWORD *)v114;
  v116 = *((_QWORD *)v114 + 1);
  LOBYTE(v114) = v114[16];
  v285[0] = v115;
  v285[1] = v116;
  v286 = (char)v114;
  v117 = sub_1000BA294((uint64_t *)&unk_100BD4270);
  Binding.projectedValue.getter(v117);
  v118 = v287;
  v119 = v288;
  LOBYTE(v82) = v289;
  sub_100037794(v112, v109, &qword_100BD91F8);
  v120 = v109 + *(int *)(v111 + 36);
  *(_BYTE *)v120 = v93;
  *(_BYTE *)(v120 + 1) = v107 & 1;
  *(_QWORD *)(v120 + 8) = v118;
  *(_QWORD *)(v120 + 16) = v119;
  *(_BYTE *)(v120 + 24) = (_BYTE)v82;
  sub_100021A14(v112, &qword_100BD91F8);
  v121 = v80;
  if ((sub_10033C3CC() & 1) != 0)
  {
    v122 = v247;
    static AccessibilityTraits.isSelected.getter();
    v123 = v246;
  }
  else
  {
    v287 = _swiftEmptyArrayStorage;
    sub_10007A100((uint64_t)&unk_100C0A5F0);
    v125 = v124;
    v126 = sub_1000BA294(&qword_100BD3C00);
    sub_10034AEE4((uint64_t)&qword_100C0A600);
    v122 = v247;
    v127 = v126;
    v123 = v246;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v287, v127, v128, v246, v125);
  }
  v129 = sub_1003449EC();
  View.accessibilityAddTraits(_:)(v122, v111, v129);
  v130 = *(void (**)(char *, uint64_t))(v248 + 8);
  v130(v122, v123);
  sub_100021A14(v109, &qword_100BD9200);
  v131 = sub_10033C3CC();
  v132 = v269;
  v133 = (uint64_t)v250;
  v134 = v271;
  v135 = v284;
  if ((v131 & 1) != 0)
  {
    v287 = _swiftEmptyArrayStorage;
    sub_10007A100((uint64_t)&unk_100C0A5F0);
    v137 = v136;
    v138 = v123;
    v139 = sub_1000BA294(&qword_100BD3C00);
    sub_10034AEE4((uint64_t)&qword_100C0A600);
    v140 = v139;
    v123 = v138;
    v141 = v249;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v287, v140, v142, v123, v137);
  }
  else
  {
    v141 = v249;
    static AccessibilityTraits.isSelected.getter();
  }
  v143 = v272;
  v144 = (uint64_t)v275;
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v141, v245);
  v130(v141, v123);
  sub_100021A14(v144, &qword_100BD9208);
  v275 = (char *)v121 + v135[15];
  sub_10011AA68(v145);
  v146 = enum case for UserInterfaceSizeClass.compact(_:);
  v147 = v282;
  v249 = *(char **)(v281 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v249)(v134, enum case for UserInterfaceSizeClass.compact(_:), v282);
  _s7Weather24LocationCompositionStateOwst_0(v134, 0, 1, v147);
  v148 = v133 + *(int *)(v132 + 48);
  sub_100037794(v143, v133, &qword_100BC5A68);
  sub_100037794(v134, v148, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v133, 1, v147) == 1)
  {
    sub_100021A14(v134, &qword_100BC5A68);
    sub_100021A14(v143, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v148, 1, v147) == 1)
    {
      sub_100021A14(v133, &qword_100BC5A68);
LABEL_14:
      v151 = LocationModel.id.getter(v149);
      v152 = v160;
      goto LABEL_16;
    }
LABEL_12:
    sub_100021A14(v133, &qword_100BC5E60);
    v151 = 0;
    v152 = 0;
    goto LABEL_16;
  }
  v150 = v220;
  sub_100037794(v133, v220, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v148, 1, v147) == 1)
  {
    sub_100021A14(v271, &qword_100BC5A68);
    sub_100021A14(v272, &qword_100BC5A68);
    (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v150, v147);
    goto LABEL_12;
  }
  v153 = v281;
  v154 = v222;
  (*(void (**)(char *, uint64_t, uint64_t))(v281 + 32))(v222, v148, v147);
  sub_10007A100((uint64_t)&qword_100BC5AB8);
  v156 = dispatch thunk of static Equatable.== infix(_:_:)(v150, v154, v147, v155);
  v157 = v135;
  v158 = *(void (**)(char *, uint64_t))(v153 + 8);
  v159 = v154;
  v132 = v269;
  v158(v159, v147);
  sub_100021A14(v271, &qword_100BC5A68);
  sub_100021A14(v272, &qword_100BC5A68);
  v158((char *)v150, v147);
  v135 = v157;
  sub_100021A14(v133, &qword_100BC5A68);
  if ((v156 & 1) != 0)
    goto LABEL_14;
  v151 = 0;
  v152 = 0;
LABEL_16:
  v161 = v135[7];
  v162 = (uint64_t)v276;
  sub_10033EA08(v151, v152, *(uint64_t *)((char *)v121 + v161), v280);
  swift_bridgeObjectRelease();
  sub_100021A14(v162, &qword_100BD9208);
  v163 = v260;
  v165 = LocationModel.identifier.getter(v164);
  v276 = *(char **)((char *)v121 + v161);
  v166 = (uint64_t)v258;
  sub_10011AA68(v165);
  v167 = v270;
  v168 = v146;
  v169 = v282;
  ((void (*)(uint64_t, uint64_t, uint64_t))v249)(v270, v168, v282);
  _s7Weather24LocationCompositionStateOwst_0(v167, 0, 1, v169);
  v170 = v259;
  v171 = v259 + *(int *)(v132 + 48);
  sub_100037794(v166, v259, &qword_100BC5A68);
  sub_100037794(v167, v171, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v170, 1, v169) == 1)
  {
    sub_100021A14(v167, &qword_100BC5A68);
    sub_100021A14(v166, &qword_100BC5A68);
    v172 = _s7Weather24LocationCompositionStateOwet_0(v171, 1, v169);
    v173 = v284;
    if (v172 == 1)
    {
      sub_100021A14(v170, &qword_100BC5A68);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  v176 = v221;
  sub_100037794(v170, v221, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v171, 1, v169) == 1)
  {
    sub_100021A14(v167, &qword_100BC5A68);
    sub_100021A14(v166, &qword_100BC5A68);
    (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v176, v169);
    v173 = v284;
LABEL_21:
    sub_100021A14(v170, &qword_100BC5E60);
LABEL_26:
    v182 = 0;
    goto LABEL_27;
  }
  v177 = v281;
  v178 = v222;
  (*(void (**)(char *, uint64_t, uint64_t))(v281 + 32))(v222, v171, v169);
  sub_10007A100((uint64_t)&qword_100BC5AB8);
  v180 = dispatch thunk of static Equatable.== infix(_:_:)(v176, v178, v169, v179);
  v181 = *(void (**)(char *, uint64_t))(v177 + 8);
  v181(v178, v169);
  sub_100021A14(v270, &qword_100BC5A68);
  sub_100021A14(v166, &qword_100BC5A68);
  v181((char *)v176, v169);
  sub_100021A14(v170, &qword_100BC5A68);
  v173 = v284;
  if ((v180 & 1) == 0)
    goto LABEL_26;
LABEL_23:
  if (qword_100BC22D8 != -1)
    v174 = swift_once(&qword_100BC22D8, sub_1005E696C);
  if ((byte_100CAEE78 & 1) != 0)
    goto LABEL_26;
  v182 = static MatchedGeometryProperties.frame.getter(v174);
LABEL_27:
  v183 = static UnitPoint.top.getter(v175);
  v185 = v184;
  v186 = (char *)v121 + v173[14];
  v187 = *(_QWORD *)v186;
  v188 = v186[8];
  sub_10008D47C(*(_QWORD *)v186, v188);
  sub_100109B54();
  v190 = v189;
  sub_1000B15F8(v187, v188);
  v191 = (uint64_t)v252;
  v192 = &v252[*(int *)(v251 + 36)];
  v193 = v261;
  v194 = v262;
  (*(void (**)(char *, char *, uint64_t))(v261 + 16))(v192, v163, v262);
  v195 = sub_1000BA294(&qword_100BD9290);
  *(_QWORD *)&v192[*(int *)(v195 + 36)] = v276;
  v196 = &v192[*(int *)(v195 + 40)];
  *(_DWORD *)v196 = v182;
  *((double *)v196 + 1) = v183;
  *((_QWORD *)v196 + 2) = v185;
  v196[24] = v190 & 1;
  v197 = v280;
  sub_100037794(v280, v191, &qword_100BD9210);
  (*(void (**)(char *, uint64_t))(v193 + 8))(v163, v194);
  sub_100021A14(v197, &qword_100BD9210);
  v198 = (char *)v121 + v173[10];
  v199 = *v198;
  v200 = *((_QWORD *)v198 + 1);
  LOBYTE(v287) = v199;
  v288 = v200;
  v201 = State.wrappedValue.getter(v285, v274);
  if (LOBYTE(v285[0]))
    v202 = 0.96;
  else
    v202 = 1.0;
  v203 = static UnitPoint.center.getter(v201);
  v205 = v204;
  v206 = v257;
  sub_100037794(v191, v257, &qword_100BD9218);
  v207 = v255;
  v208 = v206 + *(int *)(v255 + 36);
  *(double *)v208 = v202;
  *(double *)(v208 + 8) = v202;
  *(double *)(v208 + 16) = v203;
  *(_QWORD *)(v208 + 24) = v205;
  sub_100021A14(v191, &qword_100BD9218);
  v209 = (uint64_t)v121;
  v210 = v283;
  sub_100095B78(v209, v283, type metadata accessor for LocationRowButtonStyle);
  v211 = v266;
  v212 = v265;
  v213 = v267;
  (*(void (**)(char *, uint64_t, uint64_t))(v266 + 16))(v265, v264, v267);
  v214 = *(unsigned __int8 *)(v211 + 80);
  v215 = (v277 + v214) & ~v214;
  v216 = swift_allocObject(&unk_100B6E100, v215 + v263, v278 | v214);
  sub_10007802C(v210, v216 + v279, type metadata accessor for LocationRowButtonStyle);
  (*(void (**)(uint64_t, char *, uint64_t))(v211 + 32))(v216 + v215, v212, v213);
  sub_100345634((uint64_t)&unk_100BD9298);
  v217 = v253;
  View.onTapGesture(count:perform:)(1, sub_100344FD8, v216, v207, v218);
  swift_release(v216);
  sub_100021A14(v206, &qword_100BD9220);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v254 + 32))(v268, v217, v256);
}

void sub_10033E274(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  _QWORD v19[2];
  id v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v3 = type metadata accessor for LocationRowButtonStyle(0);
  v4 = (char *)(a2 + *(int *)(v3 + 40));
  v5 = *v4;
  v6 = *((_QWORD *)v4 + 1);
  LOBYTE(v20) = *v4;
  v21 = v6;
  v7 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v22, v7);
  if (v22 == 1)
  {
    LOBYTE(v20) = v5;
    v21 = v6;
    LOBYTE(v22) = 0;
    State.wrappedValue.setter(&v22, v7);
  }
  v8 = (char *)(a2 + *(int *)(v3 + 44));
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  LOBYTE(v20) = v9;
  v21 = v10;
  v11 = State.wrappedValue.getter(&v22, v7);
  if ((v22 & 1) == 0)
  {
    if (Notification.userInfo.getter(v11))
    {
      v19[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIPresentationControllerPresentationTransitionDidEndCompletedKey);
      v19[1] = v12;
      AnyHashable.init<A>(_:)(v19);
      sub_1007D4C44();
      swift_bridgeObjectRelease();
      sub_10011F394((uint64_t)&v20);
      if (*((_QWORD *)&v23 + 1))
      {
        v13 = sub_1000A0794(0, &qword_100BCE740, NSNumber_ptr);
        v14 = swift_dynamicCast(&v20, &v22, (char *)&type metadata for Any + 8, v13, 6);
        if ((v14 & 1) != 0)
        {
          v15 = v20;
          v14 = (uint64_t)objc_msgSend(v20, "BOOLValue");
          if ((v14 & 1) != 0)
          {

            return;
          }
          goto LABEL_12;
        }
LABEL_11:
        v15 = 0;
LABEL_12:
        __chkstk_darwin(v14);
        v18[2] = a2;
        v17 = static Animation.default.getter(v16);
        withAnimation<A>(_:_:)(v17, sub_10034AF10, v18, &type metadata for () + 1);
        swift_release(v17);

        return;
      }
    }
    else
    {
      v22 = 0u;
      v23 = 0u;
    }
    sub_100021A14((uint64_t)&v22, &qword_100C0B800);
    goto LABEL_11;
  }
}

double sub_10033E480(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for LocationRowButtonStyle(0);
  v4 = (char *)(a2 + *(int *)(v3 + 48));
  v5 = *v4;
  v6 = *((_QWORD *)v4 + 1);
  v16 = *v4;
  v17 = v6;
  v7 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v18, v7);
  if (v18 == 1)
  {
    v16 = v5;
    v17 = v6;
    LOBYTE(v18) = 0;
    State.wrappedValue.setter(&v18, v7);
  }
  v8 = (char *)(a2 + *(int *)(v3 + 44));
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  v16 = v9;
  v17 = v10;
  v11 = State.wrappedValue.getter(&v18, v7);
  if ((v18 & 1) == 0)
  {
    __chkstk_darwin(v11);
    v15[2] = a2;
    v14 = static Animation.default.getter(v13);
    withAnimation<A>(_:_:)(v14, sub_100345384, v15, &type metadata for () + 1);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_10033E59C(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for LocationRowButtonStyle(0) + 44));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(v6, v4);
}

_BYTE *sub_10033E60C(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*result == 1)
  {
    if ((*a2 & 1) == 0)
    {
      type metadata accessor for LocationRowButtonStyle(0);
      v2 = sub_1000BA294(&qword_100BC5608);
      result = State.wrappedValue.getter(&v3, v2);
      if ((v3 & 1) == 0)
      {
        LOBYTE(v3) = 1;
        return (_BYTE *)State.wrappedValue.setter(&v3, v2);
      }
    }
  }
  else if (*a2)
  {
    type metadata accessor for LocationRowButtonStyle(0);
    v2 = sub_1000BA294(&qword_100BC5608);
    result = State.wrappedValue.getter(&v3, v2);
    if (v3 == 1)
    {
      LOBYTE(v3) = 0;
      return (_BYTE *)State.wrappedValue.setter(&v3, v2);
    }
  }
  return result;
}

void sub_10033E70C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  int *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a2;
  v49 = a8;
  v50 = a9;
  v46 = a5;
  v44 = a4;
  v45 = a3;
  v12 = sub_1000BA294(&qword_100BD9258);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BD92E8);
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BD9270);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a6 & 1) != 0)
  {
    v22 = static Alignment.center.getter(v19);
    v24 = v23;
    v25 = (uint64_t)&v21[*(int *)(v18 + 36)];
    sub_10033FC64(a1, v48, v45, v44, v46 & 1, v49, a7 & 1, v25);
    v26 = (uint64_t *)(v25 + *(int *)(sub_1000BA294(&qword_100BD9280) + 36));
    *v26 = v22;
    v26[1] = v24;
    sub_100037794(v47, (uint64_t)v21, &qword_100BD91E8);
    sub_100037794((uint64_t)v21, (uint64_t)v17, &qword_100BD9270);
    swift_storeEnumTagMultiPayload(v17, v15, 1);
    v27 = sub_100344B28();
    v28 = sub_100344C74();
    _ConditionalContent<>.init(storage:)(v17, v12, v18, v27, v28);
    v29 = (uint64_t)v21;
    v30 = &qword_100BD9270;
  }
  else
  {
    v31 = a1 + *(int *)(type metadata accessor for ListLocationViewModel(0) + 88);
    v32 = &v14[*(int *)(v12 + 36)];
    v33 = (int *)type metadata accessor for InternalStateWeatherConditionBackgroundModifier(0);
    v34 = &v32[v33[5]];
    v35 = type metadata accessor for WeatherConditionBackgroundModel(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v34, v31, v35);
    sub_100043CA8(v44, (uint64_t)&v32[v33[7]]);
    *(_QWORD *)v32 = sub_1008FDAC4;
    *((_QWORD *)v32 + 1) = 0;
    v32[16] = 0;
    v36 = &v32[v33[6]];
    v37 = v48;
    v38 = v49;
    v39 = v45;
    *(_QWORD *)v36 = v48;
    *((_QWORD *)v36 + 1) = v39;
    v40 = &v32[v33[8]];
    *(_QWORD *)v40 = 0;
    *((_QWORD *)v40 + 1) = 0;
    *((_QWORD *)v40 + 2) = 0;
    v32[v33[9]] = v46 & 1;
    *(_QWORD *)&v32[v33[10]] = v38;
    sub_100037794(v47, (uint64_t)v14, &qword_100BD91E8);
    sub_100037794((uint64_t)v14, (uint64_t)v17, &qword_100BD9258);
    swift_storeEnumTagMultiPayload(v17, v15, 0);
    v41 = sub_100344B28();
    v42 = sub_100344C74();
    swift_unknownObjectRetain(v37);
    swift_retain();
    _ConditionalContent<>.init(storage:)(v17, v12, v18, v41, v42);
    v29 = (uint64_t)v14;
    v30 = &qword_100BD9258;
  }
  sub_100021A14(v29, v30);
}

void sub_10033EA08(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v34 = a3;
  v36 = a4;
  v6 = sub_1000BA294(&qword_100BD9208);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD92D8);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD92E0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    goto LABEL_6;
  if (qword_100BC22D8 != -1)
    v14 = swift_once(&qword_100BC22D8, sub_1005E696C);
  if (byte_100CAEE78 == 1)
  {
    v33 = &v31;
    v39 = a1;
    v40 = a2;
    __chkstk_darwin(v14);
    v32 = &v31 - 4;
    v17 = sub_1000BA294(&qword_100BD92B0);
    v18 = sub_100345200();
    v19 = sub_100345284();
    v31 = v19;
    v20 = sub_100075EB0(&qword_100BD92C8);
    v37 = type metadata accessor for EmptyMatchedTransitionSourceConfiguration(255);
    v38 = &protocol witness table for EmptyMatchedTransitionSourceConfiguration;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v37, &opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.background(_:)>>, 1);
    v37 = v20;
    v38 = (void *)OpaqueTypeConformance2;
    v22 = swift_getOpaqueTypeConformance2(&v37, &opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.clipShape(_:)>>, 1);
    View.matchedTransitionSource<A, B>(id:in:configuration:)(&v39, v34, sub_100345378, v32, v6, &unk_100B9A908, v17, v18, v19, v22);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v16, v12);
    swift_storeEnumTagMultiPayload(v11, v9, 0);
    v39 = v6;
    v40 = &unk_100B9A908;
    v41 = v17;
    v42 = v18;
    v43 = v31;
    v44 = v22;
    v23 = swift_getOpaqueTypeConformance2(&v39, &opaque type descriptor for <<opaque return type of View.matchedTransitionSource<A, B>(id:in:configuration:)>>, 1);
    _ConditionalContent<>.init(storage:)(v11, v12, v6, v23, v18);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  else
  {
LABEL_6:
    sub_100037794(v35, (uint64_t)v8, &qword_100BD9208);
    sub_100037794((uint64_t)v8, (uint64_t)v11, &qword_100BD9208);
    swift_storeEnumTagMultiPayload(v11, v9, 1);
    v24 = sub_100075EB0(&qword_100BD92B0);
    v25 = sub_100345200();
    v26 = sub_100345284();
    v27 = sub_100075EB0(&qword_100BD92C8);
    v39 = type metadata accessor for EmptyMatchedTransitionSourceConfiguration(255);
    v40 = &protocol witness table for EmptyMatchedTransitionSourceConfiguration;
    v28 = swift_getOpaqueTypeConformance2(&v39, &opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.background(_:)>>, 1);
    v39 = v27;
    v40 = (void *)v28;
    v29 = swift_getOpaqueTypeConformance2(&v39, &opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.clipShape(_:)>>, 1);
    v39 = v6;
    v40 = &unk_100B9A908;
    v41 = v24;
    v42 = v25;
    v43 = v26;
    v44 = v29;
    v30 = swift_getOpaqueTypeConformance2(&v39, &opaque type descriptor for <<opaque return type of View.matchedTransitionSource<A, B>(id:in:configuration:)>>, 1);
    _ConditionalContent<>.init(storage:)(v11, v12, v6, v30, v25);
    sub_100021A14((uint64_t)v8, &qword_100BD9208);
  }
}

void sub_10033EDC4(char *a1, uint64_t a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;

  v55 = a2;
  v4 = type metadata accessor for AnimationCompletionCriteria(0, a3);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v51 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PrimitiveButtonStyleConfiguration(0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  __chkstk_darwin(v6);
  v47 = v7;
  v48 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UserInterfaceSizeClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v46 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v14);
  v54 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v46 - v20;
  v22 = &a1[*(int *)(type metadata accessor for LocationRowButtonStyle(0) + 48)];
  v23 = *v22;
  v24 = *((_QWORD *)v22 + 1);
  LOBYTE(v57) = v23;
  v58 = v24;
  v56 = 1;
  v25 = sub_1000BA294(&qword_100BC5608);
  v26 = State.wrappedValue.setter(&v56, v25);
  sub_10011AA68(v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v18, enum case for UserInterfaceSizeClass.compact(_:), v8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v8);
  v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_100037794((uint64_t)v21, (uint64_t)v13, &qword_100BC5A68);
  sub_100037794((uint64_t)v18, v27, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v8) != 1)
  {
    v28 = v54;
    sub_100037794((uint64_t)v13, v54, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v8) != 1)
    {
      v29 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v46, v27, v8);
      sub_10007A100((uint64_t)&qword_100BC5AB8);
      v31 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v29, v8, v30);
      v32 = *(void (**)(char *, uint64_t))(v9 + 8);
      v32(v29, v8);
      sub_100021A14((uint64_t)v18, &qword_100BC5A68);
      sub_100021A14((uint64_t)v21, &qword_100BC5A68);
      v32((char *)v28, v8);
      sub_100021A14((uint64_t)v13, &qword_100BC5A68);
      if ((v31 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      PrimitiveButtonStyleConfiguration.trigger()();
      return;
    }
    sub_100021A14((uint64_t)v18, &qword_100BC5A68);
    sub_100021A14((uint64_t)v21, &qword_100BC5A68);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v28, v8);
LABEL_6:
    sub_100021A14((uint64_t)v13, &qword_100BC5E60);
    goto LABEL_11;
  }
  sub_100021A14((uint64_t)v18, &qword_100BC5A68);
  sub_100021A14((uint64_t)v21, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v8) != 1)
    goto LABEL_6;
  sub_100021A14((uint64_t)v13, &qword_100BC5A68);
LABEL_8:
  v57 = 0;
  if (qword_100BC1F98 != -1)
    swift_once(&qword_100BC1F98, sub_10032E408);
  swift_retain();
  Transaction.animation.setter(v33);
  v35 = v48;
  v34 = v49;
  v36 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v55, v50);
  v37 = *(unsigned __int8 *)(v34 + 80);
  v38 = (v37 + 16) & ~v37;
  v39 = swift_allocObject(&unk_100B6E128, v38 + v47, v37 | 7);
  v40 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v39 + v38, v35, v36);
  v41 = v51;
  static AnimationCompletionCriteria.logicallyComplete.getter(v40);
  Transaction.addAnimationCompletion(criteria:_:)(v41, sub_100345320, v39);
  v42 = swift_release(v39);
  v43 = (*(uint64_t (**)(char *, uint64_t, __n128))(v52 + 8))(v41, v53, v42);
  v44 = v57;
  __chkstk_darwin(v43);
  *(&v46 - 2) = a1;
  swift_retain();
  withTransaction<A>(_:_:)(v45, sub_100345360, &v46 - 4, &type metadata for () + 1);
  swift_release(v44);
  swift_release(v44);
}

void sub_10033F2CC()
{
  objc_msgSend((id)objc_opt_self(CATransaction), "setFrameStallSkipRequest:", 1);
  PrimitiveButtonStyleConfiguration.trigger()();
}

uint64_t sub_10033F308()
{
  uint64_t v0;
  char v2;

  type metadata accessor for LocationRowButtonStyle(0);
  v2 = 1;
  v0 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.setter(&v2, v0);
  v2 = 0;
  return State.wrappedValue.setter(&v2, v0);
}

void sub_10033F3BC()
{
  _BYTE *v0;

  *v0 = sub_100094FB8() & 1;
  sub_10004A298();
}

void sub_10033F3DC(char *a1)
{
  sub_1000F3E2C(a1);
  sub_10004A298();
}

void sub_10033F3F8(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v47;
  uint64_t (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  __int128 *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  __int128 *v72;
  void *v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  int v105;
  uint64_t v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _OWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  char v125[24];
  __int128 v126;
  __int128 v127;
  uint64_t v128;

  v105 = a5;
  *((_QWORD *)&v104 + 1) = a4;
  *(_QWORD *)&v104 = a3;
  v108 = a1;
  v120 = a6;
  v116 = sub_1000BA294(&qword_100BD9738);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v118 = v11;
  v12 = sub_10009876C();
  v114 = type metadata accessor for RoundedRectangle._Inset(v12);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v117 = v14;
  v115 = sub_1000BA294(&qword_100BD9740);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v119 = v16;
  v17 = sub_10009876C();
  v103 = type metadata accessor for BlendMode(v17);
  v101 = *(_QWORD *)(v103 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v100 = v19;
  v102 = sub_1000BA294(&qword_100BD9748);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v99 = v21;
  v22 = sub_10009876C();
  v110 = type metadata accessor for ContentShapeKinds(v22);
  v109 = *(_QWORD *)(v110 - 8);
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_1000BCED8();
  v24 = type metadata accessor for RoundedCornerStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  sub_100099234();
  v26 = type metadata accessor for RoundedRectangle(0);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_1000986FC();
  v113 = v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v98 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v98 - v33;
  v35 = sub_1000BA294(&qword_100BD9750);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_100079F58();
  v106 = sub_1000BA294(&qword_100BD9758);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_100088FDC();
  v124 = v38;
  v111 = sub_1000BA294(&qword_100BD9760);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_100088FDC();
  v112 = v41;
  __asm { FMOV            V0.2D, #20.0 }
  v121 = _Q0;
  v123 = a2;
  v122 = v26;
  if ((a2 & 1) != 0)
  {
    if (qword_100BC1EE0 != -1)
      swift_once(&qword_100BC1EE0, sub_100155298);
    v49 = sub_1000AECD4(v24, (uint64_t)qword_100CAE560);
    v50 = (uint64_t)&v34[*(int *)(v26 + 20)];
    v48 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v25 + 16);
    sub_1000DC900(v50, v49);
    *(_OWORD *)v34 = v121;
  }
  else
  {
    sub_1000DB274(v40, enum case for RoundedCornerStyle.continuous(_:));
    v47 = (uint64_t)&v34[*(int *)(v26 + 20)];
    v48 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v25 + 16);
    sub_1000DC900(v47, v8);
    *(_QWORD *)v34 = 0;
    *((_QWORD *)v34 + 1) = 0;
    sub_1000FC4B0();
  }
  v51 = v6 + *(int *)(v35 + 36);
  sub_100095B78((uint64_t)v34, v51, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v51 + *(int *)(sub_1000BA294(&qword_100BD3DA8) + 36)) = 256;
  v52 = sub_1000BA294(&qword_100BD9768);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v6, v108, v52);
  sub_1000215BC((uint64_t)v34, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v53 = static ContentShapeKinds.dragPreview.getter();
  v107 = v48;
  if ((v123 & 1) != 0)
  {
    if (qword_100BC1EE0 != -1)
      swift_once(&qword_100BC1EE0, sub_100155298);
    v54 = sub_1000AECD4(v24, (uint64_t)qword_100CAE560);
    sub_1000DC900((uint64_t)&v31[*(int *)(v122 + 20)], v54);
    *(_OWORD *)v31 = v121;
  }
  else
  {
    sub_1000DB274(v53, enum case for RoundedCornerStyle.continuous(_:));
    sub_1000DC900((uint64_t)&v31[*(int *)(v122 + 20)], v8);
    *(_QWORD *)v31 = 0;
    *((_QWORD *)v31 + 1) = 0;
    sub_1000FC4B0();
  }
  v55 = v124;
  v56 = v124 + *(int *)(v106 + 36);
  sub_100095B78((uint64_t)v31, v56, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v57 = sub_1000BA294(&qword_100BD9770);
  v58 = v109;
  v59 = v110;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16))(v56 + *(int *)(v57 + 40), v7, v110);
  *(_BYTE *)(v56 + *(int *)(v57 + 36)) = 0;
  sub_100037794(v6, v55, &qword_100BD9750);
  sub_1000215BC((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v7, v59);
  sub_100021A14(v6, &qword_100BD9750);
  if (qword_100BC1EE0 != -1)
    swift_once(&qword_100BC1EE0, sub_100155298);
  v60 = sub_1000AECD4(v24, (uint64_t)qword_100CAE560);
  v61 = v113;
  v62 = v107((char *)v113 + *(int *)(v122 + 20), v60, v24);
  *v61 = v121;
  if ((v123 & 0x100) != 0
    && (v126 = v104,
        LOBYTE(v127) = v105 & 1,
        v63 = sub_1000BA294((uint64_t *)&unk_100BD4270),
        v62 = Binding.wrappedValue.getter(v63),
        (v125[0] & 1) == 0))
  {
    v67 = static HierarchicalShapeStyle.tertiary.getter(v62);
    v68 = v101;
    v69 = v100;
    v70 = v103;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v101 + 104))(v100, enum case for BlendMode.plusLighter(_:), v103);
    v71 = (void *)v102;
    v72 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))((char *)v99 + *(int *)(v102 + 36), v69, v70);
    *(_DWORD *)v72 = v67;
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
    sub_10034AEE4((uint64_t)&unk_100BD9790);
    v65 = v73;
    v66 = v72;
    v64 = v71;
  }
  else
  {
    *(_QWORD *)&v126 = static Color.clear.getter(v62);
    v64 = &type metadata for Color;
    v65 = &protocol witness table for Color;
    v66 = &v126;
  }
  v74 = AnyShapeStyle.init<A>(_:)(v66, v64, v65);
  sub_1000C4828(v74, (uint64_t)v125);
  v75 = sub_1006D1444();
  v76 = v117;
  sub_100095B78((uint64_t)v61, v117, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v77 = v114;
  *(double *)(v76 + *(int *)(v114 + 20)) = -v75;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v126, 0, 0, v75, 10.0, 0.0);
  v78 = v119;
  sub_100095B78(v76, v119, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v79 = *(double *)&v126 * 0.5;
  v80 = v118;
  sub_100095B78(v76, v118, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  *(double *)(v80 + *(int *)(v77 + 20)) = v79 + *(double *)(v80 + *(int *)(v77 + 20));
  v81 = v80 + *(int *)(sub_1000BA294(&qword_100BD9778) + 36);
  v82 = v127;
  *(_OWORD *)v81 = v126;
  *(_OWORD *)(v81 + 16) = v82;
  *(_QWORD *)(v81 + 32) = v128;
  v83 = v116;
  *(_QWORD *)(v80 + *(int *)(v116 + 52)) = v74;
  *(_WORD *)(v80 + *(int *)(v83 + 56)) = 256;
  swift_retain();
  v85 = static Alignment.center.getter(v84);
  v87 = v86;
  v88 = v78 + *(int *)(v115 + 68);
  v89 = (uint64_t *)(v88 + *(int *)(sub_1000BA294(&qword_100BD9780) + 36));
  *v89 = v85;
  v89[1] = v87;
  sub_1000787D4(v80, v88, &qword_100BD9738);
  sub_1000215BC(v76, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v91 = static Alignment.center.getter(v90);
  v93 = v92;
  v94 = v112;
  v95 = v112 + *(int *)(v111 + 36);
  sub_100037794(v78, v95, &qword_100BD9740);
  v96 = (uint64_t *)(v95 + *(int *)(sub_1000BA294(&qword_100BD9788) + 36));
  *v96 = v91;
  v96[1] = v93;
  v97 = v124;
  sub_10009BF14(v124, v94);
  sub_100021A14(v78, &qword_100BD9740);
  swift_release(v74);
  sub_1000215BC((uint64_t)v61, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10009E47C(v97);
  sub_1000787D4(v94, v120, &qword_100BD9760);
  sub_10009990C();
}

void sub_10033FC40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  int v3;

  if (v2[1])
    v3 = 256;
  else
    v3 = 0;
  sub_10033F3F8(a1, v3 | *v2, *((_QWORD *)v2 + 1), *((_QWORD *)v2 + 2), v2[24], a2);
}

void sub_10033FC64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v32 = a7;
  v31 = a6;
  v30 = a5;
  v28 = a4;
  v29 = a3;
  v33 = a8;
  v10 = (int *)type metadata accessor for InternalStateWeatherConditionBackgroundModifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD92F0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1000BA294(&qword_100BD92F8);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = static Color.clear.getter(v19);
  v21 = a1 + *(int *)(type metadata accessor for ListLocationViewModel(0) + 88);
  v22 = &v12[v10[5]];
  v23 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v22, v21, v23);
  sub_100043CA8(v28, (uint64_t)&v12[v10[7]]);
  *(_QWORD *)v12 = sub_1008FDAC4;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v24 = &v12[v10[6]];
  v25 = v29;
  *(_QWORD *)v24 = a2;
  *((_QWORD *)v24 + 1) = v25;
  v26 = &v12[v10[8]];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0;
  v12[v10[9]] = v30;
  *(_QWORD *)&v12[v10[10]] = v31;
  sub_100095B78((uint64_t)v12, (uint64_t)v15 + *(int *)(v13 + 36), type metadata accessor for InternalStateWeatherConditionBackgroundModifier);
  *v15 = v20;
  swift_unknownObjectRetain(a2);
  swift_retain();
  sub_1000215BC((uint64_t)v12, type metadata accessor for InternalStateWeatherConditionBackgroundModifier);
  if ((v32 & 1) != 0)
    v27 = 1.0;
  else
    v27 = 0.0;
  sub_100037794((uint64_t)v15, (uint64_t)v18, &qword_100BD92F0);
  *(double *)&v18[*(int *)(v16 + 36)] = v27;
  sub_100021A14((uint64_t)v15, &qword_100BD92F0);
  sub_1000787D4((uint64_t)v18, v33, &qword_100BD92F8);
}

void sub_10033FEA0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a1;
  v22 = a2;
  v3 = type metadata accessor for BlendMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RowElementStyle(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD9860);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD9868);
  __chkstk_darwin(v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(v2, (uint64_t)v9, type metadata accessor for RowElementStyle);
  v16 = sub_1000BA294(&qword_100BD93B0);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v16);
  if ((_DWORD)v17 == 1)
  {
    v19 = static HierarchicalShapeStyle.primary.getter(v17);
  }
  else
  {
    v19 = static HierarchicalShapeStyle.secondary.getter(v18);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  v20 = sub_1000BA294(&qword_100BD9870);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v12, v21, v20);
  *(_DWORD *)&v12[*(int *)(v10 + 36)] = v19;
  sub_1003400BC(v6);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v15[*(int *)(v13 + 36)], v6, v3);
  sub_100037794((uint64_t)v12, (uint64_t)v15, &qword_100BD9860);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100021A14((uint64_t)v12, &qword_100BD9860);
  sub_1000787D4((uint64_t)v15, v22, &qword_100BD9868);
}

uint64_t sub_1003400BC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for BlendMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RowElementStyle(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(v2, (uint64_t)v10, v11);
  v12 = sub_1000BA294(&qword_100BD93B0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12) != 1)
  {
    v13 = *(uint64_t (**)(char *, char *, uint64_t))(v5 + 32);
    v14 = v13(v7, v10, v4);
    if (DeviceSupportsVFX(v14))
      return v13(a1, v7, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(a1, enum case for BlendMode.normal(_:), v4);
}

uint64_t sub_100340200()
{
  return sub_100345334(type metadata accessor for ListLocationRowView, sub_100336384);
}

void sub_100340214(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003363B8(*(_QWORD *)(v1 + 16), a1);
}

void sub_100340224()
{
  sub_100030F60();
  sub_10004A298();
}

uint64_t sub_100340244()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  _QWORD *v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1000B25E8();
  sub_1000E7C10();
  v25 = v4;
  v5 = type metadata accessor for ScrollEventState(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v26 = v6;
  v27 = v5;
  v24 = *(_QWORD *)(v6 + 64);
  v28 = v1;
  v8 = v1 + v0;
  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v1 + v0) == 1)
  {
    v9 = sub_10003BC60();
    sub_1000B2568(v9);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_10009DAA8(v8 + v2[5]);
  swift_unknownObjectRelease(*(_QWORD *)(v8 + v2[6]));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v8 + v2[7]));
  v10 = v8 + v2[8];
  v11 = sub_1000BE878();
  sub_1000989A0(v11);
  v12 = (int *)sub_1000C53F8();
  sub_1000BA548(v10 + v12[6]);
  v13 = v10 + v12[7];
  sub_1000C1A5C();
  if (swift_getEnumCaseMultiPayload(v13) == 1)
  {
    v14 = sub_100098778();
    if (!sub_1000C0DE4(v14))
      sub_10009D51C();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1000C5400(v10 + v12[8]);
  v15 = sub_100098778();
  if (!sub_1000C0DE4(v15))
    sub_10009D51C();
  v16 = sub_100099928();
  if (!sub_1000C0DE4(v16))
    sub_10009D51C();
  v17 = v3 | v7 | 7;
  v18 = (v0 + v25 + v7) & ~v7;
  sub_1000BA548(v10 + v12[12]);
  sub_1000BA548(v10 + v12[13]);
  sub_1000BA548(v10 + v12[15]);
  sub_1000BA548(v10 + v12[16]);
  sub_1000BA548(v10 + v12[17]);
  sub_1000BA548(v10 + v12[18]);
  sub_1000BA548(v10 + v12[19]);
  sub_1000BA548(v10 + v12[20]);
  v19 = v10 + v12[22];
  sub_1000BE880();
  sub_1000C092C();
  v20(v19);
  sub_1000BA548(v10 + v12[25]);
  sub_10009DAA8(v8 + v2[9]);
  sub_10009DAA8(v8 + v2[11]);
  v21 = (_QWORD *)(v8 + v2[12]);
  swift_release(*v21);
  v22 = swift_release(v21[1]);
  (*(void (**)(uint64_t, uint64_t, __n128))(v26 + 8))(v28 + v18, v27, v22);
  return swift_deallocObject(v28, v18 + v24, v17);
}

uint64_t sub_100340498()
{
  return sub_100344FF4(type metadata accessor for ListLocationRowView, (uint64_t (*)(_QWORD))&type metadata accessor for ScrollEventState, (uint64_t (*)(unint64_t, unint64_t))sub_10033682C);
}

uint64_t sub_1003404B8(uint64_t a1, uint64_t a2)
{
  return sub_10034499C(a1, a2, (void (*)(_QWORD))type metadata accessor for ListLocationRowView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003368A0);
}

void sub_1003404CC()
{
  _BYTE *v0;

  *v0 = sub_100094FB8() & 1;
  sub_10004A298();
}

void sub_1003404EC(char *a1)
{
  sub_1000F3E2C(a1);
  sub_10004A298();
}

uint64_t type metadata accessor for LocationRowContentView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD9180, (uint64_t)&nominal type descriptor for LocationRowContentView);
}

uint64_t sub_100340518(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v122)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t *v128;
  uint64_t v129;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    v32 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2 + 2;
    v10 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v10 - 8);
    swift_unknownObjectRetain(v5);
    v12(a1 + 16, v9, v11);
    v127 = a3;
    v128 = a2;
    v13 = a3[6];
    v129 = a1;
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = type metadata accessor for LocationModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = (int *)type metadata accessor for ListLocationViewModel(0);
    v18 = v17[5];
    v19 = v14 + v18;
    v20 = v15 + v18;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
    v21 = v17[6];
    v22 = (_QWORD *)(v14 + v21);
    v23 = (_QWORD *)(v15 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v17[7];
    v26 = (_QWORD *)(v14 + v25);
    v27 = (_QWORD *)(v15 + v25);
    v28 = type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain(v24);
    if (swift_getEnumCaseMultiPayload(v27) == 1)
    {
      v29 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29))
      {
        v30 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
        v31 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v29);
      }
    }
    else
    {
      v33 = v27[1];
      *v26 = *v27;
      v26[1] = v33;
      swift_bridgeObjectRetain(v33);
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v28, v31);
    v34 = v17[8];
    v35 = v14 + v34;
    v36 = v15 + v34;
    v37 = *(_QWORD *)v36;
    v38 = *(_QWORD *)(v36 + 8);
    v39 = *(_QWORD *)(v36 + 16);
    v40 = *(_QWORD *)(v36 + 24);
    v41 = *(_BYTE *)(v36 + 32);
    sub_100176D88(*(_QWORD *)v36, v38, v39, v40, v41);
    *(_QWORD *)v35 = v37;
    *(_QWORD *)(v35 + 8) = v38;
    *(_QWORD *)(v35 + 16) = v39;
    *(_QWORD *)(v35 + 24) = v40;
    *(_BYTE *)(v35 + 32) = v41;
    *(_BYTE *)(v14 + v17[9]) = *(_BYTE *)(v15 + v17[9]);
    v42 = v17[10];
    v43 = (void *)(v14 + v42);
    v44 = (const void *)(v15 + v42);
    v45 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      v46 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    v47 = v17[11];
    v48 = (void *)(v14 + v47);
    v49 = (const void *)(v15 + v47);
    v50 = type metadata accessor for TimeZone(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
    {
      v51 = sub_1000BA294(&qword_100BCCC50);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
    }
    v52 = v17[12];
    v53 = (_QWORD *)(v14 + v52);
    v54 = (_QWORD *)(v15 + v52);
    v126 = v54[1];
    *v53 = *v54;
    v53[1] = v126;
    v55 = v17[13];
    v56 = (_QWORD *)(v14 + v55);
    v57 = (_QWORD *)(v15 + v55);
    v125 = v57[1];
    *v56 = *v57;
    v56[1] = v125;
    *(_BYTE *)(v14 + v17[14]) = *(_BYTE *)(v15 + v17[14]);
    v58 = v17[15];
    v59 = (_QWORD *)(v14 + v58);
    v60 = (_QWORD *)(v15 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    v62 = v17[16];
    v63 = (_QWORD *)(v14 + v62);
    v64 = (_QWORD *)(v15 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    v66 = v17[17];
    v67 = (_QWORD *)(v14 + v66);
    v68 = (_QWORD *)(v15 + v66);
    v69 = v68[1];
    *v67 = *v68;
    v67[1] = v69;
    v70 = v17[18];
    v71 = (_QWORD *)(v14 + v70);
    v72 = (_QWORD *)(v15 + v70);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    v74 = v17[19];
    v75 = (_QWORD *)(v14 + v74);
    v76 = (_QWORD *)(v15 + v74);
    v77 = v76[1];
    *v75 = *v76;
    v75[1] = v77;
    v78 = v17[20];
    v79 = (_QWORD *)(v14 + v78);
    v80 = (_QWORD *)(v15 + v78);
    v81 = v80[1];
    *v79 = *v80;
    v79[1] = v81;
    *(_BYTE *)(v14 + v17[21]) = *(_BYTE *)(v15 + v17[21]);
    v82 = v17[22];
    v123 = v15 + v82;
    v124 = v14 + v82;
    v83 = type metadata accessor for WeatherConditionBackgroundModel(0);
    v122 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
    swift_bridgeObjectRetain(v126);
    swift_bridgeObjectRetain(v125);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v73);
    swift_bridgeObjectRetain(v77);
    v84 = swift_bridgeObjectRetain(v81);
    v122(v124, v123, v83, v84);
    *(_BYTE *)(v14 + v17[23]) = *(_BYTE *)(v15 + v17[23]);
    *(_BYTE *)(v14 + v17[24]) = *(_BYTE *)(v15 + v17[24]);
    v85 = v17[25];
    v86 = (_QWORD *)(v14 + v85);
    v87 = (_QWORD *)(v15 + v85);
    v88 = v87[1];
    *v86 = *v87;
    v86[1] = v88;
    *(_QWORD *)(v14 + v17[26]) = *(_QWORD *)(v15 + v17[26]);
    v89 = v127[8];
    v32 = v129;
    *(_QWORD *)(v129 + v127[7]) = *(uint64_t *)((char *)v128 + v127[7]);
    *(_BYTE *)(v129 + v89) = *((_BYTE *)v128 + v89);
    v90 = v127[10];
    *(_BYTE *)(v129 + v127[9]) = *((_BYTE *)v128 + v127[9]);
    v91 = v129 + v90;
    v92 = (uint64_t)v128 + v90;
    *(_BYTE *)v91 = *(_BYTE *)v92;
    *(_QWORD *)(v91 + 8) = *(_QWORD *)(v92 + 8);
    v93 = v127[11];
    v94 = v127[12];
    v95 = v129 + v93;
    v96 = (uint64_t)v128 + v93;
    *(_BYTE *)v95 = *(_BYTE *)v96;
    *(_QWORD *)(v95 + 8) = *(_QWORD *)(v96 + 8);
    v97 = v129 + v94;
    v98 = (uint64_t)v128 + v94;
    *(_BYTE *)v97 = *(_BYTE *)v98;
    *(_QWORD *)(v97 + 8) = *(_QWORD *)(v98 + 8);
    v99 = v127[13];
    v100 = (_QWORD *)(v129 + v99);
    v101 = (uint64_t *)((char *)v128 + v99);
    swift_bridgeObjectRetain(v88);
    swift_retain();
    swift_retain();
    swift_retain();
    v102 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v101) == 1)
    {
      v103 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v103))
      {
        v104 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        v105 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v100, v101, v103);
        v105 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v103);
      }
    }
    else
    {
      *v100 = *v101;
      swift_retain();
      v105 = 0;
    }
    swift_storeEnumTagMultiPayload(v100, v102, v105);
    v106 = v127[14];
    v107 = v129 + v106;
    v108 = (uint64_t)v128 + v106;
    v109 = *(_QWORD *)v108;
    v110 = *(_BYTE *)(v108 + 8);
    sub_10008D47C(*(_QWORD *)v108, v110);
    *(_QWORD *)v107 = v109;
    *(_BYTE *)(v107 + 8) = v110;
    v111 = v127[15];
    v112 = (_QWORD *)(v129 + v111);
    v113 = (uint64_t *)((char *)v128 + v111);
    if (swift_getEnumCaseMultiPayload((char *)v128 + v111) == 1)
    {
      v114 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v114))
      {
        v115 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        v116 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
        v116 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v114);
      }
    }
    else
    {
      *v112 = *v113;
      swift_retain();
      v116 = 0;
    }
    swift_storeEnumTagMultiPayload(v112, v102, v116);
    v117 = v127[16];
    v118 = v129 + v117;
    v119 = (uint64_t)v128 + v117;
    v120 = *(_QWORD *)(v119 + 8);
    *(_QWORD *)v118 = *(_QWORD *)v119;
    *(_QWORD *)(v118 + 8) = v120;
    *(_BYTE *)(v118 + 16) = *(_BYTE *)(v119 + 16);
    swift_retain();
  }
  swift_retain();
  return v32;
}

double sub_100340C24(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  double result;

  v4 = a1 + 2;
  swift_unknownObjectRelease(*a1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v4);
  v5 = (char *)a1 + a2[6];
  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)&v5[v7[7]];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v9 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v10 = &v5[v7[8]];
  sub_100176DD4(*(_QWORD *)v10, *((_QWORD *)v10 + 1), *((_QWORD *)v10 + 2), *((_QWORD *)v10 + 3), v10[32]);
  v11 = (uint64_t)&v5[v7[10]];
  v12 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = (uint64_t)&v5[v7[11]];
  v14 = type metadata accessor for TimeZone(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = &v5[v7[22]];
  v16 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)((char *)a1 + a2[10] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[11] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[12] + 8));
  v17 = (_QWORD *)((char *)a1 + a2[13]);
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v17) == 1)
  {
    v18 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release(*v17);
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[14]), *((_BYTE *)a1 + a2[14] + 8));
  v19 = (_QWORD *)((char *)a1 + a2[15]);
  if (swift_getEnumCaseMultiPayload(v19) == 1)
  {
    v20 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  else
  {
    swift_release(*v19);
  }
  v21 = (_QWORD *)((char *)a1 + a2[16]);
  swift_release(*v21);
  *(_QWORD *)&result = swift_release(v21[1]).n128_u64[0];
  return result;
}

_OWORD *sub_100340F70(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v120)(char *, char *, uint64_t, __n128);
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  _OWORD *v126;
  _OWORD *v127;

  v6 = *a2;
  *a1 = *a2;
  v7 = a1 + 1;
  v8 = a2 + 1;
  v9 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v9;
  v10 = v9;
  v11 = **(void (***)(_OWORD *, _OWORD *, uint64_t))(v9 - 8);
  swift_unknownObjectRetain(v6);
  v11(v7, v8, v10);
  v125 = a3;
  v126 = a2;
  v12 = a3[6];
  v127 = a1;
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = (int *)type metadata accessor for ListLocationViewModel(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = v16[6];
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v24 = v16[7];
  v25 = &v13[v24];
  v26 = &v14[v24];
  v27 = type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain(v23);
  if (swift_getEnumCaseMultiPayload(v26) == 1)
  {
    v28 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28))
    {
      v29 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
      v30 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
    }
  }
  else
  {
    v31 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v31;
    swift_bridgeObjectRetain(v31);
    v30 = 0;
  }
  swift_storeEnumTagMultiPayload(v25, v27, v30);
  v32 = v16[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  v35 = *(_QWORD *)v34;
  v36 = *((_QWORD *)v34 + 1);
  v37 = *((_QWORD *)v34 + 2);
  v38 = *((_QWORD *)v34 + 3);
  v39 = v34[32];
  sub_100176D88(*(_QWORD *)v34, v36, v37, v38, v39);
  *(_QWORD *)v33 = v35;
  *((_QWORD *)v33 + 1) = v36;
  *((_QWORD *)v33 + 2) = v37;
  *((_QWORD *)v33 + 3) = v38;
  v33[32] = v39;
  v13[v16[9]] = v14[v16[9]];
  v40 = v16[10];
  v41 = &v13[v40];
  v42 = &v14[v40];
  v43 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    v44 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  v45 = v16[11];
  v46 = &v13[v45];
  v47 = &v14[v45];
  v48 = type metadata accessor for TimeZone(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
  {
    v49 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
  }
  v50 = v16[12];
  v51 = &v13[v50];
  v52 = &v14[v50];
  v124 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = v124;
  v53 = v16[13];
  v54 = &v13[v53];
  v55 = &v14[v53];
  v123 = *((_QWORD *)v55 + 1);
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = v123;
  v13[v16[14]] = v14[v16[14]];
  v56 = v16[15];
  v57 = &v13[v56];
  v58 = &v14[v56];
  v59 = *((_QWORD *)v58 + 1);
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = v59;
  v60 = v16[16];
  v61 = &v13[v60];
  v62 = &v14[v60];
  v63 = *((_QWORD *)v62 + 1);
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *((_QWORD *)v61 + 1) = v63;
  v64 = v16[17];
  v65 = &v13[v64];
  v66 = &v14[v64];
  v67 = *((_QWORD *)v66 + 1);
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *((_QWORD *)v65 + 1) = v67;
  v68 = v16[18];
  v69 = &v13[v68];
  v70 = &v14[v68];
  v71 = *((_QWORD *)v70 + 1);
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *((_QWORD *)v69 + 1) = v71;
  v72 = v16[19];
  v73 = &v13[v72];
  v74 = &v14[v72];
  v75 = *((_QWORD *)v74 + 1);
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *((_QWORD *)v73 + 1) = v75;
  v76 = v16[20];
  v77 = &v13[v76];
  v78 = &v14[v76];
  v79 = *((_QWORD *)v78 + 1);
  *(_QWORD *)v77 = *(_QWORD *)v78;
  *((_QWORD *)v77 + 1) = v79;
  v13[v16[21]] = v14[v16[21]];
  v80 = v16[22];
  v121 = &v14[v80];
  v122 = &v13[v80];
  v81 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v120 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
  swift_bridgeObjectRetain(v124);
  swift_bridgeObjectRetain(v123);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRetain(v75);
  v82 = swift_bridgeObjectRetain(v79);
  v120(v122, v121, v81, v82);
  v13[v16[23]] = v14[v16[23]];
  v13[v16[24]] = v14[v16[24]];
  v83 = v16[25];
  v84 = &v13[v83];
  v85 = &v14[v83];
  v86 = *((_QWORD *)v85 + 1);
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *((_QWORD *)v84 + 1) = v86;
  *(_QWORD *)&v13[v16[26]] = *(_QWORD *)&v14[v16[26]];
  v87 = v125[8];
  *(_QWORD *)((char *)v127 + v125[7]) = *(_QWORD *)((char *)v126 + v125[7]);
  *((_BYTE *)v127 + v87) = *((_BYTE *)v126 + v87);
  v88 = v125[10];
  *((_BYTE *)v127 + v125[9]) = *((_BYTE *)v126 + v125[9]);
  v89 = (char *)v127 + v88;
  v90 = (char *)v126 + v88;
  *v89 = *v90;
  *((_QWORD *)v89 + 1) = *((_QWORD *)v90 + 1);
  v91 = v125[11];
  v92 = v125[12];
  v93 = (char *)v127 + v91;
  v94 = (char *)v126 + v91;
  *v93 = *v94;
  *((_QWORD *)v93 + 1) = *((_QWORD *)v94 + 1);
  v95 = (char *)v127 + v92;
  v96 = (char *)v126 + v92;
  *v95 = *v96;
  *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
  v97 = v125[13];
  v98 = (_QWORD *)((char *)v127 + v97);
  v99 = (_QWORD *)((char *)v126 + v97);
  swift_bridgeObjectRetain(v86);
  swift_retain();
  swift_retain();
  swift_retain();
  v100 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v99) == 1)
  {
    v101 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v101))
    {
      v102 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      v103 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v98, v99, v101);
      v103 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v101);
    }
  }
  else
  {
    *v98 = *v99;
    swift_retain();
    v103 = 0;
  }
  swift_storeEnumTagMultiPayload(v98, v100, v103);
  v104 = v125[14];
  v105 = (char *)v127 + v104;
  v106 = (char *)v126 + v104;
  v107 = *(_QWORD *)v106;
  v108 = v106[8];
  sub_10008D47C(*(_QWORD *)v106, v108);
  *(_QWORD *)v105 = v107;
  v105[8] = v108;
  v109 = v125[15];
  v110 = (_QWORD *)((char *)v127 + v109);
  v111 = (_QWORD *)((char *)v126 + v109);
  if (swift_getEnumCaseMultiPayload((char *)v126 + v109) == 1)
  {
    v112 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
    {
      v113 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      v114 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
      v114 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v112);
    }
  }
  else
  {
    *v110 = *v111;
    swift_retain();
    v114 = 0;
  }
  swift_storeEnumTagMultiPayload(v110, v100, v114);
  v115 = v125[16];
  v116 = (char *)v127 + v115;
  v117 = (char *)v126 + v115;
  v118 = *((_QWORD *)v117 + 1);
  *(_QWORD *)v116 = *(_QWORD *)v117;
  *((_QWORD *)v116 + 1) = v118;
  v116[16] = v117[16];
  swift_retain();
  swift_retain();
  return v127;
}

_QWORD *sub_100341654(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  int *v138;
  _QWORD *v139;

  v6 = *a2;
  v7 = a2[1];
  v8 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[1] = v7;
  sub_100094D04(a1 + 2, a2 + 2);
  v138 = a3;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = (int *)type metadata accessor for ListLocationViewModel(0);
  v14 = v13[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  v17 = v16[8];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v17;
  v18 = v13[6];
  v19 = &v10[v18];
  v20 = &v11[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  v139 = a2;
  if (a1 != a2)
  {
    v22 = v13[7];
    v23 = &v10[v22];
    v24 = &v11[v22];
    sub_1000215BC((uint64_t)&v10[v22], type metadata accessor for ListLocationRowPrimaryText);
    v25 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v24) == 1)
    {
      v26 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26))
      {
        v27 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        v28 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
        v28 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v26);
      }
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v29 = *((_QWORD *)v24 + 1);
      *((_QWORD *)v23 + 1) = v29;
      swift_bridgeObjectRetain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v28);
  }
  v30 = v13[8];
  v31 = &v10[v30];
  v32 = &v11[v30];
  v33 = *(_QWORD *)v32;
  v34 = *((_QWORD *)v32 + 1);
  v35 = *((_QWORD *)v32 + 2);
  v36 = *((_QWORD *)v32 + 3);
  v37 = v32[32];
  sub_100176D88(*(_QWORD *)v32, v34, v35, v36, v37);
  v38 = *(_QWORD *)v31;
  v39 = *((_QWORD *)v31 + 1);
  v40 = *((_QWORD *)v31 + 2);
  v41 = *((_QWORD *)v31 + 3);
  *(_QWORD *)v31 = v33;
  *((_QWORD *)v31 + 1) = v34;
  *((_QWORD *)v31 + 2) = v35;
  *((_QWORD *)v31 + 3) = v36;
  v42 = v31[32];
  v31[32] = v37;
  sub_100176DD4(v38, v39, v40, v41, v42);
  v10[v13[9]] = v11[v13[9]];
  v43 = v13[10];
  v44 = &v10[v43];
  v45 = &v11[v43];
  v46 = type metadata accessor for Date(0);
  v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46);
  v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v49 = *(_QWORD *)(v46 - 8);
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v46);
LABEL_13:
    v50 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 24))(v44, v45, v46);
LABEL_14:
  v51 = v13[11];
  v52 = &v10[v51];
  v53 = &v11[v51];
  v54 = type metadata accessor for TimeZone(0);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v54);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  v57 = *(_QWORD *)(v54 - 8);
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v54);
LABEL_19:
    v58 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v52, v53, v54);
LABEL_20:
  v59 = v13[12];
  v60 = &v10[v59];
  v61 = &v11[v59];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v62 = *((_QWORD *)v61 + 1);
  *((_QWORD *)v60 + 1) = v62;
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRelease();
  v63 = v13[13];
  v64 = &v10[v63];
  v65 = &v11[v63];
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v66 = *((_QWORD *)v65 + 1);
  *((_QWORD *)v64 + 1) = v66;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease();
  v10[v13[14]] = v11[v13[14]];
  v67 = v13[15];
  v68 = &v10[v67];
  v69 = &v11[v67];
  *(_QWORD *)v68 = *(_QWORD *)v69;
  v70 = *((_QWORD *)v69 + 1);
  *((_QWORD *)v68 + 1) = v70;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRelease();
  v71 = v13[16];
  v72 = &v10[v71];
  v73 = &v11[v71];
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v74 = *((_QWORD *)v73 + 1);
  *((_QWORD *)v72 + 1) = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease();
  v75 = v13[17];
  v76 = &v10[v75];
  v77 = &v11[v75];
  *(_QWORD *)v76 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *((_QWORD *)v76 + 1) = v78;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRelease();
  v79 = v13[18];
  v80 = &v10[v79];
  v81 = &v11[v79];
  *(_QWORD *)v80 = *(_QWORD *)v81;
  v82 = *((_QWORD *)v81 + 1);
  *((_QWORD *)v80 + 1) = v82;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRelease();
  v83 = v13[19];
  v84 = &v10[v83];
  v85 = &v11[v83];
  *(_QWORD *)v84 = *(_QWORD *)v85;
  v86 = *((_QWORD *)v85 + 1);
  *((_QWORD *)v84 + 1) = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease();
  v87 = v13[20];
  v88 = &v10[v87];
  v89 = &v11[v87];
  *(_QWORD *)v88 = *(_QWORD *)v89;
  v90 = *((_QWORD *)v89 + 1);
  *((_QWORD *)v88 + 1) = v90;
  swift_bridgeObjectRetain(v90);
  swift_bridgeObjectRelease();
  v10[v13[21]] = v11[v13[21]];
  v91 = v13[22];
  v92 = &v10[v91];
  v93 = &v11[v91];
  v94 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
  v10[v13[23]] = v11[v13[23]];
  v10[v13[24]] = v11[v13[24]];
  v95 = v13[25];
  v96 = &v10[v95];
  v97 = &v11[v95];
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v98 = *((_QWORD *)v97 + 1);
  *((_QWORD *)v96 + 1) = v98;
  swift_bridgeObjectRetain(v98);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[v13[26]] = *(_QWORD *)&v11[v13[26]];
  *(_QWORD *)((char *)a1 + v138[7]) = *(_QWORD *)((char *)v139 + v138[7]);
  *((_BYTE *)a1 + v138[8]) = *((_BYTE *)v139 + v138[8]);
  *((_BYTE *)a1 + v138[9]) = *((_BYTE *)v139 + v138[9]);
  v99 = v138[10];
  v100 = (char *)a1 + v99;
  v101 = (char *)v139 + v99;
  *v100 = *v101;
  v102 = *((_QWORD *)v100 + 1);
  *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
  swift_retain();
  swift_release(v102);
  v103 = v138[11];
  v104 = (char *)a1 + v103;
  v105 = (char *)v139 + v103;
  *v104 = *v105;
  v106 = *((_QWORD *)v104 + 1);
  *((_QWORD *)v104 + 1) = *((_QWORD *)v105 + 1);
  swift_retain();
  swift_release(v106);
  v107 = v138[12];
  v108 = (char *)a1 + v107;
  v109 = (char *)v139 + v107;
  *v108 = *v109;
  v110 = *((_QWORD *)v108 + 1);
  *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
  swift_retain();
  swift_release(v110);
  if (a1 != v139)
  {
    v111 = v138[13];
    v112 = (_QWORD *)((char *)a1 + v111);
    v113 = (_QWORD *)((char *)v139 + v111);
    sub_100021A14((uint64_t)a1 + v111, (uint64_t *)&unk_100C09CD0);
    v114 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v113) == 1)
    {
      v115 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v115))
      {
        v116 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        v117 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v112, v113, v115);
        v117 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v115);
      }
    }
    else
    {
      *v112 = *v113;
      swift_retain();
      v117 = 0;
    }
    swift_storeEnumTagMultiPayload(v112, v114, v117);
  }
  v118 = v138[14];
  v119 = (char *)a1 + v118;
  v120 = (char *)v139 + v118;
  v121 = *(_QWORD *)v120;
  v122 = v120[8];
  sub_10008D47C(*(_QWORD *)v120, v122);
  v123 = *(_QWORD *)v119;
  v124 = v119[8];
  *(_QWORD *)v119 = v121;
  v119[8] = v122;
  sub_1000B15F8(v123, v124);
  if (a1 != v139)
  {
    v125 = v138[15];
    v126 = (_QWORD *)((char *)a1 + v125);
    v127 = (_QWORD *)((char *)v139 + v125);
    sub_100021A14((uint64_t)a1 + v125, (uint64_t *)&unk_100C09CD0);
    v128 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v127) == 1)
    {
      v129 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v129))
      {
        v130 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        v131 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v126, v127, v129);
        v131 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v129);
      }
    }
    else
    {
      *v126 = *v127;
      swift_retain();
      v131 = 0;
    }
    swift_storeEnumTagMultiPayload(v126, v128, v131);
  }
  v132 = v138[16];
  v133 = (char *)a1 + v132;
  v134 = (char *)v139 + v132;
  v135 = *(_QWORD *)((char *)a1 + v132);
  *(_QWORD *)((char *)a1 + v132) = *(_QWORD *)((char *)v139 + v132);
  swift_retain();
  swift_release(v135);
  v136 = *((_QWORD *)v133 + 1);
  *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
  swift_retain();
  swift_release(v136);
  v133[16] = v134[16];
  return a1;
}

uint64_t sub_100341EFC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = (int *)type metadata accessor for ListLocationViewModel(0);
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_OWORD *)(v8 + v11[6]) = *(_OWORD *)(v9 + v11[6]);
  v15 = v11[7];
  v16 = (void *)(v8 + v15);
  v17 = (const void *)(v9 + v15);
  v18 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v17) == 1)
  {
    v19 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19))
    {
      v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v21 = v11[8];
  v22 = v8 + v21;
  v23 = v9 + v21;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_BYTE *)(v22 + 32) = *(_BYTE *)(v23 + 32);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  v25 = v11[10];
  v26 = (void *)(v8 + v25);
  v27 = (const void *)(v9 + v25);
  v28 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v30 = v11[11];
  v31 = (void *)(v8 + v30);
  v32 = (const void *)(v9 + v30);
  v33 = type metadata accessor for TimeZone(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
  {
    v34 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
  }
  *(_OWORD *)(v8 + v11[12]) = *(_OWORD *)(v9 + v11[12]);
  *(_OWORD *)(v8 + v11[13]) = *(_OWORD *)(v9 + v11[13]);
  *(_BYTE *)(v8 + v11[14]) = *(_BYTE *)(v9 + v11[14]);
  *(_OWORD *)(v8 + v11[15]) = *(_OWORD *)(v9 + v11[15]);
  *(_OWORD *)(v8 + v11[16]) = *(_OWORD *)(v9 + v11[16]);
  *(_OWORD *)(v8 + v11[17]) = *(_OWORD *)(v9 + v11[17]);
  *(_OWORD *)(v8 + v11[18]) = *(_OWORD *)(v9 + v11[18]);
  *(_OWORD *)(v8 + v11[19]) = *(_OWORD *)(v9 + v11[19]);
  *(_OWORD *)(v8 + v11[20]) = *(_OWORD *)(v9 + v11[20]);
  *(_BYTE *)(v8 + v11[21]) = *(_BYTE *)(v9 + v11[21]);
  v35 = v11[22];
  v36 = v8 + v35;
  v37 = v9 + v35;
  v38 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  *(_BYTE *)(v8 + v11[23]) = *(_BYTE *)(v9 + v11[23]);
  *(_BYTE *)(v8 + v11[24]) = *(_BYTE *)(v9 + v11[24]);
  *(_OWORD *)(v8 + v11[25]) = *(_OWORD *)(v9 + v11[25]);
  *(_QWORD *)(v8 + v11[26]) = *(_QWORD *)(v9 + v11[26]);
  v39 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  v40 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v40) = *(_OWORD *)(a2 + v40);
  v41 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v41) = *(_OWORD *)(a2 + v41);
  v42 = a3[13];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  v45 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v44) == 1)
  {
    v46 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46))
    {
      v47 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v43, v44, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v46);
    }
    swift_storeEnumTagMultiPayload(v43, v45, 1);
  }
  else
  {
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  v48 = a3[14];
  v49 = a3[15];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
  v52 = (void *)(a1 + v49);
  v53 = (const void *)(a2 + v49);
  if (swift_getEnumCaseMultiPayload(a2 + v49) == 1)
  {
    v54 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
    {
      v55 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
    }
    swift_storeEnumTagMultiPayload(v52, v45, 1);
  }
  else
  {
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  v56 = a3[16];
  v57 = a1 + v56;
  v58 = a2 + v56;
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_BYTE *)(v57 + 16) = *(_BYTE *)(v58 + 16);
  return a1;
}

uint64_t *sub_100342464(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v6 = a2[1];
  v7 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v7);
  a1[1] = v6;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 2);
  v8 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v8;
  a1[6] = a2[6];
  v9 = a3[6];
  v10 = (uint64_t)a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = (int *)type metadata accessor for ListLocationViewModel(0);
  v14 = v13[5];
  v15 = v10 + v14;
  v16 = v11 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = v13[6];
  v18 = (_QWORD *)(v10 + v17);
  v19 = (uint64_t *)(v11 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v22 = v13[7];
    v23 = (void *)(v10 + v22);
    v24 = (const void *)(v11 + v22);
    sub_1000215BC(v10 + v22, type metadata accessor for ListLocationRowPrimaryText);
    v25 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v24) == 1)
    {
      v26 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26))
      {
        v27 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v26);
      }
      swift_storeEnumTagMultiPayload(v23, v25, 1);
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  v28 = v13[8];
  v29 = v10 + v28;
  v30 = v11 + v28;
  v31 = *(_BYTE *)(v30 + 32);
  v32 = *(_QWORD *)v29;
  v33 = *(_QWORD *)(v29 + 8);
  v34 = *(_QWORD *)(v29 + 16);
  v35 = *(_QWORD *)(v29 + 24);
  v36 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v36;
  v37 = *(_BYTE *)(v29 + 32);
  *(_BYTE *)(v29 + 32) = v31;
  sub_100176DD4(v32, v33, v34, v35, v37);
  *(_BYTE *)(v10 + v13[9]) = *(_BYTE *)(v11 + v13[9]);
  v38 = v13[10];
  v39 = (void *)(v10 + v38);
  v40 = (const void *)(v11 + v38);
  v41 = type metadata accessor for Date(0);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v41);
  v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v44 = *(_QWORD *)(v41 - 8);
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v39, v41);
LABEL_13:
    v45 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v44 + 40))(v39, v40, v41);
LABEL_14:
  v46 = v13[11];
  v47 = (void *)(v10 + v46);
  v48 = (const void *)(v11 + v46);
  v49 = type metadata accessor for TimeZone(0);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  v52 = *(_QWORD *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v47, v49);
LABEL_19:
    v53 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(v52 + 40))(v47, v48, v49);
LABEL_20:
  v54 = v13[12];
  v55 = (_QWORD *)(v10 + v54);
  v56 = (uint64_t *)(v11 + v54);
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  v59 = v13[13];
  v60 = (_QWORD *)(v10 + v59);
  v61 = (uint64_t *)(v11 + v59);
  v63 = *v61;
  v62 = v61[1];
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v13[14]) = *(_BYTE *)(v11 + v13[14]);
  v64 = v13[15];
  v65 = (_QWORD *)(v10 + v64);
  v66 = (uint64_t *)(v11 + v64);
  v68 = *v66;
  v67 = v66[1];
  *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  v69 = v13[16];
  v70 = (_QWORD *)(v10 + v69);
  v71 = (uint64_t *)(v11 + v69);
  v73 = *v71;
  v72 = v71[1];
  *v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  v74 = v13[17];
  v75 = (_QWORD *)(v10 + v74);
  v76 = (uint64_t *)(v11 + v74);
  v78 = *v76;
  v77 = v76[1];
  *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease();
  v79 = v13[18];
  v80 = (_QWORD *)(v10 + v79);
  v81 = (uint64_t *)(v11 + v79);
  v83 = *v81;
  v82 = v81[1];
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  v84 = v13[19];
  v85 = (_QWORD *)(v10 + v84);
  v86 = (uint64_t *)(v11 + v84);
  v88 = *v86;
  v87 = v86[1];
  *v85 = v88;
  v85[1] = v87;
  swift_bridgeObjectRelease();
  v89 = v13[20];
  v90 = (_QWORD *)(v10 + v89);
  v91 = (uint64_t *)(v11 + v89);
  v93 = *v91;
  v92 = v91[1];
  *v90 = v93;
  v90[1] = v92;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v13[21]) = *(_BYTE *)(v11 + v13[21]);
  v94 = v13[22];
  v95 = v10 + v94;
  v96 = v11 + v94;
  v97 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 40))(v95, v96, v97);
  *(_BYTE *)(v10 + v13[23]) = *(_BYTE *)(v11 + v13[23]);
  *(_BYTE *)(v10 + v13[24]) = *(_BYTE *)(v11 + v13[24]);
  v98 = v13[25];
  v99 = (_QWORD *)(v10 + v98);
  v100 = (uint64_t *)(v11 + v98);
  v102 = *v100;
  v101 = v100[1];
  *v99 = v102;
  v99[1] = v101;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + v13[26]) = *(_QWORD *)(v11 + v13[26]);
  v103 = a3[8];
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v103) = *((_BYTE *)a2 + v103);
  v104 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v105 = (uint64_t)a1 + v104;
  v106 = (uint64_t)a2 + v104;
  *(_BYTE *)v105 = *(_BYTE *)v106;
  v107 = *(_QWORD *)(v105 + 8);
  *(_QWORD *)(v105 + 8) = *(_QWORD *)(v106 + 8);
  swift_release(v107);
  v108 = a3[11];
  v109 = (uint64_t)a1 + v108;
  v110 = (uint64_t)a2 + v108;
  *(_BYTE *)v109 = *(_BYTE *)v110;
  v111 = *(_QWORD *)(v109 + 8);
  *(_QWORD *)(v109 + 8) = *(_QWORD *)(v110 + 8);
  swift_release(v111);
  v112 = a3[12];
  v113 = (uint64_t)a1 + v112;
  v114 = (uint64_t)a2 + v112;
  *(_BYTE *)v113 = *(_BYTE *)v114;
  v115 = *(_QWORD *)(v113 + 8);
  *(_QWORD *)(v113 + 8) = *(_QWORD *)(v114 + 8);
  swift_release(v115);
  if (a1 != a2)
  {
    v116 = a3[13];
    v117 = (char *)a1 + v116;
    v118 = (char *)a2 + v116;
    sub_100021A14((uint64_t)a1 + v116, (uint64_t *)&unk_100C09CD0);
    v119 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v118) == 1)
    {
      v120 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v120))
      {
        v121 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v117, v118, v120);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v120);
      }
      swift_storeEnumTagMultiPayload(v117, v119, 1);
    }
    else
    {
      memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    }
  }
  v122 = a3[14];
  v123 = (uint64_t)a1 + v122;
  v124 = (uint64_t *)((char *)a2 + v122);
  v125 = *v124;
  LOBYTE(v124) = *((_BYTE *)v124 + 8);
  v126 = *(_QWORD *)v123;
  v127 = *(_BYTE *)(v123 + 8);
  *(_QWORD *)v123 = v125;
  *(_BYTE *)(v123 + 8) = (_BYTE)v124;
  sub_1000B15F8(v126, v127);
  if (a1 != a2)
  {
    v128 = a3[15];
    v129 = (char *)a1 + v128;
    v130 = (char *)a2 + v128;
    sub_100021A14((uint64_t)a1 + v128, (uint64_t *)&unk_100C09CD0);
    v131 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v130) == 1)
    {
      v132 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v132))
      {
        v133 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v129, v130, v132);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v132);
      }
      swift_storeEnumTagMultiPayload(v129, v131, 1);
    }
    else
    {
      memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
    }
  }
  v134 = a3[16];
  v135 = (uint64_t)a1 + v134;
  v136 = (uint64_t)a2 + v134;
  v137 = *(uint64_t *)((char *)a1 + v134);
  *(uint64_t *)((char *)a1 + v134) = *(_QWORD *)v136;
  swift_release(v137);
  v138 = *(_QWORD *)(v135 + 8);
  *(_QWORD *)(v135 + 8) = *(_QWORD *)(v136 + 8);
  swift_release(v138);
  *(_BYTE *)(v135 + 16) = *(_BYTE *)(v136 + 16);
  return a1;
}

uint64_t sub_100342BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100342BF8);
}

void sub_100342BF8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*a1);
    sub_100079F70();
  }
  else
  {
    sub_1000C53F8();
    sub_100088FF0();
    if (v7)
    {
      v8 = v6;
      v9 = *(int *)(a3 + 24);
    }
    else
    {
      v8 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
      v9 = *(int *)(a3 + 52);
    }
    sub_1000B250C((uint64_t)a1 + v9, a2, v8);
  }
}

uint64_t sub_100342C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100342C78);
}

void sub_100342C78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_10009E50C();
  if (v3 == 0x7FFFFFFF)
  {
    *v1 = (v0 - 1);
    sub_100079F70();
  }
  else
  {
    v4 = v2;
    sub_1000C53F8();
    sub_10009D2E8();
    if (v6)
    {
      v7 = v5;
      v8 = *(int *)(v4 + 24);
    }
    else
    {
      v7 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
      v8 = *(int *)(v4 + 52);
    }
    sub_1000987C4((uint64_t)v1 + v8, v0, v0, v7);
  }
}

void sub_100342CF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6[0] = &unk_100995F10;
  v6[1] = &unk_100995F28;
  v2 = type metadata accessor for ListLocationViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[4] = &unk_100996068;
    v6[5] = &unk_100996068;
    v6[6] = &unk_100995EF8;
    v6[7] = &unk_100995EF8;
    v6[8] = &unk_100995EF8;
    sub_100158AF0(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = &unk_100996080;
      v9 = v7;
      v10 = &unk_100995F40;
      swift_initStructMetadata(a1, 256, 13, v6, a1 + 16);
    }
  }
}

_QWORD *sub_100342DC4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  void (*v80)(char *, char *, uint64_t, __n128);
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;

  v4 = type metadata accessor for ListLocationViewModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for LocationModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    v11 = v6[6];
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v6[7];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain(v14);
    if (swift_getEnumCaseMultiPayload(v17) == 1)
    {
      v19 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19))
      {
        v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v21 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
        v21 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v19);
      }
    }
    else
    {
      v23 = v17[1];
      *v16 = *v17;
      v16[1] = v23;
      swift_bridgeObjectRetain(v23);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v21);
    v24 = v6[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(_QWORD *)v26;
    v28 = *((_QWORD *)v26 + 1);
    v29 = *((_QWORD *)v26 + 2);
    v30 = *((_QWORD *)v26 + 3);
    v31 = v26[32];
    sub_100176D88(*(_QWORD *)v26, v28, v29, v30, v31);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    *((_QWORD *)v25 + 2) = v29;
    *((_QWORD *)v25 + 3) = v30;
    v25[32] = v31;
    *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
    v32 = v6[10];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      v36 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
    v37 = v6[11];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = type metadata accessor for TimeZone(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
    {
      v41 = sub_1000BA294(&qword_100BCCC50);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
    }
    v42 = v6[12];
    v43 = (_QWORD *)((char *)a1 + v42);
    v44 = (_QWORD *)((char *)a2 + v42);
    v84 = v44[1];
    *v43 = *v44;
    v43[1] = v84;
    v45 = v6[13];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v83 = v47[1];
    *v46 = *v47;
    v46[1] = v83;
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    v48 = v6[15];
    v49 = (_QWORD *)((char *)a1 + v48);
    v50 = (_QWORD *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v6[16];
    v53 = (_QWORD *)((char *)a1 + v52);
    v54 = (_QWORD *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = v6[17];
    v57 = (_QWORD *)((char *)a1 + v56);
    v58 = (_QWORD *)((char *)a2 + v56);
    v59 = v58[1];
    *v57 = *v58;
    v57[1] = v59;
    v60 = v6[18];
    v61 = (_QWORD *)((char *)a1 + v60);
    v62 = (_QWORD *)((char *)a2 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = v6[19];
    v65 = (_QWORD *)((char *)a1 + v64);
    v66 = (_QWORD *)((char *)a2 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    v68 = v6[20];
    v69 = (_QWORD *)((char *)a1 + v68);
    v70 = (_QWORD *)((char *)a2 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
    v72 = v6[22];
    v81 = (char *)a2 + v72;
    v82 = (char *)a1 + v72;
    v73 = type metadata accessor for WeatherConditionBackgroundModel(0);
    v80 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v73 - 8) + 16);
    swift_bridgeObjectRetain(v84);
    swift_bridgeObjectRetain(v83);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v59);
    swift_bridgeObjectRetain(v63);
    swift_bridgeObjectRetain(v67);
    v74 = swift_bridgeObjectRetain(v71);
    v80(v82, v81, v73, v74);
    *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
    *((_BYTE *)a1 + v6[24]) = *((_BYTE *)a2 + v6[24]);
    v75 = v6[25];
    v76 = (_QWORD *)((char *)a1 + v75);
    v77 = (_QWORD *)((char *)a2 + v75);
    v78 = v77[1];
    *v76 = *v77;
    v76[1] = v78;
    *(_QWORD *)((char *)a1 + v6[26]) = *(_QWORD *)((char *)a2 + v6[26]);
    swift_bridgeObjectRetain(v78);
  }
  return a1;
}

double sub_10034321C(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v2 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for ListLocationViewModel(0);
  swift_bridgeObjectRelease();
  v4 = a1 + v3[7];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v6 = a1 + v3[8];
  sub_100176DD4(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_BYTE *)(v6 + 32));
  v7 = a1 + v3[10];
  v8 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v3[11];
  v10 = type metadata accessor for TimeZone(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1 + v3[22];
  v12 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10034341C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  void (*v77)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  v9 = v5[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = v5[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain(v12);
  if (swift_getEnumCaseMultiPayload(v15) == 1)
  {
    v17 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17))
    {
      v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      v19 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v19 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v17);
    }
  }
  else
  {
    v20 = v15[1];
    *v14 = *v15;
    v14[1] = v20;
    swift_bridgeObjectRetain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v19);
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(_QWORD *)(v23 + 24);
  v28 = *(_BYTE *)(v23 + 32);
  sub_100176D88(*(_QWORD *)v23, v25, v26, v27, v28);
  *(_QWORD *)v22 = v24;
  *(_QWORD *)(v22 + 8) = v25;
  *(_QWORD *)(v22 + 16) = v26;
  *(_QWORD *)(v22 + 24) = v27;
  *(_BYTE *)(v22 + 32) = v28;
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  v29 = v5[10];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    v33 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  v34 = v5[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = type metadata accessor for TimeZone(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    v38 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  v39 = v5[12];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  v81 = v41[1];
  *v40 = *v41;
  v40[1] = v81;
  v42 = v5[13];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v80 = v44[1];
  *v43 = *v44;
  v43[1] = v80;
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  v45 = v5[15];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  v49 = v5[16];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v53 = v5[17];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = v5[18];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  v61 = v5[19];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (_QWORD *)(a2 + v61);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  v65 = v5[20];
  v66 = (_QWORD *)(a1 + v65);
  v67 = (_QWORD *)(a2 + v65);
  v68 = v67[1];
  *v66 = *v67;
  v66[1] = v68;
  *(_BYTE *)(a1 + v5[21]) = *(_BYTE *)(a2 + v5[21]);
  v69 = v5[22];
  v78 = a2 + v69;
  v79 = a1 + v69;
  v70 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v70 - 8) + 16);
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRetain(v64);
  v71 = swift_bridgeObjectRetain(v68);
  v77(v79, v78, v70, v71);
  *(_BYTE *)(a1 + v5[23]) = *(_BYTE *)(a2 + v5[23]);
  *(_BYTE *)(a1 + v5[24]) = *(_BYTE *)(a2 + v5[24]);
  v72 = v5[25];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  *(_QWORD *)(a1 + v5[26]) = *(_QWORD *)(a2 + v5[26]);
  swift_bridgeObjectRetain(v75);
  return a1;
}

uint64_t sub_100343848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;

  v4 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  v10 = v5[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v13 = v12[1];
  v11[1] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v14 = v5[7];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_1000215BC(a1 + v14, type metadata accessor for ListLocationRowPrimaryText);
    v17 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v16) == 1)
    {
      v18 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18))
      {
        v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        v20 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
        v20 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v18);
      }
    }
    else
    {
      *v15 = *v16;
      v21 = v16[1];
      v15[1] = v21;
      swift_bridgeObjectRetain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v20);
  }
  v22 = v5[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v27 = *(_QWORD *)(v24 + 16);
  v28 = *(_QWORD *)(v24 + 24);
  v29 = *(_BYTE *)(v24 + 32);
  sub_100176D88(*(_QWORD *)v24, v26, v27, v28, v29);
  v30 = *(_QWORD *)v23;
  v31 = *(_QWORD *)(v23 + 8);
  v32 = *(_QWORD *)(v23 + 16);
  v33 = *(_QWORD *)(v23 + 24);
  *(_QWORD *)v23 = v25;
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v27;
  *(_QWORD *)(v23 + 24) = v28;
  v34 = *(_BYTE *)(v23 + 32);
  *(_BYTE *)(v23 + 32) = v29;
  sub_100176DD4(v30, v31, v32, v33, v34);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  v35 = v5[10];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  v38 = type metadata accessor for Date(0);
  LODWORD(v28) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v38);
  v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38);
  if ((_DWORD)v28)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v40 = *(_QWORD *)(v38 - 8);
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v40 + 8))(v36, v38);
LABEL_13:
    v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v40 + 24))(v36, v37, v38);
LABEL_14:
  v42 = v5[11];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  v45 = type metadata accessor for TimeZone(0);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if (!v46)
  {
    v48 = *(_QWORD *)(v45 - 8);
    if (!v47)
    {
      (*(void (**)(void *, const void *, uint64_t))(v48 + 24))(v43, v44, v45);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v43, v45);
    goto LABEL_19;
  }
  if (v47)
  {
LABEL_19:
    v49 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
LABEL_20:
  v50 = v5[12];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  *v51 = *v52;
  v53 = v52[1];
  v51[1] = v53;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRelease();
  v54 = v5[13];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  *v55 = *v56;
  v57 = v56[1];
  v55[1] = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  v58 = v5[15];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  *v59 = *v60;
  v61 = v60[1];
  v59[1] = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease();
  v62 = v5[16];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  *v63 = *v64;
  v65 = v64[1];
  v63[1] = v65;
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRelease();
  v66 = v5[17];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  *v67 = *v68;
  v69 = v68[1];
  v67[1] = v69;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRelease();
  v70 = v5[18];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (_QWORD *)(a2 + v70);
  *v71 = *v72;
  v73 = v72[1];
  v71[1] = v73;
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRelease();
  v74 = v5[19];
  v75 = (_QWORD *)(a1 + v74);
  v76 = (_QWORD *)(a2 + v74);
  *v75 = *v76;
  v77 = v76[1];
  v75[1] = v77;
  swift_bridgeObjectRetain(v77);
  swift_bridgeObjectRelease();
  v78 = v5[20];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (_QWORD *)(a2 + v78);
  *v79 = *v80;
  v81 = v80[1];
  v79[1] = v81;
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[21]) = *(_BYTE *)(a2 + v5[21]);
  v82 = v5[22];
  v83 = a1 + v82;
  v84 = a2 + v82;
  v85 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 24))(v83, v84, v85);
  *(_BYTE *)(a1 + v5[23]) = *(_BYTE *)(a2 + v5[23]);
  *(_BYTE *)(a1 + v5[24]) = *(_BYTE *)(a2 + v5[24]);
  v86 = v5[25];
  v87 = (_QWORD *)(a1 + v86);
  v88 = (_QWORD *)(a2 + v86);
  *v87 = *v88;
  v89 = v88[1];
  v87[1] = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v5[26]) = *(_QWORD *)(a2 + v5[26]);
  return a1;
}

uint64_t sub_100343DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  v9 = v5[7];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v11) == 1)
  {
    v13 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13))
    {
      v14 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v15 = v5[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  v19 = v5[10];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    v23 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  v24 = v5[11];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = type metadata accessor for TimeZone(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    v28 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
  *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_OWORD *)(a1 + v5[15]) = *(_OWORD *)(a2 + v5[15]);
  *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  *(_OWORD *)(a1 + v5[17]) = *(_OWORD *)(a2 + v5[17]);
  *(_OWORD *)(a1 + v5[18]) = *(_OWORD *)(a2 + v5[18]);
  *(_OWORD *)(a1 + v5[19]) = *(_OWORD *)(a2 + v5[19]);
  *(_OWORD *)(a1 + v5[20]) = *(_OWORD *)(a2 + v5[20]);
  *(_BYTE *)(a1 + v5[21]) = *(_BYTE *)(a2 + v5[21]);
  v29 = v5[22];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  *(_BYTE *)(a1 + v5[23]) = *(_BYTE *)(a2 + v5[23]);
  *(_BYTE *)(a1 + v5[24]) = *(_BYTE *)(a2 + v5[24]);
  *(_OWORD *)(a1 + v5[25]) = *(_OWORD *)(a2 + v5[25]);
  *(_QWORD *)(a1 + v5[26]) = *(_QWORD *)(a2 + v5[26]);
  return a1;
}

uint64_t sub_100344104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;

  v4 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  v9 = v5[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v14 = v5[7];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    sub_1000215BC(a1 + v14, type metadata accessor for ListLocationRowPrimaryText);
    v17 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v16) == 1)
    {
      v18 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18))
      {
        v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload(v15, v17, 1);
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  v20 = v5[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_BYTE *)(v22 + 32);
  v24 = *(_QWORD *)v21;
  v25 = *(_QWORD *)(v21 + 8);
  v26 = *(_QWORD *)(v21 + 16);
  v27 = *(_QWORD *)(v21 + 24);
  v28 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v28;
  v29 = *(_BYTE *)(v21 + 32);
  *(_BYTE *)(v21 + 32) = v23;
  sub_100176DD4(v24, v25, v26, v27, v29);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  v30 = v5[10];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  v33 = type metadata accessor for Date(0);
  v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v33);
  v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v36 = *(_QWORD *)(v33 - 8);
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v36 + 8))(v31, v33);
LABEL_13:
    v37 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v36 + 40))(v31, v32, v33);
LABEL_14:
  v38 = v5[11];
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  v41 = type metadata accessor for TimeZone(0);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v41);
  v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41);
  if (!v42)
  {
    v44 = *(_QWORD *)(v41 - 8);
    if (!v43)
    {
      (*(void (**)(void *, const void *, uint64_t))(v44 + 40))(v39, v40, v41);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v44 + 8))(v39, v41);
    goto LABEL_19;
  }
  if (v43)
  {
LABEL_19:
    v45 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
LABEL_20:
  v46 = v5[12];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  v51 = v5[13];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (uint64_t *)(a2 + v51);
  v55 = *v53;
  v54 = v53[1];
  *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  v56 = v5[15];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)(a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  v61 = v5[16];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (uint64_t *)(a2 + v61);
  v65 = *v63;
  v64 = v63[1];
  *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  v66 = v5[17];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  v71 = v5[18];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (uint64_t *)(a2 + v71);
  v75 = *v73;
  v74 = v73[1];
  *v72 = v75;
  v72[1] = v74;
  swift_bridgeObjectRelease();
  v76 = v5[19];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (uint64_t *)(a2 + v76);
  v80 = *v78;
  v79 = v78[1];
  *v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  v81 = v5[20];
  v82 = (_QWORD *)(a1 + v81);
  v83 = (uint64_t *)(a2 + v81);
  v85 = *v83;
  v84 = v83[1];
  *v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[21]) = *(_BYTE *)(a2 + v5[21]);
  v86 = v5[22];
  v87 = a1 + v86;
  v88 = a2 + v86;
  v89 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v87, v88, v89);
  *(_BYTE *)(a1 + v5[23]) = *(_BYTE *)(a2 + v5[23]);
  *(_BYTE *)(a1 + v5[24]) = *(_BYTE *)(a2 + v5[24]);
  v90 = v5[25];
  v91 = (_QWORD *)(a1 + v90);
  v92 = (uint64_t *)(a2 + v90);
  v94 = *v92;
  v93 = v92[1];
  *v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v5[26]) = *(_QWORD *)(a2 + v5[26]);
  return a1;
}

uint64_t sub_1003445A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003445B0);
}

uint64_t sub_1003445B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000C53F8();
  v0 = sub_10009BCE8();
  return sub_1000C4820(v0, v1, v2);
}

uint64_t sub_1003445D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003445E0);
}

uint64_t sub_1003445E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000C53F8();
  v0 = sub_1000B4784();
  return sub_1000BE6F8(v0, v1, v2, v3);
}

uint64_t sub_100344604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100347EB0(a1, a2, a3, type metadata accessor for ListLocationViewModel);
}

void sub_100344610()
{
  sub_100344A70((uint64_t)&unk_100BD91B8);
}

unint64_t sub_10034463C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD91C0;
  if (!qword_100BD91C0)
  {
    v1 = sub_100075EB0(&qword_100BD8FC8);
    sub_10034AEE4((uint64_t)&unk_100BD91C8);
    sub_10007A100((uint64_t)&qword_100BC6768);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD91C0);
  }
  return result;
}

uint64_t sub_1003446D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1770, 1);
}

uint64_t sub_1003446E8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1748, 1);
}

uint64_t sub_1003446FC(uint64_t a1)
{
  return sub_100344950(a1, (uint64_t (*)(uint64_t))sub_10033E274);
}

uint64_t sub_10034470C()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1000986AC();
  sub_10004A378();
  sub_1000EF9A4();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = v1 + v3;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + v3));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v1 + v3 + 16));
  v7 = v1 + v3 + v0[6];
  v8 = sub_1000BE878();
  sub_1000987E0(v8);
  v9 = (int *)sub_1000C53F8();
  sub_1000BA548(v7 + v9[6]);
  v10 = sub_1000D0CA0();
  if (sub_100094FAC(v10) == 1)
  {
    v11 = sub_100098778();
    if (!sub_1000C24F4(v11))
      sub_1000BBCFC();
  }
  else
  {
    sub_1000B3B94();
  }
  sub_1000C5400(v7 + v9[8]);
  v12 = sub_100098778();
  if (!sub_1000C24F4(v12))
    sub_1000BBCFC();
  v13 = sub_1000C1DF8();
  if (!sub_1000C24F4(v13))
    sub_1000BBCFC();
  sub_1000BA548(v7 + v9[12]);
  sub_1000BA548(v7 + v9[13]);
  sub_1000BA548(v7 + v9[15]);
  sub_1000BA548(v7 + v9[16]);
  sub_1000BA548(v7 + v9[17]);
  sub_1000BA548(v7 + v9[18]);
  sub_1000BA548(v7 + v9[19]);
  sub_1000BA548(v7 + v9[20]);
  v14 = sub_1000BE880();
  sub_1000989A0(v14);
  sub_1000BA548(v7 + v9[25]);
  sub_10009DAA8(v6 + v0[10]);
  sub_10009DAA8(v6 + v0[11]);
  sub_10009DAA8(v6 + v0[12]);
  v15 = v6 + v0[13];
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (sub_100086160() == 1)
  {
    v16 = sub_1000F4214();
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_10007A038(v6 + v0[14]);
  v17 = v6 + v0[15];
  if (sub_100086160() == 1)
  {
    v18 = sub_1000F4214();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_1000C6DD4();
  sub_10009C7AC();
  return sub_1000BBBC0(v1, v3 + v5, v2 | 7);
}

uint64_t sub_100344944(uint64_t a1)
{
  return sub_100344950(a1, (uint64_t (*)(uint64_t))sub_10033E480);
}

uint64_t sub_100344950(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  sub_10004A378();
  v2 = sub_10009DACC();
  return a2(v2);
}

uint64_t sub_100344988(uint64_t a1, uint64_t a2)
{
  return sub_10034499C(a1, a2, (void (*)(_QWORD))type metadata accessor for LocationRowButtonStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10033E60C);
}

uint64_t sub_10034499C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  a3(0);
  sub_1000BA550();
  return a4(a1, a2, v4 + v7);
}

unint64_t sub_1003449EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9238;
  if (!qword_100BD9238)
  {
    v1 = sub_100075EB0(&qword_100BD9200);
    sub_100344A70((uint64_t)&unk_100BD9240);
    sub_100344CF8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9238);
  }
  return result;
}

void sub_100344A70(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;

  if (!sub_10009987C(a1))
  {
    sub_100098C3C(0, v2);
    sub_1000B3B8C();
    sub_1001CDA94();
    atomic_store(sub_1000C0160((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_100344ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9248;
  if (!qword_100BD9248)
  {
    v1 = sub_100075EB0(&qword_100BD91F0);
    sub_100344B28();
    sub_100344C74();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9248);
  }
  return result;
}

unint64_t sub_100344B28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9250;
  if (!qword_100BD9250)
  {
    v1 = sub_100075EB0(&qword_100BD9258);
    sub_100344BAC();
    sub_10007A100((uint64_t)&qword_100BCCB58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9250);
  }
  return result;
}

unint64_t sub_100344BAC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_100BD9260;
  if (!qword_100BD9260)
  {
    v1 = sub_100075EB0(&qword_100BD91E8);
    v2 = sub_100075EB0(&qword_100BD91D8);
    sub_10034AEE4((uint64_t)&unk_100BD9230);
    v4[0] = v2;
    v4[1] = &type metadata for Bool;
    v4[2] = v3;
    v4[3] = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9260);
  }
  return result;
}

unint64_t sub_100344C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9268;
  if (!qword_100BD9268)
  {
    v1 = sub_100075EB0(&qword_100BD9270);
    sub_100344BAC();
    sub_10034AEE4((uint64_t)&unk_100BD9278);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9268);
  }
  return result;
}

unint64_t sub_100344CF8()
{
  unint64_t result;

  result = qword_100BD9288;
  if (!qword_100BD9288)
  {
    result = swift_getWitnessTable(&unk_10099640C, &unk_100B6E1C8);
    atomic_store(result, (unint64_t *)&qword_100BD9288);
  }
  return result;
}

uint64_t sub_100344D34()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *);
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_10004A378();
  sub_1000E7C10();
  v24 = v4;
  v25 = v0;
  v26 = type metadata accessor for PrimitiveButtonStyleConfiguration(0);
  v5 = *(_QWORD *)(v26 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v23 = *(_QWORD *)(v5 + 64);
  v7 = (_QWORD *)(v1 + v0);
  swift_unknownObjectRelease(*v7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v7 + 2);
  v8 = (char *)v7 + v2[6];
  v9 = sub_1000BE878();
  sub_1000B2568(v9);
  v10 = (int *)sub_1000C53F8();
  sub_1000BA548((uint64_t)&v8[v10[6]]);
  v11 = sub_1000C1A5C();
  if (sub_10009ED24(v11) == 1)
  {
    v12 = sub_100098778();
    if (!sub_1000BBDB0(v12))
      sub_1000C2190();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1000C5400((uint64_t)&v8[v10[8]]);
  v13 = sub_100098778();
  if (!sub_1000BBDB0(v13))
    sub_1000C2190();
  v14 = sub_100099928();
  if (!sub_1000BBDB0(v14))
    sub_1000C2190();
  sub_1000BA548((uint64_t)&v8[v10[12]]);
  sub_1000BA548((uint64_t)&v8[v10[13]]);
  sub_1000BA548((uint64_t)&v8[v10[15]]);
  sub_1000BA548((uint64_t)&v8[v10[16]]);
  sub_1000BA548((uint64_t)&v8[v10[17]]);
  sub_1000BA548((uint64_t)&v8[v10[18]]);
  sub_1000BA548((uint64_t)&v8[v10[19]]);
  sub_1000BA548((uint64_t)&v8[v10[20]]);
  v15 = &v8[v10[22]];
  sub_1000BE880();
  sub_1000C092C();
  v16(v15);
  sub_1000BA548((uint64_t)&v8[v10[25]]);
  sub_10009DAA8((uint64_t)v7 + v2[10]);
  sub_10009DAA8((uint64_t)v7 + v2[11]);
  sub_10009DAA8((uint64_t)v7 + v2[12]);
  v17 = (_QWORD *)((char *)v7 + v2[13]);
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (sub_1000C14DC() == 1)
  {
    v18 = sub_1000F4214();
    if (!sub_1000C24F4(v18))
      sub_1000BBCFC();
  }
  else
  {
    swift_release(*v17);
  }
  sub_10007A038((uint64_t)v7 + v2[14]);
  v19 = (_QWORD *)((char *)v7 + v2[15]);
  if (sub_1000C14DC() == 1)
  {
    v20 = sub_1000F4214();
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  else
  {
    swift_release(*v19);
  }
  v21 = (v25 + v24 + v6) & ~v6;
  sub_1000C6DD4();
  sub_10009C7AC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1 + v21, v26);
  return swift_deallocObject(v1, v21 + v23, v3 | v6 | 7);
}

uint64_t sub_100344FD8()
{
  return sub_100344FF4(type metadata accessor for LocationRowButtonStyle, (uint64_t (*)(_QWORD))&type metadata accessor for PrimitiveButtonStyleConfiguration, (uint64_t (*)(unint64_t, unint64_t))sub_10033EDC4);
}

uint64_t sub_100344FF4(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t (*a3)(unint64_t, unint64_t))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_10009EE90(a1) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(v3 + v6, v3 + ((v6 + v7 + v8) & ~v8));
}

unint64_t sub_100345064()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD92A0;
  if (!qword_100BD92A0)
  {
    v1 = sub_100075EB0(&qword_100BD9218);
    sub_1003450E8();
    sub_10034AEE4((uint64_t)&unk_100BD92D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD92A0);
  }
  return result;
}

unint64_t sub_1003450E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = qword_100BD92A8;
  if (!qword_100BD92A8)
  {
    v1 = sub_100075EB0(&qword_100BD9210);
    v2 = sub_100075EB0(&qword_100BD9208);
    v3 = sub_100075EB0(&qword_100BD92B0);
    v4 = sub_100345200();
    v5 = sub_100345284();
    v6 = sub_100075EB0(&qword_100BD92C8);
    v9 = type metadata accessor for EmptyMatchedTransitionSourceConfiguration(255);
    v10 = &protocol witness table for EmptyMatchedTransitionSourceConfiguration;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.background(_:)>>, 1);
    v9 = v6;
    v10 = (void *)OpaqueTypeConformance2;
    v8 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.clipShape(_:)>>, 1);
    v9 = v2;
    v10 = &unk_100B9A908;
    v11 = v3;
    v12 = v4;
    v13 = v5;
    v14 = v8;
    swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.matchedTransitionSource<A, B>(id:in:configuration:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD92A8);
  }
  return result;
}

unint64_t sub_100345200()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD92B8;
  if (!qword_100BD92B8)
  {
    v1 = sub_100075EB0(&qword_100BD9208);
    sub_1003449EC();
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD92B8);
  }
  return result;
}

unint64_t sub_100345284()
{
  unint64_t result;

  result = qword_100BD92C0;
  if (!qword_100BD92C0)
  {
    result = swift_getWitnessTable(&unk_1009D87A8, &unk_100B9A908);
    atomic_store(result, (unint64_t *)&qword_100BD92C0);
  }
  return result;
}

uint64_t sub_1003452C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PrimitiveButtonStyleConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100345320()
{
  return sub_100345334((uint64_t (*)(_QWORD))&type metadata accessor for PrimitiveButtonStyleConfiguration, (uint64_t (*)(uint64_t))sub_10033F2CC);
}

uint64_t sub_100345334(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  sub_10009EE90(a1);
  sub_1000BA550();
  return a2(v2 + v3);
}

uint64_t sub_100345360()
{
  return sub_10033F308();
}

void sub_100345378()
{
  uint64_t v0;

  sub_100389374(*(double *)(v0 + 24));
}

uint64_t sub_100345384()
{
  uint64_t v0;

  return sub_10033E59C(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for RowElementStyle(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD9560, (uint64_t)&nominal type descriptor for RowElementStyle);
}

uint64_t type metadata accessor for DescriptionView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD95C8, (uint64_t)&nominal type descriptor for DescriptionView);
}

unint64_t sub_1003453D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD93B8;
  if (!qword_100BD93B8)
  {
    v1 = sub_100075EB0(&qword_100BD9398);
    sub_10034545C();
    sub_10034AEE4((uint64_t)&unk_100BD93E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD93B8);
  }
  return result;
}

unint64_t sub_10034545C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD93C0;
  if (!qword_100BD93C0)
  {
    v1 = sub_100075EB0(&qword_100BD9390);
    sub_1003454E0();
    sub_10007A100((uint64_t)&unk_100BD93D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD93C0);
  }
  return result;
}

unint64_t sub_1003454E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD93C8;
  if (!qword_100BD93C8)
  {
    v1 = sub_100075EB0(&qword_100BD9388);
    sub_10007A100((uint64_t)&unk_100BD93D0);
    sub_10034AEE4((uint64_t)&qword_100BC4E20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD93C8);
  }
  return result;
}

uint64_t type metadata accessor for VFXForegroundModifier(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD9658, (uint64_t)&nominal type descriptor for VFXForegroundModifier);
}

unint64_t sub_100345590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD93E8;
  if (!qword_100BD93E8)
  {
    v1 = sub_100075EB0(&qword_100BD9378);
    sub_100345634((uint64_t)&unk_100BD93F0);
    sub_10034AEE4((uint64_t)&unk_100BD93E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD93E8);
  }
  return result;
}

void sub_100345634(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000AE8E8(0, v3);
    v2();
    atomic_store(sub_100098C44((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_100345678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD93F8;
  if (!qword_100BD93F8)
  {
    v1 = sub_100075EB0(&qword_100BD9368);
    sub_10007A100((uint64_t)&unk_100BC3BA8);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD93F8);
  }
  return result;
}

unint64_t sub_100345714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9400;
  if (!qword_100BD9400)
  {
    v1 = sub_100075EB0(&qword_100BD9358);
    sub_100345798();
    sub_10034AEE4((uint64_t)&unk_100BD93E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9400);
  }
  return result;
}

unint64_t sub_100345798()
{
  unint64_t result;

  result = qword_100BD9408;
  if (!qword_100BD9408)
  {
    result = swift_getWitnessTable(&unk_1009963BC, &unk_100B6E250);
    atomic_store(result, (unint64_t *)&qword_100BD9408);
  }
  return result;
}

uint64_t type metadata accessor for LocationRowSubheadingView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD96E8, (uint64_t)&nominal type descriptor for LocationRowSubheadingView);
}

uint64_t *sub_1003457F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD93B0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for BlendMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_1003458C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1000BA294(&qword_100BD93B0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for BlendMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100345960(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BD93B0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = type metadata accessor for BlendMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BD93B0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for BlendMode(0);
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_100345A58(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1000BA294(&qword_100BD93B0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for BlendMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100345AF8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BD93B0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = type metadata accessor for BlendMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BD93B0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for BlendMode(0);
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_100345BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100345BFC);
}

uint64_t sub_100345BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  sub_10009E50C();
  sub_1000BA294(&qword_100BD93B0);
  v0 = sub_10009BCE8();
  v3 = _s7Weather24LocationCompositionStateOwet_0(v0, v1, v2);
  if (v3 >= 2)
    return v3 - 1;
  else
    return 0;
}

uint64_t sub_100345C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100345C44);
}

uint64_t sub_100345C44(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1000BA294(&qword_100BD93B0);
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_100345C88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BD93B0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100345CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD93B0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t sub_100345CF8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for BlendMode(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t destroy for RecordMainStateChangesIntoEnvironmentState(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 16));
}

uint64_t sub_100345D74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_100345DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t sub_100345E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  swift_release(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t sub_100345E80(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100345EC0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BorderedClipModifier()
{
  sub_100098884();
}

uint64_t sub_100345F10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t sub_100345F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

void type metadata accessor for LocationRowHighLowView()
{
  sub_100098884();
}

_QWORD *sub_10034600C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v85)(char *, char *, uint64_t, __n128);
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for LocationModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for ListLocationViewModel(0);
    v9 = v8[5];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = v8[6];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v8[7];
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain(v15);
    if (swift_getEnumCaseMultiPayload(v18) == 1)
    {
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v22 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
        v22 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
    }
    else
    {
      v24 = v18[1];
      *v17 = *v18;
      v17[1] = v24;
      swift_bridgeObjectRetain(v24);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v22);
    v25 = v8[8];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(_QWORD *)v27;
    v29 = *((_QWORD *)v27 + 1);
    v30 = *((_QWORD *)v27 + 2);
    v31 = *((_QWORD *)v27 + 3);
    v32 = v27[32];
    sub_100176D88(*(_QWORD *)v27, v29, v30, v31, v32);
    *(_QWORD *)v26 = v28;
    *((_QWORD *)v26 + 1) = v29;
    *((_QWORD *)v26 + 2) = v30;
    *((_QWORD *)v26 + 3) = v31;
    v26[32] = v32;
    *((_BYTE *)v4 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v33 = v8[10];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      v37 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    v38 = v8[11];
    v39 = (char *)v4 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for TimeZone(0);
    v90 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = sub_1000BA294(&qword_100BCCC50);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v43 = v8[12];
    v44 = (_QWORD *)((char *)v4 + v43);
    v45 = (_QWORD *)((char *)a2 + v43);
    v89 = v45[1];
    *v44 = *v45;
    v44[1] = v89;
    v46 = v8[13];
    v47 = (_QWORD *)((char *)v4 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    v88 = v48[1];
    *v47 = *v48;
    v47[1] = v88;
    *((_BYTE *)v4 + v8[14]) = *((_BYTE *)a2 + v8[14]);
    v49 = v8[15];
    v50 = (_QWORD *)((char *)v4 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = v8[16];
    v54 = (_QWORD *)((char *)v4 + v53);
    v55 = (_QWORD *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = v8[17];
    v58 = (_QWORD *)((char *)v4 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = v8[18];
    v62 = (_QWORD *)((char *)v4 + v61);
    v63 = (_QWORD *)((char *)a2 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = v8[19];
    v66 = (_QWORD *)((char *)v4 + v65);
    v67 = (_QWORD *)((char *)a2 + v65);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v69 = v8[20];
    v70 = (_QWORD *)((char *)v4 + v69);
    v71 = (_QWORD *)((char *)a2 + v69);
    v72 = v71[1];
    *v70 = *v71;
    v70[1] = v72;
    *((_BYTE *)v4 + v8[21]) = *((_BYTE *)a2 + v8[21]);
    v73 = v8[22];
    v86 = (char *)a2 + v73;
    v87 = (char *)v4 + v73;
    v74 = type metadata accessor for WeatherConditionBackgroundModel(0);
    v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v74 - 8) + 16);
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v68);
    v75 = swift_bridgeObjectRetain(v72);
    v85(v87, v86, v74, v75);
    *((_BYTE *)v4 + v8[23]) = *((_BYTE *)a2 + v8[23]);
    *((_BYTE *)v4 + v8[24]) = *((_BYTE *)a2 + v8[24]);
    v76 = v8[25];
    v77 = (_QWORD *)((char *)v4 + v76);
    v78 = (_QWORD *)((char *)a2 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    *(_QWORD *)((char *)v4 + v8[26]) = *(_QWORD *)((char *)a2 + v8[26]);
    v80 = *(int *)(v90 + 20);
    v81 = (char *)v4 + v80;
    v82 = (char *)a2 + v80;
    v83 = *(_QWORD *)v82;
    LOBYTE(v82) = v82[8];
    *(_QWORD *)v81 = v83;
    v81[8] = (char)v82;
    swift_bridgeObjectRetain(v79);
  }
  swift_retain();
  return v4;
}

double sub_100346490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  v4 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  swift_bridgeObjectRelease();
  v6 = a1 + v5[7];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v8 = a1 + v5[8];
  sub_100176DD4(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
  v9 = a1 + v5[10];
  v10 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + v5[11];
  v12 = type metadata accessor for TimeZone(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + v5[22];
  v14 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t sub_1003466A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  void (*v83)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v7[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain(v14);
  if (swift_getEnumCaseMultiPayload(v17) == 1)
  {
    v19 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19))
    {
      v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v21 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v19);
    }
  }
  else
  {
    v22 = v17[1];
    *v16 = *v17;
    v16[1] = v22;
    swift_bridgeObjectRetain(v22);
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v18, v21);
  v23 = v7[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(_QWORD *)(v25 + 16);
  v29 = *(_QWORD *)(v25 + 24);
  v30 = *(_BYTE *)(v25 + 32);
  sub_100176D88(*(_QWORD *)v25, v27, v28, v29, v30);
  *(_QWORD *)v24 = v26;
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v28;
  *(_QWORD *)(v24 + 24) = v29;
  *(_BYTE *)(v24 + 32) = v30;
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v31 = v7[10];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  v36 = v7[11];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  v39 = type metadata accessor for TimeZone(0);
  v88 = a3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    v40 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  v41 = v7[12];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  v87 = v43[1];
  *v42 = *v43;
  v42[1] = v87;
  v44 = v7[13];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v86 = v46[1];
  *v45 = *v46;
  v45[1] = v86;
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v47 = v7[15];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = v7[16];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = v7[17];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = v7[18];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  v63 = v7[19];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = v7[20];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (_QWORD *)(a2 + v67);
  v70 = v69[1];
  *v68 = *v69;
  v68[1] = v70;
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v71 = v7[22];
  v84 = a2 + v71;
  v85 = a1 + v71;
  v72 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v83 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v72 - 8) + 16);
  swift_bridgeObjectRetain(v87);
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRetain(v66);
  v73 = swift_bridgeObjectRetain(v70);
  v83(v85, v84, v72, v73);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v74 = v7[25];
  v75 = (_QWORD *)(a1 + v74);
  v76 = (_QWORD *)(a2 + v74);
  v77 = v76[1];
  *v75 = *v76;
  v75[1] = v77;
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v78 = *(int *)(v88 + 20);
  v79 = a1 + v78;
  v80 = (uint64_t *)(a2 + v78);
  v81 = *v80;
  LOBYTE(v80) = *((_BYTE *)v80 + 8);
  *(_QWORD *)v79 = v81;
  *(_BYTE *)(v79 + 8) = (_BYTE)v80;
  swift_bridgeObjectRetain(v77);
  swift_retain();
  return a1;
}

uint64_t sub_100346B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = v7[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v16 = v7[7];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    sub_1000215BC(a1 + v16, type metadata accessor for ListLocationRowPrimaryText);
    v19 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v18) == 1)
    {
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v22 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
        v22 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
    }
    else
    {
      *v17 = *v18;
      v23 = v18[1];
      v17[1] = v23;
      swift_bridgeObjectRetain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v22);
  }
  v24 = v7[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  v29 = *(_QWORD *)(v26 + 16);
  v30 = *(_QWORD *)(v26 + 24);
  v31 = *(_BYTE *)(v26 + 32);
  sub_100176D88(*(_QWORD *)v26, v28, v29, v30, v31);
  v32 = *(_QWORD *)v25;
  v33 = *(_QWORD *)(v25 + 8);
  v34 = *(_QWORD *)(v25 + 16);
  v35 = *(_QWORD *)(v25 + 24);
  *(_QWORD *)v25 = v27;
  *(_QWORD *)(v25 + 8) = v28;
  *(_QWORD *)(v25 + 16) = v29;
  *(_QWORD *)(v25 + 24) = v30;
  v36 = *(_BYTE *)(v25 + 32);
  *(_BYTE *)(v25 + 32) = v31;
  sub_100176DD4(v32, v33, v34, v35, v36);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v37 = v7[10];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = type metadata accessor for Date(0);
  LODWORD(v30) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if ((_DWORD)v30)
  {
    if (!v41)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v42 = *(_QWORD *)(v40 - 8);
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v42 + 8))(v38, v40);
LABEL_13:
    v43 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v42 + 24))(v38, v39, v40);
LABEL_14:
  v44 = v7[11];
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  v47 = type metadata accessor for TimeZone(0);
  v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v47);
  v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47);
  if (!v48)
  {
    v50 = *(_QWORD *)(v47 - 8);
    if (!v49)
    {
      (*(void (**)(void *, const void *, uint64_t))(v50 + 24))(v45, v46, v47);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v45, v47);
    goto LABEL_19;
  }
  if (v49)
  {
LABEL_19:
    v51 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
LABEL_20:
  v52 = v7[12];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  *v53 = *v54;
  v55 = v54[1];
  v53[1] = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease();
  v56 = v7[13];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  *v57 = *v58;
  v59 = v58[1];
  v57[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v60 = v7[15];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  *v61 = *v62;
  v63 = v62[1];
  v61[1] = v63;
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRelease();
  v64 = v7[16];
  v65 = (_QWORD *)(a1 + v64);
  v66 = (_QWORD *)(a2 + v64);
  *v65 = *v66;
  v67 = v66[1];
  v65[1] = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease();
  v68 = v7[17];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (_QWORD *)(a2 + v68);
  *v69 = *v70;
  v71 = v70[1];
  v69[1] = v71;
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRelease();
  v72 = v7[18];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v75 = v74[1];
  v73[1] = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease();
  v76 = v7[19];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (_QWORD *)(a2 + v76);
  *v77 = *v78;
  v79 = v78[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease();
  v80 = v7[20];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  *v81 = *v82;
  v83 = v82[1];
  v81[1] = v83;
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v84 = v7[22];
  v85 = a1 + v84;
  v86 = a2 + v84;
  v87 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 24))(v85, v86, v87);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v88 = v7[25];
  v89 = (_QWORD *)(a1 + v88);
  v90 = (_QWORD *)(a2 + v88);
  *v89 = *v90;
  v91 = v90[1];
  v89[1] = v91;
  swift_bridgeObjectRetain(v91);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v92 = *(int *)(a3 + 20);
  v93 = (uint64_t *)(a1 + v92);
  v94 = (uint64_t *)(a2 + v92);
  v95 = *v94;
  LOBYTE(v94) = *((_BYTE *)v94 + 8);
  v96 = *v93;
  *v93 = v95;
  *((_BYTE *)v93 + 8) = (_BYTE)v94;
  swift_retain();
  swift_release(v96);
  return a1;
}

uint64_t sub_1003470A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  v11 = v7[7];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v13) == 1)
  {
    v15 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
    {
      v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v21 = v7[10];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    v25 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  v26 = v7[11];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = type metadata accessor for TimeZone(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    v30 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  *(_OWORD *)(a1 + v7[12]) = *(_OWORD *)(a2 + v7[12]);
  *(_OWORD *)(a1 + v7[13]) = *(_OWORD *)(a2 + v7[13]);
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  *(_OWORD *)(a1 + v7[15]) = *(_OWORD *)(a2 + v7[15]);
  *(_OWORD *)(a1 + v7[16]) = *(_OWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_OWORD *)(a1 + v7[18]) = *(_OWORD *)(a2 + v7[18]);
  *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
  *(_OWORD *)(a1 + v7[20]) = *(_OWORD *)(a2 + v7[20]);
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v31 = v7[22];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  *(_OWORD *)(a1 + v7[25]) = *(_OWORD *)(a2 + v7[25]);
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v35 = *(int *)(a3 + 20);
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  return a1;
}

uint64_t sub_100347410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v16 = v7[7];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_1000215BC(a1 + v16, type metadata accessor for ListLocationRowPrimaryText);
    v19 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v18) == 1)
    {
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  v22 = v7[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_BYTE *)(v24 + 32);
  v26 = *(_QWORD *)v23;
  v27 = *(_QWORD *)(v23 + 8);
  v28 = *(_QWORD *)(v23 + 16);
  v29 = *(_QWORD *)(v23 + 24);
  v30 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v30;
  v31 = *(_BYTE *)(v23 + 32);
  *(_BYTE *)(v23 + 32) = v25;
  sub_100176DD4(v26, v27, v28, v29, v31);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v32 = v7[10];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = type metadata accessor for Date(0);
  v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v38 = *(_QWORD *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v33, v35);
LABEL_13:
    v39 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 40))(v33, v34, v35);
LABEL_14:
  v40 = v7[11];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = type metadata accessor for TimeZone(0);
  v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v43);
  v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43);
  if (!v44)
  {
    v46 = *(_QWORD *)(v43 - 8);
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v46 + 40))(v41, v42, v43);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v41, v43);
    goto LABEL_19;
  }
  if (v45)
  {
LABEL_19:
    v47 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
LABEL_20:
  v48 = v7[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v53 = v7[13];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v58 = v7[15];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (uint64_t *)(a2 + v58);
  v62 = *v60;
  v61 = v60[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  v63 = v7[16];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (uint64_t *)(a2 + v63);
  v67 = *v65;
  v66 = v65[1];
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  v68 = v7[17];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v72 = *v70;
  v71 = v70[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
  v73 = v7[18];
  v74 = (_QWORD *)(a1 + v73);
  v75 = (uint64_t *)(a2 + v73);
  v77 = *v75;
  v76 = v75[1];
  *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  v78 = v7[19];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (uint64_t *)(a2 + v78);
  v82 = *v80;
  v81 = v80[1];
  *v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  v83 = v7[20];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (uint64_t *)(a2 + v83);
  v87 = *v85;
  v86 = v85[1];
  *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v88 = v7[22];
  v89 = a1 + v88;
  v90 = a2 + v88;
  v91 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 40))(v89, v90, v91);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v92 = v7[25];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (uint64_t *)(a2 + v92);
  v96 = *v94;
  v95 = v94[1];
  *v93 = v96;
  v93[1] = v95;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v97 = *(int *)(a3 + 20);
  v98 = (uint64_t *)(a1 + v97);
  v99 = (uint64_t *)(a2 + v97);
  v100 = *v99;
  LOBYTE(v99) = *((_BYTE *)v99 + 8);
  v101 = *v98;
  *v98 = v100;
  *((_BYTE *)v98 + 8) = (_BYTE)v99;
  swift_release(v101);
  return a1;
}

uint64_t sub_1003478D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003478E4);
}

void sub_1003478E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000C53F8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1000B250C(a1, a2, v6);
  }
  else
  {
    sub_10009C0DC(a1 + *(int *)(a3 + 20));
    sub_100079F70();
  }
}

uint64_t sub_10034793C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100347948);
}

void sub_100347948()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000C53F8();
  sub_10009D2E8();
  if (v0)
  {
    v1 = sub_1000B4784();
    sub_1000987C4(v1, v2, v3, v4);
  }
  else
  {
    sub_1000F3F84();
    sub_100079F70();
  }
}

uint64_t sub_10034798C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ListLocationViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100996080;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1003479FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(type metadata accessor for RowElementStyle(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1000BA294(&qword_100BD93B0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v8 = type metadata accessor for BlendMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  return a1;
}

void sub_100347AC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000BA294(&qword_100BD93B0);
  if (_s7Weather24LocationCompositionStateOwet_0(a1, 1, v2))
  {
    sub_10004A298();
  }
  else
  {
    v3 = type metadata accessor for BlendMode(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void *sub_100347B24(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1000BA294(&qword_100BD93B0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = type metadata accessor for RowElementStyle(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for BlendMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_100347BC8(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1000BA294(&qword_100BD93B0);
  v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
  v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    if (!v6)
    {
      v10 = type metadata accessor for BlendMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(a1, a2, v10);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BD93B0);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = type metadata accessor for RowElementStyle(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  v7 = type metadata accessor for BlendMode(0);
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *sub_100347CBC(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1000BA294(&qword_100BD93B0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = type metadata accessor for RowElementStyle(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for BlendMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_100347D60(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1000BA294(&qword_100BD93B0);
  v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
  v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    if (!v6)
    {
      v10 = type metadata accessor for BlendMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(a1, a2, v10);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BD93B0);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = type metadata accessor for RowElementStyle(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  v7 = type metadata accessor for BlendMode(0);
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t sub_100347E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100347E60);
}

uint64_t sub_100347E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000ED27C();
  v0 = sub_10009BCE8();
  return sub_1000C4820(v0, v1, v2);
}

uint64_t sub_100347E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100347E88);
}

uint64_t sub_100347E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000ED27C();
  v0 = sub_1000B4784();
  return sub_1000BE6F8(v0, v1, v2, v3);
}

uint64_t sub_100347EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100347EB0(a1, a2, a3, type metadata accessor for RowElementStyle);
}

uint64_t sub_100347EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v7, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_100347F18(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v93)(char *, char *, uint64_t, __n128);
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for LocationModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for ListLocationViewModel(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = v8[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v8[7];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain(v15);
    if (swift_getEnumCaseMultiPayload(v18) == 1)
    {
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v22 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
        v22 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
    }
    else
    {
      v24 = v18[1];
      *v17 = *v18;
      v17[1] = v24;
      swift_bridgeObjectRetain(v24);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v22);
    v25 = v8[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(_QWORD *)v27;
    v29 = *((_QWORD *)v27 + 1);
    v30 = *((_QWORD *)v27 + 2);
    v31 = *((_QWORD *)v27 + 3);
    v32 = v27[32];
    sub_100176D88(*(_QWORD *)v27, v29, v30, v31, v32);
    *(_QWORD *)v26 = v28;
    *((_QWORD *)v26 + 1) = v29;
    *((_QWORD *)v26 + 2) = v30;
    *((_QWORD *)v26 + 3) = v31;
    v26[32] = v32;
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v33 = v8[10];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      v37 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    v38 = v8[11];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for TimeZone(0);
    v98 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = sub_1000BA294(&qword_100BCCC50);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v43 = v8[12];
    v44 = (_QWORD *)((char *)a1 + v43);
    v45 = (_QWORD *)((char *)a2 + v43);
    v97 = v45[1];
    *v44 = *v45;
    v44[1] = v97;
    v46 = v8[13];
    v47 = (_QWORD *)((char *)a1 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    v96 = v48[1];
    *v47 = *v48;
    v47[1] = v96;
    *((_BYTE *)a1 + v8[14]) = *((_BYTE *)a2 + v8[14]);
    v49 = v8[15];
    v50 = (_QWORD *)((char *)a1 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = v8[16];
    v54 = (_QWORD *)((char *)a1 + v53);
    v55 = (_QWORD *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = v8[17];
    v58 = (_QWORD *)((char *)a1 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = v8[18];
    v62 = (_QWORD *)((char *)a1 + v61);
    v63 = (_QWORD *)((char *)a2 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = v8[19];
    v66 = (_QWORD *)((char *)a1 + v65);
    v67 = (_QWORD *)((char *)a2 + v65);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v69 = v8[20];
    v70 = (_QWORD *)((char *)a1 + v69);
    v71 = (_QWORD *)((char *)a2 + v69);
    v72 = v71[1];
    *v70 = *v71;
    v70[1] = v72;
    *((_BYTE *)a1 + v8[21]) = *((_BYTE *)a2 + v8[21]);
    v73 = v8[22];
    v94 = (char *)a2 + v73;
    v95 = (char *)a1 + v73;
    v74 = type metadata accessor for WeatherConditionBackgroundModel(0);
    v93 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v74 - 8) + 16);
    swift_bridgeObjectRetain(v97);
    swift_bridgeObjectRetain(v96);
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v68);
    v75 = swift_bridgeObjectRetain(v72);
    v93(v95, v94, v74, v75);
    *((_BYTE *)a1 + v8[23]) = *((_BYTE *)a2 + v8[23]);
    *((_BYTE *)a1 + v8[24]) = *((_BYTE *)a2 + v8[24]);
    v76 = v8[25];
    v77 = (_QWORD *)((char *)a1 + v76);
    v78 = (_QWORD *)((char *)a2 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    *(_QWORD *)((char *)a1 + v8[26]) = *(_QWORD *)((char *)a2 + v8[26]);
    v80 = *(int *)(v98 + 20);
    v81 = *(int *)(v98 + 24);
    v82 = (char *)a1 + v80;
    v83 = (char *)a2 + v80;
    v84 = *(_QWORD *)v83;
    LOBYTE(v83) = v83[8];
    *(_QWORD *)v82 = v84;
    v82[8] = (char)v83;
    v85 = (_QWORD *)((char *)a1 + v81);
    v86 = (_QWORD *)((char *)a2 + v81);
    swift_bridgeObjectRetain(v79);
    swift_retain();
    v87 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v86) == 1)
    {
      v88 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v85, v86, v88);
      v89 = v85;
      v90 = v87;
      v91 = 1;
    }
    else
    {
      *v85 = *v86;
      swift_retain();
      v89 = v85;
      v90 = v87;
      v91 = 0;
    }
    swift_storeEnumTagMultiPayload(v89, v90, v91);
  }
  return a1;
}

double sub_100348418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double result;

  v4 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  swift_bridgeObjectRelease();
  v6 = a1 + v5[7];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v8 = a1 + v5[8];
  sub_100176DD4(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
  v9 = a1 + v5[10];
  v10 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + v5[11];
  v12 = type metadata accessor for TimeZone(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + v5[22];
  v14 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  v15 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_10034868C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v89)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v7[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain(v14);
  if (swift_getEnumCaseMultiPayload(v17) == 1)
  {
    v19 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19))
    {
      v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v21 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v19);
    }
  }
  else
  {
    v22 = v17[1];
    *v16 = *v17;
    v16[1] = v22;
    swift_bridgeObjectRetain(v22);
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v18, v21);
  v23 = v7[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(_QWORD *)(v25 + 16);
  v29 = *(_QWORD *)(v25 + 24);
  v30 = *(_BYTE *)(v25 + 32);
  sub_100176D88(*(_QWORD *)v25, v27, v28, v29, v30);
  *(_QWORD *)v24 = v26;
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v28;
  *(_QWORD *)(v24 + 24) = v29;
  *(_BYTE *)(v24 + 32) = v30;
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v31 = v7[10];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  v36 = v7[11];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  v39 = type metadata accessor for TimeZone(0);
  v94 = a3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    v40 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  v41 = v7[12];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  v93 = v43[1];
  *v42 = *v43;
  v42[1] = v93;
  v44 = v7[13];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v92 = v46[1];
  *v45 = *v46;
  v45[1] = v92;
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v47 = v7[15];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = v7[16];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = v7[17];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = v7[18];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  v63 = v7[19];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = v7[20];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (_QWORD *)(a2 + v67);
  v70 = v69[1];
  *v68 = *v69;
  v68[1] = v70;
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v71 = v7[22];
  v90 = a2 + v71;
  v91 = a1 + v71;
  v72 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v89 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v72 - 8) + 16);
  swift_bridgeObjectRetain(v93);
  swift_bridgeObjectRetain(v92);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRetain(v66);
  v73 = swift_bridgeObjectRetain(v70);
  v89(v91, v90, v72, v73);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v74 = v7[25];
  v75 = (_QWORD *)(a1 + v74);
  v76 = (_QWORD *)(a2 + v74);
  v77 = v76[1];
  *v75 = *v76;
  v75[1] = v77;
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v78 = *(int *)(v94 + 20);
  v79 = *(int *)(v94 + 24);
  v80 = a1 + v78;
  v81 = (uint64_t *)(a2 + v78);
  v82 = *v81;
  LOBYTE(v81) = *((_BYTE *)v81 + 8);
  *(_QWORD *)v80 = v82;
  *(_BYTE *)(v80 + 8) = (_BYTE)v81;
  v83 = (_QWORD *)(a1 + v79);
  v84 = (_QWORD *)(a2 + v79);
  swift_bridgeObjectRetain(v77);
  swift_retain();
  v85 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v84) == 1)
  {
    v86 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v83, v84, v86);
    v87 = 1;
  }
  else
  {
    *v83 = *v84;
    swift_retain();
    v87 = 0;
  }
  swift_storeEnumTagMultiPayload(v83, v85, v87);
  return a1;
}

uint64_t sub_100348B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = v7[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v16 = v7[7];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    sub_1000215BC(a1 + v16, type metadata accessor for ListLocationRowPrimaryText);
    v19 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v18) == 1)
    {
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v22 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
        v22 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
    }
    else
    {
      *v17 = *v18;
      v23 = v18[1];
      v17[1] = v23;
      swift_bridgeObjectRetain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v22);
  }
  v24 = v7[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  v29 = *(_QWORD *)(v26 + 16);
  v30 = *(_QWORD *)(v26 + 24);
  v31 = *(_BYTE *)(v26 + 32);
  sub_100176D88(*(_QWORD *)v26, v28, v29, v30, v31);
  v32 = *(_QWORD *)v25;
  v33 = *(_QWORD *)(v25 + 8);
  v34 = *(_QWORD *)(v25 + 16);
  v35 = *(_QWORD *)(v25 + 24);
  *(_QWORD *)v25 = v27;
  *(_QWORD *)(v25 + 8) = v28;
  *(_QWORD *)(v25 + 16) = v29;
  *(_QWORD *)(v25 + 24) = v30;
  v36 = *(_BYTE *)(v25 + 32);
  *(_BYTE *)(v25 + 32) = v31;
  sub_100176DD4(v32, v33, v34, v35, v36);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v37 = v7[10];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = type metadata accessor for Date(0);
  LODWORD(v30) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if ((_DWORD)v30)
  {
    if (!v41)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v42 = *(_QWORD *)(v40 - 8);
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v42 + 8))(v38, v40);
LABEL_13:
    v43 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v42 + 24))(v38, v39, v40);
LABEL_14:
  v44 = v7[11];
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  v47 = type metadata accessor for TimeZone(0);
  v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v47);
  v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  v50 = *(_QWORD *)(v47 - 8);
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v45, v47);
LABEL_19:
    v51 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(v50 + 24))(v45, v46, v47);
LABEL_20:
  v52 = v7[12];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  *v53 = *v54;
  v55 = v54[1];
  v53[1] = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease();
  v56 = v7[13];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  *v57 = *v58;
  v59 = v58[1];
  v57[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v60 = v7[15];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  *v61 = *v62;
  v63 = v62[1];
  v61[1] = v63;
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRelease();
  v64 = v7[16];
  v65 = (_QWORD *)(a1 + v64);
  v66 = (_QWORD *)(a2 + v64);
  *v65 = *v66;
  v67 = v66[1];
  v65[1] = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease();
  v68 = v7[17];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (_QWORD *)(a2 + v68);
  *v69 = *v70;
  v71 = v70[1];
  v69[1] = v71;
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRelease();
  v72 = v7[18];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v75 = v74[1];
  v73[1] = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease();
  v76 = v7[19];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (_QWORD *)(a2 + v76);
  *v77 = *v78;
  v79 = v78[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease();
  v80 = v7[20];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  *v81 = *v82;
  v83 = v82[1];
  v81[1] = v83;
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v84 = v7[22];
  v85 = a1 + v84;
  v86 = a2 + v84;
  v87 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 24))(v85, v86, v87);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v88 = v7[25];
  v89 = (_QWORD *)(a1 + v88);
  v90 = (_QWORD *)(a2 + v88);
  *v89 = *v90;
  v91 = v90[1];
  v89[1] = v91;
  swift_bridgeObjectRetain(v91);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v92 = *(int *)(a3 + 20);
  v93 = (uint64_t *)(a1 + v92);
  v94 = (uint64_t *)(a2 + v92);
  v95 = *v94;
  LOBYTE(v94) = *((_BYTE *)v94 + 8);
  v96 = *v93;
  *v93 = v95;
  *((_BYTE *)v93 + 8) = (_BYTE)v94;
  swift_retain();
  swift_release(v96);
  if (a1 != a2)
  {
    v97 = *(int *)(a3 + 24);
    v98 = (_QWORD *)(a1 + v97);
    v99 = (_QWORD *)(a2 + v97);
    sub_100021A14(a1 + v97, &qword_100BC2990);
    v100 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v99) == 1)
    {
      v101 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v98, v99, v101);
      v102 = 1;
    }
    else
    {
      *v98 = *v99;
      swift_retain();
      v102 = 0;
    }
    swift_storeEnumTagMultiPayload(v98, v100, v102);
  }
  return a1;
}

uint64_t sub_100349188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  v11 = v7[7];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload(v13) == 1)
  {
    v15 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
    {
      v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v21 = v7[10];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    v25 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  v26 = v7[11];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = type metadata accessor for TimeZone(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    v30 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  *(_OWORD *)(a1 + v7[12]) = *(_OWORD *)(a2 + v7[12]);
  *(_OWORD *)(a1 + v7[13]) = *(_OWORD *)(a2 + v7[13]);
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  *(_OWORD *)(a1 + v7[15]) = *(_OWORD *)(a2 + v7[15]);
  *(_OWORD *)(a1 + v7[16]) = *(_OWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_OWORD *)(a1 + v7[18]) = *(_OWORD *)(a2 + v7[18]);
  *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
  *(_OWORD *)(a1 + v7[20]) = *(_OWORD *)(a2 + v7[20]);
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v31 = v7[22];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  *(_OWORD *)(a1 + v7[25]) = *(_OWORD *)(a2 + v7[25]);
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v35 = *(int *)(a3 + 20);
  v36 = *(int *)(a3 + 24);
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v39 = (void *)(a1 + v36);
  v40 = (const void *)(a2 + v36);
  v41 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v40) == 1)
  {
    v42 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
    swift_storeEnumTagMultiPayload(v39, v41, 1);
  }
  else
  {
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100349564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  const void *v104;
  uint64_t v105;
  uint64_t v106;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v16 = v7[7];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_1000215BC(a1 + v16, type metadata accessor for ListLocationRowPrimaryText);
    v19 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload(v18) == 1)
    {
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  v22 = v7[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_BYTE *)(v24 + 32);
  v26 = *(_QWORD *)v23;
  v27 = *(_QWORD *)(v23 + 8);
  v28 = *(_QWORD *)(v23 + 16);
  v29 = *(_QWORD *)(v23 + 24);
  v30 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v30;
  v31 = *(_BYTE *)(v23 + 32);
  *(_BYTE *)(v23 + 32) = v25;
  sub_100176DD4(v26, v27, v28, v29, v31);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v32 = v7[10];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = type metadata accessor for Date(0);
  v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v38 = *(_QWORD *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v33, v35);
LABEL_13:
    v39 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 40))(v33, v34, v35);
LABEL_14:
  v40 = v7[11];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = type metadata accessor for TimeZone(0);
  v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v43);
  v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  v46 = *(_QWORD *)(v43 - 8);
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v41, v43);
LABEL_19:
    v47 = sub_1000BA294(&qword_100BCCC50);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(v46 + 40))(v41, v42, v43);
LABEL_20:
  v48 = v7[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v53 = v7[13];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v58 = v7[15];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (uint64_t *)(a2 + v58);
  v62 = *v60;
  v61 = v60[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  v63 = v7[16];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (uint64_t *)(a2 + v63);
  v67 = *v65;
  v66 = v65[1];
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  v68 = v7[17];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v72 = *v70;
  v71 = v70[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
  v73 = v7[18];
  v74 = (_QWORD *)(a1 + v73);
  v75 = (uint64_t *)(a2 + v73);
  v77 = *v75;
  v76 = v75[1];
  *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  v78 = v7[19];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (uint64_t *)(a2 + v78);
  v82 = *v80;
  v81 = v80[1];
  *v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  v83 = v7[20];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (uint64_t *)(a2 + v83);
  v87 = *v85;
  v86 = v85[1];
  *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  v88 = v7[22];
  v89 = a1 + v88;
  v90 = a2 + v88;
  v91 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 40))(v89, v90, v91);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v92 = v7[25];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (uint64_t *)(a2 + v92);
  v96 = *v94;
  v95 = v94[1];
  *v93 = v96;
  v93[1] = v95;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[26]) = *(_QWORD *)(a2 + v7[26]);
  v97 = *(int *)(a3 + 20);
  v98 = (uint64_t *)(a1 + v97);
  v99 = (uint64_t *)(a2 + v97);
  v100 = *v99;
  LOBYTE(v99) = *((_BYTE *)v99 + 8);
  v101 = *v98;
  *v98 = v100;
  *((_BYTE *)v98 + 8) = (_BYTE)v99;
  swift_release(v101);
  if (a1 != a2)
  {
    v102 = *(int *)(a3 + 24);
    v103 = (void *)(a1 + v102);
    v104 = (const void *)(a2 + v102);
    sub_100021A14(a1 + v102, &qword_100BC2990);
    v105 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v104) == 1)
    {
      v106 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v103, v104, v106);
      swift_storeEnumTagMultiPayload(v103, v105, 1);
    }
    else
    {
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100349ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100349AC8);
}

void sub_100349AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000C53F8();
  sub_100088FF0();
  if (v7)
  {
    v8 = v6;
    v9 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 254)
    {
      sub_10009C0DC(a1 + *(int *)(a3 + 20));
      sub_100079F70();
      return;
    }
    v8 = sub_1000BA294(&qword_100BD8F08);
    v9 = a1 + *(int *)(a3 + 24);
  }
  sub_1000B250C(v9, a2, v8);
}

uint64_t sub_100349B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100349B48);
}

void sub_100349B48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000C53F8();
  sub_10009D2E8();
  if (v9)
  {
    v10 = v8;
    v11 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      sub_1000F3F84();
      sub_100079F70();
      return;
    }
    v10 = sub_1000BA294(&qword_100BD8F08);
    v11 = a1 + *(int *)(a4 + 24);
  }
  sub_1000987C4(v11, a2, a2, v10);
}

void sub_100349BBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for ListLocationViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100996080;
    sub_100335124(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_100349C48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v0 = sub_100075EB0(&qword_100BD9220);
  sub_100345634((uint64_t)&unk_100BD9298);
  v3[0] = v0;
  v3[1] = v1;
  return sub_10009885C((uint64_t)v3, (uint64_t)&opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>);
}

void sub_100349CB0()
{
  sub_10034AEE4((uint64_t)&unk_100BD9728);
}

uint64_t sub_100349CDC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1870, 1);
}

uint64_t sub_100349CEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1848, 1);
}

uint64_t sub_100349CFC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1820, 1);
}

uint64_t sub_100349D0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB17F8, 1);
}

uint64_t sub_100349D1C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB17D0, 1);
}

unint64_t sub_100349D34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD97B0;
  if (!qword_100BD97B0)
  {
    v1 = sub_100075EB0(&qword_100BD97A8);
    sub_100349DB8();
    sub_10034AEE4((uint64_t)&qword_100BCD8A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD97B0);
  }
  return result;
}

unint64_t sub_100349DB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD97B8;
  if (!qword_100BD97B8)
  {
    v1 = sub_100075EB0(&qword_100BD97C0);
    sub_10034A030((uint64_t)&qword_100BD76C0);
    sub_10034AEE4((uint64_t)&qword_100BC4E20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD97B8);
  }
  return result;
}

unint64_t sub_100349E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD97F8;
  if (!qword_100BD97F8)
  {
    v1 = sub_100075EB0(&qword_100BD97F0);
    sub_100349EE0();
    sub_10034AEE4((uint64_t)&unk_100BD9830);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD97F8);
  }
  return result;
}

unint64_t sub_100349EE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9800;
  if (!qword_100BD9800)
  {
    v1 = sub_100075EB0(&qword_100BD97E0);
    sub_100345634((uint64_t)&unk_100BD9808);
    sub_10030C658((uint64_t)&unk_100BD9820);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9800);
  }
  return result;
}

unint64_t sub_100349F8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9810;
  if (!qword_100BD9810)
  {
    v1 = sub_100075EB0(&qword_100BD9818);
    sub_10030C658((uint64_t)&unk_100BD9820);
    sub_10034AEE4((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9810);
  }
  return result;
}

void sub_10034A030(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000AE8E8(0, v3);
    sub_10034AEE4(v2);
    atomic_store(sub_100098C44((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

uint64_t sub_10034A08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  sub_1000986AC();
  v1 = *(_QWORD *)(type metadata accessor for DescriptionView(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRelease();
  v5 = v0 + v3;
  v6 = sub_1000BE878();
  sub_1000987E0(v6);
  v7 = (int *)sub_1000C53F8();
  sub_1000BA548(v0 + v3 + v7[6]);
  v8 = sub_1000D0CA0();
  if (sub_100094FAC(v8) == 1)
  {
    v9 = sub_100098778();
    if (!sub_1000C24F4(v9))
      sub_1000BBCFC();
  }
  else
  {
    sub_1000B3B94();
  }
  sub_1000C5400(v5 + v7[8]);
  v10 = sub_100098778();
  if (!sub_1000C24F4(v10))
    sub_1000BBCFC();
  v11 = sub_1000C1DF8();
  if (!sub_1000C24F4(v11))
    sub_1000BBCFC();
  v12 = v2 | 7;
  sub_1000BA548(v5 + v7[12]);
  sub_1000BA548(v5 + v7[13]);
  sub_1000BA548(v5 + v7[15]);
  sub_1000BA548(v5 + v7[16]);
  sub_1000BA548(v5 + v7[17]);
  sub_1000BA548(v5 + v7[18]);
  sub_1000BA548(v5 + v7[19]);
  sub_1000BA548(v5 + v7[20]);
  v13 = v5 + v7[22];
  sub_1000BE880();
  sub_1000C092C();
  v14(v13);
  sub_1000BA548(v5 + v7[25]);
  sub_10011E7C4();
  return sub_1000BBBC0(v0, v3 + v4, v12);
}

void sub_10034A1E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  type metadata accessor for DescriptionView(0);
  sub_10033ACA4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

double sub_10034A248(uint64_t a1, void *a2)
{
  Class isa;
  double v4;
  double v5;

  type metadata accessor for Key(0);
  sub_10007A100((uint64_t)&qword_100BC2CC0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a2, "sizeWithAttributes:", isa, swift_bridgeObjectRelease().n128_f64[0]);
  v5 = v4;

  return v5;
}

void sub_10034A2F0()
{
  EnvironmentValues.timeZone.getter();
  sub_10004A298();
}

uint64_t sub_10034A310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1000986AC();
  sub_1000FDA20();
  sub_1000EF9A4();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = v1 + v3;
  v7 = sub_1000BE878();
  sub_1000987E0(v7);
  v8 = (int *)sub_1000C53F8();
  sub_1000BA548(v1 + v3 + v8[6]);
  v9 = sub_1000D0CA0();
  if (sub_100094FAC(v9) == 1)
  {
    v10 = sub_100098778();
    if (!sub_1000C24F4(v10))
      sub_1000BBCFC();
  }
  else
  {
    sub_1000B3B94();
  }
  sub_1000C5400(v6 + v8[8]);
  v11 = sub_100098778();
  if (!sub_1000C24F4(v11))
    sub_1000BBCFC();
  v12 = sub_1000C1DF8();
  if (!sub_1000C24F4(v12))
    sub_1000BBCFC();
  sub_1000BA548(v6 + v8[12]);
  sub_1000BA548(v6 + v8[13]);
  sub_1000BA548(v6 + v8[15]);
  sub_1000BA548(v6 + v8[16]);
  sub_1000BA548(v6 + v8[17]);
  sub_1000BA548(v6 + v8[18]);
  sub_1000BA548(v6 + v8[19]);
  sub_1000BA548(v6 + v8[20]);
  v13 = sub_1000BE880();
  sub_1000989A0(v13);
  sub_1000BA548(v6 + v8[25]);
  sub_10011E7C4();
  v14 = v6 + *(int *)(v0 + 24);
  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v14) == 1)
  {
    v15 = sub_10003BC60();
    sub_10003BC44(v15);
  }
  else
  {
    sub_1000C6DD4();
  }
  return sub_1000BBBC0(v1, v3 + v5, v2 | 7);
}

void sub_10034A478()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000FDA20();
  v0 = sub_10009DACC();
  sub_100339828(v0, v1);
}

void sub_10034A49C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;

  if (!sub_10009987C(a1))
  {
    sub_100098C3C(0, v2);
    sub_1000B3B8C();
    atomic_store(sub_1000C0160((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_10034A4E8()
{
  unint64_t result;

  result = qword_100BD98A8;
  if (!qword_100BD98A8)
  {
    result = swift_getWitnessTable(&unk_1009965A8, &unk_100B6E3A8);
    atomic_store(result, (unint64_t *)&qword_100BD98A8);
  }
  return result;
}

unint64_t sub_10034A524()
{
  unint64_t result;

  result = qword_100BD98C0;
  if (!qword_100BD98C0)
  {
    result = swift_getWitnessTable(&unk_100996558, &unk_100B6E328);
    atomic_store(result, (unint64_t *)&qword_100BD98C0);
  }
  return result;
}

void sub_10034A560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_bridgeObjectRetain(a4);
    sub_1000C6DCC(a2);
  }
  else
  {
    sub_10034A59C(a1, a2, a3, a4, a5 & 1);
    sub_10004A298();
  }
}

uint64_t sub_10034A59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRetain(a4);
    return sub_1000C6DCC(a2);
  }
  return result;
}

void sub_10034A5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1000BD200(a4);
  }
  else
  {
    sub_10034A604(a1, a2, a3, a4, a5 & 1);
    sub_10004A298();
  }
}

double sub_10034A604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return sub_1000BD200(a4);
  }
  return result;
}

void type metadata accessor for SecondaryTextView()
{
  sub_100098884();
}

double sub_10034A654(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1000BD200(*(_QWORD *)(a1 + 24));
}

void sub_10034A678(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  sub_10004A298();
}

_QWORD *assignWithCopy for WindComponentRowViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

void sub_10034A71C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  sub_10004A298();
}

void type metadata accessor for LargeSecondaryTextView()
{
  sub_100098884();
}

unint64_t sub_10034A76C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD98F0;
  if (!qword_100BD98F0)
  {
    v1 = sub_100075EB0(&qword_100BD9760);
    sub_10034A7F0();
    sub_10034AEE4((uint64_t)&unk_100BD9920);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD98F0);
  }
  return result;
}

unint64_t sub_10034A7F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD98F8;
  if (!qword_100BD98F8)
  {
    v1 = sub_100075EB0(&qword_100BD9758);
    sub_10034A874();
    sub_10034AEE4((uint64_t)&unk_100BD9918);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD98F8);
  }
  return result;
}

unint64_t sub_10034A874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9900;
  if (!qword_100BD9900)
  {
    v1 = sub_100075EB0(&qword_100BD9750);
    sub_10034AEE4((uint64_t)&unk_100BD9908);
    sub_10034AEE4((uint64_t)&unk_100BD9910);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9900);
  }
  return result;
}

unint64_t sub_10034A910()
{
  return sub_10034AE2C((uint64_t)&unk_100BD9928);
}

unint64_t sub_10034A948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9930;
  if (!qword_100BD9930)
  {
    v1 = sub_100075EB0(&qword_100BD9938);
    sub_100349E5C();
    sub_10034A030((uint64_t)&qword_100BCD890);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9930);
  }
  return result;
}

void sub_10034A9D4()
{
  sub_100345634((uint64_t)&unk_100BD9940);
}

unint64_t sub_10034AA08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9948;
  if (!qword_100BD9948)
  {
    v1 = sub_100075EB0(&qword_100BD9860);
    sub_10034AEE4((uint64_t)&unk_100BD9950);
    sub_10034AEE4((uint64_t)&qword_100BC3AE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9948);
  }
  return result;
}

unint64_t sub_10034AAA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9958;
  if (!qword_100BD9958)
  {
    v1 = sub_100075EB0(&qword_100BD9960);
    sub_10034AB2C();
    sub_10034AEE4((uint64_t)&unk_100BD9998);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9958);
  }
  return result;
}

unint64_t sub_10034AB2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9968;
  if (!qword_100BD9968)
  {
    v1 = sub_100075EB0(&qword_100BD9970);
    sub_10034ABB0();
    sub_10034AEE4((uint64_t)&qword_100BC4E20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9968);
  }
  return result;
}

unint64_t sub_10034ABB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9978;
  if (!qword_100BD9978)
  {
    v1 = sub_100075EB0(&qword_100BD9980);
    sub_10034AC14();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9978);
  }
  return result;
}

unint64_t sub_10034AC14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9988;
  if (!qword_100BD9988)
  {
    v1 = sub_100075EB0(&qword_100BD9990);
    sub_10034AEE4((uint64_t)&unk_100BD9888);
    sub_10034AEE4((uint64_t)&unk_100BD9890);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9988);
  }
  return result;
}

uint64_t sub_10034ACB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB18C0, 1);
}

uint64_t sub_10034ACC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1898, 1);
}

unint64_t sub_10034ACD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD99B8;
  if (!qword_100BD99B8)
  {
    v1 = sub_100075EB0(&qword_100BD99A8);
    sub_10034AD54();
    sub_10034AEE4((uint64_t)&unk_100C0A520);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD99B8);
  }
  return result;
}

unint64_t sub_10034AD54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD99C0;
  if (!qword_100BD99C0)
  {
    v1 = sub_100075EB0(&qword_100BD99C8);
    sub_10030C658((uint64_t)&qword_100BD99D0);
    sub_10034AEE4((uint64_t)&qword_100BCD8A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD99C0);
  }
  return result;
}

unint64_t sub_10034ADF8()
{
  return sub_10034AE2C((uint64_t)&unk_100BD9AF8);
}

unint64_t sub_10034AE2C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  unint64_t result;
  uint64_t *v4;
  _QWORD v5[2];

  result = sub_10009987C(a1);
  if (!result)
  {
    sub_1000AE8E8(0, v4);
    sub_100075EB0(v2);
    v5[0] = v2;
    v5[1] = sub_1000B3B8C();
    sub_10009885C((uint64_t)v5, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = sub_100098C44((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, v1);
  }
  return result;
}

void sub_10034AEB8()
{
  sub_10034AEE4((uint64_t)&unk_100BD9B08);
}

void sub_10034AEE4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  if (!sub_10009987C(a1))
  {
    v3 = sub_100098C3C(0, v2);
    atomic_store(sub_10003BC38(v3), v1);
  }
  sub_10004A298();
}

uint64_t sub_10034AF10()
{
  return sub_100345384();
}

uint64_t type metadata accessor for StubExtendedAppLaunchManager()
{
  return objc_opt_self(_TtC7Weather28StubExtendedAppLaunchManager);
}

uint64_t sub_10034AF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  _QWORD *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  __int128 aBlock;
  __int128 v66;
  uint64_t (*v67)();
  _QWORD *v68;

  v8 = v7;
  v63 = a6;
  v64 = a5;
  v14 = type metadata accessor for MainAction(0);
  sub_10009D98C();
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchWorkItemFlags(0);
  v61 = *(_QWORD *)(v18 - 8);
  v62 = v18;
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v60 = v20;
  v21 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v21 - 8);
  v59 = v21;
  sub_10009D98C();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v57 = v23;
  v24 = type metadata accessor for DispatchTime(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_BYTE *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v8 + 48) = a1;
  v31 = a2;
  v32 = a4;
  *(_QWORD *)(v8 + 56) = v31;
  *(_QWORD *)(v8 + 64) = a3;
  v33 = v63;
  v34 = v64;
  *(_QWORD *)(v8 + 72) = v32;
  *(_QWORD *)(v8 + 80) = v34;
  *(_QWORD *)(v8 + 88) = v33;
  *(_QWORD *)(v8 + 96) = 0x4014000000000000;
  *(_BYTE *)(v8 + 104) = a7;
  if ((a7 & 1) != 0)
  {
    v35 = v29;
    v56 = v29;
    v53 = (char *)&v53 - v30;
    sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
    swift_retain();
    sub_1000C3528();
    sub_1000B2518();
    v54 = static OS_dispatch_queue.main.getter(v36);
    static DispatchTime.now()(v54);
    + infix(_:_:)(v28);
    v55 = *(void (**)(char *, uint64_t))(v25 + 8);
    v55(v28, v35);
    v37 = (_QWORD *)sub_1000C4838((uint64_t)&unk_100B6E558);
    v37[2] = v8;
    v37[3] = v34;
    v37[4] = v33;
    v67 = sub_10034C458;
    v68 = v37;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v66 = sub_100121D84;
    *((_QWORD *)&v66 + 1) = &unk_100B6E570;
    v38 = _Block_copy(&aBlock);
    v39 = v68;
    sub_1000B2518();
    swift_retain();
    v40 = swift_release(v39);
    v41 = v57;
    static DispatchQoS.unspecified.getter(v40);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    v43 = v42;
    v44 = sub_1000BA294(&qword_100BD4F10);
    sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
    v45 = v60;
    v46 = v44;
    v47 = v62;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v46, v48, v62, v43);
    v50 = v53;
    v49 = (void *)v54;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v53, v41, v45, v38);
    _Block_release(v38);
    sub_100089020();
    sub_1000B439C();
    swift_release(v33);

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v45, v47);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v41, v59);
    v55(v50, v56);
  }
  else
  {
    v51 = type metadata accessor for EnvironmentAction(0);
    swift_storeEnumTagMultiPayload(v17, v51, 11);
    swift_storeEnumTagMultiPayload(v17, v14, 2);
    v67 = 0;
    aBlock = 0u;
    v66 = 0u;
    swift_retain();
    sub_1000C3528();
    sub_1000B2518();
    sub_1000A5EBC((uint64_t)v17, (uint64_t)&aBlock, v34);
    sub_1000B439C();
    swift_release(v31);
    sub_100021A14((uint64_t)&aBlock, (uint64_t *)&unk_100BFFA10);
    sub_1000A0AA4((uint64_t)v17);
    sub_100089020();
  }
  return v8;
}

uint64_t sub_10034B318(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(__n128);
  uint64_t (*v18)(__n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t (*v33)(__n128);
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  _OWORD v36[2];
  uint64_t v37;

  v35 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v35);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  result = __chkstk_darwin(v12);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 32) & 1) == 0)
  {
    v17 = *(uint64_t (**)(__n128))(a1 + 16);
    if (v17)
    {
      v34 = a2;
      *(_BYTE *)(a1 + 32) = 1;
      v18 = v17;
      v19 = swift_retain();
      v32 = v20;
      v33 = v18;
      v21 = v18(v19);
      v22 = static Logger.automation.getter(v21);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        v31[1] = a3;
        v26 = v25;
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Reported end of extended app launch with delay", v25, 2u);
        swift_slowDealloc(v26, -1, -1);
      }

      v27 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      v28 = static os_signpost_type_t.event.getter(v27);
      sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
      v29 = (void *)OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0x6974616D6F747541, 0xEA00000000006E6FLL);
      static OSSignpostID.exclusive.getter();
      os_signpost(_:dso:log:name:signpostID:)(v28, &_mh_execute_header, v29, "Weather:reported end of extended app launch with delay", 54, 2, v11);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v30 = type metadata accessor for EnvironmentAction(0);
      swift_storeEnumTagMultiPayload(v7, v30, 11);
      swift_storeEnumTagMultiPayload(v7, v35, 2);
      v37 = 0;
      memset(v36, 0, sizeof(v36));
      sub_1000A5EBC((uint64_t)v7, (uint64_t)v36, v34);
      sub_1000BF8D0((uint64_t)v33, v32);
      sub_100021A14((uint64_t)v36, (uint64_t *)&unk_100BFFA10);
      return sub_1000A0AA4((uint64_t)v7);
    }
  }
  return result;
}

double sub_10034B5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double result;

  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_1000BF8D0(v5, v4);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_10034B608()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v2 = v0;
  v3 = type metadata accessor for OSSignpostID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100079FBC();
  v9 = sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
  *v1 = static OS_dispatch_queue.main.getter(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v7);
  v10 = _dispatchPreconditionTest(_:)(v1);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v1, v7);
  if ((v10 & 1) != 0)
  {
    if (*(_BYTE *)(v2 + 104) == 1 && (*(_BYTE *)(v2 + 32) & 1) == 0)
    {
      v12 = *(_QWORD *)(v2 + 16);
      if (v12)
      {
        v13 = *(_QWORD *)(v2 + 24);
        *(_BYTE *)(v2 + 32) = 1;
        sub_1000C3528();
        v15 = static os_signpost_type_t.event.getter(v14);
        sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
        v16 = (void *)OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0x6974616D6F747541, 0xEA00000000006E6FLL);
        static OSSignpostID.exclusive.getter();
        os_signpost(_:dso:log:name:signpostID:)(v15, &_mh_execute_header, v16, "Weather:schedule reporting end of extended app launch", 53, 2, v6);

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        v18 = swift_allocObject(&unk_100B6E4E0, 24, 7);
        swift_weakInit(v18 + 16);
        v19 = (_QWORD *)sub_1000C4838((uint64_t)&unk_100B6E508);
        v19[2] = v12;
        v19[3] = v13;
        v19[4] = v18;
        aBlock[4] = sub_10034BEE0;
        v23 = v19;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B6E520;
        v20 = _Block_copy(aBlock);
        v21 = v23;
        sub_1000C3528();
        objc_msgSend(v17, "installCACommitCompletionBlock:", v20, swift_release(v21).n128_f64[0]);
        _Block_release(v20);

        return sub_1000BF8D0(v12, v13);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10034B8B0(uint64_t (*a1)(__n128), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t Strong;
  double result;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  char v40[24];

  v5 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostID(0);
  v37 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a3 + 16;
  v17 = a1(v13);
  v18 = static Logger.automation.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    v36 = v16;
    v22 = v7;
    v23 = v8;
    v24 = v5;
    v25 = v21;
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Reported end of extended app launch", v21, 2u);
    v26 = v25;
    v5 = v24;
    v8 = v23;
    v7 = v22;
    v16 = v36;
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v28 = static os_signpost_type_t.event.getter(v27);
  sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
  v29 = (void *)OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0x6974616D6F747541, 0xEA00000000006E6FLL);
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)(v28, &_mh_execute_header, v29, "Weather:reported end of extended app launch", 43, 2, v10);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  swift_beginAccess(v16, v40, 0, 0);
  Strong = swift_weakLoadStrong(v16);
  if (Strong)
  {
    v32 = Strong;
    v33 = *(uint64_t (**)(uint64_t))(Strong + 80);
    v34 = *(_QWORD *)(Strong + 88);
    swift_retain();
    swift_release(v32);
    v35 = type metadata accessor for EnvironmentAction(0);
    swift_storeEnumTagMultiPayload(v7, v35, 11);
    swift_storeEnumTagMultiPayload(v7, v5, 2);
    v39 = 0;
    memset(v38, 0, sizeof(v38));
    sub_1000A5EBC((uint64_t)v7, (uint64_t)v38, v33);
    sub_100021A14((uint64_t)v38, (uint64_t *)&unk_100BFFA10);
    sub_1000A0AA4((uint64_t)v7);
    *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  }
  return result;
}

void sub_10034BB9C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1000BF8D0(v0[2], v0[3]);
  swift_bridgeObjectRelease();
  v1 = v0[7];
  swift_release(v0[9]);
  swift_release(v1);
  swift_release(v0[11]);
  sub_10004A298();
}

uint64_t sub_10034BBE0()
{
  uint64_t v0;

  sub_10034BB9C();
  return swift_deallocClassInstance(v0, 105, 7);
}

double sub_10034BC00(uint64_t a1, uint64_t a2)
{
  return sub_10034B5D8(a1, a2);
}

uint64_t sub_10034BC20()
{
  return sub_10034B608();
}

uint64_t sub_10034BC40()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1009967C8);
  v4 = v0;
  sub_10000F1C8(&qword_100BD9E70, type metadata accessor for ExtendedAppLaunchState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  sub_100089020();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_10034BCC0(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  char v7;

  KeyPath = swift_getKeyPath(&unk_1009967C8);
  v6 = v1;
  v7 = a1;
  sub_10034BD1C(KeyPath, (uint64_t)sub_100152DD0, (uint64_t)&v5);
  return sub_1000B439C();
}

uint64_t sub_10034BD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  sub_10000F1C8(&qword_100BD9E70, type metadata accessor for ExtendedAppLaunchState);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, a1, a2, a3, &type metadata for () + 1, v6);
}

uint64_t sub_10034BDBC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ObservationRegistrar(0);
  sub_10003BC44(v1);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10034BDFC()
{
  return type metadata accessor for ExtendedAppLaunchState(0);
}

uint64_t type metadata accessor for ExtendedAppLaunchState(uint64_t a1)
{
  return sub_100098190(a1, qword_100BD9D10, (uint64_t)&nominal type descriptor for ExtendedAppLaunchState);
}

uint64_t sub_10034BE18(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1009966C8;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10034BE90()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034BEB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10034BEE0()
{
  uint64_t v0;

  return sub_10034B8B0(*(uint64_t (**)(__n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_10034BEEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;

  v4 = sub_1000CCBC4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD9E48);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100079FBC();
  sub_10034CBC0(v1, (uint64_t)v7);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_100B6E5A8, v11 + v6, v10 | 7);
  sub_10034CC08((uint64_t)v7, v12 + v11);
  v13 = sub_1000BA294(&qword_100BD9E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v2, a1, v13);
  v14 = (uint64_t (**)())(v2 + *(int *)(v8 + 36));
  *v14 = sub_10034CC4C;
  v14[1] = (uint64_t (*)())v12;
  v14[2] = 0;
  v14[3] = 0;
  v15 = (uint64_t *)(v1 + *(int *)(v4 + 24));
  v17 = *v15;
  v16 = v15[1];
  v23[1] = v17;
  v23[2] = v16;
  v18 = sub_1000BA294(&qword_100BD9E58);
  State.wrappedValue.getter(&v24, v18);
  v19 = v24;
  v20 = type metadata accessor for ExtendedAppLaunchState(0);
  v21 = sub_10034CC58();
  sub_10000F1C8(&qword_100BD9E70, type metadata accessor for ExtendedAppLaunchState);
  View.environment<A>(_:)(v19, v8, v20, v21, v22);
  swift_release(v19);
  sub_100021A14(v2, &qword_100BD9E48);
}

uint64_t sub_10034C0A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[3];
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_100043CA8(a1, (uint64_t)aBlock);
  v11 = v30;
  v12 = v31;
  sub_1000DB418(aBlock, (uint64_t)v30);
  sub_10034CBC0(a1, (uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_100B6E5D0, v14 + v10, v13 | 7);
  sub_10034CC08((uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  (*((void (**)(uint64_t (*)(), uint64_t, void *, uint64_t (*)()))v12 + 1))(sub_10034CDB4, v15, v11, v12);
  swift_release(v15);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(aBlock);
  v16 = sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v31 = sub_10034C420;
  v32 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100121D84;
  v30 = &unk_100B6E5E8;
  v18 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v21 = v20;
  v22 = sub_1000BA294(&qword_100BD4F10);
  sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v2, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
}

double sub_10034C344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _QWORD v13[3];
  uint64_t v14;

  v2 = type metadata accessor for FinishLaunchTestAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  sub_100159084();
  FinishLaunchTestAction.callAsFunction()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = (uint64_t *)(a1 + *(int *)(v6 + 24));
  v9 = *v7;
  v8 = v7[1];
  v13[1] = v9;
  v13[2] = v8;
  v10 = sub_1000BA294(&qword_100BD9E58);
  State.wrappedValue.getter(&v14, v10);
  v11 = v14;
  sub_10034BCC0(0);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_10034C420()
{
  return TFCompletedStartup(14);
}

uint64_t sub_10034C42C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10034C458()
{
  uint64_t v0;

  return sub_10034B318(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10034C464(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)(v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = sub_1000BA294((uint64_t *)&unk_100C09F20);
    if (swift_getEnumCaseMultiPayload(v10) == 1)
    {
      v12 = type metadata accessor for FinishLaunchTestAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 24);
    v16 = (_QWORD *)(v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_retain();
  }
  swift_retain();
  return v4;
}

double sub_10034C578(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  double result;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  sub_1000BA294((uint64_t *)&unk_100C09F20);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for FinishLaunchTestAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release(*v4);
  }
  v6 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  swift_release(*v6);
  *(_QWORD *)&result = swift_release(v6[1]).n128_u64[0];
  return result;
}

uint64_t sub_10034C608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = sub_1000BA294((uint64_t *)&unk_100C09F20);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    v11 = type metadata accessor for FinishLaunchTestAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_10034C6EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_100094D04(a1, a2);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_100021A14((uint64_t)a1 + v6, (uint64_t *)&unk_100C09F20);
    v9 = sub_1000BA294((uint64_t *)&unk_100C09F20);
    if (swift_getEnumCaseMultiPayload(v8) == 1)
    {
      v10 = type metadata accessor for FinishLaunchTestAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)((char *)a2 + v14);
  v18 = *(_QWORD *)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = v17;
  swift_retain();
  swift_release(v18);
  v19 = *((_QWORD *)v15 + 1);
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release(v19);
  return a1;
}

uint64_t sub_10034C7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1000BA294((uint64_t *)&unk_100C09F20);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    v11 = type metadata accessor for FinishLaunchTestAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10034C8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_100021A14(a1 + v7, (uint64_t *)&unk_100C09F20);
    v10 = sub_1000BA294((uint64_t *)&unk_100C09F20);
    if (swift_getEnumCaseMultiPayload(v9) == 1)
    {
      v11 = type metadata accessor for FinishLaunchTestAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = (_QWORD *)(a2 + v12);
  v15 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *v14;
  swift_release(v15);
  v16 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v13 + 8) = v14[1];
  swift_release(v16);
  return a1;
}

uint64_t sub_10034C9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034C9D8);
}

uint64_t sub_10034C9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BD9DA0);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_10034CA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034CA5C);
}

uint64_t sub_10034CA5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD9DA0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MonitorAppLaunchStateViewModifier(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BD9E00, (uint64_t)&nominal type descriptor for MonitorAppLaunchStateViewModifier);
}

void sub_10034CAE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  sub_10034CB5C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100996760;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_10034CB5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BD9E10)
  {
    v2 = type metadata accessor for FinishLaunchTestAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BD9E10);
  }
}

uint64_t sub_10034CBB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB19F8, 1);
}

uint64_t sub_10034CBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034CC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034CC4C()
{
  return sub_10034CDC0(sub_10034C0A0);
}

unint64_t sub_10034CC58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD9E60;
  if (!qword_100BD9E60)
  {
    v1 = sub_100075EB0(&qword_100BD9E48);
    sub_10003D2DC(&qword_100BD9E68, &qword_100BD9E50);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD9E60);
  }
  return result;
}

uint64_t sub_10034CCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = sub_1000CCBC4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v4));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  sub_1000BA294((uint64_t *)&unk_100C09F20);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for FinishLaunchTestAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release(*v6);
  }
  v8 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  swift_release(*v8);
  swift_release(v8[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10034CDB4()
{
  return sub_10034CDC0((uint64_t (*)(uint64_t))sub_10034C344);
}

uint64_t sub_10034CDC0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000CCBC4() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_10034CDF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_10034BC40();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10034CE24(char *a1)
{
  return sub_10034BCC0(*a1);
}

uint64_t sub_10034CE48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v0 = sub_100075EB0(&qword_100BD9E48);
  v1 = type metadata accessor for ExtendedAppLaunchState(255);
  v2 = sub_10034CC58();
  sub_10000F1C8(&qword_100BD9E70, type metadata accessor for ExtendedAppLaunchState);
  v5[0] = v0;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
}

void sub_10034CEE0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_10009883C();
  v8 = v6 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_10009883C();
  v19 = v17 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v26 - v21;
  v23 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v27 = v24;
  swift_release(v23);
  sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_map, v15, type metadata accessor for LocationViewComponent);
  a2(v15);
  sub_10009D530();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v4);
  sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_airQuality, v15, type metadata accessor for LocationViewComponent);
  a2(v15);
  sub_10009D530();
  sub_10003773C((uint64_t)v22, v19, &qword_100BC4A98);
  sub_10008611C((uint64_t)v11, v8);
  v25 = type metadata accessor for ElevatedAqiContent._Storage(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  sub_1001DA944(v27, v19, v8);
  sub_1000215BC((uint64_t)v11, type metadata accessor for LocationComponentContainerViewModel);
  sub_100021A14((uint64_t)v22, &qword_100BC4A98);
  sub_100098640();
}

void sub_10034D0CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 *v59;
  __n128 *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 *v86;
  uint64_t v87;
  uint64_t v88;
  __n128 *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  _BYTE v99[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000878BC();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = a1 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map, (uint64_t)v99);
  sub_10003773C(v11, v5, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6) == 1)
  {
    sub_100021A14(v5, &qword_100BC4A98);
    v12 = sub_1000BA294(&qword_100BCC750);
    v13 = swift_allocObject(v12, 224, 7);
    *(_OWORD *)(v13 + 16) = xmmword_10098BCC0;
    v14 = sub_1000BA294(&qword_100BCC758);
    v15 = *(unsigned __int8 *)(v7 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = v15 | 7;
    v19 = v14;
    v20 = (__n128 *)sub_1000BA6B8(v14);
    v21 = sub_100099954(v20, (__n128)xmmword_10097CA50);
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_airQuality, (uint64_t)v21 + v16);
    *(_QWORD *)(v13 + 32) = sub_1000B4580();
    *(_QWORD *)(v13 + 40) = v22;
    *(_QWORD *)(v13 + 48) = v23;
    v24 = (__n128 *)sub_1000BA6B8(v19);
    sub_10009D458(v24);
    sub_10009F7F4(v25 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v26);
    *(_QWORD *)(v13 + 56) = sub_1000B4580();
    *(_QWORD *)(v13 + 64) = v27;
    *(_QWORD *)(v13 + 72) = v28;
    v96 = v19;
    v29 = (__n128 *)sub_1000BA6B8(v19);
    sub_10009D458(v29);
    sub_10009F7F4(v30 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v31);
    *(_QWORD *)(v13 + 80) = sub_100080C44((uint64_t)v29);
    *(_QWORD *)(v13 + 88) = v32;
    *(_QWORD *)(v13 + 96) = v33;
    v34 = (__n128 *)swift_allocObject(v19, v16 + 2 * v17, v18);
    v35 = (char *)sub_100099954(v34, (__n128)xmmword_10097DA20) + v16;
    v36 = *(_QWORD *)(a1 + 16);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v35);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v35[v17]);
    *(_QWORD *)(v13 + 104) = sub_1000B4580();
    *(_QWORD *)(v13 + 112) = v37;
    *(_QWORD *)(v13 + 120) = v38;
    v39 = (__n128 *)sub_1000BA6B8(v96);
    sub_1000B46B8(v39);
    sub_100095B78(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v35, type metadata accessor for LocationComponentContainerViewModel);
    sub_100098A1C(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v35[v17]);
    *(_QWORD *)(v13 + 128) = sub_1000B4580();
    *(_QWORD *)(v13 + 136) = v40;
    *(_QWORD *)(v13 + 144) = v41;
    v42 = (__n128 *)sub_1000BA6B8(v96);
    sub_1000B46B8(v42);
    sub_100095B78(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v35, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v35[v17], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v13 + 152) = sub_1000B4580();
    *(_QWORD *)(v13 + 160) = v43;
    *(_QWORD *)(v13 + 168) = v44;
    v45 = (__n128 *)sub_1000BA6B8(v96);
    sub_1000B46B8(v45);
    sub_100098A1C(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v35);
    sub_100098A1C(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v35[v17]);
    *(_QWORD *)(v13 + 176) = sub_1000B4580();
    *(_QWORD *)(v13 + 184) = v46;
    *(_QWORD *)(v13 + 192) = v47;
    v48 = swift_allocObject(v96, v16 + 2 * v17, v18);
    *(_OWORD *)(v48 + 16) = v98;
    v49 = *(_QWORD *)(a1 + 16);
    sub_100098A1C(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v16);
    sub_100098A1C(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v16 + v17);
    *(_QWORD *)(v13 + 200) = sub_100080C44(v48);
    *(_QWORD *)(v13 + 208) = v50;
    *(_QWORD *)(v13 + 216) = v51;
  }
  else
  {
    sub_10007C77C(v5, v10, type metadata accessor for LocationComponentContainerViewModel);
    v52 = sub_1000BA294(&qword_100BCC750);
    v53 = swift_allocObject(v52, 248, 7);
    *(_OWORD *)(v53 + 16) = xmmword_10098E040;
    v54 = sub_1000BA294(&qword_100BCC758);
    v97 = *(_QWORD *)(v7 + 72);
    v55 = *(unsigned __int8 *)(v7 + 80);
    v56 = (v55 + 32) & ~v55;
    v57 = v55 | 7;
    v58 = v54;
    v59 = (__n128 *)sub_1000BA6AC(v54);
    v60 = sub_100099954(v59, (__n128)xmmword_10097CA50);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_airQuality, (uint64_t)v60 + v56);
    *(_QWORD *)(v53 + 32) = sub_1000B4588();
    *(_QWORD *)(v53 + 40) = v61;
    *(_QWORD *)(v53 + 48) = v62;
    v63 = (__n128 *)sub_1000BA6AC(v58);
    sub_100098A48(v63);
    sub_1000B4590(v64 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v65);
    *(_QWORD *)(v53 + 56) = sub_1000B4588();
    *(_QWORD *)(v53 + 64) = v66;
    *(_QWORD *)(v53 + 72) = v67;
    v68 = (__n128 *)sub_1000BA6AC(v58);
    sub_100098A48(v68);
    sub_1000B4590(v69 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v70);
    *(_QWORD *)(v53 + 80) = sub_1000B4588();
    *(_QWORD *)(v53 + 88) = v71;
    *(_QWORD *)(v53 + 96) = v72;
    v73 = sub_1000BA6AC(v58);
    *(_OWORD *)(v73 + 16) = v98;
    sub_1000B4590(v10, v73 + v56);
    *(_QWORD *)(v53 + 104) = sub_1000B4580();
    *(_QWORD *)(v53 + 112) = v74;
    *(_QWORD *)(v53 + 120) = v75;
    v76 = (__n128 *)swift_allocObject(v58, v56 + 2 * v97, v57);
    v77 = (char *)sub_100099954(v76, (__n128)xmmword_10097DA20) + v56;
    v78 = *(_QWORD *)(a1 + 16);
    sub_1000B4590(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v77);
    sub_1000B4590(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v77[v97]);
    *(_QWORD *)(v53 + 128) = sub_1000B4588();
    *(_QWORD *)(v53 + 136) = v79;
    *(_QWORD *)(v53 + 144) = v80;
    v81 = sub_1000BA6AC(v58);
    *(_OWORD *)(v81 + 16) = v98;
    v82 = v81 + v56;
    v83 = *(_QWORD *)(a1 + 16);
    sub_100095B78(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, v81 + v56, type metadata accessor for LocationComponentContainerViewModel);
    sub_1000D94C0(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v82 + v97);
    *(_QWORD *)(v53 + 152) = sub_1000B4588();
    *(_QWORD *)(v53 + 160) = v84;
    *(_QWORD *)(v53 + 168) = v85;
    v86 = (__n128 *)sub_1000BA6AC(v58);
    sub_100098AE8(v86);
    sub_10008611C(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, v82);
    sub_10008611C(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v82 + v97);
    *(_QWORD *)(v53 + 176) = sub_1000B4588();
    *(_QWORD *)(v53 + 184) = v87;
    *(_QWORD *)(v53 + 192) = v88;
    v89 = (__n128 *)sub_1000BA6AC(v58);
    sub_100098AE8(v89);
    sub_1000D94C0(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, v82);
    sub_1000D94C0(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v82 + v97);
    *(_QWORD *)(v53 + 200) = sub_1000B4588();
    *(_QWORD *)(v53 + 208) = v90;
    *(_QWORD *)(v53 + 216) = v91;
    v92 = swift_allocObject(v58, v56 + 2 * v97, v57);
    *(_OWORD *)(v92 + 16) = v98;
    v93 = *(_QWORD *)(a1 + 16);
    sub_1000D94C0(v93 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v92 + v56);
    sub_1000D94C0(v93 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v92 + v56 + v97);
    *(_QWORD *)(v53 + 224) = sub_100080C44(v92);
    *(_QWORD *)(v53 + 232) = v94;
    *(_QWORD *)(v53 + 240) = v95;
    sub_1000215BC(v10, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_10034D7B8(char a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[32];

  v94 = a3;
  v5 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v93 = v7;
  __chkstk_darwin(v8);
  v92 = (uint64_t)&v69 - v9;
  __chkstk_darwin(v10);
  v91 = (uint64_t)&v69 - v11;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_10009883C();
  v19 = v17 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - v21;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_1000986FC();
  v90 = v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v69 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v69 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v69 - v32;
  if (a1)
  {
    if (a1 == 1)
    {
      if ((a2 & 1) != 0)
      {
        v34 = &qword_100BDA208;
        goto LABEL_11;
      }
    }
    else if ((a2 & 1) != 0)
    {
      v34 = &qword_100BDA598;
      goto LABEL_11;
    }
    v34 = &qword_100BDA3D0;
  }
  else if ((a2 & 1) != 0)
  {
    v34 = &qword_100BD9E78;
  }
  else
  {
    v34 = &qword_100BDA040;
  }
LABEL_11:
  v35 = *((_BYTE *)v34 + 224);
  v77 = *v34;
  v76 = v34[1];
  v75 = v34[2];
  v74 = v34[3];
  v36 = v34[8];
  v80 = v34[9];
  v81 = v36;
  v37 = v34[10];
  v78 = v34[11];
  v79 = v37;
  v38 = v34[24];
  v73 = v34[25];
  v72 = v34[26];
  v71 = v34[27];
  v39 = v34[45];
  v84 = v34[46];
  v85 = v39;
  v40 = v34[47];
  v82 = v34[48];
  v83 = v40;
  v41 = v34[53];
  v88 = v34[54];
  v89 = v41;
  v42 = v94 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map;
  v44 = v34[55];
  v43 = v34[56];
  v86 = v44;
  v87 = v43;
  sub_1000992EC(v94 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map, (uint64_t)v95);
  sub_10003773C(v42, v15, &qword_100BC4A98);
  v45 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v45) == 1)
  {
    sub_100021A14(v15, &qword_100BC4A98);
LABEL_16:
    v46 = 1;
    goto LABEL_17;
  }
  v70 = v38;
  sub_10009D3BC(v15 + *(int *)(v45 + 20), v19);
  sub_1000215BC(v15, type metadata accessor for LocationComponentContainerViewModel);
  sub_10007C77C(v19, (uint64_t)v22, type metadata accessor for LocationComponentViewModel);
  if ((v35 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v22, type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10007C77C((uint64_t)v22, (uint64_t)v30, type metadata accessor for LocationComponentViewModel);
  v46 = 0;
  v47 = &v30[*(int *)(v5 + 20)];
  v48 = v73;
  *(_QWORD *)v47 = v70;
  *((_QWORD *)v47 + 1) = v48;
  v49 = v71;
  *((_QWORD *)v47 + 2) = v72;
  *((_QWORD *)v47 + 3) = v49;
LABEL_17:
  sub_1000988B8((uint64_t)v30, v46);
  sub_1002228F0((uint64_t)v30, (uint64_t)v33);
  sub_10009D3BC(v94 + *(int *)(v45 + 20) + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_airQuality, (uint64_t)v27);
  v50 = &v27[*(int *)(v5 + 20)];
  v51 = v76;
  *(_QWORD *)v50 = v77;
  *((_QWORD *)v50 + 1) = v51;
  v52 = v74;
  *((_QWORD *)v50 + 2) = v75;
  *((_QWORD *)v50 + 3) = v52;
  sub_1000988B8((uint64_t)v27, 0);
  v53 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v54 = v91;
  sub_10009D3BC(v53, v91);
  v55 = (uint64_t *)(v54 + *(int *)(v5 + 20));
  v56 = v80;
  *v55 = v81;
  v55[1] = v56;
  v57 = v78;
  v55[2] = v79;
  v55[3] = v57;
  v58 = v90;
  sub_10003773C((uint64_t)v33, v90, &qword_100BCC760);
  v59 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v60 = v92;
  sub_10009D3BC(v59, v92);
  v61 = (uint64_t *)(v60 + *(int *)(v5 + 20));
  v62 = v84;
  *v61 = v85;
  v61[1] = v62;
  v63 = v82;
  v61[2] = v83;
  v61[3] = v63;
  v64 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v65 = v93;
  sub_10009D3BC(v64, v93);
  v66 = (uint64_t *)(v65 + *(int *)(v5 + 20));
  v67 = v88;
  *v66 = v89;
  v66[1] = v67;
  v68 = v87;
  v66[2] = v86;
  v66[3] = v68;
  sub_10087CED0((uint64_t)v27, v54, v58, v60, v65);
  sub_100021A14((uint64_t)v33, &qword_100BCC760);
  sub_100098640();
}

uint64_t sub_10034DCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;

  type metadata accessor for ScrubberDateSelection(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100094EC4();
  v7 = sub_1000BA294(&qword_100BC64F0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100099864();
  sub_1000BA294(&qword_100BC6430);
  sub_1000B42B0();
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v28 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v28 - v16;
  if ((static Location.== infix(_:_:)(a1, a2) & 1) == 0)
    goto LABEL_14;
  v18 = sub_1000D1750();
  v19 = *(int *)(v18 + 20);
  v28 = a1;
  sub_1000DB284(a1 + v19, (uint64_t)v17);
  v29 = v18;
  sub_1000DB284(a2 + *(int *)(v18 + 20), (uint64_t)v15);
  v20 = v2 + *(int *)(v7 + 48);
  sub_1000DB284((uint64_t)v17, v2);
  sub_1000DB284((uint64_t)v15, v20);
  sub_1000C38D4(v2, 1);
  if (v21)
  {
    sub_100021A14((uint64_t)v15, &qword_100BC6430);
    sub_100021A14((uint64_t)v17, &qword_100BC6430);
    sub_1000C38D4(v20, 1);
    if (v21)
    {
      sub_100021A14(v2, &qword_100BC6430);
      goto LABEL_12;
    }
LABEL_10:
    sub_100021A14(v2, &qword_100BC64F0);
LABEL_14:
    v26 = 0;
    return v26 & 1;
  }
  sub_10003773C(v2, (uint64_t)v12, &qword_100BC6430);
  sub_1000C38D4(v20, 1);
  if (v21)
  {
    sub_100021A14((uint64_t)v15, &qword_100BC6430);
    sub_100021A14((uint64_t)v17, &qword_100BC6430);
    sub_1000215BC((uint64_t)v12, type metadata accessor for ScrubberDateSelection);
    goto LABEL_10;
  }
  sub_10007C77C(v20, v3, type metadata accessor for ScrubberDateSelection);
  v22 = sub_100901258((uint64_t)v12, v3);
  sub_1000215BC(v3, type metadata accessor for ScrubberDateSelection);
  sub_1000B3B4C((uint64_t)v15);
  sub_1000B3B4C((uint64_t)v17);
  sub_1000215BC((uint64_t)v12, type metadata accessor for ScrubberDateSelection);
  sub_1000B3B4C(v2);
  if ((v22 & 1) == 0)
    goto LABEL_14;
LABEL_12:
  v23 = a2;
  v25 = v28;
  v24 = v29;
  if ((static Date.== infix(_:_:)(v28 + *(int *)(v29 + 24), v23 + *(int *)(v29 + 24)) & 1) == 0)
    goto LABEL_14;
  v26 = static Locale.== infix(_:_:)(v25 + *(int *)(v24 + 28), v23 + *(int *)(v24 + 28));
  return v26 & 1;
}

uint64_t sub_10034DF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101[32];

  v99 = a2;
  sub_1000BA294(&qword_100BC6430);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v96 = v6;
  v7 = sub_10009876C();
  type metadata accessor for TimeState(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v95 = v9;
  v10 = sub_10009876C();
  v11 = type metadata accessor for CurrentWeather(v10);
  v88 = *(_QWORD *)(v11 - 8);
  v89 = v11;
  __chkstk_darwin(v11);
  sub_100088FDC();
  v87 = v12;
  sub_1000BA294(&qword_100BC3350);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v91 = v14;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v90 = v16;
  v17 = sub_10009876C();
  v92 = type metadata accessor for WeatherData(v17);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v94 = v19;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v97 = v21;
  v22 = sub_10009876C();
  v98 = type metadata accessor for LocationWeatherDataState(v22);
  sub_1000B42B0();
  v24 = __chkstk_darwin(v23);
  v93 = (uint64_t)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v27 = (char *)&v79 - v26;
  v28 = type metadata accessor for Location(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  sub_100088FDC();
  v100 = v30;
  v31 = sub_10009876C();
  v32 = type metadata accessor for Date(v31);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  sub_100099864();
  sub_1000BA294(&qword_100BC6CC0);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  v36 = (char *)&v79 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for MoonDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_100094EC4();
  sub_1001D41C0(a1, (uint64_t)v36);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37) != 1)
  {
    v80 = v27;
    v81 = v2;
    v83 = v33;
    v85 = v32;
    sub_10007C77C((uint64_t)v36, v3, type metadata accessor for MoonDetailViewState);
    v82 = v29;
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    v84 = v28;
    v42(v100, v3, v28);
    v43 = a1;
    v44 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain(v44);
    v46 = Location.id.getter(v45);
    v48 = v47;
    v49 = v97;
    sub_1000EED10(v46, v47, v44);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v44);
    sub_1000C38D4(v49, 1);
    v86 = v3;
    if (v50)
    {
      sub_100021A14(v49, &qword_100BC3380);
    }
    else
    {
      v51 = v49;
      v49 = (uint64_t)v80;
      sub_10007C77C(v51, (uint64_t)v80, type metadata accessor for LocationWeatherDataState);
      v52 = v93;
      sub_100095B78(v49, v93, type metadata accessor for LocationWeatherDataState);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v52);
      if (EnumCaseMultiPayload == 1)
      {
        v54 = sub_1000BA294(&qword_100BC3358);
        v55 = v52 + *(int *)(v54 + 48);
        v56 = v52 + *(int *)(v54 + 64);
        v57 = v52;
        v58 = v94;
        sub_10007C77C(v57, v94, type metadata accessor for WeatherData);
        sub_1000215BC(v56, type metadata accessor for NewsDataModel);
        sub_1000215BC(v55, type metadata accessor for PreprocessedWeatherData);
        v49 = v91;
        sub_10003773C(v58 + *(int *)(v92 + 36), v91, &qword_100BC3350);
        v59 = type metadata accessor for WeatherDataOverrides(0);
        if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v59) == 1)
        {
          sub_100021A14(v49, &qword_100BC3350);
          v60 = v90;
          v61 = v85;
          _s7Weather24LocationCompositionStateOwst_0(v90, 1, 1, v85);
          v62 = v99;
          v63 = v96;
          v65 = v83;
          v64 = v84;
          sub_100098C50();
LABEL_16:
          sub_100021A14(v60, (uint64_t *)&unk_100BD35A0);
          v74 = v87;
          v76 = WeatherDataModel.currentWeather.getter(v75);
          CurrentWeather.date.getter(v76);
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v74, v89);
          sub_1000215BC(v94, type metadata accessor for WeatherData);
          sub_1000CD71C(v77, type metadata accessor for LocationWeatherDataState);
          goto LABEL_12;
        }
        v60 = v90;
        sub_10003773C(v49, v90, (uint64_t *)&unk_100BD35A0);
        sub_1000215BC(v49, type metadata accessor for WeatherDataOverrides);
        v61 = v85;
        sub_1000C38D4(v60, 1);
        v62 = v99;
        v63 = v96;
        v65 = v83;
        v64 = v84;
        v44 = v82;
        v49 = v81;
        if (v50)
          goto LABEL_16;
        sub_1000215BC(v94, type metadata accessor for WeatherData);
        sub_1000CD71C(v78, type metadata accessor for LocationWeatherDataState);
LABEL_11:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v49, v60, v61);
LABEL_12:
        v66 = v86;
        sub_10034E5E4(v86, v49, v63);
        sub_1000215BC(v66, type metadata accessor for MoonDetailViewState);
        v67 = v49;
        v68 = v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
        swift_beginAccess(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v101, 0, 0);
        v69 = v68 + *(int *)(type metadata accessor for EnvironmentState(0) + 28);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v62, v100, v64);
        v70 = (int *)sub_1000D1750();
        sub_10034F3F0(v63, v62 + v70[5]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v62 + v70[6], v67, v61);
        v71 = v62 + v70[7];
        v72 = sub_1000988FC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v71, v69, v72);
        v40 = v62;
        v41 = 0;
        v39 = (uint64_t)v70;
        return _s7Weather24LocationCompositionStateOwst_0(v40, v41, 1, v39);
      }
      sub_1000215BC(v49, type metadata accessor for LocationWeatherDataState);
      sub_1000215BC(v52, type metadata accessor for LocationWeatherDataState);
    }
    v62 = v99;
    v60 = v95;
    v63 = v96;
    v64 = v84;
    v61 = v85;
    v65 = v83;
    sub_100098C50();
    sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v60, type metadata accessor for TimeState);
    goto LABEL_11;
  }
  sub_100021A14((uint64_t)v36, &qword_100BC6CC0);
  v39 = sub_1000D1750();
  v40 = v99;
  v41 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v40, v41, 1, v39);
}

uint64_t sub_10034E5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC6CB8);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MoonDetailViewState(0);
  sub_10003773C(a1 + *(int *)(v13 + 20), (uint64_t)v12, &qword_100BC6CB8);
  v14 = type metadata accessor for MoonDetailSelectedDate(0);
  v15 = 1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14) != 1)
  {
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v16(v9, v12, v6);
      if ((static Date.== infix(_:_:)(v9, a2) & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        v17 = a3;
        v18 = 1;
      }
      else
      {
        v16((char *)a3, v9, v6);
        v17 = a3;
        v18 = 0;
      }
      _s7Weather24LocationCompositionStateOwst_0(v17, v18, 1, v6);
      v15 = 0;
    }
    else
    {
      sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailSelectedDate);
    }
  }
  v19 = type metadata accessor for ScrubberDateSelection(0);
  return _s7Weather24LocationCompositionStateOwst_0(a3, v15, 1, v19);
}

uint64_t type metadata accessor for MoonScrubberInputFactory()
{
  return objc_opt_self(_TtC7Weather24MoonScrubberInputFactory);
}

uint64_t *sub_10034E7A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ScrubberDateSelection(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BC6430);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v14))
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v14);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t sub_10034E954(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for ScrubberDateSelection(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
  {
    v7 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = a1 + a2[6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[7];
  v11 = type metadata accessor for Locale(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t sub_10034EA34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for ScrubberDateSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC6430);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v12))
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v12);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t sub_10034EBB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for ScrubberDateSelection(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      v13 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v13))
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v13);
      }
      v18 = (uint64_t)v8;
      v19 = v10;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_1000215BC((uint64_t)v8, type metadata accessor for ScrubberDateSelection);
LABEL_7:
    v14 = *(_QWORD *)(sub_1000BA294(&qword_100BC6430) - 8);
    goto LABEL_8;
  }
  v15 = type metadata accessor for Date(0);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
      v18 = (uint64_t)v8;
      v19 = v15;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v19);
      goto LABEL_15;
    }
  }
  else
  {
    v29 = *(_QWORD *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v29 + 24))(v8, v9, v15);
      goto LABEL_15;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v8, v15);
  }
  v14 = *(_QWORD *)(v10 - 8);
LABEL_8:
  memcpy(v8, v9, *(_QWORD *)(v14 + 64));
LABEL_15:
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

uint64_t sub_10034EDFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for ScrubberDateSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC6430);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v12))
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v12);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t sub_10034EF7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for ScrubberDateSelection(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      v13 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v13))
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v13);
      }
      v18 = (uint64_t)v8;
      v19 = v10;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_1000215BC((uint64_t)v8, type metadata accessor for ScrubberDateSelection);
LABEL_7:
    v14 = *(_QWORD *)(sub_1000BA294(&qword_100BC6430) - 8);
    goto LABEL_8;
  }
  v15 = type metadata accessor for Date(0);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
      v18 = (uint64_t)v8;
      v19 = v15;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v19);
      goto LABEL_15;
    }
  }
  else
  {
    v29 = *(_QWORD *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v29 + 40))(v8, v9, v15);
      goto LABEL_15;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v8, v15);
  }
  v14 = *(_QWORD *)(v10 - 8);
LABEL_8:
  memcpy(v8, v9, *(_QWORD *)(v14 + 64));
LABEL_15:
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t sub_10034F1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034F1D0);
}

uint64_t sub_10034F1D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1000988EC();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    sub_1000BA294(&qword_100BC6430);
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      type metadata accessor for Date(0);
      sub_100088FF0();
      if (v12)
      {
        v7 = v13;
        v11 = a3[6];
      }
      else
      {
        v7 = sub_1000988FC();
        v11 = a3[7];
      }
    }
    v8 = v4 + v11;
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_10034F25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034F268);
}

uint64_t sub_10034F268(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000988EC();
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1000BA294(&qword_100BC6430);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      type metadata accessor for Date(0);
      sub_10009D2E8();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        v8 = sub_1000988FC();
        v12 = a4[7];
      }
    }
    v9 = v5 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v9, v4, v4, v8);
}

uint64_t type metadata accessor for MoonScrubberInput(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDA850;
  if (!qword_100BDA850)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoonScrubberInput);
  return result;
}

void sub_10034F334(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  v2 = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001C9EF4(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for Date(319);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for Locale(319);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 4, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_10034F3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC6430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034F438()
{
  sub_10034F500();
  return EnvironmentValues.subscript.getter(&_s44LocationComponentHeaderMetricsEnvironmentKeyVN, &_s44LocationComponentHeaderMetricsEnvironmentKeyVN);
}

void sub_10034F46C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000DF57C();
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  sub_100084050(a1, v4 - v3, type metadata accessor for LocationComponentHeaderMetrics);
  sub_10034F500();
  EnvironmentValues.subscript.setter(v5, &_s44LocationComponentHeaderMetricsEnvironmentKeyVN, &_s44LocationComponentHeaderMetricsEnvironmentKeyVN);
  sub_1000215BC(a1, type metadata accessor for LocationComponentHeaderMetrics);
  sub_100079F70();
}

uint64_t type metadata accessor for LocationComponentHeaderMetrics(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDA908, (uint64_t)&nominal type descriptor for LocationComponentHeaderMetrics);
}

unint64_t sub_10034F500()
{
  unint64_t result;

  result = qword_100BDA8A8;
  if (!qword_100BDA8A8)
  {
    result = swift_getWitnessTable(&unk_100996B50, &_s44LocationComponentHeaderMetricsEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_100BDA8A8);
  }
  return result;
}

ValueMetadata *_s44LocationComponentHeaderMetricsEnvironmentKeyVMa()
{
  return &_s44LocationComponentHeaderMetricsEnvironmentKeyVN;
}

uint64_t sub_10034F54C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v6 = (char *)&loc_10034F5B4 + 4 * byte_100996880[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v7 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v8;
}

double sub_10034F834(uint64_t a1)
{
  double result;
  uint64_t v3;

  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
    case 4u:
      goto LABEL_5;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
      v3 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_10034F938(uint64_t a1, uint64_t a2)
{
  char *v3;

  type metadata accessor for LocationComponentHeaderViewModel(0);
  v3 = (char *)sub_10034F994 + 4 * byte_10099688A[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

uint64_t sub_10034F994()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = v6;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_storeEnumTagMultiPayload(v0, v3, 0);
  v7 = v2[6];
  *(_QWORD *)(v0 + v2[5]) = *(_QWORD *)(v1 + v2[5]);
  *(_QWORD *)(v0 + v7) = *(_QWORD *)(v1 + v7);
  v8 = v2[7];
  v9 = v2[8];
  v10 = v0 + v8;
  v11 = v1 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(v0 + v9) = *(_BYTE *)(v1 + v9);
  return v0;
}

double sub_10034FBF4(uint64_t a1, uint64_t a2, int *a3)
{
  char *v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1000215BC(a1, type metadata accessor for LocationComponentHeaderViewModel);
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v4 = (char *)&loc_10034FC68 + 4 * byte_10099688F[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v5 = a3[6];
  result = *(double *)(a2 + v5);
  *(double *)(a1 + v5) = result;
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return result;
}

_BYTE *sub_10034FF78(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (swift_getEnumCaseMultiPayload(a2) == 3)
  {
    v7 = type metadata accessor for WeatherDescription(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    v9 = *(int *)(v8 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
    a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload(a1, v6, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v13 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[7];
  v15 = a3[8];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  a1[v15] = a2[v15];
  return a1;
}

_BYTE *sub_100350080(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationComponentHeaderViewModel);
    v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 3)
    {
      v7 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v9 = *(int *)(v8 + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload(a1, v6, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v13 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[7];
  v15 = a3[8];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  a1[v15] = a2[v15];
  return a1;
}

uint64_t sub_1003501A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003501AC);
}

void sub_1003501AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_1000B250C(a1, a2, v4);
  else
    sub_100079F70();
}

uint64_t sub_100350224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100350230);
}

void sub_100350230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  sub_1000B4818();
  sub_10009D2E8();
  if (v8)
  {
    sub_1000987C4(v5, v4, v4, v7);
  }
  else
  {
    *(_BYTE *)(v5 + *(int *)(a4 + 32)) = v4 + 1;
    sub_100079F70();
  }
}

uint64_t sub_100350280(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for LocationComponentHeaderViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = "\t";
    v4[4] = &unk_100996A38;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10035030C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v6 = (char *)&loc_10035037C + 4 * byte_100996894[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v7 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v8;
}

uint64_t sub_100351A80(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  int v30;
  uint64_t HourPrecipitationChartViewModel;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(uint64_t, uint64_t, __n128);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;

  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
      v4 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v5 = type metadata accessor for LocationComponentContainerViewModel(0);
  v6 = a1 + *(int *)(v5 + 20);
  type metadata accessor for LocationComponentViewModel(0);
  switch(swift_getEnumCaseMultiPayload(v6))
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 1u:
      swift_bridgeObjectRelease();
      v7 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v8 = v6 + v7[5];
      v9 = sub_1000BA294(&qword_100BC4E68);
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v10(v8, v9);
      v10(v6 + v7[6], v9);
      v10(v6 + v7[7], v9);
      goto LABEL_32;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v6 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
      {
        swift_bridgeObjectRelease();
        v13 = v11 + *(int *)(v12 + 20);
        v14 = type metadata accessor for TemperatureScaleConfiguration(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_47;
    case 3u:
    case 4u:
      goto LABEL_47;
    case 5u:
      v15 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v6, v15);
      v16 = type metadata accessor for MapComponentViewModel(0);
      v17 = v6 + *(int *)(v16 + 20);
      v18 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      v19 = v6 + *(int *)(v16 + 24);
      v20 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, (uint64_t)v20))
      {
        swift_bridgeObjectRelease();
        v21 = v19 + v20[5];
        v22 = type metadata accessor for Locale(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        v23 = v19 + v20[6];
        v24 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
        v25 = v19 + v20[7];
        v26 = sub_1000BA294(&qword_100BC3348);
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26))
        {
          v27 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
        }
        v28 = v19 + v20[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28);
        if (EnumCaseMultiPayload == 1)
        {
          v43 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v28, v43);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        v44 = v19 + v20[9];
        v45 = type metadata accessor for WeatherDataOverrides(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45))
        {
          v46 = type metadata accessor for Date(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v46))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
          v47 = v44 + *(int *)(v45 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v46))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v47, v46);
        }
      }
      goto LABEL_47;
    case 6u:
      swift_bridgeObjectRelease();
      v30 = *(unsigned __int8 *)(v6 + 32);
      if (v30 != 255)
        sub_100121E04(*(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), v30);
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for MoonComponentViewModel(0) + 28);
      HourPrecipitationChartViewModel = type metadata accessor for Date(0);
      goto LABEL_35;
    case 7u:
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v6) == 1)
      {
        swift_bridgeObjectRelease();
        v32 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v33 = v6 + v32[5];
        v34 = type metadata accessor for URL(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        v35 = swift_bridgeObjectRelease();
        v36 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v34 - 8) + 8);
        v36(v6 + v32[7], v34, v35);
        v37 = v6 + v32[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v34))
          ((void (*)(uint64_t, uint64_t))v36)(v37, v34);
      }
      break;
    case 8u:
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      goto LABEL_35;
    case 9u:
      HourPrecipitationChartViewModel = type metadata accessor for Location(0);
      goto LABEL_35;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0xBu:
      v38 = type metadata accessor for PressureTrend(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v6, v38);
      type metadata accessor for PressureComponentViewModel(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for SevereAlertComponentViewModel(0) + 36);
      HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence(0);
      goto LABEL_35;
    case 0xEu:
      HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel(0);
LABEL_35:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 8))(v6, HourPrecipitationChartViewModel);
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0x10u:
      swift_bridgeObjectRelease();
      v39 = v6 + *(int *)(type metadata accessor for UVIndexComponentViewModel(0) + 28);
      v40 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
      goto LABEL_47;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v6 + *(int *)(type metadata accessor for WindComponentViewModel(0) + 68);
      v42 = type metadata accessor for WindComponentCompassViewModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
LABEL_47:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v48 = a1 + *(int *)(v5 + 28);
  v49 = type metadata accessor for LocationComponentAction(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v49))
  {
    switch(swift_getEnumCaseMultiPayload(v48))
    {
      case 0u:
        v50 = type metadata accessor for URL(0);
        goto LABEL_54;
      case 1u:
        v50 = type metadata accessor for WeatherMapOverlayKind(0);
        goto LABEL_54;
      case 2u:
        v50 = type metadata accessor for DetailCondition(0);
        goto LABEL_54;
      case 4u:
        v48 += *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v50 = type metadata accessor for Location(0);
LABEL_54:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v48, v50);
        break;
      default:
        break;
    }
  }
  v51 = a1 + a2[5];
  v52 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
  v53 = (_QWORD *)(a1 + a2[6]);
  sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v53) == 1)
  {
    v54 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
  }
  else
  {
    swift_release(*v53);
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  v55 = a1 + a2[8];
  sub_1000CEE98(*(_QWORD *)v55, *(_QWORD *)(v55 + 8), *(_QWORD *)(v55 + 16), *(_QWORD *)(v55 + 24), *(_QWORD *)(v55 + 32), *(_QWORD *)(v55 + 40), *(_QWORD *)(v55 + 48), *(_QWORD *)(v55 + 56), *(_QWORD *)(v55 + 64), *(_BYTE *)(v55 + 72));
  sub_100082C5C(*(_QWORD *)(a1 + a2[9]), *(unsigned __int8 *)(a1 + a2[9] + 8), *(_BYTE *)(a1 + a2[9] + 9));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[11]), *(_BYTE *)(a1 + a2[11] + 8));
  v56 = (_QWORD *)(a1 + a2[12]);
  sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v56) == 1)
  {
    v57 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
  }
  else
  {
    swift_release(*v56);
  }
  return sub_100082C5C(*(_QWORD *)(a1 + a2[13]), *(unsigned __int8 *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 9));
}

void sub_1003524C8(uint64_t a1, uint64_t a2)
{
  char *v3;

  type metadata accessor for LocationComponentHeaderViewModel(0);
  v3 = (char *)sub_100352528 + 4 * byte_1009968F5[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

uint64_t sub_100352528(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *__dst,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  int *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v120;
  int *v121;
  void (*v122)(char *, char *, uint64_t, __n128);
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t, __n128);
  uint64_t v161;
  __n128 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  int *v179;
  void (*v180)(char *, char *, uint64_t, __n128);
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int *v194;
  void (*v195)(char *, char *, uint64_t, __n128);
  uint64_t v196;
  __n128 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  int *v206;
  void (*v207)(char *, char *, uint64_t, __n128);
  __n128 v208;
  uint64_t v209;
  int *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int *v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  void (*v233)(char *, char *, uint64_t, __n128);
  __n128 v234;
  uint64_t v235;
  _QWORD *v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  int *v241;
  char *v242;
  void (*v243)(char *, char *, uint64_t, __n128);
  __n128 v244;
  char *v245;
  int *v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  _QWORD *v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  _QWORD *v284;
  _QWORD *v285;
  uint64_t v286;
  uint64_t v287;
  _BYTE *v288;
  _BYTE *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  _BYTE *v301;
  _BYTE *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char v359;
  unsigned __int8 v360;
  char *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  int *v376;
  char *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  uint64_t v388;
  int *v389;
  _QWORD *v390;
  _QWORD *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  uint64_t v396;
  char v397;

  v43 = *(_QWORD *)(v39 + 8);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_QWORD *)(v38 + 8) = v43;
  v44 = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 24) = v44;
  *(_BYTE *)(v38 + 32) = *(_BYTE *)(v39 + 32);
  v45 = *(_QWORD *)(v39 + 48);
  *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
  *(_QWORD *)(v38 + 48) = v45;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v45);
  swift_storeEnumTagMultiPayload(v38, v41, 0);
  v46 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v47 = v46[5];
  v48 = (_QWORD *)(v38 + v47);
  v49 = (_QWORD *)(v39 + v47);
  v50 = type metadata accessor for LocationComponentViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49);
  *(_QWORD *)(v42 - 88) = v40;
  switch(EnumCaseMultiPayload)
  {
    case 0:
      *v48 = *v49;
      *(_OWORD *)(v48 + 1) = *(_OWORD *)(v49 + 1);
      *(_OWORD *)(v48 + 3) = *(_OWORD *)(v49 + 3);
      v52 = v49[5];
      v53 = v49[6];
      v48[5] = v52;
      v48[6] = v53;
      v55 = v49[7];
      v54 = v49[8];
      v48[7] = v55;
      v48[8] = v54;
      v56 = v50;
      v58 = v49[9];
      v57 = v49[10];
      v48[9] = v58;
      v48[10] = v57;
      v59 = v46;
      v60 = v49[11];
      v48[11] = v60;
      *((_WORD *)v48 + 48) = *((_WORD *)v49 + 48);
      v61 = v49[13];
      v48[13] = v61;
      swift_bridgeObjectRetain(v52);
      swift_bridgeObjectRetain(v55);
      swift_bridgeObjectRetain(v58);
      v62 = v60;
      v46 = v59;
      swift_bridgeObjectRetain(v62);
      swift_bridgeObjectRetain(v61);
      v63 = v48;
      v64 = v56;
      v65 = 0;
      goto LABEL_60;
    case 1:
      v66 = *v49;
      *v48 = *v49;
      v67 = type metadata accessor for DailyForecastComponentViewModel(0);
      *(_QWORD *)(v42 - 96) = v50;
      v68 = (int *)v67;
      v69 = *(int *)(v67 + 20);
      v70 = v46;
      v71 = (char *)v48 + v69;
      v72 = (char *)v49 + v69;
      swift_bridgeObjectRetain(v66);
      v73 = sub_1000BA294(&qword_100BC4E68);
      v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
      v75 = v71;
      v46 = v70;
      v74(v75, v72, v73);
      v74((char *)v48 + v68[6], (char *)v49 + v68[6], v73);
      v74((char *)v48 + v68[7], (char *)v49 + v68[7], v73);
      v40 = *(int **)(v42 - 88);
      v76 = v68[8];
      v77 = (_QWORD *)((char *)v48 + v76);
      v78 = (_QWORD *)((char *)v49 + v76);
      v79 = v78[1];
      *v77 = *v78;
      v77[1] = v79;
      v80 = v68[9];
      v81 = (_QWORD *)((char *)v48 + v80);
      v82 = (_QWORD *)((char *)v49 + v80);
      v83 = v82[1];
      *v81 = *v82;
      v81[1] = v83;
      swift_bridgeObjectRetain(v79);
      swift_bridgeObjectRetain(v83);
      v63 = v48;
      v64 = *(_QWORD *)(v42 - 96);
      v65 = 1;
      goto LABEL_60;
    case 2:
      *(_QWORD *)(v42 - 96) = v50;
      v84 = v49[1];
      *v48 = *v49;
      v48[1] = v84;
      v85 = v49[3];
      v48[2] = v49[2];
      v48[3] = v85;
      v86 = type metadata accessor for FeelsLikeComponentViewModel(0);
      v87 = *(int *)(v86 + 24);
      v383 = v86;
      v390 = (_QWORD *)((char *)v48 + v87);
      v88 = (_QWORD *)((char *)v49 + v87);
      v89 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain(v84);
      swift_bridgeObjectRetain(v85);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89))
      {
        v90 = sub_1000BA294(&qword_100BC3360);
        memcpy(v390, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        v200 = v88[1];
        *v390 = *v88;
        v390[1] = v200;
        v380 = v89;
        v201 = *(int *)(v89 + 20);
        v202 = (char *)v390 + v201;
        v203 = (char *)v88 + v201;
        v204 = type metadata accessor for TemperatureScaleConfiguration(0);
        *(_QWORD *)(v42 - 104) = v46;
        v205 = v204;
        v206 = v40;
        v207 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v204 - 8) + 16);
        v208 = swift_bridgeObjectRetain(v200);
        v209 = v205;
        v46 = *(int **)(v42 - 104);
        v207(v202, v203, v209, v208);
        v40 = v206;
        v210 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(_QWORD *)&v202[v210[5]] = *(_QWORD *)&v203[v210[5]];
        *(_QWORD *)&v202[v210[6]] = *(_QWORD *)&v203[v210[6]];
        *(_QWORD *)&v202[v210[7]] = *(_QWORD *)&v203[v210[7]];
        v211 = v210[8];
        v212 = &v202[v211];
        v213 = &v203[v211];
        v215 = *(_QWORD *)v213;
        v214 = *((_QWORD *)v213 + 1);
        *(_QWORD *)v212 = v215;
        *((_QWORD *)v212 + 1) = v214;
        v202[v210[9]] = v203[v210[9]];
        swift_bridgeObjectRetain(v214);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v390, 0, 1, v380);
      }
      v216 = *(_QWORD *)(v42 - 96);
      v217 = *(int *)(v383 + 28);
      v218 = (_QWORD *)((char *)v48 + v217);
      v219 = (_QWORD *)((char *)v49 + v217);
      v220 = v219[1];
      *v218 = *v219;
      v218[1] = v220;
      swift_bridgeObjectRetain(v220);
      v63 = v48;
      v64 = v216;
      v65 = 2;
      goto LABEL_60;
    case 3:
      v91 = *v49;
      *v48 = *v49;
      swift_bridgeObjectRetain(v91);
      v63 = v48;
      v64 = v50;
      v65 = 3;
      goto LABEL_60;
    case 4:
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v92 = v49[2];
      v48[2] = v92;
      swift_bridgeObjectRetain(v92);
      v63 = v48;
      v64 = v50;
      v65 = 4;
      goto LABEL_60;
    case 5:
      v93 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v48, v49, v93);
      v94 = (int *)type metadata accessor for MapComponentViewModel(0);
      v95 = v94[5];
      v96 = (char *)v48 + v95;
      v97 = (char *)v49 + v95;
      v98 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
      v99 = v94[6];
      v391 = (_QWORD *)((char *)v48 + v99);
      v100 = (_QWORD *)((char *)v49 + v99);
      v101 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
      {
        v102 = sub_1000BA294(&qword_100BC3460);
        memcpy(v391, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        goto LABEL_59;
      }
      v376 = v94;
      *(_QWORD *)(v42 - 104) = v46;
      *(_QWORD *)(v42 - 96) = v50;
      v221 = v100[1];
      *v391 = *v100;
      v391[1] = v221;
      v389 = (int *)v101;
      v222 = *(int *)(v101 + 20);
      v223 = (char *)v391 + v222;
      v224 = (char *)v100 + v222;
      v225 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v221);
      v381 = v100;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v225))
      {
        v226 = sub_1000BA294(&qword_100BC3340);
        memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v223, v224, v225);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v225);
      }
      v251 = v389[6];
      v252 = (char *)v391 + v251;
      v253 = (char *)v381 + v251;
      v254 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(v252, v253, v254);
      v255 = v389[7];
      v256 = (char *)v391 + v255;
      v257 = (char *)v381 + v255;
      v258 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v257, 1, v258))
      {
        v259 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
      }
      else
      {
        v260 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(v256, v257, v260);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, v258);
      }
      v261 = v389[8];
      v262 = (_QWORD *)((char *)v391 + v261);
      v263 = (_QWORD *)((char *)v381 + v261);
      v264 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      v265 = swift_getEnumCaseMultiPayload(v263);
      if (v265 == 1)
      {
        v270 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(v262, v263, v270);
        v267 = v262;
        v268 = v264;
        v269 = 1;
        goto LABEL_47;
      }
      if (!v265)
      {
        v266 = v263[1];
        *v262 = *v263;
        v262[1] = v266;
        swift_bridgeObjectRetain(v266);
        v267 = v262;
        v268 = v264;
        v269 = 0;
LABEL_47:
        swift_storeEnumTagMultiPayload(v267, v268, v269);
        goto LABEL_49;
      }
      memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
LABEL_49:
      v46 = *(int **)(v42 - 104);
      v50 = *(_QWORD *)(v42 - 96);
      v271 = v389[9];
      v272 = (char *)v391 + v271;
      v273 = (char *)v381 + v271;
      v274 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v273, 1, v274))
      {
        v275 = sub_1000BA294(&qword_100BC3350);
        memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
        v276 = (uint64_t)v391;
        v94 = v376;
      }
      else
      {
        v372 = v274;
        v382 = (uint64_t)v272;
        v277 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v273, 1, v277))
        {
          v278 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v277 - 8) + 16))(v272, v273, v277);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v272, 0, 1, v277);
        }
        v279 = *(int *)(v274 + 20);
        v280 = &v272[v279];
        v281 = &v273[v279];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v273[v279], 1, v277))
        {
          v282 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v277 - 8) + 16))(v280, v281, v277);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v277);
        }
        v276 = (uint64_t)v391;
        v94 = v376;
        _s7Weather24LocationCompositionStateOwst_0(v382, 0, 1, v372);
        v50 = *(_QWORD *)(v42 - 96);
      }
      _s7Weather24LocationCompositionStateOwst_0(v276, 0, 1, (uint64_t)v389);
LABEL_59:
      v283 = v94[7];
      v284 = (_QWORD *)((char *)v48 + v283);
      v285 = (_QWORD *)((char *)v49 + v283);
      v286 = v285[1];
      *v284 = *v285;
      v284[1] = v286;
      swift_bridgeObjectRetain(v286);
      v63 = v48;
      v64 = v50;
      v65 = 5;
LABEL_60:
      swift_storeEnumTagMultiPayload(v63, v64, v65);
LABEL_61:
      *(_WORD *)(v38 + v46[6]) = *(_WORD *)(v39 + v46[6]);
      v287 = v46[7];
      v288 = (_BYTE *)(v38 + v287);
      v289 = (_BYTE *)(v39 + v287);
      v290 = type metadata accessor for LocationComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v289, 1, v290))
      {
        v291 = sub_1000BA294(&qword_100BDA950);
        memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v289))
        {
          case 0u:
            v292 = type metadata accessor for URL(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(v288, v289, v292);
            v293 = sub_1000BA294(&qword_100BC5FE8);
            v288[*(int *)(v293 + 48)] = v289[*(int *)(v293 + 48)];
            v294 = v288;
            v295 = v290;
            v296 = 0;
            goto LABEL_69;
          case 1u:
            v297 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v297 - 8) + 16))(v288, v289, v297);
            v294 = v288;
            v295 = v290;
            v296 = 1;
            goto LABEL_69;
          case 2u:
            v298 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v298 - 8) + 16))(v288, v289, v298);
            v299 = sub_1000BA294(&qword_100BC5FF8);
            v288[*(int *)(v299 + 48)] = v289[*(int *)(v299 + 48)];
            v294 = v288;
            v295 = v290;
            v296 = 2;
            goto LABEL_69;
          case 4u:
            *v288 = *v289;
            v300 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
            v301 = &v288[v300];
            v302 = &v289[v300];
            v303 = type metadata accessor for Location(0);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v303 - 8) + 16))(v301, v302, v303);
            v294 = v288;
            v295 = v290;
            v296 = 4;
LABEL_69:
            swift_storeEnumTagMultiPayload(v294, v295, v296);
            break;
          default:
            memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v288, 0, 1, v290);
      }
      v304 = v40[5];
      v305 = v38 + v304;
      v306 = v39 + v304;
      v307 = type metadata accessor for Text.Measurements(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v307 - 8) + 16))(v305, v306, v307);
      v308 = v40[6];
      v309 = (_QWORD *)(v38 + v308);
      v310 = (_QWORD *)(v39 + v308);
      v311 = sub_1000BA294(&qword_100BC37D8);
      if (swift_getEnumCaseMultiPayload(v310) == 1)
      {
        v312 = type metadata accessor for ContentSizeCategory(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v312 - 8) + 16))(v309, v310, v312);
        v313 = v309;
        v314 = v311;
        v315 = 1;
      }
      else
      {
        *v309 = *v310;
        swift_retain();
        v313 = v309;
        v314 = v311;
        v315 = 0;
      }
      swift_storeEnumTagMultiPayload(v313, v314, v315);
      v316 = v40[7];
      v317 = v38 + v316;
      v318 = v39 + v316;
      v319 = *(_QWORD *)v318;
      v320 = *(_BYTE *)(v318 + 8);
      sub_10008D47C(*(_QWORD *)v318, v320);
      *(_QWORD *)v317 = v319;
      *(_BYTE *)(v317 + 8) = v320;
      v321 = *(int *)(*(_QWORD *)(v42 - 88) + 32);
      *(_QWORD *)(v42 - 104) = v39;
      *(_QWORD *)(v42 - 96) = v38;
      v322 = v38 + v321;
      v323 = *(_QWORD *)(v42 - 104) + v321;
      v324 = *(_QWORD *)v323;
      v325 = *(_QWORD *)(v323 + 8);
      v326 = *(_QWORD *)(v323 + 16);
      v327 = *(_QWORD *)(v323 + 24);
      v328 = *(_QWORD *)(v323 + 32);
      v329 = *(_QWORD *)(v323 + 40);
      v331 = *(_QWORD *)(v323 + 48);
      v330 = *(_QWORD *)(v323 + 56);
      v332 = *(_QWORD *)(v323 + 64);
      v397 = *(_BYTE *)(v323 + 72);
      sub_1000D4FF4(*(_QWORD *)v323, v325, v326, v327, v328, v329, v331, v330, v332, v397);
      *(_QWORD *)v322 = v324;
      *(_QWORD *)(v322 + 8) = v325;
      *(_QWORD *)(v322 + 16) = v326;
      *(_QWORD *)(v322 + 24) = v327;
      *(_QWORD *)(v322 + 32) = v328;
      *(_QWORD *)(v322 + 40) = v329;
      *(_QWORD *)(v322 + 48) = v331;
      *(_QWORD *)(v322 + 56) = v330;
      *(_QWORD *)(v322 + 64) = v332;
      *(_BYTE *)(v322 + 72) = v397;
      v333 = *(_QWORD *)(v42 - 104);
      v334 = *(int *)(*(_QWORD *)(v42 - 88) + 36);
      v335 = *(_QWORD *)(v42 - 96) + v334;
      v336 = v333 + v334;
      v337 = *(_QWORD *)v336;
      LOBYTE(v324) = *(_BYTE *)(v336 + 9);
      LOBYTE(v325) = *(_BYTE *)(v336 + 8);
      sub_100082BE8(*(_QWORD *)v336, v325, v324);
      *(_QWORD *)v335 = v337;
      *(_BYTE *)(v335 + 8) = v325;
      *(_BYTE *)(v335 + 9) = v324;
      v338 = *(int *)(*(_QWORD *)(v42 - 88) + 40);
      v339 = *(_QWORD *)(v42 - 96) + v338;
      v340 = v333 + v338;
      v341 = *(_QWORD *)v340;
      LOBYTE(v324) = *(_BYTE *)(v340 + 8);
      sub_10008D47C(*(_QWORD *)v340, v324);
      *(_QWORD *)v339 = v341;
      *(_BYTE *)(v339 + 8) = v324;
      v342 = *(int *)(*(_QWORD *)(v42 - 88) + 44);
      v343 = *(_QWORD *)(v42 - 96) + v342;
      v344 = v333 + v342;
      v345 = *(_QWORD *)v344;
      LOBYTE(v324) = *(_BYTE *)(v344 + 8);
      sub_10008D47C(*(_QWORD *)v344, v324);
      *(_QWORD *)v343 = v345;
      *(_BYTE *)(v343 + 8) = v324;
      v346 = *(_QWORD *)(v42 - 96);
      v347 = *(_QWORD *)(v42 - 88);
      v348 = *(int *)(v347 + 48);
      v349 = (_QWORD *)(v346 + v348);
      v350 = (_QWORD *)(v333 + v348);
      v351 = sub_1000BA294(&qword_100BC2908);
      if (swift_getEnumCaseMultiPayload(v350) == 1)
      {
        v352 = type metadata accessor for LayoutDirection(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v349, v350, v352);
        v353 = 1;
      }
      else
      {
        *v349 = *v350;
        swift_retain();
        v353 = 0;
      }
      swift_storeEnumTagMultiPayload(v349, v351, v353);
      v354 = *(int *)(v347 + 52);
      v355 = v346;
      v356 = v346 + v354;
      v357 = v333 + v354;
      v358 = *(_QWORD *)v357;
      v359 = *(_BYTE *)(v357 + 9);
      v360 = *(_BYTE *)(v357 + 8);
      sub_100082BE8(*(_QWORD *)v357, v360, v359);
      *(_QWORD *)v356 = v358;
      *(_BYTE *)(v356 + 8) = v360;
      *(_BYTE *)(v356 + 9) = v359;
      return v355;
    case 6:
      v103 = v49[1];
      *v48 = *v49;
      v48[1] = v103;
      v104 = *((unsigned __int8 *)v49 + 32);
      swift_bridgeObjectRetain(v103);
      *(_QWORD *)(v42 - 104) = v46;
      *(_QWORD *)(v42 - 96) = v50;
      if (v104 == 255)
      {
        *((_OWORD *)v48 + 1) = *((_OWORD *)v49 + 1);
        *((_BYTE *)v48 + 32) = *((_BYTE *)v49 + 32);
      }
      else
      {
        v105 = v49[2];
        v106 = v49[3];
        sub_100121DEC(v105, v106, v104);
        v48[2] = v105;
        v48[3] = v106;
        *((_BYTE *)v48 + 32) = v104;
      }
      v227 = v49[5];
      v48[5] = v227;
      v228 = (int *)type metadata accessor for MoonComponentViewModel(0);
      v229 = v228[7];
      v230 = (char *)v48 + v229;
      v231 = (char *)v49 + v229;
      v232 = type metadata accessor for Date(0);
      v233 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v232 - 8) + 16);
      v234 = swift_bridgeObjectRetain(v227);
      v233(v230, v231, v232, v234);
      *((_BYTE *)v48 + v228[8]) = *((_BYTE *)v49 + v228[8]);
      *(_QWORD *)((char *)v48 + v228[9]) = *(_QWORD *)((char *)v49 + v228[9]);
      swift_storeEnumTagMultiPayload(v48, *(_QWORD *)(v42 - 96), 6);
      v40 = *(int **)(v42 - 88);
      v46 = *(int **)(v42 - 104);
      goto LABEL_61;
    case 7:
      v107 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v49) == 1)
      {
        v392 = v107;
        *(_QWORD *)(v42 - 104) = v46;
        v108 = v49[1];
        *v48 = *v49;
        v48[1] = v108;
        v109 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v110 = v109[5];
        v384 = (char *)v48 + v110;
        v111 = (char *)v49 + v110;
        v112 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain(v108);
        v113 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112);
        *(_QWORD *)(v42 - 96) = v50;
        if (v113)
        {
          v114 = sub_1000BA294(&qword_100BD4280);
          memcpy(v384, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v384, v111, v112);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v112);
        }
        v235 = v109[6];
        v236 = (_QWORD *)((char *)v48 + v235);
        v237 = (_QWORD *)((char *)v49 + v235);
        v238 = v237[1];
        *v236 = *v237;
        v236[1] = v238;
        v239 = v109[7];
        v240 = (char *)v48 + v239;
        v241 = v109;
        v242 = (char *)v49 + v239;
        v243 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v112 - 8) + 16);
        v244 = swift_bridgeObjectRetain(v238);
        v245 = v240;
        v246 = v241;
        v243(v245, v242, v112, v244);
        v247 = v241[8];
        v248 = (char *)v48 + v247;
        v249 = (char *)v49 + v247;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49 + v247, 1, v112))
        {
          v250 = sub_1000BA294(&qword_100BD4280);
          memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v243)(v248, v249, v112);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v248, 0, 1, v112);
        }
        v40 = *(int **)(v42 - 88);
        v46 = *(int **)(v42 - 104);
        *((_BYTE *)v48 + v246[9]) = *((_BYTE *)v49 + v246[9]);
        swift_storeEnumTagMultiPayload(v48, v392, 1);
        v50 = *(_QWORD *)(v42 - 96);
      }
      else
      {
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      v63 = v48;
      v64 = v50;
      v65 = 7;
      goto LABEL_60;
    case 8:
      v115 = v49[1];
      *v48 = *v49;
      v48[1] = v115;
      v116 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      v117 = (char *)v48 + v116;
      v118 = (char *)v49 + v116;
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      v120 = *(_QWORD *)(HourPrecipitationChartViewModel - 8);
      *(_QWORD *)(v42 - 96) = v50;
      v121 = v40;
      v122 = *(void (**)(char *, char *, uint64_t, __n128))(v120 + 16);
      v123 = swift_bridgeObjectRetain(v115);
      v122(v117, v118, HourPrecipitationChartViewModel, v123);
      v40 = v121;
      v63 = v48;
      v64 = *(_QWORD *)(v42 - 96);
      v65 = 8;
      goto LABEL_60;
    case 9:
      v124 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v48, v49, v124);
      v125 = type metadata accessor for NotificationsOptInComponentViewModel(0);
      *((_BYTE *)v48 + *(int *)(v125 + 20)) = *((_BYTE *)v49 + *(int *)(v125 + 20));
      v63 = v48;
      v64 = v50;
      v65 = 9;
      goto LABEL_60;
    case 10:
      v126 = v49[1];
      *v48 = *v49;
      v48[1] = v126;
      v127 = v49[3];
      v48[2] = v49[2];
      v48[3] = v127;
      v128 = v49[5];
      v48[4] = v49[4];
      v48[5] = v128;
      v129 = v49[7];
      v48[6] = v49[6];
      v48[7] = v129;
      *(_QWORD *)(v42 - 96) = v50;
      v130 = v49[9];
      v48[8] = v49[8];
      v48[9] = v130;
      v131 = v49[10];
      v132 = v49[11];
      v48[10] = v131;
      v48[11] = v132;
      swift_bridgeObjectRetain(v126);
      swift_bridgeObjectRetain(v127);
      swift_bridgeObjectRetain(v128);
      swift_bridgeObjectRetain(v129);
      swift_bridgeObjectRetain(v130);
      swift_bridgeObjectRetain(v132);
      v63 = v48;
      v64 = *(_QWORD *)(v42 - 96);
      v65 = 10;
      goto LABEL_60;
    case 11:
      v133 = type metadata accessor for PressureTrend(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v48, v49, v133);
      v134 = (int *)type metadata accessor for PressureComponentViewModel(0);
      v135 = v134[5];
      v136 = (_QWORD *)((char *)v48 + v135);
      v137 = (_QWORD *)((char *)v49 + v135);
      v139 = *v137;
      v138 = v137[1];
      *v136 = v139;
      v136[1] = v138;
      v140 = v134[6];
      v141 = (_QWORD *)((char *)v48 + v140);
      v142 = (_QWORD *)((char *)v49 + v140);
      v143 = v142[1];
      *v141 = *v142;
      v141[1] = v143;
      v144 = v134[7];
      v145 = (_QWORD *)((char *)v48 + v144);
      v146 = (_QWORD *)((char *)v49 + v144);
      v147 = v146[1];
      *v145 = *v146;
      v145[1] = v147;
      *(_QWORD *)((char *)v48 + v134[8]) = *(_QWORD *)((char *)v49 + v134[8]);
      v148 = v134[9];
      v149 = (_QWORD *)((char *)v48 + v148);
      v150 = (_QWORD *)((char *)v49 + v148);
      v151 = v150[1];
      *v149 = *v150;
      v149[1] = v151;
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRetain(v143);
      swift_bridgeObjectRetain(v147);
      swift_bridgeObjectRetain(v151);
      v63 = v48;
      v64 = v50;
      v65 = 11;
      goto LABEL_60;
    case 13:
      v152 = v49[1];
      *v48 = *v49;
      v48[1] = v152;
      v153 = v49[3];
      v48[2] = v49[2];
      v48[3] = v153;
      v154 = v49[5];
      v385 = v49[4];
      v48[4] = v385;
      v48[5] = v154;
      *(_QWORD *)(v42 - 104) = v46;
      *(_QWORD *)(v42 - 96) = v50;
      v156 = v49[6];
      v155 = v49[7];
      v48[6] = v156;
      v48[7] = v155;
      v157 = v49[8];
      v48[8] = v157;
      v393 = type metadata accessor for SevereAlertComponentViewModel(0);
      v158 = *(int *)(v393 + 36);
      v373 = (char *)v49 + v158;
      v377 = (char *)v48 + v158;
      v159 = type metadata accessor for WeatherAlert.Prominence(0);
      v160 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v159 - 8) + 16);
      swift_bridgeObjectRetain(v152);
      swift_bridgeObjectRetain(v153);
      swift_bridgeObjectRetain(v385);
      swift_bridgeObjectRetain(v156);
      v161 = v157;
      v46 = *(int **)(v42 - 104);
      v162 = swift_bridgeObjectRetain(v161);
      v160(v377, v373, v159, v162);
      v64 = *(_QWORD *)(v42 - 96);
      v40 = *(int **)(v42 - 88);
      *(_QWORD *)((char *)v48 + *(int *)(v393 + 40)) = *(_QWORD *)((char *)v49 + *(int *)(v393 + 40));
      v63 = v48;
      v65 = 13;
      goto LABEL_60;
    case 14:
      v163 = type metadata accessor for SunriseSunsetViewModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v48, v49, v163);
      v63 = v48;
      v64 = v50;
      v65 = 14;
      goto LABEL_60;
    case 15:
      v164 = v49[1];
      *v48 = *v49;
      v48[1] = v164;
      v165 = v49[3];
      v48[2] = v49[2];
      v48[3] = v165;
      v166 = v49[5];
      v48[4] = v49[4];
      v48[5] = v166;
      v167 = v49[7];
      v48[6] = v49[6];
      v48[7] = v167;
      *(_QWORD *)(v42 - 104) = v46;
      *(_QWORD *)(v42 - 96) = v50;
      v168 = v49[9];
      v48[8] = v49[8];
      v48[9] = v168;
      v169 = v49[11];
      v48[10] = v49[10];
      v48[11] = v169;
      v394 = v49[13];
      v48[12] = v49[12];
      v48[13] = v394;
      v386 = v49[15];
      v48[14] = v49[14];
      v48[15] = v386;
      v378 = v49[17];
      v48[16] = v49[16];
      v48[17] = v378;
      v374 = v49[19];
      v48[18] = v49[18];
      v48[19] = v374;
      v370 = v49[21];
      v48[20] = v49[20];
      v48[21] = v370;
      v368 = v49[23];
      v48[22] = v49[22];
      v48[23] = v368;
      v170 = v49[24];
      v171 = v49[25];
      v48[24] = v170;
      v48[25] = v171;
      swift_bridgeObjectRetain(v164);
      swift_bridgeObjectRetain(v165);
      swift_bridgeObjectRetain(v166);
      swift_bridgeObjectRetain(v167);
      swift_bridgeObjectRetain(v168);
      v172 = v169;
      v46 = *(int **)(v42 - 104);
      swift_bridgeObjectRetain(v172);
      swift_bridgeObjectRetain(v394);
      swift_bridgeObjectRetain(v386);
      swift_bridgeObjectRetain(v378);
      swift_bridgeObjectRetain(v374);
      swift_bridgeObjectRetain(v370);
      swift_bridgeObjectRetain(v368);
      swift_bridgeObjectRetain(v171);
      v63 = v48;
      v64 = *(_QWORD *)(v42 - 96);
      v65 = 15;
      goto LABEL_60;
    case 16:
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v173 = v49[3];
      v48[2] = v49[2];
      v48[3] = v173;
      v174 = type metadata accessor for UVIndexComponentViewModel(0);
      v175 = *(int *)(v174 + 28);
      v387 = (char *)v49 + v175;
      v395 = (char *)v48 + v175;
      v176 = type metadata accessor for WeatherDescription(0);
      *(_QWORD *)(v42 - 96) = v50;
      v177 = v46;
      v178 = v176;
      v179 = v40;
      v180 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v176 - 8) + 16);
      v181 = swift_bridgeObjectRetain(v173);
      v182 = v178;
      v46 = v177;
      v180(v395, v387, v182, v181);
      v40 = v179;
      v183 = *(int *)(v174 + 32);
      v184 = *(_QWORD *)((char *)v49 + v183);
      *(_QWORD *)((char *)v48 + v183) = v184;
      swift_bridgeObjectRetain(v184);
      v63 = v48;
      v64 = *(_QWORD *)(v42 - 96);
      v65 = 16;
      goto LABEL_60;
    case 17:
      v185 = v49[1];
      *v48 = *v49;
      v48[1] = v185;
      v186 = v49[3];
      v48[2] = v49[2];
      v48[3] = v186;
      v187 = v49[5];
      v48[4] = v49[4];
      v48[5] = v187;
      swift_bridgeObjectRetain(v185);
      swift_bridgeObjectRetain(v186);
      swift_bridgeObjectRetain(v187);
      v63 = v48;
      v64 = v50;
      v65 = 17;
      goto LABEL_60;
    case 18:
      *(_QWORD *)(v42 - 104) = v46;
      *(_QWORD *)(v42 - 96) = v50;
      v188 = v49[1];
      *v48 = *v49;
      v48[1] = v188;
      v189 = v49[3];
      v48[2] = v49[2];
      v48[3] = v189;
      v190 = v49[5];
      v48[4] = v49[4];
      v48[5] = v190;
      v388 = v49[7];
      v48[6] = v49[6];
      v48[7] = v388;
      v379 = v49[9];
      v48[8] = v49[8];
      v48[9] = v379;
      v375 = v49[11];
      v48[10] = v49[10];
      v48[11] = v375;
      v371 = v49[13];
      v48[12] = v49[12];
      v48[13] = v371;
      v369 = v49[15];
      v48[14] = v49[14];
      v48[15] = v369;
      v367 = v49[17];
      v48[16] = v49[16];
      v48[17] = v367;
      v366 = v49[19];
      v48[18] = v49[18];
      v48[19] = v366;
      v191 = v49[21];
      v48[20] = v49[20];
      v48[21] = v191;
      *((_OWORD *)v48 + 11) = *((_OWORD *)v49 + 11);
      v364 = v49[24];
      v365 = v191;
      v48[24] = v364;
      v396 = type metadata accessor for WindComponentViewModel(0);
      v192 = *(int *)(v396 + 68);
      v362 = (char *)v49 + v192;
      v363 = (char *)v48 + v192;
      v193 = type metadata accessor for WindComponentCompassViewModel(0);
      v194 = v40;
      v195 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v193 - 8) + 16);
      swift_bridgeObjectRetain(v188);
      v196 = v189;
      v46 = *(int **)(v42 - 104);
      swift_bridgeObjectRetain(v196);
      swift_bridgeObjectRetain(v190);
      swift_bridgeObjectRetain(v388);
      swift_bridgeObjectRetain(v379);
      swift_bridgeObjectRetain(v375);
      swift_bridgeObjectRetain(v371);
      swift_bridgeObjectRetain(v369);
      swift_bridgeObjectRetain(v367);
      swift_bridgeObjectRetain(v366);
      swift_bridgeObjectRetain(v365);
      v197 = swift_bridgeObjectRetain(v364);
      v195(v363, v362, v193, v197);
      v40 = v194;
      v198 = *(int *)(v396 + 72);
      v199 = *(_QWORD *)((char *)v49 + v198);
      *(_QWORD *)((char *)v48 + v198) = v199;
      swift_bridgeObjectRetain(v199);
      v63 = v48;
      v64 = *(_QWORD *)(v42 - 96);
      v65 = 18;
      goto LABEL_60;
    default:
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      goto LABEL_61;
  }
}

uint64_t sub_100353BDC(uint64_t a1, uint64_t a2, int *a3)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  unsigned __int8 v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  char __dst;
  int *v116;
  uint64_t v118;

  if (a1 != a2)
  {
    sub_1000215BC(a1, type metadata accessor for LocationComponentHeaderViewModel);
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v6 = (char *)&loc_100353C58 + 4 * byte_100996925[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = type metadata accessor for LocationComponentContainerViewModel(0);
  v116 = a3;
  *(_WORD *)(a1 + *(int *)(v7 + 24)) = *(_WORD *)(a2 + *(int *)(v7 + 24));
  v8 = *(int *)(v7 + 28);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = type metadata accessor for LocationComponentAction(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload(v10))
      {
        case 0u:
          v14 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
          v15 = sub_1000BA294(&qword_100BC5FE8);
          v9[*(int *)(v15 + 48)] = v10[*(int *)(v15 + 48)];
          v16 = v9;
          v17 = v11;
          v18 = 0;
          goto LABEL_18;
        case 1u:
          v25 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v9, v10, v25);
          v16 = v9;
          v17 = v11;
          v18 = 1;
          goto LABEL_18;
        case 2u:
          v26 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v9, v10, v26);
          v27 = sub_1000BA294(&qword_100BC5FF8);
          v9[*(int *)(v27 + 48)] = v10[*(int *)(v27 + 48)];
          v16 = v9;
          v17 = v11;
          v18 = 2;
          goto LABEL_18;
        case 4u:
          *v9 = *v10;
          v28 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v29 = &v9[v28];
          v30 = &v10[v28];
          v31 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
          v16 = v9;
          v17 = v11;
          v18 = 4;
LABEL_18:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_25;
    }
    goto LABEL_9;
  }
  if (v13)
  {
    sub_1000215BC((uint64_t)v9, type metadata accessor for LocationComponentAction);
LABEL_9:
    v19 = *(_QWORD *)(sub_1000BA294(&qword_100BDA950) - 8);
LABEL_10:
    memcpy(v9, v10, *(_QWORD *)(v19 + 64));
    goto LABEL_25;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v9, type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload(v10))
    {
      case 0u:
        v20 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v9, v10, v20);
        v21 = sub_1000BA294(&qword_100BC5FE8);
        v9[*(int *)(v21 + 48)] = v10[*(int *)(v21 + 48)];
        v22 = v9;
        v23 = v11;
        v24 = 0;
        break;
      case 1u:
        v32 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v9, v10, v32);
        v22 = v9;
        v23 = v11;
        v24 = 1;
        break;
      case 2u:
        v33 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v9, v10, v33);
        v34 = sub_1000BA294(&qword_100BC5FF8);
        v9[*(int *)(v34 + 48)] = v10[*(int *)(v34 + 48)];
        v22 = v9;
        v23 = v11;
        v24 = 2;
        break;
      case 4u:
        *v9 = *v10;
        v35 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v36 = &v9[v35];
        v37 = &v10[v35];
        v38 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
        v22 = v9;
        v23 = v11;
        v24 = 4;
        break;
      default:
        v19 = *(_QWORD *)(v11 - 8);
        goto LABEL_10;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
  }
LABEL_25:
  v39 = a3[5];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  if (a1 != a2)
  {
    v43 = a3[6];
    v44 = (_QWORD *)(a1 + v43);
    v45 = (_QWORD *)(a2 + v43);
    sub_100021A14(a1 + v43, &qword_100BC37D8);
    v46 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v45) == 1)
    {
      v47 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
      v48 = v44;
      v49 = v46;
      v50 = 1;
    }
    else
    {
      *v44 = *v45;
      swift_retain();
      v48 = v44;
      v49 = v46;
      v50 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v49, v50);
  }
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_QWORD *)v53;
  v55 = *(_BYTE *)(v53 + 8);
  sub_10008D47C(*(_QWORD *)v53, v55);
  v56 = *(_QWORD *)v52;
  v57 = *(_BYTE *)(v52 + 8);
  *(_QWORD *)v52 = v54;
  *(_BYTE *)(v52 + 8) = v55;
  sub_1000B15F8(v56, v57);
  v58 = a3[8];
  v118 = a2;
  v59 = a1 + v58;
  v60 = v118 + v58;
  v61 = *(_QWORD *)v60;
  v62 = *(_QWORD *)(v60 + 8);
  v63 = *(_QWORD *)(v60 + 16);
  v64 = *(_QWORD *)(v60 + 24);
  v65 = *(_QWORD *)(v60 + 32);
  v66 = *(_QWORD *)(v60 + 40);
  v68 = *(_QWORD *)(v60 + 48);
  v67 = *(_QWORD *)(v60 + 56);
  v69 = *(_QWORD *)(v60 + 64);
  __dst = *(_BYTE *)(v60 + 72);
  sub_1000D4FF4(*(_QWORD *)v60, v62, v63, v64, v65, v66, v68, v67, v69, __dst);
  v70 = *(_QWORD *)v59;
  v71 = *(_QWORD *)(v59 + 8);
  v72 = *(_QWORD *)(v59 + 16);
  v73 = *(_QWORD *)(v59 + 24);
  v74 = *(_QWORD *)(v59 + 32);
  v75 = *(_QWORD *)(v59 + 40);
  v76 = *(_QWORD *)(v59 + 48);
  v77 = *(_QWORD *)(v59 + 56);
  v78 = *(_QWORD *)(v59 + 64);
  v79 = *(_BYTE *)(v59 + 72);
  *(_QWORD *)v59 = v61;
  *(_QWORD *)(v59 + 8) = v62;
  *(_QWORD *)(v59 + 16) = v63;
  *(_QWORD *)(v59 + 24) = v64;
  *(_QWORD *)(v59 + 32) = v65;
  *(_QWORD *)(v59 + 40) = v66;
  *(_QWORD *)(v59 + 48) = v68;
  *(_QWORD *)(v59 + 56) = v67;
  *(_QWORD *)(v59 + 64) = v69;
  *(_BYTE *)(v59 + 72) = __dst;
  sub_1000CEE98(v70, v71, v72, v73, v74, v75, v76, v77, v78, v79);
  v80 = v116[9];
  v81 = a1 + v80;
  v82 = v118 + v80;
  v83 = *(_QWORD *)v82;
  LOBYTE(v61) = *(_BYTE *)(v82 + 9);
  LOBYTE(v62) = *(_BYTE *)(v82 + 8);
  sub_100082BE8(*(_QWORD *)v82, v62, v61);
  v84 = *(_QWORD *)v81;
  v85 = *(_BYTE *)(v81 + 9);
  *(_QWORD *)v81 = v83;
  v86 = *(unsigned __int8 *)(v81 + 8);
  *(_BYTE *)(v81 + 8) = v62;
  *(_BYTE *)(v81 + 9) = v61;
  sub_100082C5C(v84, v86, v85);
  v87 = v116[10];
  v88 = a1 + v87;
  v89 = v118 + v87;
  v90 = *(_QWORD *)v89;
  LOBYTE(v61) = *(_BYTE *)(v89 + 8);
  sub_10008D47C(*(_QWORD *)v89, v61);
  v91 = *(_QWORD *)v88;
  v92 = *(_BYTE *)(v88 + 8);
  *(_QWORD *)v88 = v90;
  *(_BYTE *)(v88 + 8) = v61;
  sub_1000B15F8(v91, v92);
  v93 = v116[11];
  v94 = a1 + v93;
  v95 = v118 + v93;
  v96 = *(_QWORD *)v95;
  LOBYTE(v61) = *(_BYTE *)(v95 + 8);
  sub_10008D47C(*(_QWORD *)v95, v61);
  v97 = *(_QWORD *)v94;
  v98 = *(_BYTE *)(v94 + 8);
  *(_QWORD *)v94 = v96;
  *(_BYTE *)(v94 + 8) = v61;
  sub_1000B15F8(v97, v98);
  if (a1 != v118)
  {
    v99 = v116[12];
    v100 = (_QWORD *)(a1 + v99);
    v101 = (_QWORD *)(v118 + v99);
    sub_100021A14(a1 + v99, &qword_100BC2908);
    v102 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v101) == 1)
    {
      v103 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v100, v101, v103);
      v104 = 1;
    }
    else
    {
      *v100 = *v101;
      swift_retain();
      v104 = 0;
    }
    swift_storeEnumTagMultiPayload(v100, v102, v104);
  }
  v105 = v116[13];
  v106 = a1 + v105;
  v107 = v118 + v105;
  v108 = *(_QWORD *)v107;
  v109 = *(_BYTE *)(v107 + 9);
  v110 = *(_BYTE *)(v107 + 8);
  sub_100082BE8(*(_QWORD *)v107, v110, v109);
  v111 = *(_QWORD *)v106;
  v112 = *(_BYTE *)(v106 + 9);
  *(_QWORD *)v106 = v108;
  v113 = *(unsigned __int8 *)(v106 + 8);
  *(_BYTE *)(v106 + 8) = v110;
  *(_BYTE *)(v106 + 9) = v109;
  sub_100082C5C(v111, v113, v112);
  return a1;
}

_BYTE *sub_1003557F8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *__src;
  char *__srca;
  int *v183;
  int *v184;
  uint64_t v185;
  int *v186;
  int *__dstb;
  char *__dst;
  void *__dsta;
  void *__dstc;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (swift_getEnumCaseMultiPayload(a2) == 3)
  {
    v7 = type metadata accessor for WeatherDescription(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    v9 = *(int *)(v8 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
    a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload(a1, v6, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v13 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v14 = v13[5];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for LocationComponentViewModel(0);
  switch(swift_getEnumCaseMultiPayload(v16))
  {
    case 1u:
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v18 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v19 = v18[5];
      v20 = &v15[v19];
      v191 = v17;
      v21 = &v16[v19];
      v22 = sub_1000BA294(&qword_100BC4E68);
      __dstb = v13;
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      v23(&v15[v18[6]], &v16[v18[6]], v22);
      v23(&v15[v18[7]], &v16[v18[7]], v22);
      v13 = __dstb;
      v24 = v191;
      *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
      *(_OWORD *)&v15[v18[9]] = *(_OWORD *)&v16[v18[9]];
      v25 = v15;
      v26 = 1;
      goto LABEL_51;
    case 2u:
      v192 = v17;
      v27 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v27;
      v28 = type metadata accessor for FeelsLikeComponentViewModel(0);
      v29 = *(int *)(v28 + 24);
      v30 = &v15[v29];
      v31 = &v16[v29];
      v32 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
      {
        v33 = sub_1000BA294(&qword_100BC3360);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v30 = *(_OWORD *)v31;
        v89 = *(int *)(v32 + 20);
        __dstc = (void *)v28;
        v90 = &v30[v89];
        v91 = &v31[v89];
        v92 = type metadata accessor for TemperatureScaleConfiguration(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
        v93 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(_QWORD *)&v90[v93[5]] = *(_QWORD *)&v91[v93[5]];
        *(_QWORD *)&v90[v93[6]] = *(_QWORD *)&v91[v93[6]];
        *(_QWORD *)&v90[v93[7]] = *(_QWORD *)&v91[v93[7]];
        *(_OWORD *)&v90[v93[8]] = *(_OWORD *)&v91[v93[8]];
        v90[v93[9]] = v91[v93[9]];
        v28 = (uint64_t)__dstc;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
      }
      v24 = v192;
      *(_OWORD *)&v15[*(int *)(v28 + 28)] = *(_OWORD *)&v16[*(int *)(v28 + 28)];
      v25 = v15;
      v26 = 2;
      goto LABEL_51;
    case 5u:
      v34 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v15, v16, v34);
      v35 = (int *)type metadata accessor for MapComponentViewModel(0);
      v36 = v35[5];
      v37 = &v15[v36];
      v38 = &v16[v36];
      v39 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      v40 = v35[6];
      __dst = &v15[v40];
      v41 = &v16[v40];
      v42 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
      {
        v43 = sub_1000BA294(&qword_100BC3460);
        memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v183 = v35;
        v184 = (int *)v42;
        v194 = v17;
        *(_OWORD *)__dst = *(_OWORD *)v41;
        v94 = *(int *)(v42 + 20);
        v178 = &__dst[v94];
        v95 = &v41[v94];
        v96 = type metadata accessor for Locale(0);
        __src = v41;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          v97 = sub_1000BA294(&qword_100BC3340);
          memcpy(v178, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v178, v95, v96);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v96);
        }
        v103 = v184[6];
        v179 = &__dst[v103];
        v104 = &v41[v103];
        v105 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v179, v104, v105);
        v106 = v184[7];
        v107 = &__dst[v106];
        v108 = &__src[v106];
        v109 = sub_1000BA294(&qword_100BC3348);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
        {
          v110 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          v111 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v107, v108, v111);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
        }
        v112 = v184[8];
        v113 = &__dst[v112];
        v114 = &__src[v112];
        v115 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload(v114) == 1)
        {
          v116 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v113, v114, v116);
          swift_storeEnumTagMultiPayload(v113, v115, 1);
        }
        else
        {
          memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        v117 = v184[9];
        v118 = &__dst[v117];
        v119 = (uint64_t)&__src[v117];
        v120 = type metadata accessor for WeatherDataOverrides(0);
        __srca = (char *)v119;
        v121 = _s7Weather24LocationCompositionStateOwet_0(v119, 1, v120);
        v17 = v194;
        v35 = v183;
        if (v121)
        {
          v122 = sub_1000BA294(&qword_100BC3350);
          memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          v177 = v120;
          v180 = v118;
          v123 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srca, 1, v123))
          {
            v124 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v118, __srca, v123);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v123);
          }
          v125 = *(int *)(v120 + 20);
          v126 = &v118[v125];
          v127 = &__srca[v125];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srca[v125], 1, v123))
          {
            v128 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v126, v127, v123);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v123);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v180, 0, 1, v177);
          v35 = v183;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v184);
      }
      *(_OWORD *)&v15[v35[7]] = *(_OWORD *)&v16[v35[7]];
      v25 = v15;
      v24 = v17;
      v26 = 5;
      goto LABEL_51;
    case 6u:
      v44 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v44;
      v15[32] = v16[32];
      *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
      v45 = (int *)type metadata accessor for MoonComponentViewModel(0);
      v46 = v45[7];
      v47 = &v15[v46];
      v48 = &v16[v46];
      v49 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      v15[v45[8]] = v16[v45[8]];
      *(_QWORD *)&v15[v45[9]] = *(_QWORD *)&v16[v45[9]];
      v25 = v15;
      v24 = v17;
      v26 = 6;
      goto LABEL_51;
    case 7u:
      v50 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v16) == 1)
      {
        __dsta = (void *)v50;
        v193 = v17;
        *(_OWORD *)v15 = *(_OWORD *)v16;
        v51 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v52 = v51[5];
        v53 = &v15[v52];
        v54 = &v16[v52];
        v55 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
        {
          v56 = sub_1000BA294(&qword_100BD4280);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
        }
        else
        {
          v98 = v53;
          v185 = (uint64_t)v53;
          v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
          v57(v98, v54, v55);
          _s7Weather24LocationCompositionStateOwst_0(v185, 0, 1, v55);
        }
        *(_OWORD *)&v15[v51[6]] = *(_OWORD *)&v16[v51[6]];
        v57(&v15[v51[7]], &v16[v51[7]], v55);
        v186 = v51;
        v99 = v51[8];
        v100 = &v15[v99];
        v101 = &v16[v99];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v16[v99], 1, v55))
        {
          v102 = sub_1000BA294(&qword_100BD4280);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v57(v100, v101, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v55);
        }
        v17 = v193;
        v15[v186[9]] = v16[v186[9]];
        swift_storeEnumTagMultiPayload(v15, __dsta, 1);
      }
      else
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      v25 = v15;
      v24 = v17;
      v26 = 7;
      goto LABEL_51;
    case 8u:
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v58 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      v59 = &v15[v58];
      v60 = &v16[v58];
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v59, v60, HourPrecipitationChartViewModel);
      v25 = v15;
      v24 = v17;
      v26 = 8;
      goto LABEL_51;
    case 9u:
      v62 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v15, v16, v62);
      v63 = type metadata accessor for NotificationsOptInComponentViewModel(0);
      v15[*(int *)(v63 + 20)] = v16[*(int *)(v63 + 20)];
      v25 = v15;
      v24 = v17;
      v26 = 9;
      goto LABEL_51;
    case 0xBu:
      v64 = type metadata accessor for PressureTrend(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v15, v16, v64);
      v65 = (int *)type metadata accessor for PressureComponentViewModel(0);
      *(_OWORD *)&v15[v65[5]] = *(_OWORD *)&v16[v65[5]];
      *(_OWORD *)&v15[v65[6]] = *(_OWORD *)&v16[v65[6]];
      *(_OWORD *)&v15[v65[7]] = *(_OWORD *)&v16[v65[7]];
      *(_QWORD *)&v15[v65[8]] = *(_QWORD *)&v16[v65[8]];
      *(_OWORD *)&v15[v65[9]] = *(_OWORD *)&v16[v65[9]];
      v25 = v15;
      v24 = v17;
      v26 = 11;
      goto LABEL_51;
    case 0xDu:
      v66 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v66;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
      *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
      v67 = type metadata accessor for SevereAlertComponentViewModel(0);
      v68 = *(int *)(v67 + 36);
      v69 = &v15[v68];
      v70 = &v16[v68];
      v71 = type metadata accessor for WeatherAlert.Prominence(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
      *(_QWORD *)&v15[*(int *)(v67 + 40)] = *(_QWORD *)&v16[*(int *)(v67 + 40)];
      v25 = v15;
      v24 = v17;
      v26 = 13;
      goto LABEL_51;
    case 0xEu:
      v72 = type metadata accessor for SunriseSunsetViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v15, v16, v72);
      v25 = v15;
      v24 = v17;
      v26 = 14;
      goto LABEL_51;
    case 0x10u:
      v73 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v73;
      v74 = type metadata accessor for UVIndexComponentViewModel(0);
      v75 = *(int *)(v74 + 28);
      v76 = &v15[v75];
      v77 = &v16[v75];
      v78 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
      *(_QWORD *)&v15[*(int *)(v74 + 32)] = *(_QWORD *)&v16[*(int *)(v74 + 32)];
      v25 = v15;
      v24 = v17;
      v26 = 16;
      goto LABEL_51;
    case 0x12u:
      v79 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v79;
      v80 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v80;
      v81 = *((_OWORD *)v16 + 5);
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      *((_OWORD *)v15 + 5) = v81;
      v82 = *((_OWORD *)v16 + 7);
      *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
      *((_OWORD *)v15 + 7) = v82;
      v83 = *((_OWORD *)v16 + 9);
      *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
      *((_OWORD *)v15 + 9) = v83;
      *((_OWORD *)v15 + 10) = *((_OWORD *)v16 + 10);
      *((_QWORD *)v15 + 22) = *((_QWORD *)v16 + 22);
      *(_OWORD *)(v15 + 184) = *(_OWORD *)(v16 + 184);
      v84 = type metadata accessor for WindComponentViewModel(0);
      v85 = *(int *)(v84 + 68);
      v86 = &v15[v85];
      v87 = &v16[v85];
      v88 = type metadata accessor for WindComponentCompassViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
      *(_QWORD *)&v15[*(int *)(v84 + 72)] = *(_QWORD *)&v16[*(int *)(v84 + 72)];
      v25 = v15;
      v24 = v17;
      v26 = 18;
LABEL_51:
      swift_storeEnumTagMultiPayload(v25, v24, v26);
      break;
    default:
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      break;
  }
  *(_WORD *)&a1[v13[6]] = *(_WORD *)&a2[v13[6]];
  v129 = v13[7];
  v130 = &a1[v129];
  v131 = &a2[v129];
  v132 = type metadata accessor for LocationComponentAction(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132))
  {
    v133 = sub_1000BA294(&qword_100BDA950);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v131))
    {
      case 0u:
        v134 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v130, v131, v134);
        v135 = sub_1000BA294(&qword_100BC5FE8);
        v130[*(int *)(v135 + 48)] = v131[*(int *)(v135 + 48)];
        v136 = v130;
        v137 = v132;
        v138 = 0;
        goto LABEL_60;
      case 1u:
        v139 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v130, v131, v139);
        v136 = v130;
        v137 = v132;
        v138 = 1;
        goto LABEL_60;
      case 2u:
        v140 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v130, v131, v140);
        v141 = sub_1000BA294(&qword_100BC5FF8);
        v130[*(int *)(v141 + 48)] = v131[*(int *)(v141 + 48)];
        v136 = v130;
        v137 = v132;
        v138 = 2;
        goto LABEL_60;
      case 4u:
        *v130 = *v131;
        v142 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v143 = &v130[v142];
        v144 = &v131[v142];
        v145 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
        v136 = v130;
        v137 = v132;
        v138 = 4;
LABEL_60:
        swift_storeEnumTagMultiPayload(v136, v137, v138);
        break;
      default:
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
  }
  v146 = a3[5];
  v147 = &a1[v146];
  v148 = &a2[v146];
  v149 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v147, v148, v149);
  v150 = a3[6];
  v151 = &a1[v150];
  v152 = &a2[v150];
  v153 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v152) == 1)
  {
    v154 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v151, v152, v154);
    swift_storeEnumTagMultiPayload(v151, v153, 1);
  }
  else
  {
    memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
  }
  v155 = a3[7];
  v156 = a3[8];
  v157 = &a1[v155];
  v158 = &a2[v155];
  *(_QWORD *)v157 = *(_QWORD *)v158;
  v157[8] = v158[8];
  memcpy(&a1[v156], &a2[v156], 0x49uLL);
  v159 = a3[9];
  v160 = a3[10];
  v161 = &a1[v159];
  v162 = &a2[v159];
  *(_QWORD *)v161 = *(_QWORD *)v162;
  *((_WORD *)v161 + 4) = *((_WORD *)v162 + 4);
  v163 = &a1[v160];
  v164 = &a2[v160];
  *(_QWORD *)v163 = *(_QWORD *)v164;
  v163[8] = v164[8];
  v165 = a3[11];
  v166 = a3[12];
  v167 = &a1[v165];
  v168 = &a2[v165];
  *(_QWORD *)v167 = *(_QWORD *)v168;
  v167[8] = v168[8];
  v169 = &a1[v166];
  v170 = &a2[v166];
  v171 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v170) == 1)
  {
    v172 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v169, v170, v172);
    swift_storeEnumTagMultiPayload(v169, v171, 1);
  }
  else
  {
    memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
  }
  v173 = a3[13];
  v174 = &a1[v173];
  v175 = &a2[v173];
  *(_QWORD *)v174 = *(_QWORD *)v175;
  *((_WORD *)v174 + 4) = *((_WORD *)v175 + 4);
  return a1;
}

_BYTE *sub_100356738(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _BYTE *v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v226;
  char *v227;
  char *v228;
  char *v229;
  char *__src;
  char *__srca;
  int *v232;
  int *v233;
  uint64_t v234;
  int *v235;
  char *__dstb;
  char *__dst;
  void *__dsta;
  void *__dstc;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationComponentHeaderViewModel);
    v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 3)
    {
      v7 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v9 = *(int *)(v8 + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload(a1, v6, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v13 = type metadata accessor for LocationComponentContainerViewModel(0);
  v14 = v13;
  if (a1 != a2)
  {
    v15 = *(int *)(v13 + 20);
    v16 = &a1[v15];
    v17 = &a2[v15];
    sub_1000215BC((uint64_t)&a1[v15], type metadata accessor for LocationComponentViewModel);
    v18 = type metadata accessor for LocationComponentViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v17))
    {
      case 1u:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        v19 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        v20 = v19[5];
        __dstb = &v16[v20];
        v240 = v18;
        v21 = &v17[v20];
        v22 = sub_1000BA294(&qword_100BC4E68);
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
        v23(__dstb, v21, v22);
        v23(&v16[v19[6]], &v17[v19[6]], v22);
        v23(&v16[v19[7]], &v17[v19[7]], v22);
        *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
        *(_OWORD *)&v16[v19[9]] = *(_OWORD *)&v17[v19[9]];
        v24 = v16;
        v25 = v240;
        v26 = 1;
        goto LABEL_53;
      case 2u:
        v241 = v18;
        v27 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v27;
        v28 = type metadata accessor for FeelsLikeComponentViewModel(0);
        v29 = *(int *)(v28 + 24);
        v30 = &v16[v29];
        v31 = &v17[v29];
        v32 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
        {
          v33 = sub_1000BA294(&qword_100BC3360);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
          v89 = *(int *)(v32 + 20);
          __dstc = (void *)v28;
          v90 = &v30[v89];
          v91 = &v31[v89];
          v92 = type metadata accessor for TemperatureScaleConfiguration(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
          v93 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(_QWORD *)&v90[v93[5]] = *(_QWORD *)&v91[v93[5]];
          *(_QWORD *)&v90[v93[6]] = *(_QWORD *)&v91[v93[6]];
          *(_QWORD *)&v90[v93[7]] = *(_QWORD *)&v91[v93[7]];
          *(_OWORD *)&v90[v93[8]] = *(_OWORD *)&v91[v93[8]];
          v90[v93[9]] = v91[v93[9]];
          v28 = (uint64_t)__dstc;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
        }
        v25 = v241;
        *(_OWORD *)&v16[*(int *)(v28 + 28)] = *(_OWORD *)&v17[*(int *)(v28 + 28)];
        v24 = v16;
        v26 = 2;
        goto LABEL_53;
      case 5u:
        v34 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v16, v17, v34);
        v35 = (int *)type metadata accessor for MapComponentViewModel(0);
        v36 = v35[5];
        v37 = &v16[v36];
        v38 = &v17[v36];
        v39 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        v40 = v35[6];
        __dst = &v16[v40];
        v41 = &v17[v40];
        v42 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
        {
          v43 = sub_1000BA294(&qword_100BC3460);
          memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v232 = v35;
          v233 = (int *)v42;
          v243 = v18;
          *(_OWORD *)__dst = *(_OWORD *)v41;
          v94 = *(int *)(v42 + 20);
          v227 = &__dst[v94];
          v95 = &v41[v94];
          v96 = type metadata accessor for Locale(0);
          __src = v41;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
          {
            v97 = sub_1000BA294(&qword_100BC3340);
            memcpy(v227, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v227, v95, v96);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v96);
          }
          v103 = v233[6];
          v228 = &__dst[v103];
          v104 = &v41[v103];
          v105 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v228, v104, v105);
          v106 = v233[7];
          v107 = &__dst[v106];
          v108 = &__src[v106];
          v109 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
          {
            v110 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
          }
          else
          {
            v111 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v107, v108, v111);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
          }
          v112 = v233[8];
          v113 = &__dst[v112];
          v114 = &__src[v112];
          v115 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v114) == 1)
          {
            v116 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v113, v114, v116);
            swift_storeEnumTagMultiPayload(v113, v115, 1);
          }
          else
          {
            memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          }
          v117 = v233[9];
          v118 = &__dst[v117];
          v119 = (uint64_t)&__src[v117];
          v120 = type metadata accessor for WeatherDataOverrides(0);
          __srca = (char *)v119;
          v121 = _s7Weather24LocationCompositionStateOwet_0(v119, 1, v120);
          v18 = v243;
          v35 = v232;
          if (v121)
          {
            v122 = sub_1000BA294(&qword_100BC3350);
            memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
          }
          else
          {
            v226 = v120;
            v229 = v118;
            v123 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srca, 1, v123))
            {
              v124 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v118, __srca, v123);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v123);
            }
            v125 = *(int *)(v120 + 20);
            v126 = &v118[v125];
            v127 = &__srca[v125];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srca[v125], 1, v123))
            {
              v128 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v126, v127, v123);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v123);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v229, 0, 1, v226);
            v35 = v232;
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v233);
        }
        *(_OWORD *)&v16[v35[7]] = *(_OWORD *)&v17[v35[7]];
        v24 = v16;
        v25 = v18;
        v26 = 5;
        goto LABEL_53;
      case 6u:
        v44 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v44;
        v16[32] = v17[32];
        *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
        v45 = (int *)type metadata accessor for MoonComponentViewModel(0);
        v46 = v45[7];
        v47 = &v16[v46];
        v48 = &v17[v46];
        v49 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        v16[v45[8]] = v17[v45[8]];
        *(_QWORD *)&v16[v45[9]] = *(_QWORD *)&v17[v45[9]];
        v24 = v16;
        v25 = v18;
        v26 = 6;
        goto LABEL_53;
      case 7u:
        v50 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v17) == 1)
        {
          __dsta = (void *)v50;
          v242 = v18;
          *(_OWORD *)v16 = *(_OWORD *)v17;
          v51 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v52 = v51[5];
          v53 = &v16[v52];
          v54 = &v17[v52];
          v55 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
          {
            v56 = sub_1000BA294(&qword_100BD4280);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
            v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
          }
          else
          {
            v98 = v53;
            v234 = (uint64_t)v53;
            v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
            v57(v98, v54, v55);
            _s7Weather24LocationCompositionStateOwst_0(v234, 0, 1, v55);
          }
          *(_OWORD *)&v16[v51[6]] = *(_OWORD *)&v17[v51[6]];
          v57(&v16[v51[7]], &v17[v51[7]], v55);
          v235 = v51;
          v99 = v51[8];
          v100 = &v16[v99];
          v101 = &v17[v99];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v17[v99], 1, v55))
          {
            v102 = sub_1000BA294(&qword_100BD4280);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
          }
          else
          {
            v57(v100, v101, v55);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v55);
          }
          v18 = v242;
          v16[v235[9]] = v17[v235[9]];
          swift_storeEnumTagMultiPayload(v16, __dsta, 1);
        }
        else
        {
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        v24 = v16;
        v25 = v18;
        v26 = 7;
        goto LABEL_53;
      case 8u:
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v58 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
        v59 = &v16[v58];
        v60 = &v17[v58];
        HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v59, v60, HourPrecipitationChartViewModel);
        v24 = v16;
        v25 = v18;
        v26 = 8;
        goto LABEL_53;
      case 9u:
        v62 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v16, v17, v62);
        v63 = type metadata accessor for NotificationsOptInComponentViewModel(0);
        v16[*(int *)(v63 + 20)] = v17[*(int *)(v63 + 20)];
        v24 = v16;
        v25 = v18;
        v26 = 9;
        goto LABEL_53;
      case 0xBu:
        v64 = type metadata accessor for PressureTrend(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v16, v17, v64);
        v65 = (int *)type metadata accessor for PressureComponentViewModel(0);
        *(_OWORD *)&v16[v65[5]] = *(_OWORD *)&v17[v65[5]];
        *(_OWORD *)&v16[v65[6]] = *(_OWORD *)&v17[v65[6]];
        *(_OWORD *)&v16[v65[7]] = *(_OWORD *)&v17[v65[7]];
        *(_QWORD *)&v16[v65[8]] = *(_QWORD *)&v17[v65[8]];
        *(_OWORD *)&v16[v65[9]] = *(_OWORD *)&v17[v65[9]];
        v24 = v16;
        v25 = v18;
        v26 = 11;
        goto LABEL_53;
      case 0xDu:
        v66 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v66;
        *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
        *(_OWORD *)(v16 + 40) = *(_OWORD *)(v17 + 40);
        *(_OWORD *)(v16 + 56) = *(_OWORD *)(v17 + 56);
        v67 = type metadata accessor for SevereAlertComponentViewModel(0);
        v68 = *(int *)(v67 + 36);
        v69 = &v16[v68];
        v70 = &v17[v68];
        v71 = type metadata accessor for WeatherAlert.Prominence(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
        *(_QWORD *)&v16[*(int *)(v67 + 40)] = *(_QWORD *)&v17[*(int *)(v67 + 40)];
        v24 = v16;
        v25 = v18;
        v26 = 13;
        goto LABEL_53;
      case 0xEu:
        v72 = type metadata accessor for SunriseSunsetViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v16, v17, v72);
        v24 = v16;
        v25 = v18;
        v26 = 14;
        goto LABEL_53;
      case 0x10u:
        v73 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v73;
        v74 = type metadata accessor for UVIndexComponentViewModel(0);
        v75 = *(int *)(v74 + 28);
        v76 = &v16[v75];
        v77 = &v17[v75];
        v78 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
        *(_QWORD *)&v16[*(int *)(v74 + 32)] = *(_QWORD *)&v17[*(int *)(v74 + 32)];
        v24 = v16;
        v25 = v18;
        v26 = 16;
        goto LABEL_53;
      case 0x12u:
        v79 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v79;
        v80 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v80;
        v81 = *((_OWORD *)v17 + 5);
        *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
        *((_OWORD *)v16 + 5) = v81;
        v82 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v82;
        v83 = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
        *((_OWORD *)v16 + 9) = v83;
        *((_OWORD *)v16 + 10) = *((_OWORD *)v17 + 10);
        *((_QWORD *)v16 + 22) = *((_QWORD *)v17 + 22);
        *(_OWORD *)(v16 + 184) = *(_OWORD *)(v17 + 184);
        v84 = type metadata accessor for WindComponentViewModel(0);
        v85 = *(int *)(v84 + 68);
        v86 = &v16[v85];
        v87 = &v17[v85];
        v88 = type metadata accessor for WindComponentCompassViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
        *(_QWORD *)&v16[*(int *)(v84 + 72)] = *(_QWORD *)&v17[*(int *)(v84 + 72)];
        v24 = v16;
        v25 = v18;
        v26 = 18;
LABEL_53:
        swift_storeEnumTagMultiPayload(v24, v25, v26);
        break;
      default:
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        break;
    }
  }
  *(_WORD *)&a1[*(int *)(v14 + 24)] = *(_WORD *)&a2[*(int *)(v14 + 24)];
  v129 = *(int *)(v14 + 28);
  v130 = &a1[v129];
  v131 = &a2[v129];
  v132 = type metadata accessor for LocationComponentAction(0);
  v133 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v132);
  v134 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132);
  if (v133)
  {
    if (!v134)
    {
      switch(swift_getEnumCaseMultiPayload(v131))
      {
        case 0u:
          v135 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v130, v131, v135);
          v136 = sub_1000BA294(&qword_100BC5FE8);
          v130[*(int *)(v136 + 48)] = v131[*(int *)(v136 + 48)];
          v137 = v130;
          v138 = v132;
          v139 = 0;
          goto LABEL_69;
        case 1u:
          v146 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v130, v131, v146);
          v137 = v130;
          v138 = v132;
          v139 = 1;
          goto LABEL_69;
        case 2u:
          v147 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v130, v131, v147);
          v148 = sub_1000BA294(&qword_100BC5FF8);
          v130[*(int *)(v148 + 48)] = v131[*(int *)(v148 + 48)];
          v137 = v130;
          v138 = v132;
          v139 = 2;
          goto LABEL_69;
        case 4u:
          *v130 = *v131;
          v149 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v150 = &v130[v149];
          v151 = &v131[v149];
          v152 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v150, v151, v152);
          v137 = v130;
          v138 = v132;
          v139 = 4;
LABEL_69:
          swift_storeEnumTagMultiPayload(v137, v138, v139);
          break;
        default:
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
      goto LABEL_76;
    }
    goto LABEL_60;
  }
  if (v134)
  {
    sub_1000215BC((uint64_t)v130, type metadata accessor for LocationComponentAction);
LABEL_60:
    v140 = *(_QWORD *)(sub_1000BA294(&qword_100BDA950) - 8);
LABEL_61:
    memcpy(v130, v131, *(_QWORD *)(v140 + 64));
    goto LABEL_76;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v130, type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload(v131))
    {
      case 0u:
        v141 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v130, v131, v141);
        v142 = sub_1000BA294(&qword_100BC5FE8);
        v130[*(int *)(v142 + 48)] = v131[*(int *)(v142 + 48)];
        v143 = v130;
        v144 = v132;
        v145 = 0;
        break;
      case 1u:
        v153 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v130, v131, v153);
        v143 = v130;
        v144 = v132;
        v145 = 1;
        break;
      case 2u:
        v154 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v130, v131, v154);
        v155 = sub_1000BA294(&qword_100BC5FF8);
        v130[*(int *)(v155 + 48)] = v131[*(int *)(v155 + 48)];
        v143 = v130;
        v144 = v132;
        v145 = 2;
        break;
      case 4u:
        *v130 = *v131;
        v156 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v157 = &v130[v156];
        v158 = &v131[v156];
        v159 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
        v143 = v130;
        v144 = v132;
        v145 = 4;
        break;
      default:
        v140 = *(_QWORD *)(v132 - 8);
        goto LABEL_61;
    }
    swift_storeEnumTagMultiPayload(v143, v144, v145);
  }
LABEL_76:
  v160 = a3[5];
  v161 = &a1[v160];
  v162 = &a2[v160];
  v163 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 40))(v161, v162, v163);
  if (a1 != a2)
  {
    v164 = a3[6];
    v165 = &a1[v164];
    v166 = &a2[v164];
    sub_100021A14((uint64_t)&a1[v164], &qword_100BC37D8);
    v167 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v166) == 1)
    {
      v168 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v165, v166, v168);
      swift_storeEnumTagMultiPayload(v165, v167, 1);
    }
    else
    {
      memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
    }
  }
  v169 = a3[7];
  v170 = &a1[v169];
  v171 = &a2[v169];
  v172 = *(_QWORD *)v171;
  LOBYTE(v171) = v171[8];
  v173 = *(_QWORD *)v170;
  v174 = v170[8];
  *(_QWORD *)v170 = v172;
  v170[8] = (char)v171;
  sub_1000B15F8(v173, v174);
  v175 = a3[8];
  v176 = &a1[v175];
  v177 = &a2[v175];
  v178 = *((_QWORD *)v177 + 8);
  v179 = v177[72];
  v180 = *(_QWORD *)v176;
  v181 = *((_QWORD *)v176 + 1);
  v182 = *((_QWORD *)v176 + 2);
  v183 = *((_QWORD *)v176 + 3);
  v184 = *((_QWORD *)v176 + 4);
  v185 = *((_QWORD *)v176 + 5);
  v186 = *((_QWORD *)v176 + 6);
  v187 = *((_QWORD *)v176 + 7);
  v188 = *((_QWORD *)v176 + 8);
  v189 = v176[72];
  v190 = *((_OWORD *)v177 + 1);
  *(_OWORD *)v176 = *(_OWORD *)v177;
  *((_OWORD *)v176 + 1) = v190;
  v191 = *((_OWORD *)v177 + 3);
  *((_OWORD *)v176 + 2) = *((_OWORD *)v177 + 2);
  *((_OWORD *)v176 + 3) = v191;
  *((_QWORD *)v176 + 8) = v178;
  v176[72] = v179;
  sub_1000CEE98(v180, v181, v182, v183, v184, v185, v186, v187, v188, v189);
  v192 = a3[9];
  v193 = &a1[v192];
  v194 = &a2[v192];
  v195 = *(_QWORD *)v194;
  v196 = v194[8];
  LOBYTE(v194) = v194[9];
  v197 = *(_QWORD *)v193;
  v198 = v193[9];
  *(_QWORD *)v193 = v195;
  v199 = v193[8];
  v193[8] = v196;
  v193[9] = (char)v194;
  sub_100082C5C(v197, v199, v198);
  v200 = a3[10];
  v201 = &a1[v200];
  v202 = &a2[v200];
  v203 = *(_QWORD *)v202;
  LOBYTE(v202) = v202[8];
  v204 = *(_QWORD *)v201;
  v205 = v201[8];
  *(_QWORD *)v201 = v203;
  v201[8] = (char)v202;
  sub_1000B15F8(v204, v205);
  v206 = a3[11];
  v207 = &a1[v206];
  v208 = &a2[v206];
  v209 = *(_QWORD *)v208;
  LOBYTE(v208) = v208[8];
  v210 = *(_QWORD *)v207;
  v211 = v207[8];
  *(_QWORD *)v207 = v209;
  v207[8] = (char)v208;
  sub_1000B15F8(v210, v211);
  if (a1 != a2)
  {
    v212 = a3[12];
    v213 = &a1[v212];
    v214 = &a2[v212];
    sub_100021A14((uint64_t)&a1[v212], &qword_100BC2908);
    v215 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v214) == 1)
    {
      v216 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v213, v214, v216);
      swift_storeEnumTagMultiPayload(v213, v215, 1);
    }
    else
    {
      memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
    }
  }
  v217 = a3[13];
  v218 = &a1[v217];
  v219 = &a2[v217];
  v220 = *(_QWORD *)v219;
  v221 = v219[8];
  LOBYTE(v219) = v219[9];
  v222 = *(_QWORD *)v218;
  v223 = v218[9];
  *(_QWORD *)v218 = v220;
  v224 = v218[8];
  v218[8] = v221;
  v218[9] = (char)v219;
  sub_100082C5C(v222, v224, v223);
  return a1;
}

uint64_t sub_100357900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035790C);
}

void sub_10035790C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1000B4828();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    sub_1000BCF7C();
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      sub_1000BA294((uint64_t *)&unk_100C09CA0);
      sub_100088FF0();
      if (v12)
      {
        v7 = v13;
        v11 = a3[6];
      }
      else
      {
        if ((_DWORD)v3 == 254)
        {
          sub_100079F70();
          return;
        }
        v7 = sub_1000BA294(&qword_100BC3800);
        v11 = a3[12];
      }
    }
    v8 = v4 + v11;
  }
  sub_1000B250C(v8, v3, v7);
}

uint64_t sub_1003579BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003579C8);
}

void sub_1003579C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1000B4828();
  sub_10009D2E8();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    sub_1000BCF7C();
    sub_10009D2E8();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      sub_1000BA294((uint64_t *)&unk_100C09CA0);
      sub_10009D2E8();
      if (v14)
      {
        v9 = v15;
        v13 = a4[6];
      }
      else
      {
        if (a3 == 254)
        {
          *(_BYTE *)(v5 + a4[7] + 8) = -(char)v4;
          sub_100079F70();
          return;
        }
        v9 = sub_1000BA294(&qword_100BC3800);
        v13 = a4[12];
      }
    }
    v10 = v5 + v13;
  }
  sub_1000987C4(v10, v4, v4, v9);
}

uint64_t type metadata accessor for ComputeAppropriateLocationComponentHeaderViewModelModifier(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDA9B0, (uint64_t)&nominal type descriptor for ComputeAppropriateLocationComponentHeaderViewModelModifier);
}

void sub_100357A8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[10];

  v2 = type metadata accessor for LocationComponentContainerViewModel(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Text.Measurements(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100158B48(319, (unint64_t *)&qword_100BC3888, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        v10[3] = "\t";
        v10[4] = &unk_100996AA8;
        v10[5] = &unk_100996AC0;
        v10[6] = "\t";
        v10[7] = "\t";
        sub_100158B48(319, (unint64_t *)&qword_100BC3880, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
        if (v9 <= 0x3F)
        {
          v10[8] = *(_QWORD *)(v8 - 8) + 64;
          v10[9] = &unk_100996AC0;
          swift_initStructMetadata(a1, 256, 10, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_100357B88(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1B48, 1);
}

void sub_100357B98()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
  sub_10004037C((uint64_t)v0, qword_100BDA890);
  v1 = sub_1000AECD4((uint64_t)v0, (uint64_t)qword_100BDA890);
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0xE000000000000000;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_BYTE *)(v1 + 32) = 0;
  v2 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  swift_storeEnumTagMultiPayload(v1, v2, 0);
  *(_QWORD *)(v1 + v0[5]) = 0;
  *(_QWORD *)(v1 + v0[6]) = 0;
  v3 = v1 + v0[7];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(v1 + v0[8]) = 0;
}

uint64_t sub_100357C34()
{
  uint64_t v0;

  if (qword_100BC1FC0 != -1)
    swift_once(&qword_100BC1FC0, sub_100357B98);
  v0 = type metadata accessor for LocationComponentHeaderMetrics(0);
  return sub_1000AECD4(v0, (uint64_t)qword_100BDA890);
}

void sub_100357C7C(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_100357C34();
  sub_100084050(v2, a1, type metadata accessor for LocationComponentHeaderMetrics);
}

uint64_t sub_100357CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_100358590();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_100357CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;

  v1 = v0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = (uint64_t *)(v4 - v3);
  sub_100084050(v1, v4 - v3, v6);
  if (swift_getEnumCaseMultiPayload(v5))
  {
    sub_1000215BC((uint64_t)v5, type metadata accessor for LocationComponentHeaderViewModel);
    return 0;
  }
  else
  {
    if (v5[6])
      v7 = v5[5];
    else
      v7 = *v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100357DD4(uint64_t a1, uint64_t a2)
{
  char v4;
  int *v5;
  uint64_t v6;
  double *v7;
  char v8;
  double *v9;
  int v10;

  sub_10009176C();
  if ((v4 & 1) == 0
    || (v5 = (int *)sub_1000DF57C(), *(double *)(a1 + v5[5]) != *(double *)(a2 + v5[5]))
    || *(double *)(a1 + v5[6]) != *(double *)(a2 + v5[6]))
  {
LABEL_10:
    LOBYTE(v10) = 0;
    return v10 & 1;
  }
  v6 = v5[7];
  v7 = (double *)(a1 + v6);
  v8 = *(_BYTE *)(a1 + v6 + 8);
  v9 = (double *)(a2 + v6);
  v10 = *(unsigned __int8 *)(a2 + v6 + 8);
  if ((v8 & 1) == 0)
  {
    if (*v7 != *v9)
      LOBYTE(v10) = 1;
    if ((v10 & 1) == 0)
      goto LABEL_12;
    goto LABEL_10;
  }
  if (v10)
LABEL_12:
    LOBYTE(v10) = *(_BYTE *)(a1 + v5[8]) ^ *(_BYTE *)(a2 + v5[8]) ^ 1;
  return v10 & 1;
}

void sub_100357E88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000DF57C();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  KeyPath = swift_getKeyPath(&unk_100996B88);
  sub_100357F64(v7);
  v9 = (uint64_t *)(a2 + *(int *)(sub_1000BA294(&qword_100BDAA10) + 36));
  v10 = sub_1000BA294(&qword_100BDAA18);
  sub_100084050(v7, (uint64_t)v9 + *(int *)(v10 + 28), type metadata accessor for LocationComponentHeaderMetrics);
  *v9 = KeyPath;
  v11 = sub_1000BA294(&qword_100BDAA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
  sub_1000215BC(v7, type metadata accessor for LocationComponentHeaderMetrics);
}

void sub_100357F64(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  double v58;
  double v59;
  double v60;
  char v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  _BYTE v65[12];
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  unsigned __int16 v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE __dst[80];

  v2 = v1;
  v80 = a1;
  v3 = type metadata accessor for Text.Measurements(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v65[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (int *)type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  __chkstk_darwin(v7);
  v9 = &v65[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v10);
  v78 = &v65[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = (uint64_t)&v65[-v13];
  __chkstk_darwin(v15);
  v17 = &v65[-v16];
  v18 = (int *)type metadata accessor for ComputeAppropriateLocationComponentHeaderViewModelModifier(0);
  memcpy(__dst, (const void *)(v1 + v18[8]), 0x49uLL);
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000D4FF4);
  sub_10008CF58();
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000CEE98);
  sub_100083DA8(v86, (uint64_t)v17);
  v79 = v17;
  v74 = v14;
  sub_100084050((uint64_t)v17, v14, type metadata accessor for LocationComponentHeaderViewModel);
  v19 = v1 + v18[5];
  v76 = v4;
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
  v75 = v6;
  v77 = v3;
  v20(v6, v19, v3);
  v21 = v1 + v18[11];
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10008D47C(*(_QWORD *)v21, v23);
  sub_100109B54();
  LOBYTE(v14) = v24;
  sub_1000B15F8(v22, v23);
  if ((v14 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v25 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v25 = &qword_100CAE538;
  }
  v26 = *v25;
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000D4FF4);
  sub_10008CF58();
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000CEE98);
  v27 = v81;
  v73 = v82;
  v72 = v83;
  v71 = v84;
  v28 = v85;
  v70 = v86;
  v29 = v87;
  v30 = v88;
  sub_1001591C8();
  sub_100109D64();
  v31 = v1 + v18[7];
  v32 = *(_QWORD *)v31;
  v33 = *(_BYTE *)(v31 + 8);
  sub_10008D47C(*(_QWORD *)v31, v33);
  sub_100109B54();
  v35 = v34;
  v69 = v34 & 1;
  sub_1000B15F8(v32, v33);
  v36 = v2 + v18[10];
  v37 = *(_QWORD *)v36;
  v38 = *(_BYTE *)(v36 + 8);
  sub_10008D47C(*(_QWORD *)v36, v38);
  sub_100109B54();
  v68 = v39;
  sub_1000B15F8(v37, v38);
  v40 = v2 + v18[9];
  v41 = *(_QWORD *)v40;
  v42 = *(unsigned __int8 *)(v40 + 8);
  LOBYTE(v37) = *(_BYTE *)(v40 + 9);
  sub_100082BE8(*(_QWORD *)v40, v42, v37);
  sub_100159030();
  v67 = v43;
  v66 = v44;
  sub_100082C5C(v41, v42, v37);
  sub_10008D47C(v22, v23);
  sub_100109B54();
  LOBYTE(v41) = v45;
  sub_1000B15F8(v22, v23);
  v46 = v2 + v18[13];
  v47 = *(_QWORD *)v46;
  v48 = *(unsigned __int8 *)(v46 + 8);
  v49 = *(_BYTE *)(v46 + 9);
  sub_100082BE8(*(_QWORD *)v46, v48, v49);
  sub_1007A5DE0();
  v51 = v50;
  v53 = v52;
  sub_100082C5C(v47, v48, v49);
  sub_100126800(v74, (uint64_t)v9);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 32))(&v9[v7[5]], v75, v77);
  *(_QWORD *)&v9[v7[6]] = v26;
  v54 = &v9[v7[7]];
  *(_QWORD *)v54 = v27;
  *(_OWORD *)(v54 + 8) = v73;
  *((_QWORD *)v54 + 3) = v72;
  v54[32] = v71;
  *((_QWORD *)v54 + 5) = v28;
  *((_WORD *)v54 + 24) = v70;
  *((_QWORD *)v54 + 7) = v29;
  *((_QWORD *)v54 + 8) = v30;
  v9[v7[10]] = v69;
  v9[v7[11]] = v68 & 1;
  v55 = &v9[v7[12]];
  *(_QWORD *)v55 = v67;
  v55[8] = v66 & 1;
  v9[v7[13]] = v41 & 1;
  v56 = &v9[v7[14]];
  *(_QWORD *)v56 = v51;
  v56[8] = v53 & 1;
  v57 = v78;
  sub_100084050((uint64_t)v9, (uint64_t)v78, type metadata accessor for LocationComponentHeaderViewModel);
  v58 = sub_1003585EC();
  v59 = sub_10035876C();
  v60 = 0.0;
  if ((v35 & 1) != 0)
    v60 = sub_100358894();
  v61 = sub_100358AF4();
  v62 = v80;
  sub_100126800((uint64_t)v57, v80);
  v63 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
  *(double *)(v62 + v63[5]) = v58;
  *(double *)(v62 + v63[6]) = v59;
  v64 = v62 + v63[7];
  *(double *)v64 = v60;
  *(_BYTE *)(v64 + 8) = (v35 & 1) == 0;
  *(_BYTE *)(v62 + v63[8]) = v61 & 1;
  sub_1000215BC((uint64_t)v9, type metadata accessor for LocationComponentHeaderMetricsComputer);
  sub_1000215BC((uint64_t)v79, type metadata accessor for LocationComponentHeaderViewModel);
}

unint64_t sub_100358590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDAA08;
  if (!qword_100BDAA08)
  {
    v1 = type metadata accessor for LocationComponentHeaderMetrics(255);
    result = swift_getWitnessTable(&unk_100996B28, v1);
    atomic_store(result, (unint64_t *)&qword_100BDAA08);
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentHeaderMetricsComputer(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDAA88, (uint64_t)&nominal type descriptor for LocationComponentHeaderMetricsComputer);
}

double sub_1003585EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char *v4;
  _BYTE __dst[128];

  v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  v3 = &__dst[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((sub_100358AF4() & 1) == 0)
  {
    sub_100084050(v0, (uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
    v4 = (char *)&loc_1003586A0 + 4 * byte_1009969B2[swift_getEnumCaseMultiPayload(v3)];
    __asm { BR              X10 }
  }
  if (qword_100BC1EA0 != -1)
    swift_once(&qword_100BC1EA0, sub_100129178);
  return *(double *)&qword_100CAE520;
}

double sub_10035876C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  _QWORD __dst[16];

  v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  v3 = (char *)__dst - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100BC1EA0 != -1)
    swift_once(&qword_100BC1EA0, sub_100129178);
  v4 = *(double *)&qword_100CAE520;
  sub_100084050(v0, (uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
  if (swift_getEnumCaseMultiPayload(v3) == 2)
  {
    memcpy(__dst, v3, 0x79uLL);
    sub_100258860(__dst);
    if (qword_100BC1EC0 != -1)
      swift_once(&qword_100BC1EC0, sub_1002425B4);
    return v4 - *(double *)&qword_100CAE540;
  }
  else
  {
    sub_1000215BC((uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
  }
  return v4;
}

double sub_100358894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  unsigned __int8 v27;
  _BYTE __dst[72];

  v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  v3 = __dst - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 6;
  v4 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v4);
  v6 = __dst - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 6;
  if (qword_100BC1EA0 != -1)
    swift_once(&qword_100BC1EA0, sub_100129178);
  v7 = *(double *)&qword_100CAE520;
  if (qword_100BC1EA8 != -1)
    swift_once(&qword_100BC1EA8, sub_100129168);
  v8 = *(double *)&qword_100CAE528;
  v9 = sub_1003597AC();
  if (v12)
  {
    v13 = v9;
    v14 = v10;
    v15 = v12;
    v16 = v11 & 1;
    v17 = type metadata accessor for LocationComponentHeaderMetricsComputer(0);
    memcpy(__dst, (const void *)(v0 + *(int *)(v17 + 28)), sizeof(__dst));
    sub_10007689C();
    v19 = v18 * 0.5;
    v20 = type metadata accessor for Text.WritingMode(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v20);
    v27 = v16;
    Text.Measurements.size(of:in:writingMode:)(v13, v14, v16, v15, v6, v19, INFINITY);
    v22 = v21;
    sub_100021A14((uint64_t)v6, &qword_100BC39D0);
    v23 = v22 + *(double *)&qword_100CAE520;
    v24 = *(double *)&qword_100CAE528;
    sub_1000D31B4(v13, v14, v16);
    swift_bridgeObjectRelease();
    return v23 + v24;
  }
  else
  {
    sub_100084050(v0, (uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
    if (swift_getEnumCaseMultiPayload(v3))
    {
      v25 = v7 + v8;
      sub_1000215BC((uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_100358F28();
    }
  }
  return v25;
}

uint64_t sub_100358AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  char v6;
  char v7;
  char v8;
  uint64_t v10;

  v1 = type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if (v5 == (id)1)
  {
    sub_1002584D8();
    v7 = v6;
    sub_100084050(v0, (uint64_t)v3, type metadata accessor for LocationComponentHeaderMetricsComputer);
    if ((v7 & 1) != 0)
      v8 = sub_10042C1E8();
    else
      v8 = 0;
    sub_1000215BC((uint64_t)v3, type metadata accessor for LocationComponentHeaderMetricsComputer);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

void sub_100358BEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100929050(a1);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  v14 = type metadata accessor for Text.WritingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v14);
  v34 = v11;
  v35 = v9;
  v36 = v7;
  v37 = v13;
  Text.Measurements.size(of:in:writingMode:)(v7, v9, v11 & 1, v13, v5, INFINITY, INFINITY);
  sub_100021A14((uint64_t)v5, &qword_100BC39D0);
  sub_1003590A4();
  v16 = v15;
  sub_100061610(v1);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v14);
  Text.Measurements.size(of:in:writingMode:)(v18, v20, v24, v22, v5, v16, INFINITY);
  sub_1000D31B4(v18, v20, v24);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v5, &qword_100BC39D0);
  sub_1009291F0(a1);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v14);
  Text.Measurements.size(of:in:writingMode:)(v26, v28, v30 & 1, v32, v5, v16, INFINITY);
  sub_100021A14((uint64_t)v5, &qword_100BC39D0);
  if (qword_100BC1ED0 != -1)
    swift_once(&qword_100BC1ED0, sub_1002425D4);
  if (qword_100BC1ED8 != -1)
    swift_once(&qword_100BC1ED8, sub_1002425E4);
  if (qword_100BC1EC0 != -1)
    swift_once(&qword_100BC1EC0, sub_1002425B4);
  if (qword_100BC1EC8 != -1)
    swift_once(&qword_100BC1EC8, sub_1002425C4);
  sub_1000D31B4(v26, v28, v30 & 1);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v36, v35, v34 & 1);
  swift_bridgeObjectRelease();
}

double sub_100358F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v21;

  v1 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10035912C(v0);
  v5 = v4;
  type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  sub_100061610(v0);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v14 = type metadata accessor for Text.WritingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v14);
  Text.Measurements.size(of:in:writingMode:)(v7, v9, v13, v11, v3, v5, INFINITY);
  v16 = v15;
  sub_1000D31B4(v7, v9, v13);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v3, &qword_100BC39D0);
  if (qword_100BC1EA0 != -1)
    swift_once(&qword_100BC1EA0, sub_100129178);
  v17 = v16 + *(double *)&qword_100CAE520;
  v18 = v17 + sub_1003595AC();
  sub_100359678();
  return v18 + v19;
}

uint64_t sub_1003590A4()
{
  return type metadata accessor for LocationComponentHeaderMetricsComputer(0);
}

void sub_10035912C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  v3 = a1 + *(int *)(v2 + 48);
  if (((*(_BYTE *)(v3 + 8) & 1) != 0 || *(_QWORD *)v3 != 1) && (*(_BYTE *)(a1 + *(int *)(v2 + 56) + 8) & 1) == 0)
    sub_1003591B4();
}

void sub_1003591B4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  _BYTE v12[16];

  v0 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_1003592E4();
  if (v6)
  {
    v7 = v3;
    v8 = v4;
    v9 = v6;
    v10 = v5 & 1;
    type metadata accessor for LocationComponentHeaderMetricsComputer(0);
    v11 = type metadata accessor for Text.WritingMode(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v11);
    v12[8] = v10;
    Text.Measurements.size(of:in:writingMode:)(v7, v8, v10, v9, v2, INFINITY, INFINITY);
    sub_100021A14((uint64_t)v2, &qword_100BC39D0);
    sub_100359508();
    sub_1000D31B4(v7, v8, v10);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003592E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[16];

  v1 = v0;
  v2 = type metadata accessor for Font.Leading(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100084050(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8))
  {
    sub_1000215BC((uint64_t)v8, type metadata accessor for LocationComponentHeaderViewModel);
    return 0;
  }
  else
  {
    v11 = *((_QWORD *)v8 + 2);
    v12 = *((_QWORD *)v8 + 3);
    v13 = type metadata accessor for LocationComponentHeaderMetricsComputer(0);
    if (*(_BYTE *)(v1 + *(int *)(v13 + 52)) == 1)
      v14 = static Font.caption.getter(v13);
    else
      v14 = static Font.footnote.getter(v13);
    v15 = v14;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
    v16 = Font.leading(_:)(v5, v15);
    v17 = swift_release(v15);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v5, v2, v17);
    swift_bridgeObjectRetain(v12);
    v18 = Image.init(systemName:)(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = Text.init(_:)(v18);
    v21 = v20;
    v23 = v22;
    v25 = v24 & 1;
    swift_retain();
    v10 = Text.font(_:)(v26, v19, v21, v25, v23);
    swift_release(v16);
    sub_1000D31B4(v19, v21, v25);
    swift_release(v16);
    swift_bridgeObjectRelease();
  }
  return v10;
}

double sub_100359508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  uint64_t v6;

  v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084050(v0, (uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
  v4 = dbl_100996BF8[(int)swift_getEnumCaseMultiPayload(v3)];
  sub_1000215BC((uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
  return v4;
}

double sub_1003595AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v6;

  v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084050(v0, (uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3);
  sub_1000215BC((uint64_t)v3, type metadata accessor for LocationComponentHeaderViewModel);
  result = 0.0;
  if (EnumCaseMultiPayload != 1)
  {
    if (qword_100BC1EA8 != -1)
      swift_once(&qword_100BC1EA8, sub_100129168);
    return *(double *)&qword_100CAE528;
  }
  return result;
}

void sub_100359678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084050(v0, (uint64_t)v3, v4);
  v5 = (char *)sub_100359700 + 4 * byte_1009969B7[swift_getEnumCaseMultiPayload(v3)];
  __asm { BR              X10 }
}

void sub_100359700()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1003597AC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[56];
  _OWORD v8[3];
  uint64_t v9;

  v0 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v0);
  v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100095360();
  sub_1003598C8((uint64_t)v7, (uint64_t)v8);
  if (!*((_QWORD *)&v8[0] + 1))
    return 0;
  v3 = v8[1];
  *(_OWORD *)v2 = v8[0];
  *((_OWORD *)v2 + 1) = v3;
  *((_OWORD *)v2 + 2) = v8[2];
  *((_QWORD *)v2 + 6) = v9;
  swift_storeEnumTagMultiPayload(v2, v0, 0);
  type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  sub_100061610((uint64_t)v2);
  v5 = v4;
  sub_1000215BC((uint64_t)v2, type metadata accessor for LocationComponentHeaderViewModel);
  return v5;
}

uint64_t sub_1003598C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BDAA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100359910(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v6 = (char *)&loc_100359978 + 4 * byte_1009969BC[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v7 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v8;
}

uint64_t sub_100359CB4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
      v4 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[8];
  v8 = type metadata accessor for LayoutDirection(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[9];
  v10 = type metadata accessor for ContentSizeCategory(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

void sub_100359E3C(uint64_t a1, uint64_t a2)
{
  char *v3;

  type metadata accessor for LocationComponentHeaderViewModel(0);
  v3 = (char *)sub_100359E98 + 4 * byte_1009969C6[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

uint64_t sub_100359E98()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = v6;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_storeEnumTagMultiPayload(v0, v3, 0);
  v7 = v2[5];
  v8 = v0 + v7;
  v9 = v1 + v7;
  v10 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = v2[7];
  *(_QWORD *)(v0 + v2[6]) = *(_QWORD *)(v1 + v2[6]);
  memcpy((void *)(v0 + v11), (const void *)(v1 + v11), 0x48uLL);
  v12 = v2[8];
  v13 = v0 + v12;
  v14 = v1 + v12;
  v15 = type metadata accessor for LayoutDirection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v2[9];
  v17 = v0 + v16;
  v18 = v1 + v16;
  v19 = type metadata accessor for ContentSizeCategory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = v2[11];
  *(_BYTE *)(v0 + v2[10]) = *(_BYTE *)(v1 + v2[10]);
  *(_BYTE *)(v0 + v20) = *(_BYTE *)(v1 + v20);
  v21 = v2[12];
  v22 = v2[13];
  v23 = v0 + v21;
  v24 = v1 + v21;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v0 + v22) = *(_BYTE *)(v1 + v22);
  v25 = v2[14];
  v26 = v0 + v25;
  v27 = v1 + v25;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  return v0;
}

uint64_t sub_10035A1B4(uint64_t a1, uint64_t a2, int *a3)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  if (a1 != a2)
  {
    sub_1000215BC(a1, type metadata accessor for LocationComponentHeaderViewModel);
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v6 = (char *)&loc_10035A228 + 4 * byte_1009969CB[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = *(_OWORD *)(v13 + 8);
  *(_OWORD *)(v12 + 17) = *(_OWORD *)(v13 + 17);
  *(_OWORD *)(v12 + 8) = v14;
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_BYTE *)(v12 + 49) = *(_BYTE *)(v13 + 49);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for LayoutDirection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for ContentSizeCategory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v23 = a3[12];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v27 = a3[14];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v30;
  return a1;
}

_BYTE *sub_10035A630(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (swift_getEnumCaseMultiPayload(a2) == 3)
  {
    v7 = type metadata accessor for WeatherDescription(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    v9 = *(int *)(v8 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
    a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload(a1, v6, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  memcpy(&a1[v17], &a2[v17], 0x48uLL);
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for LayoutDirection(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for ContentSizeCategory(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v26] = a2[v26];
  v27 = a3[12];
  v28 = a3[13];
  v29 = &a1[v27];
  v30 = &a2[v27];
  v29[8] = v30[8];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  a1[v28] = a2[v28];
  v31 = a3[14];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v32[8] = v33[8];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  return a1;
}

_BYTE *sub_10035A7FC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationComponentHeaderViewModel);
    v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 3)
    {
      v7 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v9 = *(int *)(v8 + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload(a1, v6, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
  *(_OWORD *)(v18 + 17) = *(_OWORD *)(v19 + 17);
  *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
  *((_WORD *)v18 + 24) = *((_WORD *)v19 + 24);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for LayoutDirection(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ContentSizeCategory(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v28] = a2[v28];
  v29 = a3[12];
  v30 = a3[13];
  v31 = &a1[v29];
  v32 = &a2[v29];
  v31[8] = v32[8];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  a1[v30] = a2[v30];
  v33 = a3[14];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v34[8] = v35[8];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  return a1;
}

uint64_t sub_10035AA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035AA14);
}

void sub_10035AA14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1000B4818();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    sub_1000BCF7C();
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      if ((_DWORD)v3 == 254)
      {
        sub_100079F70();
        return;
      }
      type metadata accessor for LayoutDirection(0);
      sub_100088FF0();
      if (v9)
      {
        v7 = v12;
        v11 = a3[8];
      }
      else
      {
        v7 = type metadata accessor for ContentSizeCategory(0);
        v11 = a3[9];
      }
    }
    v8 = v4 + v11;
  }
  sub_1000B250C(v8, v3, v7);
}

uint64_t sub_10035AABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035AAC8);
}

void sub_10035AAC8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1000B4818();
  sub_10009D2E8();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    sub_1000BCF7C();
    sub_10009D2E8();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      if (a3 == 254)
      {
        *(_BYTE *)(v5 + a4[7] + 32) = -(char)v4;
        sub_100079F70();
        return;
      }
      type metadata accessor for LayoutDirection(0);
      sub_10009D2E8();
      if (v11)
      {
        v9 = v14;
        v13 = a4[8];
      }
      else
      {
        v9 = type metadata accessor for ContentSizeCategory(0);
        v13 = a4[9];
      }
    }
    v10 = v5 + v13;
  }
  sub_1000987C4(v10, v4, v4, v9);
}

uint64_t sub_10035AB70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v7[11];

  result = type metadata accessor for LocationComponentHeaderViewModel(319);
  if (v3 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Text.Measurements(319);
    if (v4 <= 0x3F)
    {
      v7[1] = *(_QWORD *)(result - 8) + 64;
      v7[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v7[3] = "H";
      result = type metadata accessor for LayoutDirection(319);
      if (v5 <= 0x3F)
      {
        v7[4] = *(_QWORD *)(result - 8) + 64;
        result = type metadata accessor for ContentSizeCategory(319);
        if (v6 <= 0x3F)
        {
          v7[5] = *(_QWORD *)(result - 8) + 64;
          v7[6] = &unk_100996A38;
          v7[7] = &unk_100996A38;
          v7[8] = "\t";
          v7[9] = &unk_100996A38;
          v7[10] = "\t";
          swift_initStructMetadata(a1, 256, 11, v7, a1 + 16);
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10035AC60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDAAE8;
  if (!qword_100BDAAE8)
  {
    v1 = sub_100075EB0(&qword_100BDAA10);
    sub_10003D310(&qword_100BDAAF0, &qword_100BDAA20, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10003D310(&qword_100BDAAF8, &qword_100BDAA18, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDAAE8);
  }
  return result;
}

uint64_t sub_10035ACFC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x65646F4D77656976 && a2 == 0xE90000000000006CLL)
  {
    v5 = 0xE90000000000006CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65646F4D77656976, 0xE90000000000006CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1852793705 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(1852793705, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10035ADE4(char a1)
{
  if ((a1 & 1) != 0)
    return 1852793705;
  else
    return 0x65646F4D77656976;
}

uint64_t sub_10035AE18(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  _BYTE __dst[96];

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BDAB18);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_10035B61C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys, &type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys, v11, v9, v10);
  memcpy(__dst, v3, sizeof(__dst));
  v17 = 0;
  v12 = sub_10035B694();
  KeyedEncodingContainer.encode<A>(_:forKey:)(__dst, &v17, v5, &type metadata for PrecipitationTotalComponentViewModel, v12);
  if (!v2)
  {
    v13 = v3[12];
    v14 = v3[13];
    __dst[0] = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, v14, __dst, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10035AF4C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v5 = sub_1000BA294(&qword_100BDAB00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = sub_10035B61C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys, &type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys, v9, v7, v8);
  if (v2)
  {
    sub_1000B4838();
  }
  else
  {
    v40 = 0;
    sub_10035B658();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for PrecipitationTotalComponentViewModel, &v40, v5);
    v23 = v28;
    v24 = a2;
    v21 = v32;
    v22 = v30;
    v10 = v35;
    v20 = v34;
    v11 = v37;
    v19 = v36;
    v12 = v39;
    v18 = v38;
    LOBYTE(v28) = 1;
    v27 = v29;
    swift_bridgeObjectRetain(v29);
    v26 = v31;
    swift_bridgeObjectRetain(v31);
    v25 = v33;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v39);
    v13 = KeyedDecodingContainer.decode(_:forKey:)(&v28, v5);
    v15 = v14;
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v17 = v13;
    sub_1000C283C(v16);
    swift_bridgeObjectRetain(v15);
    sub_1000B4838();
    sub_1000986C4();
    sub_10009D2E0();
    sub_10009934C();
    sub_10009934C();
    swift_bridgeObjectRelease();
    sub_1000CC8C8();
    swift_bridgeObjectRelease();
    *v24 = v23;
    v24[1] = v27;
    v24[2] = v22;
    v24[3] = v26;
    v24[4] = v21;
    v24[5] = v25;
    v24[6] = v20;
    v24[7] = v10;
    v24[8] = v19;
    v24[9] = v11;
    v24[10] = v18;
    v24[11] = v12;
    v24[12] = v17;
    v24[13] = v15;
  }
}

uint64_t sub_10035B1F8()
{
  char *v0;

  return sub_10035ADE4(*v0);
}

uint64_t sub_10035B200@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10035ACFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10035B224(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10035B61C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035B24C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10035B61C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10035B274(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _QWORD v4[14];

  sub_10035AF4C(a1, v4);
  if (!v2)
    memcpy(a2, v4, 0x70uLL);
}

uint64_t sub_10035B2BC(_QWORD *a1)
{
  return sub_10035AE18(a1);
}

double destroy for PrecipitationTotalComponentPreprocessedDataModel(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[13]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for PrecipitationTotalComponentPreprocessedDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  return a1;
}

_QWORD *assignWithCopy for PrecipitationTotalComponentPreprocessedDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[10] = a2[10];
  v14 = a2[11];
  v15 = a1[11];
  a1[11] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  a1[12] = a2[12];
  v16 = a2[13];
  v17 = a1[13];
  a1[13] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  return a1;
}

void *initializeWithTake for PrecipitationTotalComponentPreprocessedDataModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

_QWORD *assignWithTake for PrecipitationTotalComponentPreprocessedDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[11];
  v15 = a1[11];
  a1[10] = a2[10];
  a1[11] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[13];
  v17 = a1[13];
  a1[12] = a2[12];
  a1[13] = v16;
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationTotalComponentPreprocessedDataModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrecipitationTotalComponentPreprocessedDataModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationTotalComponentPreprocessedDataModel()
{
  return &type metadata for PrecipitationTotalComponentPreprocessedDataModel;
}

unint64_t sub_10035B61C()
{
  unint64_t result;

  result = qword_100BDAB08;
  if (!qword_100BDAB08)
  {
    result = swift_getWitnessTable(&unk_100996DD0, &type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDAB08);
  }
  return result;
}

unint64_t sub_10035B658()
{
  unint64_t result;

  result = qword_100BDAB10;
  if (!qword_100BDAB10)
  {
    result = swift_getWitnessTable(&unk_1009A2588, &type metadata for PrecipitationTotalComponentViewModel);
    atomic_store(result, (unint64_t *)&qword_100BDAB10);
  }
  return result;
}

unint64_t sub_10035B694()
{
  unint64_t result;

  result = qword_100BDAB20;
  if (!qword_100BDAB20)
  {
    result = swift_getWitnessTable(&unk_1009A2560, &type metadata for PrecipitationTotalComponentViewModel);
    atomic_store(result, (unint64_t *)&qword_100BDAB20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10035B71C + 4 * byte_100996C25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10035B750 + 4 * byte_100996C20[v4]))();
}

uint64_t sub_10035B750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035B758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10035B760);
  return result;
}

uint64_t sub_10035B76C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10035B774);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10035B778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035B780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_10035B7A0()
{
  unint64_t result;

  result = qword_100BDAB28;
  if (!qword_100BDAB28)
  {
    result = swift_getWitnessTable(&unk_100996DA8, &type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDAB28);
  }
  return result;
}

unint64_t sub_10035B7E0()
{
  unint64_t result;

  result = qword_100BDAB30;
  if (!qword_100BDAB30)
  {
    result = swift_getWitnessTable(&unk_100996D18, &type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDAB30);
  }
  return result;
}

unint64_t sub_10035B820()
{
  unint64_t result;

  result = qword_100BDAB38;
  if (!qword_100BDAB38)
  {
    result = swift_getWitnessTable(&unk_100996D40, &type metadata for PrecipitationTotalComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDAB38);
  }
  return result;
}

uint64_t SidebarVisibilityMonitor.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return v0;
}

double sub_10035B878(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  double result;
  _OWORD v11[2];
  uint64_t v12;

  v4 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(uint64_t (**)(uint64_t))(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *v6 = a2;
  v9 = type metadata accessor for ViewAction(0);
  swift_storeEnumTagMultiPayload(v6, v9, 6);
  swift_storeEnumTagMultiPayload(v6, v4, 6);
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_retain();
  sub_1000A5EBC((uint64_t)v6, (uint64_t)v11, v8);
  sub_100159C94((uint64_t)v11);
  sub_1000A0AA4((uint64_t)v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_10035B958()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_10035B97C()
{
  uint64_t v0;

  return sub_10035B878(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

_QWORD *sub_10035B988(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  int *v43;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7)
    {
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v10;
    }
    v11 = *(int *)(a3 + 20);
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      v42 = v14;
      v15 = v13[1];
      *v12 = *v13;
      v12[1] = v15;
      v43 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v16 = v43[5];
      v17 = (char *)v12 + v16;
      v18 = (char *)v13 + v16;
      v19 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v15);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        v20 = sub_1000BA294(&qword_100BD4280);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      v21 = v43[6];
      v22 = (_QWORD *)((char *)v12 + v21);
      v23 = (_QWORD *)((char *)v13 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      v25 = v43[7];
      v26 = (char *)v12 + v25;
      v27 = (char *)v13 + v25;
      v28 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
      v29 = swift_bridgeObjectRetain(v24);
      v28(v26, v27, v19, v29);
      v30 = v43[8];
      v31 = (char *)v12 + v30;
      v32 = (char *)v13 + v30;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13 + v30, 1, v19))
      {
        v33 = sub_1000BA294(&qword_100BD4280);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v28)(v31, v32, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v19);
      }
      *((_BYTE *)v12 + v43[9]) = *((_BYTE *)v13 + v43[9]);
      swift_storeEnumTagMultiPayload(v12, v42, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    v34 = *(int *)(a3 + 24);
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for DetailComponentAction(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
    {
      v38 = sub_1000BA294(&qword_100BD3100);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v35, v36, v39);
      v40 = sub_1000BA294(&qword_100BC5FE8);
      v35[*(int *)(v40 + 48)] = v36[*(int *)(v40 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
    }
  }
  return a1;
}

uint64_t sub_10035BC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    swift_bridgeObjectRelease();
    v5 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    v6 = v4 + v5[5];
    v7 = type metadata accessor for URL(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = swift_bridgeObjectRelease();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    ((void (*)(uint64_t, uint64_t, __n128))v9)(v4 + v5[7], v7, v8);
    v10 = v4 + v5[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v7))
      v9(v10, v7);
  }
  v11 = a1 + *(int *)(a2 + 24);
  v12 = type metadata accessor for DetailComponentAction(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v12);
  if (!(_DWORD)result)
  {
    v14 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v11, v14);
  }
  return result;
}

_QWORD *sub_10035BDCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;

  v6 = a2[1];
  if (v6)
  {
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
  }
  else
  {
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
  }
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload(v11) == 1)
  {
    v42 = a3;
    v13 = v11[1];
    *v10 = *v11;
    v10[1] = v13;
    v14 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    v15 = v14[5];
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain(v13);
    v41 = v12;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      v19 = sub_1000BA294(&qword_100BD4280);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    v20 = v14[6];
    v21 = (_QWORD *)((char *)v10 + v20);
    v22 = (_QWORD *)((char *)v11 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v14[7];
    v25 = (char *)v10 + v24;
    v26 = (char *)v11 + v24;
    v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
    v28 = swift_bridgeObjectRetain(v23);
    v27(v25, v26, v18, v28);
    v29 = v14[8];
    v30 = (char *)v10 + v29;
    v31 = (char *)v11 + v29;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11 + v29, 1, v18))
    {
      v32 = sub_1000BA294(&qword_100BD4280);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v27)(v30, v31, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v18);
    }
    a3 = v42;
    *((_BYTE *)v10 + v14[9]) = *((_BYTE *)v11 + v14[9]);
    swift_storeEnumTagMultiPayload(v10, v41, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v33 = *(int *)(a3 + 24);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for DetailComponentAction(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
  {
    v37 = sub_1000BA294(&qword_100BD3100);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v38 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v34, v35, v38);
    v39 = sub_1000BA294(&qword_100BC5FE8);
    v34[*(int *)(v39 + 48)] = v35[*(int *)(v39 + 48)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
  }
  return a1;
}

_QWORD *sub_10035C08C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      v8 = a2[3];
      a1[3] = v8;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10035C44C((uint64_t)a1);
      v11 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v11;
    }
  }
  else if (v6)
  {
    *a1 = *a2;
    v9 = a2[1];
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = a2[3];
    a1[3] = v10;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
  }
  else
  {
    v12 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v12;
  }
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 20);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    sub_1000215BC((uint64_t)a1 + v13, type metadata accessor for NewsArticleComponentViewModel);
    v16 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v15) == 1)
    {
      v50 = a3;
      *v14 = *v15;
      v17 = v15[1];
      v14[1] = v17;
      v18 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v19 = v18[5];
      v20 = (char *)v14 + v19;
      v21 = (char *)v15 + v19;
      v22 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v17);
      v49 = v16;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        v23 = sub_1000BA294(&qword_100BD4280);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      v24 = v18[6];
      v25 = (_QWORD *)((char *)v14 + v24);
      v26 = (_QWORD *)((char *)v15 + v24);
      *v25 = *v26;
      v27 = v26[1];
      v25[1] = v27;
      v28 = v18[7];
      v29 = (char *)v14 + v28;
      v30 = (char *)v15 + v28;
      v31 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
      v32 = swift_bridgeObjectRetain(v27);
      v31(v29, v30, v22, v32);
      v33 = v18[8];
      v34 = (char *)v14 + v33;
      v35 = (char *)v15 + v33;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15 + v33, 1, v22))
      {
        v36 = sub_1000BA294(&qword_100BD4280);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v31)(v34, v35, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v22);
      }
      a3 = v50;
      *((_BYTE *)v14 + v18[9]) = *((_BYTE *)v15 + v18[9]);
      swift_storeEnumTagMultiPayload(v14, v49, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v37 = *(int *)(a3 + 24);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = type metadata accessor for DetailComponentAction(0);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (!v41)
  {
    if (!v42)
    {
      v47 = type metadata accessor for URL(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v38, v39, v47);
      v48 = sub_1000BA294(&qword_100BC5FE8);
      v38[*(int *)(v48 + 48)] = v39[*(int *)(v48 + 48)];
      return a1;
    }
    sub_1000215BC((uint64_t)v38, type metadata accessor for DetailComponentAction);
    goto LABEL_23;
  }
  if (v42)
  {
LABEL_23:
    v45 = sub_1000BA294(&qword_100BD3100);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    return a1;
  }
  v43 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v38, v39, v43);
  v44 = sub_1000BA294(&qword_100BC5FE8);
  v38[*(int *)(v44 + 48)] = v39[*(int *)(v44 + 48)];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  return a1;
}

uint64_t sub_10035C44C(uint64_t a1)
{
  destroy for WindComponentRowViewModel(a1);
  return a1;
}

_OWORD *sub_10035C480(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    v30 = v3;
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v11 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    v12 = v11[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = type metadata accessor for URL(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_1000BA294(&qword_100BD4280);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    }
    else
    {
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v17(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    *(_OWORD *)&v8[v11[6]] = *(_OWORD *)&v9[v11[6]];
    v17(&v8[v11[7]], &v9[v11[7]], v15);
    v18 = v11[8];
    v19 = &v8[v18];
    v20 = &v9[v18];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v9[v18], 1, v15))
    {
      v21 = sub_1000BA294(&qword_100BD4280);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v17(v19, v20, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v15);
    }
    v3 = v30;
    v8[v11[9]] = v9[v11[9]];
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v22 = *(int *)(v3 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for DetailComponentAction(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    v26 = sub_1000BA294(&qword_100BD3100);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v23, v24, v27);
    v28 = sub_1000BA294(&qword_100BC5FE8);
    v23[*(int *)(v28 + 48)] = v24[*(int *)(v28 + 48)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  return a1;
}

_QWORD *sub_10035C6FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a1[1])
  {
    v6 = a2[1];
    if (v6)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10035C44C((uint64_t)a1);
  }
  v8 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v8;
LABEL_6:
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    sub_1000215BC((uint64_t)a1 + v9, type metadata accessor for NewsArticleComponentViewModel);
    v12 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      v36 = a3;
      *(_OWORD *)v10 = *(_OWORD *)v11;
      v13 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v14 = v13[5];
      v15 = &v10[v14];
      v16 = &v11[v14];
      v17 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_1000BA294(&qword_100BD4280);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
      }
      else
      {
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
        v19(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      *(_OWORD *)&v10[v13[6]] = *(_OWORD *)&v11[v13[6]];
      v19(&v10[v13[7]], &v11[v13[7]], v17);
      v20 = v13[8];
      v21 = &v10[v20];
      v22 = &v11[v20];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v11[v20], 1, v17))
      {
        v23 = sub_1000BA294(&qword_100BD4280);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v19(v21, v22, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v17);
      }
      a3 = v36;
      v10[v13[9]] = v11[v13[9]];
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for DetailComponentAction(0);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (!v28)
  {
    if (!v29)
    {
      v34 = type metadata accessor for URL(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v25, v26, v34);
      v35 = sub_1000BA294(&qword_100BC5FE8);
      v25[*(int *)(v35 + 48)] = v26[*(int *)(v35 + 48)];
      return a1;
    }
    sub_1000215BC((uint64_t)v25, type metadata accessor for DetailComponentAction);
    goto LABEL_21;
  }
  if (v29)
  {
LABEL_21:
    v32 = sub_1000BA294(&qword_100BD3100);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  v30 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v25, v26, v30);
  v31 = sub_1000BA294(&qword_100BC5FE8);
  v25[*(int *)(v31 + 48)] = v26[*(int *)(v31 + 48)];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  return a1;
}

uint64_t sub_10035CA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035CA3C);
}

uint64_t sub_10035CA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    if (*(_DWORD *)(*(_QWORD *)(type metadata accessor for DetailComponentViewModel(0) - 8) + 84) == (_DWORD)a2)
    {
      v9 = sub_1000E6FD0();
      v10 = a1;
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BD3100);
      v10 = a1 + *(int *)(a3 + 24);
    }
    return _s7Weather24LocationCompositionStateOwet_0(v10, a2, v9);
  }
}

uint64_t sub_10035CAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035CAF4);
}

uint64_t sub_10035CAF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    if (*(_DWORD *)(*(_QWORD *)(type metadata accessor for DetailComponentViewModel(0) - 8) + 84) == a3)
    {
      v7 = sub_1000E6FD0();
      v8 = v5;
    }
    else
    {
      v7 = sub_1000BA294(&qword_100BD3100);
      v8 = v5 + *(int *)(a4 + 24);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DetailComponentContainerViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDAC40;
  if (!qword_100BDAC40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DetailComponentContainerViewModel);
  return result;
}

void sub_10035CBC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = " ";
  v2 = type metadata accessor for NewsArticleComponentViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10035CC58(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_10035CC58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BDAC50)
  {
    v2 = type metadata accessor for DetailComponentAction(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BDAC50);
  }
}

uint64_t sub_10035CCAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  sub_1000B4840();
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = v0[1];
  if (v6)
  {
    v7 = *v1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
  }
  sub_100095B78((uint64_t)v1, v5, type metadata accessor for DetailComponentContainerViewModel);
  if (!v6)
    v7 = sub_1006346AC();
  sub_1000215BC(v5, type metadata accessor for DetailComponentContainerViewModel);
  return v7;
}

uint64_t sub_10035CD60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char v38;
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;

  v46 = type metadata accessor for DetailComponentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v41 = v5;
  v43 = sub_1000BA294(&qword_100BDAC88);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v47 = v7;
  sub_1000BA294(&qword_100BD3100);
  sub_1000B42B0();
  v9 = __chkstk_darwin(v8);
  v42 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __chkstk_darwin(v9);
  v44 = &v39[-v12];
  __chkstk_darwin(v11);
  v45 = &v39[-v13];
  v14 = *a1;
  v15 = a1[1];
  v16 = a1[2];
  v17 = a1[3];
  v19 = *a2;
  v18 = a2[1];
  v21 = a2[2];
  v20 = a2[3];
  if (!v15)
  {
    if (!v18)
      goto LABEL_18;
    goto LABEL_15;
  }
  if (!v18)
  {
LABEL_15:
    sub_1000BA970();
    sub_1000C38EC();
    sub_1000C2848();
    v25 = v19;
    v26 = v18;
    v27 = v21;
    v28 = v20;
LABEL_16:
    sub_10035D5AC(v25, v26, v27, v28);
    return 0;
  }
  v22 = v14 == v19 && v15 == v18;
  if (!v22 && (_stringCompareWithSmolCheck(_:_:expecting:)(*a1, a1[1], *a2, a2[1], 0) & 1) == 0)
  {
    sub_1000BA970();
    sub_1000BA970();
    sub_1000C38EC();
    sub_100098738();
    sub_10009895C();
    sub_100075DF4();
    sub_1000986E8();
    v25 = v14;
    v26 = v15;
    v27 = v16;
    v28 = v17;
    goto LABEL_16;
  }
  if (v16 == v21 && v17 == v20)
  {
    sub_1000BA970();
    sub_1000BA970();
    sub_10035D57C(v19, v18, v16, v17);
    sub_100098738();
    sub_10009895C();
    sub_100075DF4();
    sub_1000986E8();
    sub_1000C2848();
LABEL_18:
    v29 = sub_1000B4840();
    if ((sub_100634760((uint64_t)a1 + *(int *)(v29 + 20), (uint64_t)a2 + *(int *)(v29 + 20)) & 1) != 0)
    {
      v30 = v45;
      sub_1000C1D10((uint64_t)a1 + *(int *)(v29 + 24), (uint64_t)v45);
      v31 = (uint64_t)a2 + *(int *)(v29 + 24);
      v32 = v44;
      sub_1000C1D10(v31, (uint64_t)v44);
      v33 = v47;
      v34 = v47 + *(int *)(v43 + 48);
      sub_1000C1D10((uint64_t)v30, v47);
      sub_1000C1D10((uint64_t)v32, v34);
      v35 = v46;
      if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v46) == 1)
      {
        sub_100099298((uint64_t)v32);
        sub_100099298((uint64_t)v30);
        if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35) == 1)
        {
          sub_100021A14(v33, &qword_100BD3100);
          return 1;
        }
        goto LABEL_25;
      }
      v36 = v42;
      sub_10003773C(v33, (uint64_t)v42, &qword_100BD3100);
      if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35) == 1)
      {
        sub_100021A14((uint64_t)v32, &qword_100BD3100);
        sub_100021A14((uint64_t)v30, &qword_100BD3100);
        sub_1000215BC((uint64_t)v36, type metadata accessor for DetailComponentAction);
LABEL_25:
        sub_100021A14(v33, &qword_100BDAC88);
        return 0;
      }
      v37 = v41;
      sub_10007C77C(v34, v41, type metadata accessor for DetailComponentAction);
      v38 = sub_10041229C((uint64_t)v36, v37);
      sub_1000215BC(v37, type metadata accessor for DetailComponentAction);
      sub_10009E47C((uint64_t)v32);
      sub_10009E47C((uint64_t)v30);
      sub_1000215BC((uint64_t)v36, type metadata accessor for DetailComponentAction);
      sub_10009E47C(v33);
      if ((v38 & 1) != 0)
        return 1;
    }
    return 0;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v21, v20, 0);
  sub_1000BA970();
  sub_1000BA970();
  sub_1000C38EC();
  sub_100098738();
  sub_10009895C();
  sub_100075DF4();
  sub_1000986E8();
  sub_1000C2848();
  result = 0;
  if ((v40 & 1) != 0)
    goto LABEL_18;
  return result;
}

uint64_t sub_10035D148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  Swift::String v26;

  sub_1000BA294(&qword_100BD3100);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  sub_1000BA294(&qword_100BDAC90);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = type metadata accessor for NewsArticleComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  sub_10003773C(a1, v11, &qword_100BDAC90);
  if (_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12) == 1)
  {
    sub_100099298(a1);
    sub_100099298(v11);
    v17 = sub_1000B4840();
    v18 = a2;
    v19 = 1;
  }
  else
  {
    sub_10007C77C(v11, v16, type metadata accessor for NewsArticleComponentViewModel);
    sub_10035D350(v16, v7);
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v26._object = (void *)0x80000001009F6570;
    v21._countAndFlagsBits = 1937204558;
    v21._object = (void *)0xE400000000000000;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0xD000000000000021;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v26);

    sub_100021A14(a1, &qword_100BDAC90);
    v24 = sub_1000B4840();
    sub_10007C77C(v16, a2 + *(int *)(v24 + 20), type metadata accessor for NewsArticleComponentViewModel);
    *(Swift::String *)a2 = v23;
    *(_OWORD *)(a2 + 16) = xmmword_100996EC0;
    sub_10035D5DC(v7, a2 + *(int *)(v24 + 24));
    v18 = a2;
    v19 = 0;
    v17 = v24;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v18, v19, 1, v17);
}

uint64_t sub_10035D350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NewsArticleComponentViewModel(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(a1, (uint64_t)v9, type metadata accessor for NewsArticleComponentViewModel);
  if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
  {
    sub_10007C77C((uint64_t)v9, (uint64_t)v6, type metadata accessor for NewsArticleComponentContentViewModel);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, &v6[*(int *)(v4 + 28)], v13);
    sub_1000215BC((uint64_t)v6, type metadata accessor for NewsArticleComponentContentViewModel);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, v17, 1, v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_100021A14((uint64_t)v12, &qword_100BD4280);
    v18 = 1;
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v19(v16, v12, v13);
    v20 = *(int *)(sub_1000BA294(&qword_100BC5FE8) + 48);
    v19((char *)a2, v16, v13);
    v18 = 0;
    *(_BYTE *)(a2 + v20) = 0;
  }
  v21 = type metadata accessor for DetailComponentAction(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, v18, 1, v21);
}

uint64_t sub_10035D57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

double sub_10035D5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_10035D5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD3100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035D624@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000DCDCC(a1, a2);
  sub_1000BA294(&qword_100BDB030);
  v8 = sub_1000BEC9C();
  sub_100037768(v8, v9, &qword_100BC5DD8);
  sub_1000C5410();
  sub_100037768(*(_QWORD *)(v2 + 40), v3 + v10, &qword_100BC5DD0);
  sub_1000D55D4(v4, v5, v6);
  return sub_1000C14E8(v7);
}

void sub_10035D690(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_100099A18(a1);
  sub_100080C0C(v1, v2, type metadata accessor for TemperatureAveragesHeroChartView);
  sub_1000BA294(&qword_100BDB070);
  v3 = sub_1000DF584();
  sub_100037768(v3, v4, &qword_100BC68C0);
  v5 = sub_1000DC6AC();
  sub_100080C0C(v5, v6, type metadata accessor for MonthlyAveragesChart);
  v7 = sub_10009D548();
  sub_100037768(v7, v8, &qword_100BC68A8);
  v9 = sub_1000CFCA0();
  sub_100037768(v9, v10, &qword_100BC68B0);
  v11 = sub_1000DC908();
  sub_100037768(v11, v12, &qword_100BC68B0);
  sub_100079F70();
}

double sub_10035D718@<D0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  sub_1000B4848(a1, a2);
  sub_1000BA294(&qword_100BDB078);
  v4 = sub_1000DF584();
  sub_100080C0C(v4, v5, type metadata accessor for CalendarHeaderView);
  sub_1000BA984((__n128 *)(v2 + v3[16]));
  sub_100037768(v6, v2 + v3[20], &qword_100BC69A0);
  sub_1000BA984((__n128 *)(v2 + v3[24]));
  v7 = sub_1000BA294(&qword_100BC6998);
  sub_1000D0CB0(v7);
  sub_1000BA984((__n128 *)(v2 + v3[32]));
  v8 = sub_1000BA294(&qword_100BC6990);
  sub_1000D0CB0(v8);
  *(_QWORD *)&result = sub_1000C285C((__n128 *)(v2 + v3[40])).n128_u64[0];
  return result;
}

double sub_10035D7E4()
{
  uint64_t **v0;
  uint64_t **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;

  sub_1000986AC();
  v1 = v0;
  v3 = v2;
  v4 = **v0;
  v5 = (*v0)[1];
  v6 = *((_BYTE *)*v0 + 16);
  v7 = (*v0)[3];
  v8 = (*v0)[4];
  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v5;
  *(_BYTE *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = v7;
  *(_QWORD *)(v2 + 32) = v8;
  v9 = (int *)sub_1000BA294(&qword_100BDB028);
  sub_100037768((uint64_t)v1[1], v3 + v9[12], &qword_100BCCDB8);
  sub_1000CDF18(v3 + v9[16]);
  sub_100080C0C(v11, v3 + v10, type metadata accessor for FeelsLikeComponentVarianceView);
  sub_1000ECF80(v3 + v9[24]);
  v13 = v3 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  LOBYTE(v9) = *(_BYTE *)(v14 + 16);
  v17 = *(_QWORD *)(v14 + 24);
  v18 = *(_QWORD *)(v14 + 32);
  v19 = *(_QWORD *)(v14 + 40);
  LOBYTE(v14) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  *(_BYTE *)(v13 + 16) = (_BYTE)v9;
  *(_QWORD *)(v13 + 24) = v17;
  *(_QWORD *)(v13 + 32) = v18;
  *(_QWORD *)(v13 + 40) = v19;
  *(_BYTE *)(v13 + 48) = v14;
  sub_1000D05C4(v4);
  swift_bridgeObjectRetain(v7);
  sub_1000D55D4(v15, v16, (char)v9);
  swift_bridgeObjectRetain(v17);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

void sub_10035D8F0()
{
  const void **v0;
  const void **v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  const void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[144];
  _BYTE v22[152];
  char v23;
  char v24;
  char v25;

  sub_1000986AC();
  v1 = v0;
  v3 = v2;
  sub_1000DB28C(v21, *v0);
  v4 = v1[1];
  v5 = v1[2];
  v6 = *(_QWORD *)v4;
  v7 = v4[8];
  v8 = *((_QWORD *)v4 + 2);
  v9 = v4[24];
  v10 = *((_QWORD *)v4 + 4);
  v11 = v4[40];
  v20 = *((_OWORD *)v4 + 3);
  sub_1000DB28C(v22, v5);
  v12 = v1[3];
  LOBYTE(v1) = v12[64];
  v18 = *((_OWORD *)v12 + 1);
  v19 = *(_OWORD *)v12;
  v16 = *((_OWORD *)v12 + 3);
  v17 = *((_OWORD *)v12 + 2);
  sub_1000DB28C((void *)v3, v21);
  v25 = v7;
  v24 = v9;
  v23 = v11;
  sub_1000DB28C((void *)(v3 + 208), v5);
  v22[144] = (_BYTE)v1;
  v13 = v25;
  v14 = v24;
  v15 = v23;
  *(_QWORD *)(v3 + 144) = v6;
  *(_BYTE *)(v3 + 152) = v13;
  *(_QWORD *)(v3 + 160) = v8;
  *(_BYTE *)(v3 + 168) = v14;
  *(_QWORD *)(v3 + 176) = v10;
  *(_BYTE *)(v3 + 184) = v15;
  *(_OWORD *)(v3 + 192) = v20;
  *(_OWORD *)(v3 + 352) = v19;
  *(_OWORD *)(v3 + 368) = v18;
  *(_OWORD *)(v3 + 384) = v17;
  *(_OWORD *)(v3 + 400) = v16;
  *(_BYTE *)(v3 + 416) = (_BYTE)v1;
  sub_10030CA34((uint64_t)v21);
  sub_10030CA34((uint64_t)v22);
  sub_100098640();
}

void sub_10035D9FC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;

  sub_100080C0C(*a1, a2, type metadata accessor for ConditionDetailMapView);
  v4 = (int *)sub_1000BA294(&qword_100BDAE50);
  sub_100037768(a1[1], a2 + v4[12], &qword_100BDAE00);
  sub_100037768(a1[2], a2 + v4[16], &qword_100BC68A8);
  sub_100037768(a1[3], a2 + v4[20], &qword_100BDADF8);
  sub_100037768(a1[4], a2 + v4[24], &qword_100BDADF0);
  sub_100037768(a1[5], a2 + v4[28], &qword_100BDADE8);
}

double sub_10035DAC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;

  v4 = *(uint64_t **)(a1 + 8);
  v6 = **(_QWORD **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v7 = *(_BYTE *)(*(_QWORD *)a1 + 16);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v10 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v11 = *(_BYTE *)(*(_QWORD *)a1 + 48);
  v12 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v13 = *(_BYTE *)(*(_QWORD *)a1 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v15 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  v16 = *(_BYTE *)(*(_QWORD *)a1 + 104);
  v17 = *(_OWORD *)(*(_QWORD *)a1 + 88);
  v18 = *(_BYTE *)(*(_QWORD *)a1 + 105);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = v12;
  *(_BYTE *)(a2 + 64) = v13;
  *(_QWORD *)(a2 + 72) = v14;
  *(_BYTE *)(a2 + 80) = v15;
  *(_OWORD *)(a2 + 88) = v17;
  *(_BYTE *)(a2 + 104) = v16;
  *(_BYTE *)(a2 + 105) = v18;
  v19 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)(a2 + 112) = v19;
  *(_BYTE *)(a2 + 120) = (_BYTE)v4;
  v20 = (int *)sub_1000BA294(&qword_100BDAF40);
  sub_100037768(*(_QWORD *)(a1 + 16), a2 + v20[16], &qword_100BDAF48);
  sub_1000FC4C0(a2 + v20[20]);
  sub_100037768(v21, a2 + v20[24], &qword_100BDAF50);
  sub_1000BA984((__n128 *)(a2 + v20[28]));
  sub_100037768(v22, a2 + v20[32], &qword_100BDAF58);
  sub_1000C285C((__n128 *)(a2 + v20[36]));
  sub_100037768(v23, a2 + v20[40], &qword_100BDAF60);
  sub_1000D55D4(v6, v5, v7);
  sub_1000878DC();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double sub_10035DC18()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_10011ABBC();
  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  v4 = v0[24];
  v6 = *((_QWORD *)v0 + 4);
  v5 = *((_QWORD *)v0 + 5);
  v7 = *((_QWORD *)v0 + 6);
  v8 = v0[56];
  v9 = *((_QWORD *)v0 + 8);
  v10 = v0[72];
  v11 = v0[73];
  v13 = *((_QWORD *)v0 + 11);
  v12 = *((_QWORD *)v0 + 10);
  LOBYTE(v0) = v0[96];
  *(_QWORD *)v14 = v15;
  v17 = (uint64_t *)v16[2];
  v18 = v16[3];
  *(_BYTE *)(v14 + 8) = v19;
  v20 = *v17;
  *(_BYTE *)(v14 + 16) = v1;
  v21 = *((_BYTE *)v17 + 8);
  *(_BYTE *)(v14 + 88) = v10;
  v22 = v17[2];
  *(_BYTE *)(v14 + 89) = v11;
  v23 = *((_BYTE *)v17 + 24);
  *(_QWORD *)(v14 + 96) = v12;
  *(_QWORD *)(v14 + 104) = v13;
  v24 = v17[4];
  *(_BYTE *)(v14 + 112) = (_BYTE)v0;
  LOBYTE(v0) = *((_BYTE *)v17 + 40);
  *(_QWORD *)(v14 + 120) = v20;
  LOBYTE(v20) = *(_BYTE *)v18;
  *(_BYTE *)(v14 + 128) = v21;
  *(_QWORD *)(v14 + 136) = v22;
  v45 = *(_QWORD *)(v18 + 16);
  v46 = *(_QWORD *)(v18 + 8);
  *(_BYTE *)(v14 + 144) = v23;
  v25 = *(_BYTE *)(v18 + 24);
  *(_QWORD *)(v14 + 152) = v24;
  *(_BYTE *)(v14 + 160) = (_BYTE)v0;
  v26 = *(_QWORD *)(v18 + 32);
  v27 = *(_QWORD *)(v18 + 40);
  v28 = *((_OWORD *)v17 + 3);
  v29 = *(_BYTE *)(v18 + 72);
  *(_BYTE *)(v14 + 184) = v20;
  LOBYTE(v0) = *(_BYTE *)(v18 + 73);
  *(_BYTE *)(v14 + 256) = v29;
  *(_BYTE *)(v14 + 257) = (_BYTE)v0;
  v30 = *(_QWORD *)(v18 + 88);
  v47 = v26;
  *(_QWORD *)(v14 + 264) = *(_QWORD *)(v18 + 80);
  *(_QWORD *)(v14 + 272) = v30;
  v31 = v16[4];
  *(_BYTE *)(v14 + 280) = *(_BYTE *)(v18 + 96);
  *(_QWORD *)(v14 + 288) = *(_QWORD *)v31;
  *(_BYTE *)(v14 + 296) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)(v14 + 304) = *(_QWORD *)(v31 + 16);
  *(_BYTE *)(v14 + 312) = *(_BYTE *)(v31 + 24);
  *(_QWORD *)(v14 + 320) = *(_QWORD *)(v31 + 32);
  *(_BYTE *)(v14 + 328) = *(_BYTE *)(v31 + 40);
  v32 = *(_QWORD *)(v18 + 48);
  *(_OWORD *)(v14 + 168) = v28;
  v33 = *(_OWORD *)(v31 + 48);
  v34 = *(_BYTE *)(v18 + 56);
  v35 = *(_QWORD *)(v18 + 64);
  *(_QWORD *)(v14 + 24) = v2;
  *(_QWORD *)(v14 + 32) = v3;
  *(_BYTE *)(v14 + 40) = v4;
  *(_QWORD *)(v14 + 48) = v6;
  *(_QWORD *)(v14 + 56) = v5;
  *(_QWORD *)(v14 + 64) = v7;
  *(_BYTE *)(v14 + 72) = v8;
  *(_QWORD *)(v14 + 80) = v9;
  *(_QWORD *)(v14 + 192) = v46;
  *(_QWORD *)(v14 + 200) = v45;
  *(_BYTE *)(v14 + 208) = v25;
  *(_QWORD *)(v14 + 216) = v26;
  *(_QWORD *)(v14 + 224) = v27;
  *(_QWORD *)(v14 + 232) = v32;
  *(_BYTE *)(v14 + 240) = v34;
  *(_QWORD *)(v14 + 248) = v35;
  *(_OWORD *)(v14 + 336) = v33;
  sub_1000D55D4(v2, v3, v4);
  sub_1000D9D2C();
  sub_1000C1A64(v5, v7, v8);
  swift_retain();
  sub_1000D55D4(v46, v45, v25);
  sub_1000BE7A4(v36, v37, v38, v39, v40, v41, v42, v43, v45, v46, v47);
  sub_1000D05C4(v27);
  swift_bridgeObjectRetain(v35);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

_QWORD *sub_10035DE10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD __dst[28];

  v3 = sub_100099A18(a1);
  sub_1000F3E38(v3, &qword_100BDAE80, v4);
  v5 = (int *)sub_1000BA294(&qword_100BDAE88);
  v6 = v2 + v5[12];
  v7 = v1[1];
  v8 = (const void *)v1[2];
  v10 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v12 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  v13 = *(_BYTE *)(v7 + 32);
  v14 = *(_QWORD *)(v7 + 40);
  v29 = *(_QWORD *)(v7 + 48);
  v15 = *(_QWORD *)(v7 + 56);
  v30 = *(_QWORD *)(v7 + 64);
  v16 = *(_QWORD *)(v7 + 104);
  v17 = *(_OWORD *)(v7 + 72);
  v18 = *(_OWORD *)(v7 + 88);
  LOBYTE(v7) = *(_BYTE *)(v7 + 112);
  *(_QWORD *)v6 = v10;
  *(_QWORD *)(v6 + 8) = v9;
  *(_QWORD *)(v6 + 16) = v12;
  *(_QWORD *)(v6 + 24) = v11;
  *(_BYTE *)(v6 + 32) = v13;
  *(_QWORD *)(v6 + 40) = v14;
  *(_QWORD *)(v6 + 48) = v29;
  *(_QWORD *)(v6 + 56) = v15;
  *(_QWORD *)(v6 + 64) = v30;
  *(_OWORD *)(v6 + 72) = v17;
  *(_OWORD *)(v6 + 88) = v18;
  *(_QWORD *)(v6 + 104) = v16;
  *(_BYTE *)(v6 + 112) = v7;
  v19 = (void *)(v2 + v5[16]);
  memcpy(__dst, v8, 0xD2uLL);
  memmove(v19, v8, 0xD2uLL);
  v20 = sub_10009D548();
  sub_100037768(v20, v21, &qword_100BD94D8);
  v22 = sub_1000CFCA0();
  sub_100037768(v22, v23, &qword_100BD94C8);
  v24 = sub_1000DC908();
  sub_100037768(v24, v25, &qword_100BDAE90);
  v26 = sub_1000F40D4();
  sub_100037768(v26, v27, &qword_100BD94B8);
  sub_100037768(v1[7], v2 + v5[36], &qword_100BD94A8);
  sub_100177CCC(v10, v9, v12, v11);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1003696DC(__dst);
}

void sub_10035DF9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_100099A18(a1);
  sub_1000F3E38(v1, &qword_100BDB038, v2);
  sub_1000BA294(&qword_100BDB040);
  v3 = sub_1000DF584();
  sub_100037768(v3, v4, &qword_100BDB048);
  v5 = sub_1000DC6AC();
  sub_100037768(v5, v6, &qword_100BDB050);
  v7 = sub_10009D548();
  sub_100037768(v7, v8, &qword_100BDB058);
  v9 = sub_1000CFCA0();
  sub_100037768(v9, v10, &qword_100BDB060);
  v11 = sub_1000DC908();
  sub_100037768(v11, v12, &qword_100BC68A8);
  v13 = sub_1000F40D4();
  sub_100037768(v13, v14, &qword_100BDB068);
  sub_100079F70();
}

double sub_10035E030@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = **(_QWORD **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_BYTE *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  v8 = (int *)sub_1000BA294(&qword_100BDAFF8);
  v9 = a2 + v8[12];
  v10 = *(_QWORD *)(a1 + 8);
  sub_1000BA294(&qword_100BDB000);
  sub_10009BC70();
  v11(v9, v10);
  sub_1000CDF18(a2 + v8[16]);
  sub_100037768(v13, a2 + v12, &qword_100BDAE70);
  sub_1000ECF80(a2 + v8[24]);
  v15 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v16 + 24);
  v21 = *(_QWORD *)(v16 + 32);
  v22 = *(_QWORD *)(v16 + 40);
  v23 = *(_BYTE *)(v16 + 50);
  LOWORD(v16) = *(_WORD *)(v16 + 48);
  *(_QWORD *)v15 = v17;
  *(_QWORD *)(v15 + 8) = v18;
  *(_QWORD *)(v15 + 16) = v19;
  *(_QWORD *)(v15 + 24) = v20;
  *(_QWORD *)(v15 + 32) = v21;
  *(_QWORD *)(v15 + 40) = v22;
  *(_WORD *)(v15 + 48) = v16;
  *(_BYTE *)(v15 + 50) = v23;
  sub_1000D05C4(v4);
  swift_bridgeObjectRetain();
  return sub_10036A850(v17, v18, v19, v20);
}

uint64_t sub_10035E15C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_100099A18(a1);
  sub_1000F3E38(v4, &qword_100BDB080, v5);
  sub_1000BA294(&qword_100BDB088);
  v6 = sub_1000DF584();
  sub_100037768(v6, v7, &qword_100BDB090);
  v8 = sub_1000DC6AC();
  sub_100037768(v8, v9, &qword_100BDB098);
  v10 = sub_10009D548();
  sub_100037768(v10, v11, &qword_100BDB0A0);
  v12 = sub_1000CFCA0();
  sub_100037768(v12, v13, &qword_100BDB0A8);
  v14 = v2 + *(int *)(v3 + 112);
  v15 = *(_QWORD *)(v1 + 40);
  v16 = sub_1000BA294(&qword_100BDB0B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
}

double sub_10035E204@<D0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = a1[1];
  v51 = **a1;
  v52 = (*a1)[1];
  v3 = (*a1)[3];
  v4 = (*a1)[5];
  v49 = (*a1)[6];
  v50 = (*a1)[4];
  v47 = *v2;
  v48 = v2[1];
  v5 = *((_BYTE *)v2 + 16);
  v30 = v2[3];
  v46 = v2[4];
  v31 = v2[5];
  v45 = v2[6];
  v6 = a1[2];
  v7 = a1[3];
  v38 = *v6;
  v39 = v6[1];
  v40 = v6[2];
  v27 = v6[3];
  v28 = *v7;
  v53 = v7[1];
  v8 = *((_BYTE *)v7 + 16);
  v29 = v7[3];
  v9 = v7[5];
  v54 = v7[4];
  v55 = v7[6];
  v11 = a1[4];
  v10 = a1[5];
  v56 = *v11;
  v57 = v11[1];
  v58 = v11[2];
  v59 = v11[3];
  v60 = *v10;
  v61 = v10[1];
  v12 = *((_BYTE *)v10 + 16);
  v14 = v10[3];
  v15 = v10[5];
  v13 = v10[4];
  v32 = v10[6];
  v16 = a1[6];
  v17 = a1[7];
  v33 = *v16;
  v18 = *v16;
  v34 = v16[1];
  v19 = v16[2];
  v35 = v16[3];
  v20 = *v17;
  v36 = v17[1];
  LOBYTE(v16) = *((_BYTE *)v17 + 16);
  v22 = v17[3];
  v23 = v17[5];
  v21 = v17[4];
  v37 = v17[6];
  v24 = a1[8];
  v41 = *v24;
  v25 = *v24;
  v42 = v24[1];
  v43 = v24[2];
  v44 = v24[3];
  *(_BYTE *)(a2 + 16) = *((_BYTE *)*a1 + 16);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 40) = v4;
  *(_BYTE *)(a2 + 72) = v5;
  *(_QWORD *)(a2 + 80) = v30;
  *(_QWORD *)(a2 + 96) = v31;
  *(_BYTE *)(a2 + 160) = v8;
  *(_QWORD *)(a2 + 168) = v29;
  *(_QWORD *)(a2 + 184) = v9;
  *(_BYTE *)(a2 + 248) = v12;
  *(_QWORD *)(a2 + 256) = v14;
  *(_QWORD *)(a2 + 272) = v15;
  *(_BYTE *)(a2 + 336) = (_BYTE)v16;
  *(_QWORD *)(a2 + 344) = v22;
  *(_QWORD *)(a2 + 360) = v23;
  *(_QWORD *)a2 = v51;
  *(_QWORD *)(a2 + 8) = v52;
  *(_QWORD *)(a2 + 32) = v50;
  *(_QWORD *)(a2 + 48) = v49;
  *(_QWORD *)(a2 + 56) = v47;
  *(_QWORD *)(a2 + 64) = v48;
  *(_QWORD *)(a2 + 88) = v46;
  *(_QWORD *)(a2 + 104) = v45;
  *(_QWORD *)(a2 + 112) = v38;
  *(_QWORD *)(a2 + 120) = v39;
  *(_QWORD *)(a2 + 128) = v40;
  *(_QWORD *)(a2 + 136) = v27;
  *(_QWORD *)(a2 + 144) = v28;
  *(_QWORD *)(a2 + 152) = v53;
  *(_QWORD *)(a2 + 176) = v54;
  *(_QWORD *)(a2 + 192) = v55;
  *(_QWORD *)(a2 + 200) = v56;
  *(_QWORD *)(a2 + 208) = v57;
  *(_QWORD *)(a2 + 216) = v58;
  *(_QWORD *)(a2 + 224) = v59;
  *(_QWORD *)(a2 + 232) = v60;
  *(_QWORD *)(a2 + 240) = v61;
  *(_QWORD *)(a2 + 264) = v13;
  *(_QWORD *)(a2 + 280) = v32;
  *(_QWORD *)(a2 + 288) = v18;
  *(_QWORD *)(a2 + 296) = v34;
  *(_QWORD *)(a2 + 304) = v19;
  *(_QWORD *)(a2 + 312) = v35;
  *(_QWORD *)(a2 + 320) = v20;
  *(_QWORD *)(a2 + 328) = v36;
  *(_QWORD *)(a2 + 352) = v21;
  *(_QWORD *)(a2 + 368) = v37;
  *(_QWORD *)(a2 + 376) = v25;
  *(_QWORD *)(a2 + 384) = v42;
  *(_QWORD *)(a2 + 392) = v43;
  *(_QWORD *)(a2 + 400) = v44;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000D9D2C();
  swift_bridgeObjectRetain();
  sub_10036A748(v38, v39);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10036A748(v56, v57);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10036A748(v33, v34);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_10036A748(v41, v42);
}

double sub_10035E524()
{
  uint64_t **v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t *v9;
  char *v10;
  void (*v11)(char *, uint64_t *);
  uint64_t v12;

  sub_1000986AC();
  v1 = v0;
  v3 = v2;
  v4 = **v0;
  v5 = (*v0)[1];
  v6 = (*v0)[2];
  v7 = (*v0)[3];
  *v2 = v4;
  v2[1] = v5;
  v2[2] = v6;
  v2[3] = v7;
  v8 = (int *)sub_1000BA294(&qword_100BDB008);
  sub_100037768((uint64_t)v1[1], (uint64_t)v3 + v8[12], &qword_100BDB010);
  v9 = v1[3];
  sub_1000BA984((__n128 *)((char *)v3 + v8[16]));
  v10 = (char *)v3 + v8[20];
  sub_1000BA294(&qword_100BDB018);
  sub_10009BC70();
  v11(v10, v9);
  sub_1000FC4C0((uint64_t)v3 + v8[24]);
  sub_100037768(v12, (uint64_t)v3 + v8[28], &qword_100BDB020);
  return sub_10010F980(v4, v5, v6, v7);
}

double sub_10035E600@<D0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  double result;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v3 = a1[1];
  v4 = **a1;
  v5 = *((_BYTE *)*a1 + 8);
  v6 = *v3;
  v7 = v3[1];
  v8 = *((_BYTE *)v3 + 16);
  v10 = v3[3];
  v9 = v3[4];
  v11 = v3[5];
  v12 = *((_BYTE *)v3 + 48);
  v13 = *((_BYTE *)v3 + 49);
  v30 = *((_BYTE *)v3 + 50);
  v14 = a1[2];
  v15 = a1[3];
  v16 = *v14;
  v17 = v14[2];
  v18 = v14[4];
  v20 = *v15;
  v19 = v15[1];
  v21 = *((_BYTE *)v15 + 16);
  v23 = v15[3];
  v22 = v15[4];
  v24 = v15[5];
  v25 = *((_BYTE *)v15 + 48);
  v26 = *((_BYTE *)v15 + 49);
  LOBYTE(v15) = *((_BYTE *)v15 + 50);
  v27 = a1[4];
  v28 = *v27;
  v34 = *((_BYTE *)v14 + 8);
  v33 = *((_BYTE *)v14 + 24);
  v32 = *((_BYTE *)v14 + 40);
  v31 = *((_BYTE *)v27 + 8);
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v11;
  *(_BYTE *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 65) = v13;
  *(_BYTE *)(a2 + 66) = v30;
  *(_QWORD *)(a2 + 72) = v16;
  *(_BYTE *)(a2 + 80) = v34;
  *(_QWORD *)(a2 + 88) = v17;
  *(_BYTE *)(a2 + 96) = v33;
  *(_QWORD *)(a2 + 104) = v18;
  *(_BYTE *)(a2 + 112) = v32;
  *(_OWORD *)(a2 + 120) = *((_OWORD *)v14 + 3);
  *(_QWORD *)(a2 + 136) = v20;
  *(_QWORD *)(a2 + 144) = v19;
  *(_BYTE *)(a2 + 152) = v21;
  *(_QWORD *)(a2 + 160) = v23;
  *(_QWORD *)(a2 + 168) = v22;
  *(_QWORD *)(a2 + 176) = v24;
  *(_BYTE *)(a2 + 184) = v25;
  *(_BYTE *)(a2 + 185) = v26;
  *(_BYTE *)(a2 + 186) = (_BYTE)v15;
  *(_QWORD *)(a2 + 192) = v28;
  *(_BYTE *)(a2 + 200) = v31;
  sub_1000BD3F0(v6, v7, v8);
  swift_retain();
  sub_1000D55D4(v20, v19, v21);
  sub_1000878DC();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double sub_10035E768@<D0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  double result;

  v2 = **a1;
  v3 = *((_BYTE *)*a1 + 8);
  v4 = *a1[1];
  v5 = a1[2];
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  v10 = v5[4];
  v11 = *((_BYTE *)v5 + 40);
  v12 = *a1[3];
  v13 = a1[4];
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 40) = v8;
  *(_BYTE *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v10;
  *(_BYTE *)(a2 + 64) = v11;
  *(_OWORD *)(a2 + 72) = *((_OWORD *)v5 + 3);
  *(_QWORD *)(a2 + 88) = v12;
  *(_QWORD *)(a2 + 96) = v14;
  *(_BYTE *)(a2 + 104) = (_BYTE)v13;
  swift_retain(v4);
  *(_QWORD *)&result = swift_retain(v12).n128_u64[0];
  return result;
}

void sub_10035E7F8()
{
  const void **v0;
  const void **v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  _BYTE *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  const void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[232];
  _BYTE v28[240];
  char v29;
  char v30;
  char v31;
  char v32;

  sub_1000986AC();
  v1 = v0;
  v3 = v2;
  sub_1000BF170(v27, *v0);
  v4 = v1[1];
  v5 = v1[2];
  v20 = *(_QWORD *)v4;
  v21 = *((_QWORD *)v4 + 1);
  v6 = *((_BYTE *)v4 + 16);
  v7 = v5[8];
  v26 = *((_QWORD *)v5 + 2);
  v8 = v5[24];
  v24 = *(_QWORD *)v5;
  v25 = *((_QWORD *)v5 + 4);
  v9 = v5[40];
  v10 = v1[3];
  v23 = *((_QWORD *)v4 + 3);
  v22 = *((_OWORD *)v5 + 3);
  sub_1000BF170(v28, v10);
  v11 = v1[4];
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v14 = *((_BYTE *)v11 + 16);
  v19 = *((_QWORD *)v11 + 3);
  sub_1000BF170((void *)v3, v27);
  v32 = v6;
  v31 = v7;
  v30 = v8;
  v29 = v9;
  sub_1000BF170((void *)(v3 + 328), v10);
  v28[232] = v14;
  v15 = v32;
  v16 = v31;
  v17 = v30;
  v18 = v29;
  *(_QWORD *)(v3 + 232) = v20;
  *(_QWORD *)(v3 + 240) = v21;
  *(_BYTE *)(v3 + 248) = v15;
  *(_QWORD *)(v3 + 256) = v23;
  *(_QWORD *)(v3 + 264) = v24;
  *(_BYTE *)(v3 + 272) = v16;
  *(_QWORD *)(v3 + 280) = v26;
  *(_BYTE *)(v3 + 288) = v17;
  *(_QWORD *)(v3 + 296) = v25;
  *(_BYTE *)(v3 + 304) = v18;
  *(_OWORD *)(v3 + 312) = v22;
  *(_QWORD *)(v3 + 560) = v12;
  *(_QWORD *)(v3 + 568) = v13;
  *(_BYTE *)(v3 + 576) = v14;
  *(_QWORD *)(v3 + 584) = v19;
  sub_10036A4F8((uint64_t)v27);
  sub_1000BD3F0(v20, v21, v6);
  sub_10036A4F8((uint64_t)v28);
  sub_1000D55D4(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_100098640();
}

double sub_10035E968()
{
  uint64_t v0;
  unint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __n128 *v13;
  unint64_t v14;
  unsigned __int8 v15;
  unint64_t v16;
  unsigned __int8 v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  double result;

  sub_1000DAEB0();
  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_BYTE *)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v10 = *(_QWORD *)(v4 + 32);
  v11 = *(_QWORD *)(v10 + 32);
  v12 = *(_BYTE *)(v10 + 40);
  v13->n128_u64[0] = v14;
  v13->n128_u8[8] = v15;
  v13[1].n128_u64[0] = v16;
  v13[1].n128_u8[8] = v17;
  v13[2].n128_u64[0] = v18;
  v13[2].n128_u8[8] = v19;
  sub_10011DC8C(v1, v2, v13);
  *(_QWORD *)(v21 + 88) = v3;
  *(_QWORD *)(v21 + 96) = v20;
  *(_BYTE *)(v21 + 104) = v22;
  *(_QWORD *)(v21 + 112) = v6;
  *(_QWORD *)(v21 + 120) = v7;
  *(_BYTE *)(v21 + 128) = v8;
  *(_QWORD *)(v21 + 136) = v9;
  *(_QWORD *)(v21 + 144) = v23;
  *(_BYTE *)(v21 + 152) = v24;
  *(_QWORD *)(v21 + 160) = v25;
  *(_BYTE *)(v21 + 168) = v26;
  *(_QWORD *)(v21 + 176) = v11;
  *(_BYTE *)(v21 + 184) = v12;
  *(_OWORD *)(v21 + 192) = *(_OWORD *)(v27 + 48);
  sub_1000BD3F0(v30, v28, v29);
  sub_1000D55D4(v6, v7, v8);
  *(_QWORD *)&result = swift_bridgeObjectRetain().n128_u64[0];
  return result;
}

void sub_10035EA70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v2 = *(uint64_t **)(a1 + 8);
  v4 = **(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v7 = *v2;
  v8 = v2[2];
  v9 = v2[4];
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(uint64_t **)(a1 + 24);
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(_QWORD *)(v11 + 24);
  v22 = *v10;
  v15 = *v10;
  v23 = v10[1];
  v16 = v10[2];
  v17 = v10[3];
  v26 = v10[5];
  v27 = v10[4];
  v24 = v10[7];
  v25 = v10[6];
  v18 = v10[8];
  v19 = v10[9];
  v20 = v10[10];
  v21 = v10[11];
  v31 = *((_BYTE *)v2 + 8);
  v30 = *((_BYTE *)v2 + 24);
  v29 = *((_BYTE *)v2 + 40);
  v28 = *(_BYTE *)(v11 + 16);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v31;
  *(_QWORD *)(a2 + 48) = v8;
  *(_BYTE *)(a2 + 56) = v30;
  *(_QWORD *)(a2 + 64) = v9;
  *(_BYTE *)(a2 + 72) = v29;
  *(_OWORD *)(a2 + 80) = *((_OWORD *)v2 + 3);
  *(_QWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 104) = v13;
  *(_BYTE *)(a2 + 112) = v28;
  *(_QWORD *)(a2 + 120) = v14;
  *(_QWORD *)(a2 + 128) = v15;
  *(_QWORD *)(a2 + 136) = v23;
  *(_QWORD *)(a2 + 144) = v16;
  *(_QWORD *)(a2 + 152) = v17;
  *(_QWORD *)(a2 + 160) = v27;
  *(_QWORD *)(a2 + 168) = v26;
  *(_QWORD *)(a2 + 176) = v25;
  *(_QWORD *)(a2 + 184) = v24;
  *(_QWORD *)(a2 + 192) = v18;
  *(_QWORD *)(a2 + 200) = v19;
  *(_QWORD *)(a2 + 208) = v20;
  *(_QWORD *)(a2 + 216) = v21;
  sub_10010F980(v4, v3, v5, v6);
  sub_1000BD3F0(v12, v13, v28);
  sub_10036A88C(v22, v23, v16, v17, v27, v26, v25, v24, v18, v19, v20, v21);
  sub_1000D1218();
}

double sub_10035EB84@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = **(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v6 = *(_QWORD *)v2;
  v7 = *(_QWORD *)(v2 + 8);
  v8 = *(_BYTE *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(uint64_t **)(a1 + 16);
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *v10;
  v13 = v10[1];
  v14 = v10[3];
  v15 = *v11;
  v21 = v11[2];
  v19 = v11[1];
  v20 = v11[3];
  v23 = *(_BYTE *)(*(_QWORD *)a1 + 16);
  v22 = *((_BYTE *)v10 + 16);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_BYTE *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v9;
  *(_QWORD *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v13;
  *(_BYTE *)(a2 + 80) = v22;
  *(_QWORD *)(a2 + 88) = v14;
  *(_QWORD *)(a2 + 96) = v15;
  *(_QWORD *)(a2 + 104) = v19;
  *(_QWORD *)(a2 + 112) = v21;
  *(_QWORD *)(a2 + 120) = v20;
  sub_1000C1A64(v4, v3, v23);
  sub_1000D55D4(v6, v7, v8);
  swift_bridgeObjectRetain();
  v16 = sub_100079FDC();
  sub_1000D55D4(v16, v17, v22);
  swift_bridgeObjectRetain();
  return sub_10010F980(v15, v19, v21, v20);
}

double sub_10035EC78()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_10011ABBC();
  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  v4 = v0[24];
  v5 = *((_QWORD *)v0 + 4);
  v6 = *((_QWORD *)v0 + 5);
  v7 = *((_QWORD *)v0 + 6);
  v8 = v0[56];
  v10 = *((_QWORD *)v0 + 8);
  v9 = *((_QWORD *)v0 + 9);
  v11 = *((_QWORD *)v0 + 10);
  v12 = v0[88];
  v13 = v0[89];
  LOBYTE(v0) = v0[90];
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)v17 = v18;
  LOBYTE(v18) = *(_BYTE *)v15;
  *(_BYTE *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = v1;
  v20 = *(_QWORD *)(v15 + 8);
  v21 = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v17 + 96) = v11;
  v22 = *(_BYTE *)(v15 + 24);
  *(_BYTE *)(v17 + 104) = v12;
  *(_BYTE *)(v17 + 105) = v13;
  v23 = *(_QWORD *)(v15 + 40);
  v38 = v20;
  v39 = *(_QWORD *)(v15 + 32);
  *(_BYTE *)(v17 + 106) = (_BYTE)v0;
  v40 = v23;
  v41 = *(_QWORD *)(v15 + 48);
  *(_BYTE *)(v17 + 112) = v18;
  *(_QWORD *)(v17 + 192) = *(_QWORD *)(v15 + 80);
  *(_BYTE *)(v17 + 200) = *(_BYTE *)(v15 + 88);
  *(_BYTE *)(v17 + 201) = *(_BYTE *)(v15 + 89);
  *(_BYTE *)(v17 + 202) = *(_BYTE *)(v15 + 90);
  *(_QWORD *)(v17 + 208) = *(_QWORD *)v16;
  *(_BYTE *)(v17 + 216) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)(v17 + 224) = *(_QWORD *)(v16 + 16);
  *(_BYTE *)(v17 + 232) = *(_BYTE *)(v16 + 24);
  *(_QWORD *)(v17 + 240) = *(_QWORD *)(v16 + 32);
  *(_BYTE *)(v17 + 248) = *(_BYTE *)(v16 + 40);
  v24 = *(_BYTE *)(v15 + 56);
  v25 = *(_OWORD *)(v16 + 48);
  v27 = *(_QWORD *)(v15 + 64);
  v26 = *(_QWORD *)(v15 + 72);
  *(_QWORD *)(v17 + 24) = v2;
  *(_QWORD *)(v17 + 32) = v3;
  *(_BYTE *)(v17 + 40) = v4;
  *(_QWORD *)(v17 + 48) = v5;
  *(_QWORD *)(v17 + 56) = v6;
  *(_QWORD *)(v17 + 64) = v7;
  *(_BYTE *)(v17 + 72) = v8;
  *(_QWORD *)(v17 + 80) = v10;
  *(_QWORD *)(v17 + 88) = v9;
  *(_QWORD *)(v17 + 120) = v20;
  *(_QWORD *)(v17 + 128) = v21;
  *(_BYTE *)(v17 + 136) = v22;
  *(_QWORD *)(v17 + 144) = v39;
  *(_QWORD *)(v17 + 152) = v23;
  *(_QWORD *)(v17 + 160) = v41;
  *(_BYTE *)(v17 + 168) = v24;
  *(_QWORD *)(v17 + 176) = v27;
  *(_QWORD *)(v17 + 184) = v26;
  *(_OWORD *)(v17 + 256) = v25;
  sub_1000BD3F0(v2, v3, v4);
  sub_1000D55D4(v6, v7, v8);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000D55D4(v38, v21, v22);
  sub_1000BE7A4(v28, v29, v30, v31, v32, v33, v34, v35, v37, v38, v39);
  sub_1000D55D4(v40, v41, v24);
  sub_1000878DC();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double sub_10035EE30@<D0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1000B4848(a1, a2);
  sub_1000BA294(&qword_100BDAE98);
  v4 = sub_1000DF584();
  sub_100037768(v4, v5, &qword_100BDAEA0);
  sub_1000D00DC(v2 + v3[16]);
  v8 = *(_QWORD *)v6;
  v7 = *(_QWORD *)(v6 + 8);
  HIDWORD(v36) = *(unsigned __int8 *)(v6 + 16);
  v37 = *(_QWORD *)(v6 + 24);
  v9 = sub_1000DC3AC();
  *(_QWORD *)v10 = v8;
  *(_QWORD *)(v10 + 8) = v7;
  *(_BYTE *)(v10 + 16) = v11;
  *(_QWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 32) = v12;
  sub_1000890D0(v10, v9, v14);
  sub_1000D00DC(v2 + v3[24]);
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(_BYTE *)(v15 + 16);
  v20 = *(_QWORD *)(v15 + 24);
  v19 = *(_QWORD *)(v15 + 32);
  v21 = sub_1000DC3AC();
  *(_QWORD *)v22 = v16;
  *(_QWORD *)(v22 + 8) = v17;
  *(_BYTE *)(v22 + 16) = v18;
  *(_QWORD *)(v22 + 24) = v20;
  *(_QWORD *)(v22 + 32) = v19;
  sub_1000890D0(v22, v21, v23);
  v24 = sub_1000F40D4();
  sub_100037768(v24, v25, qword_100BDAEA8);
  sub_1000C285C((__n128 *)(v2 + v3[36]));
  sub_1000D55D4(v8, v7, SBYTE4(v36));
  sub_1000BE7A4(v26, v27, v28, v29, v30, v31, v32, v33, v35, v36, v37);
  swift_retain();
  sub_1000D55D4(v16, v17, v18);
  sub_1000D9D2C();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_10035EF5C@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  sub_1000DCDCC(a1, a2);
  sub_1000BA294(&qword_100BDAFE8);
  v8 = sub_1000BEC9C();
  sub_100037768(v8, v9, &qword_100BC5DD8);
  sub_1000C5410();
  v11 = v3 + v10;
  v12 = *(_QWORD *)(v2 + 40);
  sub_1000BA294(&qword_100BDAFF0);
  sub_10009BC70();
  v13(v11, v12);
  sub_1000D55D4(v4, v5, v6);
  return sub_1000C14E8(v7);
}

double sub_10035EFD8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __n128 *v12;
  unint64_t v13;
  unsigned __int8 v14;
  unint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  double result;
  unsigned __int8 v31;

  sub_1000DAEB0();
  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)v4;
  v7 = *(_QWORD *)(v4 + 8);
  v8 = *(_BYTE *)(v4 + 16);
  v9 = *(_QWORD *)(v4 + 24);
  v10 = *(_QWORD *)(v5 + 32);
  v11 = *(_BYTE *)(v5 + 40);
  v31 = *(_BYTE *)(v0 + 16);
  v12->n128_u64[0] = v13;
  v12->n128_u8[8] = v14;
  v12[1].n128_u64[0] = v15;
  v12[1].n128_u8[8] = v16;
  v12[2].n128_u64[0] = v17;
  v12[2].n128_u8[8] = v18;
  sub_10011DC8C(v1, v31, v12);
  *(_QWORD *)(v19 + 88) = v2;
  *(_BYTE *)(v19 + 96) = v20;
  *(_BYTE *)(v19 + 97) = v21;
  *(_QWORD *)(v19 + 104) = v6;
  *(_QWORD *)(v19 + 112) = v7;
  *(_BYTE *)(v19 + 120) = v8;
  *(_QWORD *)(v19 + 128) = v9;
  *(_QWORD *)(v19 + 136) = v22;
  *(_BYTE *)(v19 + 144) = v23;
  *(_QWORD *)(v19 + 152) = v24;
  *(_BYTE *)(v19 + 160) = v25;
  *(_QWORD *)(v19 + 168) = v10;
  *(_BYTE *)(v19 + 176) = v11;
  *(_OWORD *)(v19 + 184) = *(_OWORD *)(v26 + 48);
  sub_1000C1A64(v29, v27, v28);
  sub_1000D55D4(v6, v7, v8);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v9).n128_u64[0];
  return result;
}

void sub_10035F0DC(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  *(_QWORD *)a1 = EnvironmentValues.preferredMapSize.getter();
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3 & 1;
  sub_10004A298();
}

void sub_10035F108(uint64_t a1)
{
  EnvironmentValues.preferredMapSize.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  sub_10004A298();
}

void sub_10035F130()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];

  sub_1000986AC();
  v32 = v1;
  v2 = (int *)sub_1000CDC34();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = (_QWORD *)(v5 - v4);
  v7 = sub_1000DA950();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  sub_1000BA294(&qword_100BDAC98);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  type metadata accessor for AirQualityDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  sub_100094EE4();
  sub_10017B02C();
  sub_10009880C();
  if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v7) == 1)
  {
    v22 = sub_100079FDC();
    swift_storeEnumTagMultiPayload(v22, v23, 0);
    sub_10000F1C8(&qword_100BDACA0, type metadata accessor for AirQualityDetailInnerView);
    sub_1000BEA68(v24, (uint64_t)&type metadata for EmptyView, v25, (uint64_t)&protocol witness table for EmptyView, v24);
  }
  else
  {
    sub_10007802C(v21, (uint64_t)v13, type metadata accessor for AirQualityDetailViewModel.Model);
    sub_100080C0C((uint64_t)v13, (uint64_t)v10, type metadata accessor for AirQualityDetailViewModel.Model);
    sub_10003B59C(v0 + 16, (uint64_t)v35);
    *v6 = swift_getKeyPath(&unk_100996FE8);
    v26 = sub_1000BA294(&qword_100BC4F28);
    swift_storeEnumTagMultiPayload(v6, v26, 0);
    v33 = 0x3FF0000000000000;
    v34 = 0x4010000000000000;
    v27 = sub_10010FE84();
    ScaledValue.init(wrappedValue:step:)(&v34, &v33, &type metadata for CGFloat, v27);
    *(_QWORD *)((char *)v6 + v2[6]) = 0;
    sub_10007802C((uint64_t)v10, (uint64_t)v6 + v2[8], type metadata accessor for AirQualityDetailViewModel.Model);
    sub_10003C800(v35, (uint64_t)v6 + v2[7]);
    sub_100080C0C((uint64_t)v6, v17, type metadata accessor for AirQualityDetailInnerView);
    v28 = sub_100079FDC();
    swift_storeEnumTagMultiPayload(v28, v29, 1);
    sub_10000F1C8(&qword_100BDACA0, type metadata accessor for AirQualityDetailInnerView);
    sub_1000BEA68(v30, (uint64_t)&type metadata for EmptyView, v31, (uint64_t)&protocol witness table for EmptyView, v30);
    sub_1000215BC((uint64_t)v6, type metadata accessor for AirQualityDetailInnerView);
    sub_1000215BC((uint64_t)v13, type metadata accessor for AirQualityDetailViewModel.Model);
  }
  sub_100098640();
}

void sub_10035F3B8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[5];

  v2 = type metadata accessor for AirQualityDetailInnerView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = v2;
  v57 = v2;
  v61 = *(_QWORD *)(v3 + 64);
  v62 = v3;
  __chkstk_darwin(v2);
  v60 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v53 - v7;
  v58 = type metadata accessor for Location(0);
  v8 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v10;
  v11 = type metadata accessor for DetailType(0);
  v12 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DetailViewVisibilityTrackerModel(0);
  __chkstk_darwin(v18);
  v55 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)(v63 + *(int *)(v4 + 32));
  sub_100080C0C((uint64_t)v20, (uint64_t)v17, type metadata accessor for AirQualityDetailViewModel.Model);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DetailType.airQuality(_:), v11);
  v21 = *(int *)(v15 + 72);
  v22 = &v17[v21 + *(int *)(type metadata accessor for ConditionDetailMapViewModel(0) + 20)];
  v23 = v8;
  v24 = v10;
  v25 = v58;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v24, v22, v58);
  sub_1000215BC((uint64_t)v17, type metadata accessor for AirQualityDetailViewModel.Model);
  v26 = v55;
  v27 = &v55[*(int *)(v18 + 24)];
  v28 = enum case for DetailViewOrigin.component(_:);
  v29 = type metadata accessor for DetailViewOrigin(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v26, v14, v56);
  v30 = (uint64_t)v26;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v26[*(int *)(v18 + 20)], v54, v25);
  v31 = v63;
  v32 = (_QWORD *)(v63 + *(int *)(v57 + 28));
  v33 = v32[3];
  v34 = v32[4];
  v35 = sub_1000DB418(v32, v33);
  v64[3] = v33;
  v64[4] = *(_QWORD *)(v34 + 8);
  v36 = sub_10005F164(v64);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v36, v35, v33);
  v38 = v20[14];
  v37 = v20[15];
  v40 = v20[4];
  v39 = v20[5];
  v41 = v59;
  sub_100080C0C(v31, v59, type metadata accessor for AirQualityDetailInnerView);
  *a1 = swift_getKeyPath(&unk_100996FE8);
  v42 = sub_1000BA294(&qword_100BC4F28);
  swift_storeEnumTagMultiPayload(a1, v42, 0);
  v43 = (int *)sub_1000BA294(&qword_100BDAD70);
  v44 = v30;
  sub_100080C0C(v30, (uint64_t)a1 + v43[9], type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_10003B59C((uint64_t)v64, (uint64_t)a1 + v43[10]);
  v45 = (_QWORD *)((char *)a1 + v43[11]);
  *v45 = v38;
  v45[1] = v37;
  v46 = (_QWORD *)((char *)a1 + v43[12]);
  *v46 = v40;
  v46[1] = v39;
  *((_BYTE *)a1 + v43[13]) = 0;
  v47 = (_QWORD *)((char *)a1 + v43[14]);
  *v47 = 0;
  v47[1] = 0;
  *((_BYTE *)a1 + v43[15]) = 1;
  v48 = v60;
  sub_100080C0C(v41, v60, type metadata accessor for AirQualityDetailInnerView);
  v49 = *(unsigned __int8 *)(v62 + 80);
  v50 = (v49 + 16) & ~v49;
  v51 = swift_allocObject(&unk_100B6E9D8, v50 + v61, v49 | 7);
  sub_10007802C(v48, v51 + v50, type metadata accessor for AirQualityDetailInnerView);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v39);
  sub_1000215BC(v41, type metadata accessor for AirQualityDetailInnerView);
  sub_1000CE2FC(v64);
  sub_1000215BC(v44, type metadata accessor for DetailViewVisibilityTrackerModel);
  v52 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))((char *)a1 + v43[16]);
  *v52 = sub_100368CC0;
  v52[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v51;
}

void sub_10035F7DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v35)();
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[16];
  uint64_t v47;

  v37 = a2;
  v44 = a1;
  v45 = a3;
  v4 = type metadata accessor for ScrollViewProxy(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v42 = v4;
  v43 = v6;
  __chkstk_darwin(v4);
  v41 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AirQualityDetailInnerView(0);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v9;
  __chkstk_darwin(v8);
  v38 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BD9470);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BD9478);
  __chkstk_darwin(v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a2;
  v22 = static Axis.Set.vertical.getter(v21);
  v23 = sub_1000BA294(&qword_100BDAD78);
  sub_10003D2DC(&qword_100BDAD80, &qword_100BDAD78);
  ScrollView.init(_:showsIndicators:content:)(v22, 0, sub_100368D08, v46, v23, v24);
  v25 = type metadata accessor for AutomationViewInfo(0);
  swift_storeEnumTagMultiPayload(v13, v25, 9);
  swift_storeEnumTagMultiPayload(v13, v11, 0);
  sub_100335260();
  sub_1000215BC((uint64_t)v13, type metadata accessor for AutomationInfo);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v26 = v38;
  sub_100080C0C(v37, v38, type metadata accessor for AirQualityDetailInnerView);
  v28 = v41;
  v27 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v41, v44, v42);
  v29 = *(unsigned __int8 *)(v39 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = *(unsigned __int8 *)(v5 + 80);
  v32 = (v40 + v31 + v30) & ~v31;
  v33 = swift_allocObject(&unk_100B6EA00, v32 + v43, v29 | v31 | 7);
  sub_10007802C(v26, v33 + v30, type metadata accessor for AirQualityDetailInnerView);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v33 + v32, v28, v27);
  v34 = v45;
  sub_100037768((uint64_t)v20, v45, &qword_100BD9478);
  v35 = (uint64_t (**)())(v34 + *(int *)(sub_1000BA294(&qword_100BDAD88) + 36));
  *v35 = sub_10036917C;
  v35[1] = (uint64_t (*)())v33;
  v35[2] = 0;
  v35[3] = 0;
  sub_100021A14((uint64_t)v20, &qword_100BD9478);
}

void sub_10035FADC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_1000BA294(&qword_100BDAD98);
  sub_10035FB28(a1, a2 + *(int *)(v4 + 44));
}

void sub_10035FB28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  void *v77;

  v74 = a2;
  v3 = sub_1000BA294(&qword_100BD8A00);
  __chkstk_darwin(v3);
  v69 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributedText(0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  __chkstk_darwin(v5);
  v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BDADA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BDADA8);
  __chkstk_darwin(v10);
  v73 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BDADB0);
  __chkstk_darwin(v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v66 - v16;
  v18 = sub_1000BA294(&qword_100BDADB8);
  __chkstk_darwin(v18);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v66 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v66 - v25;
  *(_QWORD *)v23 = static HorizontalAlignment.center.getter(v27);
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 0;
  v28 = sub_1000BA294(&qword_100BDADC0);
  sub_100360078(a1, (uint64_t)&v23[*(int *)(v28 + 44)]);
  sub_1000787D4((uint64_t)v23, (uint64_t)v26, &qword_100BDADB8);
  v77 = 0;
  v29 = a1 + *(int *)(type metadata accessor for AirQualityDetailInnerView(0) + 32);
  v30 = *(void **)(v29 + *(int *)(type metadata accessor for AirQualityDetailViewModel.Model(0) + 64));
  if (v30)
  {
    v68 = v30;
    v31 = sub_1003618C4(&v77);
    v76 = sub_1000A0794(0, (unint64_t *)&qword_100BD35F0, UIFont_ptr);
    v75[0] = v31;
    v32 = (void *)NSAttributedString.addingAttribute(_:value:)(NSFontAttributeName, v75);
    sub_1000CE2FC(v75);
    v33 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v66 = v7;
    v67 = v10;
    v34 = v33;
    v76 = sub_1000A0794(0, (unint64_t *)&qword_100BDADD0, UIColor_ptr);
    v75[0] = v34;
    v35 = NSAttributedString.addingAttribute(_:value:)(NSForegroundColorAttributeName, v75);

    sub_1000CE2FC(v75);
    v36 = type metadata accessor for AttributedString(0);
    v37 = v69;
    _s7Weather24LocationCompositionStateOwst_0(v69, 1, 1, v36);
    v38 = v70;
    v39 = AttributedText.init(_:accessibilityAttributedText:onInteraction:)(v35, v37, static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:), 0);
    LOBYTE(v35) = static Edge.Set.horizontal.getter(v39);
    swift_beginAccess(&unk_100BE0830, v75, 1, 0);
    v40 = sub_10040908C();
    v41 = EdgeInsets.init(_all:)(v40);
    v43 = v42;
    v45 = v44;
    v47 = v46;
    v49 = v71;
    v48 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v9, v38, v72);
    v50 = &v9[*(int *)(v66 + 36)];
    *v50 = v35;
    *((double *)v50 + 1) = v41;
    *((_QWORD *)v50 + 2) = v43;
    *((_QWORD *)v50 + 3) = v45;
    *((_QWORD *)v50 + 4) = v47;
    v50[40] = 0;
    v51 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v38, v48);
    LOBYTE(v48) = static Edge.Set.bottom.getter(v51);
    v52 = sub_1004092CC();
    v53 = EdgeInsets.init(_all:)(v52);
    v55 = v54;
    v57 = v56;
    v59 = v58;
    v60 = v73;
    sub_100037768((uint64_t)v9, v73, &qword_100BDADA0);

    v61 = v67;
    v62 = v60 + *(int *)(v67 + 36);
    *(_BYTE *)v62 = v48;
    *(double *)(v62 + 8) = v53;
    *(_QWORD *)(v62 + 16) = v55;
    *(_QWORD *)(v62 + 24) = v57;
    *(_QWORD *)(v62 + 32) = v59;
    *(_BYTE *)(v62 + 40) = 0;
    sub_100021A14((uint64_t)v9, &qword_100BDADA0);
    sub_1000787D4(v60, (uint64_t)v17, &qword_100BDADA8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v61);
    v63 = v77;
  }
  else
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 1, 1, v10);
    v63 = 0;
  }
  sub_100037768((uint64_t)v26, (uint64_t)v20, &qword_100BDADB8);
  sub_100037768((uint64_t)v17, (uint64_t)v14, &qword_100BDADB0);
  v64 = v74;
  sub_100037768((uint64_t)v20, v74, &qword_100BDADB8);
  v65 = sub_1000BA294(&qword_100BDADC8);
  sub_100037768((uint64_t)v14, v64 + *(int *)(v65 + 48), &qword_100BDADB0);
  sub_100021A14((uint64_t)v17, &qword_100BDADB0);

  sub_100021A14((uint64_t)v26, &qword_100BDADB8);
  sub_100021A14((uint64_t)v14, &qword_100BDADB0);
  sub_100021A14((uint64_t)v20, &qword_100BDADB8);
}

void sub_100360078(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  double v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  Swift::String v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  Swift::String v109;
  Swift::String v110;
  Swift::String v111;
  const __CTFont *v112;
  Class isa;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id object;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  char *v173;
  char *v174;
  Swift::String *v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  Swift::String v183;
  Swift::String v184;
  Swift::String v185;

  v176 = a1;
  v167 = a2;
  v149 = sub_1000BA294(&qword_100BDADD8);
  __chkstk_darwin(v149);
  v151 = (char *)&v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_1000BA294(&qword_100BDADE0);
  __chkstk_darwin(v156);
  v150 = (uint64_t)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BDADE8);
  __chkstk_darwin(v5);
  v166 = (uint64_t)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v165 = (uint64_t)&v145 - v8;
  v9 = sub_1000BA294(&qword_100BDACB0);
  __chkstk_darwin(v9);
  v159 = (uint64_t)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for AirPollutant(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v153 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BDADF0);
  __chkstk_darwin(v12);
  v164 = (uint64_t)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v172 = (uint64_t *)((char *)&v145 - v15);
  v16 = sub_1000BA294(&qword_100BDADF8);
  __chkstk_darwin(v16);
  v163 = (uint64_t)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v175 = (Swift::String *)((char *)&v145 - v19);
  v152 = type metadata accessor for DetailNewsComponentView(0);
  __chkstk_darwin(v152);
  v148 = (uint64_t *)((char *)&v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1000BA294(&qword_100BC68A0);
  __chkstk_darwin(v21);
  v157 = (char *)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = type metadata accessor for DetailComponentContainerViewModel(0);
  __chkstk_darwin(v158);
  v147 = (uint64_t)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v146 = (uint64_t)&v145 - v25;
  v26 = sub_1000BA294(&qword_100BC68A8);
  __chkstk_darwin(v26);
  v162 = (uint64_t)&v145 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v171 = (uint64_t)&v145 - v29;
  v30 = sub_1000BA294(&qword_100BDAE00);
  __chkstk_darwin(v30);
  v161 = (uint64_t)&v145 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (uint64_t *)((char *)&v145 - v33);
  __chkstk_darwin(v35);
  v37 = (char *)&v145 - v36;
  v38 = type metadata accessor for ConditionDetailMapViewModel(0);
  __chkstk_darwin(v38);
  v40 = (char *)&v145 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for ConditionDetailMapView(0);
  __chkstk_darwin(v41);
  v43 = (char *)&v145 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v145 - v45;
  v169 = type metadata accessor for AirQualityDetailInnerView(0);
  v47 = a1 + *(int *)(v169 + 32);
  v48 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  sub_100080C0C(v47 + *(int *)(v48 + 72), (uint64_t)v40, type metadata accessor for ConditionDetailMapViewModel);
  *(_QWORD *)v43 = swift_getKeyPath(&unk_1009970A8);
  *((_QWORD *)v43 + 1) = 0;
  *((_WORD *)v43 + 8) = 0;
  sub_10007802C((uint64_t)v40, (uint64_t)&v43[*(int *)(v41 + 20)], type metadata accessor for ConditionDetailMapViewModel);
  v49 = &v43[*(int *)(v41 + 24)];
  *(_QWORD *)v49 = 0;
  *((_QWORD *)v49 + 1) = 0;
  v173 = v46;
  v174 = v43;
  sub_10007802C((uint64_t)v43, (uint64_t)v46, type metadata accessor for ConditionDetailMapView);
  v50 = *(_QWORD *)(v47 + 104);
  v170 = *(_QWORD *)(v47 + 96);
  v51 = (void *)objc_opt_self(NSBundle);
  *(_QWORD *)&v52 = swift_bridgeObjectRetain(v50).n128_u64[0];
  object = v51;
  v53 = objc_msgSend(v51, "mainBundle", v52);
  v183._countAndFlagsBits = 0xD000000000000056;
  v185._object = (void *)0x80000001009FBF80;
  v54._countAndFlagsBits = 0x25203A656C616353;
  v54._object = (void *)0xE900000000000040;
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v183);

  v57 = sub_1000BA294(&qword_100BC3C38);
  v58 = swift_allocObject(v57, 72, 7);
  *(_OWORD *)(v58 + 16) = xmmword_10097CA50;
  v60 = *(_QWORD *)(v47 + 16);
  v59 = *(_QWORD *)(v47 + 24);
  *(_QWORD *)(v58 + 56) = &type metadata for String;
  *(_QWORD *)(v58 + 64) = sub_1000B2E24();
  *(_QWORD *)(v58 + 32) = v60;
  *(_QWORD *)(v58 + 40) = v59;
  v61 = v176;
  swift_bridgeObjectRetain(v59);
  v62 = static String.localizedStringWithFormat(_:_:)(v56._countAndFlagsBits, v56._object, v58);
  v64 = v63;
  v65 = (uint64_t)v157;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v66 = sub_10058F784();
  v177 = v61;
  sub_100361304(v170, v50, v62, v64, v66, v67, (void (*)(__n128))sub_100369640, v34);
  v160 = v37;
  sub_1000787D4((uint64_t)v34, (uint64_t)v37, &qword_100BDAE00);
  v170 = v48;
  sub_100037768(v47 + *(int *)(v48 + 76), v65, &qword_100BC68A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v65, 1, v158) == 1)
  {
    sub_100021A14(v65, &qword_100BC68A0);
    v68 = 1;
    v69 = v171;
    v70 = v155;
    v71 = v152;
  }
  else
  {
    v72 = v146;
    sub_10007802C(v65, v146, type metadata accessor for DetailComponentContainerViewModel);
    v73 = v147;
    sub_100080C0C(v72, v147, type metadata accessor for DetailComponentContainerViewModel);
    v74 = (_QWORD *)(v61 + *(int *)(v169 + 28));
    v75 = v74[3];
    v76 = v74[4];
    v77 = sub_1000DB418(v74, v75);
    v180 = v75;
    v181 = *(_QWORD *)(v76 + 8);
    v78 = sub_10005F164(&v178);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
    sub_1000215BC(v72, type metadata accessor for DetailComponentContainerViewModel);
    LOBYTE(v75) = *(_BYTE *)(v47 + 64);
    KeyPath = swift_getKeyPath(&unk_100997120);
    v80 = (uint64_t)v148;
    *v148 = KeyPath;
    v81 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    swift_storeEnumTagMultiPayload(v80, v81, 0);
    v82 = v152;
    sub_10007802C(v73, v80 + *(int *)(v152 + 20), type metadata accessor for DetailComponentContainerViewModel);
    sub_10003C800(&v178, v80 + *(int *)(v82 + 24));
    *(_BYTE *)(v80 + *(int *)(v82 + 28)) = v75;
    v69 = v171;
    sub_10007802C(v80, v171, type metadata accessor for DetailNewsComponentView);
    v68 = 0;
    v70 = v155;
    v71 = v82;
  }
  _s7Weather24LocationCompositionStateOwst_0(v69, v68, 1, v71);
  v83 = *(_QWORD *)(v47 + 136);
  if (v83)
  {
    v84 = *(_QWORD *)(v47 + 128);
    v85 = objc_msgSend(object, "mainBundle");
    v86._countAndFlagsBits = 0xD000000000000012;
    v184._countAndFlagsBits = 0xD000000000000035;
    v185._object = (void *)0x80000001009FC040;
    v86._object = (void *)0x80000001009FC020;
    v87._countAndFlagsBits = 0;
    v87._object = (void *)0xE000000000000000;
    v88 = NSLocalizedString(_:tableName:bundle:value:comment:)(v86, (Swift::String_optional)0, (NSBundle)v85, v87, v184);

    v89 = v175;
    v175[1]._countAndFlagsBits = 0;
    v90 = sub_1000BA294(&qword_100BDAE08);
    v91 = (uint64_t)v89 + *(int *)(v90 + 40);
    v92 = type metadata accessor for AttributedString(0);
    _s7Weather24LocationCompositionStateOwst_0(v91, 1, 1, v92);
    *v89 = v88;
    v93 = (char *)v89 + *(int *)(v90 + 44);
    *(_QWORD *)&v178 = v84;
    *((_QWORD *)&v178 + 1) = v83;
    v94 = sub_100114EF8();
    swift_bridgeObjectRetain(v83);
    *(_QWORD *)v93 = Text.init<A>(_:)(&v178, &type metadata for String, v94);
    *((_QWORD *)v93 + 1) = v95;
    v93[16] = v96 & 1;
    *((_QWORD *)v93 + 3) = v97;
    v98 = (uint64_t)v89;
    v99 = 0;
    v100 = v90;
  }
  else
  {
    v100 = sub_1000BA294(&qword_100BDAE08);
    v98 = (uint64_t)v175;
    v99 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v98, v99, 1, v100);
  v101 = v170;
  v102 = v159;
  sub_100037768(v47 + *(int *)(v170 + 56), v159, &qword_100BDACB0);
  if (_s7Weather24LocationCompositionStateOwet_0(v102, 1, v70) == 1)
  {
    sub_100021A14(v102, &qword_100BDACB0);
    v103 = sub_1000BA294(&qword_100BDAE10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 1, 1, v103);
  }
  else
  {
    v104 = v153;
    (*(void (**)(void))(v154 + 32))();
    v105 = (void *)objc_opt_self(UIFont);
    v106 = objc_msgSend(v105, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
    v107 = objc_msgSend(v105, "preferredFontForTextStyle:", UIFontTextStyleBody);
    v108 = objc_msgSend(object, "mainBundle");
    v185._countAndFlagsBits = 0xD00000000000001ELL;
    v185._object = (void *)0x80000001009FC000;
    v109._object = (void *)0x80000001009FBFE0;
    v109._countAndFlagsBits = 0xD000000000000011;
    v110._countAndFlagsBits = 0;
    v110._object = (void *)0xE000000000000000;
    v111 = NSLocalizedString(_:tableName:bundle:value:comment:)(v109, (Swift::String_optional)0, (NSBundle)v108, v110, v185);
    object = v111._object;

    v112 = (const __CTFont *)v106;
    isa = AirPollutant.displayName(for:)(v112).super.isa;

    __chkstk_darwin(v114);
    *(&v145 - 4) = v176;
    *(&v145 - 3) = (uint64_t)v104;
    v185._object = v107;
    v115 = v70;
    v116 = v69;
    v117 = v172;
    v101 = v170;
    sub_100361488(v111._countAndFlagsBits, (uint64_t)object, isa, 0, 0, (void (*)(__n128))sub_100369678, &qword_100BDAE10, v172);

    v118 = sub_1000BA294(&qword_100BDAE10);
    v119 = (uint64_t)v117;
    v69 = v116;
    _s7Weather24LocationCompositionStateOwst_0(v119, 0, 1, v118);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v153, v115);
  }
  v120 = v156;
  v121 = v169;
  v122 = (uint64_t *)(v47 + *(int *)(v101 + 60));
  v123 = v122[1];
  if (v123)
  {
    v124 = v122[2];
    v125 = *v122;
    v126 = v151;
    *((_QWORD *)v151 + 2) = 0;
    v127 = v149;
    v128 = (uint64_t)v126 + *(int *)(v149 + 40);
    v129 = type metadata accessor for AttributedString(0);
    _s7Weather24LocationCompositionStateOwst_0(v128, 1, 1, v129);
    *v126 = v125;
    v126[1] = v123;
    v130 = (char *)v126 + *(int *)(v127 + 44);
    *(_QWORD *)v130 = swift_getKeyPath(&unk_1009970D8);
    v130[8] = 0;
    *((_QWORD *)v130 + 2) = v125;
    *((_QWORD *)v130 + 3) = v123;
    *((_QWORD *)v130 + 4) = v124;
    v131 = *(_QWORD *)(v176 + *(int *)(v121 + 24));
    swift_bridgeObjectRetain_n(v123, 2);
    swift_bridgeObjectRetain(v124);
    v132 = Namespace.wrappedValue.getter(v131);
    v133 = v150;
    sub_100037768((uint64_t)v126, v150, &qword_100BDADD8);
    *(_QWORD *)(v133 + *(int *)(v120 + 52)) = v132;
    sub_100021A14((uint64_t)v126, &qword_100BDADD8);
    v134 = v165;
    sub_1000787D4(v133, v165, &qword_100BDADE0);
    v135 = 0;
  }
  else
  {
    v135 = 1;
    v134 = v165;
  }
  _s7Weather24LocationCompositionStateOwst_0(v134, v135, 1, v120);
  v136 = (uint64_t)v174;
  sub_100080C0C((uint64_t)v173, (uint64_t)v174, type metadata accessor for ConditionDetailMapView);
  *(_QWORD *)&v178 = v136;
  v137 = (uint64_t)v160;
  v138 = v161;
  sub_100037768((uint64_t)v160, v161, &qword_100BDAE00);
  *((_QWORD *)&v178 + 1) = v138;
  v139 = v162;
  sub_100037768(v69, v162, &qword_100BC68A8);
  v179 = v139;
  v140 = (uint64_t)v175;
  v141 = v163;
  sub_100037768((uint64_t)v175, v163, &qword_100BDADF8);
  v180 = v141;
  v142 = v172;
  v143 = v164;
  sub_100037768((uint64_t)v172, v164, &qword_100BDADF0);
  v181 = v143;
  v144 = v166;
  sub_100037768(v134, v166, &qword_100BDADE8);
  v182 = v144;
  sub_10035D9FC((uint64_t *)&v178, v167);
  sub_100021A14(v134, &qword_100BDADE8);
  sub_100021A14((uint64_t)v142, &qword_100BDADF0);
  sub_100021A14(v140, &qword_100BDADF8);
  sub_100021A14(v171, &qword_100BC68A8);
  sub_100021A14(v137, &qword_100BDAE00);
  sub_1000215BC((uint64_t)v173, type metadata accessor for ConditionDetailMapView);
  sub_100021A14(v144, &qword_100BDADE8);
  sub_100021A14(v143, &qword_100BDADF0);
  sub_100021A14(v141, &qword_100BDADF8);
  sub_100021A14(v139, &qword_100BC68A8);
  sub_100021A14(v138, &qword_100BDAE00);
  sub_1000215BC((uint64_t)v174, type metadata accessor for ConditionDetailMapView);
}

void sub_100360EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];

  v2 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1000BA294(&qword_100BDAE58);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v9 = sub_1000BA294(&qword_100BDAE60);
  sub_100361064(a1, (uint64_t)&v7[*(int *)(v9 + 44)]);
  v10 = type metadata accessor for AirQualityDetailInnerView(0);
  sub_10059012C(*(_QWORD *)(a1 + *(int *)(v10 + 32) + 48), *(_QWORD *)(a1 + *(int *)(v10 + 32) + 56), (uint64_t)v4);
  v11 = Text.init(_:)(v4);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  sub_10003D2DC(&qword_100BDAE68, &qword_100BDAE58);
  View.accessibilityLabel(_:)(v11, v13, v17, v15, v5, v18);
  sub_1000D31B4(v11, v13, v17);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v7, &qword_100BDAE58);
}

double sub_100361064@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[3];

  v35 = a1;
  v4 = type metadata accessor for HorizontalBarPointView(0);
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1000BA294(&qword_100BDAE70);
  __chkstk_darwin(v38);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v12 = a1 + *(int *)(type metadata accessor for AirQualityDetailInnerView(0) + 32);
  v13 = *(_QWORD *)(v12 + 56);
  *(_QWORD *)&v41[0] = *(_QWORD *)(v12 + 48);
  *((_QWORD *)&v41[0] + 1) = v13;
  v14 = sub_100114EF8();
  swift_bridgeObjectRetain(v13);
  v36 = Text.init<A>(_:)(v41, &type metadata for String, v14);
  v37 = v15;
  v17 = v16;
  LOBYTE(v13) = v18 & 1;
  v19 = *(double *)(v12 + 88) * 100.0;
  v20 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  swift_bridgeObjectRetain(*(_QWORD *)(v12 + *(int *)(v20 + 68)));
  v22 = Gradient.init(stops:)(v21);
  v23 = static Color.white.getter(v22);
  HorizontalBarPointView.init(point:pointColor:gradient:)(*(_QWORD *)&v19, 0, v23, v22);
  v24 = sub_1000BA294(&qword_100BDACA8);
  v25 = ScaledValue.wrappedValue.getter(v41, v24);
  v26 = *(_QWORD *)&v41[0];
  static Alignment.center.getter(v25);
  _FrameLayout.init(width:height:alignment:)(0, 1, v26, 0);
  v28 = v39;
  v27 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v8, v6, v40);
  v29 = &v8[*(int *)(v38 + 36)];
  v30 = v41[1];
  *(_OWORD *)v29 = v41[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v41[2];
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
  sub_1000787D4((uint64_t)v8, (uint64_t)v11, &qword_100BDAE70);
  sub_100037768((uint64_t)v11, (uint64_t)v8, &qword_100BDAE70);
  v32 = v36;
  v31 = v37;
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v31;
  v33 = sub_1000BA294(&qword_100BDAE78);
  sub_100037768((uint64_t)v8, a2 + *(int *)(v33 + 48), &qword_100BDAE70);
  sub_1000D55D4(v32, v17, v13);
  swift_bridgeObjectRetain(v31);
  sub_100021A14((uint64_t)v11, &qword_100BDAE70);
  sub_100021A14((uint64_t)v8, &qword_100BDAE70);
  sub_1000D31B4(v32, v17, v13);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100361304(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, void (*a7)(__n128)@<X6>, _QWORD *a8@<X8>)
{
  id v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  NSString *v17;
  uint64_t v18;
  id v19;
  id v20;
  _BYTE v24[72];

  v13 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  v14 = sub_1000BA294(&qword_100BDAE18);
  inited = swift_initStackObject(v14, v24);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_1000A0794(0, (unint64_t *)&qword_100BD35F0, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v13;
  type metadata accessor for Key(0);
  sub_10000F1C8(&qword_100BC2CC0, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  v16 = v13;
  v17 = NSFontAttributeName;
  v18 = Dictionary.init(dictionaryLiteral:)(inited);
  v19 = objc_allocWithZone((Class)NSAttributedString);
  v20 = sub_10036957C(a3, a4, v18);
  sub_100361488(a1, a2, v20, a5, a6, a7, &qword_100BDAE00, a8);

}

void sub_100361488(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(__n128)@<X5>, uint64_t *a7@<X7>, _QWORD *a8@<X8>)
{
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  void *v21;
  NSString *v22;
  id v23;
  Class isa;
  uint64_t v25;
  __n128 v26;
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(__n128);
  _BYTE v30[72];

  if (a3)
  {
    v27 = a7;
    v15 = objc_allocWithZone((Class)NSMutableAttributedString);
    v16 = a3;
    v17 = objc_msgSend(v15, "initWithAttributedString:", v16);
    v18 = sub_1000BA294(&qword_100BDAE18);
    v29 = a6;
    inited = swift_initStackObject(v18, v30);
    *(_OWORD *)(inited + 16) = xmmword_10097CA50;
    *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
    v28 = a4;
    v20 = a2;
    v21 = (void *)objc_opt_self(UIColor);
    v22 = NSForegroundColorAttributeName;
    v23 = objc_msgSend(v21, "secondaryLabelColor");
    *(_QWORD *)(inited + 64) = sub_1000A0794(0, (unint64_t *)&qword_100BDADD0, UIColor_ptr);
    *(_QWORD *)(inited + 40) = v23;
    type metadata accessor for Key(0);
    sub_10000F1C8(&qword_100BC2CC0, (uint64_t (*)(uint64_t))type metadata accessor for Key);
    Dictionary.init(dictionaryLiteral:)(inited);
    a2 = v20;
    a4 = v28;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    a6 = v29;
    objc_msgSend(v17, "addAttributes:range:", isa, 0, objc_msgSend(v16, "length", swift_bridgeObjectRelease().n128_f64[0]));

    a7 = v27;
  }
  else
  {
    v17 = 0;
  }
  a8[2] = v17;
  v25 = sub_1000BA294(a7);
  sub_100361E64(a3, a4, a5, (uint64_t)a8 + *(int *)(v25 + 40));
  v26 = swift_bridgeObjectRelease();
  *a8 = a1;
  a8[1] = a2;
  a6(v26);

  sub_1000D1218();
}

void sub_1003616A4(int a1, int a2, CTFontRef a3)
{
  Class isa;

  isa = AirPollutant.displayDescription(for:)(a3).super.isa;
  sub_1003616F4((uint64_t)isa);

}

uint64_t sub_1003616F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  NSString *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  uint64_t v14;
  _BYTE v17[72];

  v2 = sub_1000BA294(&qword_100BD8A00);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", a1);
  v6 = sub_1000BA294(&qword_100BDAE18);
  inited = swift_initStackObject(v6, v17);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v8 = sub_1000A0794(0, (unint64_t *)&qword_100BDADD0, UIColor_ptr);
  v9 = NSForegroundColorAttributeName;
  v11 = static Color.primary.getter(v10);
  v12 = UIColor.init(_:)(v11);
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 40) = v12;
  type metadata accessor for Key(0);
  sub_10000F1C8(&qword_100BC2CC0, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  Dictionary.init(dictionaryLiteral:)(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "addAttributes:range:", isa, 0, objc_msgSend(v5, "length", swift_bridgeObjectRelease().n128_f64[0]));

  v14 = type metadata accessor for AttributedString(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v14);
  return AttributedText.init(_:accessibilityAttributedText:onInteraction:)(v5, v4, static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:), 0);
}

id sub_1003618C4(void **a1)
{
  void *v1;
  id v2;
  id v4;
  void *v5;
  id v6;
  _BYTE v8[24];

  v1 = *a1;
  if (*a1)
  {
    v2 = *a1;
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
    swift_beginAccess(a1, v8, 1, 0);
    v5 = *a1;
    *a1 = v4;
    v2 = v4;

    v1 = 0;
  }
  v6 = v1;
  return v2;
}

void sub_100361964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD aBlock[5];
  uint64_t v69;

  v57 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  v61 = v4;
  __chkstk_darwin(v3);
  v59 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v58 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for ScrollViewProxy(0);
  v66 = *(_QWORD *)(v56 - 8);
  v8 = *(_QWORD *)(v66 + 64);
  __chkstk_darwin(v56);
  v55 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for DispatchTime(0);
  v65 = *(_QWORD **)(v67 - 8);
  __chkstk_darwin(v67);
  v64 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - v11;
  v13 = type metadata accessor for AirQualityDetailInnerView(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v49 - v18;
  v21 = a1 + *(int *)(v20 + 32);
  v22 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  LODWORD(v21) = *(unsigned __int8 *)(v21 + *(int *)(v22 + 80));
  sub_100080C0C(a1, (uint64_t)v19, type metadata accessor for AirQualityDetailInnerView);
  if ((_DWORD)v21 == 1)
  {
    v23 = v64;
    v50 = v15;
    v51 = v14;
    v24 = v65;
    v52 = v16;
    v53 = a1;
    v54 = v8;
    v26 = v66;
    v25 = v67;
    v27 = *(_QWORD *)&v19[*(int *)(v13 + 32) + 8 + (uint64_t)*(int *)(v22 + 60)];
    sub_1000215BC((uint64_t)v19, type metadata accessor for AirQualityDetailInnerView);
    if (v27)
    {
      v28 = sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
      v49 = static OS_dispatch_queue.main.getter(v28);
      static DispatchTime.now()(v49);
      + infix(_:_:)(v23);
      v65 = (_QWORD *)v24[1];
      ((void (*)(char *, uint64_t))v65)(v23, v25);
      v29 = v26;
      v31 = v55;
      v30 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v55, v57, v56);
      v32 = (uint64_t)v52;
      sub_100080C0C(v53, (uint64_t)v52, type metadata accessor for AirQualityDetailInnerView);
      v33 = *(unsigned __int8 *)(v29 + 80);
      v34 = (v33 + 16) & ~v33;
      v35 = *(unsigned __int8 *)(v51 + 80);
      v36 = (v54 + v35 + v34) & ~v35;
      v37 = swift_allocObject(&unk_100B6EA28, v36 + v50, v33 | v35 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v37 + v34, v31, v30);
      sub_10007802C(v32, v37 + v36, type metadata accessor for AirQualityDetailInnerView);
      aBlock[4] = sub_1003694AC;
      v69 = v37;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100121D84;
      aBlock[3] = &unk_100B6EA40;
      v38 = _Block_copy(aBlock);
      v39 = swift_release(v69);
      v40 = v58;
      static DispatchQoS.unspecified.getter(v39);
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      v42 = v41;
      v43 = sub_1000BA294(&qword_100BD4F10);
      sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
      v44 = v59;
      v45 = v43;
      v46 = v60;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v45, v47, v60, v42);
      v48 = (void *)v49;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v40, v44, v38);
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v46);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v63);
      ((void (*)(char *, uint64_t))v65)(v12, v67);
    }
  }
  else
  {
    sub_1000215BC((uint64_t)v19, type metadata accessor for AirQualityDetailInnerView);
  }
}

uint64_t sub_100361DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for AirQualityDetailInnerView(0);
  v10 = Namespace.wrappedValue.getter(*(_QWORD *)(a2 + *(int *)(v3 + 24)));
  v5 = static UnitPoint.top.getter(v4);
  v7 = v6;
  v8 = sub_100369540();
  return ScrollViewProxy.scrollTo<A>(_:anchor:)(&v10, *(_QWORD *)&v5, v7, 0, &type metadata for Namespace.ID, v8);
}

uint64_t sub_100361E64@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t KeyPath;
  char *v67;
  uint64_t v68;
  void (*v69)(uint64_t *, _QWORD);
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  void (*v86)(char *, uint64_t, __n128);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91[9];

  v80 = a2;
  v81 = a3;
  v87 = a4;
  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC3340);
  __chkstk_darwin(v8);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BDAE20);
  __chkstk_darwin(v11);
  v79 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v85 = (uint64_t)&v73 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v73 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v73 - v19;
  v21 = sub_1000BA294(&qword_100BDAE28);
  __chkstk_darwin(v21);
  v75 = (uint64_t)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v74 = (uint64_t)&v73 - v24;
  __chkstk_darwin(v25);
  v78 = (uint64_t)&v73 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)&v73 - v28;
  v30 = type metadata accessor for AttributedString(0);
  v88 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v32 = (char *)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v73 - v34;
  if (!a1)
    return _s7Weather24LocationCompositionStateOwst_0(v87, 1, 1, v30);
  v76 = v17;
  v73 = v7;
  v77 = a1;
  AttributedString.init(_:)();
  v36 = v88;
  v84 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  v84(v32, v35, v30);
  v89 = 40;
  v90 = 0xE100000000000000;
  v83 = type metadata accessor for Locale(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v83);
  sub_10000F1C8((unint64_t *)&qword_100BDAE30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString);
  v38 = v37;
  v82 = sub_100114EF8();
  AttributedStringProtocol.range<A>(of:options:locale:)(&v89, 0, v10, v30, &type metadata for String);
  sub_100021A14((uint64_t)v10, &qword_100BC3340);
  v39 = swift_bridgeObjectRelease();
  v86 = *(void (**)(char *, uint64_t, __n128))(v36 + 8);
  v86(v32, v30, v39);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) == 1)
  {
    sub_100021A14((uint64_t)v20, &qword_100BDAE20);
    v40 = v81;
    v41 = v21;
  }
  else
  {
    sub_1000787D4((uint64_t)v20, (uint64_t)v29, &qword_100BDAE28);
    sub_10003D2DC((unint64_t *)&qword_100BDAE38, &qword_100BDAE28);
    v41 = v21;
    AttributedString.removeSubrange<A>(_:)(v29, v21, v43);
    sub_100021A14((uint64_t)v29, &qword_100BDAE28);
    v40 = v81;
  }
  v44 = v38;
  v45 = (uint64_t)v76;
  v84(v32, v35, v30);
  v89 = 41;
  v90 = 0xE100000000000000;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v83);
  AttributedStringProtocol.range<A>(of:options:locale:)(&v89, 0, v10, v30, &type metadata for String);
  sub_100021A14((uint64_t)v10, &qword_100BC3340);
  v46 = swift_bridgeObjectRelease();
  v86(v32, v30, v46);
  if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v41) == 1)
  {
    v47 = v41;
    v48 = &qword_100BDAE20;
    v49 = v45;
  }
  else
  {
    v50 = v45;
    v51 = v78;
    sub_1000787D4(v50, v78, &qword_100BDAE28);
    sub_10003D2DC((unint64_t *)&qword_100BDAE38, &qword_100BDAE28);
    v47 = v41;
    AttributedString.removeSubrange<A>(_:)(v51, v41, v52);
    v49 = v51;
    v48 = &qword_100BDAE28;
  }
  sub_100021A14(v49, v48);
  v53 = v80;
  if (v40)
  {
    v84(v32, v35, v30);
    v89 = v53;
    v90 = v40;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v83);
    v54 = v44;
    v55 = v85;
    AttributedStringProtocol.range<A>(of:options:locale:)(&v89, 0, v10, v30, &type metadata for String);
    sub_100021A14((uint64_t)v10, &qword_100BC3340);
    ((void (*)(char *, uint64_t))v86)(v32, v30);
    v56 = v55;
    v57 = v79;
    sub_100037768(v56, v79, &qword_100BDAE20);
    if (_s7Weather24LocationCompositionStateOwet_0(v57, 1, v47) == 1)
    {
      sub_100021A14(v85, &qword_100BDAE20);

      v58 = v57;
    }
    else
    {
      v59 = v74;
      sub_1000787D4(v57, v74, &qword_100BDAE28);
      v60 = String.lowercased()();
      v61 = v73;
      AttributeContainer.init()(v60._countAndFlagsBits);
      AttributedString.init(_:attributes:)(v60._countAndFlagsBits, v60._object, v61);
      sub_10003D2DC((unint64_t *)&qword_100BDAE38, &qword_100BDAE28);
      v63 = v62;
      v64 = v35;
      AttributedString.replaceSubrange<A, B>(_:with:)(v59, v32, v47, v30, v62, v54);
      ((void (*)(char *, uint64_t))v86)(v32, v30);
      v65 = v75;
      sub_100037768(v59, v75, &qword_100BDAE28);
      KeyPath = swift_getKeyPath(&unk_100997150);
      __chkstk_darwin(KeyPath);
      *(&v73 - 2) = v67;
      v68 = swift_getKeyPath(&unk_100997180);
      v91[0] = 1;
      v69 = (void (*)(uint64_t *, _QWORD))AttributedString.subscript.modify(&v89, v65, v47, v63);
      v70 = sub_10015BD40();
      v71 = v68;
      v35 = v64;
      AttributedSubstring.subscript.setter(v91, v71, v70);
      v69(&v89, 0);

      sub_100021A14(v65, &qword_100BDAE28);
      sub_100021A14(v59, &qword_100BDAE28);
      v58 = v85;
    }
    sub_100021A14(v58, &qword_100BDAE20);
  }
  else
  {

  }
  v72 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v87, v35, v30);
  return _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v30);
}

uint64_t sub_1003625F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_1000BA294(&qword_100BDAE48);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_10036264C()
{
  uint64_t v0;

  v0 = sub_1000BA294(&qword_100BDAE48);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_100362690(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10015BD40();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_1003626B4()
{
  AttributeScopes.AccessibilityAttributes.accessibilitySpeechSpellsOutCharacters.getter();
  __break(1u);
}

BOOL sub_1003626CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1000BA294(&qword_100BD8A00);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v11, v2, a1, v9);
  if (v12)
  {
    sub_100037768((uint64_t)&v11[*(int *)(a1 + 40)], (uint64_t)v6, &qword_100BD8A00);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, a1);
    v13 = type metadata accessor for AttributedString(0);
    v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v13) != 1;
    sub_100021A14((uint64_t)v6, &qword_100BD8A00);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, a1);
    return 0;
  }
  return v14;
}

uint64_t sub_1003627F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = sub_100075EB0(&qword_100BDAF68);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _FlexFrameLayout);
  v8 = type metadata accessor for ModifiedContent(255, v7, &type metadata for _PaddingLayout);
  v9 = sub_100075EB0(&qword_100BDAF70);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _PaddingLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for VStack(0, v13, WitnessTable);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v21 = &v27[-v20];
  v22 = *(_QWORD *)(a1 + 24);
  v28 = v6;
  v29 = v22;
  v30 = v2;
  v23 = j___s7SwiftUI19HorizontalAlignmentV6centerACvgZ(v13);
  VStack.init(alignment:spacing:content:)(v23, 0, 0, sub_10036A568, v27, v13, WitnessTable);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v15);
  sub_1000B2074(v18, v15, v24);
  v25 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
  v25(v18, v15);
  sub_1000B1100((uint64_t)v21, v15, a2);
  return ((uint64_t (*)(_BYTE *, uint64_t))v25)(v21, v15);
}

void sub_1003629D8(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t OpaqueTypeConformance2;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t WitnessTable;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD v129[2];
  _QWORD v130[2];
  _QWORD v131[10];
  _QWORD v132[2];
  char v133[8];

  v128 = a1;
  v127 = a4;
  v6 = type metadata accessor for ModifiedContent(0, a2, &type metadata for _FlexFrameLayout);
  v113 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v112 = (char *)&v102 - v7;
  v114 = v8;
  v9 = type metadata accessor for ModifiedContent(0, v8, &type metadata for _PaddingLayout);
  v117 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v116 = (char *)&v102 - v10;
  v11 = sub_100075EB0(&qword_100BDAF70);
  v118 = v9;
  v12 = type metadata accessor for ModifiedContent(0, v9, v11);
  v121 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v120 = (char *)&v102 - v13;
  v122 = v14;
  v126 = type metadata accessor for ModifiedContent(0, v14, &type metadata for _PaddingLayout);
  v123 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v125 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v119 = (char *)&v102 - v17;
  __chkstk_darwin(v18);
  v124 = (char *)&v102 - v19;
  v107 = type metadata accessor for AccessibilityTraits(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v21 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for AccessibilityChildBehavior(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BDAF78);
  __chkstk_darwin(v24);
  v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000BA294(&qword_100BDAF80);
  __chkstk_darwin(v27);
  v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1000BA294(&qword_100BDAF88);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1000BA294(&qword_100BDAF68);
  __chkstk_darwin(v109);
  v115 = (uint64_t)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v102 - v34;
  __chkstk_darwin(v36);
  v110 = (uint64_t)&v102 - v37;
  *(_QWORD *)v26 = static HorizontalAlignment.center.getter(v38);
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 0;
  v39 = sub_1000BA294(&qword_100BDAF90);
  sub_100363308(v128, a2, a3, &v26[*(int *)(v39 + 44)]);
  v108 = a2;
  v111 = a3;
  v41 = type metadata accessor for AirQualitySection(0, a2, a3, v40);
  if (sub_1003626CC(v41))
  {
    swift_beginAccess(&unk_100BE0830, v133, 1, 0);
    v43 = sub_10040927C();
  }
  else
  {
    swift_beginAccess(&unk_100BE0830, v133, 1, 0);
    v43 = sub_10040922C();
  }
  v47 = v43;
  v48 = v44;
  v49 = v45;
  v50 = v46;
  v51 = static Edge.Set.all.getter(v42);
  sub_100037768((uint64_t)v26, (uint64_t)v29, &qword_100BDAF78);
  v52 = &v29[*(int *)(v27 + 36)];
  *v52 = v51;
  *((double *)v52 + 1) = v47;
  *((_QWORD *)v52 + 2) = v48;
  *((_QWORD *)v52 + 3) = v49;
  *((_QWORD *)v52 + 4) = v50;
  v52[40] = 0;
  sub_100021A14((uint64_t)v26, &qword_100BDAF78);
  static AccessibilityChildBehavior.combine.getter();
  v53 = sub_10036A574();
  View.accessibilityElement(children:)(v23, v27, v53);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v23, v105);
  sub_100021A14((uint64_t)v29, &qword_100BDAF80);
  static AccessibilityTraits.isHeader.getter(v54);
  v132[0] = v27;
  v132[1] = v53;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v132, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v56 = v103;
  View.accessibilityAddTraits(_:)(v21, v103, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v21, v107);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v31, v56);
  v57 = (uint64_t)v35;
  v58 = v110;
  sub_1000787D4(v57, v110, &qword_100BDAF68);
  v60 = static Alignment.leading.getter(v59);
  v61 = v111;
  v101 = 1;
  v100 = 1;
  v62 = v112;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v100, 0, v101, v60, v63, v108, v111);
  swift_beginAccess(&unk_100BE0830, v132, 1, 0);
  v64 = sub_1004092F0();
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v131[8] = v61;
  v131[9] = &protocol witness table for _FlexFrameLayout;
  v71 = v114;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v114);
  v73 = v116;
  View.padding(_:)(v71, WitnessTable, v64, v66, v68, v70);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v62, v71);
  sub_1000BA294(&qword_100BDAFA8);
  v131[6] = WitnessTable;
  v131[7] = &protocol witness table for _PaddingLayout;
  v74 = v118;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v118);
  v76 = sub_10036A5F8();
  v77 = static Alignment.center.getter(v76);
  v78 = v120;
  View.background<A>(alignment:content:)(v77);
  v79 = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v73, v74);
  v80 = static Edge.Set.horizontal.getter(v79);
  v81 = Edge.Set.init(rawValue:)(0);
  v82 = Edge.Set.init(rawValue:)(v81);
  if (Edge.Set.init(rawValue:)(v82 & v80) != v80)
    v81 = Edge.Set.init(rawValue:)(v81 | v80);
  v83 = sub_10040908C();
  sub_10003D2DC(&qword_100BDAFC0, &qword_100BDAF70);
  v131[4] = v75;
  v131[5] = v84;
  v85 = v122;
  v86 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v122);
  v87 = v119;
  View.padding(_:_:)(v81, *(_QWORD *)&v83, 0, v85, v86);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v78, v85);
  v131[2] = v86;
  v131[3] = &protocol witness table for _PaddingLayout;
  v88 = v126;
  v89 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v126);
  v90 = v124;
  sub_1000B2074(v87, v88, v89);
  v91 = v123;
  v92 = *(void (**)(char *, uint64_t))(v123 + 8);
  v92(v87, v88);
  v93 = v115;
  sub_100037768(v58, v115, &qword_100BDAF68);
  v131[0] = v93;
  v94 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  v95 = v125;
  v94(v125, v90, v88);
  v131[1] = v95;
  v130[0] = v109;
  v130[1] = v88;
  v129[0] = sub_10036A694();
  v129[1] = v89;
  sub_10052800C((uint64_t)v131, 2, (uint64_t)v130, (uint64_t)v129, v96, v97, v98, v99, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111);
  v92(v90, v88);
  sub_100021A14(v58, &qword_100BDAF68);
  v92(v95, v88);
  sub_100021A14(v93, &qword_100BDAF68);
}

uint64_t sub_100363308@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  _BYTE v81[160];
  _BYTE v82[144];
  _QWORD __dst[19];

  v73 = a2;
  v74 = a3;
  v80 = a4;
  v5 = type metadata accessor for AttributedText(0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin(v5);
  v69 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1000BA294(&qword_100BDAFD0);
  __chkstk_darwin(v79);
  v68 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BD8A00);
  __chkstk_darwin(v8);
  v65 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v72 = (uint64_t)&v64 - v11;
  v75 = type metadata accessor for AttributedString(0);
  v67 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v66 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BDAFD8);
  __chkstk_darwin(v13);
  v78 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v77 = (uint64_t)&v64 - v16;
  v17 = type metadata accessor for Font.TextStyle(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a1;
  v21 = a1[1];
  __dst[0] = *a1;
  __dst[1] = v21;
  v22 = sub_100114EF8();
  swift_bridgeObjectRetain(v21);
  v23 = Text.init<A>(_:)(__dst, &type metadata for String, v22);
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  v30 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for Font.TextStyle.title3(_:), v17);
  static Font.Weight.semibold.getter(v30);
  v31 = static Font.system(_:weight:)(v20);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v32 = Text.font(_:)(v31, v23, v25, v29, v27);
  v34 = v33;
  LOBYTE(v17) = v35;
  v37 = v36;
  swift_release(v31);
  LOBYTE(v31) = v17 & 1;
  sub_1000D31B4(v23, v25, v29);
  swift_bridgeObjectRelease();
  v39 = static Alignment.leading.getter(v38);
  v40 = 1;
  LOBYTE(v63) = 1;
  LOBYTE(v62) = 1;
  sub_100945D8C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v62, 0, v63, v39, v41, v32, v34, v31, v37);
  v42 = v32;
  v43 = v76;
  sub_1000D31B4(v42, v34, v31);
  swift_bridgeObjectRelease();
  memcpy(__dst, v82, 0x90uLL);
  v45 = (void *)v43[2];
  if (v45)
  {
    v46 = type metadata accessor for AirQualitySection(0, v73, v74, v44);
    v47 = v72;
    sub_100037768((uint64_t)v43 + *(int *)(v46 + 40), v72, &qword_100BD8A00);
    v48 = v75;
    if (_s7Weather24LocationCompositionStateOwet_0(v47, 1, v75) != 1)
    {
      v51 = v66;
      v50 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v66, v47, v48);
      v52 = (uint64_t)v65;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v65, v51, v48);
      _s7Weather24LocationCompositionStateOwst_0(v52, 0, 1, v48);
      v53 = v45;
      v54 = v69;
      v55 = AttributedText.init(_:accessibilityAttributedText:onInteraction:)(v53, v52, static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:), 0);
      static Alignment.leading.getter(v55);
      v56 = v68;
      sub_100946084();

      (*(void (**)(char *, uint64_t))(v70 + 8))(v54, v71);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v48);
      v57 = (uint64_t)v56;
      v49 = v77;
      sub_1000787D4(v57, v77, &qword_100BDAFD0);
      v40 = 0;
      goto LABEL_6;
    }
    sub_100021A14(v47, &qword_100BD8A00);
    v40 = 1;
  }
  v49 = v77;
LABEL_6:
  _s7Weather24LocationCompositionStateOwst_0(v49, v40, 1, v79);
  v58 = v78;
  sub_100037768(v49, v78, &qword_100BDAFD8);
  memcpy(v81, __dst, 0x90uLL);
  v59 = v80;
  memcpy(v80, __dst, 0x90uLL);
  v60 = sub_1000BA294(&qword_100BDAFE0);
  sub_100037768(v58, (uint64_t)v59 + *(int *)(v60 + 48), &qword_100BDAFD8);
  sub_10030CA34((uint64_t)v81);
  sub_100021A14(v49, &qword_100BDAFD8);
  sub_100021A14(v58, &qword_100BDAFD8);
  memcpy(v82, __dst, sizeof(v82));
  return sub_10030C9E4((uint64_t)v82);
}

void sub_100363864(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double *v4;
  double v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t *v12;
  char v14[24];

  v2 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v2);
  v4 = (double *)&v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_100BC20C0 != -1)
    swift_once(&qword_100BC20C0, sub_1004049E8);
  swift_beginAccess(&qword_100CAE968, v14, 1, 0);
  v5 = sub_1004043D0();
  v6 = (char *)v4 + *(int *)(v2 + 20);
  v7 = enum case for RoundedCornerStyle.continuous(_:);
  v8 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  *v4 = v5;
  v4[1] = v5;
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
  v10 = Color.init(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100997268);
  sub_100080C0C((uint64_t)v4, a1, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v12 = (uint64_t *)(a1 + *(int *)(sub_1000BA294(&qword_100BDAFA8) + 36));
  *v12 = KeyPath;
  v12[1] = v10;
  sub_1000215BC((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
}

uint64_t sub_1003639D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v8;

  type metadata accessor for AirQualityDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - v4;
  sub_100094EE4();
  sub_10017B02C();
  sub_10009880C();
  sub_100094EE4();
  sub_10017B02C();
  sub_10009880C();
  v6 = sub_10058F814((uint64_t)v5, (uint64_t)v2);
  sub_1000215BC((uint64_t)v2, type metadata accessor for AirQualityDetailViewModel);
  sub_1000215BC((uint64_t)v5, type metadata accessor for AirQualityDetailViewModel);
  return v6 & 1;
}

uint64_t destroy for AirQualityDetailView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return sub_1000CE2FC((_QWORD *)(a1 + 16));
}

uint64_t assignWithTake for AirQualityDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  sub_1000CE2FC((_QWORD *)(a1 + 16));
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t sub_100363B28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1C80, 1);
}

uint64_t type metadata accessor for AirQualityDetailInnerView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDAD10;
  if (!qword_100BDAD10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AirQualityDetailInnerView);
  return result;
}

_QWORD *sub_100363B74(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t, __n128);
  id v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t, __n128);
  __n128 v112;
  _QWORD *v113;
  int *v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  void (*v141)(char *, char *, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v159;
  char *v160;
  int *v161;
  _QWORD *v162;
  int *v163;
  _QWORD *v164;
  char *v165;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v15;
  }
  v7 = sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v9 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = 1;
  }
  else
  {
    swift_retain();
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v7, v13);
  v16 = a3[5];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v21 = *(_OWORD *)((char *)a2 + v20 + 24);
  *(_OWORD *)((char *)a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  v22 = a3[8];
  v162 = a1;
  v23 = (char *)a1 + v22;
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(_QWORD *)((char *)a2 + v22 + 8);
  *(_QWORD *)v23 = *(_QWORD *)((char *)a2 + v22);
  *((_QWORD *)v23 + 1) = v25;
  v26 = *(_QWORD *)((char *)a2 + v22 + 24);
  *((_QWORD *)v23 + 2) = *(_QWORD *)((char *)a2 + v22 + 16);
  *((_QWORD *)v23 + 3) = v26;
  v27 = *(_QWORD *)((char *)a2 + v22 + 40);
  *((_QWORD *)v23 + 4) = *(_QWORD *)((char *)a2 + v22 + 32);
  *((_QWORD *)v23 + 5) = v27;
  v28 = *(_QWORD *)((char *)a2 + v22 + 56);
  *((_QWORD *)v23 + 6) = *(_QWORD *)((char *)a2 + v22 + 48);
  *((_QWORD *)v23 + 7) = v28;
  v23[64] = *((_BYTE *)a2 + v22 + 64);
  *(_OWORD *)(v23 + 72) = *(_OWORD *)((char *)a2 + v22 + 72);
  *(_OWORD *)(v23 + 88) = *(_OWORD *)((char *)a2 + v22 + 88);
  v30 = *(_QWORD *)((char *)a2 + v22 + 104);
  v29 = *(_QWORD *)((char *)a2 + v22 + 112);
  *((_QWORD *)v23 + 13) = v30;
  *((_QWORD *)v23 + 14) = v29;
  v32 = v24[15];
  v31 = v24[16];
  *((_QWORD *)v23 + 15) = v32;
  *((_QWORD *)v23 + 16) = v31;
  v33 = v24[17];
  *((_QWORD *)v23 + 17) = v33;
  v163 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  v164 = v24;
  v34 = v163[14];
  v165 = v23;
  v35 = &v23[v34];
  v36 = (char *)v24 + v34;
  v37 = type metadata accessor for AirPollutant(0);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v33);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    v38 = sub_1000BA294(&qword_100BDACB0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  v39 = v163[15];
  v40 = &v165[v39];
  v41 = (_QWORD *)((char *)v164 + v39);
  v42 = v41[1];
  if (v42)
  {
    *(_QWORD *)v40 = *v41;
    *((_QWORD *)v40 + 1) = v42;
    v43 = v41[2];
    *((_QWORD *)v40 + 2) = v43;
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v43);
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *((_QWORD *)v40 + 2) = v41[2];
  }
  v44 = v163[16];
  v45 = *(void **)((char *)v164 + v44);
  *(_QWORD *)&v165[v44] = v45;
  v46 = v163[17];
  v47 = *(_QWORD *)((char *)v164 + v46);
  *(_QWORD *)&v165[v46] = v47;
  v48 = v163[18];
  v49 = &v165[v48];
  v50 = (char *)v164 + v48;
  v51 = *(_QWORD *)((char *)v164 + v48 + 8);
  *(_QWORD *)v49 = *(_QWORD *)((char *)v164 + v48);
  *((_QWORD *)v49 + 1) = v51;
  v52 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v53 = v52[5];
  v54 = &v49[v53];
  v55 = &v50[v53];
  v56 = type metadata accessor for Location(0);
  v57 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v56 - 8) + 16);
  v58 = v45;
  swift_bridgeObjectRetain(v47);
  v59 = swift_bridgeObjectRetain(v51);
  v57(v54, v55, v56, v59);
  v60 = v52[6];
  v61 = &v49[v60];
  v62 = &v50[v60];
  v63 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v63))
  {
    v160 = v49;
    v66 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = v66;
    v67 = v63[5];
    v68 = &v61[v67];
    v69 = &v62[v67];
    v70 = type metadata accessor for Locale(0);
    swift_bridgeObjectRetain(v66);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
    {
      v71 = sub_1000BA294(&qword_100BC3340);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
    }
    v72 = v63[6];
    v73 = &v61[v72];
    v74 = &v62[v72];
    v75 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = v63[7];
    v77 = &v61[v76];
    v78 = &v62[v76];
    v79 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
    {
      v80 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      v81 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v77, v78, v81);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
    }
    v82 = v63[8];
    v83 = &v61[v82];
    v84 = &v62[v82];
    v85 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    v86 = swift_getEnumCaseMultiPayload(v84);
    if (v86 == 1)
    {
      v91 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v83, v84, v91);
      v88 = v83;
      v89 = v85;
      v90 = 1;
    }
    else
    {
      if (v86)
      {
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        goto LABEL_26;
      }
      v87 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v87;
      swift_bridgeObjectRetain(v87);
      v88 = v83;
      v89 = v85;
      v90 = 0;
    }
    swift_storeEnumTagMultiPayload(v88, v89, v90);
LABEL_26:
    v65 = v165;
    v92 = v63[9];
    v93 = &v61[v92];
    v94 = &v62[v92];
    v95 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
    {
      v96 = sub_1000BA294(&qword_100BC3350);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      v49 = v160;
    }
    else
    {
      v97 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v97))
      {
        v98 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v93, v94, v97);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v97);
      }
      v99 = *(int *)(v95 + 20);
      v100 = &v93[v99];
      v101 = &v94[v99];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v97))
      {
        v102 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v100, v101, v97);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v97);
      }
      v65 = v165;
      v49 = v160;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
    goto LABEL_36;
  }
  v64 = sub_1000BA294(&qword_100BC3460);
  memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  v65 = v165;
LABEL_36:
  v103 = v52[7];
  v104 = &v49[v103];
  v105 = &v50[v103];
  v106 = *((_QWORD *)v105 + 1);
  *(_QWORD *)v104 = *(_QWORD *)v105;
  *((_QWORD *)v104 + 1) = v106;
  v107 = v52[8];
  v108 = &v49[v107];
  v109 = &v50[v107];
  v110 = type metadata accessor for WeatherMapOverlayKind(0);
  v111 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v110 - 8) + 16);
  v112 = swift_bridgeObjectRetain(v106);
  v111(v108, v109, v110, v112);
  v49[v52[9]] = v50[v52[9]];
  v114 = v163;
  v113 = v164;
  v115 = v163[19];
  v116 = &v65[v115];
  v117 = (_QWORD *)((char *)v164 + v115);
  v118 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
  {
    v119 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    v15 = v162;
  }
  else
  {
    v120 = v117[1];
    if (v120)
    {
      *(_QWORD *)v116 = *v117;
      *((_QWORD *)v116 + 1) = v120;
      v121 = v117[3];
      *((_QWORD *)v116 + 2) = v117[2];
      *((_QWORD *)v116 + 3) = v121;
      swift_bridgeObjectRetain(v120);
      swift_bridgeObjectRetain(v121);
    }
    else
    {
      v122 = *((_OWORD *)v117 + 1);
      *(_OWORD *)v116 = *(_OWORD *)v117;
      *((_OWORD *)v116 + 1) = v122;
    }
    v123 = *(int *)(v118 + 20);
    v124 = &v116[v123];
    v125 = (_QWORD *)((char *)v117 + v123);
    v126 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v125) == 1)
    {
      v159 = v126;
      v127 = v125[1];
      *(_QWORD *)v124 = *v125;
      *((_QWORD *)v124 + 1) = v127;
      v128 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v129 = v128[5];
      v130 = &v124[v129];
      v131 = (char *)v125 + v129;
      v132 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v127);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132))
      {
        v133 = sub_1000BA294(&qword_100BD4280);
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
      }
      v134 = v128[6];
      v135 = &v124[v134];
      v136 = (_QWORD *)((char *)v125 + v134);
      v137 = v136[1];
      *(_QWORD *)v135 = *v136;
      *((_QWORD *)v135 + 1) = v137;
      v138 = v128[7];
      v139 = &v124[v138];
      v140 = (char *)v125 + v138;
      v141 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v132 - 8) + 16);
      v142 = swift_bridgeObjectRetain(v137);
      v141(v139, v140, v132, v142);
      v161 = v128;
      v143 = v128[8];
      v144 = &v124[v143];
      v145 = (char *)v125 + v143;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125 + v143, 1, v132))
      {
        v146 = sub_1000BA294(&qword_100BD4280);
        memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v141)(v144, v145, v132);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v132);
      }
      v15 = v162;
      v114 = v163;
      v113 = v164;
      v65 = v165;
      v124[v161[9]] = *((_BYTE *)v125 + v161[9]);
      swift_storeEnumTagMultiPayload(v124, v159, 1);
    }
    else
    {
      memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      v15 = v162;
    }
    v147 = *(int *)(v118 + 24);
    v148 = &v116[v147];
    v149 = (char *)v117 + v147;
    v150 = type metadata accessor for DetailComponentAction(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
    {
      v151 = sub_1000BA294(&qword_100BD3100);
      memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    }
    else
    {
      v152 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v148, v149, v152);
      v153 = sub_1000BA294(&qword_100BC5FE8);
      v148[*(int *)(v153 + 48)] = v149[*(int *)(v153 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v150);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
  }
  v65[v114[20]] = *((_BYTE *)v113 + v114[20]);
  v154 = v114[21];
  v155 = &v65[v154];
  v156 = (uint64_t)v113 + v154;
  v157 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v155, v156, v157);
  return v15;
}

uint64_t sub_1003645D8(_QWORD *a1, int *a2)
{
  int EnumCaseMultiPayload;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  void (*v42)(uint64_t, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  swift_release(*a1);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(a1[1]);
    v5 = (char *)a1 + *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v6 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (char *)a1 + a2[5];
  v8 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_1000CE2FC((_QWORD *)((char *)a1 + a2[7]));
  v9 = (char *)a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  v11 = (uint64_t)&v9[v10[14]];
  v12 = type metadata accessor for AirPollutant(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  if (*(_QWORD *)&v9[v10[15] + 8])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  v13 = &v9[v10[18]];
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v15 = &v13[v14[5]];
  v16 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = (uint64_t)&v13[v14[6]];
  v18 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, (uint64_t)v18))
  {
    swift_bridgeObjectRelease();
    v19 = v17 + v18[5];
    v20 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    v21 = v17 + v18[6];
    v22 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    v23 = v17 + v18[7];
    v24 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
    {
      v25 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
    }
    v26 = v17 + v18[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    v27 = swift_getEnumCaseMultiPayload(v26);
    if (v27 == 1)
    {
      v28 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);
    }
    else if (!v27)
    {
      swift_bridgeObjectRelease();
    }
    v29 = v17 + v18[9];
    v30 = type metadata accessor for WeatherDataOverrides(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30))
    {
      v31 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v29, v31);
      v32 = v29 + *(int *)(v30 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v32, v31);
    }
  }
  swift_bridgeObjectRelease();
  v33 = &v13[v14[8]];
  v34 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v35 = (uint64_t)&v9[v10[19]];
  v36 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
  {
    if (*(_QWORD *)(v35 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v37 = v35 + *(int *)(v36 + 20);
    type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v37) == 1)
    {
      swift_bridgeObjectRelease();
      v38 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v39 = v37 + v38[5];
      v40 = type metadata accessor for URL(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
      v41 = swift_bridgeObjectRelease();
      v42 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v40 - 8) + 8);
      v42(v37 + v38[7], v40, v41);
      v43 = v37 + v38[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v40))
        ((void (*)(uint64_t, uint64_t))v42)(v43, v40);
    }
    v44 = v35 + *(int *)(v36 + 24);
    v45 = type metadata accessor for DetailComponentAction(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45))
    {
      v46 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
    }
  }
  v47 = &v9[v10[21]];
  v48 = type metadata accessor for LocationDetailEntity(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
}

_QWORD *sub_100364AE8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t, __n128);
  id v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t, __n128);
  __n128 v108;
  _QWORD *v109;
  int *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  char *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  void (*v138)(char *, char *, uint64_t, __n128);
  __n128 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v156;
  char *v157;
  int *v158;
  _QWORD *v159;
  int *v160;
  _QWORD *v161;
  char *v162;

  v6 = sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v12);
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v18 = *(_OWORD *)((char *)a2 + v17 + 24);
  *(_OWORD *)((char *)a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  v19 = a3[8];
  v159 = a1;
  v20 = (char *)a1 + v19;
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = *(_QWORD *)((char *)a2 + v19 + 8);
  *(_QWORD *)v20 = *(_QWORD *)((char *)a2 + v19);
  *((_QWORD *)v20 + 1) = v22;
  v23 = *(_QWORD *)((char *)a2 + v19 + 24);
  *((_QWORD *)v20 + 2) = *(_QWORD *)((char *)a2 + v19 + 16);
  *((_QWORD *)v20 + 3) = v23;
  v24 = *(_QWORD *)((char *)a2 + v19 + 40);
  *((_QWORD *)v20 + 4) = *(_QWORD *)((char *)a2 + v19 + 32);
  *((_QWORD *)v20 + 5) = v24;
  v25 = *(_QWORD *)((char *)a2 + v19 + 56);
  *((_QWORD *)v20 + 6) = *(_QWORD *)((char *)a2 + v19 + 48);
  *((_QWORD *)v20 + 7) = v25;
  v20[64] = *((_BYTE *)a2 + v19 + 64);
  *(_OWORD *)(v20 + 72) = *(_OWORD *)((char *)a2 + v19 + 72);
  *(_OWORD *)(v20 + 88) = *(_OWORD *)((char *)a2 + v19 + 88);
  v27 = *(_QWORD *)((char *)a2 + v19 + 104);
  v26 = *(_QWORD *)((char *)a2 + v19 + 112);
  *((_QWORD *)v20 + 13) = v27;
  *((_QWORD *)v20 + 14) = v26;
  v29 = v21[15];
  v28 = v21[16];
  *((_QWORD *)v20 + 15) = v29;
  *((_QWORD *)v20 + 16) = v28;
  v30 = v21[17];
  *((_QWORD *)v20 + 17) = v30;
  v160 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  v161 = v21;
  v31 = v160[14];
  v162 = v20;
  v32 = &v20[v31];
  v33 = (char *)v21 + v31;
  v34 = type metadata accessor for AirPollutant(0);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v30);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_1000BA294(&qword_100BDACB0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  v36 = v160[15];
  v37 = &v162[v36];
  v38 = (_QWORD *)((char *)v161 + v36);
  v39 = v38[1];
  if (v39)
  {
    *(_QWORD *)v37 = *v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v38[2];
    *((_QWORD *)v37 + 2) = v40;
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
  }
  else
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_QWORD *)v37 + 2) = v38[2];
  }
  v41 = v160[16];
  v42 = *(void **)((char *)v161 + v41);
  *(_QWORD *)&v162[v41] = v42;
  v43 = v160[17];
  v44 = *(_QWORD *)((char *)v161 + v43);
  *(_QWORD *)&v162[v43] = v44;
  v45 = v160[18];
  v46 = &v162[v45];
  v47 = (char *)v161 + v45;
  v48 = *(_QWORD *)((char *)v161 + v45 + 8);
  *(_QWORD *)v46 = *(_QWORD *)((char *)v161 + v45);
  *((_QWORD *)v46 + 1) = v48;
  v49 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v50 = v49[5];
  v51 = &v46[v50];
  v52 = &v47[v50];
  v53 = type metadata accessor for Location(0);
  v54 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v53 - 8) + 16);
  v55 = v42;
  swift_bridgeObjectRetain(v44);
  v56 = swift_bridgeObjectRetain(v48);
  v54(v51, v52, v53, v56);
  v57 = v49[6];
  v58 = &v46[v57];
  v59 = &v47[v57];
  v60 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, (uint64_t)v60))
  {
    v61 = sub_1000BA294(&qword_100BC3460);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_34;
  }
  v157 = v46;
  v62 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *((_QWORD *)v58 + 1) = v62;
  v63 = v60[5];
  v64 = &v58[v63];
  v65 = &v59[v63];
  v66 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v62);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
  {
    v67 = sub_1000BA294(&qword_100BC3340);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
  }
  v68 = v60[6];
  v69 = &v58[v68];
  v70 = &v59[v68];
  v71 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
  v72 = v60[7];
  v73 = &v58[v72];
  v74 = &v59[v72];
  v75 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
  {
    v76 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    v77 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v73, v74, v77);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
  }
  v78 = v60[8];
  v79 = &v58[v78];
  v80 = &v59[v78];
  v81 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v82 = swift_getEnumCaseMultiPayload(v80);
  if (v82 == 1)
  {
    v87 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v79, v80, v87);
    v84 = v79;
    v85 = v81;
    v86 = 1;
  }
  else
  {
    if (v82)
    {
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      goto LABEL_24;
    }
    v83 = *((_QWORD *)v80 + 1);
    *(_QWORD *)v79 = *(_QWORD *)v80;
    *((_QWORD *)v79 + 1) = v83;
    swift_bridgeObjectRetain(v83);
    v84 = v79;
    v85 = v81;
    v86 = 0;
  }
  swift_storeEnumTagMultiPayload(v84, v85, v86);
LABEL_24:
  v88 = v60[9];
  v89 = &v58[v88];
  v90 = &v59[v88];
  v91 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91))
  {
    v92 = sub_1000BA294(&qword_100BC3350);
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v93 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v93))
    {
      v94 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v89, v90, v93);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v93);
    }
    v95 = *(int *)(v91 + 20);
    v96 = &v89[v95];
    v97 = &v90[v95];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v93))
    {
      v98 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v96, v97, v93);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v93);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v91);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, (uint64_t)v60);
  v46 = v157;
LABEL_34:
  v99 = v49[7];
  v100 = &v46[v99];
  v101 = &v47[v99];
  v102 = *((_QWORD *)v101 + 1);
  *(_QWORD *)v100 = *(_QWORD *)v101;
  *((_QWORD *)v100 + 1) = v102;
  v103 = v49[8];
  v104 = &v46[v103];
  v105 = &v47[v103];
  v106 = type metadata accessor for WeatherMapOverlayKind(0);
  v107 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v106 - 8) + 16);
  v108 = swift_bridgeObjectRetain(v102);
  v107(v104, v105, v106, v108);
  v46[v49[9]] = v47[v49[9]];
  v110 = v160;
  v109 = v161;
  v111 = v160[19];
  v112 = v162;
  v113 = &v162[v111];
  v114 = (_QWORD *)((char *)v161 + v111);
  v115 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
  {
    v116 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    v117 = v159;
  }
  else
  {
    v118 = v114[1];
    if (v118)
    {
      *(_QWORD *)v113 = *v114;
      *((_QWORD *)v113 + 1) = v118;
      v119 = v114[3];
      *((_QWORD *)v113 + 2) = v114[2];
      *((_QWORD *)v113 + 3) = v119;
      swift_bridgeObjectRetain(v118);
      swift_bridgeObjectRetain(v119);
    }
    else
    {
      v120 = *((_OWORD *)v114 + 1);
      *(_OWORD *)v113 = *(_OWORD *)v114;
      *((_OWORD *)v113 + 1) = v120;
    }
    v121 = *(int *)(v115 + 20);
    v122 = &v113[v121];
    v123 = (_QWORD *)((char *)v114 + v121);
    v124 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v123) == 1)
    {
      v125 = v123[1];
      *(_QWORD *)v122 = *v123;
      *((_QWORD *)v122 + 1) = v125;
      v158 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v126 = v158[5];
      v127 = &v122[v126];
      v128 = (char *)v123 + v126;
      v129 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v125);
      v156 = v124;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129))
      {
        v130 = sub_1000BA294(&qword_100BD4280);
        memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v127, v128, v129);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v129);
      }
      v131 = v158[6];
      v132 = &v122[v131];
      v133 = (_QWORD *)((char *)v123 + v131);
      v134 = v133[1];
      *(_QWORD *)v132 = *v133;
      *((_QWORD *)v132 + 1) = v134;
      v135 = v158[7];
      v136 = &v122[v135];
      v137 = (char *)v123 + v135;
      v138 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v129 - 8) + 16);
      v139 = swift_bridgeObjectRetain(v134);
      v138(v136, v137, v129, v139);
      v140 = v158[8];
      v141 = &v122[v140];
      v142 = (char *)v123 + v140;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123 + v140, 1, v129))
      {
        v143 = sub_1000BA294(&qword_100BD4280);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v138)(v141, v142, v129);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v129);
      }
      v117 = v159;
      v110 = v160;
      v109 = v161;
      v122[v158[9]] = *((_BYTE *)v123 + v158[9]);
      swift_storeEnumTagMultiPayload(v122, v156, 1);
    }
    else
    {
      memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      v117 = v159;
    }
    v144 = *(int *)(v115 + 24);
    v145 = &v113[v144];
    v146 = (char *)v114 + v144;
    v147 = type metadata accessor for DetailComponentAction(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, v147))
    {
      v148 = sub_1000BA294(&qword_100BD3100);
      memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
    }
    else
    {
      v149 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v145, v146, v149);
      v150 = sub_1000BA294(&qword_100BC5FE8);
      v145[*(int *)(v150 + 48)] = v146[*(int *)(v150 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v145, 0, 1, v147);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
    v112 = v162;
  }
  v112[v110[20]] = *((_BYTE *)v109 + v110[20]);
  v151 = v110[21];
  v152 = &v112[v151];
  v153 = (uint64_t)v109 + v151;
  v154 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v152, v153, v154);
  return v117;
}

_QWORD *sub_100365518(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  size_t v150;
  void *v151;
  const void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  void (*v176)(char *, char *, uint64_t, __n128);
  __n128 v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  int v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, char *, uint64_t);
  __n128 v225;
  void *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  int v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  int v249;
  int v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  _QWORD *v254;
  _QWORD *v255;
  void *v256;
  char *v257;
  char *v258;
  void (*v259)(char *, char *, uint64_t);
  _QWORD *v260;
  _QWORD *v261;
  _QWORD *v262;
  _QWORD *v263;
  int *v264;
  int *v265;
  int *v266;
  int *v267;
  char *__dst;
  char *__dsta;
  char *__dstb;
  void *__dstc;
  int *v272;
  int *v273;
  int *v274;

  v4 = a2;
  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    sub_100021A14(a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4);
    *v5 = *v4;
    if (EnumCaseMultiPayload == 1)
    {
      v5[1] = v4[1];
      swift_retain();
      swift_retain();
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)v5 + v8;
      v10 = (char *)v4 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v5, v6, v12);
  }
  v13 = a3[5];
  v14 = (char *)v5 + v13;
  v15 = (char *)v4 + v13;
  v16 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_QWORD *)((char *)v5 + a3[6]) = *(_QWORD *)((char *)v4 + a3[6]);
  sub_100094D04((_QWORD *)((char *)v5 + a3[7]), (_QWORD *)((char *)v4 + a3[7]));
  v17 = a3[8];
  v18 = (char *)v5 + v17;
  v19 = (char *)v4 + v17;
  *(_QWORD *)v18 = *(_QWORD *)((char *)v4 + v17);
  v20 = *(_QWORD *)((char *)v4 + v17 + 8);
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
  v21 = *((_QWORD *)v19 + 3);
  *((_QWORD *)v18 + 3) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  v22 = *((_QWORD *)v19 + 5);
  *((_QWORD *)v18 + 5) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 6) = *((_QWORD *)v19 + 6);
  v23 = *((_QWORD *)v19 + 7);
  *((_QWORD *)v18 + 7) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease();
  v18[64] = v19[64];
  *((_QWORD *)v18 + 9) = *((_QWORD *)v19 + 9);
  *((_QWORD *)v18 + 10) = *((_QWORD *)v19 + 10);
  *((_QWORD *)v18 + 11) = *((_QWORD *)v19 + 11);
  *((_QWORD *)v18 + 12) = *((_QWORD *)v19 + 12);
  v24 = *((_QWORD *)v19 + 13);
  *((_QWORD *)v18 + 13) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 14) = *((_QWORD *)v19 + 14);
  v25 = *((_QWORD *)v19 + 15);
  *((_QWORD *)v18 + 15) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 16) = *((_QWORD *)v19 + 16);
  v26 = *((_QWORD *)v19 + 17);
  *((_QWORD *)v18 + 17) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease();
  v27 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  v28 = v27[14];
  v29 = &v18[v28];
  v30 = &v19[v28];
  v31 = type metadata accessor for AirPollutant(0);
  LODWORD(v14) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if ((_DWORD)v14)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  v33 = *(_QWORD *)(v31 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v31);
LABEL_11:
    v34 = sub_1000BA294(&qword_100BDACB0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v29, v30, v31);
LABEL_12:
  v35 = v27[15];
  v36 = &v18[v35];
  v37 = &v19[v35];
  v38 = *(_QWORD *)&v18[v35 + 8];
  v39 = *(_QWORD *)&v19[v35 + 8];
  if (v38)
  {
    if (v39)
    {
      *(_QWORD *)v36 = *(_QWORD *)v37;
      v40 = *((_QWORD *)v37 + 1);
      *((_QWORD *)v36 + 1) = v40;
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRelease();
      v41 = *((_QWORD *)v37 + 2);
      *((_QWORD *)v36 + 2) = v41;
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100366A60((uint64_t)v36);
      v44 = *((_QWORD *)v37 + 2);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_QWORD *)v36 + 2) = v44;
    }
  }
  else if (v39)
  {
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v42 = *((_QWORD *)v37 + 1);
    *((_QWORD *)v36 + 1) = v42;
    v43 = *((_QWORD *)v37 + 2);
    *((_QWORD *)v36 + 2) = v43;
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v43);
  }
  else
  {
    v45 = *(_OWORD *)v37;
    *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
    *(_OWORD *)v36 = v45;
  }
  v46 = v27[16];
  v47 = *(void **)&v18[v46];
  v48 = *(void **)&v19[v46];
  *(_QWORD *)&v18[v46] = v48;
  v49 = v48;

  v50 = v27[17];
  v51 = *(_QWORD *)&v19[v50];
  *(_QWORD *)&v18[v50] = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease();
  v52 = v27[18];
  v53 = &v18[v52];
  v54 = &v19[v52];
  *(_QWORD *)v53 = *(_QWORD *)&v19[v52];
  v55 = *(_QWORD *)&v19[v52 + 8];
  *((_QWORD *)v53 + 1) = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease();
  v56 = type metadata accessor for ConditionDetailMapViewModel(0);
  v57 = *(int *)(v56 + 20);
  v58 = &v53[v57];
  v59 = &v54[v57];
  v60 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 24))(v58, v59, v60);
  __dst = v54;
  v272 = (int *)v56;
  v61 = *(int *)(v56 + 24);
  v62 = &v53[v61];
  v63 = &v54[v61];
  v64 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v58) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v64);
  v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, (uint64_t)v64);
  if (!(_DWORD)v58)
  {
    if (v65)
    {
      sub_1000215BC((uint64_t)v62, type metadata accessor for WeatherData);
      goto LABEL_26;
    }
    v255 = v4;
    v261 = v5;
    v265 = v27;
    *(_QWORD *)v62 = *(_QWORD *)v63;
    v75 = *((_QWORD *)v63 + 1);
    *((_QWORD *)v62 + 1) = v75;
    swift_bridgeObjectRetain(v75);
    swift_bridgeObjectRelease();
    v76 = v64[5];
    v77 = &v62[v76];
    v78 = &v63[v76];
    v79 = type metadata accessor for Locale(0);
    v80 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v79);
    v81 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79);
    if (v80)
    {
      if (!v81)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
        goto LABEL_49;
      }
    }
    else
    {
      v109 = *(_QWORD *)(v79 - 8);
      if (!v81)
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 24))(v77, v78, v79);
LABEL_49:
        v111 = v64[6];
        v112 = &v62[v111];
        v113 = &v63[v111];
        v114 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 24))(v112, v113, v114);
        v115 = v64[7];
        v116 = &v62[v115];
        v117 = &v63[v115];
        v118 = sub_1000BA294(&qword_100BC3348);
        LODWORD(v112) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v118);
        v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118);
        if ((_DWORD)v112)
        {
          if (!v119)
          {
            v120 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v116, v117, v120);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
            goto LABEL_55;
          }
        }
        else
        {
          if (!v119)
          {
            v203 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 24))(v116, v117, v203);
LABEL_55:
            v5 = v261;
            v27 = v265;
            v4 = v255;
            if (v261 == v255)
              goto LABEL_99;
            v122 = v64[8];
            v123 = &v62[v122];
            v124 = &v63[v122];
            sub_1000215BC((uint64_t)&v62[v122], type metadata accessor for WeatherData.WeatherStatisticsState);
            v125 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v126 = swift_getEnumCaseMultiPayload(v124);
            if (v126 == 1)
            {
              v196 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v123, v124, v196);
              v128 = v123;
              v129 = v125;
              v130 = 1;
            }
            else
            {
              if (v126)
              {
                memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
                goto LABEL_98;
              }
              *(_QWORD *)v123 = *(_QWORD *)v124;
              v127 = *((_QWORD *)v124 + 1);
              *((_QWORD *)v123 + 1) = v127;
              swift_bridgeObjectRetain(v127);
              v128 = v123;
              v129 = v125;
              v130 = 0;
            }
            swift_storeEnumTagMultiPayload(v128, v129, v130);
LABEL_98:
            v5 = v261;
            v27 = v265;
            v4 = v255;
LABEL_99:
            v197 = v64[9];
            v62 += v197;
            v63 += v197;
            v198 = type metadata accessor for WeatherDataOverrides(0);
            v199 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v198);
            v200 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v198);
            if (v199)
            {
              if (!v200)
              {
                v201 = type metadata accessor for Date(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v201))
                {
                  v202 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v62, v63, v201);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v201);
                }
                v240 = *(int *)(v198 + 20);
                v241 = &v62[v240];
                v242 = &v63[v240];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v201))
                {
                  v243 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v241, v242, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v241, v242, v201);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v201);
                }
                v5 = v261;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v198);
                v27 = v265;
                goto LABEL_28;
              }
              goto LABEL_105;
            }
            if (v200)
            {
              sub_1000215BC((uint64_t)v62, type metadata accessor for WeatherDataOverrides);
LABEL_105:
              v72 = &qword_100BC3350;
              goto LABEL_27;
            }
            v216 = type metadata accessor for Date(0);
            v217 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v216);
            v218 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v216);
            if (v217)
            {
              if (!v218)
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v62, v63, v216);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v216);
                goto LABEL_137;
              }
            }
            else
            {
              v244 = *(_QWORD *)(v216 - 8);
              if (!v218)
              {
                (*(void (**)(char *, char *, uint64_t))(v244 + 24))(v62, v63, v216);
LABEL_137:
                v246 = *(int *)(v198 + 20);
                v247 = &v62[v246];
                v248 = &v63[v246];
                v249 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v247, 1, v216);
                v250 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v216);
                if (v249)
                {
                  v74 = __dst;
                  if (!v250)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v247, v248, v216);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v216);
LABEL_143:
                    v5 = v261;
                    goto LABEL_65;
                  }
                }
                else
                {
                  v251 = *(_QWORD *)(v216 - 8);
                  v74 = __dst;
                  if (!v250)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v251 + 24))(v247, v248, v216);
                    goto LABEL_143;
                  }
                  (*(void (**)(char *, uint64_t))(v251 + 8))(v247, v216);
                }
                v252 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v247, v248, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
                goto LABEL_143;
              }
              (*(void (**)(char *, uint64_t))(v244 + 8))(v62, v216);
            }
            v245 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
            goto LABEL_137;
          }
          sub_100021A14((uint64_t)v116, &qword_100BC3348);
        }
        v121 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        goto LABEL_55;
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v77, v79);
    }
    v110 = sub_1000BA294(&qword_100BC3340);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_49;
  }
  if (v65)
  {
LABEL_26:
    v72 = &qword_100BC3460;
LABEL_27:
    v73 = sub_1000BA294(v72);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
LABEL_28:
    v74 = __dst;
    goto LABEL_65;
  }
  v254 = v4;
  v260 = v5;
  v264 = v27;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  v66 = *((_QWORD *)v63 + 1);
  *((_QWORD *)v62 + 1) = v66;
  v67 = v64[5];
  v68 = &v62[v67];
  v69 = &v63[v67];
  v70 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v66);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
  {
    v71 = sub_1000BA294(&qword_100BC3340);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
  }
  v82 = v64[6];
  v83 = &v62[v82];
  v84 = &v63[v82];
  v85 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
  v86 = v64[7];
  v87 = &v62[v86];
  v88 = &v63[v86];
  v89 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89))
  {
    v90 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    v91 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v87, v88, v91);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v89);
  }
  v92 = v64[8];
  v93 = &v62[v92];
  v94 = &v63[v92];
  v95 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v96 = swift_getEnumCaseMultiPayload(v94);
  if (v96 == 1)
  {
    v101 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v93, v94, v101);
    v98 = v93;
    v99 = v95;
    v100 = 1;
  }
  else
  {
    if (v96)
    {
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      goto LABEL_42;
    }
    *(_QWORD *)v93 = *(_QWORD *)v94;
    v97 = *((_QWORD *)v94 + 1);
    *((_QWORD *)v93 + 1) = v97;
    swift_bridgeObjectRetain(v97);
    v98 = v93;
    v99 = v95;
    v100 = 0;
  }
  swift_storeEnumTagMultiPayload(v98, v99, v100);
LABEL_42:
  v4 = v254;
  v102 = v64[9];
  v103 = &v62[v102];
  v104 = &v63[v102];
  v105 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105))
  {
    v106 = sub_1000BA294(&qword_100BC3350);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
  }
  else
  {
    v107 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v107))
    {
      v108 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v103, v104, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v107);
    }
    v131 = *(int *)(v105 + 20);
    v132 = &v103[v131];
    v133 = &v104[v131];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v107))
    {
      v134 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v132, v133, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v107);
    }
    v4 = v254;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
  }
  v5 = v260;
  v27 = v264;
  v74 = __dst;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, (uint64_t)v64);
LABEL_65:
  v135 = v272[7];
  v136 = &v53[v135];
  v137 = &v74[v135];
  *(_QWORD *)v136 = *(_QWORD *)v137;
  v138 = *((_QWORD *)v137 + 1);
  *((_QWORD *)v136 + 1) = v138;
  swift_bridgeObjectRetain(v138);
  swift_bridgeObjectRelease();
  v139 = v272[8];
  v140 = &v53[v139];
  v141 = &v74[v139];
  v142 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 24))(v140, v141, v142);
  v53[v272[9]] = v74[v272[9]];
  v143 = v27[19];
  v144 = &v18[v143];
  v145 = &v19[v143];
  v146 = type metadata accessor for DetailComponentContainerViewModel(0);
  LODWORD(v140) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v146);
  v147 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146);
  if ((_DWORD)v140)
  {
    if (!v147)
    {
      v266 = v27;
      if (*((_QWORD *)v145 + 1))
      {
        *(_QWORD *)v144 = *(_QWORD *)v145;
        v148 = *((_QWORD *)v145 + 1);
        *((_QWORD *)v144 + 1) = v148;
        *((_QWORD *)v144 + 2) = *((_QWORD *)v145 + 2);
        v149 = *((_QWORD *)v145 + 3);
        *((_QWORD *)v144 + 3) = v149;
        swift_bridgeObjectRetain(v148);
        swift_bridgeObjectRetain(v149);
      }
      else
      {
        v156 = *((_OWORD *)v145 + 1);
        *(_OWORD *)v144 = *(_OWORD *)v145;
        *((_OWORD *)v144 + 1) = v156;
      }
      v157 = *(int *)(v146 + 20);
      v158 = &v144[v157];
      v159 = &v145[v157];
      v160 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v159) == 1)
      {
        v256 = (void *)v160;
        v262 = v5;
        *(_QWORD *)v158 = *(_QWORD *)v159;
        v161 = *((_QWORD *)v159 + 1);
        *((_QWORD *)v158 + 1) = v161;
        v162 = type metadata accessor for NewsArticleComponentContentViewModel(0);
        v163 = *(int *)(v162 + 20);
        __dsta = &v158[v163];
        v273 = (int *)v162;
        v164 = &v159[v163];
        v165 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain(v161);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v165))
        {
          v166 = sub_1000BA294(&qword_100BD4280);
          memcpy(__dsta, v164, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(__dsta, v164, v165);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v165);
        }
        v169 = v273[6];
        v170 = &v158[v169];
        v171 = &v159[v169];
        *(_QWORD *)v170 = *(_QWORD *)v171;
        v172 = *((_QWORD *)v171 + 1);
        *((_QWORD *)v170 + 1) = v172;
        v173 = v273[7];
        v174 = &v158[v173];
        v175 = &v159[v173];
        __dstb = v158;
        v176 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v165 - 8) + 16);
        v177 = swift_bridgeObjectRetain(v172);
        v176(v174, v175, v165, v177);
        v178 = v273[8];
        v179 = &__dstb[v178];
        v180 = &v159[v178];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v159[v178], 1, v165))
        {
          v181 = sub_1000BA294(&qword_100BD4280);
          memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v176)(v179, v180, v165);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v179, 0, 1, v165);
        }
        v5 = v262;
        __dstb[v273[9]] = v159[v273[9]];
        swift_storeEnumTagMultiPayload(__dstb, v256, 1);
      }
      else
      {
        memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
      }
      v182 = *(int *)(v146 + 24);
      v183 = &v144[v182];
      v184 = &v145[v182];
      v185 = type metadata accessor for DetailComponentAction(0);
      v27 = v266;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v185))
      {
        v186 = sub_1000BA294(&qword_100BD3100);
        memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
      }
      else
      {
        v187 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v183, v184, v187);
        v188 = sub_1000BA294(&qword_100BC5FE8);
        v183[*(int *)(v188 + 48)] = v184[*(int *)(v188 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v185);
      }
      v189 = (uint64_t)v144;
      goto LABEL_92;
    }
    goto LABEL_71;
  }
  if (v147)
  {
    sub_1000215BC((uint64_t)v144, type metadata accessor for DetailComponentContainerViewModel);
LABEL_71:
    v150 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC68A0) - 8) + 64);
    v151 = v144;
    v152 = v145;
    goto LABEL_72;
  }
  v153 = *((_QWORD *)v145 + 1);
  if (*((_QWORD *)v144 + 1))
  {
    if (v153)
    {
      *(_QWORD *)v144 = *(_QWORD *)v145;
      v154 = *((_QWORD *)v145 + 1);
      *((_QWORD *)v144 + 1) = v154;
      swift_bridgeObjectRetain(v154);
      swift_bridgeObjectRelease();
      *((_QWORD *)v144 + 2) = *((_QWORD *)v145 + 2);
      v155 = *((_QWORD *)v145 + 3);
      *((_QWORD *)v144 + 3) = v155;
      swift_bridgeObjectRetain(v155);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10035C44C((uint64_t)v144);
      v195 = *((_OWORD *)v145 + 1);
      *(_OWORD *)v144 = *(_OWORD *)v145;
      *((_OWORD *)v144 + 1) = v195;
    }
  }
  else if (v153)
  {
    *(_QWORD *)v144 = *(_QWORD *)v145;
    v167 = *((_QWORD *)v145 + 1);
    *((_QWORD *)v144 + 1) = v167;
    *((_QWORD *)v144 + 2) = *((_QWORD *)v145 + 2);
    v168 = *((_QWORD *)v145 + 3);
    *((_QWORD *)v144 + 3) = v168;
    swift_bridgeObjectRetain(v167);
    swift_bridgeObjectRetain(v168);
  }
  else
  {
    v204 = *((_OWORD *)v145 + 1);
    *(_OWORD *)v144 = *(_OWORD *)v145;
    *((_OWORD *)v144 + 1) = v204;
  }
  if (v5 != v4)
  {
    v205 = *(int *)(v146 + 20);
    v206 = &v144[v205];
    v207 = &v145[v205];
    sub_1000215BC((uint64_t)&v144[v205], type metadata accessor for NewsArticleComponentViewModel);
    v208 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v207) == 1)
    {
      __dstc = (void *)v208;
      v263 = v5;
      *(_QWORD *)v206 = *(_QWORD *)v207;
      v209 = *((_QWORD *)v207 + 1);
      *((_QWORD *)v206 + 1) = v209;
      v274 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v210 = v274[5];
      v257 = &v206[v210];
      v211 = &v207[v210];
      v212 = type metadata accessor for URL(0);
      v213 = v209;
      v214 = v212;
      swift_bridgeObjectRetain(v213);
      v267 = v27;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v211, 1, v214))
      {
        v215 = sub_1000BA294(&qword_100BD4280);
        memcpy(v257, v211, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 16))(v257, v211, v214);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v214);
      }
      v219 = v274[6];
      v220 = &v206[v219];
      v221 = &v207[v219];
      *(_QWORD *)v220 = *(_QWORD *)v221;
      v222 = *((_QWORD *)v221 + 1);
      *((_QWORD *)v220 + 1) = v222;
      v223 = v274[7];
      v258 = &v206[v223];
      v253 = &v207[v223];
      v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 16);
      v225 = swift_bridgeObjectRetain(v222);
      v226 = v258;
      v259 = v224;
      ((void (*)(void *, char *, uint64_t, __n128))v224)(v226, v253, v214, v225);
      v227 = v274[8];
      v228 = &v206[v227];
      v229 = &v207[v227];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v207[v227], 1, v214))
      {
        v230 = sub_1000BA294(&qword_100BD4280);
        memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
      }
      else
      {
        v259(v228, v229, v214);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, v214);
      }
      v206[v274[9]] = v207[v274[9]];
      swift_storeEnumTagMultiPayload(v206, __dstc, 1);
      v5 = v263;
      v27 = v267;
    }
    else
    {
      memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
    }
  }
  v231 = *(int *)(v146 + 24);
  v232 = (uint64_t)&v144[v231];
  v233 = (uint64_t)&v145[v231];
  v146 = type metadata accessor for DetailComponentAction(0);
  v234 = _s7Weather24LocationCompositionStateOwet_0(v232, 1, v146);
  v235 = _s7Weather24LocationCompositionStateOwet_0(v233, 1, v146);
  if (v234)
  {
    if (!v235)
    {
      v236 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v236 - 8) + 16))(v232, v233, v236);
      v237 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v232 + *(int *)(v237 + 48)) = *(_BYTE *)(v233 + *(int *)(v237 + 48));
      v189 = v232;
LABEL_92:
      _s7Weather24LocationCompositionStateOwst_0(v189, 0, 1, v146);
      goto LABEL_93;
    }
  }
  else
  {
    if (!v235)
    {
      v238 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v238 - 8) + 24))(v232, v233, v238);
      v239 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v232 + *(int *)(v239 + 48)) = *(_BYTE *)(v233 + *(int *)(v239 + 48));
      goto LABEL_93;
    }
    sub_1000215BC(v232, type metadata accessor for DetailComponentAction);
  }
  v150 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD3100) - 8) + 64);
  v151 = (void *)v232;
  v152 = (const void *)v233;
LABEL_72:
  memcpy(v151, v152, v150);
LABEL_93:
  v18[v27[20]] = v19[v27[20]];
  v190 = v27[21];
  v191 = &v18[v190];
  v192 = &v19[v190];
  v193 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 24))(v191, v192, v193);
  return v5;
}

uint64_t sub_100366A60(uint64_t a1)
{
  destroy for NotificationsState(a1);
  return a1;
}

_QWORD *sub_100366A94(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v114;
  char *__dst;
  char *__dsta;
  void (*__dstb)(char *, char *, uint64_t);
  int *v118;
  int *v119;
  _QWORD *v120;
  _QWORD *v121;
  int *v122;
  int *v123;

  v6 = sub_1000BA294(&qword_100BC4F28);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_OWORD *)((char *)a2 + v20 + 16);
  *(_OWORD *)v21 = *(_OWORD *)((char *)a2 + v20);
  *((_OWORD *)v21 + 1) = v23;
  v24 = *(_OWORD *)((char *)a2 + v20 + 48);
  *((_OWORD *)v21 + 2) = *(_OWORD *)((char *)a2 + v20 + 32);
  *((_OWORD *)v21 + 3) = v24;
  v21[64] = *((_BYTE *)a2 + v20 + 64);
  *(_OWORD *)(v21 + 72) = *(_OWORD *)((char *)a2 + v20 + 72);
  *((_QWORD *)v21 + 11) = *(_QWORD *)((char *)a2 + v20 + 88);
  v25 = *(_OWORD *)((char *)a2 + v20 + 112);
  *((_OWORD *)v21 + 6) = *(_OWORD *)((char *)a2 + v20 + 96);
  *((_OWORD *)v21 + 7) = v25;
  *((_OWORD *)v21 + 8) = *(_OWORD *)((char *)a2 + v20 + 128);
  v26 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  v27 = v26[14];
  v28 = &v21[v27];
  v29 = &v22[v27];
  v30 = type metadata accessor for AirPollutant(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = sub_1000BA294(&qword_100BDACB0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  v32 = v26[15];
  v33 = &v21[v32];
  v34 = &v22[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
  *(_QWORD *)&v21[v26[16]] = *(_QWORD *)&v22[v26[16]];
  *(_QWORD *)&v21[v26[17]] = *(_QWORD *)&v22[v26[17]];
  v35 = v26[18];
  v36 = &v21[v35];
  v37 = &v22[v35];
  *(_OWORD *)&v21[v35] = *(_OWORD *)&v22[v35];
  v38 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v39 = v38[5];
  v40 = &v36[v39];
  v41 = &v37[v39];
  v42 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = v38[6];
  v44 = &v36[v43];
  v45 = &v37[v43];
  v46 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, (uint64_t)v46))
  {
    v47 = sub_1000BA294(&qword_100BC3460);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v118 = v38;
    v120 = a1;
    v122 = v26;
    *(_OWORD *)v44 = *(_OWORD *)v45;
    v48 = v46[5];
    v49 = &v44[v48];
    v50 = &v45[v48];
    v51 = type metadata accessor for Locale(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
    {
      v52 = sub_1000BA294(&qword_100BC3340);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
    }
    v53 = v46[6];
    v54 = &v44[v53];
    v55 = &v45[v53];
    v56 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    v57 = v46[7];
    v58 = &v44[v57];
    v59 = &v45[v57];
    v60 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
    {
      v61 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v62 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v58, v59, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
    }
    v63 = v46[8];
    v64 = &v44[v63];
    v65 = &v45[v63];
    v66 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v65) == 1)
    {
      v67 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v64, v65, v67);
      swift_storeEnumTagMultiPayload(v64, v66, 1);
    }
    else
    {
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    v68 = v46[9];
    v69 = &v44[v68];
    v70 = &v45[v68];
    v71 = type metadata accessor for WeatherDataOverrides(0);
    v26 = v122;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71))
    {
      v72 = sub_1000BA294(&qword_100BC3350);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      v73 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v73))
      {
        v74 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v69, v70, v73);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v73);
      }
      v75 = *(int *)(v71 + 20);
      __dst = &v69[v75];
      v76 = &v70[v75];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v73))
      {
        v77 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(__dst, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(__dst, v76, v73);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v73);
      }
      v26 = v122;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
    }
    a1 = v120;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
    v38 = v118;
  }
  *(_OWORD *)&v36[v38[7]] = *(_OWORD *)&v37[v38[7]];
  v78 = v38[8];
  v79 = &v36[v78];
  v80 = &v37[v78];
  v81 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
  v36[v38[9]] = v37[v38[9]];
  v82 = v26[19];
  v83 = &v21[v82];
  v84 = &v22[v82];
  v85 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85))
  {
    v86 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v87 = *((_OWORD *)v84 + 1);
    *(_OWORD *)v83 = *(_OWORD *)v84;
    *((_OWORD *)v83 + 1) = v87;
    v88 = *(int *)(v85 + 20);
    v89 = &v83[v88];
    v90 = &v84[v88];
    v91 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v90) == 1)
    {
      v121 = a1;
      v123 = v26;
      *(_OWORD *)v89 = *(_OWORD *)v90;
      v92 = type metadata accessor for NewsArticleComponentContentViewModel(0);
      v93 = *(int *)(v92 + 20);
      __dsta = &v89[v93];
      v119 = (int *)v92;
      v94 = &v90[v93];
      v95 = type metadata accessor for URL(0);
      v114 = v91;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
      {
        v96 = sub_1000BA294(&qword_100BD4280);
        memcpy(__dsta, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32);
      }
      else
      {
        v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32);
        v97(__dsta, v94, v95);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v95);
      }
      *(_OWORD *)&v89[v119[6]] = *(_OWORD *)&v90[v119[6]];
      __dstb = v97;
      v97(&v89[v119[7]], &v90[v119[7]], v95);
      v98 = v119[8];
      v99 = &v89[v98];
      v100 = &v90[v98];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v90[v98], 1, v95))
      {
        v101 = sub_1000BA294(&qword_100BD4280);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        __dstb(v99, v100, v95);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v95);
      }
      a1 = v121;
      v26 = v123;
      v89[v119[9]] = v90[v119[9]];
      swift_storeEnumTagMultiPayload(v89, v114, 1);
    }
    else
    {
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    v102 = *(int *)(v85 + 24);
    v103 = &v83[v102];
    v104 = &v84[v102];
    v105 = type metadata accessor for DetailComponentAction(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105))
    {
      v106 = sub_1000BA294(&qword_100BD3100);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    }
    else
    {
      v107 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v103, v104, v107);
      v108 = sub_1000BA294(&qword_100BC5FE8);
      v103[*(int *)(v108 + 48)] = v104[*(int *)(v108 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
  }
  v21[v26[20]] = v22[v26[20]];
  v109 = v26[21];
  v110 = &v21[v109];
  v111 = &v22[v109];
  v112 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
  return a1;
}

_QWORD *sub_10036739C(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int *v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  __int128 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t);
  size_t v149;
  void *v150;
  const void *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  const void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  __int128 v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(char *, char *, uint64_t);
  uint64_t v183;
  uint64_t v184;
  int v185;
  int v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  int v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  void (*__dstc)(char *, char *, uint64_t);
  void *__dstd;
  int *v218;
  int *v219;
  int *v220;
  int *v221;
  _QWORD *v222;
  _QWORD *v223;
  _QWORD *v224;
  _QWORD *v225;
  char *v226;
  void *v227;
  char *v228;
  void (*v229)(char *, char *, uint64_t);
  int *v230;
  int *v231;
  int *v232;

  v4 = a2;
  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    sub_100021A14(a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    if (swift_getEnumCaseMultiPayload(v4) == 1)
    {
      v7 = v4[1];
      *v5 = *v4;
      v5[1] = v7;
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)v5 + v8;
      v10 = (char *)v4 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload(v5, v6, 1);
    }
    else
    {
      memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v12 = a3[5];
  v13 = (char *)v5 + v12;
  v14 = (char *)v4 + v12;
  v15 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  *(_QWORD *)((char *)v5 + a3[6]) = *(_QWORD *)((char *)v4 + a3[6]);
  v17 = (char *)v5 + v16;
  v18 = (char *)v4 + v16;
  sub_1000CE2FC((_QWORD *)((char *)v5 + v16));
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  v20 = a3[8];
  v21 = (char *)v5 + v20;
  v22 = (char *)v4 + v20;
  v23 = *(_QWORD *)((char *)v4 + v20 + 8);
  *(_QWORD *)v21 = *(_QWORD *)((char *)v4 + v20);
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v24 = *((_QWORD *)v22 + 3);
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  *((_QWORD *)v21 + 3) = v24;
  swift_bridgeObjectRelease();
  v25 = *((_QWORD *)v22 + 5);
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  *((_QWORD *)v21 + 5) = v25;
  swift_bridgeObjectRelease();
  v26 = *((_QWORD *)v22 + 7);
  *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
  *((_QWORD *)v21 + 7) = v26;
  swift_bridgeObjectRelease();
  v21[64] = v22[64];
  *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
  *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
  v27 = *((_QWORD *)v22 + 13);
  *((_QWORD *)v21 + 12) = *((_QWORD *)v22 + 12);
  *((_QWORD *)v21 + 13) = v27;
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)v22 + 15);
  *((_QWORD *)v21 + 14) = *((_QWORD *)v22 + 14);
  *((_QWORD *)v21 + 15) = v28;
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)v22 + 17);
  *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
  *((_QWORD *)v21 + 17) = v29;
  swift_bridgeObjectRelease();
  v30 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  v31 = v30[14];
  v32 = &v21[v31];
  v33 = &v22[v31];
  v34 = type metadata accessor for AirPollutant(0);
  LODWORD(v17) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if ((_DWORD)v17)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v36 = *(_QWORD *)(v34 - 8);
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v34);
LABEL_10:
    v37 = sub_1000BA294(&qword_100BDACB0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v32, v33, v34);
LABEL_11:
  v38 = v30[15];
  v39 = &v21[v38];
  v40 = &v22[v38];
  if (*(_QWORD *)&v21[v38 + 8])
  {
    v41 = *((_QWORD *)v40 + 1);
    if (v41)
    {
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = v41;
      swift_bridgeObjectRelease();
      *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_100366A60((uint64_t)v39);
  }
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
LABEL_16:
  v42 = v30[16];
  v43 = *(void **)&v21[v42];
  *(_QWORD *)&v21[v42] = *(_QWORD *)&v22[v42];

  *(_QWORD *)&v21[v30[17]] = *(_QWORD *)&v22[v30[17]];
  swift_bridgeObjectRelease();
  v44 = v30[18];
  v45 = &v21[v44];
  v46 = &v22[v44];
  v47 = *(_QWORD *)&v22[v44 + 8];
  *(_QWORD *)v45 = *(_QWORD *)&v22[v44];
  *((_QWORD *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  v48 = type metadata accessor for ConditionDetailMapViewModel(0);
  v49 = *(int *)(v48 + 20);
  v50 = &v45[v49];
  v51 = &v46[v49];
  v52 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
  v226 = v46;
  v230 = (int *)v48;
  v53 = *(int *)(v48 + 24);
  v54 = &v45[v53];
  v55 = &v46[v53];
  v56 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v50) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, (uint64_t)v56);
  v57 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, (uint64_t)v56);
  if (!(_DWORD)v50)
  {
    if (v57)
    {
      sub_1000215BC((uint64_t)v54, type metadata accessor for WeatherData);
      goto LABEL_22;
    }
    __dsta = v4;
    v219 = v30;
    v223 = v5;
    v65 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v65;
    swift_bridgeObjectRelease();
    v66 = v56[5];
    v67 = &v54[v66];
    v68 = &v55[v66];
    v69 = type metadata accessor for Locale(0);
    v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v69);
    v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69);
    if (v70)
    {
      if (!v71)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
        goto LABEL_42;
      }
    }
    else
    {
      v94 = *(_QWORD *)(v69 - 8);
      if (!v71)
      {
        (*(void (**)(char *, char *, uint64_t))(v94 + 40))(v67, v68, v69);
LABEL_42:
        v96 = v56[6];
        v97 = &v54[v96];
        v98 = &v55[v96];
        v99 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v97, v98, v99);
        v100 = v56[7];
        v101 = &v54[v100];
        v102 = &v55[v100];
        v103 = sub_1000BA294(&qword_100BC3348);
        LODWORD(v97) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v103);
        v104 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103);
        if ((_DWORD)v97)
        {
          if (!v104)
          {
            v105 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v101, v102, v105);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v103);
            goto LABEL_48;
          }
        }
        else
        {
          if (!v104)
          {
            v183 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 40))(v101, v102, v183);
LABEL_48:
            v5 = v223;
            v4 = __dsta;
            if (v223 != __dsta)
            {
              v107 = v56[8];
              v108 = &v54[v107];
              v109 = &v55[v107];
              sub_1000215BC((uint64_t)&v54[v107], type metadata accessor for WeatherData.WeatherStatisticsState);
              v110 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload(v109) == 1)
              {
                v111 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v108, v109, v111);
                swift_storeEnumTagMultiPayload(v108, v110, 1);
              }
              else
              {
                memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
              }
              v5 = v223;
              v4 = __dsta;
            }
            v112 = v56[9];
            v113 = &v54[v112];
            v114 = &v55[v112];
            v115 = type metadata accessor for WeatherDataOverrides(0);
            v116 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v115);
            v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115);
            if (v116)
            {
              if (!v117)
              {
                v118 = type metadata accessor for Date(0);
                v30 = v219;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v118))
                {
                  v119 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v113, v114, v118);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v118);
                }
                v200 = *(int *)(v115 + 20);
                v201 = &v113[v200];
                v202 = &v114[v200];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, v118))
                {
                  v203 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v201, v202, v118);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v201, 0, 1, v118);
                }
                v5 = v223;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
                v4 = __dsta;
                goto LABEL_23;
              }
              goto LABEL_59;
            }
            if (v117)
            {
              sub_1000215BC((uint64_t)v113, type metadata accessor for WeatherDataOverrides);
LABEL_59:
              v120 = sub_1000BA294(&qword_100BC3350);
              memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
              v30 = v219;
              goto LABEL_23;
            }
            v184 = type metadata accessor for Date(0);
            v185 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v184);
            v186 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v184);
            if (v185)
            {
              v30 = v219;
              if (!v186)
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v113, v114, v184);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v184);
                goto LABEL_122;
              }
            }
            else
            {
              v204 = *(_QWORD *)(v184 - 8);
              v30 = v219;
              if (!v186)
              {
                (*(void (**)(char *, char *, uint64_t))(v204 + 40))(v113, v114, v184);
LABEL_122:
                v206 = *(int *)(v115 + 20);
                v207 = &v113[v206];
                v208 = &v114[v206];
                v209 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v184);
                v210 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v184);
                if (v209)
                {
                  v64 = v226;
                  if (!v210)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v207, v208, v184);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v184);
LABEL_128:
                    v5 = v223;
                    goto LABEL_66;
                  }
                }
                else
                {
                  v211 = *(_QWORD *)(v184 - 8);
                  v64 = v226;
                  if (!v210)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v211 + 40))(v207, v208, v184);
                    goto LABEL_128;
                  }
                  (*(void (**)(char *, uint64_t))(v211 + 8))(v207, v184);
                }
                v212 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
                goto LABEL_128;
              }
              (*(void (**)(char *, uint64_t))(v204 + 8))(v113, v184);
            }
            v205 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
            goto LABEL_122;
          }
          sub_100021A14((uint64_t)v101, &qword_100BC3348);
        }
        v106 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v94 + 8))(v67, v69);
    }
    v95 = sub_1000BA294(&qword_100BC3340);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    goto LABEL_42;
  }
  if (v57)
  {
LABEL_22:
    v63 = sub_1000BA294(&qword_100BC3460);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
LABEL_23:
    v64 = v226;
    goto LABEL_66;
  }
  __dst = v4;
  v218 = v30;
  v222 = v5;
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v58 = v56[5];
  v59 = &v54[v58];
  v60 = &v55[v58];
  v61 = type metadata accessor for Locale(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
  {
    v62 = sub_1000BA294(&qword_100BC3340);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
  }
  v72 = v56[6];
  v73 = &v54[v72];
  v74 = &v55[v72];
  v75 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
  v76 = v56[7];
  v77 = &v54[v76];
  v78 = &v55[v76];
  v79 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
  {
    v80 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    v81 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v77, v78, v81);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
  }
  v82 = v56[8];
  v83 = &v54[v82];
  v84 = &v55[v82];
  v85 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload(v84) == 1)
  {
    v86 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v83, v84, v86);
    swift_storeEnumTagMultiPayload(v83, v85, 1);
  }
  else
  {
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  v87 = v56[9];
  v88 = &v54[v87];
  v89 = &v55[v87];
  v90 = type metadata accessor for WeatherDataOverrides(0);
  v30 = v218;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
  {
    v91 = sub_1000BA294(&qword_100BC3350);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
  }
  else
  {
    v92 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v92))
    {
      v93 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v88, v89, v92);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v92);
    }
    v121 = *(int *)(v90 + 20);
    v122 = &v88[v121];
    v123 = &v89[v121];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v92))
    {
      v124 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v122, v123, v92);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v92);
    }
    v30 = v218;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v90);
  }
  v5 = v222;
  v64 = v226;
  v4 = __dst;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, (uint64_t)v56);
LABEL_66:
  v125 = v230[7];
  v126 = &v45[v125];
  v127 = (uint64_t *)&v64[v125];
  v129 = *v127;
  v128 = v127[1];
  *(_QWORD *)v126 = v129;
  *((_QWORD *)v126 + 1) = v128;
  swift_bridgeObjectRelease();
  v130 = v230[8];
  v131 = &v45[v130];
  v132 = &v64[v130];
  v133 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 40))(v131, v132, v133);
  v45[v230[9]] = v64[v230[9]];
  v134 = v30[19];
  v135 = (uint64_t)&v21[v134];
  v136 = (uint64_t)&v22[v134];
  v137 = type metadata accessor for DetailComponentContainerViewModel(0);
  LODWORD(v131) = _s7Weather24LocationCompositionStateOwet_0(v135, 1, v137);
  v138 = _s7Weather24LocationCompositionStateOwet_0(v136, 1, v137);
  if ((_DWORD)v131)
  {
    if (!v138)
    {
      v139 = *(_OWORD *)(v136 + 16);
      *(_OWORD *)v135 = *(_OWORD *)v136;
      *(_OWORD *)(v135 + 16) = v139;
      v140 = *(int *)(v137 + 20);
      v141 = (char *)(v135 + v140);
      v142 = (char *)(v136 + v140);
      v143 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v142) == 1)
      {
        v220 = v30;
        v224 = v5;
        *(_OWORD *)v141 = *(_OWORD *)v142;
        v231 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v144 = v231[5];
        __dstb = &v141[v144];
        v145 = &v142[v144];
        v146 = type metadata accessor for URL(0);
        v227 = (void *)v143;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
        {
          v147 = sub_1000BA294(&qword_100BD4280);
          memcpy(__dstb, v145, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
          v148 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32);
        }
        else
        {
          v154 = v145;
          v148 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32);
          v148(__dstb, v154, v146);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v146);
        }
        *(_OWORD *)&v141[v231[6]] = *(_OWORD *)&v142[v231[6]];
        __dstc = v148;
        v148(&v141[v231[7]], &v142[v231[7]], v146);
        v155 = v231[8];
        v156 = &v141[v155];
        v157 = &v142[v155];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v142[v155], 1, v146))
        {
          v158 = sub_1000BA294(&qword_100BD4280);
          memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          __dstc(v156, v157, v146);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v156, 0, 1, v146);
        }
        v30 = v220;
        v5 = v224;
        v141[v231[9]] = v142[v231[9]];
        swift_storeEnumTagMultiPayload(v141, v227, 1);
      }
      else
      {
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      v159 = *(int *)(v137 + 24);
      v160 = (void *)(v135 + v159);
      v161 = (const void *)(v136 + v159);
      v162 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
      {
        v163 = sub_1000BA294(&qword_100BD3100);
        memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      }
      else
      {
        v164 = type metadata accessor for URL(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v160, v161, v164);
        v165 = sub_1000BA294(&qword_100BC5FE8);
        *((_BYTE *)v160 + *(int *)(v165 + 48)) = *((_BYTE *)v161 + *(int *)(v165 + 48));
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
      }
      v166 = v135;
      goto LABEL_88;
    }
    goto LABEL_73;
  }
  if (v138)
  {
    sub_1000215BC(v135, type metadata accessor for DetailComponentContainerViewModel);
LABEL_73:
    v149 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC68A0) - 8) + 64);
    v150 = (void *)v135;
    v151 = (const void *)v136;
    goto LABEL_74;
  }
  if (!*(_QWORD *)(v135 + 8))
    goto LABEL_91;
  v152 = *(_QWORD *)(v136 + 8);
  if (!v152)
  {
    sub_10035C44C(v135);
LABEL_91:
    v172 = *(_OWORD *)(v136 + 16);
    *(_OWORD *)v135 = *(_OWORD *)v136;
    *(_OWORD *)(v135 + 16) = v172;
    goto LABEL_92;
  }
  *(_QWORD *)v135 = *(_QWORD *)v136;
  *(_QWORD *)(v135 + 8) = v152;
  swift_bridgeObjectRelease();
  v153 = *(_QWORD *)(v136 + 24);
  *(_QWORD *)(v135 + 16) = *(_QWORD *)(v136 + 16);
  *(_QWORD *)(v135 + 24) = v153;
  swift_bridgeObjectRelease();
LABEL_92:
  if (v5 != v4)
  {
    v173 = *(int *)(v137 + 20);
    v174 = (char *)(v135 + v173);
    v175 = (char *)(v136 + v173);
    sub_1000215BC(v135 + v173, type metadata accessor for NewsArticleComponentViewModel);
    v176 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v175) == 1)
    {
      v221 = v30;
      v225 = v5;
      *(_OWORD *)v174 = *(_OWORD *)v175;
      v177 = type metadata accessor for NewsArticleComponentContentViewModel(0);
      v178 = *(int *)(v177 + 20);
      v228 = &v174[v178];
      v232 = (int *)v177;
      v179 = &v175[v178];
      v180 = type metadata accessor for URL(0);
      __dstd = (void *)v176;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v180))
      {
        v181 = sub_1000BA294(&qword_100BD4280);
        memcpy(v228, v179, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
        v182 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32);
      }
      else
      {
        v182 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32);
        v182(v228, v179, v180);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, v180);
      }
      *(_OWORD *)&v174[v232[6]] = *(_OWORD *)&v175[v232[6]];
      v229 = v182;
      v182(&v174[v232[7]], &v175[v232[7]], v180);
      v187 = v232[8];
      v188 = &v174[v187];
      v189 = &v175[v187];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v175[v187], 1, v180))
      {
        v190 = sub_1000BA294(&qword_100BD4280);
        memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
      }
      else
      {
        v229(v188, v189, v180);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v180);
      }
      v30 = v221;
      v174[v232[9]] = v175[v232[9]];
      swift_storeEnumTagMultiPayload(v174, __dstd, 1);
      v5 = v225;
    }
    else
    {
      memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
    }
  }
  v191 = *(int *)(v137 + 24);
  v192 = v135 + v191;
  v193 = v136 + v191;
  v137 = type metadata accessor for DetailComponentAction(0);
  v194 = _s7Weather24LocationCompositionStateOwet_0(v192, 1, v137);
  v195 = _s7Weather24LocationCompositionStateOwet_0(v193, 1, v137);
  if (v194)
  {
    if (!v195)
    {
      v196 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v192, v193, v196);
      v197 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v192 + *(int *)(v197 + 48)) = *(_BYTE *)(v193 + *(int *)(v197 + 48));
      v166 = v192;
LABEL_88:
      _s7Weather24LocationCompositionStateOwst_0(v166, 0, 1, v137);
      goto LABEL_89;
    }
  }
  else
  {
    if (!v195)
    {
      v198 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 40))(v192, v193, v198);
      v199 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v192 + *(int *)(v199 + 48)) = *(_BYTE *)(v193 + *(int *)(v199 + 48));
      goto LABEL_89;
    }
    sub_1000215BC(v192, type metadata accessor for DetailComponentAction);
  }
  v149 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD3100) - 8) + 64);
  v150 = (void *)v192;
  v151 = (const void *)v193;
LABEL_74:
  memcpy(v150, v151, v149);
LABEL_89:
  v21[v30[20]] = v22[v30[20]];
  v167 = v30[21];
  v168 = &v21[v167];
  v169 = &v22[v167];
  v170 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 40))(v168, v169, v170);
  return v5;
}

uint64_t sub_100368690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036869C);
}

uint64_t sub_10036869C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  v9 = sub_1000BA294(&qword_100BDACA8);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = a1 + v10;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = sub_1000DA950();
    v10 = a3[8];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100368764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100368770);
}

void sub_100368770(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v11 = sub_1000BA294(&qword_100BDACA8);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7] + 24) = (a2 - 1);
        sub_100079F70();
        return;
      }
      v9 = sub_1000DA950();
      v12 = a4[8];
    }
    v10 = a1 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

void sub_10036882C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_100158A50(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003688E4(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v8[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[3] = "(";
      v6 = type metadata accessor for AirQualityDetailViewModel.Model(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_1003688E4(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BDAD20)
  {
    v2 = sub_10010FE84();
    v3 = type metadata accessor for ScaledValue(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BDAD20);
  }
}

unint64_t sub_100368940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDAD60;
  if (!qword_100BDAD60)
  {
    v1 = sub_100075EB0(&qword_100BDAD68);
    sub_10000F1C8(&qword_100BDACA0, type metadata accessor for AirQualityDetailInnerView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDAD60);
  }
  return result;
}

uint64_t sub_1003689C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1D04, 1);
}

uint64_t sub_1003689D4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v5 = v0;
  v6 = sub_1000CDC34();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 16) & ~v8;
  v41 = *(_QWORD *)(v7 + 64);
  v10 = v0 + v9;
  v11 = sub_1000BA294(&qword_100BC4F28);
  sub_100098814(v11);
  sub_1000BD298();
  if (v1 == 1)
  {
    swift_release(*(_QWORD *)(v10 + 8));
    sub_1000BA294(&qword_100BC6510);
    v12 = sub_1000BEDD4();
    sub_1000B2568(v12);
  }
  v13 = v10 + *(int *)(v6 + 20);
  v14 = sub_1000BA294(&qword_100BDACA8);
  sub_1000B2568(v14);
  sub_1000C0A00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000DA950();
  v15 = sub_1000DAC4C();
  if (!sub_1000BC04C(v15))
    sub_100098C04();
  v16 = v0 + *(int *)(v6 + 60);
  if (*(_QWORD *)(v16 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000FD930();
  sub_10009DEFC();
  sub_1000B3120();
  sub_10003BD48();
  v17 = sub_1000C6A54();
  sub_1000B2568(v17);
  v18 = sub_1000F421C();
  if (!sub_10009E638(v18))
  {
    swift_bridgeObjectRelease();
    sub_1000AE8F8();
    if (!sub_1000952CC(v3))
      sub_1000C2190();
    v19 = sub_1000EF9BC();
    sub_1000BA9C0(v19);
    v20 = v13 + *(int *)(v2 + 28);
    v21 = sub_1000BA294(&qword_100BC3348);
    if (!sub_1000C666C(v20, v22, v21))
    {
      v23 = sub_100098778();
      sub_1000BA9C0(v23);
    }
    v24 = sub_10009BF30();
    v25 = sub_10009ED24(v24);
    v5 = v0;
    if (v25 == 1)
    {
      v26 = sub_1000FDA28();
      sub_1000BA9C0(v26);
      v9 = (v8 + 16) & ~v8;
    }
    else
    {
      v9 = (v8 + 16) & ~v8;
      if (!v25)
        sub_10009C0F0();
    }
    v27 = sub_1000FDB38();
    if (!sub_10009E638(v27))
    {
      sub_100098778();
      if (!sub_10009D53C(v13))
        sub_1000DB918();
      if (!sub_10009D53C(v13 + *(int *)(v2 + 20)))
        sub_1000DB918();
    }
  }
  sub_1000BA548(v4 + *(int *)(v16 + 28));
  v28 = sub_1000F4420();
  sub_1000987E0(v28);
  v29 = sub_1000CE58C();
  if (!sub_1000BC04C(v29))
  {
    if (*(_QWORD *)(v16 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v30 = sub_1000DC17C();
    if (sub_100094FAC(v30) == 1)
    {
      v40 = v9;
      v31 = v5;
      sub_1000B3B94();
      v32 = (int *)sub_10004A364();
      v33 = v2 + v32[5];
      sub_10009896C();
      if (!sub_10009D53C(v33))
        sub_100098C64();
      sub_1000BA548(v2 + v32[6]);
      sub_1000DA540();
      v34 = sub_10009D53C(v2 + v32[8]);
      v5 = v31;
      v9 = v40;
      if (!v34)
        sub_1000BE8F4();
    }
    v35 = sub_1000BDCD4();
    if (!sub_1000C666C(v16, v36, v35))
    {
      v37 = sub_10009896C();
      sub_1000987E0(v37);
    }
  }
  v38 = sub_1000BCF84();
  sub_10003BC44(v38);
  return swift_deallocObject(v5, v9 + v41, v8 | 7);
}

void sub_100368CC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000CDC34() - 8) + 80);
  sub_10035F7DC(a1, v2 + ((v5 + 16) & ~v5), a2);
}

void sub_100368D08(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10035FADC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100368D10()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  void (*v42)(char *, uint64_t, double);
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = v0;
  v2 = (int *)sub_1000CDC34();
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v56 = *(_QWORD *)(v3 + 64);
  v5 = type metadata accessor for ScrollViewProxy(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v57 = v6;
  v58 = v5;
  v55 = *(_QWORD *)(v6 + 64);
  v8 = (_QWORD *)(v1 + ((v4 + 16) & ~v4));
  sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
  swift_release(*v8);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v8[1]);
    sub_1000BA294(&qword_100BC6510);
    v10 = type metadata accessor for PresentationMode(0);
    sub_1000989A0(v10);
  }
  v11 = (char *)v8 + v2[5];
  v12 = sub_1000BA294(&qword_100BDACA8);
  sub_1000989A0(v12);
  sub_1000CE2FC((_QWORD *)((char *)v8 + v2[7]));
  v13 = (char *)v8 + v2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (int *)sub_1000DA950();
  v15 = &v13[v14[14]];
  v16 = type metadata accessor for AirPollutant(0);
  if (!sub_10009E638(v16))
    (*(void (**)(char *, char *))(*((_QWORD *)v11 - 1) + 8))(v15, v11);
  if (*(_QWORD *)&v13[v14[15] + 8])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  v17 = &v13[v14[18]];
  swift_bridgeObjectRelease();
  v18 = sub_10003BD48();
  v19 = type metadata accessor for Location(0);
  sub_1000989A0(v19);
  v20 = (uint64_t)&v17[*(int *)(v18 + 24)];
  v21 = (int *)type metadata accessor for WeatherData(0);
  if (!sub_10009D53C(v20))
  {
    v53 = v1;
    sub_1000B3B94();
    v22 = v20 + v21[5];
    v23 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
    v24 = type metadata accessor for WeatherDataModel(0);
    sub_10009BF1C(v24);
    v25 = v20 + v21[7];
    v26 = sub_1000BA294(&qword_100BC3348);
    if (!sub_1000C666C(v25, v27, v26))
    {
      v28 = sub_100098778();
      sub_10009BF1C(v28);
    }
    v29 = v20 + v21[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    v30 = swift_getEnumCaseMultiPayload(v29);
    v1 = v53;
    if (v30 == 1)
    {
      v31 = sub_1000FDA28();
      sub_10009BF1C(v31);
    }
    else if (!v30)
    {
      swift_bridgeObjectRelease();
    }
    v20 += v21[9];
    v32 = type metadata accessor for WeatherDataOverrides(0);
    if (!sub_10009D53C(v20))
    {
      sub_100098778();
      if (!sub_1000952CC(v20))
        sub_10009C954();
      v20 += *(int *)(v32 + 20);
      if (!sub_1000952CC(v20))
        sub_10009C954();
    }
  }
  sub_1000BA548((uint64_t)&v17[*(int *)(v18 + 28)]);
  v33 = type metadata accessor for WeatherMapOverlayKind(0);
  sub_1000B2568(v33);
  v34 = &v13[v14[19]];
  v35 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (!sub_10009E638(v35))
  {
    if (*((_QWORD *)v34 + 1))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v36 = &v34[*(int *)(v20 + 20)];
    v37 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (sub_10009ED24(v37) == 1)
    {
      v54 = v1;
      sub_10009C0F0();
      v38 = (int *)sub_10004A364();
      v39 = (uint64_t)&v36[v38[5]];
      v40 = sub_10009896C();
      if (!sub_1000952CC(v39))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
      v41 = sub_1000BA548((uint64_t)&v36[v38[6]]);
      v42 = *(void (**)(char *, uint64_t, double))(*(_QWORD *)(v40 - 8) + 8);
      v42(&v36[v38[7]], v40, v41);
      v43 = sub_1000952CC((uint64_t)&v36[v38[8]]);
      v1 = v54;
      if (!v43)
      {
        v44 = sub_100079FDC();
        ((void (*)(uint64_t))v42)(v44);
      }
    }
    v45 = (uint64_t)&v34[*(int *)(v20 + 24)];
    v46 = type metadata accessor for DetailComponentAction(0);
    if (!sub_1000C666C(v45, v47, v46))
    {
      v48 = sub_10009896C();
      sub_1000B2568(v48);
    }
  }
  v49 = v4 | v7 | 7;
  v50 = (((v4 + 16) & ~v4) + v56 + v7) & ~v7;
  v51 = type metadata accessor for LocationDetailEntity(0);
  sub_1000987E0(v51);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v1 + v50, v58);
  return swift_deallocObject(v1, v50 + v55, v49);
}

uint64_t sub_10036917C()
{
  return sub_1003694C8(type metadata accessor for AirQualityDetailInnerView, (uint64_t (*)(_QWORD))&type metadata accessor for ScrollViewProxy, (uint64_t (*)(unint64_t, unint64_t))sub_100361964);
}

uint64_t sub_100369198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v3 = v0;
  v4 = type metadata accessor for ScrollViewProxy(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = sub_1000CDC34();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v43 = *(_QWORD *)(v10 + 64);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3 + v7, v4);
  v13 = v3 + v12;
  v14 = sub_1000BA294(&qword_100BC4F28);
  sub_100098814(v14);
  sub_1000BD298();
  if ((_DWORD)v7 == 1)
  {
    swift_release(*(_QWORD *)(v13 + 8));
    sub_1000BA294(&qword_100BC6510);
    v15 = sub_1000BEDD4();
    sub_1000B2568(v15);
  }
  v16 = v13 + *(int *)(v9 + 20);
  v17 = sub_1000BA294(&qword_100BDACA8);
  sub_1000B2568(v17);
  sub_1000C0A00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000DA950();
  v18 = sub_1000DAC4C();
  if (!sub_1000BC04C(v18))
    sub_100098C04();
  v19 = v5 + *(int *)(v9 + 60);
  if (*(_QWORD *)(v19 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000FD930();
  sub_10009DEFC();
  sub_1000B3120();
  sub_10003BD48();
  v20 = sub_1000C6A54();
  sub_1000B2568(v20);
  v21 = sub_1000F421C();
  if (!sub_10009E638(v21))
  {
    swift_bridgeObjectRelease();
    sub_1000AE8F8();
    if (!sub_1000952CC(v1))
      sub_1000C2190();
    v22 = sub_1000EF9BC();
    sub_1000BA9C0(v22);
    v23 = v16 + *(int *)(v12 + 28);
    v24 = sub_1000BA294(&qword_100BC3348);
    if (!sub_1000C666C(v23, v25, v24))
    {
      v26 = sub_100098778();
      sub_1000BA9C0(v26);
    }
    v27 = sub_10009BF30();
    v28 = sub_10009ED24(v27);
    if (v28 == 1)
    {
      v29 = sub_1000FDA28();
      sub_1000BA9C0(v29);
    }
    else if (!v28)
    {
      sub_10009C0F0();
    }
    v30 = sub_1000FDB38();
    if (!sub_10009E638(v30))
    {
      sub_100098778();
      if (!sub_10009D53C(v16))
        sub_1000DB918();
      if (!sub_10009D53C(v16 + *(int *)(v12 + 20)))
        sub_1000DB918();
    }
  }
  sub_1000BA548(v2 + *(int *)(v19 + 28));
  v31 = sub_1000F4420();
  sub_1000987E0(v31);
  v32 = sub_1000CE58C();
  if (!sub_1000BC04C(v32))
  {
    if (*(_QWORD *)(v19 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v33 = sub_1000DC17C();
    if (sub_100094FAC(v33) == 1)
    {
      v42 = v3;
      sub_1000B3B94();
      v34 = (int *)sub_10004A364();
      v35 = v12 + v34[5];
      sub_10009896C();
      if (!sub_10009D53C(v35))
        sub_100098C64();
      sub_1000BA548(v12 + v34[6]);
      sub_1000DA540();
      v36 = sub_10009D53C(v12 + v34[8]);
      v3 = v42;
      if (!v36)
        sub_1000BE8F4();
    }
    v37 = sub_1000BDCD4();
    if (!sub_1000C666C(v19, v38, v37))
    {
      v39 = sub_10009896C();
      sub_1000987E0(v39);
    }
  }
  v40 = sub_1000BCF84();
  sub_10003BC44(v40);
  return swift_deallocObject(v3, v12 + v43, v6 | v11 | 7);
}

uint64_t sub_1003694AC()
{
  return sub_1003694C8((uint64_t (*)(_QWORD))&type metadata accessor for ScrollViewProxy, type metadata accessor for AirQualityDetailInnerView, (uint64_t (*)(unint64_t, unint64_t))sub_100361DE8);
}

uint64_t sub_1003694C8(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t (*a3)(unint64_t, unint64_t))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(v3 + v6, v3 + ((v6 + v7 + v8) & ~v8));
}

unint64_t sub_100369540()
{
  unint64_t result;

  result = qword_100BDAD90;
  if (!qword_100BDAD90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Namespace.ID, &type metadata for Namespace.ID);
    atomic_store(result, (unint64_t *)&qword_100BDAD90);
  }
  return result;
}

id sub_10036957C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSString v5;
  double v6;
  NSDictionary v7;
  id v8;

  v5 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v6 = swift_bridgeObjectRelease().n128_u64[0];
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_10000F1C8(&qword_100BC2CC0, (uint64_t (*)(uint64_t))type metadata accessor for Key);
    v7.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v6 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v7.super.isa = 0;
  }
  v8 = objc_msgSend(v3, "initWithString:attributes:", v5, v7.super.isa, v6);

  return v8;
}

void sub_100369640()
{
  uint64_t v0;

  sub_100360EE8(*(_QWORD *)(v0 + 16));
}

void sub_100369650(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = DynamicTypeSize.isAccessibilitySize.getter(a1) & 1;
  sub_10004A298();
}

void sub_100369678()
{
  uint64_t v0;

  sub_1003616A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(CTFontRef *)(v0 + 32));
}

void sub_10036968C()
{
  AttributeScopes.AccessibilityAttributes.accessibilitySpeechSpellsOutCharacters.getter();
  __break(1u);
}

uint64_t sub_1003696AC()
{
  return 8;
}

double sub_1003696BC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

_QWORD *sub_1003696D0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_1003696DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[8];
  v6 = a1[10];
  v7 = a1[13];
  v8 = a1[15];
  v9 = a1[18];
  v10 = a1[20];
  v12 = a1[23];
  v13 = a1[25];
  swift_retain(*a1);
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  return a1;
}

void sub_1003697B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_1009971D8;
  v6[1] = &unk_1009971F0;
  sub_10036A444(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

uint64_t *sub_100369850(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void **v20;
  void *v21;
  void *v22;
  const void *v23;
  id v24;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v7 + 64) + 1;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  if ((v12 | v8) > 7
    || ((v12 | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v9 + v12 + ((v8 + 24) & ~v8)) & ~(unint64_t)v12)
     + *(_QWORD *)(v11 + 64) > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16
                   + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain();
  }
  else
  {
    v17 = v6;
    v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    v19 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = *v20;
    *v19 = *v20;
    v22 = (void *)(((unint64_t)v19 + v8 + 8) & ~v8);
    v23 = (const void *)(((unint64_t)v20 + v8 + 8) & ~v8);
    swift_bridgeObjectRetain(v18);
    v24 = v21;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v17))
    {
      memcpy(v22, v23, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v22, v23, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v17);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)v22 + v9 + v13) & ~v13, ((unint64_t)v23 + v9 + v13) & ~v13, v10);
  }
  return a1;
}

uint64_t sub_1003699F4(uint64_t a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  swift_bridgeObjectRelease();
  v4 = (id *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);

  v5 = type metadata accessor for AttributedString(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = ((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_QWORD *)(v6 + 64) + v7;
  if (!*(_DWORD *)(v6 + 84))
    ++v8;
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v8 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_100369AA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  id v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v6 = *v7;
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v6 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  swift_bridgeObjectRetain(v5);
  v14 = v8;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v9))
  {
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
    if (v15)
      v17 = *(_QWORD *)(v10 + 64);
    else
      v17 = v16 + 1;
    memcpy(v12, v13, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v9);
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 16))(((unint64_t)v12 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)v13 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

_QWORD *sub_100369BC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  int v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = *v7;
  *v7 = *v8;
  v11 = v9;

  v12 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (void *)(((unint64_t)v7 + v14 + 8) & ~v14);
  v16 = (const void *)(((unint64_t)v8 + v14 + 8) & ~v14);
  LODWORD(v8) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v12);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v12);
  if ((_DWORD)v8)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v15, v16, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v12);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v15, v16, v12);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  }
  if (*(_DWORD *)(v13 + 84))
    v18 = *(_QWORD *)(v13 + 64);
  else
    v18 = *(_QWORD *)(v13 + 64) + 1;
  memcpy(v15, v16, v18);
LABEL_10:
  if (*(_DWORD *)(v13 + 84))
    v19 = *(_QWORD *)(v13 + 64);
  else
    v19 = *(_QWORD *)(v13 + 64) + 1;
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 24))(((unint64_t)v15 + v19 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), ((unint64_t)v16 + v19 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

_OWORD *sub_100369D4C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = type metadata accessor for AttributedString(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)v5 + v9 + 8) & ~v9);
  v11 = (const void *)(((unint64_t)v6 + v9 + 8) & ~v9);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 32))(((unint64_t)v10 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((unint64_t)v11 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

_QWORD *sub_100369E5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v7;
  *v7 = *v8;

  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)v7 + v12 + 8) & ~v12);
  v14 = (const void *)(((unint64_t)v8 + v12 + 8) & ~v12);
  LODWORD(v8) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v10);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v10);
  if ((_DWORD)v8)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 40))(v13, v14, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v16 = *(_QWORD *)(v11 + 64);
  else
    v16 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v13, v14, v16);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v17 = *(_QWORD *)(v11 + 64);
  else
    v17 = *(_QWORD *)(v11 + 64) + 1;
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 40))(((unint64_t)v13 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v14 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_100369FCC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v9 <= v12)
    v13 = *(_DWORD *)(v11 + 84);
  else
    v13 = v9;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v7 + 64);
  if (!(_DWORD)v8)
    ++v15;
  if (!a2)
    return 0;
  v16 = v6;
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = *(unsigned __int8 *)(v11 + 80);
  if (a2 <= v14)
    goto LABEL_31;
  v19 = ((v15 + ((v17 + 24) & ~v17) + v18) & ~v18) + *(_QWORD *)(v11 + 64);
  v20 = 8 * v19;
  if (v19 > 3)
    goto LABEL_15;
  v22 = ((a2 - v14 + ~(-1 << v20)) >> v20) + 1;
  if (HIWORD(v22))
  {
    v21 = *(_DWORD *)(a1 + v19);
    if (v21)
      goto LABEL_22;
LABEL_31:
    if ((v13 & 0x80000000) == 0)
    {
      v25 = *(_QWORD *)(a1 + 8);
      if (v25 >= 0xFFFFFFFF)
        LODWORD(v25) = -1;
      return (v25 + 1);
    }
    v26 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v17 + 8) & ~v17;
    if (v9 != v14)
      return _s7Weather24LocationCompositionStateOwet_0((v26 + v15 + v18) & ~v18, v12, v10);
    if (v8 >= 2)
    {
      v27 = _s7Weather24LocationCompositionStateOwet_0(v26, v8, v16);
      if (v27 >= 2)
        return v27 - 1;
      else
        return 0;
    }
    return 0;
  }
  if (v22 > 0xFF)
  {
    v21 = *(unsigned __int16 *)(a1 + v19);
    if (*(_WORD *)(a1 + v19))
      goto LABEL_22;
    goto LABEL_31;
  }
  if (v22 < 2)
    goto LABEL_31;
LABEL_15:
  v21 = *(unsigned __int8 *)(a1 + v19);
  if (!*(_BYTE *)(a1 + v19))
    goto LABEL_31;
LABEL_22:
  v23 = (v21 - 1) << v20;
  if (v19 > 3)
    v23 = 0;
  if ((_DWORD)v19)
  {
    if (v19 <= 3)
      v24 = v19;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  return v14 + v23 + 1;
}

void sub_10036A1C8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  char v19;
  unsigned int v20;
  int v21;
  int v22;

  v8 = 0;
  v9 = *(_QWORD *)(type metadata accessor for AttributedString(0) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = *(_QWORD *)(v9 + 64);
  if (v10)
    v17 = v16;
  else
    v17 = v16 + 1;
  v18 = ((v17 + ((v15 + 24) & ~v15) + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(_QWORD *)(v12 + 64);
  v19 = 8 * v18;
  if (a3 > v14)
  {
    if (v18 <= 3)
    {
      v20 = ((a3 - v14 + ~(-1 << v19)) >> v19) + 1;
      if (HIWORD(v20))
      {
        v8 = &dword_100000004;
      }
      else if (v20 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v20 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  if (v14 < a2)
  {
    v21 = ~v14 + a2;
    if (v18 < 4)
    {
      if ((_DWORD)v18)
      {
        v22 = v21 & ~(-1 << v19);
        bzero(a1, v18);
        if ((_DWORD)v18 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if ((_DWORD)v18 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      *(_DWORD *)a1 = v21;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_10036A40C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_10036A414()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

uint64_t type metadata accessor for AirQualitySection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AirQualitySection);
}

void sub_10036A444(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BDAF30)
  {
    v2 = type metadata accessor for AttributedString(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BDAF30);
  }
}

void sub_10036A498()
{
  sub_10003D2DC(&qword_100BDAF38, &qword_100BDAD70);
}

uint64_t sub_10036A4C4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB1D2C, 1);
}

uint64_t sub_10036A4F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 136);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_BYTE *)(a1 + 152);
  sub_1000D55D4(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  swift_bridgeObjectRetain();
  sub_1000D55D4(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

void sub_10036A568(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003629D8(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_10036A574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDAF98;
  if (!qword_100BDAF98)
  {
    v1 = sub_100075EB0(&qword_100BDAF80);
    sub_10003D2DC(&qword_100BDAFA0, &qword_100BDAF78);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDAF98);
  }
  return result;
}

unint64_t sub_10036A5F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDAFB0;
  if (!qword_100BDAFB0)
  {
    v1 = sub_100075EB0(&qword_100BDAFA8);
    sub_10000F1C8(&qword_100BDAFB8, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle);
    sub_10003D2DC((unint64_t *)&qword_100BC4B98, (uint64_t *)&unk_100C09EE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDAFB0);
  }
  return result;
}

unint64_t sub_10036A694()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BDAFC8;
  if (!qword_100BDAFC8)
  {
    v1 = sub_100075EB0(&qword_100BDAF68);
    v2[0] = sub_100075EB0(&qword_100BDAF80);
    v2[1] = sub_10036A574();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDAFC8);
  }
  return result;
}

double sub_10036A748(uint64_t a1, uint64_t a2)
{
  double result;

  if (a2)
  {
    swift_retain();
    sub_100094EE4();
    *(_QWORD *)&result = swift_bridgeObjectRetain().n128_u64[0];
  }
  return result;
}

uint64_t sub_10036A77C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;

  v1 = *a1;
  v2 = sub_100075EB0(&qword_100BDAF68);
  v3 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _FlexFrameLayout);
  v4 = sub_1000ED28C(v3, v3);
  v5 = sub_100075EB0(&qword_100BDAF70);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v7 = sub_1000ED28C(v6, v6);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v7, 0, 0);
  v9 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
  v11 = type metadata accessor for VStack(255, v9, WitnessTable);
  return swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v11);
}

double sub_10036A850(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1000D55D4(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

double sub_10036A88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  double result;

  if (a12)
  {
    sub_1000D55D4(a9, a10, a11 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain().n128_u64[0];
  }
  return result;
}

_QWORD *sub_10036A8CC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v34);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for AttributedString(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = a3[9];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)((char *)v4 + v22);
    v27 = (_QWORD *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = a3[10];
    v30 = a3[11];
    v31 = (_QWORD *)((char *)v4 + v29);
    v32 = (_QWORD *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *((_BYTE *)v4 + v30) = *((_BYTE *)a2 + v30);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v33);
  }
  return v4;
}

double sub_10036AA00(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_10036AAA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v20);
  v23 = (_QWORD *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)((char *)a1 + v21);
  v26 = (_QWORD *)((char *)a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[10];
  v29 = a3[11];
  v30 = (_QWORD *)((char *)a1 + v28);
  v31 = (_QWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v32);
  return a1;
}

_QWORD *sub_10036ABA8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v25 = v24[1];
  v26 = v23[1];
  v23[1] = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  v27 = a3[9];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  *v28 = *v29;
  v30 = v29[1];
  v31 = v28[1];
  v28[1] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  v32 = a3[10];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v35 = v34[1];
  v36 = v33[1];
  v33[1] = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

_OWORD *sub_10036AD14(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

_QWORD *sub_10036ADBC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease(v17);
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  v23 = v19[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease(v23);
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  v29 = v25[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease(v29);
  v30 = a3[9];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  v35 = v31[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease(v35);
  v36 = a3[10];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  v41 = v37[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease(v41);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

uint64_t sub_10036AEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036AED4);
}

void sub_10036AED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_100079F70();
  }
  else
  {
    v6 = type metadata accessor for AttributedString(0);
    _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_10036AF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036AF4C);
}

uint64_t sub_10036AF4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AttributedString(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TitleAndDetailLollipopDetailViewModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDB110, (uint64_t)&nominal type descriptor for TitleAndDetailLollipopDetailViewModel);
}

uint64_t sub_10036AFCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1009972D8;
  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1009972F0;
    v4[3] = &unk_1009972D8;
    v4[4] = &unk_1009972F0;
    v4[5] = &unk_1009972D8;
    v4[6] = &unk_1009972F0;
    v4[7] = &unk_100997308;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10036B05C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v16 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v16;
      v17 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v18 = v17[5];
      v19 = a1 + v18;
      v20 = (uint64_t)a2 + v18;
      v21 = type metadata accessor for AttributedString(0);
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 16);
      v23 = swift_bridgeObjectRetain(v16);
      v22(v19, v20, v21, v23);
      v24 = v17[6];
      v25 = (_QWORD *)(a1 + v24);
      v26 = (uint64_t *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = v17[7];
      v29 = (_QWORD *)(a1 + v28);
      v30 = (uint64_t *)((char *)a2 + v28);
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      v32 = v17[8];
      v33 = (_QWORD *)(a1 + v32);
      v34 = (uint64_t *)((char *)a2 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = v17[9];
      v37 = (_QWORD *)(a1 + v36);
      v38 = (uint64_t *)((char *)a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = v17[10];
      v41 = (_QWORD *)(a1 + v40);
      v42 = (uint64_t *)((char *)a2 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *(_BYTE *)(a1 + v17[11]) = *((_BYTE *)a2 + v17[11]);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v39);
      swift_bridgeObjectRetain(v43);
      v12 = a1;
      v13 = a3;
      v14 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v8;
      v9 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v9;
      v10 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v10;
      v11 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v11;
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      *(_BYTE *)(a1 + 65) = *((_BYTE *)a2 + 65);
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      v12 = a1;
      v13 = a3;
      v14 = 1;
    }
    else
    {
      v44 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v44;
      v45 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v45;
      v46 = a2[4];
      v47 = a2[5];
      *(_QWORD *)(a1 + 32) = v46;
      *(_QWORD *)(a1 + 40) = v47;
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRetain(v45);
      swift_bridgeObjectRetain(v47);
      v12 = a1;
      v13 = a3;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_10036B274(uint64_t a1)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    v5 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10036B380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v12 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v12;
    v13 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v14 = v13[5];
    v15 = a1 + v14;
    v16 = a2 + v14;
    v17 = type metadata accessor for AttributedString(0);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
    v19 = swift_bridgeObjectRetain(v12);
    v18(v15, v16, v17, v19);
    v20 = v13[6];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)(a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v13[7];
    v25 = (_QWORD *)(a1 + v24);
    v26 = (_QWORD *)(a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = v13[8];
    v29 = (_QWORD *)(a1 + v28);
    v30 = (_QWORD *)(a2 + v28);
    v9 = v30[1];
    *v29 = *v30;
    v29[1] = v9;
    v31 = v13[9];
    v32 = (_QWORD *)(a1 + v31);
    v33 = (_QWORD *)(a2 + v31);
    v10 = v33[1];
    *v32 = *v33;
    v32[1] = v10;
    v34 = v13[10];
    v35 = (_QWORD *)(a1 + v34);
    v36 = (_QWORD *)(a2 + v34);
    v11 = v36[1];
    *v35 = *v36;
    v35[1] = v11;
    *(_BYTE *)(a1 + v13[11]) = *(_BYTE *)(a2 + v13[11]);
    swift_bridgeObjectRetain(v23);
    v8 = v27;
  }
  else
  {
    if ((_DWORD)EnumCaseMultiPayload != 1)
    {
      v9 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v9;
      v10 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v10;
      v11 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v11;
      goto LABEL_7;
    }
    v8 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    v10 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v10;
    v11 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v11;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  }
  swift_bridgeObjectRetain(v8);
LABEL_7:
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_10036B528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  if (a1 != a2)
  {
    sub_10006BD20(a1, type metadata accessor for LollipopDetailViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v12 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v12;
      v13 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v14 = v13[5];
      v15 = a1 + v14;
      v16 = a2 + v14;
      v17 = type metadata accessor for AttributedString(0);
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
      v19 = swift_bridgeObjectRetain(v12);
      v18(v15, v16, v17, v19);
      v20 = v13[6];
      v21 = (_QWORD *)(a1 + v20);
      v22 = (_QWORD *)(a2 + v20);
      *v21 = *v22;
      v23 = v22[1];
      v21[1] = v23;
      v24 = v13[7];
      v25 = (_QWORD *)(a1 + v24);
      v26 = (_QWORD *)(a2 + v24);
      *v25 = *v26;
      v27 = v26[1];
      v25[1] = v27;
      v28 = v13[8];
      v29 = (_QWORD *)(a1 + v28);
      v30 = (_QWORD *)(a2 + v28);
      *v29 = *v30;
      v9 = v30[1];
      v29[1] = v9;
      v31 = v13[9];
      v32 = (_QWORD *)(a1 + v31);
      v33 = (_QWORD *)(a2 + v31);
      *v32 = *v33;
      v10 = v33[1];
      v32[1] = v10;
      v34 = v13[10];
      v35 = (_QWORD *)(a1 + v34);
      v36 = (_QWORD *)(a2 + v34);
      *v35 = *v36;
      v11 = v36[1];
      v35[1] = v11;
      *(_BYTE *)(a1 + v13[11]) = *(_BYTE *)(a2 + v13[11]);
      swift_bridgeObjectRetain(v23);
      v8 = v27;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v9 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 8) = v9;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v10 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v10;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v11 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v11;
        goto LABEL_8;
      }
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v9 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v10 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v10;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v11 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 56) = v11;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
    }
    swift_bridgeObjectRetain(v8);
LABEL_8:
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t type metadata accessor for LollipopDetailViewModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDB1D0, (uint64_t)&nominal type descriptor for LollipopDetailViewModel);
}

_OWORD *sub_10036B764(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2) == 2)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
    *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
    *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
    *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10036B860(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for LollipopDetailViewModel);
    if (swift_getEnumCaseMultiPayload(a2) == 2)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v7 = v6[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
      *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
      *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
      *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
      *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
      *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10036B974(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "0";
  v4[1] = &unk_100997350;
  result = type metadata accessor for TitleAndDetailLollipopDetailViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10036B9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int EnumCaseMultiPayload;
  char v22;
  __int128 v23;
  char v24;
  __int128 v25;
  _OWORD v27[5];
  _OWORD v28[5];
  __int128 v29;
  __int128 v30;
  _BYTE v31[16];
  __int128 v32;
  _OWORD v33[2];

  type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LollipopDetailViewModel(0);
  sub_1000B42B0();
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)v27 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)v27 - v14;
  sub_1000BA294(&qword_100BDB208);
  sub_1000B42B0();
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_10016413C(a1, (uint64_t)v19);
  sub_10016413C(a2, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10016413C((uint64_t)v19, (uint64_t)v13);
      memcpy(v27, v13, 0x42uLL);
      if (sub_1000C3900() == 1)
      {
        memcpy(v28, v20, 0x42uLL);
        v22 = sub_10036BDA8((uint64_t)v27);
        sub_10036C04C(v27);
        sub_10036C04C(v28);
LABEL_13:
        sub_10006BD20((uint64_t)v19, type metadata accessor for LollipopDetailViewModel);
        return v22 & 1;
      }
      sub_10036C04C(v27);
    }
    else
    {
      sub_10016413C((uint64_t)v19, (uint64_t)v10);
      if (sub_1000C3900() == 2)
      {
        sub_10036C008((uint64_t)v20, (uint64_t)v6);
        sub_10036BE84((uint64_t)v10);
        v22 = v24;
        sub_10006BD20((uint64_t)v6, type metadata accessor for TitleAndDetailLollipopDetailViewModel);
        sub_10006BD20((uint64_t)v10, type metadata accessor for TitleAndDetailLollipopDetailViewModel);
        goto LABEL_13;
      }
      sub_10006BD20((uint64_t)v10, type metadata accessor for TitleAndDetailLollipopDetailViewModel);
    }
  }
  else
  {
    sub_10016413C((uint64_t)v19, (uint64_t)v15);
    v23 = *((_OWORD *)v15 + 1);
    v27[0] = *(_OWORD *)v15;
    v27[1] = v23;
    v27[2] = *((_OWORD *)v15 + 2);
    if (!sub_1000C3900())
    {
      v25 = *((_OWORD *)v20 + 1);
      v28[0] = *(_OWORD *)v20;
      v28[1] = v25;
      v28[2] = *((_OWORD *)v20 + 2);
      v22 = sub_10036BD10((uint64_t)v27);
      v32 = v27[0];
      sub_100121AA8((uint64_t)&v32);
      sub_1000B4890((__n128)v27[1]);
      sub_10032E29C((uint64_t)&v27[2], (uint64_t)v33);
      sub_100121AA8((uint64_t)v33);
      v29 = v28[0];
      sub_100121AA8((uint64_t)&v29);
      v30 = v28[1];
      sub_100121AA8((uint64_t)&v30);
      sub_10032E29C((uint64_t)&v28[2], (uint64_t)v31);
      sub_100121AA8((uint64_t)v31);
      goto LABEL_13;
    }
    sub_1000B4890(*(__n128 *)v15);
    v33[0] = v27[1];
    sub_100121AA8((uint64_t)v33);
    sub_10032E29C((uint64_t)&v27[2], (uint64_t)v28);
    sub_100121AA8((uint64_t)v28);
  }
  sub_10036BFC8((uint64_t)v19);
  v22 = 0;
  return v22 & 1;
}

uint64_t sub_10036BD10(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;

  v3 = sub_1000BBE30(a1);
  v7 = v7 && v4 == v6;
  if (v7 || (v8 = sub_100099264(v3, v4, v5, v6), result = 0, (v8 & 1) != 0))
  {
    v10 = v2[2];
    v11 = v2[3];
    v12 = v1[2];
    v13 = v1[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14 || (v15 = sub_100099264(v10, v11, v12, v13), result = 0, (v15 & 1) != 0))
    {
      v16 = v2[5];
      v17 = v1[5];
      if (v16)
      {
        if (v17)
        {
          v18 = v2[4];
          v19 = v1[4];
          v20 = v18 == v19 && v16 == v17;
          if (v20 || (sub_100099264(v18, v16, v19, v17) & 1) != 0)
            return 1;
        }
      }
      else if (!v17)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_10036BDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;

  v3 = sub_1000BBE30(a1);
  v7 = v7 && v4 == v6;
  if (v7 || (v8 = sub_100099264(v3, v4, v5, v6), v9 = 0, (v8 & 1) != 0))
  {
    v10 = *(_QWORD *)(v2 + 16);
    v11 = *(_QWORD *)(v2 + 24);
    v12 = *(_QWORD *)(v1 + 16);
    v13 = *(_QWORD *)(v1 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14 || (v15 = sub_100099264(v10, v11, v12, v13), v9 = 0, (v15 & 1) != 0))
    {
      v16 = *(_QWORD *)(v2 + 32);
      v17 = *(_QWORD *)(v2 + 40);
      v18 = *(_QWORD *)(v1 + 32);
      v19 = *(_QWORD *)(v1 + 40);
      v20 = v16 == v18 && v17 == v19;
      if (v20 || (v21 = sub_100099264(v16, v17, v18, v19), v9 = 0, (v21 & 1) != 0))
      {
        v22 = *(_QWORD *)(v2 + 56);
        v23 = *(_QWORD *)(v1 + 56);
        if (v22)
        {
          if (v23)
          {
            v24 = *(_QWORD *)(v2 + 48);
            v25 = *(_QWORD *)(v1 + 48);
            if (v24 != v25 || v22 != v23)
            {
              v27 = sub_100099264(v24, v22, v25, v23);
              v9 = 0;
              if ((v27 & 1) == 0)
                return v9 & 1;
            }
            goto LABEL_25;
          }
        }
        else if (!v23)
        {
LABEL_25:
          if (*(unsigned __int8 *)(v2 + 64) == *(unsigned __int8 *)(v1 + 64))
          {
            v9 = ((*(_BYTE *)(v2 + 65) & 1) == 0) ^ *(_BYTE *)(v1 + 65);
            return v9 & 1;
          }
        }
        v9 = 0;
      }
    }
  }
  return v9 & 1;
}

void sub_10036BE84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = sub_1000BBE30(a1);
  v7 = v7 && v4 == v6;
  if (v7 || (sub_100099264(v3, v4, v5, v6) & 1) != 0)
  {
    v8 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    if ((static AttributedString.== infix(_:_:)(v2 + v8[5], v1 + v8[5]) & 1) != 0)
    {
      sub_1000C2898();
      if (v11)
      {
        if (!v9)
          goto LABEL_42;
        v12 = sub_1000C4844(v10);
        v16 = v7 && v13 == v15;
        if (!v16 && (sub_100099264(v12, v13, v14, v15) & 1) == 0)
          goto LABEL_42;
      }
      else if (v9)
      {
        goto LABEL_42;
      }
      v17 = sub_1000BA7EC(v8[7]);
      v21 = v7 && v18 == v20;
      if (v21 || (sub_100099264(v17, v18, v19, v20) & 1) != 0)
      {
        sub_1000C2898();
        if (v24)
        {
          if (!v22)
            goto LABEL_42;
          v25 = sub_1000C4844(v23);
          v29 = v7 && v26 == v28;
          if (!v29 && (sub_100099264(v25, v26, v27, v28) & 1) == 0)
            goto LABEL_42;
        }
        else if (v22)
        {
          goto LABEL_42;
        }
        v30 = sub_1000BA7EC(v8[9]);
        v34 = v7 && v31 == v33;
        if (v34 || (sub_100099264(v30, v31, v32, v33) & 1) != 0)
        {
          sub_1000C2898();
          if (v37)
          {
            if (v35)
            {
              v38 = sub_1000C4844(v36);
              if (!v7 || v39 != v41)
                sub_100099264(v38, v39, v40, v41);
            }
          }
        }
      }
    }
  }
LABEL_42:
  sub_100079F70();
}

uint64_t sub_10036BFC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BDB208);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10036C008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10036C04C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[7];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t initializeWithCopy for TitleAndUnitLollipopDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for TitleAndUnitLollipopDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

void *initializeWithTake for TitleAndUnitLollipopDetailView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42uLL);
}

uint64_t assignWithTake for TitleAndUnitLollipopDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for TitleAndUnitLollipopDetailView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 66))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TitleAndUnitLollipopDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 66) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TitleAndUnitLollipopDetailViewModel()
{
  sub_100098884();
}

double destroy for VisibilityComponentPreprocessedDataModel(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[5]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for VisibilityComponentPreprocessedDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for VisibilityComponentPreprocessedDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for VisibilityComponentPreprocessedDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibilityComponentPreprocessedDataModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityComponentPreprocessedDataModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TitleOnlyLollipopDetailViewModel()
{
  sub_100098884();
}

uint64_t sub_10036C4E8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10036C534 + 4 * byte_1009972A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10036C568 + 4 * byte_1009972A0[v4]))();
}

uint64_t sub_10036C568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036C570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10036C578);
  return result;
}

uint64_t sub_10036C584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10036C58CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10036C590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036C598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TitleAndUnitLollipopDetailViewModel.Variant()
{
  sub_100098884();
}

unint64_t sub_10036C5B4()
{
  unint64_t result;

  result = qword_100BDB210;
  if (!qword_100BDB210)
  {
    result = swift_getWitnessTable(&unk_1009974AC, &unk_100B6ED00);
    atomic_store(result, (unint64_t *)&qword_100BDB210);
  }
  return result;
}

uint64_t *sub_10036C5F0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for PreviewLocation(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_10036C6B4 + 4 * byte_1009974E0[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    v8 = sub_1000BA294(&qword_100BC5F48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      v16 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    v17 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[9];
    v22 = a3[10];
    v23 = (uint64_t *)((char *)a1 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    v26 = a3[11];
    v27 = a3[12];
    v28 = *(void **)((char *)a2 + v26);
    *(uint64_t *)((char *)a1 + v26) = (uint64_t)v28;
    *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
    swift_bridgeObjectRetain(v25);
    v29 = v28;
  }
  return a1;
}

void sub_10036C958(id *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for PreviewLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload(a1))
    {
      case 0u:
        v5 = type metadata accessor for Location(0);
        goto LABEL_5;
      case 1u:
        v5 = type metadata accessor for LocationOfInterest(0);
LABEL_5:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      case 2u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
        v7 = type metadata accessor for Location(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  v8 = (uint64_t)a1 + a2[6];
  v9 = type metadata accessor for Location(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = (char *)a1 + a2[8];
  v11 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();

}

char *sub_10036CAE0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  v6 = type metadata accessor for PreviewLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_10036CB78 + 4 * byte_1009974E8[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = sub_1000BA294(&qword_100BC5F48);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Location(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    v14 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  v15 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[9];
  v20 = a3[10];
  v21 = &a1[v19];
  v22 = &a2[v19];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  a1[v20] = a2[v20];
  v24 = a3[11];
  v25 = a3[12];
  v26 = *(void **)&a2[v24];
  *(_QWORD *)&a1[v24] = v26;
  a1[v25] = a2[v25];
  swift_bridgeObjectRetain(v23);
  v27 = v26;
  return a1;
}

char *sub_10036CE1C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;

  v6 = type metadata accessor for PreviewLocation(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_10036CEA8 + 4 * byte_1009974EC[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_10036D3E8((uint64_t)a1);
LABEL_6:
    v10 = sub_1000BA294(&qword_100BC5F48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_10036D3E8((uint64_t)a1);
    v11 = (char *)&loc_10036CF40 + 4 * byte_1009974F0[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
LABEL_9:
  a1[a3[5]] = a2[a3[5]];
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Location(0);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!v16)
  {
    v18 = *(_QWORD *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_14;
  }
  if (v17)
  {
LABEL_14:
    v19 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
LABEL_15:
  a1[a3[7]] = a2[a3[7]];
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  v28 = a3[11];
  v29 = *(void **)&a1[v28];
  v30 = *(void **)&a2[v28];
  *(_QWORD *)&a1[v28] = v30;
  v31 = v30;

  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t sub_10036D3E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PreviewLocation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_10036D424(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for PreviewLocation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BC5F48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    goto LABEL_15;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v13 = type metadata accessor for SearchLocation(0);
      v14 = *(int *)(v13 + 32);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v20 = *(int *)(v13 + 36);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      *(_OWORD *)v21 = *(_OWORD *)v22;
      v21[16] = v22[16];
      v10 = a1;
      v11 = v6;
      v12 = 2;
      goto LABEL_13;
    case 1:
      v19 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v10 = a1;
      v11 = v6;
      v12 = 1;
      goto LABEL_13;
    case 0:
      v9 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = a1;
      v11 = v6;
      v12 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_14:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_15:
  v23 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = type metadata accessor for Location(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    v27 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  v28 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  v32 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v32) = *((_BYTE *)a2 + v32);
  v33 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
  return a1;
}

uint64_t sub_10036D708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;

  v6 = type metadata accessor for PreviewLocation(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v20 = type metadata accessor for SearchLocation(0);
        v21 = *(int *)(v20 + 32);
        v22 = (void *)(a1 + v21);
        v23 = (const void *)(a2 + v21);
        v24 = type metadata accessor for Location(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
        {
          v25 = sub_1000BA294(&qword_100BC35F8);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
        }
        v34 = *(int *)(v20 + 36);
        v35 = a1 + v34;
        v36 = a2 + v34;
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
        v11 = a1;
        v12 = v6;
        v13 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v26 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        v11 = a1;
        v12 = v6;
        v13 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_27:
          _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v6);
          goto LABEL_31;
        }
        v10 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = a1;
        v12 = v6;
        v13 = 0;
      }
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      goto LABEL_27;
    }
    goto LABEL_9;
  }
  if (v8)
  {
    sub_10036D3E8(a1);
LABEL_9:
    v14 = *(_QWORD *)(sub_1000BA294(&qword_100BC5F48) - 8);
LABEL_10:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v14 + 64));
    goto LABEL_31;
  }
  if (a1 == a2)
    goto LABEL_31;
  sub_10036D3E8(a1);
  v15 = swift_getEnumCaseMultiPayload(a2);
  if (v15 == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v27 = type metadata accessor for SearchLocation(0);
    v28 = *(int *)(v27 + 32);
    v29 = (void *)(a1 + v28);
    v30 = (const void *)(a2 + v28);
    v31 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      v32 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    v37 = *(int *)(v27 + 36);
    v38 = a1 + v37;
    v39 = a2 + v37;
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
    v17 = a1;
    v18 = v6;
    v19 = 2;
  }
  else if (v15 == 1)
  {
    v33 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(a1, a2, v33);
    v17 = a1;
    v18 = v6;
    v19 = 1;
  }
  else
  {
    if (v15)
    {
      v14 = *(_QWORD *)(v6 - 8);
      goto LABEL_10;
    }
    v16 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
    v17 = a1;
    v18 = v6;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
LABEL_31:
  v40 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = type metadata accessor for Location(0);
  v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v43);
  v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43);
  if (!v44)
  {
    v46 = *(_QWORD *)(v43 - 8);
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v46 + 40))(v41, v42, v43);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v41, v43);
    goto LABEL_36;
  }
  if (v45)
  {
LABEL_36:
    v47 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
LABEL_37:
  v48 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
  v52 = a3[9];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (uint64_t *)(a2 + v52);
  v56 = *v54;
  v55 = v54[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  v57 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v58 = *(void **)(a1 + v57);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);

  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10036DBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036DBF0);
}

uint64_t sub_10036DBF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v15;

  sub_1000BA294(&qword_100BC5F48);
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  sub_1000BA294(&qword_100BC35F8);
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[6];
LABEL_10:
    v8 = a1 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  type metadata accessor for WeatherMapOverlayKind(0);
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[8];
    goto LABEL_10;
  }
  v15 = *(_QWORD *)(a1 + a3[9] + 8);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t sub_10036DCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036DCB4);
}

void sub_10036DCB4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000BA294(&qword_100BC5F48);
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_1000BA294(&qword_100BC35F8);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[6];
    }
    else
    {
      type metadata accessor for WeatherMapOverlayKind(0);
      sub_10009D2E8();
      if (!v13)
      {
        *(_QWORD *)(a1 + a4[9] + 8) = (a2 - 1);
        return;
      }
      v8 = v14;
      v12 = a4[8];
    }
    v9 = a1 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v9, a2, a2, v8);
}

uint64_t type metadata accessor for WeatherMenuViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDB270;
  if (!qword_100BDB270)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WeatherMenuViewModel);
  return result;
}

void sub_10036DDA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[9];

  sub_1001345CC(319, (unint64_t *)&unk_100BDB280, type metadata accessor for PreviewLocation);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100997518;
    sub_1001345CC(319, (unint64_t *)&qword_100BCE908, (uint64_t (*)(uint64_t))&type metadata accessor for Location);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = &unk_100997530;
      v6 = type metadata accessor for WeatherMapOverlayKind(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        v8[5] = &unk_100997548;
        v8[6] = &unk_100997530;
        v8[7] = &unk_100997560;
        v8[8] = &unk_100997530;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_10036DE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  char v36;
  char v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v76 = type metadata accessor for Location(0);
  v73 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  sub_100088FDC();
  v71 = v4;
  v74 = sub_1000BA294(&qword_100BCE968);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v75 = v6;
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v72 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v78 = (uint64_t)&v70 - v10;
  __chkstk_darwin(v11);
  v79 = (uint64_t)&v70 - v12;
  type metadata accessor for PreviewLocation(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BDB2D8);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BC5F48);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v70 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v70 - v27;
  v77 = a1;
  sub_1000C5D94(a1, (uint64_t)&v70 - v27);
  v29 = a2;
  sub_1000C5D94(a2, (uint64_t)v25);
  v30 = (uint64_t)&v19[*(int *)(v16 + 48)];
  sub_1000C5D94((uint64_t)v28, (uint64_t)v19);
  sub_1000C5D94((uint64_t)v25, v30);
  sub_1000B489C((uint64_t)v19);
  if (v31)
  {
    sub_1000BC08C((uint64_t)v25);
    sub_1000BC08C((uint64_t)v28);
    sub_1000B489C(v30);
    if (v31)
    {
      sub_100021AA4((uint64_t)v19, &qword_100BC5F48);
      goto LABEL_14;
    }
LABEL_9:
    v32 = &qword_100BDB2D8;
    v33 = (uint64_t)v19;
LABEL_10:
    sub_100021AA4(v33, v32);
LABEL_11:
    v34 = 0;
    return v34 & 1;
  }
  sub_10007EBC8((uint64_t)v19, (uint64_t)v22, &qword_100BC5F48);
  sub_1000B489C(v30);
  if (v31)
  {
    sub_1000C2428((uint64_t)v25);
    sub_1000C2428((uint64_t)v28);
    sub_10036D3E8((uint64_t)v22);
    goto LABEL_9;
  }
  sub_10036E578(v30, (uint64_t)v15);
  sub_10063001C((uint64_t)v22, (uint64_t)v15);
  v37 = v36;
  sub_10036D3E8((uint64_t)v15);
  sub_1000BC08C((uint64_t)v25);
  sub_1000BC08C((uint64_t)v28);
  sub_10036D3E8((uint64_t)v22);
  sub_1000BC08C((uint64_t)v19);
  if ((v37 & 1) == 0)
    goto LABEL_11;
LABEL_14:
  v38 = type metadata accessor for WeatherMenuViewModel(0);
  v39 = (int *)v38;
  v40 = *(int *)(v38 + 20);
  v41 = v77;
  v42 = *(unsigned __int8 *)(v77 + v40);
  v43 = a2;
  v44 = *(unsigned __int8 *)(a2 + v40);
  if (v42 == 2)
  {
    v46 = v75;
    v45 = v76;
    v48 = v78;
    v47 = v79;
    if (v44 != 2)
      goto LABEL_11;
  }
  else
  {
    v34 = 0;
    v49 = (v42 & 1) == 0;
    v46 = v75;
    v45 = v76;
    v48 = v78;
    v47 = v79;
    if (v44 == 2 || ((v49 ^ v44) & 1) == 0)
      return v34 & 1;
  }
  sub_1000C3918(v77 + *(int *)(v38 + 24), v47);
  sub_1000C3918(v29 + v39[6], v48);
  v50 = v46 + *(int *)(v74 + 48);
  sub_1000C3918(v47, v46);
  sub_1000C3918(v48, v50);
  sub_1000CCBD8(v46);
  if (v31)
  {
    sub_1000C28AC(v48);
    sub_1000C28AC(v47);
    sub_1000CCBD8(v50);
    if (v31)
    {
      sub_100021AA4(v46, &qword_100BC35F8);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  v51 = v72;
  sub_10007EBC8(v46, v72, &qword_100BC35F8);
  sub_1000CCBD8(v50);
  if (v52)
  {
    sub_1000C2428(v48);
    sub_1000C2428(v47);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v51, v45);
LABEL_27:
    v32 = &qword_100BCE968;
    v33 = v46;
    goto LABEL_10;
  }
  v53 = v73;
  v54 = v71;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v71, v50, v45);
  sub_100086DA4((unint64_t *)&qword_100BC35B8, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  v56 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v54, v45, v55);
  v57 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v57(v54, v45);
  sub_1000C28AC(v78);
  sub_1000C28AC(v79);
  v57(v51, v45);
  sub_1000C28AC(v46);
  if ((v56 & 1) == 0)
    goto LABEL_11;
LABEL_29:
  if (*(unsigned __int8 *)(v41 + v39[7]) != *(unsigned __int8 *)(v43 + v39[7])
    || (static WeatherMapOverlayKind.== infix(_:_:)(v41 + v39[8], v43 + v39[8]) & 1) == 0)
  {
    goto LABEL_11;
  }
  v58 = v39[9];
  v59 = *(_QWORD *)(v41 + v58);
  v60 = *(_QWORD *)(v41 + v58 + 8);
  v61 = (_QWORD *)(v43 + v58);
  v62 = v59 == *v61 && v60 == v61[1];
  if (v62 || (v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v60, *v61), v34 = 0, (v63 & 1) != 0))
  {
    if (*(unsigned __int8 *)(v41 + v39[10]) == *(unsigned __int8 *)(v43 + v39[10]))
    {
      v64 = v39[11];
      v65 = *(void **)(v41 + v64);
      v66 = *(void **)(v43 + v64);
      if (v65)
      {
        if (v66)
        {
          sub_100113B0C();
          v67 = v66;
          v68 = v65;
          v69 = static NSObject.== infix(_:_:)(v68, v67);

          if ((v69 & 1) != 0)
            goto LABEL_42;
        }
      }
      else if (!v66)
      {
LABEL_42:
        v34 = *(_BYTE *)(v41 + v39[12]) ^ *(_BYTE *)(v43 + v39[12]) ^ 1;
        return v34 & 1;
      }
    }
    goto LABEL_11;
  }
  return v34 & 1;
}

uint64_t sub_10036E45C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BDB2E0);
  a1[4] = sub_10036E5BC();
  sub_10005F164(a1);
  v3 = type metadata accessor for WeatherMenuViewModel(0);
  return ShortDescription.init(name:_:)(0xD000000000000014, 0x80000001009974E0, v2, v3);
}

uint64_t sub_10036E4F8@<X0>(_QWORD *a1@<X8>)
{
  return sub_10036E45C(a1);
}

uint64_t sub_10036E50C(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BDB2F0, type metadata accessor for WeatherMenuViewModel, (uint64_t)&unk_1009975A0);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_10036E54C()
{
  sub_100086DA4(&qword_100BDB2D0, type metadata accessor for WeatherMenuViewModel, (uint64_t)&unk_100997578);
}

uint64_t sub_10036E578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10036E5BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDB2E8;
  if (!qword_100BDB2E8)
  {
    v1 = sub_100075EB0(&qword_100BDB2E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDB2E8);
  }
  return result;
}

uint64_t *sub_10036E600(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v16;
    v17 = (uint64_t)a1 + v13 + 8;
    v18 = *(uint64_t *)((char *)a2 + v13 + 16);
    swift_bridgeObjectRetain(v16);
    if (!v18)
    {
      v21 = *(_OWORD *)(v15 + 24);
      *(_OWORD *)v17 = *(_OWORD *)(v15 + 8);
      *(_OWORD *)(v17 + 16) = v21;
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(v15 + 40);
      *(_BYTE *)(v17 + 48) = v15[56];
      return a1;
    }
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v18;
    v19 = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 4) = v19;
    v20 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v20;
    v14[56] = v15[56];
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
  }
  swift_retain();
  return a1;
}

double sub_10036E74C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  double result;

  sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    v4 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release(*a1);
  }
  v5 = (char *)a1 + *(int *)(a2 + 20);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if (*((_QWORD *)v5 + 2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(*((_QWORD *)v5 + 6)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_10036E7E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v14;
  v15 = (uint64_t)a1 + v11 + 8;
  v16 = *(_QWORD *)((char *)a2 + v11 + 16);
  swift_bridgeObjectRetain(v14);
  if (v16)
  {
    *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
    *((_QWORD *)v12 + 2) = v16;
    v17 = *((_QWORD *)v13 + 4);
    *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
    *((_QWORD *)v12 + 4) = v17;
    v18 = *((_QWORD *)v13 + 6);
    *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
    *((_QWORD *)v12 + 6) = v18;
    v12[56] = v13[56];
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    swift_retain();
  }
  else
  {
    v19 = *(_OWORD *)(v13 + 24);
    *(_OWORD *)v15 = *(_OWORD *)(v13 + 8);
    *(_OWORD *)(v15 + 16) = v19;
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v13 + 40);
    *(_BYTE *)(v15 + 48) = v13[56];
  }
  return a1;
}

_QWORD *sub_10036E90C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BC37D8);
    v6 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  v15 = v12 + 8;
  v16 = (__int128 *)(v13 + 8);
  v17 = *((_QWORD *)v13 + 2);
  if (*((_QWORD *)v12 + 2))
  {
    if (v17)
    {
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      v18 = *((_QWORD *)v13 + 2);
      *((_QWORD *)v12 + 2) = v18;
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRelease();
      *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
      v19 = *((_QWORD *)v13 + 4);
      *((_QWORD *)v12 + 4) = v19;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRelease();
      *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
      v20 = *((_QWORD *)v12 + 6);
      *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
      swift_retain();
      swift_release(v20);
      v12[56] = v13[56];
    }
    else
    {
      sub_10036EB00((_QWORD *)v12 + 1);
      v24 = *(_OWORD *)(v13 + 24);
      v23 = *(_OWORD *)(v13 + 40);
      v25 = *v16;
      v12[56] = v13[56];
      *(_OWORD *)(v12 + 24) = v24;
      *(_OWORD *)(v12 + 40) = v23;
      *v15 = v25;
    }
  }
  else if (v17)
  {
    *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
    v21 = *((_QWORD *)v13 + 2);
    *((_QWORD *)v12 + 2) = v21;
    *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
    v22 = *((_QWORD *)v13 + 4);
    *((_QWORD *)v12 + 4) = v22;
    *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
    *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
    v12[56] = v13[56];
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_retain();
  }
  else
  {
    v26 = *v16;
    v27 = *(_OWORD *)(v13 + 24);
    v28 = *(_OWORD *)(v13 + 40);
    v12[56] = v13[56];
    *(_OWORD *)(v12 + 24) = v27;
    *(_OWORD *)(v12 + 40) = v28;
    *v15 = v26;
  }
  return a1;
}

_QWORD *sub_10036EB00(_QWORD *a1)
{
  sub_100689840(a1);
  return a1;
}

char *sub_10036EB34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;

  v6 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *(_OWORD *)(v9 + 41) = *(_OWORD *)(v10 + 41);
  return a1;
}

char *sub_10036EBF4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BC37D8);
    v6 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)v9 + 2))
    goto LABEL_9;
  v11 = *((_QWORD *)v10 + 2);
  if (!v11)
  {
    sub_10036EB00((_QWORD *)v9 + 1);
LABEL_9:
    v14 = *(_OWORD *)(v10 + 24);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
    *(_OWORD *)(v9 + 24) = v14;
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
    v9[56] = v10[56];
    return a1;
  }
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  *((_QWORD *)v9 + 2) = v11;
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)v10 + 4);
  *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
  *((_QWORD *)v9 + 4) = v12;
  swift_bridgeObjectRelease();
  *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
  v13 = *((_QWORD *)v9 + 6);
  *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
  swift_release(v13);
  v9[56] = v10[56];
  return a1;
}

uint64_t sub_10036ED44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036ED50);
}

uint64_t sub_10036ED50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1000BA294((uint64_t *)&unk_100C09CA0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_10036EDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036EDD8);
}

uint64_t sub_10036EDD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1000BA294((uint64_t *)&unk_100C09CA0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ComparisonBarChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDB370;
  if (!qword_100BDB370)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ComparisonBarChartView);
  return result;
}

void sub_10036EE88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100158DB0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "9";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_10036EEF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1F08, 1);
}

BOOL sub_10036EF08(__n128 a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for LayoutSubviews(0, a1);
  sub_100372F88(&qword_100BD0218, v2);
  v4 = v3;
  dispatch thunk of Collection.startIndex.getter(v1, v3);
  dispatch thunk of Collection.endIndex.getter(v1, v4);
  return v7 == v6;
}

void sub_10036EF80()
{
  qword_100BDB2F8 = 0x4038000000000000;
}

void sub_10036EF90()
{
  qword_100BDB300 = 0x4030000000000000;
}

void sub_10036EFA0()
{
  qword_100BDB308 = 0x4010000000000000;
}

void sub_10036EFB0()
{
  qword_100BDB310 = 0x4018000000000000;
}

void sub_10036EFC0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int v15;
  void (*v22)(_BYTE *, uint64_t);
  __n128 v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _BYTE v76[12];
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;

  v98 = a1;
  v2 = sub_1000BA294(&qword_100BDB3A8);
  __chkstk_darwin(v2);
  v4 = &v76[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1000BA294(&qword_100BDB3B0);
  __chkstk_darwin(v5);
  v7 = &v76[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ContentSizeCategory(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v76[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v76[-v13];
  sub_100109D64();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v14, v8);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 88))(v11, v8);
  if (v15 == enum case for ContentSizeCategory.extraSmall(_:)
    || v15 == enum case for ContentSizeCategory.small(_:)
    || v15 == enum case for ContentSizeCategory.medium(_:)
    || v15 == enum case for ContentSizeCategory.large(_:)
    || v15 == enum case for ContentSizeCategory.extraLarge(_:)
    || v15 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    goto LABEL_41;
  }
  v22 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  if (v15 != enum case for ContentSizeCategory.accessibilityMedium(_:)
    && v15 != enum case for ContentSizeCategory.accessibilityLarge(_:)
    && v15 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
    && v15 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
    && v15 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    v22(v11, v8);
LABEL_41:
    sub_1000C28B4();
    sub_10036F5B4(v1);
    sub_100037794((uint64_t)v4, (uint64_t)v7, &qword_100BDB3A8);
    swift_storeEnumTagMultiPayload(v7, v5, 1);
    v72 = sub_1000BA294(&qword_100BDB3B8);
    sub_10003D2DC(&qword_100BDB3C0, &qword_100BDB3B8);
    v74 = v73;
    v75 = sub_100372780();
    _ConditionalContent<>.init(storage:)(v7, v72, v2, v74, v75);
    sub_100021AA4((uint64_t)v4, &qword_100BDB3A8);
    return;
  }
  sub_1000C28B4();
  v28 = static Axis.Set.horizontal.getter(v27);
  v29 = v28;
  v30 = static Axis.Set.vertical.getter(v28);
  v31 = Axis.Set.init(rawValue:)(0);
  v32 = Axis.Set.init(rawValue:)(v31);
  if (Axis.Set.init(rawValue:)(v32 & v29) != v29)
    v31 = Axis.Set.init(rawValue:)(v31 | v29);
  v33 = Axis.Set.init(rawValue:)(v31);
  if (Axis.Set.init(rawValue:)(v33 & v30) != v30)
    LODWORD(v31) = Axis.Set.init(rawValue:)(v31 | v30);
  v83 = v31;
  v34 = *(int *)(sub_1000B48B8() + 20);
  v84 = v5;
  v35 = (uint64_t *)(v1 + v34);
  v36 = *(_QWORD *)(v1 + v34);
  v97 = v35[1];
  v37 = v35[2];
  v38 = v35[3];
  v39 = v35[4];
  v40 = v35[5];
  v88 = v35[6];
  v89 = v37;
  v41 = *((unsigned __int8 *)v35 + 56);
  KeyPath = swift_getKeyPath(&unk_100997680);
  v82 = KeyPath;
  v43 = *v35;
  v86 = v35[1];
  v87 = v43;
  v44 = v35[2];
  v95 = v35[3];
  v96 = v44;
  v45 = v35[4];
  v85 = v2;
  v93 = v35[5];
  v94 = v45;
  v92 = v35[6];
  v91 = *((unsigned __int8 *)v35 + 56);
  v46 = swift_getKeyPath(&unk_100997680);
  v90 = v46;
  v100 = 0;
  v99 = 0;
  sub_10008D47C(KeyPath, 0);
  v47 = v36;
  v81 = v36;
  swift_bridgeObjectRetain(v36);
  v48 = v89;
  v80 = v38;
  v79 = v39;
  v78 = v40;
  v77 = v41;
  sub_100238738(v97, v89, v38, v39, v40, v88);
  sub_10008D47C(v46, 0);
  v49 = v87;
  swift_bridgeObjectRetain(v87);
  v50 = v86;
  sub_100238738(v86, v96, v95, v94, v93, v92);
  swift_bridgeObjectRetain(v47);
  sub_1000C3920(v97, v48, v38);
  swift_bridgeObjectRetain(v49);
  v52 = v95;
  v51 = v96;
  v54 = v93;
  v53 = v94;
  v55 = v92;
  sub_100238738(v50, v96, v95, v94, v93, v92);
  sub_1000B15F8(v90, 0);
  swift_bridgeObjectRelease();
  sub_100238858(v50, v51, v52, v53, v54, v55);
  v56 = v82;
  sub_1000B15F8(v82, 0);
  v57 = v81;
  swift_bridgeObjectRelease();
  v58 = v97;
  v60 = v88;
  v59 = v89;
  v61 = v80;
  v62 = v79;
  v63 = v78;
  v64 = v77;
  sub_100238858(v97, v89, v80, v79, v78, v88);
  *v7 = v83;
  *((_QWORD *)v7 + 1) = v56;
  v7[16] = 0;
  *((_QWORD *)v7 + 3) = v57;
  *((_QWORD *)v7 + 4) = v58;
  *((_QWORD *)v7 + 5) = v59;
  *((_QWORD *)v7 + 6) = v61;
  *((_QWORD *)v7 + 7) = v62;
  *((_QWORD *)v7 + 8) = v63;
  *((_QWORD *)v7 + 9) = v60;
  v7[80] = v64;
  *((_QWORD *)v7 + 11) = v90;
  v7[96] = 0;
  v65 = v86;
  *((_QWORD *)v7 + 13) = v87;
  *((_QWORD *)v7 + 14) = v65;
  v66 = v95;
  *((_QWORD *)v7 + 15) = v96;
  *((_QWORD *)v7 + 16) = v66;
  v67 = v93;
  *((_QWORD *)v7 + 17) = v94;
  *((_QWORD *)v7 + 18) = v67;
  *((_QWORD *)v7 + 19) = v92;
  v7[160] = v91;
  swift_storeEnumTagMultiPayload(v7, v84, 0);
  v68 = sub_1000BA294(&qword_100BDB3B8);
  sub_10003D2DC(&qword_100BDB3C0, &qword_100BDB3B8);
  v70 = v69;
  v71 = sub_100372780();
  _ConditionalContent<>.init(storage:)(v7, v68, v85, v70, v71);
}

uint64_t sub_10036F5B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for ComparisonBarChartView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v18 = *(_QWORD *)(a1 + *(int *)(v5 + 20));
  v6 = v18;
  KeyPath = swift_getKeyPath(&unk_1009976A8);
  sub_10000AB54(a1, (uint64_t)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ComparisonBarChartView);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_100B6ED90, v9 + v4, v8 | 7);
  sub_100372950((uint64_t)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  swift_bridgeObjectRetain(v6);
  v11 = sub_1000BA294(&qword_100BDB400);
  v12 = sub_1000BA294(&qword_100BDB3F8);
  sub_10003D2DC(&qword_100BDB408, &qword_100BDB400);
  v14 = v13;
  sub_10003D2DC(&qword_100BDB3F0, &qword_100BDB3F8);
  return ForEach<>.init(_:id:content:)(&v18, KeyPath, sub_100372994, v10, v11, v12, v14, &protocol witness table for String, v15);
}

uint64_t sub_10036F728@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  unsigned __int8 v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  double v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _DWORD v149[2];
  _DWORD v150[2];
  _DWORD v151[2];
  _DWORD v152[2];
  _QWORD v153[16];
  __int128 v154;
  char v155;
  _BYTE v156[7];
  uint64_t v157;
  uint64_t v158;
  char v159;
  _BYTE v160[7];
  uint64_t v161;
  char v162;
  _BYTE v163[7];
  uint64_t v164;
  uint64_t v165;
  char v166;
  _BYTE v167[7];
  double v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  unsigned __int8 v173;
  _BYTE v174[7];
  _BYTE v175[7];
  unsigned __int8 v176;
  _BYTE v177[7];
  unsigned __int8 v178;
  _BYTE v179[7];
  unsigned __int8 v180;
  uint64_t v181;
  unsigned __int8 v182;
  uint64_t v183;
  unsigned __int8 v184;
  uint64_t v185;
  uint64_t v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  char v190;

  v139 = a3;
  v5 = type metadata accessor for Font.TextStyle(0);
  v135 = *(_QWORD *)(v5 - 8);
  v136 = v5;
  __chkstk_darwin(v5);
  v134 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v125);
  *(_QWORD *)&v138 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1000BA294(&qword_100BDB410);
  __chkstk_darwin(v128);
  v130 = (uint64_t)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1000BA294(&qword_100BDB418);
  __chkstk_darwin(v127);
  v132 = (uint64_t)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1000BA294(&qword_100BDB420);
  __chkstk_darwin(v126);
  v131 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1000BA294(&qword_100BDB428);
  __chkstk_darwin(v129);
  v148 = (uint64_t)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v147 = (uint64_t)&v124 - v13;
  v14 = a1[1];
  v187 = *a1;
  v15 = a1[2];
  v188 = v14;
  v189 = v15;
  v190 = *((_BYTE *)a1 + 48);
  v16 = a2 + *(int *)(type metadata accessor for ComparisonBarChartView(0) + 20);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = 1.0;
  v133 = v16;
  if (v17)
  {
    v19 = *(double *)(v16 + 40);
    if (v19 > 0.0)
      v18 = *(double *)&v189 / v19;
  }
  v20 = *((_QWORD *)&v187 + 1);
  v154 = v187;
  v21 = sub_100114EF8();
  swift_bridgeObjectRetain(v20);
  v124 = v21;
  v22 = Text.init<A>(_:)(&v154, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = static Font.subheadline.getter(v22);
  v30 = Text.font(_:)(v29, v22, v24, v28, v26);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_release(v29);
  sub_1000D31B4(v22, v24, v28);
  swift_bridgeObjectRelease();
  LODWORD(v154) = static HierarchicalShapeStyle.primary.getter(v37);
  v137 = Text.foregroundStyle<A>(_:)(&v154, v30, v32, v34 & 1, v36, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v145 = v38;
  v146 = v39;
  v41 = v40;
  sub_1000D31B4(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  if (qword_100BC1FC8 != -1)
    v42 = swift_once(&qword_100BC1FC8, sub_10036EF80);
  v43 = qword_100BDB2F8;
  static Alignment.center.getter(v42);
  v44 = _FrameLayout.init(width:height:alignment:)(0, 1, v43, 0);
  v45 = v182;
  v140 = v181;
  v141 = v183;
  v46 = v184;
  v143 = v186;
  v144 = v185;
  v142 = static Edge.Set.leading.getter(v44);
  if (qword_100BC1FE0 != -1)
    swift_once(&qword_100BC1FE0, sub_10036EFB0);
  v47 = EdgeInsets.init(_all:)(*(double *)&qword_100BDB310);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v180 = v41 & 1;
  v178 = v45;
  v176 = v46;
  v173 = 0;
  v54 = v138;
  v55 = (char *)(*(_QWORD *)&v138 + *(int *)(v125 + 20));
  v56 = enum case for RoundedCornerStyle.continuous(_:);
  v57 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v55, v56, v57);
  __asm { FMOV            V0.2D, #4.0 }
  **(_OWORD **)&v54 = _Q0;
  v63 = *((_QWORD *)&v189 + 1);
  v64 = v130;
  sub_10000AB54(*(uint64_t *)&v54, v130, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)(v64 + *(int *)(v128 + 36)) = v63;
  swift_retain();
  sub_1003729DC(*(uint64_t *)&v54);
  v65 = v132;
  sub_100037794(v64, v132, &qword_100BDB410);
  v66 = *(int *)(v127 + 36);
  v138 = v18;
  *(double *)(v65 + v66) = v18;
  sub_100021AA4(v64, &qword_100BDB410);
  v68 = static Alignment.leading.getter(v67);
  v70 = v69;
  v71 = (uint64_t)v131;
  v72 = (uint64_t)&v131[*(int *)(v126 + 36)];
  sub_100370098((uint64_t)&v187, v72);
  v73 = (uint64_t *)(v72 + *(int *)(sub_1000BA294(&qword_100BDB430) + 36));
  *v73 = v68;
  v73[1] = v70;
  sub_1000F111C(v65, v71, &qword_100BDB418);
  v74 = v148;
  sub_100037794(v71, v148, &qword_100BDB420);
  *(_WORD *)(v74 + *(int *)(v129 + 36)) = 0;
  sub_100021AA4(v71, &qword_100BDB420);
  sub_1000F111C(v74, v147, &qword_100BDB428);
  v75 = *(double *)&v189;
  v154 = v188;
  swift_bridgeObjectRetain(*((_QWORD *)&v188 + 1));
  v76 = Text.init<A>(_:)(&v154, &type metadata for String, v124);
  v78 = v77;
  v80 = v79;
  v82 = v81 & 1;
  LODWORD(v154) = static HierarchicalShapeStyle.primary.getter(v76);
  v83 = Text.foregroundStyle<A>(_:)(&v154, v76, v78, v82, v80, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v85 = v84;
  v87 = v86;
  v89 = v88 & 1;
  sub_1000D31B4(v76, v78, v82);
  v90 = swift_bridgeObjectRelease();
  v92 = v134;
  v91 = v135;
  v93 = v136;
  v94 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v135 + 104))(v134, enum case for Font.TextStyle.title3(_:), v136, v90);
  static Font.Weight.semibold.getter(v94);
  v95 = static Font.system(_:weight:)(v92);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
  v96 = Text.font(_:)(v95, v83, v85, v89, v87);
  v134 = v97;
  v135 = v96;
  v99 = v98;
  v136 = v100;
  swift_release(v95);
  sub_1000D31B4(v83, v85, v89);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v133 + 16))
    LODWORD(v133) = v75 == *(double *)(v133 + 40);
  else
    LODWORD(v133) = 0;
  LODWORD(v132) = static Edge.Set.leading.getter(v101);
  if (qword_100BC1FD8 != -1)
    swift_once(&qword_100BC1FD8, sub_10036EFA0);
  v102 = v99 & 1;
  v103 = EdgeInsets.init(_all:)(*(double *)&qword_100BDB308);
  v105 = v104;
  v107 = v106;
  v109 = v108;
  v110 = v180;
  LODWORD(v128) = v180;
  v152[0] = *(_DWORD *)v179;
  *(_DWORD *)((char *)v152 + 3) = *(_DWORD *)&v179[3];
  v111 = v178;
  LODWORD(v129) = v178;
  v151[0] = *(_DWORD *)v177;
  *(_DWORD *)((char *)v151 + 3) = *(_DWORD *)&v177[3];
  v112 = v176;
  LODWORD(v130) = v176;
  v150[0] = *(_DWORD *)v175;
  *(_DWORD *)((char *)v150 + 3) = *(_DWORD *)&v175[3];
  *(_DWORD *)((char *)v149 + 3) = *(_DWORD *)&v174[3];
  v149[0] = *(_DWORD *)v174;
  v113 = v173;
  LODWORD(v131) = v173;
  v115 = v147;
  v114 = v148;
  sub_100037794(v147, v148, &qword_100BDB428);
  v116 = v137;
  v153[0] = v137;
  v153[1] = v145;
  LOBYTE(v153[2]) = v110;
  *(_DWORD *)((char *)&v153[2] + 1) = *(_DWORD *)v179;
  HIDWORD(v153[2]) = *(_DWORD *)&v179[3];
  v153[3] = v146;
  v153[4] = v140;
  LOBYTE(v153[5]) = v111;
  *(_DWORD *)((char *)&v153[5] + 1) = *(_DWORD *)v177;
  HIDWORD(v153[5]) = *(_DWORD *)&v177[3];
  v153[6] = v141;
  LOBYTE(v153[7]) = v112;
  HIDWORD(v153[7]) = *(_DWORD *)&v175[3];
  *(_DWORD *)((char *)&v153[7] + 1) = *(_DWORD *)v175;
  v153[8] = v144;
  v153[9] = v143;
  LOBYTE(v153[10]) = v142;
  HIDWORD(v153[10]) = *(_DWORD *)&v174[3];
  *(_DWORD *)((char *)&v153[10] + 1) = *(_DWORD *)v174;
  *(double *)&v153[11] = v47;
  v153[12] = v49;
  v153[13] = v51;
  v153[14] = v53;
  LOBYTE(v153[15]) = v113;
  v117 = v139;
  memcpy(v139, v153, 0x79uLL);
  v118 = sub_1000BA294(&qword_100BDB438);
  sub_100037794(v114, (uint64_t)&v117[*(int *)(v118 + 48)], &qword_100BDB428);
  v119 = &v117[*(int *)(v118 + 64)];
  v120 = (uint64_t)v134;
  v121 = v135;
  *(_QWORD *)v119 = v135;
  *((_QWORD *)v119 + 1) = v120;
  v119[16] = v102;
  v122 = v136;
  *((_QWORD *)v119 + 3) = v136;
  v119[32] = v133;
  *((double *)v119 + 5) = v138;
  v119[48] = v132;
  *((double *)v119 + 7) = v103;
  *((_QWORD *)v119 + 8) = v105;
  *((_QWORD *)v119 + 9) = v107;
  *((_QWORD *)v119 + 10) = v109;
  v119[88] = 0;
  sub_10030CA34((uint64_t)v153);
  sub_1000D55D4(v121, v120, v102);
  swift_bridgeObjectRetain(v122);
  sub_100021AA4(v115, &qword_100BDB428);
  sub_1000D31B4(v121, v120, v102);
  swift_bridgeObjectRelease();
  sub_100021AA4(v114, &qword_100BDB428);
  *(_QWORD *)&v154 = v116;
  *((_QWORD *)&v154 + 1) = v145;
  v155 = v128;
  *(_DWORD *)v156 = v152[0];
  *(_DWORD *)&v156[3] = *(_DWORD *)((char *)v152 + 3);
  v157 = v146;
  v158 = v140;
  v159 = v129;
  *(_DWORD *)v160 = v151[0];
  *(_DWORD *)&v160[3] = *(_DWORD *)((char *)v151 + 3);
  v161 = v141;
  v162 = v130;
  *(_DWORD *)&v163[3] = *(_DWORD *)((char *)v150 + 3);
  *(_DWORD *)v163 = v150[0];
  v164 = v144;
  v165 = v143;
  v166 = v142;
  *(_DWORD *)&v167[3] = *(_DWORD *)((char *)v149 + 3);
  *(_DWORD *)v167 = v149[0];
  v168 = v47;
  v169 = v49;
  v170 = v51;
  v171 = v53;
  v172 = (char)v131;
  return sub_10030C9E4((uint64_t)&v154);
}

void sub_100370098(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _BYTE v53[7];
  uint64_t v54;
  char v55;
  _BYTE v56[7];
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _BYTE v62[7];
  uint64_t v63;
  char v64;
  _BYTE v65[7];
  uint64_t v66;
  char v67;
  _BYTE v68[7];
  __int128 v69;
  __int16 v70;
  _BYTE v71[7];
  char v72;
  _BYTE v73[7];
  char v74;
  _BYTE v75[7];
  char v76;
  _BYTE v77[7];
  _BYTE v78[7];
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  __int128 v84;

  v49 = a2;
  v3 = sub_1000BA294(&qword_100BDB440);
  __chkstk_darwin(v3);
  v48 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 8);
  v50 = *(_QWORD *)a1;
  v51 = v5;
  v6 = sub_100114EF8();
  swift_bridgeObjectRetain(v5);
  v7 = Text.init<A>(_:)(&v50, &type metadata for String, v6);
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v14 = static Font.subheadline.getter(v7);
  v15 = Text.font(_:)(v14, v7, v9, v13, v11);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_release(v14);
  sub_1000D31B4(v7, v9, v13);
  v22 = swift_bridgeObjectRelease();
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v24 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    v23 = Color.init(_:)(v24);
  }
  else
  {
    v23 = static Color.secondary.getter(v22);
  }
  v25 = v23;
  v26 = v19 & 1;
  v27 = Text.foregroundColor(_:)(v23, v15, v17, v19 & 1, v21);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release(v25);
  sub_1000D31B4(v15, v17, v26);
  swift_bridgeObjectRelease();
  v35 = static Edge.Set.leading.getter(v34);
  if (qword_100BC1FE0 != -1)
    swift_once(&qword_100BC1FE0, sub_10036EFB0);
  v36 = EdgeInsets.init(_all:)(*(double *)&qword_100BDB310);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  static Alignment.leading.getter(v43);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0, 1);
  v79 = v31 & 1;
  v76 = 0;
  v74 = v81;
  v72 = v83;
  *(_DWORD *)v53 = *(_DWORD *)v78;
  *(_DWORD *)&v53[3] = *(_DWORD *)&v78[3];
  *(_DWORD *)v56 = *(_DWORD *)v77;
  *(_DWORD *)&v56[3] = *(_DWORD *)&v77[3];
  *(_DWORD *)v62 = *(_DWORD *)v75;
  *(_DWORD *)&v62[3] = *(_DWORD *)&v75[3];
  *(_DWORD *)&v65[3] = *(_DWORD *)&v73[3];
  *(_DWORD *)v65 = *(_DWORD *)v73;
  *(_DWORD *)&v68[3] = *(_DWORD *)&v71[3];
  *(_DWORD *)v68 = *(_DWORD *)v71;
  v50 = v27;
  v51 = v29;
  v52 = v31 & 1;
  v54 = v33;
  v55 = v35;
  v57 = v36;
  v58 = v38;
  v59 = v40;
  v60 = v42;
  v61 = 0;
  v63 = v80;
  v64 = v81;
  v66 = v82;
  v67 = v83;
  v69 = v84;
  v70 = 257;
  v44 = sub_1000BA294(&qword_100BDB448);
  v45 = sub_100372A3C(&qword_100BDB450, &qword_100BDB448, (void (*)(void))sub_100372A18);
  v46 = (uint64_t)v48;
  View.accessibility(hidden:)(1, v44, v45);
  sub_1000D31B4(v27, v29, v31 & 1);
  swift_bridgeObjectRelease();
  sub_1000F111C(v46, v49, &qword_100BDB440);
}

void sub_10037045C(_QWORD *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_100370468(uint64_t a1, char a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  double v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[8];
  _BYTE v21[8];

  v9 = type metadata accessor for LayoutSubviews(0, a3);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = 0.0;
  if (sub_10036EF08(v11))
    return v14;
  v15.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v13, a6, v9);
  sub_100372F88(&qword_100BD0218, v15);
  v17 = v16;
  dispatch thunk of Collection.startIndex.getter(v9, v16);
  dispatch thunk of Collection.endIndex.getter(v9, v17);
  v18 = dispatch thunk of Collection.distance(from:to:)(v21, v20, v9, v17) % 3;
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  if (v18)
  {
    __break(1u);
    goto LABEL_11;
  }
  dispatch thunk of Collection.startIndex.getter(v9, v17);
  dispatch thunk of Collection.endIndex.getter(v9, v17);
  dispatch thunk of Collection.distance(from:to:)(v21, v20, v9, v17);
  if (qword_100BC1FD0 != -1)
LABEL_11:
    swift_once(&qword_100BC1FD0, sub_10036EF90);
  if ((a2 & 1) != 0)
    v14 = 10.0;
  else
    v14 = *(double *)&a1;
  if (qword_100BC1FC8 != -1)
    swift_once(&qword_100BC1FC8, sub_10036EF80);
  return v14;
}

uint64_t sub_100370660(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  double (*v60)(char *, uint64_t, char *);
  double (*v61)(char *, uint64_t, char *);
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *);
  uint64_t result;
  double Width;
  void (*v69)(_QWORD, _QWORD, _QWORD);
  __n128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  void (*v75)(double *, _QWORD);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  double v84;
  char *v85;
  void (*v86)(_QWORD, _QWORD, _QWORD);
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(double *, _QWORD);
  double v97;
  char *v98;
  char *v99;
  int v100;
  _QWORD *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  int v112;
  char *v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  double v118;
  double v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  double v125;
  double v126;
  CGFloat v127;
  CGFloat v128;
  CGFloat v129;
  double MinY;
  char *v131;
  void (*v132)(_QWORD, _QWORD, _QWORD);
  uint64_t v133;
  uint64_t *v134;
  char *v135;
  double v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  void (*v144)(double *, _QWORD);
  char *v145;
  char *v146;
  int v147;
  uint64_t *v148;
  char *v149;
  uint64_t (*v150)(char *, char *, uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  CGFloat v167;
  uint64_t v168;
  __n128 v169;
  unint64_t v170;
  __n128 v171;
  double v172;
  unint64_t v173;
  double v174;
  uint64_t v175;
  double MinX;
  double v177;
  uint64_t v178;
  __n128 v179;
  unint64_t v180;
  __n128 v181;
  char *v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  double v188;
  uint64_t v189;
  uint64_t v190;
  double v191;
  uint64_t v192;
  __n128 v193;
  unint64_t v194;
  __n128 v195;
  double v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  char *v206;
  _QWORD *v207;
  double v208;
  char *v209;
  char *v210;
  _QWORD *v211;
  char *v212;
  uint64_t v213;
  double v214;
  char *v215;
  char *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  void (*v220)(char *);
  uint64_t v221;
  void (*v222)(char *, char *);
  double (*v223)(char *, uint64_t, char *);
  char *v224;
  uint64_t v225;
  char *v226;
  double v227[2];
  char v228[8];
  CGRect v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;

  v221 = sub_1000BA294(&qword_100BDB480);
  __chkstk_darwin(v221);
  v209 = (char *)&v197 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BDB488);
  __chkstk_darwin(v15);
  v207 = (uint64_t *)((char *)&v197 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v206 = (char *)&v197 - v18;
  __chkstk_darwin(v19);
  v211 = (uint64_t *)((char *)&v197 - v20);
  __chkstk_darwin(v21);
  v213 = (uint64_t)&v197 - v22;
  v23 = sub_1000BA294(&qword_100BDB490);
  __chkstk_darwin(v23);
  v200 = (char *)&v197 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = sub_1000BA294(&qword_100BDB498);
  __chkstk_darwin(v201);
  v217 = (uint64_t)&v197 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v216 = (char *)&v197 - v27;
  v202 = sub_1000BA294(&qword_100BDB4A0);
  __chkstk_darwin(v202);
  v29 = (char *)&v197 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294(&qword_100BC42D0);
  __chkstk_darwin(v30);
  v210 = (char *)&v197 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  *(_QWORD *)&v214 = (char *)&v197 - v33;
  __chkstk_darwin(v34);
  v36 = (char *)&v197 - v35;
  __chkstk_darwin(v37);
  *(_QWORD *)&v208 = (char *)&v197 - v38;
  v39 = type metadata accessor for LayoutSubview(0);
  v40 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v218 = (char *)&v197 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v204 = (char *)&v197 - v43;
  __chkstk_darwin(v44);
  v212 = (char *)&v197 - v45;
  __chkstk_darwin(v46);
  v205 = (char *)&v197 - v47;
  __chkstk_darwin(v48);
  v215 = (char *)&v197 - v49;
  v51 = __chkstk_darwin(v50);
  v198 = (char *)&v197 - v52;
  v53 = type metadata accessor for LayoutSubviews(0, v51);
  v54 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v224 = (char *)&v197 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __chkstk_darwin(v56);
  v59 = (char *)&v197 - v58;
  v60 = *(double (**)(char *, uint64_t, char *))(v54 + 16);
  v203 = a9;
  v61 = v60;
  v62.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t, __n128))v60)((char *)&v197 - v58, a9, v53, v57);
  sub_100372F88(&qword_100BD0218, v62);
  v64 = v63;
  dispatch thunk of Collection.startIndex.getter(v53, v63);
  dispatch thunk of Collection.endIndex.getter(v53, v64);
  v65 = dispatch thunk of Collection.distance(from:to:)(v227, v228, v53, v64) % 3;
  v197 = v54;
  v66 = *(void (**)(char *, char *))(v54 + 8);
  v226 = (char *)v53;
  v222 = v66;
  result = ((uint64_t (*)(char *, uint64_t))v66)(v59, v53);
  if (!v65)
  {
    v229.origin.x = a1;
    v229.origin.y = a2;
    v229.size.width = a3;
    v229.size.height = a4;
    Width = CGRectGetWidth(v229);
    v69 = (void (*)(_QWORD, _QWORD, _QWORD))v226;
    v70.n128_f64[0] = v61(v224, v203, v226);
    sub_100372F88(&qword_100BDB4A8, v70);
    v199 = v71;
    dispatch thunk of Sequence.makeIterator()(v69, v71);
    v72 = &v29[*(int *)(v202 + 36)];
    v73 = *(char **)v72;
    v74 = v29;
    dispatch thunk of Collection.endIndex.getter(v69, v64);
    if (v73 == *(char **)&v227[0])
    {
LABEL_7:
      v76 = (uint64_t)v29;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 1, 1, v39);
    }
    else
    {
      v223 = v61;
      v225 = v64;
      while (1)
      {
        v73 = v226;
        v75 = (void (*)(double *, _QWORD))dispatch thunk of Collection.subscript.read(v227, v72, v226, v64);
        v220 = *(void (**)(char *))(v40 + 16);
        v220(v36);
        v75(v227, 0);
        v74 = v224;
        v76 = (uint64_t)v29;
        v61(v224, (uint64_t)v29, v73);
        dispatch thunk of Collection.formIndex(after:)(v72, v73, v64);
        v222(v74, v73);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v39);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v39) == 1)
          break;
        v73 = *(char **)(v40 + 32);
        v74 = v215;
        ((void (*)(char *, char *, uint64_t))v73)(v215, v36, v39);
        v61 = (double (*)(char *, uint64_t, char *))sub_100372FBC();
        LayoutSubview.subscript.getter(v227, &type metadata for IsMaxValueText, &type metadata for IsMaxValueText, v61);
        if (LOBYTE(v227[0]) == 1)
          goto LABEL_10;
        (*(void (**)(char *, uint64_t))(v40 + 8))(v74, v39);
        v73 = *(char **)v72;
        v74 = v29;
        v64 = v225;
        dispatch thunk of Collection.endIndex.getter(v226, v225);
        v61 = v223;
        if (v73 == *(char **)&v227[0])
          goto LABEL_7;
      }
    }
    sub_100021AA4(v76, &qword_100BDB4A0);
    v77 = *(_QWORD *)&v208;
    _s7Weather24LocationCompositionStateOwst_0(*(uint64_t *)&v208, 1, 1, v39);
    do
    {
      sub_100021AA4(v77, &qword_100BC42D0);
      __break(1u);
LABEL_10:
      v219 = v40;
      sub_100021AA4(v76, &qword_100BDB4A0);
      v77 = *(_QWORD *)&v208;
      ((void (*)(_QWORD, char *, uint64_t))v73)(*(_QWORD *)&v208, v74, v39);
      _s7Weather24LocationCompositionStateOwst_0(v77, 0, 1, v39);
    }
    while (_s7Weather24LocationCompositionStateOwet_0(v77, 1, v39) == 1);
    v78 = ((uint64_t (*)(char *, uint64_t, uint64_t))v73)(v198, v77, v39);
    v79 = static ProposedViewSize.unspecified.getter(v78);
    v81 = v80 & 1;
    LOBYTE(v227[0]) = v81;
    v228[0] = v82 & 1;
    v84 = LayoutSubview.sizeThatFits(_:)(v79, v81, v83, v82 & 1);
    v208 = Width - v84;
    v85 = v200;
    v86 = (void (*)(_QWORD, _QWORD, _QWORD))v226;
    v223(v200, v203, v226);
    v215 = *(char **)(v197 + 32);
    ((void (*)(char *, char *, _QWORD))v215)(v224, v85, v86);
    v87 = v216;
    dispatch thunk of Sequence.makeIterator()(v86, v199);
    v88 = *(int *)(v201 + 36);
    *(_QWORD *)&v87[v88] = 0;
    v89 = &v87[*(int *)(v202 + 36)];
    v90 = v225;
    while (1)
    {
      v91 = *(_QWORD *)v89;
      dispatch thunk of Collection.endIndex.getter(v226, v90);
      if (v91 == *(_QWORD *)&v227[0])
        break;
      v94 = v88;
      v95 = v226;
      v96 = (void (*)(double *, _QWORD))dispatch thunk of Collection.subscript.read(v227, v89, v226, v90);
      v97 = v214;
      v220(*(char **)&v214);
      v96(v227, 0);
      v92 = *(_QWORD *)&v97;
      v98 = v224;
      v223(v224, (uint64_t)v87, v95);
      dispatch thunk of Collection.formIndex(after:)(v89, v95, v90);
      v99 = v95;
      v88 = v94;
      v222(v98, v99);
      _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v39);
      v100 = _s7Weather24LocationCompositionStateOwet_0(v92, 1, v39);
      v93 = v221;
      if (v100 == 1)
        goto LABEL_15;
      v102 = v205;
      ((void (*)(char *, uint64_t, uint64_t))v73)(v205, v92, v39);
      v103 = &v209[*(int *)(v93 + 48)];
      v104 = v93;
      v105 = v216;
      v106 = *(_QWORD *)&v216[v88];
      result = ((uint64_t (*)(char *, char *, uint64_t))v73)(v103, v102, v39);
      if (__OFADD__(v106, 1))
      {
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      *(_QWORD *)&v105[v88] = v106 + 1;
      v107 = v211;
      v108 = (char *)v211 + *(int *)(v104 + 48);
      *v211 = v106;
      v109 = v103;
      v101 = v107;
      ((void (*)(char *, char *, uint64_t))v73)(v108, v109, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v104);
      v93 = v104;
      v90 = v225;
LABEL_18:
      v110 = (uint64_t)v101;
      v111 = (_QWORD *)v213;
      sub_1000F111C(v110, v213, &qword_100BDB488);
      v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v93);
      v113 = v212;
      if (v112 == 1)
      {
        sub_100021AA4((uint64_t)v216, &qword_100BDB498);
        v127 = a1;
        v230.origin.x = a1;
        v128 = a2;
        v230.origin.y = a2;
        v129 = a3;
        v230.size.width = a3;
        v230.size.height = a4;
        MinY = CGRectGetMinY(v230);
        v131 = v200;
        v132 = (void (*)(_QWORD, _QWORD, _QWORD))v226;
        v223(v200, v203, v226);
        ((void (*)(char *, char *, _QWORD))v215)(v224, v131, v132);
        v133 = v217;
        dispatch thunk of Sequence.makeIterator()(v132, v199);
        v213 = *(int *)(v201 + 36);
        *(_QWORD *)(v133 + v213) = 0;
        v134 = &qword_100BDB488;
        v135 = (char *)(v133 + *(int *)(v202 + 36));
        v136 = 0.0;
        v214 = a4;
        v137 = (uint64_t)v207;
        v138 = (uint64_t *)v206;
        v216 = v73;
        v215 = v135;
        while (1)
        {
          v139 = *(_QWORD *)v135;
          v140 = v217;
          dispatch thunk of Collection.endIndex.getter(v226, v90);
          if (v139 == *(_QWORD *)&v227[0])
            break;
          v143 = v226;
          v144 = (void (*)(double *, _QWORD))dispatch thunk of Collection.subscript.read(v227, v135, v226, v90);
          v141 = (uint64_t)v210;
          v220(v210);
          v144(v227, 0);
          v145 = v224;
          v223(v224, v140, v143);
          dispatch thunk of Collection.formIndex(after:)(v135, v143, v225);
          v146 = v145;
          v90 = v225;
          v222(v146, v143);
          _s7Weather24LocationCompositionStateOwst_0(v141, 0, 1, v39);
          v147 = _s7Weather24LocationCompositionStateOwet_0(v141, 1, v39);
          v142 = v221;
          if (v147 == 1)
            goto LABEL_30;
          v148 = v134;
          v149 = v204;
          v150 = (uint64_t (*)(char *, char *, uint64_t))v216;
          ((void (*)(char *, uint64_t, uint64_t))v216)(v204, v141, v39);
          v151 = &v209[*(int *)(v142 + 48)];
          v152 = v142;
          v153 = v217;
          v154 = v213;
          v155 = *(_QWORD *)(v217 + v213);
          result = v150(v151, v149, v39);
          if (__OFADD__(v155, 1))
            goto LABEL_50;
          *(_QWORD *)(v153 + v154) = v155 + 1;
          v137 = (uint64_t)v207;
          v156 = (char *)v207 + *(int *)(v152 + 48);
          *v207 = v155;
          v150(v156, v151, v39);
          _s7Weather24LocationCompositionStateOwst_0(v137, 0, 1, v152);
          v142 = v152;
          v138 = (uint64_t *)v206;
          v90 = v225;
          v134 = v148;
LABEL_33:
          v157 = v218;
          sub_1000F111C(v137, (uint64_t)v138, v134);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v138, 1, v142) == 1)
          {
            sub_100021AA4(v217, &qword_100BDB498);
            return (*(uint64_t (**)(char *, uint64_t))(v219 + 8))(v198, v39);
          }
          v158 = *v138;
          v159 = ((uint64_t (*)(char *, char *, uint64_t))v216)(v157, (char *)v138 + *(int *)(v142 + 48), v39);
          if (v158 % 3 == 1)
          {
            v173 = sub_100372FF8();
            LayoutSubview.subscript.getter(v227, &type metadata for Percentage, &type metadata for Percentage, v173);
            v174 = v227[0];
            v232.origin.x = v127;
            v232.origin.y = v128;
            v232.size.width = v129;
            v232.size.height = a4;
            MinX = CGRectGetMinX(v232);
            if (qword_100BC1FC8 != -1)
              v175 = swift_once(&qword_100BC1FC8, sub_10036EF80);
            v177 = v208 * v174;
            v178 = qword_100BDB2F8;
            v179.n128_u64[0] = static UnitPoint.topLeading.getter(v175);
            v181.n128_u64[0] = v180;
            LOBYTE(v227[0]) = 0;
            v228[0] = 0;
            LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v177, 0, v178, 0, MinX, MinY, v179, v181);
            if (v136 <= v177)
              v136 = v177;
            goto LABEL_41;
          }
          if (!(v158 % 3))
          {
            v160 = static ProposedViewSize.unspecified.getter(v159);
            v162 = v161 & 1;
            LOBYTE(v227[0]) = v162;
            v228[0] = v163 & 1;
            v136 = LayoutSubview.sizeThatFits(_:)(v160, v162, v164, v163 & 1);
            v166 = v165;
            v231.origin.x = v127;
            v231.origin.y = v128;
            v231.size.width = v129;
            v231.size.height = a4;
            v167 = CGRectGetMinX(v231);
            v169.n128_u64[0] = static UnitPoint.topLeading.getter(v168);
            v171.n128_u64[0] = v170;
            LOBYTE(v227[0]) = 0;
            v228[0] = 0;
            v172 = v167;
            a4 = v214;
            LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v136, 0, v166, 0, v172, MinY, v169, v171);
LABEL_41:
            v182 = v157;
            v135 = v215;
            goto LABEL_47;
          }
          v183 = static ProposedViewSize.unspecified.getter(v159);
          v185 = v184 & 1;
          LOBYTE(v227[0]) = v185;
          v228[0] = v186 & 1;
          v188 = LayoutSubview.sizeThatFits(_:)(v183, v185, v187, v186 & 1);
          v233.size.height = a4;
          v190 = v189;
          v233.origin.x = v127;
          v233.origin.y = v128;
          v233.size.width = v129;
          v191 = v136 + CGRectGetMinX(v233);
          v193.n128_u64[0] = static UnitPoint.topLeading.getter(v192);
          v195.n128_u64[0] = v194;
          LOBYTE(v227[0]) = 0;
          v228[0] = 0;
          LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v188, 0, v190, 0, v191, MinY, v193, v195);
          if (qword_100BC1FC8 != -1)
            swift_once(&qword_100BC1FC8, sub_10036EF80);
          v196 = *(double *)&qword_100BDB2F8;
          v135 = v215;
          if (qword_100BC1FD0 != -1)
            swift_once(&qword_100BC1FD0, sub_10036EF90);
          MinY = MinY + v196 + *(double *)&qword_100BDB300;
          a4 = v214;
          v182 = v218;
LABEL_47:
          (*(void (**)(char *, uint64_t))(v219 + 8))(v182, v39);
        }
        v141 = (uint64_t)v210;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v210, 1, 1, v39);
        v142 = v221;
LABEL_30:
        sub_100021AA4(v141, &qword_100BC42D0);
        _s7Weather24LocationCompositionStateOwst_0(v137, 1, 1, v142);
        goto LABEL_33;
      }
      v114 = v111;
      v115 = *v111;
      ((void (*)(char *, char *, uint64_t))v73)(v212, (char *)v114 + *(int *)(v93 + 48), v39);
      if (v115 % 3 == 2
        && (LayoutSubview.subscript.getter(v227, &type metadata for IsMaxValueText, &type metadata for IsMaxValueText, v61), (LOBYTE(v227[0]) & 1) == 0))
      {
        v116 = sub_100372FF8();
        v117 = LayoutSubview.subscript.getter(v227, &type metadata for Percentage, &type metadata for Percentage, v116);
        v118 = v208;
        v119 = v208 * v227[0];
        v120 = static ProposedViewSize.unspecified.getter(v117);
        v122 = v121 & 1;
        LOBYTE(v227[0]) = v122;
        v228[0] = v123 & 1;
        v125 = LayoutSubview.sizeThatFits(_:)(v120, v122, v124, v123 & 1);
        (*(void (**)(char *, uint64_t))(v219 + 8))(v113, v39);
        v126 = v125 - v84;
        if (v118 >= v119 + v125)
          v126 = 0.0;
        v208 = v118 - v126;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v219 + 8))(v113, v39);
      }
      v87 = v216;
    }
    v92 = *(_QWORD *)&v214;
    _s7Weather24LocationCompositionStateOwst_0(*(uint64_t *)&v214, 1, 1, v39);
    v93 = v221;
LABEL_15:
    sub_100021AA4(v92, &qword_100BC42D0);
    v101 = v211;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v211, 1, 1, v93);
    goto LABEL_18;
  }
LABEL_51:
  __break(1u);
  return result;
}

double sub_100371730(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, __n128 a6)
{
  return sub_100370468(a1, a2 & 1, a6, a3, a4 & 1, a5);
}

uint64_t sub_100371748(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  return sub_100370660(a6, a7, a8, a9, a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_100371760@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  _QWORD *v2;
  const void *v3;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  *(_QWORD *)a1 = static Alignment.bottomLeading.getter(a2);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = 0x402E000000000000;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0x4020000000000000;
  *(_BYTE *)(a1 + 40) = 0;
  sub_1000BA294(&qword_100BDB508);
  v14 = v2[2];
  v15 = v14;
  KeyPath = swift_getKeyPath(&unk_1009976A8);
  v7 = swift_allocObject(&unk_100B6EF40, 89, 7);
  memcpy((void *)(v7 + 16), v3, 0x49uLL);
  sub_100373040(&v15);
  sub_100373260((uint64_t)v3);
  v8 = sub_1000BA294(&qword_100BDB400);
  v9 = sub_1000BA294(&qword_100BDB510);
  sub_10003D2DC(&qword_100BDB408, &qword_100BDB400);
  v11 = v10;
  sub_10003D2DC(&qword_100BDB518, &qword_100BDB510);
  return ForEach<>.init(_:id:content:)(&v14, KeyPath, sub_100373258, v7, v8, v9, v11, &protocol witness table for String, v12);
}

double sub_1003718B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  uint64_t v6;
  _OWORD v8[3];
  char v9;

  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  v6 = sub_1000BA294(&qword_100BDB510);
  return sub_100371920(v8, a2, (uint64_t *)(a3 + *(int *)(v6 + 36)));
}

double sub_100371920@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t (*v25)(char *, _QWORD, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t KeyPath;
  __n128 v60;
  int v61;
  uint64_t v62;
  char *v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t, __n128);
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, __n128);
  __n128 v75;
  double result;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;

  v90 = a3;
  v5 = sub_1000BA294(&qword_100BDB4D8);
  v88 = *(_QWORD *)(v5 - 8);
  v89 = v5;
  __chkstk_darwin(v5);
  v87 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v86 = (char *)&v77 - v8;
  v9 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v9);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v77 - v13;
  v15 = type metadata accessor for Font.TextStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = a1;
  v19 = *a1;
  v20 = a1[1];
  v91 = v19;
  v92 = v20;
  v21 = sub_100114EF8();
  v84 = v21;
  swift_bridgeObjectRetain(v20);
  v80 = Text.init<A>(_:)(&v91, &type metadata for String, v21);
  v82 = v22;
  v83 = v23;
  v81 = v24 & 1;
  v25 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v16 + 104);
  v26 = v25(v18, enum case for Font.TextStyle.title3(_:), v15);
  static Font.Weight.medium.getter(v26);
  v27 = static Font.system(_:weight:)(v18);
  v28 = *(void (**)(char *, uint64_t))(v16 + 8);
  v28(v18, v15);
  v29 = v25(v18, enum case for Font.TextStyle.body(_:), v15);
  static Font.Weight.medium.getter(v29);
  v30 = static Font.system(_:weight:)(v18);
  v28(v18, v15);
  v31 = *(_QWORD *)a2;
  LOBYTE(a2) = *(_BYTE *)(a2 + 8);
  sub_10008D47C(v31, a2);
  sub_100109B54();
  LOBYTE(v15) = v32;
  sub_1000B15F8(v31, a2);
  v33 = enum case for Font.Leading.tight(_:);
  v34 = type metadata accessor for Font.Leading(0);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104);
  v79 = v14;
  v35(v14, v33, v34);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v34);
  sub_100037794((uint64_t)v14, (uint64_t)v11, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v36 = v15 & 1;
  v37 = v30;
  v38 = sub_10040BDEC(v27, v30, v36, (uint64_t)v11);
  v39 = v80;
  v40 = v82;
  LOBYTE(v30) = v81;
  v41 = Text.font(_:)(v38, v80, v82, v81, v83);
  v43 = v42;
  LOBYTE(v34) = v44;
  v78 = v45;
  swift_release(v27);
  swift_release(v37);
  swift_release(v38);
  LOBYTE(v27) = v34 & 1;
  sub_1000D31B4(v39, v40, v30);
  swift_bridgeObjectRelease();
  sub_100021AA4((uint64_t)v79, &qword_100BCCDA8);
  LODWORD(v91) = static HierarchicalShapeStyle.primary.getter(v46);
  v47 = Text.foregroundStyle<A>(_:)(&v91, v41, v43, v34 & 1, v78, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v82 = v48;
  v83 = v47;
  v50 = v49;
  LOBYTE(v28) = v51 & 1;
  sub_1000D31B4(v41, v43, v27);
  swift_bridgeObjectRelease();
  v52 = v85[3];
  v91 = v85[2];
  v92 = v52;
  swift_bridgeObjectRetain(v52);
  v53 = Text.init<A>(_:)(&v91, &type metadata for String, v84);
  v55 = v54;
  v57 = v56;
  LOBYTE(v40) = v58 & 1;
  KeyPath = swift_getKeyPath(&unk_100997900);
  v61 = static HierarchicalShapeStyle.secondary.getter(v60);
  v91 = v53;
  v92 = v55;
  v93 = v40;
  v94 = v57;
  v95 = KeyPath;
  v96 = 0x3FE0000000000000;
  v97 = v61;
  v62 = sub_1000BA294(&qword_100BDB4E0);
  sub_100373070();
  v63 = v86;
  View.monospacedDigit()(v62);
  sub_1000D31B4(v53, v55, v40);
  swift_release(KeyPath);
  v64 = swift_bridgeObjectRelease();
  v65 = v87;
  v66 = v88;
  v67 = *(void (**)(char *, char *, uint64_t, __n128))(v88 + 16);
  v68 = v89;
  v67(v87, v63, v89, v64);
  v69 = v90;
  v70 = v82;
  v71 = v83;
  *v90 = v83;
  v69[1] = v50;
  *((_BYTE *)v69 + 16) = (_BYTE)v28;
  v69[3] = v70;
  *((_WORD *)v69 + 16) = 257;
  v72 = v69;
  v73 = sub_1000BA294(&qword_100BDB520);
  ((void (*)(char *, char *, uint64_t))v67)((char *)v72 + *(int *)(v73 + 48), v65, v68);
  sub_1000D55D4(v71, v50, (char)v28);
  v74 = *(void (**)(char *, uint64_t, __n128))(v66 + 8);
  v75 = swift_bridgeObjectRetain(v70);
  v74(v63, v68, v75);
  ((void (*)(char *, uint64_t))v74)(v65, v68);
  sub_1000D31B4(v71, v50, (char)v28);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100371DEC@<X0>(uint64_t a1@<X8>)
{
  const void *v1;
  double v3;
  _BYTE v5[73];

  memcpy(v5, v1, sizeof(v5));
  return sub_100371760(a1, v3);
}

uint64_t sub_100371E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  const void *v3;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  sub_1000BA294(&qword_100BDB4C0);
  v13 = v2[2];
  v14 = v13;
  KeyPath = swift_getKeyPath(&unk_1009976A8);
  v6 = swift_allocObject(&unk_100B6EF18, 89, 7);
  memcpy((void *)(v6 + 16), v3, 0x49uLL);
  sub_100373040(&v14);
  sub_100373260((uint64_t)v3);
  v7 = sub_1000BA294(&qword_100BDB400);
  v8 = sub_1000BA294(&qword_100BDB4C8);
  sub_10003D2DC(&qword_100BDB408, &qword_100BDB400);
  v10 = v9;
  sub_10003D2DC(&qword_100BDB4D0, &qword_100BDB4C8);
  return ForEach<>.init(_:id:content:)(&v13, KeyPath, sub_100373038, v6, v7, v8, v10, &protocol witness table for String, v11);
}

double sub_100371F70@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t (*v26)(char *, _QWORD, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t KeyPath;
  __n128 v58;
  int v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, __n128);
  __n128 v86;
  double result;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  int v109;
  uint64_t v110;
  unsigned __int8 v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  char v119;

  v102 = a3;
  v105 = sub_1000BA294(&qword_100BDB4D8);
  v103 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v101 = (char *)&v88 - v7;
  v8 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v8);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v88 - v12;
  v14 = type metadata accessor for Font.TextStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[1];
  v116 = *a1;
  v117 = v18;
  v118 = a1[2];
  LODWORD(v94) = *((unsigned __int8 *)a1 + 48);
  v119 = v94;
  v93 = *(_QWORD *)a1;
  v92 = *((_QWORD *)a1 + 1);
  v91 = *((_QWORD *)a1 + 2);
  v90 = *((_QWORD *)a1 + 3);
  v89 = *((_QWORD *)a1 + 4);
  v88 = *((_QWORD *)a1 + 5);
  v19 = *((_QWORD *)&v116 + 1);
  v106 = v116;
  v20 = sub_100114EF8();
  v97 = v20;
  swift_bridgeObjectRetain(v19);
  v99 = Text.init<A>(_:)(&v106, &type metadata for String, v20);
  v22 = v21;
  v100 = v23;
  v25 = v24 & 1;
  v26 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v27 = v26(v17, enum case for Font.TextStyle.title3(_:), v14);
  static Font.Weight.medium.getter(v27);
  v28 = static Font.system(_:weight:)(v17);
  v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v17, v14);
  v30 = v26(v17, enum case for Font.TextStyle.body(_:), v14);
  static Font.Weight.medium.getter(v30);
  v31 = static Font.system(_:weight:)(v17);
  v29(v17, v14);
  v98 = a2;
  v32 = *(_QWORD *)a2;
  LOBYTE(v17) = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, (char)v17);
  sub_100109B54();
  LOBYTE(a2) = v33;
  sub_1000B15F8(v32, (char)v17);
  v34 = enum case for Font.Leading.tight(_:);
  v35 = type metadata accessor for Font.Leading(0);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104);
  v96 = v13;
  v36(v13, v34, v35);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v35);
  sub_100037794((uint64_t)v13, (uint64_t)v10, &qword_100BCCDA8);
  v37 = v28;
  swift_retain();
  swift_retain();
  v38 = sub_10040BDEC(v28, v31, a2 & 1, (uint64_t)v10);
  v39 = v99;
  v40 = Text.font(_:)(v38, v99, v22, v25, v100);
  v42 = v41;
  LOBYTE(v29) = v43;
  v95 = v44;
  swift_release(v37);
  swift_release(v31);
  swift_release(v38);
  LOBYTE(v31) = v29 & 1;
  sub_1000D31B4(v39, v22, v25);
  swift_bridgeObjectRelease();
  sub_100021AA4((uint64_t)v96, &qword_100BCCDA8);
  LODWORD(v106) = static HierarchicalShapeStyle.primary.getter(v45);
  v46 = Text.foregroundStyle<A>(_:)(&v106, v40, v42, v29 & 1, v95, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v48 = v47;
  LODWORD(v99) = v49;
  v100 = v50;
  sub_1000D31B4(v40, v42, v31);
  swift_bridgeObjectRelease();
  v106 = v117;
  swift_bridgeObjectRetain(*((_QWORD *)&v117 + 1));
  v51 = Text.init<A>(_:)(&v106, &type metadata for String, v97);
  v53 = v52;
  v55 = v54;
  LOBYTE(v40) = v56 & 1;
  KeyPath = swift_getKeyPath(&unk_100997900);
  v59 = static HierarchicalShapeStyle.secondary.getter(v58);
  *(_QWORD *)&v106 = v51;
  *((_QWORD *)&v106 + 1) = v53;
  LOBYTE(v107) = v40;
  *((_QWORD *)&v107 + 1) = v55;
  *(_QWORD *)&v108 = KeyPath;
  *((_QWORD *)&v108 + 1) = 0x3FE0000000000000;
  v109 = v59;
  v60 = sub_1000BA294(&qword_100BDB4E0);
  sub_100373070();
  v61 = v101;
  View.monospacedDigit()(v60);
  sub_1000D31B4(v51, v53, v40);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v62 = *(_QWORD *)(v98 + 16);
  v63 = *(_QWORD *)(v62 + 16);
  if (!v63)
  {
    sub_100373178(&v116);
    sub_100238858(v93, v92, v91, v90, v89, v88);
    v69 = sub_100238858(0, 0, 0, 0, 0, 0);
    goto LABEL_5;
  }
  v64 = v62 + 56 * v63;
  v65 = *(_OWORD *)(v64 - 24);
  v66 = *(_OWORD *)(v64 - 8);
  v67 = *(_OWORD *)(v64 + 8);
  LOBYTE(v109) = *(_BYTE *)(v64 + 24);
  v107 = v66;
  v108 = v67;
  v106 = v65;
  sub_100373178(&v106);
  sub_100373178(&v116);
  v68 = sub_100689764((uint64_t)&v116, (uint64_t)&v106);
  sub_1003731C0(&v106);
  v69 = (uint64_t)sub_1003731C0(&v116);
  if ((v68 & 1) == 0)
  {
LABEL_5:
    static Alignment.center.getter(v69);
    v98 = 1;
    _FrameLayout.init(width:height:alignment:)(0, 1, 0x4020000000000000, 0);
    LODWORD(v97) = 0;
    v96 = (char *)v110;
    v95 = v111;
    v94 = v112;
    v93 = v113;
    v92 = v114;
    v91 = v115;
    goto LABEL_6;
  }
  v98 = 0;
  v96 = 0;
  v95 = 0;
  v94 = 0;
  v93 = 0;
  v92 = 0;
  v91 = 0;
  LODWORD(v97) = 1;
LABEL_6:
  v70 = v99 & 1;
  v71 = v103;
  v72 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  v73 = v104;
  v74 = v105;
  v72(v104, v61, v105);
  v75 = v102;
  *v102 = v46;
  v75[1] = v48;
  *((_BYTE *)v75 + 16) = v70;
  v99 = v48;
  v76 = v46;
  v77 = v100;
  v75[3] = v100;
  *((_WORD *)v75 + 16) = 257;
  v78 = sub_1000BA294(&qword_100BDB500);
  v72((char *)v75 + *(int *)(v78 + 48), v73, v74);
  v79 = (char *)v75 + *(int *)(v78 + 64);
  v80 = v98;
  *(_QWORD *)v79 = 0;
  *((_QWORD *)v79 + 1) = v80;
  v81 = v95;
  *((_QWORD *)v79 + 2) = v96;
  *((_QWORD *)v79 + 3) = v81;
  v82 = v93;
  *((_QWORD *)v79 + 4) = v94;
  *((_QWORD *)v79 + 5) = v82;
  v83 = v91;
  *((_QWORD *)v79 + 6) = v92;
  *((_QWORD *)v79 + 7) = v83;
  v79[64] = v97;
  v84 = v99;
  sub_1000D55D4(v76, v99, v70);
  v85 = *(void (**)(char *, uint64_t, __n128))(v71 + 8);
  v86 = swift_bridgeObjectRetain(v77);
  v85(v61, v74, v86);
  ((void (*)(char *, uint64_t))v85)(v73, v74);
  sub_1000D31B4(v76, v84, v70);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100372740@<X0>(uint64_t a1@<X8>)
{
  const void *v1;
  void *v3;
  _BYTE v5[73];

  v3 = memcpy(v5, v1, sizeof(v5));
  return sub_100371E2C((uint64_t)v3, a1);
}

unint64_t sub_100372780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDB3C8;
  if (!qword_100BDB3C8)
  {
    v1 = sub_100075EB0(&qword_100BDB3A8);
    sub_10003D2DC(&qword_100BDB3D0, &qword_100BDB3D8);
    sub_100372804();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDB3C8);
  }
  return result;
}

unint64_t sub_100372804()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDB3E0;
  if (!qword_100BDB3E0)
  {
    v1 = sub_100075EB0(&qword_100BDB3E8);
    sub_10003D2DC(&qword_100BDB3F0, &qword_100BDB3F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDB3E0);
  }
  return result;
}

uint64_t sub_100372888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;

  v1 = sub_1000B48B8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v0 + v4) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  }
  else
  {
    swift_release(*v6);
  }
  v8 = (char *)v6 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v8 + 2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release(*((_QWORD *)v8 + 6));
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100372950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ComparisonBarChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100372994@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000B48B8() - 8) + 80);
  return sub_10036F728(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1003729DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100372A18()
{
  return sub_100372A3C(&qword_100BDB458, &qword_100BDB460, (void (*)(void))sub_1002724C8);
}

uint64_t sub_100372A3C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100075EB0(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for IsMaxValueText()
{
  return &type metadata for IsMaxValueText;
}

ValueMetadata *type metadata accessor for Percentage()
{
  return &type metadata for Percentage;
}

ValueMetadata *type metadata accessor for ComparisonChartLayout()
{
  return &type metadata for ComparisonChartLayout;
}

void *initializeWithTake for ComparisonStackView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

ValueMetadata *type metadata accessor for ComparisonStackView()
{
  return &type metadata for ComparisonStackView;
}

double _s7Weather19ComparisonStackViewVwxx_0(uint64_t a1)
{
  double result;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 64)).n128_u64[0];
  }
  return result;
}

void _s7Weather19ComparisonStackViewVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  sub_1000BA9E0(a1, a2);
  *(_QWORD *)v2 = v4;
  *(_BYTE *)(v2 + 8) = v5;
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v2 + 16) = v6;
  v7 = *(_QWORD *)(v3 + 32);
  swift_bridgeObjectRetain(v6);
  if (v7)
  {
    *(_QWORD *)(v2 + 24) = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v2 + 32) = v7;
    v8 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v2 + 40) = *(_QWORD *)(v3 + 40);
    *(_QWORD *)(v2 + 48) = v8;
    v9 = *(_QWORD *)(v3 + 64);
    *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 + 56);
    *(_QWORD *)(v2 + 64) = v9;
    sub_1000DB92C();
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_retain();
  }
  else
  {
    v10 = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(v2 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(v2 + 40) = v10;
    *(_OWORD *)(v2 + 56) = *(_OWORD *)(v3 + 56);
    *(_BYTE *)(v2 + 72) = *(_BYTE *)(v3 + 72);
  }
  sub_10004A2A0();
}

void _s7Weather19ComparisonStackViewVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  sub_1000BA9E0(a1, a2);
  v6 = *(_QWORD *)v2;
  v7 = *(_BYTE *)(v2 + 8);
  *(_QWORD *)v2 = v4;
  *(_BYTE *)(v2 + 8) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v2 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = (_OWORD *)(v2 + 24);
  v10 = (__int128 *)(v3 + 24);
  v11 = *(_QWORD *)(v3 + 32);
  if (*(_QWORD *)(v2 + 32))
  {
    if (v11)
    {
      v12 = sub_1000CCBF4();
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + 40) = *(_QWORD *)(v3 + 40);
      v13 = *(_QWORD *)(v3 + 48);
      *(_QWORD *)(v2 + 48) = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 + 56);
      v14 = *(_QWORD *)(v2 + 64);
      *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 + 64);
      swift_retain();
      swift_release(v14);
      sub_1000DB92C();
    }
    else
    {
      sub_10036EB00((_QWORD *)(v2 + 24));
      v18 = *(_OWORD *)(v3 + 40);
      v17 = *(_OWORD *)(v3 + 56);
      v19 = *v10;
      *(_BYTE *)(v2 + 72) = *(_BYTE *)(v3 + 72);
      *(_OWORD *)(v2 + 40) = v18;
      *(_OWORD *)(v2 + 56) = v17;
      *v9 = v19;
    }
  }
  else if (v11)
  {
    sub_1000CCBF4();
    *(_QWORD *)(v2 + 40) = *(_QWORD *)(v3 + 40);
    v15 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v2 + 48) = v15;
    *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 + 56);
    *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 + 64);
    sub_1000DB92C();
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v15);
    swift_retain();
  }
  else
  {
    v20 = *v10;
    v21 = *(_OWORD *)(v3 + 40);
    v22 = *(_OWORD *)(v3 + 56);
    *(_BYTE *)(v2 + 72) = *(_BYTE *)(v3 + 72);
    *(_OWORD *)(v2 + 40) = v21;
    *(_OWORD *)(v2 + 56) = v22;
    *v9 = v20;
  }
  sub_10004A2A0();
}

uint64_t _s7Weather19ComparisonStackViewVwta_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1000B15F8(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v8 = a2[4];
  if (!v8)
  {
    sub_10036EB00((_QWORD *)(a1 + 24));
LABEL_5:
    v11 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = v11;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    return a1;
  }
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = a2[7];
  v10 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = a2[8];
  swift_release(v10);
  sub_1000DB92C();
  return a1;
}

uint64_t _s7Weather19ComparisonStackViewVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100372E3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonGridView()
{
  return &type metadata for ComparisonGridView;
}

unint64_t sub_100372EA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDB468;
  if (!qword_100BDB468)
  {
    v1 = sub_100075EB0(&qword_100BDB470);
    sub_10003D2DC(&qword_100BDB3C0, &qword_100BDB3B8);
    sub_100372780();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDB468);
  }
  return result;
}

uint64_t sub_100372F28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1F58, 1);
}

uint64_t sub_100372F38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB1F30, 1);
}

unint64_t sub_100372F4C()
{
  unint64_t result;

  result = qword_100BDB478;
  if (!qword_100BDB478)
  {
    result = swift_getWitnessTable(&unk_1009977D4, &type metadata for ComparisonChartLayout);
    atomic_store(result, (unint64_t *)&qword_100BDB478);
  }
  return result;
}

void sub_100372F88(unint64_t *a1, __n128 a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = type metadata accessor for LayoutSubviews(255, a2);
    atomic_store(sub_10003BC38(v3), a1);
  }
  sub_10004A298();
}

unint64_t sub_100372FBC()
{
  unint64_t result;

  result = qword_100BDB4B0;
  if (!qword_100BDB4B0)
  {
    result = swift_getWitnessTable(&unk_1009978CC, &type metadata for IsMaxValueText);
    atomic_store(result, (unint64_t *)&qword_100BDB4B0);
  }
  return result;
}

unint64_t sub_100372FF8()
{
  unint64_t result;

  result = qword_100BDB4B8;
  if (!qword_100BDB4B8)
  {
    result = swift_getWitnessTable(&unk_10099789C, &type metadata for Percentage);
    atomic_store(result, (unint64_t *)&qword_100BDB4B8);
  }
  return result;
}

double sub_100373038@<D0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_100371F70(a1, v2 + 16, a2);
}

_QWORD *sub_100373040(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

unint64_t sub_100373070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDB4E8;
  if (!qword_100BDB4E8)
  {
    v1 = sub_100075EB0(&qword_100BDB4E0);
    sub_1003730F4();
    sub_10003D2DC(&qword_100BC3AE0, &qword_100BC3AE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDB4E8);
  }
  return result;
}

unint64_t sub_1003730F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDB4F0;
  if (!qword_100BDB4F0)
  {
    v1 = sub_100075EB0(&qword_100BDB4F8);
    sub_10003D2DC(&qword_100BCDE00, &qword_100BCDE08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDB4F0);
  }
  return result;
}

_QWORD *sub_100373178(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  v3 = a1[5];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return a1;
}

_QWORD *sub_1003731C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[3];
  swift_release(a1[5]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_10037320C()
{
  uint64_t v0;

  sub_1000B15F8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release(*(_QWORD *)(v0 + 80));
  }
  return swift_deallocObject(v0, 89, 7);
}

double sub_100373258@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1003718B4(a1, v2 + 16, a2);
}

uint64_t sub_100373260(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  sub_10008D47C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_bridgeObjectRetain(v2);
  sub_1000C3920(v3, v4, v5);
  return a1;
}

void sub_1003732D8()
{
  sub_10003D2DC(&qword_100BDB528, &qword_100BDB530);
}

void sub_100373304()
{
  sub_10003D2DC(&qword_100BDB538, &qword_100BDB540);
}

uint64_t type metadata accessor for AirQualityDetailViewStateReducer()
{
  return objc_opt_self(_TtC7Weather32AirQualityDetailViewStateReducer);
}

uint64_t TipViewStyle.init(isVibrant:imageWidth:imageColor:dismissButtonHidden:callToActionHidden:)(char a1)
{
  return a1 & 1;
}

uint64_t destroy for TipViewStyle(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for TipViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for TipViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for TipViewStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TipViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipViewStyle(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 26))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TipViewStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

_QWORD *sub_100373528(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for DetailCondition(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    v18 = a3[7];
    v19 = a3[8];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    v22 = *((_OWORD *)v21 + 1);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v22;
    v20[32] = v21[32];
    v23 = (_QWORD *)((char *)a1 + v19);
    v24 = (_QWORD *)((char *)a2 + v19);
    v25 = (int *)type metadata accessor for DetailChartSelection(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v25))
    {
      v26 = sub_1000BA294(&qword_100BD0B58);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = v24[1];
      *v23 = *v24;
      v23[1] = v27;
      v28 = v25[5];
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
      v32 = swift_bridgeObjectRetain(v27);
      v31(v29, v30, v15, v32);
      ((void (*)(char *, char *, uint64_t))v31)((char *)v23 + v25[6], (char *)v24 + v25[6], v15);
      ((void (*)(char *, char *, uint64_t))v31)((char *)v23 + v25[7], (char *)v24 + v25[7], v15);
      *(_QWORD *)((char *)v23 + v25[8]) = *(_QWORD *)((char *)v24 + v25[8]);
      v33 = v25[9];
      v34 = (char *)v23 + v33;
      v35 = (char *)v24 + v33;
      v34[8] = v35[8];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
    }
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return a1;
}

uint64_t sub_10037376C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t result;
  __n128 v12;
  void (*v13)(uint64_t, uint64_t, __n128);

  v4 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[8];
  v10 = (int *)type metadata accessor for DetailChartSelection(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v9, 1, (uint64_t)v10);
  if (!(_DWORD)result)
  {
    v12 = swift_bridgeObjectRelease();
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v8 - 8) + 8);
    v13(v9 + v10[5], v8, v12);
    ((void (*)(uint64_t, uint64_t))v13)(v9 + v10[6], v8);
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v9 + v10[7], v8);
  }
  return result;
}

uint64_t sub_1003738A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v6 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  v21 = (_QWORD *)(a1 + v17);
  v22 = (_QWORD *)(a2 + v17);
  v23 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    v24 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v22[1];
    *v21 = *v22;
    v21[1] = v25;
    v26 = v23[5];
    v27 = (char *)v21 + v26;
    v28 = (char *)v22 + v26;
    v29 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
    v30 = swift_bridgeObjectRetain(v25);
    v29(v27, v28, v14, v30);
    ((void (*)(char *, char *, uint64_t))v29)((char *)v21 + v23[6], (char *)v22 + v23[6], v14);
    ((void (*)(char *, char *, uint64_t))v29)((char *)v21 + v23[7], (char *)v22 + v23[7], v14);
    *(_QWORD *)((char *)v21 + v23[8]) = *(_QWORD *)((char *)v22 + v23[8]);
    v31 = v23[9];
    v32 = (char *)v21 + v31;
    v33 = (char *)v22 + v31;
    v32[8] = v33[8];
    *(_QWORD *)v32 = *(_QWORD *)v33;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
  }
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100373AB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v42;
  __n128 v43;
  void (*v44)(char *, char *, uint64_t, __n128);
  uint64_t v45;
  char *v46;
  char *v47;
  char v48;

  v6 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for Date(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = (__int128 *)(a2 + v19);
  v22 = *v21;
  v23 = v21[1];
  *(_BYTE *)(v20 + 32) = *((_BYTE *)v21 + 32);
  *(_OWORD *)v20 = v22;
  *(_OWORD *)(v20 + 16) = v23;
  v24 = a3[8];
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = (int *)type metadata accessor for DetailChartSelection(0);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, (uint64_t)v27);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v27);
  if (!v28)
  {
    if (!v29)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v42 = *((_QWORD *)v26 + 1);
      *((_QWORD *)v25 + 1) = v42;
      swift_bridgeObjectRetain(v42);
      v43 = swift_bridgeObjectRelease();
      v44 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 24);
      v44(&v25[v27[5]], &v26[v27[5]], v14, v43);
      ((void (*)(char *, char *, uint64_t))v44)(&v25[v27[6]], &v26[v27[6]], v14);
      ((void (*)(char *, char *, uint64_t))v44)(&v25[v27[7]], &v26[v27[7]], v14);
      *(_QWORD *)&v25[v27[8]] = *(_QWORD *)&v26[v27[8]];
      v45 = v27[9];
      v46 = &v25[v45];
      v47 = &v26[v45];
      v48 = v47[8];
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v48;
      goto LABEL_13;
    }
    sub_1000215BC((uint64_t)v25, type metadata accessor for DetailChartSelection);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    v40 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v30 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v25 + 1) = v30;
  v31 = v27[5];
  v32 = &v25[v31];
  v33 = &v26[v31];
  v34 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
  v35 = swift_bridgeObjectRetain(v30);
  v34(v32, v33, v14, v35);
  ((void (*)(char *, char *, uint64_t))v34)(&v25[v27[6]], &v26[v27[6]], v14);
  ((void (*)(char *, char *, uint64_t))v34)(&v25[v27[7]], &v26[v27[7]], v14);
  *(_QWORD *)&v25[v27[8]] = *(_QWORD *)&v26[v27[8]];
  v36 = v27[9];
  v37 = &v25[v36];
  v38 = &v26[v36];
  v39 = v38[8];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v39;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
LABEL_13:
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100373DE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  int *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  v21 = (_OWORD *)(a1 + v17);
  v22 = (_OWORD *)(a2 + v17);
  v23 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    v24 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v25((char *)v21 + v23[5], (char *)v22 + v23[5], v14);
    v25((char *)v21 + v23[6], (char *)v22 + v23[6], v14);
    v25((char *)v21 + v23[7], (char *)v22 + v23[7], v14);
    *(_QWORD *)((char *)v21 + v23[8]) = *(_QWORD *)((char *)v22 + v23[8]);
    v26 = v23[9];
    v27 = (char *)v21 + v26;
    v28 = (char *)v22 + v26;
    v27[8] = v28[8];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
  }
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100373FE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char *v24;
  char *v25;
  int *v26;
  int v27;
  int v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  __n128 v36;
  void (*v37)(char *, char *, uint64_t, __n128);
  uint64_t v38;
  char *v39;
  char *v40;

  v6 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for Date(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_7:
  v19 = a3[7];
  v20 = a3[8];
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  v24 = (char *)(a1 + v20);
  v25 = (char *)(a2 + v20);
  v26 = (int *)type metadata accessor for DetailChartSelection(0);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v26);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, (uint64_t)v26);
  if (!v27)
  {
    if (!v28)
    {
      v35 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v35;
      v36 = swift_bridgeObjectRelease();
      v37 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 40);
      v37(&v24[v26[5]], &v25[v26[5]], v14, v36);
      ((void (*)(char *, char *, uint64_t))v37)(&v24[v26[6]], &v25[v26[6]], v14);
      ((void (*)(char *, char *, uint64_t))v37)(&v24[v26[7]], &v25[v26[7]], v14);
      *(_QWORD *)&v24[v26[8]] = *(_QWORD *)&v25[v26[8]];
      v38 = v26[9];
      v39 = &v24[v38];
      v40 = &v25[v38];
      v39[8] = v40[8];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      goto LABEL_13;
    }
    sub_1000215BC((uint64_t)v24, type metadata accessor for DetailChartSelection);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    v33 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v29(&v24[v26[5]], &v25[v26[5]], v14);
  v29(&v24[v26[6]], &v25[v26[6]], v14);
  v29(&v24[v26[7]], &v25[v26[7]], v14);
  *(_QWORD *)&v24[v26[8]] = *(_QWORD *)&v25[v26[8]];
  v30 = v26[9];
  v31 = &v24[v30];
  v32 = &v25[v30];
  v31[8] = v32[8];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, (uint64_t)v26);
LABEL_13:
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1003742DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003742E8);
}

uint64_t sub_1003742E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v17;

  sub_1000D9588();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  sub_1000992C4();
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_13:
    v8 = a1 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_13;
  }
  sub_1000BA294(&qword_100BD0B58);
  sub_100088FF0();
  if (v14)
  {
    v7 = v15;
    v11 = a3[8];
    goto LABEL_13;
  }
  v17 = *(unsigned __int8 *)(a1 + a3[9]);
  if (v17 >= 2)
    return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1003743C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003743CC);
}

void sub_1003743CC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_1000D9588();
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_1000992C4();
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1000BA294((uint64_t *)&unk_100BD35A0);
      sub_10009D2E8();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        sub_1000BA294(&qword_100BD0B58);
        sub_10009D2E8();
        if (!v15)
        {
          *(_BYTE *)(a1 + a4[9]) = a2 + 1;
          return;
        }
        v8 = v16;
        v12 = a4[8];
      }
    }
    v9 = a1 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v9, a2, a2, v8);
}

uint64_t sub_100374490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(char *, uint64_t);
  int v10;
  int v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_1000986AC();
  v59 = v0;
  v60 = v1;
  v2 = sub_1000D9588();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v49 - v7;
  sub_1000C1E08((uint64_t)&v49 - v7);
  v9 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  v10 = v9(v8, v2);
  v11 = enum case for DetailCondition.conditions(_:);
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v8, v2);
  if (v10 == v11)
  {
    sub_1000BA294(&qword_100BDB688);
    v13 = sub_1000C0A24();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(_QWORD *)(v14 + 72);
    v16 = *(unsigned __int8 *)(v14 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = sub_1000C4854(v17 + 2 * v15, v16);
    *(_OWORD *)(v18 + 16) = xmmword_10097DA20;
    sub_100374684(v18, v19, v20, v21, v22, v23, v24, v25, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v18 + v17 + v15, enum case for DetailChartCondition.chanceOfRain(_:), v13);
  }
  else
  {
    sub_1000C1E08((uint64_t)v6);
    v26 = v9(v6, v2);
    v27 = enum case for DetailCondition.precipitationTotal(_:);
    v12(v6, v2);
    sub_1000BA294(&qword_100BDB688);
    v28 = sub_1000C0A24();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(_QWORD *)(v29 + 72);
    v31 = *(unsigned __int8 *)(v29 + 80);
    v32 = (v31 + 32) & ~v31;
    if (v26 == v27)
    {
      v33 = v28;
      v18 = sub_1000C4854(v32 + 2 * v30, v31);
      *(_OWORD *)(v18 + 16) = xmmword_10097DA20;
      sub_100374684(v18, v34, v35, v36, v37, v38, v39, v40, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v18 + v32 + v30, enum case for DetailChartCondition.chanceOfRain(_:), v33);
    }
    else
    {
      v18 = sub_1000C4854(v32 + v30, v31);
      *(_OWORD *)(v18 + 16) = xmmword_10097CA50;
      sub_100374684(v18, v41, v42, v43, v44, v45, v46, v47, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60);
    }
  }
  return v18;
}

void sub_100374684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t i;

  sub_1000986AC();
  a19 = v23;
  a20 = v24;
  v25 = v20;
  v27 = v26;
  v28 = type metadata accessor for TemperatureChartKind(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  sub_10003BC68();
  __chkstk_darwin(v30);
  v32 = (char *)&a9 - v31;
  v33 = sub_1000D9588();
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  sub_100094EC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v22, v25, v33);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v22, v33);
  if (v35 == enum case for DetailCondition.conditions(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 96))(v22, v33);
    sub_1000B2FD0((uint64_t)v32, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
    sub_1000B2FD0(v21, (uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 88))(v21, v28);
    if (v36 == enum case for TemperatureChartKind.actual(_:))
    {
      sub_10009D558();
      v37 = (unsigned int *)&enum case for DetailChartCondition.temperature(_:);
    }
    else
    {
      if (v36 != enum case for TemperatureChartKind.feelsLike(_:))
      {
        v40 = v28;
        for (i = v28; ; i = v33)
        {
          _diagnoseUnexpectedEnumCase<A>(type:)(v40, i);
          __break(1u);
LABEL_21:
          v40 = v33;
        }
      }
      sub_10009D558();
      v37 = (unsigned int *)&enum case for DetailChartCondition.temperatureFeelsLike(_:);
    }
  }
  else if (v35 == enum case for DetailCondition.humidity(_:))
  {
    v37 = (unsigned int *)&enum case for DetailChartCondition.humidity(_:);
  }
  else if (v35 == enum case for DetailCondition.pressure(_:))
  {
    v37 = (unsigned int *)&enum case for DetailChartCondition.pressure(_:);
  }
  else if (v35 == enum case for DetailCondition.precipitationTotal(_:))
  {
    v37 = (unsigned int *)&enum case for DetailChartCondition.precipitationTotal(_:);
  }
  else if (v35 == enum case for DetailCondition.uvIndex(_:))
  {
    v37 = (unsigned int *)&enum case for DetailChartCondition.uvIndex(_:);
  }
  else if (v35 == enum case for DetailCondition.visibility(_:))
  {
    v37 = (unsigned int *)&enum case for DetailChartCondition.visibility(_:);
  }
  else
  {
    if (v35 != enum case for DetailCondition.wind(_:))
      goto LABEL_21;
    v37 = (unsigned int *)&enum case for DetailChartCondition.wind(_:);
  }
  v38 = *v37;
  v39 = type metadata accessor for DetailChartCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v27, v38, v39);
  sub_100098640();
}

void sub_1003748CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[4];
  unsigned __int8 v93;
  _BYTE v94[48];

  sub_1000986AC();
  v3 = v0;
  v78 = v4;
  v79 = v5;
  v70 = v6;
  v69 = v7;
  v68 = v8;
  v84 = v9;
  v76 = v10;
  sub_1000787D4(v10, (uint64_t)v92, &qword_100BC40B0);
  v91 = v92[1];
  v86 = v92[2];
  v82 = v92[3];
  v83 = v92[0];
  v85 = v93;
  sub_1000BA294(&qword_100BD0B58);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v12);
  v81 = (uint64_t)&v67 - v13;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v15);
  v90 = (uint64_t)&v67 - v16;
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_10009E540();
  v18 = sub_1000992C4();
  v88 = *(_QWORD *)(v18 - 8);
  v89 = v18;
  __chkstk_darwin(v18);
  sub_10009BE88(v19, v67);
  v20 = (int *)sub_1000CF814();
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v23);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v24);
  sub_1000860D0();
  v26 = v25;
  __chkstk_darwin(v27);
  sub_1000C0CF4();
  __chkstk_darwin(v28);
  v30 = (char *)&v67 - v29;
  sub_1000BA294(&qword_100BDB6E0);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  v33 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000D9588();
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v67 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v38;
  sub_100037768(v68, (uint64_t)v33, &qword_100BDB6E0);
  sub_10037624C(v3, (uint64_t)v30);
  sub_100088FC8((uint64_t)v33, 1, v39);
  v74 = v35;
  v73 = v37;
  if (v40)
  {
    sub_1000BE9D4((uint64_t)v37, (uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16));
    sub_1000215BC((uint64_t)v30, type metadata accessor for ConditionDetailViewState);
    sub_100021A14((uint64_t)v33, &qword_100BDB6E0);
  }
  else
  {
    sub_1000215BC((uint64_t)v30, type metadata accessor for ConditionDetailViewState);
    sub_1000BE9D4((uint64_t)v37, (uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32));
  }
  sub_100037768(v69, v1, &qword_100BC35F8);
  v41 = v3;
  sub_10037624C(v3, v2);
  sub_100088FC8(v1, 1, v89);
  if (v40)
  {
    sub_1000992E4(v87, v2 + v20[5], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 16));
    sub_1000215BC(v2, type metadata accessor for ConditionDetailViewState);
    sub_100021A14(v1, &qword_100BC35F8);
  }
  else
  {
    sub_1000215BC(v2, type metadata accessor for ConditionDetailViewState);
    sub_1000992E4(v87, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 32));
  }
  v42 = v71;
  sub_100037768(v70, v71, (uint64_t *)&unk_100BD35A0);
  sub_10037624C(v41, v26);
  v43 = type metadata accessor for Date(0);
  sub_100088FC8(v42, 1, v43);
  v44 = v91;
  v45 = v75;
  if (v40)
  {
    sub_100037768(v26 + v20[6], v90, (uint64_t *)&unk_100BD35A0);
    sub_1000215BC(v26, type metadata accessor for ConditionDetailViewState);
    sub_100075DD0(v42);
  }
  else
  {
    sub_1000215BC(v26, type metadata accessor for ConditionDetailViewState);
    v46 = v90;
    sub_1000992E4(v90, v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32));
    sub_1000C14FC(v46);
  }
  v47 = v72;
  sub_10037624C(v41, v72);
  sub_1000787D4(v76, (uint64_t)v94, &qword_100BC40B0);
  v49 = v82;
  v48 = v83;
  if (v94[32] == 1)
  {
    v50 = v47 + v20[7];
    v48 = *(_QWORD *)v50;
    v44 = *(_QWORD *)(v50 + 8);
    v49 = *(_QWORD *)(v50 + 24);
    v86 = *(_QWORD *)(v50 + 16);
    v85 = *(unsigned __int8 *)(v50 + 32);
  }
  v91 = v44;
  v51 = v78;
  sub_1000215BC(v47, type metadata accessor for ConditionDetailViewState);
  v52 = v80;
  sub_100037768(v79, v80, &qword_100BD0B58);
  sub_10037624C(v41, v45);
  v53 = type metadata accessor for DetailChartSelection(0);
  v54 = sub_100088FC8(v52, 1, v53);
  if (v40)
  {
    v55 = v52;
    v58 = v81;
    sub_100037768(v45 + v20[8], v81, &qword_100BD0B58);
    sub_1000998DC(v56, type metadata accessor for ConditionDetailViewState);
    sub_100075DD0(v55);
  }
  else
  {
    sub_1000998DC(v54, type metadata accessor for ConditionDetailViewState);
    v57 = v52;
    v58 = v81;
    sub_1003761CC(v57, v81);
    sub_1000C14FC(v58);
  }
  v59 = (uint64_t)v73;
  v60 = v41;
  v61 = v77;
  sub_10037624C(v60, v77);
  v62 = v74;
  if (v51 == 2)
    v63 = *(_BYTE *)(v61 + v20[9]);
  else
    v63 = v51 & 1;
  sub_1000215BC(v61, type metadata accessor for ConditionDetailViewState);
  v64 = v84;
  sub_1000BE9D4(v84, v59, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v64 + v20[5], v87, v89);
  sub_1000787D4(v90, v64 + v20[6], (uint64_t *)&unk_100BD35A0);
  v65 = v64 + v20[7];
  v66 = v91;
  *(_QWORD *)v65 = v48;
  *(_QWORD *)(v65 + 8) = v66;
  *(_QWORD *)(v65 + 16) = v86;
  *(_QWORD *)(v65 + 24) = v49;
  *(_BYTE *)(v65 + 32) = v85;
  sub_1000787D4(v58, v64 + v20[8], &qword_100BD0B58);
  *(_BYTE *)(v64 + v20[9]) = v63;
  sub_100098640();
}

uint64_t sub_100374F1C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v12;
  unint64_t v13;
  char v15;

  if (a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL)
  {
    v5 = 0xE90000000000006ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F697469646E6F63, 0xE90000000000006ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x64657463656C6573 && a2 == 0xEC00000065746144)
  {
    v10 = 0xEC00000065746144;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64657463656C6573, 0xEC00000065746144, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x6552656372756F73 && a2 == 0xEA00000000007463)
  {
    v12 = 0xEA00000000007463;
    goto LABEL_32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6552656372756F73, 0xEA00000000007463, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3;
  }
  if (a1 == 0xD000000000000014)
  {
    v13 = 0x80000001009FC0B0;
    if (a2 == 0x80000001009FC0B0)
      goto LABEL_37;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000001009FC0B0, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4;
  }
  if (a1 == 0x797A614C64616F6CLL && a2 == 0xEF746E65746E6F43)
  {
    swift_bridgeObjectRelease(0xEF746E65746E6F43);
    return 5;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0x797A614C64616F6CLL, 0xEF746E65746E6F43, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v15 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1003751D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100375210
                                                            + 4 * asc_1009979B0[a1]))(0x6F697469646E6F63, 0xE90000000000006ELL);
}

uint64_t sub_100375210()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_100375228()
{
  return 0x64657463656C6573;
}

uint64_t sub_100375248()
{
  return 0x6552656372756F73;
}

unint64_t sub_100375264()
{
  return 0xD000000000000014;
}

uint64_t sub_100375280()
{
  return 0x797A614C64616F6CLL;
}

uint64_t sub_1003752A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  CGRect *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD *v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  sub_1000986AC();
  v72 = v4;
  v73 = v5;
  v7 = v6;
  v9 = v8;
  v67 = type metadata accessor for DetailChartSelection(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v65 = (_QWORD *)v11;
  v66 = sub_1000BA294(&qword_100BD0D40);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v71 = v13;
  sub_1000BA294(&qword_100BD0B58);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000986FC();
  v70 = v15;
  __chkstk_darwin(v16);
  sub_1000860D0();
  v68 = v17;
  __chkstk_darwin(v18);
  v69 = (char *)&v60 - v19;
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  sub_100094EC4();
  v22 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100079FBC();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_10003BC68();
  __chkstk_darwin(v25);
  sub_1000C0CF4();
  __chkstk_darwin(v26);
  v28 = (char *)&v60 - v27;
  if ((((uint64_t (*)(uint64_t, uint64_t))static DetailCondition.== infix(_:_:))(v9, v7) & 1) == 0)
    goto LABEL_13;
  v64 = v21;
  v29 = sub_1000CF814();
  if ((static Location.== infix(_:_:)(v9 + *(int *)(v29 + 20), v7 + *(int *)(v29 + 20)) & 1) == 0)
    goto LABEL_13;
  v30 = *(int *)(v29 + 24);
  v62 = v9;
  sub_1000C091C(v9 + v30, (uint64_t)v28);
  v61 = v29;
  v31 = *(int *)(v29 + 24);
  v63 = v7;
  sub_1000C091C(v7 + v31, v3);
  v32 = v0 + *(int *)(v22 + 48);
  sub_1000C091C((uint64_t)v28, v0);
  sub_1000C091C(v3, v32);
  sub_100088FC8(v0, 1, v20);
  if (v33)
  {
    sub_1000987A0(v3);
    sub_1000987A0((uint64_t)v28);
    sub_100088FC8(v32, 1, v20);
    if (v33)
    {
      sub_100021A14(v0, (uint64_t *)&unk_100BD35A0);
      goto LABEL_16;
    }
LABEL_11:
    v34 = &qword_100BC4978;
    v35 = v0;
LABEL_12:
    sub_100021A14(v35, v34);
    goto LABEL_13;
  }
  sub_100037768(v0, v1, (uint64_t *)&unk_100BD35A0);
  sub_100088FC8(v32, 1, v20);
  if (v33)
  {
    sub_100021A14(v3, (uint64_t *)&unk_100BD35A0);
    sub_100021A14((uint64_t)v28, (uint64_t *)&unk_100BD35A0);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v1, v20);
    goto LABEL_11;
  }
  v38 = v64;
  sub_1000B2FD0(v2, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 32));
  sub_100086DA4((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v40 = dispatch thunk of static Equatable.== infix(_:_:)(v1, v2, v20, v39);
  v41 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v41(v2, v20);
  sub_1000B3B4C(v3);
  sub_1000B3B4C((uint64_t)v28);
  v41(v1, v20);
  sub_1000B3B4C(v0);
  if ((v40 & 1) == 0)
    goto LABEL_13;
LABEL_16:
  v43 = v61;
  v42 = v62;
  v44 = *(int *)(v61 + 28);
  v45 = (CGRect *)(v62 + v44);
  v46 = *(_BYTE *)(v62 + v44 + 32);
  v47 = v63;
  v48 = v63 + v44;
  if ((v46 & 1) != 0)
  {
    v50 = v70;
    v49 = v71;
    v52 = v68;
    v51 = (uint64_t)v69;
    if (!*(_BYTE *)(v48 + 32))
      goto LABEL_13;
  }
  else
  {
    v50 = v70;
    v49 = v71;
    v52 = v68;
    v51 = (uint64_t)v69;
    if ((*(_BYTE *)(v48 + 32) & 1) != 0 || !CGRectEqualToRect(*v45, *(CGRect *)v48))
      goto LABEL_13;
  }
  sub_1000D0580(v42 + *(int *)(v43 + 32), v51);
  sub_1000D0580(v47 + *(int *)(v43 + 32), v52);
  v53 = v49 + *(int *)(v66 + 48);
  sub_1000D0580(v51, v49);
  sub_1000D0580(v52, v53);
  v54 = v67;
  sub_100088FC8(v49, 1, v67);
  if (v33)
  {
    sub_100021A14(v52, &qword_100BD0B58);
    sub_100021A14(v51, &qword_100BD0B58);
    sub_100088FC8(v53, 1, v54);
    if (v33)
    {
      sub_100021A14(v49, &qword_100BD0B58);
LABEL_31:
      v36 = *(_BYTE *)(v42 + *(int *)(v43 + 36)) ^ *(_BYTE *)(v47 + *(int *)(v43 + 36)) ^ 1;
      return v36 & 1;
    }
    goto LABEL_29;
  }
  sub_100037768(v49, (uint64_t)v50, &qword_100BD0B58);
  sub_100088FC8(v53, 1, v54);
  if (v55)
  {
    sub_100075DD0(v52);
    sub_100075DD0(v51);
    sub_1000998DC(v56, type metadata accessor for DetailChartSelection);
LABEL_29:
    v34 = &qword_100BD0D40;
    v35 = v49;
    goto LABEL_12;
  }
  v57 = v65;
  sub_1003761CC(v53, (uint64_t)v65);
  sub_1005BC3B4(v50, v57);
  v59 = v58;
  sub_1000215BC((uint64_t)v57, type metadata accessor for DetailChartSelection);
  sub_1000987A0(v52);
  sub_1000987A0(v51);
  sub_1000215BC((uint64_t)v50, type metadata accessor for DetailChartSelection);
  sub_1000987A0(v49);
  if ((v59 & 1) != 0)
    goto LABEL_31;
LABEL_13:
  v36 = 0;
  return v36 & 1;
}

uint64_t sub_1003757D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v32[2];
  char v33;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100BDB6B0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_100376210();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ConditionDetailViewState.CodingKeys, &type metadata for ConditionDetailViewState.CodingKeys, v10, v8, v9);
  LOBYTE(v32[0]) = 0;
  type metadata accessor for DetailCondition(0);
  sub_100086DA4(&qword_100BDB6B8, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition, (uint64_t)&protocol conformance descriptor for DetailCondition);
  sub_1000C3934();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v11, v12, v13, v14, v15);
  if (!v2)
  {
    v16 = (int *)type metadata accessor for ConditionDetailViewState(0);
    v17 = v4 + v16[5];
    LOBYTE(v32[0]) = 1;
    v18 = type metadata accessor for Location(0);
    sub_100086DA4(&qword_100BCF410, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v17, v32, v6, v18, v19);
    LOBYTE(v32[0]) = 2;
    type metadata accessor for Date(0);
    sub_100086DA4(&qword_100BC3578, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    sub_1000C4728(v20);
    v21 = v4 + v16[7];
    v22 = *(_BYTE *)(v21 + 32);
    v23 = *(_OWORD *)(v21 + 16);
    v32[0] = *(_OWORD *)v21;
    v32[1] = v23;
    v33 = v22;
    type metadata accessor for CGRect(0);
    sub_100086DA4(&qword_100BCF428, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
    sub_1000C3934();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v24, v25, v26, v27, v28);
    LOBYTE(v32[0]) = 4;
    type metadata accessor for DetailChartSelection(0);
    sub_100086DA4(&qword_100BDB6C0, type metadata accessor for DetailChartSelection, (uint64_t)&unk_1009B1B68);
    sub_1000C4728(v29);
    v30 = *(unsigned __int8 *)(v4 + v16[9]);
    LOBYTE(v32[0]) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v30, v32, v6);
  }
  return sub_100098820(v3, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
}

void sub_100375A54(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _OWORD v52[2];
  char v53;
  char v54;

  v41 = a2;
  sub_1000BA294(&qword_100BD0B58);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_10009BE88(v6, v40);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Location(0);
  v43 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DetailCondition(0);
  v49 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_10009E540();
  v44 = sub_1000BA294(&qword_100BDB690);
  v13 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  sub_100094EC4();
  v47 = type metadata accessor for ConditionDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v48 = v15;
  v16 = a1[3];
  v17 = a1[4];
  v50 = a1;
  sub_1000DB418(a1, v16);
  v18 = sub_100376210();
  v45 = v2;
  v19 = v51;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ConditionDetailViewState.CodingKeys, &type metadata for ConditionDetailViewState.CodingKeys, v18, v16, v17);
  if (v19)
  {
    sub_100099498();
  }
  else
  {
    v20 = v11;
    v21 = (uint64_t)v9;
    v51 = v13;
    LOBYTE(v52[0]) = 0;
    sub_100086DA4(&qword_100BDB6A0, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition, (uint64_t)&protocol conformance descriptor for DetailCondition);
    sub_1000C6A68();
    v22 = v44;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v12, v23, v44);
    v24 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v48, v3, v12);
    LOBYTE(v52[0]) = 1;
    sub_100086DA4(&qword_100BCF3E8, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    sub_1000C6A68();
    v25 = v20;
    v26 = v46;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v46, v27, v22);
    v28 = (int *)v47;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v24 + *(int *)(v47 + 20), v25, v26);
    type metadata accessor for Date(0);
    LOBYTE(v52[0]) = 2;
    sub_100086DA4(&qword_100BC3558, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    sub_1000C6A68();
    sub_1000CCC08(v29, v30);
    sub_1000787D4(v21, v24 + v28[6], (uint64_t *)&unk_100BD35A0);
    type metadata accessor for CGRect(0);
    v32 = v31;
    v54 = 3;
    sub_100086DA4(&qword_100BCF400, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v32, &v54, v22, v32);
    v33 = v53;
    v34 = v24 + v28[7];
    v35 = v52[1];
    *(_OWORD *)v34 = v52[0];
    *(_OWORD *)(v34 + 16) = v35;
    *(_BYTE *)(v34 + 32) = v33;
    type metadata accessor for DetailChartSelection(0);
    LOBYTE(v52[0]) = 4;
    sub_100086DA4(&qword_100BDB6A8, type metadata accessor for DetailChartSelection, (uint64_t)&unk_1009B1B90);
    sub_1000C6A68();
    v36 = v42;
    sub_1000CCC08(v37, v38);
    sub_1000787D4(v36, v24 + v28[8], &qword_100BD0B58);
    LOBYTE(v52[0]) = 5;
    v39 = KeyedDecodingContainer.decode(_:forKey:)(v52, v22);
    sub_100098820(v45, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    *(_BYTE *)(v24 + v28[9]) = v39 & 1;
    sub_10037624C(v24, v41);
    sub_100099498();
    sub_1000215BC(v24, type metadata accessor for ConditionDetailViewState);
  }
}

uint64_t sub_100375F74()
{
  unsigned __int8 *v0;

  return sub_1003751D8(*v0);
}

uint64_t sub_100375F7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100374F1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100375FA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100376210();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100375FC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100376210();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100375FF4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100375A54(a1, a2);
}

uint64_t sub_100376008(_QWORD *a1)
{
  return sub_1003757D4(a1);
}

void sub_10037601C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_100693868(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_100376030()
{
  sub_100693BA4();
}

uint64_t sub_100376044@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v2, &v8);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0x6F697469646E6F63;
  *(_QWORD *)(inited + 40) = 0xE90000000000006ELL;
  v4 = sub_1000D9588();
  *(_QWORD *)(inited + 72) = v4;
  sub_100077A84((_QWORD *)(inited + 48));
  (*(void (**)(void))(*(_QWORD *)(v4 - 8) + 16))();
  v5 = Dictionary.init(dictionaryLiteral:)(inited);
  a1[3] = sub_1000BA294(&qword_100BDB6C8);
  a1[4] = sub_100376290();
  sub_100077A84(a1);
  v6 = sub_1000CF814();
  return ShortDescription.init(name:_:)(0xD000000000000018, 0x80000001009979A0, v5, v6);
}

uint64_t sub_100376160(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BDB6D8, type metadata accessor for ConditionDetailViewState, (uint64_t)&unk_100997A38);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_1003761A0()
{
  sub_100086DA4(&qword_100BDB680, type metadata accessor for ConditionDetailViewState, (uint64_t)&unk_100997A10);
}

uint64_t sub_1003761CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailChartSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100376210()
{
  unint64_t result;

  result = qword_100BDB698;
  if (!qword_100BDB698)
  {
    result = swift_getWitnessTable(&unk_100997BF4, &type metadata for ConditionDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDB698);
  }
  return result;
}

uint64_t sub_10037624C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100376290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDB6D0;
  if (!qword_100BDB6D0)
  {
    v1 = sub_100075EB0(&qword_100BDB6C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDB6D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ConditionDetailViewState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100376320 + 4 * byte_1009979BB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100376354 + 4 * byte_1009979B6[v4]))();
}

uint64_t sub_100376354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037635C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100376364);
  return result;
}

uint64_t sub_100376370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100376378);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10037637C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100376384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConditionDetailViewState.CodingKeys()
{
  return &type metadata for ConditionDetailViewState.CodingKeys;
}

unint64_t sub_1003763A4()
{
  unint64_t result;

  result = qword_100BDB6E8;
  if (!qword_100BDB6E8)
  {
    result = swift_getWitnessTable(&unk_100997BCC, &type metadata for ConditionDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDB6E8);
  }
  return result;
}

unint64_t sub_1003763E4()
{
  unint64_t result;

  result = qword_100BDB6F0;
  if (!qword_100BDB6F0)
  {
    result = swift_getWitnessTable(&unk_100997B3C, &type metadata for ConditionDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDB6F0);
  }
  return result;
}

unint64_t sub_100376424()
{
  unint64_t result;

  result = qword_100BDB6F8;
  if (!qword_100BDB6F8)
  {
    result = swift_getWitnessTable(&unk_100997B64, &type metadata for ConditionDetailViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDB6F8);
  }
  return result;
}

double sub_100376460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  _QWORD v4[5];
  uint64_t v5;

  v5 = *(_QWORD *)(v1 + 104);
  v4[3] = a1;
  v2 = type metadata accessor for UnfairLock(0);
  swift_retain();
  Lock.sync<A>(_:)(&type metadata for (), sub_100376908, v4, v2, &type metadata for () + 1, &protocol witness table for UnfairLock);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_1003764DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  if (*(_BYTE *)(a1 + 120) == 1)
  {
    v3 = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 112) = a2;
    swift_release(v3);
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 1;
    return sub_100376534(a2);
  }
  return result;
}

double sub_100376534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double result;
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_100B6F270, 32, 7);
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_10037693C;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100088F7C;
  aBlock[3] = &unk_100B6F288;
  v13 = _Block_copy(aBlock);
  swift_retain();
  v14 = swift_retain();
  static DispatchQoS.unspecified.getter(v14);
  v20 = _swiftEmptyArrayStorage;
  v15 = sub_1001221E0();
  v16 = sub_1000BA294(&qword_100BD4F10);
  v17 = sub_100121014();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v4, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

double sub_1003766F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  _QWORD v12[12];

  if (qword_100BC24C8 != -1)
    swift_once(&qword_100BC24C8, sub_1006F3984);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000AECD4(v4, (uint64_t)qword_100CAF240);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Processing main state for diagnostics", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  sub_1000DB418(a1 + 7, a1[10]);
  sub_100227D3C(a2, (uint64_t)v12);
  sub_1000DB418(a1 + 2, a1[5]);
  sub_1008ED300(a2, v12);
  sub_100376944(v12);
  v11 = a1[13];
  v9 = type metadata accessor for UnfairLock(0);
  swift_retain();
  Lock.sync<A>(_:)(&type metadata for (), sub_1003769B4, a1, v9, &type metadata for () + 1, &protocol witness table for UnfairLock);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void sub_100376868(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 112);
  if (v1)
  {
    *(_QWORD *)(a1 + 112) = 0;
    sub_100376534(v1);
    swift_release(v1);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
}

uint64_t sub_1003768AC()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 56));

  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));
  return v0;
}

uint64_t sub_1003768E8()
{
  uint64_t v0;

  sub_1003768AC();
  return swift_deallocClassInstance(v0, 121, 7);
}

double sub_100376908()
{
  uint64_t v0;

  return sub_1003764DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100376910()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10037693C()
{
  uint64_t v0;

  return sub_1003766F4(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

_QWORD *sub_100376944(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[8];
  v6 = a1[10];
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

void sub_1003769B4()
{
  uint64_t v0;

  sub_100376868(v0);
}

uint64_t type metadata accessor for NextHourPrecipitationDetailViewStateReducer()
{
  return objc_opt_self(_TtC7Weather43NextHourPrecipitationDetailViewStateReducer);
}

uint64_t sub_1003769DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Published(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = &unk_100997D68;
    result = swift_initClassMetadata2(a1, 0, 4, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100376A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v17 - v11;
  (*(void (**)(uint64_t, __n128))(v2 + *(int *)(v13 + 52)))(v14, v10);
  sub_1000B2074(v8, v5, *(_QWORD *)(a1 + 32));
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v8, v5);
  sub_1000B1100((uint64_t)v12, v5, a2);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v5);
}

uint64_t sub_100376B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t result;
  _QWORD *v16;
  _QWORD v17[4];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a8, a1, a5);
  v17[0] = a4;
  v17[1] = a5;
  v17[2] = a6;
  v17[3] = a7;
  result = type metadata accessor for ThrottleFrequentUpdateView.ContentView(0, (uint64_t)v17);
  v16 = (_QWORD *)(a8 + *(int *)(result + 52));
  *v16 = a2;
  v16[1] = a3;
  return result;
}

uint64_t sub_100376BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t updated;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t WitnessTable;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v3 = v2;
  v64 = a2;
  v58 = *(_QWORD *)(a1 - 8);
  v60 = *(_QWORD *)(v58 + 64);
  __chkstk_darwin(a1);
  v57 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 24);
  v66 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = v10[4];
  v12 = v10[5];
  v53 = v10[2];
  v54 = v11;
  v67 = v53;
  v68 = v7;
  v69 = v11;
  v70 = v12;
  updated = type metadata accessor for ThrottleFrequentUpdateView.ContentView(0, (uint64_t)&v67);
  v63 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v65 = (uint64_t)&v50 - v14;
  WitnessTable = swift_getWitnessTable(&unk_100997FD0, updated);
  v67 = updated;
  v68 = v7;
  v69 = WitnessTable;
  v70 = v12;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v67, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v16 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v61 = OpaqueTypeMetadata2;
  v62 = v16;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v55 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v59 = (char *)&v50 - v19;
  v20 = *(_QWORD *)(v2 + 16);
  v21 = *(_QWORD *)(v3 + 24);
  v22 = *(unsigned __int8 *)(v3 + 32);
  v24 = type metadata accessor for ThrottleFrequentUpdateViewViewModel(0, v7, v12, v23);
  v25 = swift_getWitnessTable(&unk_100997E2C, v24);
  v26 = StateObject.wrappedValue.getter(v20, v21, v22, v24, v25);
  v27 = v9;
  sub_100376F74(v9);
  swift_release(v26);
  v28 = *(_QWORD *)v3;
  v29 = *(_QWORD *)(v3 + 8);
  v51 = v9;
  v52 = v29;
  v30 = (uint64_t)v9;
  v31 = v53;
  v32 = v54;
  sub_100376B50(v30, v28, v29, v53, v7, v54, v12, v65);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v66 + 16))(v27, v3 + *(int *)(a1 + 56), v7);
  v34 = v57;
  v33 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v3, a1);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v36 = v33;
  v37 = (v35 + 48) & ~v35;
  v38 = (char *)swift_allocObject(&unk_100B6F470, v37 + v60, v35 | 7);
  *((_QWORD *)v38 + 2) = v31;
  *((_QWORD *)v38 + 3) = v7;
  *((_QWORD *)v38 + 4) = v32;
  *((_QWORD *)v38 + 5) = v12;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v38[v37], v34, a1);
  v39 = WitnessTable;
  LOBYTE(v37) = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  swift_retain();
  v40 = v37 & 1;
  v41 = v55;
  v42 = v51;
  v43 = v65;
  View.onChange<A>(of:initial:_:)(v51, v40, sub_100377CA0, v38, updated, v7, v39, v12);
  v44 = swift_release(v38);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v66 + 8))(v42, v7, v44);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v43, updated);
  v67 = updated;
  v68 = v7;
  v69 = v39;
  v70 = v12;
  v45 = sub_10009885C((uint64_t)&v67, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  v46 = (uint64_t)v59;
  v47 = v61;
  sub_1000B2074(v41, v61, v45);
  v48 = *(void (**)(char *, uint64_t))(v62 + 8);
  v48(v41, v47);
  sub_1000B1100(v46, v47, v64);
  return ((uint64_t (*)(uint64_t, uint64_t))v48)(v46, v47);
}

uint64_t sub_100376F74@<X0>(_QWORD *a1@<X8>)
{
  return sub_100377084((uint64_t)&unk_100997E68, (uint64_t)&unk_100997EA0, a1);
}

double sub_100376F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t updated;
  uint64_t WitnessTable;
  uint64_t v19;
  double result;
  uint64_t v21;

  v7 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  v13 = *(unsigned __int8 *)(v10 + 32);
  updated = type metadata accessor for ThrottleFrequentUpdateViewViewModel(0, v15, v16, v14);
  WitnessTable = swift_getWitnessTable(&unk_100997E2C, updated);
  v19 = StateObject.wrappedValue.getter(v11, v12, v13, updated, WitnessTable);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, a5);
  sub_1003771A8((uint64_t)v9, (uint64_t)&unk_100997F58, (uint64_t)&unk_100997F90);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_100377070@<X0>(_QWORD *a1@<X8>)
{
  return sub_100377084((uint64_t)&unk_100997F58, (uint64_t)&unk_100997F90, a1);
}

uint64_t sub_100377084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  return swift_release(v7);
}

uint64_t sub_100377110(uint64_t a1)
{
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = __chkstk_darwin(a1);
  v3 = (char *)&v6 - v2;
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v6 - v2, v1);
  return sub_1003771A8((uint64_t)v3, (uint64_t)&unk_100997F58, (uint64_t)&unk_100997F90);
}

uint64_t sub_100377194(uint64_t a1)
{
  return sub_1003771A8(a1, (uint64_t)&unk_100997E68, (uint64_t)&unk_100997EA0);
}

uint64_t sub_1003771A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  _QWORD v16[4];

  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 88);
  v16[2] = v6;
  v16[3] = v11;
  KeyPath = swift_getKeyPath(v12);
  v16[0] = v6;
  v16[1] = v11;
  v14 = swift_getKeyPath(a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  swift_retain(v3);
  static Published.subscript.setter(v9, v3, KeyPath, v14);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t sub_10037728C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = type metadata accessor for Published(0, *(_QWORD *)(*(_QWORD *)v0 + 80));
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104), v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)));
  return v0;
}

uint64_t sub_100377304()
{
  uint64_t v0;

  v0 = sub_10037728C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for ThrottleFrequentUpdateViewViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ThrottleFrequentUpdateViewViewModel);
}

uint64_t storeEnumTagSinglePayload for ThrottleUpdateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10037737C + 4 * byte_100997D15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003773B0 + 4 * byte_100997D10[v4]))();
}

uint64_t sub_1003773B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003773B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003773C0);
  return result;
}

uint64_t sub_1003773CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003773D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003773D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003773E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThrottleUpdateType()
{
  return &type metadata for ThrottleUpdateType;
}

unint64_t sub_100377400()
{
  unint64_t result;

  result = qword_100BDB8E0[0];
  if (!qword_100BDB8E0[0])
  {
    result = swift_getWitnessTable(&unk_100997E04, &type metadata for ThrottleUpdateType);
    atomic_store(result, qword_100BDB8E0);
  }
  return result;
}

uint64_t sub_10037744C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for () + 64;
  v4[1] = &unk_100997EE0;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 48);
    return 0;
  }
  return result;
}

_QWORD *sub_1003774D0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 33) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (_QWORD *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    swift_retain();
    sub_100037094(v13, v14);
    *(_QWORD *)v11 = v13;
    *(_QWORD *)(v11 + 8) = v14;
    *(_BYTE *)(v11 + 16) = v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))((v11 + v6 + 17) & ~v6, (v12 + v6 + 17) & ~v6, v4);
  }
  return a1;
}

uint64_t sub_1003775D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (uint64_t *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  sub_1000BF398(*v4, v4[1]);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))(((unint64_t)v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

_QWORD *sub_100377628(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_BYTE *)(v7 + 16);
  swift_retain();
  sub_100037094(v8, v9);
  *(_QWORD *)v6 = v8;
  *(_QWORD *)(v6 + 8) = v9;
  *(_BYTE *)(v6 + 16) = v10;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 16))((*(unsigned __int8 *)(v11 + 80) + 17 + v6) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 17 + v7) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

_QWORD *sub_1003776C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release(v7);
  v8 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_100037094(*(_QWORD *)v9, v11);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000BF398(v13, v14);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 24))((*(unsigned __int8 *)(v15 + 80) + 17 + v8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), (*(unsigned __int8 *)(v15 + 80) + 17 + v9) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

_OWORD *sub_100377784(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v5 + 16);
  *(_OWORD *)v4 = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(unsigned __int8 *)(v7 + 80) + 17 + v4) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 17 + v5) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1003777F0(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = (unint64_t)a2 + 23;
  *(_OWORD *)a1 = *a2;
  swift_release(v5);
  v7 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 &= 0xFFFFFFFFFFFFFFF8;
  v8 = *(_BYTE *)(v6 + 16);
  v9 = *(_QWORD *)v7;
  v10 = *(_QWORD *)(v7 + 8);
  *(_OWORD *)v7 = *(_OWORD *)v6;
  *(_BYTE *)(v7 + 16) = v8;
  sub_1000BF398(v9, v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))((*(unsigned __int8 *)(v11 + 80) + 17 + v7) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 17 + v6) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_100377880(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 33) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(_WORD *)((char *)a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return _s7Weather24LocationCompositionStateOwet_0(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 17) & ~v8, v6, v4);
      v16 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((_BYTE *)a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100377954 + 4 * byte_100997D1A[(v10 - 1)]))();
}

void sub_1003779C8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = &dword_100000004;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for ThrottleFrequentUpdateView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ThrottleFrequentUpdateView);
}

uint64_t sub_100377BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100140D38(a1, a2, a3, (uint64_t)&unk_100AB2230);
}

uint64_t type metadata accessor for ThrottleFrequentUpdateView.ContentView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ThrottleFrequentUpdateView.ContentView);
}

uint64_t sub_100377BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 16);
  v12 = *(_OWORD *)(v0 + 24);
  v10 = v12;
  v13 = v1;
  updated = type metadata accessor for ThrottleFrequentUpdateView(0, (uint64_t)&v11);
  v3 = *(_QWORD *)(updated - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 48) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  v8 = v0 + v5;
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  sub_1000BF398(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24));
  (*(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8 + *(int *)(updated + 56));
  return swift_deallocObject(v0, v6, v7);
}

double sub_100377CA0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThrottleFrequentUpdateView(0, (uint64_t)v11) - 8)
                          + 80);
  return sub_100376F88(a1, a2, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6);
}

uint64_t sub_100377D28@<X0>(_QWORD *a1@<X8>)
{
  return sub_100377070(a1);
}

uint64_t sub_100377D54(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 48);
    return 0;
  }
  return result;
}

uint64_t *sub_100377DCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = v9[1];
    v11 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v9;
    v11[1] = v10;
  }
  swift_retain(v10);
  return v4;
}

uint64_t sub_100377E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v3 + 8))();
  return swift_release(*(_QWORD *)(((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100377EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  return a1;
}

uint64_t sub_100377F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

uint64_t sub_100377F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100377FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 8);
  *(_OWORD *)v7 = *(_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release(v8);
  return a1;
}

uint64_t sub_100378048(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s7Weather24LocationCompositionStateOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1003780C4 + 4 * byte_100997D28[v11]))();
  }
}

void sub_100378144(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_100378230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s7Weather24LocationCompositionStateOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_1003782C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t updated;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  v5 = v7;
  v8 = v1;
  updated = type metadata accessor for ThrottleFrequentUpdateView.ContentView(255, (uint64_t)&v6);
  WitnessTable = swift_getWitnessTable(&unk_100997FD0, updated);
  v6 = updated;
  *(_QWORD *)&v7 = v5;
  *((_QWORD *)&v7 + 1) = WitnessTable;
  v8 = v1;
  return sub_10009885C((uint64_t)&v6, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
}

uint64_t sub_10037833C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100140D38(a1, a2, a3, (uint64_t)&unk_100AB2270);
}

uint64_t sub_100378348(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

double sub_100378350(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100BDBA80);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_1003783CC, 0, v2);
  swift_release(v3);
  v4 = swift_release(v1);
  v5 = ProxyContainer.private.getter(v4);
  RegistrationContainer.lazy(block:)(sub_1003785A4, 0);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1003783CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  _QWORD v28[3];
  uint64_t v29;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BDBA88);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (v29)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1000DB418(a1, v8);
    v10 = sub_1000BA294(&qword_100BC4530);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
    if (result)
    {
      v11 = result;
      v12 = sub_100068EB4((uint64_t)v28, v29);
      v13 = __chkstk_darwin(v12);
      v15 = (_QWORD *)((char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
      v17 = *v15;
      v18 = type metadata accessor for WeatherMenuInteractor();
      v27[3] = v18;
      v27[4] = &off_100B88A80;
      v27[0] = v17;
      v19 = type metadata accessor for WeatherMenuModule();
      v20 = (_QWORD *)swift_allocObject(v19, 64, 7);
      v21 = sub_100068EB4((uint64_t)v27, v18);
      v22 = __chkstk_darwin(v21);
      v24 = (_QWORD *)((char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = *v24;
      v20[5] = v18;
      v20[6] = &off_100B88A80;
      v20[2] = v26;
      v20[7] = v11;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
      a2[3] = v19;
      a2[4] = &off_100B9B148;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1003785A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v0 = sub_1000BA294(&qword_100BDBA88);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_100378698, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BDBA90);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_10037898C, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BDBA98);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1003789A0, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC4530);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_100378CE0, 0, v6);
  swift_release(v7);
  v8 = sub_1000BA294(&qword_100BDBAA0);
  v9 = RegistrationContainer.register<A>(_:name:factory:)(v8, 0, 0, sub_100378FC8, 0, v8);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_100378698@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t **v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v50;
  if (!v50)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = v51;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294((uint64_t *)&unk_100BCEF00);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v49)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = sub_1000BA294(&qword_100BDBAC8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  if (!v47)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BDBAD0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  v19 = v44;
  if (!v44)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v40 = v45;
  v41 = a2;
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BDBAA0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (v43)
  {
    v23 = sub_100068EB4((uint64_t)v48, v49);
    v24 = __chkstk_darwin(v23);
    v26 = (uint64_t *)((char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v27 + 16))(v26, v24);
    v28 = sub_100068EB4((uint64_t)v46, v47);
    v29 = __chkstk_darwin(v28);
    v31 = (uint64_t *)((char *)&v40 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v32 + 16))(v31, v29);
    v33 = sub_100068EB4((uint64_t)v42, v43);
    v34 = __chkstk_darwin(v33);
    v36 = (uint64_t **)((char *)&v40 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v37 + 16))(v36, v34);
    v38 = sub_10037910C(v8, v9, *v26, *v31, v19, v40, *v36);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v42);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v46);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v48);
    result = type metadata accessor for WeatherMenuInteractor();
    v39 = v41;
    v41[3] = result;
    v39[4] = &off_100B88A80;
    *v39 = v38;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10037898C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for WeatherMenuInputFactory, (uint64_t)&off_100B7D180, a1);
}

uint64_t sub_1003789A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD v41[3];
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BCF678);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v50)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BDBAA8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!v48)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BDBAB0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (!v46)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v14 = a1[3];
  v15 = a1[4];
  sub_1000DB418(a1, v14);
  v16 = sub_1000BA294(&qword_100BDBAB8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v16, v16, v14, v15);
  if (!v44)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BDBAC0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (v42)
  {
    v20 = sub_100068EB4((uint64_t)v47, v48);
    v21 = __chkstk_darwin(v20);
    v23 = (_QWORD *)((char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
    v25 = sub_100068EB4((uint64_t)v45, v46);
    v26 = __chkstk_darwin(v25);
    v28 = (char *)v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v29 + 16))(v28, v26);
    v30 = sub_100068EB4((uint64_t)v43, v44);
    v31 = __chkstk_darwin(v30);
    v33 = (_QWORD *)((char *)v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v34 + 16))(v33, v31);
    v35 = sub_100068EB4((uint64_t)v41, v42);
    v36 = __chkstk_darwin(v35);
    v38 = (char *)v41 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v39 + 16))(v38, v36);
    v40 = sub_1003793F4(&v49, *v23, v28, *v33, (uint64_t)v38);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v41);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v43);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v45);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v47);
    result = type metadata accessor for WeatherMenuViewModelFactory();
    a2[3] = result;
    a2[4] = &off_100B88A00;
    *a2 = v40;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100378CE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v30;
  v7 = v31;
  v9 = v29;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BDBA90);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v26, v27);
  v24 = type metadata accessor for WeatherMenuInputFactory();
  v25 = &off_100B7D180;
  v23[0] = v13;
  sub_100043CA8((uint64_t)v23, (uint64_t)v22);
  v14 = swift_allocObject(&unk_100B6F580, 56, 7);
  sub_10003C800(v22, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  v15 = swift_allocObject(&unk_100B6F5A8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100379034;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BDBA98);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v27)
  {
    v19 = *sub_1000DB418(v26, v27);
    v24 = type metadata accessor for WeatherMenuViewModelFactory();
    v25 = &off_100B88A00;
    v23[0] = v19;
    sub_100043CA8((uint64_t)v23, (uint64_t)v22);
    v20 = swift_allocObject(&unk_100B6F5D0, 56, 7);
    sub_10003C800(v22, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
    v21 = sub_1000BA294(&qword_100BC4530);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    return sub_100183848(v6, v9, v8, v7, sub_100182F48, 0, sub_1000A22C0, v15, sub_100379060, v20);
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_100378F38@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_10050C420(a1, a3);
}

uint64_t sub_100378F80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_10068EF1C(a1, a3);
}

uint64_t sub_100378FC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for RootViewControllerResolver, (uint64_t)&off_100B67668, a1);
}

uint64_t type metadata accessor for WeatherMenuAssembly()
{
  return objc_opt_self(_TtC7Weather19WeatherMenuAssembly);
}

double sub_100378FFC(__n128 a1)
{
  return sub_100378350(a1);
}

uint64_t sub_100379010()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

double sub_100379034@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100378F38(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10037903C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100379060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100378F80(a1, (_QWORD *)(v2 + 16), a2);
}

_QWORD *sub_100379068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  a8[7] = type metadata accessor for DebugPresenter();
  a8[8] = &off_100B79290;
  a8[4] = a3;
  a8[12] = type metadata accessor for ToolbarAddButtonInteractor();
  a8[13] = &off_100B7D540;
  a8[9] = a4;
  a8[19] = type metadata accessor for RootViewControllerResolver();
  a8[20] = &off_100B67668;
  a8[15] = a6;
  a8[16] = a7;
  a8[2] = a1;
  a8[3] = a2;
  a8[14] = a5;
  return a8;
}

_QWORD *sub_10037910C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  _QWORD v41[3];
  uint64_t v42;
  _UNKNOWN **v43;

  v14 = *a7;
  v42 = type metadata accessor for DebugPresenter();
  v43 = &off_100B79290;
  v41[0] = a3;
  v39 = type metadata accessor for ToolbarAddButtonInteractor();
  v40 = &off_100B7D540;
  v38[0] = a4;
  v36 = v14;
  v37 = &off_100B67668;
  v35[0] = a7;
  v15 = type metadata accessor for WeatherMenuInteractor();
  v16 = (_QWORD *)swift_allocObject(v15, 168, 7);
  v17 = sub_100068EB4((uint64_t)v41, v42);
  v18 = __chkstk_darwin(v17);
  v20 = (_QWORD *)((char *)&v35[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  v22 = sub_100068EB4((uint64_t)v38, v39);
  v23 = __chkstk_darwin(v22);
  v25 = (_QWORD *)((char *)&v35[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  v27 = sub_100068EB4((uint64_t)v35, v36);
  v28 = __chkstk_darwin(v27);
  v30 = (_QWORD *)((char *)&v35[-1] - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
  v32 = sub_100379068(a1, a2, *v20, *v25, a5, a6, *v30, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v41);
  return v32;
}

_QWORD *sub_1003792F8(__int128 *a1, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  a6[10] = type metadata accessor for LocationViewDescriptor();
  a6[11] = &off_100B978D8;
  a6[7] = a2;
  a6[15] = &type metadata for MapOverlayKindProvider;
  a6[16] = &off_100B75C88;
  v12 = swift_allocObject(&unk_100B6F5F8, 96, 7);
  a6[12] = v12;
  memcpy((void *)(v12 + 16), a3, 0x50uLL);
  a6[20] = type metadata accessor for LocationFinder();
  a6[21] = &off_100B788B0;
  a6[17] = a4;
  a6[25] = &type metadata for AddLocationContextHelper;
  a6[26] = &off_100B720D8;
  v13 = swift_allocObject(&unk_100B6F620, 56, 7);
  a6[22] = v13;
  v14 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(a5 + 32);
  sub_10003C800(a1, (uint64_t)(a6 + 2));
  return a6;
}

_QWORD *sub_1003793F4(__int128 *a1, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v37[3];
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _QWORD v40[3];
  uint64_t v41;
  _UNKNOWN **v42;
  _QWORD v43[3];
  ValueMetadata *v44;
  _UNKNOWN **v45;
  _QWORD v46[5];

  v10 = type metadata accessor for LocationViewDescriptor();
  v46[3] = v10;
  v46[4] = &off_100B978D8;
  v46[0] = a2;
  v44 = &type metadata for MapOverlayKindProvider;
  v45 = &off_100B75C88;
  v43[0] = swift_allocObject(&unk_100B6F5F8, 96, 7);
  memcpy((void *)(v43[0] + 16), a3, 0x50uLL);
  v41 = type metadata accessor for LocationFinder();
  v42 = &off_100B788B0;
  v40[0] = a4;
  v38 = &type metadata for AddLocationContextHelper;
  v39 = &off_100B720D8;
  v11 = swift_allocObject(&unk_100B6F620, 56, 7);
  v37[0] = v11;
  v12 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(a5 + 32);
  v13 = type metadata accessor for WeatherMenuViewModelFactory();
  v14 = (_QWORD *)swift_allocObject(v13, 216, 7);
  v15 = sub_100068EB4((uint64_t)v46, v10);
  v16 = __chkstk_darwin(v15);
  v18 = (_QWORD *)((char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  v20 = sub_100068EB4((uint64_t)v43, (uint64_t)v44);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v24 + 16))(v23, v21);
  v25 = sub_100068EB4((uint64_t)v40, v41);
  v26 = __chkstk_darwin(v25);
  v28 = (_QWORD *)((char *)v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v29 + 16))(v28, v26);
  v30 = sub_100068EB4((uint64_t)v37, (uint64_t)v38);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v34 + 16))(v33, v31);
  v35 = sub_1003792F8(a1, *v18, v23, *v28, (uint64_t)v33, v14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v40);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v43);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v46);
  return v35;
}

uint64_t sub_100379688()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1003796BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;

  v5 = Location.searchSubtitle.getter();
  if (v6)
  {
    v7 = v5;
    v8 = v6;
    swift_bridgeObjectRetain(a3);
    v9._countAndFlagsBits = 44;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    v10._countAndFlagsBits = v7;
    v10._object = v8;
    String.append(_:)(v10);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    swift_bridgeObjectRetain(a3);
  }
  return a2;
}

uint64_t sub_100379754@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100099864();
  sub_1000BA294(&qword_100BCCC50);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_10009E540();
  v8 = type metadata accessor for TimeZone(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v39 - v14;
  v46 = 0.0;
  v47 = 0.0;
  v16 = objc_msgSend(a1, "w_getCoordinate:", &v46, v13);
  if (!(_DWORD)v16)
  {

LABEL_9:
    v35 = 1;
    goto LABEL_10;
  }
  v17 = sub_1000C45D0((uint64_t)v16, "w_mapItem");
  v18 = objc_msgSend(v17, "timeZone");

  if (!v18)
  {
    sub_1000C138C(v3, 1);
    goto LABEL_8;
  }
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)(v18);

  v19 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v19(v3, v11, v8);
  sub_1000C138C(v3, 0);
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v8) == 1)
  {
LABEL_8:

    sub_100379ADC(v3);
    goto LABEL_9;
  }
  v20 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v15, v3, v8);
  v21 = sub_1000C45D0(v20, "w_mapItem");
  v22 = sub_100764030(v21);
  if (!v23)
  {

    sub_1000DD9F8();
    goto LABEL_9;
  }
  v44 = v22;
  v45 = v23;
  v24 = CLLocationCoordinate2D.id.getter(v46, v47);
  v42 = v25;
  v43 = v24;
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v8);
  Date.init()(v26);
  v27 = type metadata accessor for Date(0);
  v29 = sub_10009926C(v2, 0, v28, v27);
  v30 = sub_1000C45D0(v29, "title");
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v40 = v32;
  v41 = v31;

  v34 = sub_1000C45D0(v33, "subtitle");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v34);

  Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)(v43, v42, v44, v45, v11, v2, v41, v40);
  sub_1000DD9F8();
  v35 = 0;
LABEL_10:
  v36 = sub_1000992C4();
  return sub_10009926C(a2, v35, v37, v36);
}

id sub_100379A4C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, void *a7)
{
  NSString v13;
  id v14;

  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  v14 = objc_msgSend(a7, "URLForSearch:at:span:", v13, a1, a2, a3, a4);

  return v14;
}

uint64_t sub_100379ADC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BCCC50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AutomationAction()
{
  return &type metadata for AutomationAction;
}

_QWORD *sub_100379B2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  int *v80;
  uint64_t v81;
  uint64_t EnumCaseMultiPayload;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(char *, char *, uint64_t, __n128);
  __n128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v130;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        v8 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = a1;
        v10 = a3;
        v11 = 0;
        goto LABEL_35;
      case 1u:
        v13 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = (int *)type metadata accessor for ConditionDetailViewState(0);
        v15 = v14[5];
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        v19 = v14[6];
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
        {
          v23 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
        }
        v73 = v14[7];
        v74 = (char *)a1 + v73;
        v75 = (char *)a2 + v73;
        v76 = *((_OWORD *)v75 + 1);
        *(_OWORD *)v74 = *(_OWORD *)v75;
        *((_OWORD *)v74 + 1) = v76;
        v74[32] = v75[32];
        v77 = v14[8];
        v78 = (_QWORD *)((char *)a1 + v77);
        v79 = (_QWORD *)((char *)a2 + v77);
        v80 = (int *)type metadata accessor for DetailChartSelection(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, (uint64_t)v80))
        {
          v81 = sub_1000BA294(&qword_100BD0B58);
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          v111 = v79[1];
          *v78 = *v79;
          v78[1] = v111;
          v112 = v80[5];
          v130 = (char *)v78 + v112;
          v113 = (char *)v79 + v112;
          v114 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
          v115 = swift_bridgeObjectRetain(v111);
          v114(v130, v113, v22, v115);
          ((void (*)(char *, char *, uint64_t))v114)((char *)v78 + v80[6], (char *)v79 + v80[6], v22);
          ((void (*)(char *, char *, uint64_t))v114)((char *)v78 + v80[7], (char *)v79 + v80[7], v22);
          *(_QWORD *)((char *)v78 + v80[8]) = *(_QWORD *)((char *)v79 + v80[8]);
          v116 = v80[9];
          v117 = (char *)v78 + v116;
          v118 = (char *)v79 + v116;
          v117[8] = v118[8];
          *(_QWORD *)v117 = *(_QWORD *)v118;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, (uint64_t)v80);
        }
        *((_BYTE *)a1 + v14[9]) = *((_BYTE *)a2 + v14[9]);
        v9 = a1;
        v10 = a3;
        v11 = 1;
        goto LABEL_35;
      case 2u:
        v24 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
        v25 = type metadata accessor for AirQualityDetailViewState(0);
        *((_BYTE *)a1 + *(int *)(v25 + 20)) = *((_BYTE *)a2 + *(int *)(v25 + 20));
        v26 = *(int *)(v25 + 24);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v27[32] = v28[32];
        v29 = *((_OWORD *)v28 + 1);
        *(_OWORD *)v27 = *(_OWORD *)v28;
        *((_OWORD *)v27 + 1) = v29;
        v9 = a1;
        v10 = a3;
        v11 = 2;
        goto LABEL_35;
      case 3u:
        v30 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
        v31 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v34;
        v32[32] = v33[32];
        v9 = a1;
        v10 = a3;
        v11 = 3;
        goto LABEL_35;
      case 4u:
        v35 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
        v36 = type metadata accessor for SunriseSunsetDetailViewState(0);
        v37 = *(int *)(v36 + 20);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *((_OWORD *)v38 + 1) = v40;
        v38[32] = v39[32];
        *((_BYTE *)a1 + *(int *)(v36 + 24)) = *((_BYTE *)a2 + *(int *)(v36 + 24));
        v9 = a1;
        v10 = a3;
        v11 = 4;
        goto LABEL_35;
      case 5u:
        v41 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
        v42 = (int *)type metadata accessor for MoonDetailViewState(0);
        v43 = v42[5];
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = type metadata accessor for MoonDetailSelectedDate(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
        {
          v47 = sub_1000BA294(&qword_100BC6CB8);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v45);
          v83 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v44, v45, v83);
          swift_storeEnumTagMultiPayload(v44, v46, EnumCaseMultiPayload);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
        }
        v84 = v42[6];
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        v87 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
        {
          v88 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
        }
        v119 = v42[7];
        v120 = (char *)a1 + v119;
        v121 = (char *)a2 + v119;
        v122 = *((_OWORD *)v121 + 1);
        *(_OWORD *)v120 = *(_OWORD *)v121;
        *((_OWORD *)v120 + 1) = v122;
        v120[32] = v121[32];
        *((_BYTE *)a1 + v42[8]) = *((_BYTE *)a2 + v42[8]);
        v9 = a1;
        v10 = a3;
        v11 = 5;
        goto LABEL_35;
      case 6u:
        v48 = a2[1];
        *a1 = *a2;
        a1[1] = v48;
        v49 = a2[3];
        a1[2] = a2[2];
        a1[3] = v49;
        v50 = (int *)type metadata accessor for NewsArticle(0);
        v51 = v50[6];
        v52 = (char *)a1 + v51;
        v53 = (char *)a2 + v51;
        v54 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain(v48);
        swift_bridgeObjectRetain(v49);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
        {
          v55 = sub_1000BA294(&qword_100BD4280);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
        }
        v89 = v50[7];
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        v92 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
        v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        v93((char *)a1 + v50[8], (char *)a2 + v50[8], v54);
        v94 = v50[9];
        v95 = (_QWORD *)((char *)a1 + v94);
        v96 = (char *)a2 + v94;
        v97 = *(_QWORD *)((char *)a2 + v94 + 8);
        *v95 = *(_QWORD *)((char *)a2 + v94);
        v95[1] = v97;
        v98 = *(_QWORD *)((char *)a2 + v94 + 24);
        v95[2] = *(_QWORD *)((char *)a2 + v94 + 16);
        v95[3] = v98;
        v99 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
        v100 = (char *)v95 + v99;
        v101 = &v96[v99];
        swift_bridgeObjectRetain(v97);
        swift_bridgeObjectRetain(v98);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v54))
        {
          v102 = sub_1000BA294(&qword_100BD4280);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v93(v100, v101, v54);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v54);
        }
        v123 = v50[10];
        v124 = *(_QWORD *)((char *)a2 + v123);
        *(_QWORD *)((char *)a1 + v123) = v124;
        v125 = v50[11];
        v126 = *(_QWORD *)((char *)a2 + v125);
        *(_QWORD *)((char *)a1 + v125) = v126;
        v127 = v50[12];
        v128 = *(_QWORD *)((char *)a2 + v127);
        *(_QWORD *)((char *)a1 + v127) = v128;
        swift_bridgeObjectRetain(v124);
        swift_bridgeObjectRetain(v126);
        swift_bridgeObjectRetain(v128);
        v9 = a1;
        v10 = a3;
        v11 = 6;
        goto LABEL_35;
      case 7u:
        v56 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(a1, a2, v56);
        v57 = (int *)type metadata accessor for AveragesDetailViewState(0);
        *((_BYTE *)a1 + v57[5]) = *((_BYTE *)a2 + v57[5]);
        v58 = v57[6];
        v59 = (_QWORD *)((char *)a1 + v58);
        v60 = (_QWORD *)((char *)a2 + v58);
        v61 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, (uint64_t)v61))
        {
          v62 = sub_1000BA294(&qword_100BCB0D0);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          *v59 = *v60;
          v103 = v61[5];
          v104 = (char *)v59 + v103;
          v105 = (char *)v60 + v103;
          v106 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
          *(_QWORD *)((char *)v59 + v61[6]) = *(_QWORD *)((char *)v60 + v61[6]);
          *(_QWORD *)((char *)v59 + v61[7]) = *(_QWORD *)((char *)v60 + v61[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, (uint64_t)v61);
        }
        v107 = v57[7];
        v108 = (char *)a1 + v107;
        v109 = (char *)a2 + v107;
        v110 = *((_OWORD *)v109 + 1);
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_OWORD *)v108 + 1) = v110;
        v108[32] = v109[32];
        v9 = a1;
        v10 = a3;
        v11 = 7;
        goto LABEL_35;
      case 8u:
        v63 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(a1, a2, v63);
        v64 = type metadata accessor for HomeAndWorkRefinementViewState(0);
        v65 = *(int *)(v64 + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
        v69 = *(int *)(v64 + 24);
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = *((_OWORD *)v71 + 1);
        *(_OWORD *)v70 = *(_OWORD *)v71;
        *((_OWORD *)v70 + 1) = v72;
        v70[32] = v71[32];
        v9 = a1;
        v10 = a3;
        v11 = 8;
LABEL_35:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_10037A414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, __n128);

  v1 = a1;
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
      v2 = type metadata accessor for URL(0);
      goto LABEL_22;
    case 1u:
      v3 = type metadata accessor for DetailCondition(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
      v4 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v5 = v1 + v4[5];
      v6 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      v7 = v1 + v4[6];
      v8 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      v9 = v1 + v4[8];
      v10 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v9, 1, (uint64_t)v10))
        return;
      v11 = swift_bridgeObjectRelease();
      v34 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v8 - 8) + 8);
      v34(v9 + v10[5], v8, v11);
      ((void (*)(uint64_t, uint64_t))v34)(v9 + v10[6], v8);
      v12 = v9 + v10[7];
      v13 = v8;
      v14 = (void (*)(uint64_t, uint64_t))v34;
      break;
    case 2u:
    case 3u:
    case 4u:
      v2 = type metadata accessor for Location(0);
      goto LABEL_22;
    case 5u:
      v15 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v1, v15);
      v16 = type metadata accessor for MoonDetailViewState(0);
      v17 = v1 + *(int *)(v16 + 20);
      v18 = type metadata accessor for MoonDetailSelectedDate(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)
        && swift_getEnumCaseMultiPayload(v17) <= 2)
      {
        v19 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
      }
      v20 = v1 + *(int *)(v16 + 24);
      v21 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
        return;
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
      v12 = v20;
      v13 = v21;
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = (int *)type metadata accessor for NewsArticle(0);
      v23 = v1 + v22[6];
      v24 = type metadata accessor for URL(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      v25 = v1 + v22[7];
      v26 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
      v27(v1 + v22[8], v24);
      v28 = v1 + v22[9];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v28 + *(int *)(type metadata accessor for NewsChannel(0) + 24);
      if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v24))
        v27(v29, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    case 7u:
      v30 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v1, v30);
      v31 = v1 + *(int *)(type metadata accessor for AveragesDetailViewState(0) + 24);
      v32 = type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v31, 1, v32))
        return;
      v1 = v31 + *(int *)(v32 + 20);
      v2 = type metadata accessor for Date(0);
LABEL_22:
      v13 = v2;
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
      v12 = v1;
      break;
    case 8u:
      v33 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v1, v33);
      v1 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState(0) + 20);
      v2 = type metadata accessor for LocationOfInterest(0);
      goto LABEL_22;
    default:
      return;
  }
  v14(v12, v13);
}

_QWORD *sub_10037A814(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  int *v77;
  uint64_t v78;
  uint64_t EnumCaseMultiPayload;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(char *, char *, uint64_t, __n128);
  __n128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v127;

  switch(swift_getEnumCaseMultiPayload(a2))
  {
    case 0u:
      v6 = type metadata accessor for URL(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 0;
      goto LABEL_33;
    case 1u:
      v10 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = v11[6];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      v70 = v11[7];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      v73 = *((_OWORD *)v72 + 1);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v73;
      v71[32] = v72[32];
      v74 = v11[8];
      v75 = (_QWORD *)((char *)a1 + v74);
      v76 = (_QWORD *)((char *)a2 + v74);
      v77 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, (uint64_t)v77))
      {
        v78 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        v108 = v76[1];
        *v75 = *v76;
        v75[1] = v108;
        v109 = v77[5];
        v127 = (char *)v75 + v109;
        v110 = (char *)v76 + v109;
        v111 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
        v112 = swift_bridgeObjectRetain(v108);
        v111(v127, v110, v19, v112);
        ((void (*)(char *, char *, uint64_t))v111)((char *)v75 + v77[6], (char *)v76 + v77[6], v19);
        ((void (*)(char *, char *, uint64_t))v111)((char *)v75 + v77[7], (char *)v76 + v77[7], v19);
        *(_QWORD *)((char *)v75 + v77[8]) = *(_QWORD *)((char *)v76 + v77[8]);
        v113 = v77[9];
        v114 = (char *)v75 + v113;
        v115 = (char *)v76 + v113;
        v114[8] = v115[8];
        *(_QWORD *)v114 = *(_QWORD *)v115;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
      }
      *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_33;
    case 2u:
      v21 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
      v22 = type metadata accessor for AirQualityDetailViewState(0);
      *((_BYTE *)a1 + *(int *)(v22 + 20)) = *((_BYTE *)a2 + *(int *)(v22 + 20));
      v23 = *(int *)(v22 + 24);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v24[32] = v25[32];
      v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
      v7 = a1;
      v8 = a3;
      v9 = 2;
      goto LABEL_33;
    case 3u:
      v27 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
      v28 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v31;
      v29[32] = v30[32];
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_33;
    case 4u:
      v32 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
      v33 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v34 = *(int *)(v33 + 20);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
      v35[32] = v36[32];
      *((_BYTE *)a1 + *(int *)(v33 + 24)) = *((_BYTE *)a2 + *(int *)(v33 + 24));
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_33;
    case 5u:
      v38 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
      v39 = (int *)type metadata accessor for MoonDetailViewState(0);
      v40 = v39[5];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      v43 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
      {
        v44 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42);
        v80 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v41, v42, v80);
        swift_storeEnumTagMultiPayload(v41, v43, EnumCaseMultiPayload);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      }
      v81 = v39[6];
      v82 = (char *)a1 + v81;
      v83 = (char *)a2 + v81;
      v84 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
      {
        v85 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
      }
      v116 = v39[7];
      v117 = (char *)a1 + v116;
      v118 = (char *)a2 + v116;
      v119 = *((_OWORD *)v118 + 1);
      *(_OWORD *)v117 = *(_OWORD *)v118;
      *((_OWORD *)v117 + 1) = v119;
      v117[32] = v118[32];
      *((_BYTE *)a1 + v39[8]) = *((_BYTE *)a2 + v39[8]);
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_33;
    case 6u:
      v45 = a2[1];
      *a1 = *a2;
      a1[1] = v45;
      v46 = a2[3];
      a1[2] = a2[2];
      a1[3] = v46;
      v47 = (int *)type metadata accessor for NewsArticle(0);
      v48 = v47[6];
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v45);
      swift_bridgeObjectRetain(v46);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
      {
        v52 = sub_1000BA294(&qword_100BD4280);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
      }
      v86 = v47[7];
      v87 = (char *)a1 + v86;
      v88 = (char *)a2 + v86;
      v89 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
      v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      v90((char *)a1 + v47[8], (char *)a2 + v47[8], v51);
      v91 = v47[9];
      v92 = (_QWORD *)((char *)a1 + v91);
      v93 = (char *)a2 + v91;
      v94 = *(_QWORD *)((char *)a2 + v91 + 8);
      *v92 = *(_QWORD *)((char *)a2 + v91);
      v92[1] = v94;
      v95 = *(_QWORD *)((char *)a2 + v91 + 24);
      v92[2] = *(_QWORD *)((char *)a2 + v91 + 16);
      v92[3] = v95;
      v96 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v97 = (char *)v92 + v96;
      v98 = &v93[v96];
      swift_bridgeObjectRetain(v94);
      swift_bridgeObjectRetain(v95);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v51))
      {
        v99 = sub_1000BA294(&qword_100BD4280);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        v90(v97, v98, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v51);
      }
      v120 = v47[10];
      v121 = *(_QWORD *)((char *)a2 + v120);
      *(_QWORD *)((char *)a1 + v120) = v121;
      v122 = v47[11];
      v123 = *(_QWORD *)((char *)a2 + v122);
      *(_QWORD *)((char *)a1 + v122) = v123;
      v124 = v47[12];
      v125 = *(_QWORD *)((char *)a2 + v124);
      *(_QWORD *)((char *)a1 + v124) = v125;
      swift_bridgeObjectRetain(v121);
      swift_bridgeObjectRetain(v123);
      swift_bridgeObjectRetain(v125);
      v7 = a1;
      v8 = a3;
      v9 = 6;
      goto LABEL_33;
    case 7u:
      v53 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(a1, a2, v53);
      v54 = (int *)type metadata accessor for AveragesDetailViewState(0);
      *((_BYTE *)a1 + v54[5]) = *((_BYTE *)a2 + v54[5]);
      v55 = v54[6];
      v56 = (_QWORD *)((char *)a1 + v55);
      v57 = (_QWORD *)((char *)a2 + v55);
      v58 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, (uint64_t)v58))
      {
        v59 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        *v56 = *v57;
        v100 = v58[5];
        v101 = (char *)v56 + v100;
        v102 = (char *)v57 + v100;
        v103 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
        *(_QWORD *)((char *)v56 + v58[6]) = *(_QWORD *)((char *)v57 + v58[6]);
        *(_QWORD *)((char *)v56 + v58[7]) = *(_QWORD *)((char *)v57 + v58[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, (uint64_t)v58);
      }
      v104 = v54[7];
      v105 = (char *)a1 + v104;
      v106 = (char *)a2 + v104;
      v107 = *((_OWORD *)v106 + 1);
      *(_OWORD *)v105 = *(_OWORD *)v106;
      *((_OWORD *)v105 + 1) = v107;
      v105[32] = v106[32];
      v7 = a1;
      v8 = a3;
      v9 = 7;
      goto LABEL_33;
    case 8u:
      v60 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(a1, a2, v60);
      v61 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v62 = *(int *)(v61 + 20);
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      v66 = *(int *)(v61 + 24);
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      v69 = *((_OWORD *)v68 + 1);
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v69;
      v67[32] = v68[32];
      v7 = a1;
      v8 = a3;
      v9 = 8;
LABEL_33:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_10037B0D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  char *v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  int *v82;
  uint64_t v83;
  uint64_t EnumCaseMultiPayload;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, char *, uint64_t, __n128);
  __n128 v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char v122;
  uint64_t v123;
  char *v124;
  char *v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v135;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationPreviewModalViewState);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        v6 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 0;
        goto LABEL_34;
      case 1u:
        v10 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = (int *)type metadata accessor for ConditionDetailViewState(0);
        v12 = v11[5];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
        v16 = v11[6];
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        }
        v74 = v11[7];
        v75 = (char *)a1 + v74;
        v76 = (char *)a2 + v74;
        v77 = *(_OWORD *)v76;
        v78 = *((_OWORD *)v76 + 1);
        v75[32] = v76[32];
        *(_OWORD *)v75 = v77;
        *((_OWORD *)v75 + 1) = v78;
        v79 = v11[8];
        v80 = (_QWORD *)((char *)a1 + v79);
        v81 = (_QWORD *)((char *)a2 + v79);
        v82 = (int *)type metadata accessor for DetailChartSelection(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, (uint64_t)v82))
        {
          v83 = sub_1000BA294(&qword_100BD0B58);
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          *v80 = *v81;
          v114 = v81[1];
          v80[1] = v114;
          v115 = v82[5];
          v135 = (char *)v80 + v115;
          v116 = (char *)v81 + v115;
          v117 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
          v118 = swift_bridgeObjectRetain(v114);
          v117(v135, v116, v19, v118);
          ((void (*)(char *, char *, uint64_t))v117)((char *)v80 + v82[6], (char *)v81 + v82[6], v19);
          ((void (*)(char *, char *, uint64_t))v117)((char *)v80 + v82[7], (char *)v81 + v82[7], v19);
          *(_QWORD *)((char *)v80 + v82[8]) = *(_QWORD *)((char *)v81 + v82[8]);
          v119 = v82[9];
          v120 = (char *)v80 + v119;
          v121 = (char *)v81 + v119;
          v122 = v121[8];
          *(_QWORD *)v120 = *(_QWORD *)v121;
          v120[8] = v122;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, (uint64_t)v82);
        }
        *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_34;
      case 2u:
        v21 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = type metadata accessor for AirQualityDetailViewState(0);
        *((_BYTE *)a1 + *(int *)(v22 + 20)) = *((_BYTE *)a2 + *(int *)(v22 + 20));
        v23 = *(int *)(v22 + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = v25[32];
        v27 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v27;
        v24[32] = v26;
        v7 = a1;
        v8 = a3;
        v9 = 2;
        goto LABEL_34;
      case 3u:
        v28 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        v29 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = *(_OWORD *)v31;
        v33 = *((_OWORD *)v31 + 1);
        v30[32] = v31[32];
        *(_OWORD *)v30 = v32;
        *((_OWORD *)v30 + 1) = v33;
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_34;
      case 4u:
        v34 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
        v35 = type metadata accessor for SunriseSunsetDetailViewState(0);
        v36 = *(int *)(v35 + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = *(_OWORD *)v38;
        v40 = *((_OWORD *)v38 + 1);
        v37[32] = v38[32];
        *(_OWORD *)v37 = v39;
        *((_OWORD *)v37 + 1) = v40;
        *((_BYTE *)a1 + *(int *)(v35 + 24)) = *((_BYTE *)a2 + *(int *)(v35 + 24));
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_34;
      case 5u:
        v41 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
        v42 = (int *)type metadata accessor for MoonDetailViewState(0);
        v43 = v42[5];
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = type metadata accessor for MoonDetailSelectedDate(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
        {
          v47 = sub_1000BA294(&qword_100BC6CB8);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v45);
          v85 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v44, v45, v85);
          swift_storeEnumTagMultiPayload(v44, v46, EnumCaseMultiPayload);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
        }
        v86 = v42[6];
        v87 = (char *)a1 + v86;
        v88 = (char *)a2 + v86;
        v89 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89))
        {
          v90 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v89);
        }
        v123 = v42[7];
        v124 = (char *)a1 + v123;
        v125 = (char *)a2 + v123;
        v126 = *(_OWORD *)v125;
        v127 = *((_OWORD *)v125 + 1);
        v124[32] = v125[32];
        *(_OWORD *)v124 = v126;
        *((_OWORD *)v124 + 1) = v127;
        *((_BYTE *)a1 + v42[8]) = *((_BYTE *)a2 + v42[8]);
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_34;
      case 6u:
        *a1 = *a2;
        v48 = a2[1];
        a1[1] = v48;
        a1[2] = a2[2];
        v49 = a2[3];
        a1[3] = v49;
        v50 = (int *)type metadata accessor for NewsArticle(0);
        v51 = v50[6];
        v52 = (char *)a1 + v51;
        v53 = (char *)a2 + v51;
        v54 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain(v48);
        swift_bridgeObjectRetain(v49);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
        {
          v55 = sub_1000BA294(&qword_100BD4280);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
        }
        v91 = v50[7];
        v92 = (char *)a1 + v91;
        v93 = (char *)a2 + v91;
        v94 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
        v95 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        v95((char *)a1 + v50[8], (char *)a2 + v50[8], v54);
        v96 = v50[9];
        v97 = (_QWORD *)((char *)a1 + v96);
        v98 = (char *)a2 + v96;
        *v97 = *(_QWORD *)((char *)a2 + v96);
        v99 = *(_QWORD *)((char *)a2 + v96 + 8);
        v97[1] = v99;
        v97[2] = *(_QWORD *)((char *)a2 + v96 + 16);
        v100 = *(_QWORD *)((char *)a2 + v96 + 24);
        v97[3] = v100;
        v101 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
        v102 = (char *)v97 + v101;
        v103 = &v98[v101];
        swift_bridgeObjectRetain(v99);
        swift_bridgeObjectRetain(v100);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v54))
        {
          v104 = sub_1000BA294(&qword_100BD4280);
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          v95(v102, v103, v54);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v54);
        }
        v128 = v50[10];
        v129 = *(_QWORD *)((char *)a2 + v128);
        *(_QWORD *)((char *)a1 + v128) = v129;
        v130 = v50[11];
        v131 = *(_QWORD *)((char *)a2 + v130);
        *(_QWORD *)((char *)a1 + v130) = v131;
        v132 = v50[12];
        v133 = *(_QWORD *)((char *)a2 + v132);
        *(_QWORD *)((char *)a1 + v132) = v133;
        swift_bridgeObjectRetain(v129);
        swift_bridgeObjectRetain(v131);
        swift_bridgeObjectRetain(v133);
        v7 = a1;
        v8 = a3;
        v9 = 6;
        goto LABEL_34;
      case 7u:
        v56 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(a1, a2, v56);
        v57 = (int *)type metadata accessor for AveragesDetailViewState(0);
        *((_BYTE *)a1 + v57[5]) = *((_BYTE *)a2 + v57[5]);
        v58 = v57[6];
        v59 = (_QWORD *)((char *)a1 + v58);
        v60 = (_QWORD *)((char *)a2 + v58);
        v61 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, (uint64_t)v61))
        {
          v62 = sub_1000BA294(&qword_100BCB0D0);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          *v59 = *v60;
          v105 = v61[5];
          v106 = (char *)v59 + v105;
          v107 = (char *)v60 + v105;
          v108 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
          *(_QWORD *)((char *)v59 + v61[6]) = *(_QWORD *)((char *)v60 + v61[6]);
          *(_QWORD *)((char *)v59 + v61[7]) = *(_QWORD *)((char *)v60 + v61[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, (uint64_t)v61);
        }
        v109 = v57[7];
        v110 = (char *)a1 + v109;
        v111 = (char *)a2 + v109;
        v112 = *(_OWORD *)v111;
        v113 = *((_OWORD *)v111 + 1);
        v110[32] = v111[32];
        *(_OWORD *)v110 = v112;
        *((_OWORD *)v110 + 1) = v113;
        v7 = a1;
        v8 = a3;
        v9 = 7;
        goto LABEL_34;
      case 8u:
        v63 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(a1, a2, v63);
        v64 = type metadata accessor for HomeAndWorkRefinementViewState(0);
        v65 = *(int *)(v64 + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
        v69 = *(int *)(v64 + 24);
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = *(_OWORD *)v71;
        v73 = *((_OWORD *)v71 + 1);
        v70[32] = v71[32];
        *(_OWORD *)v70 = v72;
        *((_OWORD *)v70 + 1) = v73;
        v7 = a1;
        v8 = a3;
        v9 = 8;
LABEL_34:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_10037B9D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  _OWORD *v74;
  _OWORD *v75;
  int *v76;
  uint64_t v77;
  uint64_t EnumCaseMultiPayload;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  _OWORD *v91;
  char *v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;

  switch(swift_getEnumCaseMultiPayload(a2))
  {
    case 0u:
      v6 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 0;
      goto LABEL_33;
    case 1u:
      v10 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      v16 = v11[6];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      v69 = v11[7];
      v70 = (char *)a1 + v69;
      v71 = (char *)a2 + v69;
      v72 = *((_OWORD *)v71 + 1);
      *(_OWORD *)v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v72;
      v70[32] = v71[32];
      v73 = v11[8];
      v74 = (_OWORD *)((char *)a1 + v73);
      v75 = (_OWORD *)((char *)a2 + v73);
      v76 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, (uint64_t)v76))
      {
        v77 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        *v74 = *v75;
        v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
        v106((char *)v74 + v76[5], (char *)v75 + v76[5], v19);
        v106((char *)v74 + v76[6], (char *)v75 + v76[6], v19);
        v106((char *)v74 + v76[7], (char *)v75 + v76[7], v19);
        *(_QWORD *)((char *)v74 + v76[8]) = *(_QWORD *)((char *)v75 + v76[8]);
        v107 = v76[9];
        v108 = (char *)v74 + v107;
        v109 = (char *)v75 + v107;
        v108[8] = v109[8];
        *(_QWORD *)v108 = *(_QWORD *)v109;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, (uint64_t)v76);
      }
      *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_33;
    case 2u:
      v21 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      v22 = type metadata accessor for AirQualityDetailViewState(0);
      *((_BYTE *)a1 + *(int *)(v22 + 20)) = *((_BYTE *)a2 + *(int *)(v22 + 20));
      v23 = *(int *)(v22 + 24);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v24[32] = v25[32];
      v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
      v7 = a1;
      v8 = a3;
      v9 = 2;
      goto LABEL_33;
    case 3u:
      v27 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
      v28 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v31;
      v29[32] = v30[32];
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_33;
    case 4u:
      v32 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(a1, a2, v32);
      v33 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v34 = *(int *)(v33 + 20);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
      v35[32] = v36[32];
      *((_BYTE *)a1 + *(int *)(v33 + 24)) = *((_BYTE *)a2 + *(int *)(v33 + 24));
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_33;
    case 5u:
      v38 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, a2, v38);
      v39 = (int *)type metadata accessor for MoonDetailViewState(0);
      v40 = v39[5];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      v43 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
      {
        v44 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42);
        v79 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v41, v42, v79);
        swift_storeEnumTagMultiPayload(v41, v43, EnumCaseMultiPayload);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      }
      v80 = v39[6];
      v81 = (char *)a1 + v80;
      v82 = (char *)a2 + v80;
      v83 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
      {
        v84 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
      }
      v110 = v39[7];
      v111 = (char *)a1 + v110;
      v112 = (char *)a2 + v110;
      v113 = *((_OWORD *)v112 + 1);
      *(_OWORD *)v111 = *(_OWORD *)v112;
      *((_OWORD *)v111 + 1) = v113;
      v111[32] = v112[32];
      *((_BYTE *)a1 + v39[8]) = *((_BYTE *)a2 + v39[8]);
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_33;
    case 6u:
      v45 = a2[1];
      *a1 = *a2;
      a1[1] = v45;
      v46 = (int *)type metadata accessor for NewsArticle(0);
      v47 = v46[6];
      v48 = (char *)a1 + v47;
      v49 = (char *)a2 + v47;
      v50 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
      {
        v51 = sub_1000BA294(&qword_100BD4280);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
      }
      v85 = v46[7];
      v86 = (char *)a1 + v85;
      v87 = (char *)a2 + v85;
      v88 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
      v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32);
      v89((char *)a1 + v46[8], (char *)a2 + v46[8], v50);
      v90 = v46[9];
      v91 = (_OWORD *)((char *)a1 + v90);
      v92 = (char *)a2 + v90;
      v93 = *(_OWORD *)((char *)a2 + v90 + 16);
      *v91 = *(_OWORD *)((char *)a2 + v90);
      v91[1] = v93;
      v94 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v95 = (char *)v91 + v94;
      v96 = &v92[v94];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v50))
      {
        v97 = sub_1000BA294(&qword_100BD4280);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        v89(v95, v96, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v50);
      }
      *(_QWORD *)((char *)a1 + v46[10]) = *(_QWORD *)((char *)a2 + v46[10]);
      *(_QWORD *)((char *)a1 + v46[11]) = *(_QWORD *)((char *)a2 + v46[11]);
      *(_QWORD *)((char *)a1 + v46[12]) = *(_QWORD *)((char *)a2 + v46[12]);
      v7 = a1;
      v8 = a3;
      v9 = 6;
      goto LABEL_33;
    case 7u:
      v52 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(a1, a2, v52);
      v53 = (int *)type metadata accessor for AveragesDetailViewState(0);
      *((_BYTE *)a1 + v53[5]) = *((_BYTE *)a2 + v53[5]);
      v54 = v53[6];
      v55 = (_QWORD *)((char *)a1 + v54);
      v56 = (_QWORD *)((char *)a2 + v54);
      v57 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, (uint64_t)v57))
      {
        v58 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        *v55 = *v56;
        v98 = v57[5];
        v99 = (char *)v55 + v98;
        v100 = (char *)v56 + v98;
        v101 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
        *(_QWORD *)((char *)v55 + v57[6]) = *(_QWORD *)((char *)v56 + v57[6]);
        *(_QWORD *)((char *)v55 + v57[7]) = *(_QWORD *)((char *)v56 + v57[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, (uint64_t)v57);
      }
      v102 = v53[7];
      v103 = (char *)a1 + v102;
      v104 = (char *)a2 + v102;
      v105 = *((_OWORD *)v104 + 1);
      *(_OWORD *)v103 = *(_OWORD *)v104;
      *((_OWORD *)v103 + 1) = v105;
      v103[32] = v104[32];
      v7 = a1;
      v8 = a3;
      v9 = 7;
      goto LABEL_33;
    case 8u:
      v59 = type metadata accessor for Location(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(a1, a2, v59);
      v60 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v61 = *(int *)(v60 + 20);
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      v64 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
      v65 = *(int *)(v60 + 24);
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      v68 = *((_OWORD *)v67 + 1);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v68;
      v66[32] = v67[32];
      v7 = a1;
      v8 = a3;
      v9 = 8;
LABEL_33:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

