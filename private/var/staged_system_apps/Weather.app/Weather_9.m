void sub_10049040C()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugIncomingMessagesViewController", 43, "init(style:)", 12, 0);
  __break(1u);
}

void sub_100490444()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugIncomingMessagesViewController", 43, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100490494()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugIncomingMessagesViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugIncomingMessagesViewController()
{
  return objc_opt_self(_TtC7Weather35DebugIncomingMessagesViewController);
}

_QWORD *assignWithCopy for MapOverlayKindProvider(_QWORD *a1, _QWORD *a2)
{
  sub_100094D04(a1, a2);
  sub_100094D04(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for MapOverlayKindProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for MapOverlayKindProvider()
{
  return &type metadata for MapOverlayKindProvider;
}

uint64_t sub_1004905C8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == -1)
  {
    sub_1000D9624();
    swift_bridgeObjectRelease(0xE000000000000000);
    return 0xD000000000000026;
  }
  else
  {
    sub_100163A24();
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for LocationsOfInterestState);
  }
}

void sub_100490648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  sub_100098778();
  sub_1000B25F0();
  __chkstk_darwin(v0);
  sub_1000BCED8();
  sub_1000DA9E8();
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000BC274(v2, v4);
  sub_1000D1820();
  if (v3)
  {
    sub_1000DDB7C();
    sub_1000D0A08();
    sub_1000C0A88();
  }
  else
  {
    sub_1000CCDC0();
    sub_100086DA4((unint64_t *)&qword_100BC52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    sub_1000D1308();
    sub_1000C2A1C();
  }
  sub_1000BD4F4();
  sub_10004A2A0();
}

void sub_1004906F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  type metadata accessor for URL(0);
  sub_1000B25F0();
  __chkstk_darwin(v0);
  sub_1000BCED8();
  sub_1000DA9E8();
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000BC274(v2, v4);
  sub_1000D1820();
  if (v3)
  {
    sub_1000DDB7C();
    sub_1000D0A08();
    sub_1000C0A88();
  }
  else
  {
    sub_1000CCDC0();
    sub_100086DA4(&qword_100BCCFF8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    sub_1000D1308();
    sub_1000C2A1C();
  }
  sub_1000BD4F4();
  sub_10004A2A0();
}

unint64_t sub_1004907AC(unint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    sub_1000D9624();
    swift_bridgeObjectRelease();
    sub_1000C0A88();
    a1 = 0xD000000000000014;
  }
  swift_bridgeObjectRetain(a2);
  return a1;
}

void sub_100490820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  type metadata accessor for AttributedString(0);
  sub_1000B25F0();
  __chkstk_darwin(v0);
  sub_1000BCED8();
  sub_1000DA9E8();
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000BC274(v2, v4);
  sub_1000D1820();
  if (v3)
  {
    sub_1000DDB7C();
    sub_1000D0A08();
    sub_1000C0A88();
  }
  else
  {
    sub_1000CCDC0();
    sub_100086DA4(qword_100BE5210, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    sub_1000D1308();
    sub_1000C2A1C();
  }
  sub_1000BD4F4();
  sub_10004A2A0();
}

void sub_1004908D4(void *a1)
{
  os_log_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  NSObject *v43;
  id v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  char v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  double v73;
  double v74;
  uint64_t v75;
  NSObject *v76;
  id v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  os_log_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  NSObject *v103;
  id v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  os_log_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t v119;
  os_log_type_t v120;
  uint8_t *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  os_log_type_t v125;
  os_log_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  id v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  int v146;
  os_log_t v147;
  id v148;
  double v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityAction(0);
  sub_1000B42B0();
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "interaction", v8);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "intent");
    v14 = type metadata accessor for WeatherIntent();
    v15 = (void *)swift_dynamicCastClass(v13, v14);
    if (v15)
    {
      v16 = objc_msgSend(v15, "location");
      if (!v16)
      {
        if (qword_100BC24B0 != -1)
          swift_once(&qword_100BC24B0, sub_1006F391C);
        v52 = sub_100098720();
        v53 = sub_1000AECD4(v52, (uint64_t)qword_100CAF1F8);
        Logger.logObject.getter(v53);
        v54 = sub_10009C0A4();
        if (sub_1000C23F4(v54))
        {
          v55 = (uint8_t *)sub_100098710(2);
          *(_WORD *)v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v6, "WeatherIntentUserActivityHandler found no location; opening location viewer to current location",
            v55,
            2u);
          sub_1000986F0((uint64_t)v55);
        }

        sub_10009D624();
        sub_1000D0180();
        v56 = sub_10009D368();
        v57 = sub_1000CF888();
        sub_1000CDC94(v57, v56 & 1);

        goto LABEL_25;
      }
      v17 = v16;
      v148 = v13;
      v18 = sub_1000C6E74(v16);
      if (v19)
      {
        v20 = v18;
        v21 = v19;
        type metadata accessor for WeatherLocation();
        LOBYTE(v20) = sub_1005DC0B0(v20, v21);
        sub_100098738();
        if ((v20 & 1) != 0)
        {
          if (qword_100BC24B0 != -1)
            swift_once(&qword_100BC24B0, sub_1006F391C);
          v22 = sub_100098720();
          v23 = sub_1000AECD4(v22, (uint64_t)qword_100CAF1F8);
          Logger.logObject.getter(v23);
          v24 = sub_10009C0A4();
          if (sub_1000C23F4(v24))
          {
            v25 = (uint8_t *)sub_100098710(2);
            *(_WORD *)v25 = 0;
            _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v6, "WeatherIntentUserActivityHandler found intent for current location; opening location viewer to current location",
              v25,
              2u);
            sub_1000986F0((uint64_t)v25);
          }

          sub_10009D624();
          sub_1000D0180();
          v26 = sub_10009D368();
          v27 = sub_1000CF888();
          sub_1000CDC94(v27, v26 & 1);

          sub_10009952C();
LABEL_25:
          sub_1000215BC((uint64_t)v10, type metadata accessor for ActivityAction);
          return;
        }
      }
      v34 = sub_1000B4A40(v18, "geolocation");
      if (v34)
      {
        v35 = v34;
        v36 = objc_msgSend(v34, "location");
        if (v36)
        {
          v37 = v36;
          objc_msgSend(v36, "coordinate");
          v39 = v38;
          v41 = v40;

          if (qword_100BC24B0 != -1)
            swift_once(&qword_100BC24B0, sub_1006F391C);
          v42 = sub_100098720();
          v43 = sub_1000AECD4(v42, (uint64_t)qword_100CAF1F8);
          v44 = v35;
          Logger.logObject.getter(v44);
          v45 = sub_10009C0A4();
          if (os_log_type_enabled(v43, (os_log_type_t)v45))
          {
            v146 = v45;
            v147 = v43;
            v46 = sub_100098710(42);
            v145 = sub_100098710(64);
            v151 = v145;
            *(_DWORD *)v46 = 141558787;
            *(_QWORD *)&v149 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
            *(_WORD *)(v46 + 12) = 2081;
            v149 = v39;
            v150 = *(_QWORD *)&v41;
            type metadata accessor for CLLocationCoordinate2D(0);
            v47 = String.init<A>(describing:)(&v149);
            v149 = COERCE_DOUBLE(sub_1000CE1C8(v47, v48, &v151));
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
            sub_100098738();
            *(_WORD *)(v46 + 22) = 2160;
            *(_QWORD *)&v149 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
            *(_WORD *)(v46 + 32) = 2081;
            v49 = sub_10041811C(v44, (SEL *)&selRef_name);
            if (v50)
            {
              v51 = v50;
            }
            else
            {
              v149 = 0.0;
              v150 = 0xE000000000000000;
              sub_1000D9624();
              swift_bridgeObjectRelease();
              v51 = 0x8000000100A06180;
              v49 = 0xD000000000000014;
            }
            v125 = v146;
            v149 = COERCE_DOUBLE(sub_1000CE1C8(v49, v51, &v151));
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);

            sub_1000986C4();
            v126 = v147;
            _os_log_impl((void *)&_mh_execute_header, v147, v125, "WeatherIntentUserActivityHandler found intent with geolocation; coordinate=%{private,mask.hash}s, location"
              "Name=%{private,mask.hash}s",
              (uint8_t *)v46,
              0x2Au);
            v127 = v145;
            swift_arrayDestroy(v145, 2);
            sub_1000986F0(v127);
            sub_1000986F0(v46);

          }
          else
          {

          }
          v128 = sub_10041811C(v44, (SEL *)&selRef_name);
          v130 = v129;
          v131 = sub_100098778();
          sub_1000DCF6C(v131);
          v132 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
          sub_1001C6064(v128, v130, 16, (uint64_t)v6, v132, v39, v41);

          sub_100098964();
          sub_10009952C();
          swift_bridgeObjectRelease();
          goto LABEL_63;
        }

      }
      v58 = sub_1000C6E74(v13);
      if (v59)
      {
        v149 = *(double *)&v58;
        v150 = v59;
        sub_100114EF8();
        v60 = (_QWORD *)sub_1000C669C(58);
        sub_100098964();
        if (v60[2] == 3
          && (sub_100491B50(v60[4], v60[5], v60[6], v60[7], 0x6E6F697461636F4CLL, 0xEA00000000004449) & 1) != 0
          && (v61 = v60[8],
              v62 = v60[9],
              v64 = v60[10],
              v63 = v60[11],
              swift_bridgeObjectRetain(v63),
              v65 = Double.init(_:)(v61, v62, v64, v63),
              (v66 & 1) == 0))
        {
          if (v60[2] < 3uLL)
            goto LABEL_70;
          v67 = *(double *)&v65;
          v68 = v60[12];
          v69 = v60[13];
          v70 = v60[15];
          v147 = (os_log_t)v60[14];
          swift_bridgeObjectRetain(v70);
          sub_10009D2E0();
          *(double *)&v71 = COERCE_DOUBLE(Double.init(_:)(v68, v69, v147, v70));
          if ((v72 & 1) == 0)
          {
            v73 = v67;
            v74 = *(double *)&v71;
            if (qword_100BC24B0 != -1)
              swift_once(&qword_100BC24B0, sub_1006F391C);
            v75 = sub_100098720();
            v76 = sub_1000AECD4(v75, (uint64_t)qword_100CAF1F8);
            v77 = v13;
            Logger.logObject.getter(v77);
            v78 = sub_10009C0A4();
            if (os_log_type_enabled(v76, v78))
            {
              v79 = sub_100098710(22);
              v147 = (os_log_t)sub_100098710(32);
              v149 = *(double *)&v147;
              sub_1000C5540(7.2225e-34);
              v81 = v80 + 8;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v80 + 8);
              *(_WORD *)(v79 + 12) = 2081;
              v82 = sub_10041811C(v77, (SEL *)&selRef_identifier);
              if (v83)
              {
                v84 = v83;
              }
              else
              {
                v82 = 7104878;
                v84 = 0xE300000000000000;
              }
              v151 = sub_1000CE1C8(v82, v84, (uint64_t *)&v149);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v81);

              sub_100098964();
              sub_1000C6B04((void *)&_mh_execute_header, v76, v78, "WeatherIntentUserActivityHandler found intent with ID like 'LocationID:<lat>:<long>'; handling coordinat"
                "e for locationID=%{private,mask.hash}s");
              v85 = v147;
              sub_1000C1934();
              sub_1000986F0((uint64_t)v85);
              sub_1000986F0(v79);

            }
            else
            {

            }
            v139 = sub_1000B4A40(v86, "displayString");
            v140 = static String._unconditionallyBridgeFromObjectiveC(_:)(v139);
            v142 = v141;

            v143 = sub_100098778();
            sub_1000DCF6C(v143);
            v144 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
            sub_1001C6064(v140, v142, 16, (uint64_t)v6, v144, v73, v74);

            swift_bridgeObjectRelease();
            goto LABEL_68;
          }
        }
        else
        {
          sub_10009D2E0();
        }
      }
      v87 = sub_1000C6E74(v13);
      if (v88)
      {
        v149 = *(double *)&v87;
        v150 = v88;
        sub_100114EF8();
        v89 = (_QWORD *)sub_1000C669C(44);
        sub_10009D2E0();
        if (v89[2] == 2)
        {
          v90 = v89[4];
          v91 = v89[5];
          v93 = v89[6];
          v92 = v89[7];
          swift_bridgeObjectRetain(v92);
          v94 = Double.init(_:)(v90, v91, v93, v92);
          if ((v95 & 1) == 0)
          {
            v147 = v94;
            if (v89[2] >= 2uLL)
            {
              v96 = v89[8];
              v97 = v89[9];
              v99 = v89[10];
              v98 = v89[11];
              swift_bridgeObjectRetain(v98);
              sub_1000986C4();
              *(double *)&v100 = COERCE_DOUBLE(Double.init(_:)(v96, v97, v99, v98));
              if ((v101 & 1) == 0)
              {
                v1 = v147;
                v2 = *(double *)&v100;
                if (qword_100BC24B0 == -1)
                {
LABEL_47:
                  v102 = sub_100098720();
                  v103 = sub_1000AECD4(v102, (uint64_t)qword_100CAF1F8);
                  v104 = v13;
                  Logger.logObject.getter(v104);
                  v105 = sub_10009C0A4();
                  if (os_log_type_enabled(v103, v105))
                  {
                    v106 = sub_100098710(22);
                    v147 = (os_log_t)sub_100098710(32);
                    v149 = *(double *)&v147;
                    sub_1000C5540(7.2225e-34);
                    v108 = v107 + 8;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v107 + 8);
                    *(_WORD *)(v106 + 12) = 2081;
                    v109 = sub_10041811C(v104, (SEL *)&selRef_identifier);
                    if (v110)
                    {
                      v111 = v110;
                    }
                    else
                    {
                      v109 = 7104878;
                      v111 = 0xE300000000000000;
                    }
                    v151 = sub_1000CE1C8(v109, v111, (uint64_t *)&v149);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v108);

                    sub_100098738();
                    sub_1000C6B04((void *)&_mh_execute_header, v103, v105, "WeatherIntentUserActivityHandler found intent with ID like '<lat>,<long>'; handling coordinate for"
                      " locationID=%{private,mask.hash}s");
                    v112 = v147;
                    sub_1000C1934();
                    sub_1000986F0((uint64_t)v112);
                    sub_1000986F0(v106);

                  }
                  else
                  {

                  }
                  v133 = sub_1000B4A40(v113, "displayString");
                  v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
                  v136 = v135;

                  v137 = sub_100098778();
                  sub_1000DCF6C(v137);
                  v138 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
                  sub_1001C6064(v134, v136, 16, (uint64_t)v6, v138, *(double *)&v1, v2);

                  sub_10009D2E0();
LABEL_68:
                  swift_bridgeObjectRelease();

                  sub_10009952C();
LABEL_63:
                  sub_100021A14((uint64_t)v6, (uint64_t *)&unk_100BD35A0);
                  return;
                }
LABEL_71:
                swift_once(&qword_100BC24B0, sub_1006F391C);
                goto LABEL_47;
              }
              goto LABEL_53;
            }
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
        }
        sub_1000986C4();
      }
LABEL_53:
      v114 = sub_100491B14();
      v29 = sub_10009D46C((uint64_t)&type metadata for WeatherIntentUserActivityHandler.Error, v114);
      *(_QWORD *)v115 = v17;
      *(_BYTE *)(v115 + 8) = 2;
      sub_100109990();

      sub_10009952C();
      goto LABEL_54;
    }

    v31 = objc_msgSend(v12, "intent");
    v32 = sub_100491B14();
    v29 = sub_10009D46C((uint64_t)&type metadata for WeatherIntentUserActivityHandler.Error, v32);
    *(_QWORD *)v33 = v31;
    *(_BYTE *)(v33 + 8) = 0;
    sub_100109990();

  }
  else
  {
    v28 = sub_100491B14();
    v29 = sub_10009D46C((uint64_t)&type metadata for WeatherIntentUserActivityHandler.Error, v28);
    *(_QWORD *)v30 = 0;
    *(_BYTE *)(v30 + 8) = 3;
    sub_100109990();
  }
LABEL_54:
  if (qword_100BC24B0 != -1)
    swift_once(&qword_100BC24B0, sub_1006F391C);
  v116 = sub_100098720();
  sub_1000AECD4(v116, (uint64_t)qword_100CAF1F8);
  sub_1001102D8();
  v117 = sub_1001102D8();
  v118 = Logger.logObject.getter(v117);
  v120 = static os_log_type_t.error.getter(v118, v119);
  if (os_log_type_enabled(v118, v120))
  {
    v121 = (uint8_t *)sub_100098710(12);
    v122 = sub_100098710(32);
    v149 = *(double *)&v122;
    *(_DWORD *)v121 = 136446210;
    v151 = v29;
    sub_1001102D8();
    sub_1000BA294(&qword_100BD7910);
    v123 = String.init<A>(describing:)(&v151);
    v151 = sub_1000CE1C8(v123, v124, (uint64_t *)&v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152);
    swift_bridgeObjectRelease();
    sub_1000DBA9C();
    sub_1000DBA9C();
    _os_log_impl((void *)&_mh_execute_header, v118, v120, "WeatherIntentUserActivityHandler failed to handle user activity; error=%{public}s",
      v121,
      0xCu);
    sub_1000C1934();
    sub_1000986F0(v122);
    sub_1000986F0((uint64_t)v121);

    sub_1000DBA9C();
  }
  else
  {
    sub_1000DBA9C();
    sub_1000DBA9C();
    sub_1000DBA9C();

  }
}

uint64_t sub_100491630(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for WeatherIntentType(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100491690, 0, 0);
}

uint64_t sub_100491690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 16), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for WeatherIntentType.openUnitsConfiguration(_:))
  {
    type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 64) = sub_1000C1E6C();
    sub_100099AB8();
    return sub_1000C3B44();
  }
  if (v4 == enum case for WeatherIntentType.openNotificationsConfiguration(_:))
  {
    type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 56) = sub_1000C1E6C();
    sub_100099AB8();
    return sub_1000C3B44();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004917A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_100491864(v1);
  return sub_1000C3B44();
}

uint64_t sub_1004917EC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return sub_1000950D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100491818()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_100491958(v1);
  return sub_1000C3B44();
}

double sub_100491864(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  v2 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(uint64_t (**)(uint64_t))(a1 + 64);
  v6 = type metadata accessor for NotificationsAction(0);
  swift_storeEnumTagMultiPayload(v4, v6, 6);
  swift_storeEnumTagMultiPayload(v4, v2, 4);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1000A5EBC((uint64_t)v4, (uint64_t)v8, v5);
  sub_100021A14((uint64_t)v8, (uint64_t *)&unk_100BFFA10);
  sub_1000215BC((uint64_t)v4, type metadata accessor for MainAction);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100491958(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  v2 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(uint64_t (**)(uint64_t))(a1 + 64);
  *v4 = 1;
  swift_storeEnumTagMultiPayload(v4, v6, 15);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1000A5EBC((uint64_t)v4, (uint64_t)v8, v5);
  sub_100021A14((uint64_t)v8, (uint64_t *)&unk_100BFFA10);
  sub_1000215BC((uint64_t)v4, type metadata accessor for MainAction);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100491A38()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100491A64()
{
  uint64_t v0;

  sub_100491A38();
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for WeatherIntentUserActivityHandler()
{
  return objc_opt_self(_TtC7Weather32WeatherIntentUserActivityHandler);
}

void sub_100491AA4(void *a1)
{
  sub_1004908D4(a1);
}

uint64_t sub_100491AC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_100BE5204);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100223BE0;
  return sub_100491630(a1);
}

unint64_t sub_100491B14()
{
  unint64_t result;

  result = qword_100BE5208;
  if (!qword_100BE5208)
  {
    result = swift_getWitnessTable(&unk_1009A2A6C, &type metadata for WeatherIntentUserActivityHandler.Error);
    atomic_store(result, (unint64_t *)&qword_100BE5208);
  }
  return result;
}

uint64_t sub_100491B50(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  v7 = a1 >> 16;
  v8 = a2 >> 16;
  v9 = a3 == a5 && a4 == a6;
  if (v9 && !v7 && v8 == v6)
    return 1;
  else
    return _stringCompareInternal(_:_:_:_:expecting:)(a3, a4, v7, v8) & 1;
}

uint64_t sub_100491BC0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "identifier");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t initializeBufferWithCopyOfBuffer for WeatherIntentUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for WeatherIntentUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for WeatherIntentUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherIntentUserActivityHandler.Error(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherIntentUserActivityHandler.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100491D58(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_100491D70(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WeatherIntentUserActivityHandler.Error()
{
  return &type metadata for WeatherIntentUserActivityHandler.Error;
}

uint64_t sub_100491DA0()
{
  unint64_t v0;
  void *v1;
  Class isa;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;

  v0 = sub_10012059C();
  v1 = (void *)static NSNumberFormatter.percent.getter(v0);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v3 = objc_msgSend(v1, "stringFromNumber:", isa);

  if (v3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = Double._bridgeToObjectiveC()().super.super.isa;
  v8 = objc_msgSend(v1, "stringFromNumber:", v7);

  if (!v8)
  {
    if (v6)
      goto LABEL_13;

LABEL_18:
    v13 = 1;
    return v13 & 1;
  }
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (!v6)
  {

    if (v11)
    {
      v14 = v11;
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  if (!v11)
  {
LABEL_13:

    v14 = v6;
LABEL_16:
    swift_bridgeObjectRelease(v14);
    v13 = 0;
    return v13 & 1;
  }
  if (v4 == v9 && v6 == v11)
    v13 = 1;
  else
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v9, v11, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v11);

  return v13 & 1;
}

double destroy for NotificationNextHourToggleView(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 40));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for NotificationNextHourToggleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v6 = a2 + 40;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v9(a1 + 40, v6, v8);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_WORD *)(a1 + 81) = *(_WORD *)(a2 + 81);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v10;
  swift_retain(v10);
  return a1;
}

uint64_t assignWithCopy for NotificationNextHourToggleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  sub_100094D04((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for NotificationNextHourToggleView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for NotificationNextHourToggleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationNextHourToggleView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationNextHourToggleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationNextHourToggleView()
{
  return &type metadata for NotificationNextHourToggleView;
}

uint64_t sub_100492224(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5B84, 1);
}

uint64_t sub_100492234()
{
  uint64_t v0;
  int v1;
  int v2;
  char v4;
  _BYTE __dst[104];
  _BYTE __src[104];
  _BYTE v8[104];

  v1 = *(unsigned __int8 *)(v0 + 80);
  sub_1004926C4(v0, (uint64_t)v8);
  v2 = v8[81];
  sub_1004927C0((uint64_t)v8);
  sub_1004926C4(v0, (uint64_t)__src);
  if (v1 == 1 || v2 == 0)
  {
    memcpy(__dst, __src, sizeof(__dst));
    v4 = (__src[82] | __dst[32]) ^ 1;
    sub_1004927C0((uint64_t)__dst);
  }
  else
  {
    sub_1004927C0((uint64_t)__src);
    v4 = 1;
  }
  return v4 & 1;
}

uint64_t sub_1004922CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  _QWORD v30[2];
  unsigned __int8 v31;

  v29 = a1;
  v2 = sub_1000BA294(&qword_100BE52B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE52C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004926C4(v1, (uint64_t)v30);
  v9 = type metadata accessor for MainActor(0);
  v10 = static MainActor.shared.getter(v9);
  v11 = sub_100098740((uint64_t)&unk_100B75E28, 136);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = &protocol witness table for MainActor;
  sub_1000BAD74(v11);
  v12 = sub_1004926C4(v1, (uint64_t)v30);
  v13 = static MainActor.shared.getter(v12);
  v14 = sub_100098740((uint64_t)&unk_100B75E50, 136);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  sub_1000BAD74(v14);
  Binding.init(get:set:)(v30, sub_1004926FC, v11, sub_10049270C, v14, &type metadata for Bool);
  v15 = v30[0];
  v16 = v30[1];
  v17 = v31;
  v18 = sub_1000BA294(&qword_100BD99D8);
  v19 = sub_100463C04();
  v20 = Toggle.init(isOn:label:)(v15, v16, v17, sub_10049263C, 0, v18, v19);
  v21 = static Font.body.getter(v20);
  KeyPath = swift_getKeyPath(&unk_1009A2B80);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v23 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *v23 = KeyPath;
  v23[1] = v21;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  LOBYTE(v21) = sub_100492234();
  v24 = swift_getKeyPath(&unk_1009A2BB0);
  v25 = sub_100098740((uint64_t)&unk_100B75E78, 17);
  *(_BYTE *)(v25 + 16) = v21 & 1;
  v26 = v29;
  sub_100492738((uint64_t)v8, v29);
  v27 = (uint64_t *)(v26 + *(int *)(sub_1000BA294(&qword_100BE52C8) + 36));
  *v27 = v24;
  v27[1] = (uint64_t)sub_1001545E8;
  v27[2] = v25;
  return sub_100492780((uint64_t)v8);
}

uint64_t sub_100492528@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t result;
  _BYTE v9[8];
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 96);
  v9[0] = *(_BYTE *)(a1 + 88);
  v10 = v4;
  v5 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v11, v5);
  v6 = v11;
  sub_1004926C4(a1, (uint64_t)v9);
  if (v6 == 1)
    v7 = sub_100492234() ^ 1;
  else
    v7 = 0;
  result = sub_1004927C0((uint64_t)v9);
  *a2 = v7 & 1;
  return result;
}

void sub_1004925BC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[9];
  uint64_t v9;

  v5 = *a1;
  v6 = *(_QWORD *)(a4 + 96);
  v8[1] = *(_BYTE *)(a4 + 88);
  v9 = v6;
  v8[0] = v5;
  v7 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.setter(v8, v7);
  sub_1000DB418((_QWORD *)(a4 + 40), *(_QWORD *)(a4 + 64));
  sub_1004855B0();
}

uint64_t sub_10049263C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000017, 0x8000000100A06230);
  result = Text.init(_:tableName:bundle:comment:)(v2, v4, v3 & 1, v5, 0, 0, 0, "Toggle for turning on or off next-hour precipitation notifications");
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  *(_WORD *)(a1 + 32) = 256;
  return result;
}

uint64_t sub_1004926C4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NotificationNextHourToggleView(a2, a1);
  return a2;
}

uint64_t sub_1004926FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100492528(v1 + 32, a1);
}

void sub_10049270C(char *a1)
{
  uint64_t v1;

  sub_1004925BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_100492728()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100492738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BE52C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100492780(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE52C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004927C0(uint64_t a1)
{
  destroy for NotificationNextHourToggleView(a1);
  return a1;
}

unint64_t sub_1004927F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE52D0;
  if (!qword_100BE52D0)
  {
    v1 = sub_100075EB0(&qword_100BE52C8);
    sub_100492874();
    sub_10005F124(&qword_100BC6718, &qword_100BC6720, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE52D0);
  }
  return result;
}

unint64_t sub_100492874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE52D8;
  if (!qword_100BE52D8)
  {
    v1 = sub_100075EB0(&qword_100BE52C0);
    sub_10005F124(&qword_100BE52E0, &qword_100BE52B8, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    sub_10005F124(&qword_100BC4E20, &qword_100BC4E28, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE52D8);
  }
  return result;
}

uint64_t sub_100492910()
{
  uint64_t v0;

  sub_1000BF8D0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10049295C(v0 + 40);
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for MainStoreObserver()
{
  return objc_opt_self(_TtC7WeatherP33_9E81D9902C2841F865A2574969D6E78817MainStoreObserver);
}

uint64_t sub_10049295C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE5398);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10049299C(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v3 = v2;
  v6 = type metadata accessor for CurrentLocation(0);
  __chkstk_darwin(v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100037768(v3, (uint64_t)v11, (uint64_t *)&unk_100C0D170);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6) == 1)
  {
    v12 = type metadata accessor for ListLocationViewModel(0);
    _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v12);
  }
  else
  {
    sub_10007802C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    a1(v8);
    sub_1000215BC((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
}

uint64_t sub_100492AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = 0;
  v6 = *(_QWORD *)(type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0) - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  while ((sub_10010C890(v7, a1) & 1) == 0)
  {
    ++v5;
    v7 += v8;
    if (v2 == v5)
      return 0;
  }
  return v5;
}

uint64_t sub_100492B88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for Location.Identifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  sub_100086DA4((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
  v10 = v9;
  v11 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v10) & 1) == 0)
  {
    ++v11;
    v7 += v8;
    if (v2 == v11)
      return 0;
  }
  return v11;
}

uint64_t sub_100492C54@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1000BA294(&qword_100BD4B90);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v18[-v9];
  v11 = (uint64_t)v2 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___listAnimationKind;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___listAnimationKind, v19, 0, 0);
  sub_100037768(v11, (uint64_t)v10, &qword_100BD4B90);
  v12 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v10, v12);
  sub_100021A14((uint64_t)v10, &qword_100BD4B90);
  v13 = static Settings.VFX.animatedBackgrounds.getter();
  v14 = Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter();
  swift_release(v13);
  sub_100086DA4(&qword_100BE55A8, type metadata accessor for ListViewModelFactory, (uint64_t)&unk_1009A2D08);
  Configurable.setting<A>(_:)(v14, v4, v15);
  v16 = swift_release(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16))(v7, a1, v12, v16);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v12);
  swift_beginAccess(v11, v18, 33, 0);
  sub_1000A3908((uint64_t)v7, v11, &qword_100BD4B90);
  return swift_endAccess(v18);
}

uint64_t sub_100492E28()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unsigned __int8 v7;

  v1 = OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___allListVfxBackgroundsEnabled;
  v2 = *((unsigned __int8 *)v0
       + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___allListVfxBackgroundsEnabled);
  if (v2 != 2)
    return v2 & 1;
  v3 = *v0;
  v4 = static Settings.VFX.allListVfxBackgroundsEnabled.getter();
  sub_100086DA4(&qword_100BE55A8, type metadata accessor for ListViewModelFactory, (uint64_t)&unk_1009A2D08);
  Configurable.setting<A>(_:)(v4, v3, v5);
  swift_release(v4);
  result = v7;
  *((_BYTE *)v0 + v1) = v7;
  return result;
}

uint64_t sub_100492EB8()
{
  _QWORD *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v1 = (char *)v0 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___listVfxCellsEnabled;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___listVfxCellsEnabled + 8) != 1)
    return *(_QWORD *)v1;
  v2 = *v0;
  v3 = static Settings.VFX.listVfxCellsEnabled.getter();
  sub_100086DA4(&qword_100BE55A8, type metadata accessor for ListViewModelFactory, (uint64_t)&unk_1009A2D08);
  Configurable.setting<A>(_:)(v3, v2, v4);
  swift_release(v3);
  result = v6;
  *(_QWORD *)v1 = v6;
  v1[8] = 0;
  return result;
}

void sub_100492F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = v0;
  type metadata accessor for UnitManager(0);
  v2 = static UnitManager.standard.getter();
  v3 = UnitManager.temperature.getter();
  swift_release(v2);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedByCachedModel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedByCachedModel) = v3;

}

void sub_100492FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedModel, v4, 33, 0);
  sub_1004995C4(a1, v3);
  swift_endAccess(v4);
  sub_100492F50();
  sub_100021A14(a1, &qword_100BC46E8);
}

uint64_t sub_10049301C()
{
  uint64_t v0;

  if ((static Settings.Features.homeAndWorkEnabled.getter() & 1) != 0
    && (static Settings.HomeAndWork.homeAndWorkLabelEnabled.getter() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_forceDisplayHomeAndWorkUI);
  }
}

uint64_t sub_100493050@<X0>(uint64_t a1@<X0>, char a2@<W1>, BOOL *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100492C54((uint64_t)v9);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:))
  {
    *a3 = (sub_100492E28() & 1) != 0 || (a2 & 1) == 0 && sub_100492EB8() > a1;
    v16 = enum case for BackgroundAnimationKind.vfx(_:);
    v17 = type metadata accessor for BackgroundAnimationKind(0);
    return (*(uint64_t (**)(BOOL *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a3, v16, v17);
  }
  else
  {
    v11 = v10;
    v12 = enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:);
    v13 = enum case for BackgroundAnimationKind.mica(_:);
    v14 = type metadata accessor for BackgroundAnimationKind(0);
    result = (*(uint64_t (**)(BOOL *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a3, v13, v14);
    if (v11 != v12)
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

void sub_1004931A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  int *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t, _QWORD);
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, _QWORD);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(uint64_t, uint64_t, _QWORD);
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __n128 v155;
  int v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __n128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  double v179;
  uint64_t v180;
  uint64_t (*v181)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, double, _DWORD, uint64_t, uint64_t);
  uint64_t v182;
  _QWORD *v183;
  int v184;
  uint64_t v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  double v205;
  double v206;
  double v207;
  double v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  void (*v227)(void);
  int *v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  uint64_t *v239;
  uint64_t v240;
  char v241;
  char v242;
  _QWORD *v243;
  _QWORD *v244;
  _QWORD *v245;
  _BYTE *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t (*v254)(uint64_t, _QWORD);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t (*v266)(uint64_t, _QWORD);
  uint64_t v267;
  uint64_t v268;
  int *v269;
  void *v270;
  void *v271;
  id v272;
  id v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t *v284;
  int *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char v299;
  char v300;
  char *v301;
  char v302;
  char v303;
  uint64_t *v304;
  uint64_t v305;
  uint64_t *v306;
  _QWORD *v307;
  uint64_t v308;
  char v309;
  _BYTE *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t (*v324)(uint64_t, _QWORD);
  uint64_t v325;
  uint64_t *v326;
  uint64_t v327;
  uint64_t *v328;
  uint64_t v329;
  uint64_t v330;
  int *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  _QWORD *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  int *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  _BYTE *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  int v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  int v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  char v377[8];
  char v378[8];
  _QWORD *v379;
  uint64_t v380;
  uint64_t v381;
  char v382[8];
  char v383[8];
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;

  v372 = a1;
  v371 = a2;
  v356 = type metadata accessor for LearnMoreAttributorViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v5);
  sub_100079F7C();
  v7 = sub_1000987B4(v6);
  v346 = type metadata accessor for LazyOptions(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v10 = sub_1000987B4(v9);
  v11 = type metadata accessor for ProviderAttributionConfiguration(v10);
  sub_1000B43A4(v11, (uint64_t)v383);
  v358 = v12;
  sub_10009D98C();
  __chkstk_darwin(v13);
  v15 = sub_1000987B4((uint64_t)&v329 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v374 = type metadata accessor for CurrentLocation(v15);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  sub_10009511C(v17);
  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v19);
  sub_100079F7C();
  v373 = v20;
  v21 = sub_1000BAD84();
  v22 = sub_1000B43A4(v21, (uint64_t)&v386);
  v369 = v23;
  __chkstk_darwin(v22);
  sub_10009511C((uint64_t)&v329 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v343 = v25;
  __chkstk_darwin(v26);
  sub_100079F7C();
  v366 = sub_1000DB2BC(v27);
  v365 = *(_QWORD *)(v366 - 8);
  sub_10009D98C();
  __chkstk_darwin(v28);
  sub_100088FDC();
  v30 = sub_1000DC710(v29);
  sub_1000B43A4(v30, (uint64_t)&v371);
  v341 = v31;
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_100088FDC();
  sub_10009511C(v33);
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v35);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v36);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v37);
  sub_100079F7C();
  sub_10009511C(v38);
  sub_1000BA294(&qword_100BE5568);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v40);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v41);
  sub_1000F4430(v42, v43, v44, v45, v46, v47, v48, v49, v329);
  sub_1000BA294(&qword_100BD0488);
  sub_1000B42B0();
  __chkstk_darwin(v50);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v51);
  sub_100079F7C();
  sub_10009511C(v52);
  v53 = sub_1000BA294(&qword_100BDE860);
  sub_1000B42B0();
  __chkstk_darwin(v54);
  sub_100088FDC();
  sub_10009511C(v55);
  sub_1000BA294(&qword_100BC46E8);
  sub_1000B42B0();
  __chkstk_darwin(v56);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v57);
  v59 = (char *)&v329 - v58;
  v60 = type metadata accessor for ListViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v61);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v62);
  sub_100079F7C();
  sub_10009511C(v63);
  sub_1000BA294(&qword_100BE5570);
  sub_1000B42B0();
  __chkstk_darwin(v64);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v65);
  v67 = (char *)&v329 - v66;
  v362 = type metadata accessor for OSSignpostID(0);
  v361 = *(_QWORD *)(v362 - 8);
  sub_10009D98C();
  __chkstk_darwin(v68);
  sub_10007A130();
  type metadata accessor for ListInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v69);
  sub_100094EC4();
  v70 = type metadata accessor for ActualListInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v71);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v72);
  v74 = (char *)&v329 - v73;
  __chkstk_darwin(v75);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v76);
  v78 = (uint64_t *)((char *)&v329 - v77);
  sub_100080C0C(v372, v2, type metadata accessor for ListInput);
  sub_100088FC8(v2, 1, v70);
  if (v93)
  {
    sub_1000215BC(v2, type metadata accessor for ListInput);
    sub_1000C135C();
    _s7Weather24LocationCompositionStateOwst_0(v79, v80, v81, v60);
    return;
  }
  v348 = (int *)v60;
  v82 = v78;
  sub_10007802C(v2, (uint64_t)v78, type metadata accessor for ActualListInput);
  v83 = v376;
  v84 = *(id *)(v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_logger);
  v85 = OSSignpostID.init(log:)(v84);
  v86 = static os_signpost_type_t.begin.getter(v85);
  v333 = (uint64_t)v84;
  os_signpost(_:dso:log:name:signpostID:)(v86, &_mh_execute_header, v84, "Weather:ListViewModelFactory:makeModel", 38, 2, v3);
  v87 = v83 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedInput;
  sub_1000992EC(v87, (uint64_t)v382);
  v332 = v87;
  v88 = sub_10007A04C();
  sub_100037768(v88, v89, v90);
  v91 = sub_1000C0944();
  sub_100088FC8(v91, v92, v70);
  v94 = (int *)v70;
  v334 = v3;
  if (v93)
  {
    v95 = &qword_100BE5570;
    v96 = (uint64_t)v67;
LABEL_10:
    sub_100021A14(v96, v95);
LABEL_11:
    v103 = v82;
LABEL_12:
    v349 = (uint64_t)v103 + v94[10];
    v104 = *(unsigned __int8 *)(v349 + 8);
    v105 = (uint64_t)v103 + v94[5];
    v106 = v350;
    sub_100037768(v105, v350, (uint64_t *)&unk_100C0D170);
    __chkstk_darwin(v107);
    v108 = v375;
    v325 = v376;
    v326 = v103;
    LODWORD(v372) = v104;
    LOBYTE(v327) = v104;
    sub_10049299C((void (*)(char *))sub_10049893C, v375);
    v340 = 0;
    sub_100075DD0(v106);
    v109 = v351;
    sub_100037768(v108, v351, &qword_100BE5568);
    v110 = type metadata accessor for ListLocationViewModel(0);
    v111 = sub_10003BD0C();
    v113 = _s7Weather24LocationCompositionStateOwet_0(v111, v112, v110);
    sub_100099298(v109);
    sub_100080C0C((uint64_t)v103, (uint64_t)v74, type metadata accessor for ActualListInput);
    if (v113 == 1)
    {
      v114 = v74[v94[22]];
      sub_1000215BC((uint64_t)v74, type metadata accessor for ActualListInput);
      v116 = v363;
      if ((v114 - 1) < 2)
      {
        sub_1000BA294(&qword_100BC3488);
        v351 = v105;
        v117 = v339;
        swift_storeEnumTagMultiPayload(v339, v374, 3);
        type metadata accessor for LocationOfInterest(0);
        sub_1000C135C();
        _s7Weather24LocationCompositionStateOwst_0(v118, v119, v120, v121);
        sub_100099970();
        sub_1000B3B68(v117, v122, v123);
        v124 = (_QWORD *)*v103;
        v125 = v94[24];
        v350 = (uint64_t)v103 + v94[25];
        v126 = *(uint64_t *)((char *)v103 + v125 + 8);
        v127 = (uint64_t *)((char *)v103 + v94[28]);
        v129 = v127[2];
        v337 = v127[1];
        v128 = v337;
        v330 = v127[3];
        v130 = v330;
        LODWORD(v336) = *((unsigned __int8 *)v103 + v94[26]);
        LODWORD(v335) = *(unsigned __int8 *)(v349 + 8);
        HIDWORD(v329) = *((unsigned __int8 *)v103 + v94[33]);
        v131 = *(uint64_t *)((char *)v103 + v94[30]);
        swift_bridgeObjectRetain(v124);
        swift_bridgeObjectRetain(v126);
        swift_bridgeObjectRetain(v128);
        swift_bridgeObjectRetain(v129);
        swift_bridgeObjectRetain(v130);
        BYTE5(v326) = BYTE4(v329);
        BYTE1(v326) = v335;
        LOBYTE(v326) = v336;
        sub_1000BEC54();
        sub_1004951CC(v117, v124, v350, v126, v129, v132, v325, (char)v326, BYTE1(v326), 1u, 0, 0, BYTE5(v326), v131);
        v116 = v363;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000988C4();
        v133 = v117;
        v105 = v351;
        sub_100094F10(v133, v134);
        v135 = v375;
        sub_100099298(v375);
        sub_100099444();
        _s7Weather24LocationCompositionStateOwst_0(v136, v137, v138, v110);
        sub_1000787D4(v128, v135, &qword_100BE5568);
      }
    }
    else
    {
      sub_1000215BC((uint64_t)v74, type metadata accessor for ActualListInput);
      v116 = v363;
    }
    v139 = *(uint64_t *)((char *)v103 + v94[6]);
    __chkstk_darwin(v115);
    v140 = v376;
    v327 = v376;
    v328 = v103;
    sub_10009EF94();
    sub_1006887BC((uint64_t)sub_10049895C, (uint64_t)&v325, v139);
    v142 = v141;
    sub_1000986E8();
    v143 = v372;
    v350 = v142;
    sub_100497178(v372, v142, (uint64_t)v103);
    __chkstk_darwin(v144);
    v325 = v140;
    v326 = v103;
    LOBYTE(v327) = v143;
    sub_10084AB88();
    v363 = v145;
    sub_1000986E8();
    sub_10003B59C(v140 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_notificationsOptInStatusFactory, (uint64_t)&v379);
    v340 = v381;
    v341 = v380;
    v342 = sub_1000DB418(&v379, v380);
    v146 = v94[18];
    LODWORD(v338) = *((unsigned __int8 *)v103 + v94[17]);
    LODWORD(v339) = *((unsigned __int8 *)v103 + v146);
    sub_1000AE924();
    sub_1000B3B68(v364, v147, v148);
    v149 = v94[23];
    v351 = v94[22];
    LODWORD(v336) = *((unsigned __int8 *)v103 + v351);
    LODWORD(v337) = *((unsigned __int8 *)v103 + v149);
    v150 = (uint64_t *)((char *)v103 + v94[28]);
    v152 = *v150;
    v151 = v150[1];
    v153 = v150[2];
    v154 = v150[3];
    sub_100037768(v105, v116, (uint64_t *)&unk_100C0D170);
    sub_1000CE5A4(v116);
    sub_10009EF94();
    sub_1000860DC();
    if (&v329 == 1)
    {
      sub_100021A14(v116, (uint64_t *)&unk_100C0D170);
      v156 = 0;
    }
    else
    {
      CurrentLocation.id.getter(v155);
      v156 = v157;
      sub_1000215BC(v116, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    }
    v158 = sub_10007A04C();
    sub_10009AD1C(v158, v159, v152, v151, v153, v154, v160, v161, v329, v330, (uint64_t)v331, v332, v333, v334, v335, v336, v337, v338, v339,
      v340);
    v163 = v162;
    sub_10003BC58();
    sub_1000986E8();
    swift_bridgeObjectRelease();
    sub_1000986C4();
    v165 = *v150;
    v164 = v150[1];
    v166 = v150[2];
    v167 = v150[3];
    v168 = v352;
    sub_100037768(v105, v352, (uint64_t *)&unk_100C0D170);
    sub_1000CE5A4(v168);
    sub_10009EF94();
    sub_1000860DC();
    if (v156 == 1)
    {
      sub_100021A14(v168, (uint64_t *)&unk_100C0D170);
      v172 = 0;
      v173 = 0;
    }
    else
    {
      v174 = CurrentLocation.id.getter(v169);
      v175 = v168;
      v172 = v174;
      v173 = v176;
      sub_1000215BC(v175, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    }
    sub_10066D12C(v172, v173, v165, v164, v166, v167, v170, v171, v329, v330, (uint64_t)v331, v332, v333, v334, v335, v336, v337, v338, v339,
      v340);
    v178 = v177;
    sub_10003BC58();
    sub_1000986E8();
    swift_bridgeObjectRelease();
    v179 = sub_1000986C4();
    v180 = *((unsigned __int8 *)v103 + v94[20]);
    v352 = v94[16];
    v181 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, double, _DWORD, uint64_t, uint64_t))(v340 + 8);
    LOBYTE(v325) = *((_BYTE *)v103 + v352);
    v182 = v364;
    v183 = v342;
    v184 = v181(v338, v339, v364, v336, v337, v163 & 1, v178 & 1, v180, v179, v325, v341, v340);
    sub_100094F10(v182, *(uint64_t (**)(uint64_t, _QWORD))(v365 + 8));
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v379);
    if (*(uint64_t *)((char *)v103 + v94[30]) == 1)
    {
      LODWORD(v366) = v184;
      sub_1000CDCA0();
    }
    else
    {
      sub_1000B2EA4((uint64_t)v103, type metadata accessor for ActualListInput, (uint64_t)&v372);
      sub_1000CDCA0();
      if ((v184 & 1) != 0)
      {
        v186 = *((unsigned __int8 *)v183 + v94[21]);
        sub_10009BC18(v185, type metadata accessor for ActualListInput);
        LODWORD(v366) = v186 == 1;
      }
      else
      {
        sub_10009BC18(v185, type metadata accessor for ActualListInput);
        LODWORD(v366) = 0;
      }
    }
    v190 = *(_QWORD *)(v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_appConfigurationManager + 24);
    v191 = *(_QWORD *)(v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_appConfigurationManager + 32);
    sub_10009C13C((_QWORD *)(v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_appConfigurationManager));
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v190, v191);
    sub_1004976F4(v103, v373);
    v192 = v353;
    sub_100037768(v105, v353, (uint64_t *)&unk_100C0D170);
    sub_100088FC8(v192, 1, v374);
    v331 = v94;
    if (v93)
    {
      sub_100021A14(v192, (uint64_t *)&unk_100C0D170);
      v193 = v344;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 16))(v344, v178, v165);
      v194 = *(unsigned __int8 *)(v164 + 80);
      v195 = (v194 + 16) & ~v194;
      v196 = swift_allocObject(&unk_100B75F10, v195 + v343, v194 | 7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 32))(v196 + v195, v193, v165);
      v379 = _swiftEmptyArrayStorage;
      sub_100086DA4((unint64_t *)&qword_100BE5578, (uint64_t (*)(uint64_t))&type metadata accessor for LazyOptions, (uint64_t)&protocol conformance descriptor for LazyOptions);
      v198 = v197;
      v199 = sub_1000BA294(&qword_100BE5580);
      v200 = sub_1001210BC();
      v201 = v347;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v379, v199, v200, v346, v198);
      v202 = sub_1000BA294(&qword_100BE5590);
      swift_allocObject(v202, *(unsigned int *)(v202 + 48), *(unsigned __int16 *)(v202 + 52));
      v215 = Lazy.init(options:loadBlock:)(v201, sub_100499570, v196);
      v209 = v357;
      v214 = v358;
    }
    else
    {
      v203 = v345;
      sub_10007802C(v192, v345, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      v204 = CurrentLocation.coordinate.getter();
      v206 = v205;
      v208 = v207;
      v209 = v357;
      v210 = AppConfiguration.providerAttribution.getter(v204);
      v211 = ProviderAttributionConfiguration.mapDataLearnMoreURL.getter(v210);
      v213 = v212;
      v214 = v358;
      sub_1000B3274(v209, *(uint64_t (**)(uint64_t, uint64_t))(v358 + 8));
      v215 = sub_1000130A4(v211, v213, v206, v208);
      sub_1000986C4();
      sub_1000215BC(v203, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    }
    v216 = sub_100497F44((uint64_t)v103, v376);
    v217 = v354;
    sub_100037768(v373, v354, &qword_100BD4280);
    v219 = AppConfiguration.providerAttribution.getter(v218);
    v220 = ProviderAttributionConfiguration.featureAvailabilityURL.getter(v219);
    v222 = v221;
    sub_1000B3274(v209, *(uint64_t (**)(uint64_t, uint64_t))(v214 + 8));
    v223 = (uint64_t)v355;
    *v355 = 1;
    *(_QWORD *)(v223 + 8) = v216;
    v224 = v356;
    sub_1000C091C(v217, v223 + *(int *)(v356 + 24));
    v225 = (uint64_t *)(v223 + *(int *)(v224 + 28));
    *v225 = v220;
    v225[1] = v222;
    v374 = v215;
    swift_retain();
    sub_100021A14(v217, &qword_100BD4280);
    *(_QWORD *)(v223 + *(int *)(v224 + 32)) = v215;
    v226 = v367;
    sub_10007802C(v223, v367, type metadata accessor for LearnMoreAttributorViewModel);
    v365 = sub_100498374(v350, v372, v363);
    sub_1000986E8();
    sub_1000DDB90();
    v227 = *(void (**)(void))(v215 + 64);
    LODWORD(v364) = *((unsigned __int8 *)v103 + v352);
    v227();
    sub_1000DDB90();
    sub_1000C5560(*(uint64_t (**)(uint64_t, uint64_t))(v215 + 16));
    sub_1000DDB90();
    sub_1000C5560(*(uint64_t (**)(uint64_t, uint64_t))(v215 + 24));
    sub_1000DDB90();
    sub_1000C5560(*(uint64_t (**)(uint64_t, uint64_t))(v215 + 32));
    sub_1000DDB90();
    sub_1000C5560(*(uint64_t (**)(uint64_t, uint64_t))(v215 + 40));
    sub_1000DDB90();
    v359 = (*(uint64_t (**)(uint64_t, uint64_t))(v215 + 48))(v222, v215);
    sub_1000DDB90();
    sub_1000C5560(*(uint64_t (**)(uint64_t, uint64_t))(v215 + 56));
    v356 = *(_QWORD *)v349;
    LODWORD(v355) = *(unsigned __int8 *)(v349 + 8);
    v228 = v331;
    LODWORD(v357) = *((unsigned __int8 *)v103 + v331[15]);
    v229 = v348;
    v230 = v360;
    sub_100037768(v375, v360 + v348[8], &qword_100BE5568);
    v231 = v228[11];
    v232 = (uint64_t *)((char *)v103 + v228[12]);
    v233 = *v232;
    v358 = v232[1];
    v234 = v358;
    v235 = (uint64_t *)((char *)v103 + v228[13]);
    v236 = v226;
    v237 = v235[1];
    v352 = *v235;
    LODWORD(v354) = *((unsigned __int8 *)v103 + v231);
    sub_100080C0C(v236, v230 + v229[13], type metadata accessor for LearnMoreAttributorViewModel);
    v238 = *((_BYTE *)v103 + v228[8]);
    v239 = (uint64_t *)((char *)v103 + v228[9]);
    v240 = v239[1];
    v350 = *v239;
    LODWORD(v353) = *((unsigned __int8 *)v103 + v351);
    LOBYTE(v217) = *((_BYTE *)v103 + v228[31]);
    sub_100037768((uint64_t)v103 + v228[32], v230 + v229[19], &qword_100BC3620);
    v241 = *((_BYTE *)v103 + v228[34]);
    *(_QWORD *)v230 = v356;
    *(_BYTE *)(v230 + 8) = (_BYTE)v355;
    *(_BYTE *)(v230 + 9) = v366 & 1;
    *(_BYTE *)(v230 + 10) = v357;
    v242 = v364;
    *(_BYTE *)(v230 + 11) = v364;
    *(_QWORD *)(v230 + v229[9]) = v363;
    v243 = (_QWORD *)(v230 + v229[10]);
    *v243 = v233;
    v243[1] = v234;
    v244 = (_QWORD *)(v230 + v229[11]);
    *v244 = v352;
    v244[1] = v237;
    *(_BYTE *)(v230 + v229[12]) = v354;
    *(_QWORD *)(v230 + v229[14]) = v365;
    *(_BYTE *)(v230 + v229[15]) = v238;
    v245 = (_QWORD *)(v230 + v229[16]);
    *v245 = v350;
    v245[1] = v240;
    *(_BYTE *)(v230 + v229[17]) = v353;
    *(_BYTE *)(v230 + v229[18]) = v217;
    *(_BYTE *)(v230 + v229[20]) = v241;
    v246 = (_BYTE *)(v230 + v229[21]);
    *v246 = v242;
    v246[1] = v372;
    v246[2] = v359;
    sub_1000CFD40();
    sub_100080C0C(v247, v248, type metadata accessor for ActualListInput);
    sub_100099444();
    _s7Weather24LocationCompositionStateOwst_0(v249, v250, v251, (uint64_t)v228);
    sub_1000CFD24();
    sub_10003BCC8();
    sub_1000F3F98((uint64_t)v382);
    swift_bridgeObjectRetain(v237);
    sub_1000F40E4(v252, v253, &qword_100BE5570);
    swift_endAccess(&v379);
    sub_1000D0D34(v230);
    sub_1000BDA48(v240);
    sub_100089124();
    swift_release(v374);
    sub_1000215BC(v367, type metadata accessor for LearnMoreAttributorViewModel);
    sub_100021A14(v373, &qword_100BD4280);
    sub_1000988C4();
    sub_100094F10(v368, v254);
    sub_100021A14(v375, &qword_100BE5568);
    v255 = v230;
    v256 = v371;
    sub_10007802C(v255, v371, type metadata accessor for ListViewModel);
    v257 = sub_1000BDA48(v256);
    static os_signpost_type_t.end.getter(v257);
    sub_1000B2610();
    v259 = *(_QWORD *)(v258 - 256);
    os_signpost(_:dso:log:name:signpostID:)(v260, v261, v262, v263, v264, v265, v259);
    sub_1000DAF58();
    sub_100094F10(v259, v266);
    v267 = (uint64_t)v103;
    goto LABEL_35;
  }
  v97 = v349;
  sub_10007802C((uint64_t)v67, v349, type metadata accessor for ActualListInput);
  v98 = v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedModel;
  sub_1000992EC(v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedModel, (uint64_t)v377);
  sub_100037768(v98, (uint64_t)v59, &qword_100BC46E8);
  v99 = sub_10003BD0C();
  v102 = sub_100088FC8(v99, v100, (uint64_t)v348);
  if (v101)
  {
    sub_10003BCC0(v102, type metadata accessor for ActualListInput);
    v95 = &qword_100BC46E8;
    v96 = (uint64_t)v59;
    goto LABEL_10;
  }
  sub_10009EEA4((uint64_t)v59, type metadata accessor for ListViewModel, (uint64_t)&v369);
  v188 = v94[11];
  if (*(_BYTE *)(v97 + v188) != 1)
    goto LABEL_29;
  if (*((_BYTE *)v82 + v188) != 1)
  {
    sub_1000998DC(v187, type metadata accessor for ListViewModel);
    sub_10003BCC0(v268, type metadata accessor for ActualListInput);
    v103 = v82;
    goto LABEL_12;
  }
  if (*((unsigned __int8 *)v82 + v94[29]) != *(unsigned __int8 *)(v97 + v94[29]))
  {
LABEL_29:
    sub_1000998DC(v187, type metadata accessor for ListViewModel);
    sub_10003BCC0(v189, type metadata accessor for ActualListInput);
    goto LABEL_11;
  }
  v269 = v94;
  v270 = *(void **)(v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedByCachedModel);
  v271 = *(void **)(v376 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedToPreprocess);
  v103 = v82;
  if (!v270)
  {
    if (!v271)
      goto LABEL_40;
LABEL_46:
    sub_1000998DC(v187, type metadata accessor for ListViewModel);
    sub_1000B30B8(type metadata accessor for ActualListInput, (uint64_t)v378);
    v94 = v269;
    goto LABEL_12;
  }
  if (!v271)
    goto LABEL_46;
  sub_100113B0C();
  v272 = v271;
  v273 = v270;
  v274 = static NSObject.== infix(_:_:)(v273, v272);

  if ((v274 & 1) == 0)
    goto LABEL_46;
LABEL_40:
  v94 = v269;
  v275 = v269[14];
  v276 = v349 + v275;
  v277 = v337;
  v278 = v337 + *(int *)(v53 + 48);
  sub_1000C091C((uint64_t)v103 + v275, v337);
  sub_1000C091C(v276, v278);
  v279 = type metadata accessor for SearchViewState.ViewState(0);
  sub_100088FC8(v277, 1, v279);
  if (!v93)
  {
    sub_1000D0684(v277, &qword_100BD0488, (uint64_t)&v365);
    v280 = sub_1000C5570((uint64_t)&qword_100BD0488);
    if ((_DWORD)v280 != 3)
    {
LABEL_47:
      sub_10004A2E0(v280, type metadata accessor for SearchViewState.ViewState);
      goto LABEL_48;
    }
    sub_100088FC8(v278, 1, v279);
    if (!v93)
    {
      sub_1000D0684(v278, &qword_100BD0488, (uint64_t)&v364);
      v280 = sub_1000C5570((uint64_t)&qword_100BD0488);
      if ((_DWORD)v280 == 3)
      {
        sub_1000998DC(v280, type metadata accessor for ListViewModel);
        sub_10003BCC0(v281, type metadata accessor for ActualListInput);
        sub_100099298(v278);
        sub_100099298(v277);
        goto LABEL_12;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v282 = (char *)v103 + v269[10];
  v375 = *(_QWORD *)v282;
  LODWORD(v374) = v282[8];
  v283 = v269[16];
  LODWORD(v372) = *((unsigned __int8 *)v103 + v269[15]);
  v370 = *(unsigned __int8 *)(v60 + 9);
  LODWORD(v373) = *((unsigned __int8 *)v103 + v283);
  v284 = v103;
  v285 = v348;
  v286 = v348[8];
  v287 = v60 + v286;
  v288 = v60;
  v289 = v360;
  sub_100037768(v287, v360 + v286, &qword_100BE5568);
  v369 = *(_QWORD *)(v288 + v285[9]);
  v290 = v369;
  v291 = v269[13];
  v292 = (uint64_t *)((char *)v284 + v269[12]);
  v294 = *v292;
  v293 = v292[1];
  v365 = v294;
  v364 = v293;
  v295 = *(uint64_t *)((char *)v284 + v291 + 8);
  v366 = *(uint64_t *)((char *)v284 + v291);
  v368 = v295;
  LODWORD(v367) = *((unsigned __int8 *)v284 + v188);
  sub_100080C0C(v288 + v285[13], v289 + v285[13], type metadata accessor for LearnMoreAttributorViewModel);
  v296 = *(_QWORD *)(v288 + v285[14]);
  v297 = v269[9];
  LODWORD(v357) = *((unsigned __int8 *)v284 + v269[8]);
  v298 = *(uint64_t *)((char *)v284 + v297 + 8);
  v363 = *(uint64_t *)((char *)v284 + v297);
  v358 = v298;
  v359 = *((unsigned __int8 *)v284 + v269[22]);
  v299 = *((_BYTE *)v284 + v269[31]);
  sub_100037768((uint64_t)v284 + v269[32], v289 + v285[19], &qword_100BC3620);
  v300 = *((_BYTE *)v284 + v269[34]);
  v301 = (char *)(v288 + v285[21]);
  v302 = *v301;
  v303 = v301[1];
  *(_QWORD *)v289 = v375;
  *(_BYTE *)(v289 + 8) = v374;
  *(_BYTE *)(v289 + 9) = v370;
  *(_BYTE *)(v289 + 10) = v372;
  *(_BYTE *)(v289 + 11) = v373;
  *(_QWORD *)(v289 + v285[9]) = v290;
  v304 = (uint64_t *)(v289 + v285[10]);
  v305 = v364;
  *v304 = v365;
  v304[1] = v305;
  v306 = (uint64_t *)(v289 + v285[11]);
  *v306 = v366;
  v306[1] = v295;
  *(_BYTE *)(v289 + v285[12]) = v367;
  *(_QWORD *)(v289 + v285[14]) = v296;
  *(_BYTE *)(v289 + v285[15]) = v357;
  v307 = (_QWORD *)(v289 + v285[16]);
  v308 = v358;
  *v307 = v363;
  v307[1] = v308;
  *(_BYTE *)(v289 + v285[17]) = v359;
  *(_BYTE *)(v289 + v285[18]) = v299;
  *(_BYTE *)(v289 + v285[20]) = v300;
  v309 = v301[2];
  v310 = (_BYTE *)(v289 + v285[21]);
  *v310 = v302;
  v310[1] = v303;
  v310[2] = v309;
  sub_1000CFD40();
  sub_100080C0C(v311, v312, type metadata accessor for ActualListInput);
  sub_10009C7F0(v290, 0);
  sub_1000CFD24();
  sub_10009EF94();
  sub_1000F3F98((uint64_t)&v385);
  swift_bridgeObjectRetain(v305);
  sub_1000F3F98((uint64_t)&v384);
  swift_bridgeObjectRetain(v296);
  sub_1000F40E4(v313, v314, &qword_100BE5570);
  swift_endAccess(&v379);
  sub_1000D0D34(v289);
  sub_100099AFC();
  sub_100089124();
  sub_1000B3B44(v288);
  sub_1000215BC(v349, type metadata accessor for ActualListInput);
  sub_10007802C(v289, v371, type metadata accessor for ListViewModel);
  sub_100099AFC();
  sub_100021A14(v337, &qword_100BDE860);
  static os_signpost_type_t.end.getter(v315);
  sub_1000B2610();
  v317 = *(_QWORD *)(v316 - 256);
  os_signpost(_:dso:log:name:signpostID:)(v318, v319, v320, v321, v322, v323, v317);
  sub_1000DAF58();
  sub_100094F10(v317, v324);
  v267 = (uint64_t)v284;
LABEL_35:
  sub_1000215BC(v267, type metadata accessor for ActualListInput);
}

uint64_t sub_100494B48@<X0>(uint64_t a1@<X0>, _QWORD **a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v8 = type metadata accessor for LocationModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for ActualListInput(0);
  sub_100494C90(a1, *(uint64_t *)((char *)a2 + v12[7]), (uint64_t)v11);
  sub_1004951CC((uint64_t)v11, *a2, (uint64_t)a2 + v12[25], *(uint64_t *)((char *)a2 + v12[24] + 8), *(uint64_t *)((char *)a2 + v12[28] + 16), a4, v15, *((_BYTE *)a2 + v12[26]), a3, 1u, 0, 0, *((_BYTE *)a2 + v12[33]), *(uint64_t *)((char *)a2 + v12[30]));
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = type metadata accessor for ListLocationViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a4, 0, 1, v13);
}

uint64_t sub_100494C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  __n128 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __n128 v62;
  char *v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v68;
  void (*v69)(_QWORD, _QWORD, _QWORD);
  uint64_t v70;
  uint64_t v71;

  v59 = a1;
  v60 = a3;
  v4 = type metadata accessor for LocationModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v64 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - v14;
  v16 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v16);
  v58 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v57 = (char *)&v56 - v19;
  v20 = *(_QWORD *)(a2 + 16);
  if (v20)
  {
    v21 = a2;
    v22 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v23 = enum case for LocationModel.current(_:);
    v24 = enum case for LocationModel.saved(_:);
    v70 = *(_QWORD *)(v5 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v5 + 16);
    v56 = v21;
    v26 = swift_bridgeObjectRetain(v21);
    v26.n128_u64[0] = 136446210;
    v62 = v26;
    v61 = (char *)&type metadata for Any + 8;
    v68 = v5;
    v69 = v25;
    v63 = v15;
    v66 = v24;
    v67 = v23;
    v65 = v12;
    while (1)
    {
      v25(v15, v22, v4);
      v25(v12, v15, v4);
      v27 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v12, v4);
      if (v27 == v23)
        break;
      if (v27 == v24)
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v12, v4);
        v28 = sub_1000BA294(&qword_100BC3480);
        sub_100021A14((uint64_t)&v12[*(int *)(v28 + 48)], &qword_100BC3118);
        sub_1000215BC((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
      }
      else
      {
        if (qword_100BC23F8 != -1)
          swift_once(&qword_100BC23F8, sub_1006F3784);
        v29 = type metadata accessor for Logger(0);
        sub_1000AECD4(v29, (uint64_t)qword_100CAEFE0);
        v30 = ((uint64_t (*)(char *, char *, uint64_t))v25)(v9, v15, v4);
        v31 = Logger.logObject.getter(v30);
        v33 = static os_log_type_t.error.getter(v31, v32);
        if (os_log_type_enabled(v31, v33))
        {
          v34 = (void (*)(char *, char *, uint64_t))v25;
          v35 = v9;
          v36 = swift_slowAlloc(12, -1);
          v37 = swift_slowAlloc(32, -1);
          v71 = v37;
          *(_DWORD *)v36 = v62.n128_u32[0];
          v38 = v64;
          v34(v64, v35, v4);
          v39 = String.init<A>(describing:)(v38);
          *(_QWORD *)(v36 + 4) = sub_1000CE1C8(v39, v40, &v71);
          v41 = swift_bridgeObjectRelease();
          v42 = *(void (**)(char *, uint64_t, __n128))(v68 + 8);
          v42(v35, v4, v41);
          _os_log_impl((void *)&_mh_execute_header, v31, v33, "Failed to create savedLocations with unknown type=%{public}s", (uint8_t *)v36, 0xCu);
          swift_arrayDestroy(v37, 1);
          v43 = v37;
          v5 = v68;
          swift_slowDealloc(v43, -1, -1);
          v44 = v36;
          v9 = v35;
          v15 = v63;
          swift_slowDealloc(v44, -1, -1);
        }
        else
        {
          v42 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
          ((void (*)(char *, uint64_t))v42)(v9, v4);
        }

        v12 = v65;
        ((void (*)(char *, uint64_t))v42)(v65, v4);
        v24 = v66;
        v23 = v67;
        ((void (*)(char *, uint64_t))v42)(v15, v4);
      }
      v25 = v69;
      v22 += v70;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    (*(void (**)(char *, uint64_t))(v5 + 96))(v12, v4);
    v45 = sub_1000BA294(&qword_100BC3488);
    sub_100021A14((uint64_t)&v12[*(int *)(v45 + 48)], &qword_100BC3118);
    sub_1000215BC((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    v46 = swift_bridgeObjectRelease();
    v47 = (uint64_t)v57;
    (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 32))(v57, v15, v4, v46);
    v48 = 0;
    v49 = v59;
    v50 = v60;
    v51 = (uint64_t)v58;
  }
  else
  {
LABEL_15:
    v48 = 1;
    v49 = v59;
    v50 = v60;
    v47 = (uint64_t)v57;
    v51 = (uint64_t)v58;
  }
  _s7Weather24LocationCompositionStateOwst_0(v47, v48, 1, v4);
  v52 = v50 + *(int *)(sub_1000BA294(&qword_100BC3488) + 48);
  sub_100080C0C(v49, v50, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  sub_100037768(v47, v51, &qword_100C0B8D0);
  v53 = _s7Weather24LocationCompositionStateOwet_0(v51, 1, v4);
  if ((_DWORD)v53 == 1)
  {
    sub_100021A14(v47, &qword_100C0B8D0);
    sub_100021A14(v51, &qword_100C0B8D0);
    v54 = type metadata accessor for LocationOfInterest(0);
    _s7Weather24LocationCompositionStateOwst_0(v52, 1, 1, v54);
  }
  else
  {
    LocationModel.locationOfInterest.getter(v53);
    sub_100021A14(v47, &qword_100C0B8D0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v51, v4);
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v50, enum case for LocationModel.current(_:), v4);
}

void sub_1004951CC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, char a8, unsigned __int8 a9, unsigned __int8 a10, unsigned __int8 a11, char a12, unsigned __int8 a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __n128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  BOOL v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  int v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  char *v190;
  uint64_t v191;
  int v192;
  uint64_t (**v193)(uint64_t, uint64_t);
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(uint64_t, _QWORD);
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  void (*v209)(uint64_t);
  int v210;
  id v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t *v221;
  int v222;
  unint64_t *v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t (*v235)(void);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t (*v249)(uint64_t, uint64_t, _QWORD);
  uint64_t v250;
  uint64_t (*v251)(uint64_t, uint64_t, _QWORD);
  uint64_t v252;
  uint64_t (*v253)(uint64_t, uint64_t, _QWORD);
  id v254;
  id v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  double v259;
  double v260;
  double v261;
  double v262;
  double v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t (*v280)(_QWORD);
  uint64_t v281;
  uint64_t v282;
  uint64_t (*v283)(uint64_t, uint64_t, _QWORD);
  uint64_t (*v284)(uint64_t, uint64_t, _QWORD);
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  double v291;
  uint64_t v292;
  uint64_t (*v293)(uint64_t, uint64_t, _QWORD);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t (*v297)(uint64_t, uint64_t, _QWORD);
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  BOOL v321;
  BOOL v322;
  id v323;
  Swift::String v324;
  Swift::String v325;
  Swift::String v326;
  uint64_t (*v327)(uint64_t, uint64_t, _QWORD);
  void (*v328)(uint64_t, uint64_t);
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  int v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  __n128 v346;
  char v347;
  __n128 v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t (*v352)(uint64_t, _QWORD);
  uint64_t (*v353)(uint64_t, _QWORD);
  void (*v354)(char *);
  uint64_t v355;
  uint64_t v356;
  uint64_t (*v357)(uint64_t, _QWORD);
  uint64_t v358;
  id v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  unint64_t v374;
  uint64_t v375;
  void (*v376)(char *);
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  _QWORD *v399;
  uint64_t v400;
  uint64_t v401;
  _QWORD v402[5];
  uint64_t v403;
  char v404[8];
  uint64_t v405;
  uint64_t v406;
  _QWORD v407[3];
  char v408[8];
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  char *v413;
  uint64_t *v414;
  uint64_t v415;
  uint64_t v416;
  _QWORD *v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  int v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431[2];
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  int v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t *v438;
  char *v439;
  BOOL *v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t *v443;
  void (*v444)(uint64_t, uint64_t);
  uint64_t v445;
  uint64_t v446;
  _QWORD *v447;
  uint64_t v448;
  uint64_t v449;
  char v450[8];
  __int128 v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  Swift::String v456;

  v416 = a5;
  v405 = a4;
  v444 = (void (*)(uint64_t, uint64_t))a3;
  v417 = a2;
  v412 = a6;
  v435 = a13;
  type metadata accessor for ListLocationRowPrimaryText(0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v17 = sub_1000DC710(v16);
  sub_1000B43A4(v17, (uint64_t)&v437);
  v407[2] = v18;
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  sub_10009511C(v20);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_100079F7C();
  sub_10009511C(v23);
  sub_1000BA294(&qword_100BD11F8);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100088FDC();
  v26 = sub_1000987B4(v25);
  v27 = type metadata accessor for WeatherConditionGradientModel.PresentationContext(v26);
  sub_1000B43A4(v27, (uint64_t)v431);
  v402[2] = v28;
  sub_10009D98C();
  __chkstk_darwin(v29);
  sub_10009511C((uint64_t)&v456._object - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000BA294(&qword_100BC3660);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100088FDC();
  sub_10009511C(v32);
  sub_1000BA294(&qword_100BC3378);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_10009511C((uint64_t)&v456._object - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000BA294(&qword_100BC3370);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_100088FDC();
  v37 = sub_1000DB2BC(v36);
  sub_1000B43A4(v37, (uint64_t)&v451 + 8);
  v402[0] = v38;
  sub_10009D98C();
  __chkstk_darwin(v39);
  sub_100088FDC();
  v41 = sub_1000987B4(v40);
  v42 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput(v41);
  sub_1000B43A4(v42, (uint64_t)&v432);
  v403 = v43;
  sub_10009D98C();
  __chkstk_darwin(v44);
  sub_100088FDC();
  v46 = sub_1000987B4(v45);
  v47 = type metadata accessor for WeatherConditionBackgroundModel(v46);
  sub_1000B43A4(v47, (uint64_t)&v439);
  v409 = v48;
  sub_10009D98C();
  __chkstk_darwin(v49);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v50);
  sub_100079F7C();
  sub_10009511C(v51);
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v52);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v53);
  sub_100079F7C();
  v55 = sub_1000987B4(v54);
  type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel(v55);
  sub_1000B42B0();
  __chkstk_darwin(v56);
  sub_100088FDC();
  v58 = sub_1000987B4(v57);
  v445 = type metadata accessor for ListPreprocessedDataModel(v58);
  sub_1000B42B0();
  __chkstk_darwin(v59);
  sub_100088FDC();
  v61 = sub_1000987B4(v60);
  v401 = type metadata accessor for WeatherConditionBackgroundTimeData(v61);
  sub_1000B42B0();
  __chkstk_darwin(v62);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v63);
  sub_100079F7C();
  v65 = sub_1000987B4(v64);
  v66 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation(v65);
  sub_1000B43A4(v66, (uint64_t)&v420);
  v396 = v67;
  sub_10009D98C();
  __chkstk_darwin(v68);
  sub_100088FDC();
  v70 = sub_1000987B4(v69);
  v71 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType(v70);
  sub_1000B43A4(v71, (uint64_t)&v415);
  v392 = v72;
  sub_10009D98C();
  __chkstk_darwin(v73);
  sub_100088FDC();
  v75 = sub_1000987B4(v74);
  v76 = type metadata accessor for Location.Identifier(v75);
  v77 = *(_QWORD *)(v76 - 8);
  v448 = v76;
  v449 = v77;
  sub_10009D98C();
  __chkstk_darwin(v78);
  sub_100088FDC();
  v447 = (_QWORD *)v79;
  v80 = type metadata accessor for VFXEffectViewID(0);
  sub_1000B43A4(v80, (uint64_t)&v413);
  v391 = v81;
  sub_10009D98C();
  __chkstk_darwin(v82);
  sub_100088FDC();
  v84 = sub_1000987B4(v83);
  v433 = type metadata accessor for WeatherConditionBackgroundOptions(v84);
  v432 = *(_QWORD *)(v433 - 8);
  sub_10009D98C();
  __chkstk_darwin(v85);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v86);
  sub_100079F7C();
  v88 = sub_1000987B4(v87);
  v89 = type metadata accessor for BackgroundAnimationKind(v88);
  sub_1000B43A4(v89, (uint64_t)&v454);
  v431[1] = v90;
  sub_10009D98C();
  __chkstk_darwin(v91);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v92);
  sub_100079F7C();
  v94 = sub_1000987B4(v93);
  v95 = type metadata accessor for CurrentWeather(v94);
  sub_1000B43A4(v95, (uint64_t)v402);
  v377 = v96;
  sub_10009D98C();
  __chkstk_darwin(v97);
  sub_100088FDC();
  sub_10009511C(v98);
  sub_1000BA294(&qword_100BCCC48);
  sub_1000B42B0();
  __chkstk_darwin(v99);
  sub_100088FDC();
  sub_10009511C(v100);
  v101 = sub_1000BA294(&qword_100BCB130);
  sub_1000B43A4(v101, (uint64_t)v404);
  v383 = v102;
  sub_10009D98C();
  __chkstk_darwin(v103);
  sub_100088FDC();
  sub_10009511C(v104);
  sub_1000BA294(&qword_100BCE370);
  sub_1000B42B0();
  __chkstk_darwin(v105);
  sub_100088FDC();
  v107 = sub_1000987B4(v106);
  v108 = type metadata accessor for TimeZone(v107);
  v389 = *(_QWORD *)(v108 - 8);
  sub_10009D98C();
  __chkstk_darwin(v109);
  sub_100088FDC();
  v111 = sub_1000987B4(v110);
  v112 = type metadata accessor for WeatherEventDescription(v111);
  sub_1000B43A4(v112, (uint64_t)&v417);
  v395 = v113;
  sub_10009D98C();
  __chkstk_darwin(v114);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v115);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v116);
  sub_100079F7C();
  v118 = sub_1000987B4(v117);
  v119 = type metadata accessor for WeatherData(v118);
  sub_1000B42B0();
  __chkstk_darwin(v120);
  sub_100088FDC();
  v122 = sub_1000987B4(v121);
  v375 = type metadata accessor for PreprocessedWeatherData(v122);
  sub_1000B42B0();
  __chkstk_darwin(v123);
  sub_100088FDC();
  sub_10009511C(v124);
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v125);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v126);
  v128 = (char *)&v456._object - v127;
  sub_1000BA294(&qword_100BCCC50);
  sub_1000B42B0();
  __chkstk_darwin(v129);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v130);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v131);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v132);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v133);
  v135 = (char *)&v456._object - v134;
  sub_1000BA294(&qword_100BE5598);
  sub_1000B42B0();
  __chkstk_darwin(v136);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v137);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v138);
  v140 = (uint64_t *)((char *)&v456._object - v139);
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v141);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v142);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v143);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v144);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v145);
  v147 = (char *)&v456._object - v146;
  v149 = LocationModel.coalesceLocationID.getter(v148);
  v151 = v150;
  v152 = a1;
  LocationModel.timeZone.getter(v153);
  v397 = v108;
  LODWORD(a1) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v108);
  sub_100021A14((uint64_t)v135, &qword_100BCCC50);
  v166 = (_DWORD)a1 == 1;
  v154 = v445;
  v413 = v147;
  v442 = v119;
  v443 = v140;
  v446 = v151;
  v387 = v149;
  if (v166)
  {
    sub_1000C135C();
    _s7Weather24LocationCompositionStateOwst_0(v155, v156, v157, v119);
    sub_1000C135C();
    _s7Weather24LocationCompositionStateOwst_0(v158, v159, v160, v154);
    sub_1000ECF98();
    v161 = v444;
    v162 = (uint64_t)v147;
    v163 = v152;
    v164 = v416;
  }
  else
  {
    sub_1000860DC();
    v164 = v416;
    sub_1000EED10(v149, v151, v416);
    sub_10003BC58();
    v165 = type metadata accessor for LocationWeatherDataState(0);
    sub_100088FC8((uint64_t)v128, 1, v165);
    v135 = v439;
    v167 = (uint64_t)v444;
    v163 = v152;
    if (!v166)
    {
      v190 = (char *)&loc_100495C34 + *((int *)qword_100496EF8 + sub_1000C5570((uint64_t)v128));
      __asm { BR              X10 }
    }
    v162 = (uint64_t)v413;
    sub_1000C1AE0((uint64_t)v413, 1);
    sub_1000C135C();
    _s7Weather24LocationCompositionStateOwst_0(v168, v169, v170, v445);
    v161 = (void (*)(uint64_t, uint64_t))v167;
  }
  v422 = a11;
  v171 = v446;
  v172 = v418;
  if ((v435 & 1) != 0)
  {
    v173 = v398;
    sub_1000DC918();
    sub_100037768(v174, v175, v176);
    v177 = _s7Weather24LocationCompositionStateOwet_0(v173, 1, v442);
    sub_100075DD0(v173);
    if (v177 != 1)
    {
      v178 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v374 = 0x8000000100A066C0;
      v397 = 0xE000000000000000;
      v184 = sub_1000BC298(0xD000000000000013, 0x8000000100A066A0, v179, v180, v181, v182, v183, 0xD00000000000006BLL);
      sub_1001102E0(v184, v185);
      v394 = 0;
      v393 = 0xEA00000000006873;
      v395 = 0x616C732E69666977;
      LODWORD(v418) = 1;
      goto LABEL_27;
    }
    goto LABEL_13;
  }
  sub_1000DA4E0(v162, &qword_100BC3460, (uint64_t)&v423);
  v186 = sub_1000C0944();
  v188 = sub_100088FC8(v186, v187, v442);
  if (v166)
  {
    sub_10009518C(v188, &qword_100BC3460);
LABEL_13:
    sub_1000D1840();
    v394 = 0;
    v189 = &v421;
LABEL_14:
    *(v189 - 32) = 0;
    goto LABEL_27;
  }
  sub_10007802C(v162, v415, type metadata accessor for WeatherData);
  sub_10011E7D0();
  v191 = v397;
  v192 = _s7Weather24LocationCompositionStateOwet_0(v172, 1, v397);
  if (v192 == 1)
  {
    sub_100021A14(v172, &qword_100BCCC50);
    v193 = (uint64_t (**)(uint64_t, uint64_t))v395;
    v194 = v393;
    v195 = v394;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v395 + 104))(v393, enum case for WeatherEventDescription.none(_:), v394);
  }
  else
  {
    v196 = v380;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v389 + 32))(v380, v172, v191);
    v418 = *(_QWORD *)&v135[OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherEventDescriptionStringBuilder + 32];
    v399 = sub_10009C13C(&v135[OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherEventDescriptionStringBuilder]);
    v135 = (char *)WeatherDataModel.weatherAlerts.getter();
    v197 = v381;
    v198 = WeatherDataModel.minuteForecast.getter(v135);
    v199 = v382;
    v200 = WeatherDataModel.dailyForecast.getter(v198);
    v201 = v385;
    WeatherDataModel.weatherChanges.getter(v200);
    v202 = v379;
    v203 = sub_1000F41F0();
    dispatch thunk of WeatherEventDescriptionStringBuilderType.buildShortString(from:minuteForecast:dailyForecast:weatherChanges:timeZone:date:)(v203);
    sub_1000ECF98();
    swift_bridgeObjectRelease();
    sub_100021A14(v201, &qword_100BCCC48);
    sub_1000988C4();
    v204 = v199;
    v164 = v416;
    sub_100094F10(v204, v205);
    sub_100021A14(v197, &qword_100BCE370);
    sub_100094F10(v196, *(uint64_t (**)(uint64_t, _QWORD))(v389 + 8));
    v193 = (uint64_t (**)(uint64_t, uint64_t))v395;
    v194 = v393;
    v206 = v202;
    v161 = v444;
    v195 = v394;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v395 + 32))(v393, v206, v394);
  }
  v207 = v390;
  v208 = sub_10007A04C();
  v209(v208);
  v210 = v193[11]((uint64_t)v207, v195);
  if (v210 == enum case for WeatherEventDescription.severeWeather(_:))
  {
    sub_100098748((uint64_t)v207, v193[12]);
    v394 = *v207;
    v397 = v207[1];
    v211 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    sub_1000989C4();
    v218 = sub_1000BC298(0x7720657265766553, 0xEE00726568746165, v212, v213, v214, v215, v216, v217);
    sub_1001102E0(v218, v219);
    sub_1000B30B8(type metadata accessor for WeatherData, (uint64_t)&v444);
    sub_100098748(v194, v193[1]);
    LODWORD(v418) = 0;
    v395 = 0xD00000000000001DLL;
    v220 = 0x80000001009F19A0;
    v221 = &v416;
  }
  else
  {
    v222 = v210;
    if (v210 != enum case for WeatherEventDescription.nextHourPrecipitation(_:)
      && v210 != enum case for WeatherEventDescription.changeInCondition(_:))
    {
      LODWORD(v418) = enum case for WeatherEventDescription.none(_:);
      v354 = v376;
      v355 = WeatherDataModel.currentWeather.getter(v415);
      v394 = CurrentWeather.conditionDescription.getter(v355);
      v397 = v356;
      sub_1000988C4();
      v358 = sub_100094F10((uint64_t)v354, v357);
      sub_10004A2E0(v358, type metadata accessor for WeatherData);
      sub_1000ED438((uint64_t)&v416);
      if (v222 != (_DWORD)v418)
        sub_1000ED438((uint64_t)&v411);
      LODWORD(v418) = 0;
      v399 = 0;
      v398 = 0;
      v395 = 0;
      v189 = &v416;
      goto LABEL_14;
    }
    sub_1000215BC(v415, type metadata accessor for WeatherData);
    sub_100098748(v194, v193[1]);
    v224 = (unint64_t *)v390;
    sub_100098748((uint64_t)v390, v193[12]);
    sub_1000D1840();
    v397 = v224[1];
    v220 = *v224;
    v221 = (uint64_t *)&v417;
  }
  *(v221 - 32) = v220;
LABEL_27:
  v225 = v445;
  v226 = v417;
  v227 = sub_1000DACB4();
  v390 = (uint64_t *)sub_100498994(v227, v228);
  LODWORD(v389) = v229 & 1;
  sub_100493050((uint64_t)v390, v229 & 1, v440);
  v230 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v417 = (_QWORD *)UIApplication.maybeWindow.getter();

  v232 = v226[2];
  v415 = v163;
  if (v232)
  {
    *(_QWORD *)&v451 = _swiftEmptyArrayStorage;
    sub_10009AAB0();
    v233 = (char *)v226
         + ((*(unsigned __int8 *)(v449 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v449 + 80));
    v234 = *(_QWORD *)(v449 + 72);
    v235 = *(uint64_t (**)(void))(v449 + 16);
    do
    {
      v237 = (uint64_t)v447;
      v236 = v448;
      sub_1000DC918();
      v238 = v235();
      v135 = (char *)Location.Identifier.uniqueID.getter(v238);
      v226 = v239;
      (*(void (**)(uint64_t, uint64_t))(v449 + 8))(v237, v236);
      v240 = v451;
      if ((swift_isUniquelyReferenced_nonNull_native(v451) & 1) == 0)
      {
        sub_10009AAB0();
        v240 = v451;
      }
      v241 = *(_QWORD *)(v240 + 16);
      if (v241 >= *(_QWORD *)(v240 + 24) >> 1)
      {
        sub_10009AAB0();
        v240 = v451;
      }
      *(_QWORD *)(v240 + 16) = v241 + 1;
      v242 = v240 + 16 * v241;
      *(_QWORD *)(v242 + 32) = v135;
      *(_QWORD *)(v242 + 40) = v226;
      v233 += v234;
      --v232;
      v171 = v446;
    }
    while (v232);
    v161 = v444;
    v225 = v445;
    v163 = v415;
    sub_1000ECF98();
    v164 = v416;
  }
  if ((v422 & 1) != 0)
  {
    sub_1000FC634();
    v243 = (uint64_t)v414;
  }
  else
  {
    v226 = v447;
    v244 = LocationModel.identifier.getter(v231);
    v245 = Location.Identifier.uniqueID.getter(v244);
    v232 = v246;
    (*(void (**)(_QWORD *, uint64_t))(v449 + 8))(v226, v448);
    v247 = v414;
    *v414 = v245;
    v247[1] = v232;
    v243 = (uint64_t)v247;
    sub_1000FC634();
  }
  sub_100099970();
  sub_1000B3B68(v243, v248, v249);
  sub_100099970();
  sub_1000B3B68(v419, v250, v251);
  sub_100099970();
  sub_1000B3B68((uint64_t)v226, v252, v253);
  if (v417)
  {
    v254 = v417;
    objc_msgSend(v417, "bounds");
    v255 = v254;
    UIWindow.displayScale.getter();

    v243 = (uint64_t)v414;
  }
  LOBYTE(v374) = 1;
  sub_100099444();
  WeatherConditionBackgroundOptions.init(locationIDs:applyMask:applyLegibilityScrim:effectViewID:canShowCollisionLayer:cameraPositionType:displayLocation:windowBounds:displayScale:locationViewerOrientation:)(v256, v257, v258, v243, 0, v259, v260, v261, v262, v263, v419);
  v264 = v388;
  sub_1000EED10(v387, v171, v164);
  swift_bridgeObjectRelease();
  type metadata accessor for LocationWeatherDataState(0);
  v265 = sub_1000C0944();
  v268 = sub_100088FC8(v265, v266, v267);
  if (v166)
  {
    sub_10009518C(v268, &qword_100BC3380);
    v269 = sub_10003BD0C();
    sub_1000C1AE0(v269, v270);
  }
  else
  {
    sub_1000EADE8();
    sub_10009BC18(v271, type metadata accessor for LocationWeatherDataState);
  }
  sub_1000DA4E0((uint64_t)v443, &qword_100BE5598, (uint64_t)v408);
  v272 = sub_1000C0944();
  v274 = sub_100088FC8(v272, v273, v225);
  if (v166)
  {
    sub_10009518C(v274, &qword_100BE5598);
    v275 = sub_1000DB418(&v135[OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundTimeDataFactory], *(_QWORD *)&v135[OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundTimeDataFactory+ 24]);
    sub_1000BEC54();
    LocationModel.location.getter(v276);
    v264 = *v275;
    sub_1003B4364(v225, v232, v161, v400);
    sub_100021A14(v225, &qword_100BC35F8);
  }
  else
  {
    v277 = v386;
    sub_10007802C(v264, v386, type metadata accessor for ListPreprocessedDataModel);
    sub_1000B2EA4(v277 + *(int *)(v225 + 32), type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel, (uint64_t)v407);
    sub_100079F9C(v277);
    sub_10007802C(v264, v400, type metadata accessor for WeatherConditionBackgroundTimeData);
  }
  LODWORD(v446) = a10;
  sub_1000CFD40();
  sub_10007802C(v278, v279, v280);
  sub_10003B59C((uint64_t)&v135[OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundModelFactory], (uint64_t)&v451);
  v281 = v452;
  v282 = v453;
  sub_10009C13C(&v451);
  sub_1000AE924();
  sub_1000B3B68(v420, (uint64_t)v440, v283);
  sub_1000AE924();
  sub_1000B3B68(v425, v264, v284);
  v285 = v401;
  sub_100037768(v264 + *(int *)(v401 + 20), v426, &qword_100BC3370);
  sub_100037768(v264 + *(int *)(v285 + 24), v428, &qword_100BC3378);
  v286 = (uint64_t)v447;
  v288 = LocationModel.identifier.getter(v287);
  v289 = Location.Identifier.id.getter(v288);
  sub_1000F3CAC(v289, v290, v405);
  v291 = sub_1000986C4();
  v292 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v449 + 8))(v286, v448, v291);
  LocationModel.location.getter(v292);
  sub_1000AE924();
  v294 = sub_1000B3B68(v421, v441, v293);
  v295 = v430;
  BackgroundAnimationKind.gradientContext.getter(v294);
  sub_100099970();
  sub_1000B3B68(v295, v296, v297);
  sub_1000D0684(v232, &qword_100BC3460, (uint64_t)&v424);
  v298 = sub_10003BD0C();
  v299 = v442;
  sub_100088FC8(v298, v300, v442);
  if (v166)
  {
    sub_100021A14(v232, &qword_100BC3460);
    type metadata accessor for WeatherDataModel(0);
    v303 = v406;
    sub_1000C135C();
  }
  else
  {
    v301 = v232 + *(int *)(v299 + 24);
    v302 = type metadata accessor for WeatherDataModel(0);
    v303 = v406;
    v304 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(v406, v301, v302);
    sub_10004A2E0(v304, type metadata accessor for WeatherData);
    sub_1000ECF98();
  }
  _s7Weather24LocationCompositionStateOwst_0(v305, v306, v307, v308);
  v309 = v407[0];
  sub_1000C135C();
  _s7Weather24LocationCompositionStateOwst_0(v310, v311, v312, v424);
  v313 = v402[4];
  WeatherConditionBackgroundModelFactoryInput.init(animationKind:currentTime:elevation:moonData:debugConditionOverride:isReduceMotionEnabled:location:options:presentationContext:weatherData:conditionBackgroundDateOverride:)(v420, v425, v426, v428, v429, a8 & 1, v423, v421, v430, v303, v309);
  dispatch thunk of WeatherConditionBackgroundModelFactoryType.makeModel(from:)(v313, v281, v282);
  sub_100094F10(v313, *(uint64_t (**)(uint64_t, _QWORD))(v403 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v451);
  v314 = sub_100498B18(v163, v446 & 1);
  v448 = v315;
  v449 = v314;
  v316 = v443;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v443, 1, v445))
  {
    v317 = 0xE200000000000000;
    v318 = 11565;
  }
  else
  {
    v318 = v316[4];
    v317 = v316[5];
    swift_bridgeObjectRetain(v317);
  }
  if (sub_1000BD504())
  {
    v319 = 0xE200000000000000;
    v320 = 11565;
  }
  else
  {
    v320 = v316[6];
    v319 = v316[7];
    sub_10003BCC8();
  }
  if ((_DWORD)v418)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v317 = 0xE200000000000000;
    v318 = 11565;
    v320 = 11565;
    v319 = 0xE200000000000000;
  }
  v321 = v318 == 11565 && v317 == 0xE200000000000000;
  v442 = v318;
  v439 = (char *)v319;
  v430 = v320;
  if (v321
    || (sub_100099264(v318, v317, 11565, 0xE200000000000000) & 1) != 0
    || (v320 == 11565 ? (v322 = v319 == 0xE200000000000000) : (v322 = 0),
        v322 || (sub_100099264(v320, v319, 11565, 0xE200000000000000) & 1) != 0))
  {
    v323 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    sub_1000989C4();
    v324._countAndFlagsBits = 0x64616F6C20746F4ELL;
    v324._object = (void *)0xEA00000000006465;
    v325._countAndFlagsBits = 0;
    v325._object = (void *)0xE000000000000000;
    v326 = NSLocalizedString(_:tableName:bundle:value:comment:)(v324, (Swift::String_optional)0, (NSBundle)v323, v325, v456);
    sub_1000861B0(v326._countAndFlagsBits, (uint64_t)v326._object);

  }
  else
  {
    v359 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    sub_1000989C4();
    v429 = sub_1000BC298(0xD000000000000011, 0x8000000100A06520, v360, v361, v362, v363, v364, v365);
    v426 = v366;

    v367 = sub_1000BA294(&qword_100BC3C38);
    v368 = swift_allocObject(v367, 112, 7);
    *(_OWORD *)(v368 + 16) = xmmword_10097DA20;
    *(_QWORD *)(v368 + 56) = &type metadata for String;
    v369 = sub_1000B2E24();
    *(_QWORD *)(v368 + 32) = v318;
    *(_QWORD *)(v368 + 40) = v317;
    *(_QWORD *)(v368 + 96) = &type metadata for String;
    *(_QWORD *)(v368 + 104) = v369;
    *(_QWORD *)(v368 + 64) = v369;
    *(_QWORD *)(v368 + 72) = v320;
    *(_QWORD *)(v368 + 80) = v319;
    swift_bridgeObjectRetain(v317);
    sub_10003BCC8();
    sub_1000CFD40();
    v372 = String.init(format:_:)(v370, v371, v368);
    sub_1000861B0(v372, v373);
    sub_1000986C4();
  }
  sub_1000AE924();
  sub_1000B3B68(v437, v163, v327);
  v328 = v444;
  sub_100498C84(v446 & 1, (uint64_t)v444, v438);
  sub_100498F3C(a14, (uint64_t)&v451);
  v329 = v402[1];
  v330 = sub_10011E7D0();
  __chkstk_darwin(v330);
  v456._object = v328;
  sub_10024B58C((uint64_t)sub_1004995A8, (uint64_t)&v374, (uint64_t)v450, v331, v332, v333, v334, v335, v375, v376, v377, v378, v379, v380, v381, v382, v383, v384, v385,
    v386);
  sub_100021A14(v329, &qword_100BCCC50);
  sub_10011E7D0();
  if (sub_1000BD504())
  {
    v425 = 0xE200000000000000;
    v426 = 11565;
  }
  else
  {
    v336 = v316[1];
    v426 = *v316;
    v425 = v336;
    swift_bridgeObjectRetain(v336);
  }
  LODWORD(v424) = a9;
  v337 = sub_1000BD504();
  v447 = (_QWORD *)v317;
  if (v337)
  {
    v421 = 0;
    v338 = 0;
  }
  else
  {
    v338 = v316[3];
    v421 = v316[2];
    sub_10003BCC8();
  }
  v339 = 0xED00007964756F6CLL;
  if (v397)
    v339 = v397;
  v445 = v339;
  v340 = 0x6320796C74726170;
  if (v397)
    v340 = v394;
  v423 = v340;
  if ((v435 & 1) != 0)
    v341 = 2;
  else
    v341 = 1;
  v342 = v409;
  v343 = v411;
  v344 = v434;
  v345 = v410;
  v346.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(v409 + 16))(v411, v434, v410);
  v347 = static Settings.InternationalAuthenticity.verticalHeroEnabledForCurrentLocale.getter(v346);
  sub_1000BEC54();
  LocationModel.timeZone.getter(v348);
  v349 = sub_1008F9B3C();
  v351 = v350;

  sub_100021A14((uint64_t)v316, &qword_100BCCC50);
  (*(void (**)(uint64_t, uint64_t))(v342 + 8))(v344, v345);
  sub_1000B30B8(type metadata accessor for WeatherConditionBackgroundTimeData, (uint64_t)&v455);
  sub_100075DD0(v427);
  sub_1000988C4();
  sub_100094F10(v441, v352);
  sub_1000988C4();
  sub_100094F10((uint64_t)v440, v353);
  sub_100075DD0((uint64_t)v413);
  sub_1008FA120(v437, (uint64_t)v390, v389, v449, v448, (uint64_t)v438, &v451, v446 & 1, v412, v436, v431[0], v423, v445, v395, v393, v418, (uint64_t)v399, v398, v426,
    v425,
    v421,
    v338,
    v442,
    (uint64_t)v447,
    v430,
    (uint64_t)v439,
    v429,
    v428,
    v424 & 1,
    v343,
    (v422 & 1) == 0,
    v347 & 1,
    v349,
    v351,
    v341);
  sub_100021A14((uint64_t)v443, &qword_100BE5598);
}

uint64_t sub_100496F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - v10;
  v12 = type metadata accessor for ActualListInput(0);
  sub_1004970D0(a1, *(_QWORD *)(a2 + *(int *)(v12 + 28)), *(_QWORD *)(a2 + *(int *)(v12 + 24)), (uint64_t)v11);
  v13 = a3 + *(int *)(sub_1000BA294(&qword_100BC3480) + 48);
  sub_100080C0C(a1, a3, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
  sub_100037768((uint64_t)v11, (uint64_t)v8, &qword_100C0B8D0);
  v14 = type metadata accessor for LocationModel(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v14);
  if ((_DWORD)v15 == 1)
  {
    sub_100021A14((uint64_t)v11, &qword_100C0B8D0);
    sub_100021A14((uint64_t)v8, &qword_100C0B8D0);
    v16 = type metadata accessor for LocationOfInterest(0);
    _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v16);
    v17 = *(_QWORD *)(v14 - 8);
  }
  else
  {
    LocationModel.locationOfInterest.getter(v15);
    sub_100021A14((uint64_t)v11, &qword_100C0B8D0);
    v17 = *(_QWORD *)(v14 - 8);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v14);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(a3, enum case for LocationModel.saved(_:), v14);
  return _s7Weather24LocationCompositionStateOwst_0(a3, 0, 1, v14);
}

uint64_t sub_1004970D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1000BA294(&qword_100BC3480);
  sub_1005ED25C(a1, a3, a2, a4 + *(int *)(v8 + 48));
  sub_100080C0C(a1, a4, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
  v9 = enum case for LocationModel.saved(_:);
  v10 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a4, v9, v10);
  return _s7Weather24LocationCompositionStateOwst_0(a4, 0, 1, v10);
}

void sub_100497178(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  __n128 v43;
  void (*v44)(uint64_t, uint64_t, __n128);
  uint64_t v45;
  _QWORD v46[2];
  __n128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v6 = type metadata accessor for LocationModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  v12 = (char *)v46 - v11;
  __chkstk_darwin(v13);
  v18 = (char *)v46 - v17;
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    v54 = v16;
    v50 = v15;
    v48 = v14;
    v19 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for ActualListInput(0) + 28));
    v58 = _swiftEmptyArrayStorage;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = swift_bridgeObjectRetain(v19);
    v56 = v20;
    if (v20)
    {
      v22 = 0;
      v23 = enum case for LocationModel.current(_:);
      v51 = enum case for LocationModel.saved(_:);
      v21.n128_u64[0] = 136446210;
      v47 = v21;
      v46[1] = (char *)&type metadata for Any + 8;
      v55 = v18;
      v53 = v19;
      v52 = enum case for LocationModel.current(_:);
      while (v22 < *(_QWORD *)(v19 + 16))
      {
        v24 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v25 = *(_QWORD *)(v7 + 72);
        v26 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
        v26(v18, v19 + v24 + v25 * v22, v6);
        v26(v12, (unint64_t)v18, v6);
        v27 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
        if (v27 == v23)
        {
          (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
          v28 = sub_1000BA294(&qword_100BC3488);
          sub_100021A14((uint64_t)&v12[*(int *)(v28 + 48)], &qword_100BC3118);
          sub_1000215BC((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
        }
        else if (v27 == v51)
        {
          (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
          v29 = sub_1000BA294(&qword_100BC3480);
          sub_100021A14((uint64_t)&v12[*(int *)(v29 + 48)], &qword_100BC3118);
          sub_1000215BC((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
          v30 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
          v30((uint64_t)v54, v18, v6);
          v31 = v58;
          if ((swift_isUniquelyReferenced_nonNull_native(v58) & 1) == 0)
          {
            sub_10011ED70();
            v31 = v58;
          }
          v32 = v31[2];
          if (v32 >= v31[3] >> 1)
          {
            sub_10011ED70();
            v31 = v58;
          }
          v31[2] = v32 + 1;
          v30((uint64_t)v31 + v24 + v32 * v25, v54, v6);
          v58 = v31;
          v18 = v55;
          v19 = v53;
          v23 = v52;
        }
        else
        {
          if (qword_100BC23F8 != -1)
            swift_once(&qword_100BC23F8, sub_1006F3784);
          v33 = type metadata accessor for Logger(0);
          sub_1000AECD4(v33, (uint64_t)qword_100CAEFE0);
          v34 = v50;
          v35 = ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v50, v55, v6);
          v36 = Logger.logObject.getter(v35);
          v38 = static os_log_type_t.error.getter(v36, v37);
          if (os_log_type_enabled(v36, v38))
          {
            v39 = swift_slowAlloc(12, -1);
            v49 = swift_slowAlloc(32, -1);
            v57 = v49;
            *(_DWORD *)v39 = v47.n128_u32[0];
            v40 = v48;
            v26(v48, v34, v6);
            v41 = String.init<A>(describing:)(v40);
            *(_QWORD *)(v39 + 4) = sub_1000CE1C8(v41, v42, &v57);
            v43 = swift_bridgeObjectRelease();
            v44 = *(void (**)(uint64_t, uint64_t, __n128))(v7 + 8);
            v44(v34, v6, v43);
            _os_log_impl((void *)&_mh_execute_header, v36, v38, "Failed to create coalescedSavedLocations with unknown type=%{public}s", (uint8_t *)v39, 0xCu);
            v45 = v49;
            swift_arrayDestroy(v49, 1);
            swift_slowDealloc(v45, -1, -1);
            swift_slowDealloc(v39, -1, -1);
          }
          else
          {
            v44 = *(void (**)(uint64_t, uint64_t, __n128))(v7 + 8);
            ((void (*)(uint64_t, uint64_t))v44)(v34, v6);
          }

          v19 = v53;
          ((void (*)(char *, uint64_t))v44)(v12, v6);
          v18 = v55;
          v23 = v52;
          ((void (*)(char *, uint64_t))v44)(v55, v6);
        }
        if (v56 == ++v22)
          goto LABEL_21;
      }
      __break(1u);
    }
    else
    {
LABEL_21:
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100497630(uint64_t a1@<X0>, _QWORD **a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X8>)
{
  _QWORD *v8;
  int *v9;
  uint64_t v10;

  v8 = *a2;
  v9 = (int *)type metadata accessor for ActualListInput(0);
  sub_1004951CC(a1, v8, (uint64_t)a2 + v9[25], *(uint64_t *)((char *)a2 + v9[24] + 8), *(uint64_t *)((char *)a2 + v9[28] + 16), a4, v10, *((_BYTE *)a2 + v9[26]), a3, 0, 0, 0, *((_BYTE *)a2 + v9[33]), *(uint64_t *)((char *)a2 + v9[30]));
}

uint64_t sub_1004976F4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;

  v54 = a1;
  v55 = a2;
  v2 = type metadata accessor for URL.WeatherSourcePar(0);
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  __chkstk_darwin(v2);
  v47 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WeatherMetadata(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for CurrentWeather(0);
  v7 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BE55B0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v13);
  v50 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BD11F8);
  __chkstk_darwin(v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - v19;
  v21 = type metadata accessor for ProviderAttributionConfiguration(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = AppConfiguration.providerAttribution.getter(v25);
  v27 = ProviderAttributionConfiguration.hideLocationViewDataProviderLogos.getter(v26);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if ((v27 & 1) == 0)
  {
    v30 = v55;
    sub_100497B30(v54, (uint64_t)v20);
    sub_100037768((uint64_t)v20, (uint64_t)v17, &qword_100BD11F8);
    v31 = type metadata accessor for WeatherDataModel(0);
    v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v31);
    if ((_DWORD)v32 == 1)
    {
      sub_100021A14((uint64_t)v20, &qword_100BD11F8);
      v33 = (uint64_t)v17;
      v34 = &qword_100BD11F8;
    }
    else
    {
      WeatherDataModel.currentWeather.getter(v32);
      v35 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v17, v31);
      CurrentWeather.metadata.getter(v35);
      v36 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v51);
      WeatherMetadata.attribution.getter(v36);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v53);
      v37 = type metadata accessor for WeatherAttribution(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v37) != 1)
      {
        v41 = (uint64_t)v50;
        WeatherAttribution.sourceURL.getter();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v12, v37);
        v42 = type metadata accessor for URL(0);
        v38 = v30;
        if (_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42) != 1)
        {
          v44 = v47;
          v43 = v48;
          v45 = v49;
          (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, enum case for URL.WeatherSourcePar.app(_:), v49);
          URL.applyWeatherSourceQueryParams(for:)(v44);
          (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
          sub_100021A14((uint64_t)v20, &qword_100BD11F8);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
          v29 = v38;
          v39 = 0;
          v28 = v42;
          return _s7Weather24LocationCompositionStateOwst_0(v29, v39, 1, v28);
        }
        sub_100021A14((uint64_t)v20, &qword_100BD11F8);
        sub_100021A14(v41, &qword_100BD4280);
        goto LABEL_8;
      }
      sub_100021A14((uint64_t)v20, &qword_100BD11F8);
      v34 = &qword_100BE55B0;
      v33 = (uint64_t)v12;
    }
    sub_100021A14(v33, v34);
    v38 = v30;
LABEL_8:
    v28 = type metadata accessor for URL(0);
    v29 = v38;
    goto LABEL_9;
  }
  v28 = type metadata accessor for URL(0);
  v29 = v55;
LABEL_9:
  v39 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v29, v39, 1, v28);
}

uint64_t sub_100497B30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _BYTE v20[16];
  uint64_t *v21;

  v4 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v4);
  v5 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for LocationWeatherDataState(0);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v20[-v12];
  v14 = *a1;
  v21 = a1;
  swift_bridgeObjectRetain(v14);
  sub_1006887F0((uint64_t)sub_10049960C, (uint64_t)v20, v14);
  v16 = v15;
  swift_bridgeObjectRelease();
  sub_1002F7108(v16, (uint64_t)v7);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1)
  {
    sub_10007802C((uint64_t)v7, (uint64_t)v13, type metadata accessor for LocationWeatherDataState);
    sub_10007802C((uint64_t)v13, (uint64_t)v10, type metadata accessor for LocationWeatherDataState);
    v17 = (char *)&loc_100497CE0 + 4 * byte_1009A2C20[swift_getEnumCaseMultiPayload(v10)];
    __asm { BR              X10 }
  }
  sub_100021A14((uint64_t)v7, &qword_100BC3380);
  v18 = type metadata accessor for WeatherDataModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v18);
}

void sub_100497D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1000BA294(&qword_100BC3358);
  v5 = v3 + *(int *)(v4 + 48);
  v6 = v3 + *(int *)(v4 + 64);
  sub_10007802C(v3, v1, type metadata accessor for WeatherData);
  v7 = v1 + *(int *)(v2 + 24);
  v8 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v0, v7, v8);
  sub_1000215BC(v1, type metadata accessor for WeatherData);
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v8);
  sub_1000215BC(v6, type metadata accessor for NewsDataModel);
  sub_1000215BC(v5, type metadata accessor for PreprocessedWeatherData);
  JUMPOUT(0x100497D0CLL);
}

double sub_100497DD0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  v4 = type metadata accessor for ActualListInput(0);
  v5 = *(_QWORD *)(a1 + *(int *)(v4 + 112) + 16);
  v6 = Location.Identifier.id.getter(v4);
  if (*(_QWORD *)(v5 + 16) && (v7 = sub_1000991C8(v6), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(v5 + 56);
    v11 = type metadata accessor for LocationWeatherDataState(0);
    sub_100080C0C(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v9, a2, type metadata accessor for LocationWeatherDataState);
    v12 = a2;
    v13 = 0;
    v14 = v11;
  }
  else
  {
    v14 = type metadata accessor for LocationWeatherDataState(0);
    v12 = a2;
    v13 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v12, v13, 1, v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100497EAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = type metadata accessor for ProviderAttributionConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = AppConfiguration.providerAttribution.getter(v4);
  v8 = ProviderAttributionConfiguration.mapDataLearnMoreURL.getter(v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v8;
  a1[1] = v10;
  return result;
}

char *sub_100497F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v54[2];
  char *v55;
  unsigned int v56;
  uint64_t (*v57)(char *);
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;

  v4 = type metadata accessor for URL.WeatherSourcePar(0);
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  __chkstk_darwin(v4);
  v65 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  __chkstk_darwin(v6);
  v62 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v61 = (char *)v54 - v10;
  v11 = type metadata accessor for WeatherProviderAttribution(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v60 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v54 - v15;
  v17 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v17);
  v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CurrentLocation(0);
  __chkstk_darwin(v20);
  v22 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ActualListInput(0);
  sub_100037768(a1 + *(int *)(v23 + 20), (uint64_t)v19, (uint64_t *)&unk_100C0D170);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
    sub_100021A14((uint64_t)v19, (uint64_t *)&unk_100C0D170);
    return (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    sub_10007802C((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    v25 = (_QWORD *)(a2 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherProviderAttributionCacheManager);
    v26 = *(_QWORD *)(a2 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherProviderAttributionCacheManager + 24);
    v27 = *(_QWORD *)(a2 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherProviderAttributionCacheManager + 32);
    sub_1000DB418(v25, v26);
    v28 = CurrentLocation.coordinate.getter();
    v29 = (void *)CLLocationCoordinate2D.clLocation.getter(v28);
    v30 = dispatch thunk of WeatherProviderAttributionCacheManagerType.cachedAttributions(for:)(v29, v26, v27);

    v31 = *(_QWORD *)(v30 + 16);
    v24 = (char *)_swiftEmptyArrayStorage;
    if (v31)
    {
      v55 = v22;
      v73 = (char *)_swiftEmptyArrayStorage;
      sub_100606060();
      v32 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v54[1] = v30;
      v59 = v32;
      v33 = v30 + v32;
      v34 = *(_QWORD *)(v12 + 72);
      v57 = *(uint64_t (**)(char *))(v12 + 16);
      v58 = v34;
      v56 = enum case for URL.WeatherSourcePar.app(_:);
      v35 = v60;
      v36 = v61;
      v37 = v62;
      do
      {
        v71 = v33;
        v72 = v31;
        v38 = v57(v35);
        v39 = WeatherProviderAttribution.name.getter(v38);
        v69 = v40;
        v70 = v39;
        v68 = WeatherProviderAttribution.logo.getter();
        WeatherProviderAttribution.source.getter();
        v41 = v16;
        v42 = v66;
        v43 = v11;
        v44 = v65;
        v45 = v12;
        v46 = v67;
        (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, v56, v67);
        URL.applyWeatherSourceQueryParams(for:)(v44);
        v47 = *(void (**)(char *, uint64_t))(v42 + 8);
        v16 = v41;
        v48 = v44;
        v11 = v43;
        v49 = v46;
        v12 = v45;
        v47(v48, v49);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v64);
        WeatherProviderAttribution.init(name:logo:source:)(v70, v69, v68, v36);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v43);
        v24 = v73;
        if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
        {
          sub_100606060();
          v24 = v73;
        }
        v50 = *((_QWORD *)v24 + 2);
        v51 = v72;
        if (v50 >= *((_QWORD *)v24 + 3) >> 1)
        {
          sub_100606060();
          v24 = v73;
        }
        *((_QWORD *)v24 + 2) = v50 + 1;
        v52 = v58;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v59 + v50 * v58], v16, v11);
        v73 = v24;
        v33 = v71 + v52;
        v31 = v51 - 1;
      }
      while (v31);
      v22 = v55;
    }
    sub_1000215BC((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    swift_bridgeObjectRelease();
  }
  return v24;
}

uint64_t sub_100498374(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  unint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t, __n128);
  uint64_t v37;
  char *v38;

  v32 = a2;
  v5 = sub_1000BA294(&qword_100BCD680);
  __chkstk_darwin(v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Location.Identifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v38 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v35 = (char *)v30 - v12;
  v13 = type metadata accessor for LocationModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v30[1] = a1;
    v31 = a3;
    v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v19 = *(_QWORD *)(v14 + 72);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
    v37 = v19;
    v20 = swift_bridgeObjectRetain(a1);
    v21 = (char *)_swiftEmptyArrayStorage;
    v33 = v14;
    v34 = v9;
    do
    {
      v22 = v36(v16, v18, v13, v20);
      LocationModel.identifier.getter(v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v8);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
      {
        sub_100021A14((uint64_t)v7, &qword_100BCD680);
      }
      else
      {
        v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v24 = v35;
        v23(v35, v7, v8);
        v23(v38, v24, v8);
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_10009AD84();
          v21 = v26;
        }
        v25 = *((_QWORD *)v21 + 2);
        if (v25 >= *((_QWORD *)v21 + 3) >> 1)
        {
          sub_10009AD84();
          v21 = v27;
        }
        *((_QWORD *)v21 + 2) = v25 + 1;
        v9 = v34;
        v23(&v21[((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v34 + 72) * v25], v38, v8);
        v14 = v33;
      }
      v18 += v37;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a3 = v31;
  }
  else
  {
    v21 = (char *)_swiftEmptyArrayStorage;
  }
  sub_10049864C(v32 & 1, v21, a3);
  v28 = static LocationIndexMapper.makeMapping(from:savedLocations:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28;
}

_QWORD *sub_10049864C(char a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v6 = type metadata accessor for ListLocationViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Location.Identifier(0);
  v10 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    v13 = *(_QWORD *)(a3 + 16);
    a2 = _swiftEmptyArrayStorage;
    if (v13)
    {
      v21 = _swiftEmptyArrayStorage;
      sub_100605C7C();
      v14 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v19 = *(_QWORD *)(v7 + 72);
      a2 = v21;
      do
      {
        sub_100080C0C(v14, (uint64_t)v9, type metadata accessor for ListLocationViewModel);
        LocationModel.identifier.getter(v15);
        sub_1000215BC((uint64_t)v9, type metadata accessor for ListLocationViewModel);
        if ((swift_isUniquelyReferenced_nonNull_native(a2) & 1) == 0)
        {
          sub_100605C7C();
          a2 = v21;
        }
        v16 = a2[2];
        if (v16 >= a2[3] >> 1)
        {
          sub_100605C7C();
          a2 = v21;
        }
        a2[2] = v16 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))((unint64_t)a2+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v16, v12, v20);
        v21 = a2;
        v14 += v19;
        --v13;
      }
      while (v13);
    }
  }
  return a2;
}

uint64_t sub_100498828()
{
  uint64_t v0;

  sub_100021A14(v0 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___listAnimationKind, &qword_100BD4B90);
  sub_1000CCDD4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundModelFactory);
  sub_1000CCDD4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundTimeDataFactory);
  sub_1000CCDD4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherEventDescriptionStringBuilder);
  sub_1000CCDD4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_appConfigurationManager);
  sub_1000CCDD4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_listViewTipManager);
  sub_1000CCDD4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_notificationsOptInStatusFactory);
  sub_1000CCDD4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherProviderAttributionCacheManager);
  sub_100021A14(v0 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedInput, &qword_100BE5570);
  sub_100021A14(v0 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedModel, &qword_100BC46E8);
  sub_1000BE7B4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedToPreprocess);
  sub_1000BE7B4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedByCachedModel);
  swift_bridgeObjectRelease();
  sub_1000BE7B4(OBJC_IVAR____TtC7Weather20ListViewModelFactory_logger);
  return v0;
}

uint64_t sub_100498910()
{
  uint64_t v0;

  sub_100498828();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100498934()
{
  return type metadata accessor for ListViewModelFactory(0);
}

uint64_t sub_10049893C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100494B48(a1, *(_QWORD ***)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_10049895C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100496F08(a1, *(_QWORD *)(v2 + 24), a2);
}

void sub_100498974(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100497630(a1, *(_QWORD ***)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_100498994(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for Location.Identifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Location(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocationModel.location.getter(v14);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC35F8);
    return 0;
  }
  else
  {
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    Location.identifier.getter(v16);
    v15 = sub_100492B88((uint64_t)v6, a2);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v15;
}

uint64_t sub_100498B18(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v4 = type metadata accessor for LocationCompositionState(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10049301C();
  if ((v7 & 1) != 0)
  {
    LocationModel.locationCompositionState.getter(v6);
    if (swift_getEnumCaseMultiPayload(v6) == 1)
    {
      sub_10035D5AC(*v6, v6[1], v6[2], v6[3]);
      v8 = sub_1000BA294(&qword_100BE55A0);
      v9 = (char *)v6 + *(int *)(v8 + 48);
      v10 = LocationModel.name.getter(v8);
      v11 = (uint64_t)v9;
    }
    else
    {
      v13 = v6[1];
      v14 = sub_1000BA294(&qword_100BE55A0);
      v15 = (char *)v6 + *(int *)(v14 + 48);
      if (v13)
      {
        v10 = v6[2];
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = LocationModel.name.getter(v14);
      }
      v11 = (uint64_t)v15;
    }
    sub_100021A14(v11, &qword_100BC3118);
  }
  else
  {
    v12 = LocationModel.name.getter(v7);
    v10 = v12;
    if ((a2 & 1) != 0 && (static Settings.Features.homeAndWorkEnabled.getter(v12) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_myLocationString);
      swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_myLocationString + 8));
    }
  }
  return v10;
}

double sub_100498C84@<D0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  __n128 v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = v3;
  v8 = sub_1000BA294(&qword_100BCCC50);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocationCompositionState(0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10049301C();
  if ((v14 & 1) != 0)
  {
    LocationModel.locationCompositionState.getter(v13);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13);
    sub_10035D5AC(*v13, v13[1], v13[2], v13[3]);
    v17 = (uint64_t)v13 + *(int *)(sub_1000BA294(&qword_100BE55A0) + 48);
    if (EnumCaseMultiPayload == 1)
    {
      v19 = LocationModel.timeZone.getter(v18);
      __chkstk_darwin(v19);
      *(&v41 - 2) = a2;
      sub_10024B58C((uint64_t)sub_100499624, (uint64_t)(&v41 - 4), (uint64_t)&v42, v20, v21, v22, v23, v24, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
        v52);
      sub_100021A14((uint64_t)v10, &qword_100BCCC50);
      v25 = type metadata accessor for ListLocationRowPrimaryText(0);
      swift_storeEnumTagMultiPayload(a3, v25, 1);
    }
    else
    {
      v29 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_myLocationString + 8);
      *a3 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_myLocationString);
      a3[1] = v29;
      v30 = type metadata accessor for ListLocationRowPrimaryText(0);
      swift_storeEnumTagMultiPayload(a3, v30, 0);
      swift_bridgeObjectRetain(v29);
    }
    sub_100021A14(v17, &qword_100BC3118);
  }
  else if ((a1 & 1) != 0)
  {
    v26 = static Settings.Features.homeAndWorkEnabled.getter(v14);
    if ((v26 & 1) != 0)
    {
      v27 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_myLocationString);
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_myLocationString + 8));
    }
    else
    {
      v27 = LocationModel.name.getter(v26);
      v28 = v39;
    }
    *a3 = v27;
    a3[1] = v28;
    v40 = type metadata accessor for ListLocationRowPrimaryText(0);
    *(_QWORD *)&result = swift_storeEnumTagMultiPayload(a3, v40, 0).n128_u64[0];
  }
  else
  {
    v32 = LocationModel.timeZone.getter(v15);
    __chkstk_darwin(v32);
    *(&v41 - 2) = a2;
    sub_10024B58C((uint64_t)sub_100499624, (uint64_t)(&v41 - 4), (uint64_t)&v43, v33, v34, v35, v36, v37, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
      v52);
    sub_100021A14((uint64_t)v10, &qword_100BCCC50);
    v38 = type metadata accessor for ListLocationRowPrimaryText(0);
    *(_QWORD *)&result = swift_storeEnumTagMultiPayload(a3, v38, 1).n128_u64[0];
  }
  return result;
}

void sub_100498F3C(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  void *object;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t countAndFlagsBits;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v77 = a1;
  v78 = a2;
  v2 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v2);
  v71 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocationOfInterestType(0);
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  __chkstk_darwin(v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for LocationOfInterest(0);
  v72 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v71 - v9;
  v11 = sub_1000BA294(&qword_100BC3118);
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v71 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v71 - v21;
  v23 = type metadata accessor for LocationCompositionState(0);
  __chkstk_darwin(v23);
  v25 = (uint64_t *)((char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = sub_10049301C();
  if ((v26 & 1) == 0)
  {
    if (v77 != 1)
      goto LABEL_17;
    v39 = LocationModel.kind.getter(v26);
    v40 = Location.Identifier.Kind.rawValue.getter(v39 & 1);
    v42 = v41;
    v43 = Location.Identifier.Kind.rawValue.getter(1);
    if (v40 == v43 && v42 == v44)
    {
      v36 = 2;
      swift_bridgeObjectRelease_n(v42, 2);
      countAndFlagsBits = 0;
      object = 0;
      v34 = 0;
      v35 = 0;
      goto LABEL_24;
    }
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v42, v43, v44, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v46 & 1) != 0)
      goto LABEL_17;
    v48 = (uint64_t)v71;
    LocationModel.location.getter(v47);
    v49 = type metadata accessor for Location(0);
    v50 = _s7Weather24LocationCompositionStateOwet_0(v48, 1, v49);
    if ((_DWORD)v50 != 1)
    {
      Location.sanitizedSecondaryName.getter(v50);
      v34 = v69;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      if (v34)
      {
        v70 = String.uppercasedWithPreferredLocale()();
        countAndFlagsBits = v70._countAndFlagsBits;
        object = v70._object;
        swift_bridgeObjectRelease();
        v34 = 0;
        v35 = 0;
        v36 = 0;
        goto LABEL_24;
      }
      countAndFlagsBits = 0;
      object = 0;
      goto LABEL_19;
    }
    v51 = &qword_100BC35F8;
    v52 = v48;
LABEL_16:
    sub_100021A14(v52, v51);
LABEL_17:
    countAndFlagsBits = 0;
    object = 0;
LABEL_18:
    v34 = 0;
LABEL_19:
    v35 = 0;
    v36 = 2;
LABEL_24:
    v37 = v78;
    goto LABEL_25;
  }
  LocationModel.locationCompositionState.getter(v25);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v25);
  object = (void *)v25[1];
  v29 = v25[2];
  if (EnumCaseMultiPayload != 1)
  {
    sub_10035D5AC(*v25, v25[1], v25[2], v25[3]);
    v53 = sub_1000BA294(&qword_100BE55A0);
    sub_1000787D4((uint64_t)v25 + *(int *)(v53 + 48), (uint64_t)v22, &qword_100BC3118);
    sub_100037768((uint64_t)v22, (uint64_t)v19, &qword_100BC3118);
    v54 = v76;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v76) != 1)
    {
      v63 = v72;
      v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v72 + 32))(v10, v19, v54);
      countAndFlagsBits = LocationOfInterest.imageName.getter(v64);
      object = v65;
      v66 = v73;
      v67 = LocationOfInterest.type.getter(countAndFlagsBits);
      v34 = LocationOfInterestType.title.getter(v67);
      v35 = v68;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v66, v75);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v10, v54);
      sub_100021A14((uint64_t)v22, &qword_100BC3118);
      goto LABEL_23;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC3118);
    v52 = (uint64_t)v19;
    v51 = &qword_100BC3118;
    goto LABEL_16;
  }
  v30 = v25[3];
  v31 = *v25;
  v32 = sub_1000BA294(&qword_100BE55A0);
  sub_1000787D4((uint64_t)v25 + *(int *)(v32 + 48), (uint64_t)v16, &qword_100BC3118);
  sub_100037768((uint64_t)v16, (uint64_t)v13, &qword_100BC3118);
  v33 = v76;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v76) != 1)
  {
    v55 = sub_10035D5AC(v31, (uint64_t)object, v29, v30);
    v56 = v72;
    v57 = (*(uint64_t (**)(char *, char *, uint64_t, double))(v72 + 32))(v7, v13, v33, v55);
    v58 = LocationOfInterest.imageName.getter(v57);
    object = v59;
    v60 = v73;
    v61 = LocationOfInterest.type.getter(v58);
    v34 = LocationOfInterestType.title.getter(v61);
    v35 = v62;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v75);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v33);
    sub_100021A14((uint64_t)v16, &qword_100BC3118);
    countAndFlagsBits = v58;
LABEL_23:
    v36 = 1;
    goto LABEL_24;
  }
  sub_100021A14((uint64_t)v16, &qword_100BC3118);
  sub_100021A14((uint64_t)v13, &qword_100BC3118);
  if (!object)
  {
    countAndFlagsBits = 0;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = v78;
  countAndFlagsBits = v31;
LABEL_25:
  *(_QWORD *)v37 = countAndFlagsBits;
  *(_QWORD *)(v37 + 8) = object;
  *(_QWORD *)(v37 + 16) = v34;
  *(_QWORD *)(v37 + 24) = v35;
  *(_BYTE *)(v37 + 32) = v36;
}

uint64_t sub_1004994C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_100499514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000BAD84();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100499570@<X0>(uint64_t *a1@<X8>)
{
  sub_1000BAD84();
  return sub_100497EAC(a1);
}

uint64_t sub_1004995A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004994C4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1004995C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC46E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_10049960C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100497DD0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100499624@<X0>(uint64_t a1@<X8>)
{
  return sub_1004995A8(a1);
}

void sub_100499648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BOOL8 v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164[8];
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v160 = sub_1000C66AC();
  v144 = *(_QWORD *)(v160 - 8);
  sub_1000DDBA0();
  __chkstk_darwin(v3);
  sub_10003BD18();
  v159 = v4;
  sub_1000C5C0C((uint64_t)&v167);
  __chkstk_darwin(v5);
  sub_100079F7C();
  v157 = v6;
  v141 = *(_QWORD *)(sub_1000BA294(&qword_100BE55C8) - 8);
  sub_1000DDBA0();
  __chkstk_darwin(v7);
  sub_10003BD18();
  v158 = v8;
  sub_1000C5C0C((uint64_t)&v166);
  __chkstk_darwin(v9);
  sub_100079F7C();
  v156 = v10;
  sub_1000BA294(&qword_100BD11F8);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000986FC();
  v131 = v12;
  __chkstk_darwin(v13);
  sub_100079F7C();
  v127 = v14;
  v139 = *(_QWORD *)(sub_1000BA294(&qword_100BD1200) - 8);
  sub_1000DDBA0();
  v16 = __chkstk_darwin(v15);
  sub_1000C5578(v16, v17, v18, v19, v20, v21, v22, v23, v125);
  sub_1000C5C0C((uint64_t)&v165);
  __chkstk_darwin(v24);
  sub_100079F7C();
  v162 = v25;
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_1000986FC();
  v128 = v27;
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v125 - v30;
  __chkstk_darwin(v29);
  v163 = (uint64_t)&v125 - v32;
  v33 = sub_1000C5F2C();
  v153 = *(_QWORD *)(v33 - 8);
  v154 = v33;
  sub_1000DDBA0();
  __chkstk_darwin(v34);
  sub_10003BD18();
  v147 = v35;
  sub_1000C5C0C((uint64_t)v164);
  __chkstk_darwin(v36);
  sub_100079F7C();
  v161 = v37;
  v38 = sub_10009876C();
  v39 = type metadata accessor for LocationListPositionData(v38);
  v151 = *(_QWORD *)(v39 - 8);
  v152 = v39;
  sub_1000DDBA0();
  __chkstk_darwin(v40);
  sub_10003BD18();
  v146 = v41;
  sub_1000C5C0C((uint64_t)&v162);
  __chkstk_darwin(v42);
  v44 = (char *)&v125 - v43;
  v45 = type metadata accessor for TemperatureScaleData(0);
  v149 = *(_QWORD *)(v45 - 8);
  v150 = v45;
  sub_1000DDBA0();
  __chkstk_darwin(v46);
  sub_10003BD18();
  v145 = v47;
  sub_1000C5C0C((uint64_t)&v161);
  __chkstk_darwin(v48);
  v49 = sub_1000D0190();
  v50 = type metadata accessor for TemperatureScale(v49);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = __chkstk_darwin(v50);
  v54 = (char *)&v125 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v56 = (char *)&v125 - v55;
  v57 = type metadata accessor for Location.Identifier(0);
  __chkstk_darwin(v57);
  sub_100098728();
  v60 = v59 - v58;
  v134 = v61;
  v62 = *(void (**)(uint64_t, uint64_t))(v61 + 16);
  v135 = v63;
  v62(v60, a1);
  v64 = type metadata accessor for UnitManager(0);
  v65 = static UnitManager.standard.getter(v64);
  v66 = (void *)UnitManager.temperature.getter();
  swift_release(v65);
  sub_10092D618(v66, (uint64_t)v56);
  v67 = v126;
  v68 = sub_100499F14(v126, v60);
  v137 = v51;
  v69 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v136 = v56;
  v138 = v50;
  v69(v54, v56, v50);
  v148 = v1;
  TemperatureScaleData.init(temperatureScale:)(v54);
  v70 = (uint64_t)v44;
  v71 = (uint64_t *)v67;
  LocationListPositionData.init(position:)(v68);
  v72 = (_QWORD *)(v67 + 8);
  v73 = *(_QWORD *)(v67 + 32);
  v74 = v71[5];
  sub_1000DB418(v72, v73);
  if ((dispatch thunk of LocationPrivacySamplerType.canRecordLocation(_:)(v60, v73, v74) & 1) != 0)
  {
    v75 = ((double (*)(void))Location.Identifier.coordinate.getter)();
    Location.Identifier.coordinate.getter();
  }
  else
  {
    v76 = 999.0;
    v75 = 999.0;
  }
  LocationData.init(latitudeDouble:longitudeDouble:)(v75, v76);
  v77 = v163;
  sub_10049A2A4((uint64_t)v71, v60, v163);
  sub_100037768(v77, (uint64_t)v31, &qword_100BC3460);
  v78 = type metadata accessor for WeatherData(0);
  v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v78);
  v80 = v128;
  v81 = v127;
  if (v79 == 1)
  {
    sub_100021A14((uint64_t)v31, &qword_100BC3460);
    v82 = sub_1000B2F08();
    v83 = v81;
    v84 = 1;
  }
  else
  {
    v85 = &v31[*(int *)(v78 + 24)];
    v86 = sub_1000B2F08();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v81, v85, v86);
    sub_1000215BC((uint64_t)v31, type metadata accessor for WeatherData);
    v83 = v81;
    v84 = 0;
    v82 = v86;
  }
  _s7Weather24LocationCompositionStateOwst_0(v83, v84, 1, v82);
  v87 = v131;
  sub_1008193A0(v81, v162);
  sub_100037768(v163, v80, &qword_100BC3460);
  v88 = _s7Weather24LocationCompositionStateOwet_0(v80, 1, v78);
  v133 = v60;
  if (v88 == 1)
  {
    sub_100021A14(v80, &qword_100BC3460);
    v89 = sub_1000B2F08();
    v90 = v87;
    v91 = 1;
  }
  else
  {
    v92 = v80 + *(int *)(v78 + 24);
    v93 = sub_1000B2F08();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v87, v92, v93);
    sub_1000215BC(v80, type metadata accessor for WeatherData);
    v90 = v87;
    v91 = 0;
    v89 = v93;
  }
  _s7Weather24LocationCompositionStateOwst_0(v90, v91, 1, v89);
  v94 = v156;
  sub_10067E3A4(v87, v156);
  v95 = type metadata accessor for AQIData(0);
  v96 = _s7Weather24LocationCompositionStateOwet_0(v94, 1, v95) != 1;
  v97 = v157;
  AQIAvailabilityData.init(isAQIAvailable:)(v96);
  v131 = *v71;
  v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 16);
  v99 = v151;
  v125 = v70;
  v98(v146, v70, v152);
  v100 = v149;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 16))(v145, v148, v150);
  v101 = v153;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 16))(v147, v161, v154);
  sub_100037768(v162, v155, &qword_100BD1200);
  sub_100037768(v94, v158, &qword_100BE55C8);
  v102 = v144;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v144 + 16))(v159, v97, v160);
  v103 = *(unsigned __int8 *)(v99 + 80);
  v104 = v99;
  v105 = (v103 + 16) & ~v103;
  v106 = *(unsigned __int8 *)(v100 + 80);
  v107 = v100;
  v108 = (v130 + v106 + v105) & ~v106;
  v109 = *(unsigned __int8 *)(v101 + 80);
  v110 = (v129 + v109 + v108) & ~v109;
  v111 = *(unsigned __int8 *)(v139 + 80);
  v112 = (v132 + v111 + v110) & ~v111;
  v113 = *(unsigned __int8 *)(v141 + 80);
  v114 = (v140 + v113 + v112) & ~v113;
  v115 = *(unsigned __int8 *)(v102 + 80);
  v116 = (v142 + v115 + v114) & ~v115;
  v117 = swift_allocObject(&unk_100B75FB8, v116 + v143, v103 | v106 | v109 | v111 | v113 | v115 | 7);
  v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32);
  v119 = v152;
  v118(v117 + v105, v146, v152);
  sub_1000C5B18(v117 + v108, v145, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 32));
  v120 = v117 + v110;
  v121 = v153;
  v122 = v154;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 32))(v120, v147, v154);
  sub_1000787D4(v155, v117 + v112, &qword_100BD1200);
  sub_1000787D4(v158, v117 + v114, &qword_100BE55C8);
  v123 = v117 + v116;
  v124 = v160;
  sub_1000992E4(v123, v159, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 32));
  Tracker.diagnosticTransaction(block:)(sub_10049BCB8, v117);
  swift_release(v117);
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v157, v124);
  sub_100021A14(v162, &qword_100BD1200);
  sub_100021A14(v163, &qword_100BC3460);
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v161, v122);
  (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v125, v119);
  sub_100098B40(v148, *(uint64_t (**)(uint64_t, uint64_t))(v149 + 8));
  (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v138);
  (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
  sub_100021A14(v156, &qword_100BE55C8);
  sub_10009990C();
}

uint64_t sub_100499F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for Location.Identifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for LocationsState(0);
  v9 = __chkstk_darwin(v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(a1 + 48))(&v33, v9);
  v12 = v33;
  sub_100080C0C(v33 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v11, type metadata accessor for LocationsState);
  swift_release(v12);
  v13 = *(_QWORD *)&v11[*(int *)(v8 + 36)];
  swift_bridgeObjectRetain(v13);
  sub_1000215BC((uint64_t)v11, type metadata accessor for LocationsState);
  v30 = a2;
  v14 = sub_100120A00(sub_10049BD78, (uint64_t)v29, v13);
  LOBYTE(v8) = v15;
  swift_bridgeObjectRelease(v13);
  if ((v8 & 1) == 0)
  {
    if (v14 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_12;
    }
    if (v14 <= 0x7FFFFFFF)
      return v14;
    __break(1u);
  }
  if (qword_100BC2400 != -1)
LABEL_12:
    swift_once(&qword_100BC2400, sub_1001597C4);
  v16 = type metadata accessor for Logger(0);
  sub_1000AECD4(v16, (uint64_t)qword_100CAEFF8);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.error.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v22 = swift_slowAlloc(32, -1);
    v33 = v22;
    *(_DWORD *)v21 = 141558275;
    v31 = 1752392040;
    v23 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    *(_WORD *)(v21 + 12) = 2081;
    v24 = Location.Identifier.id.getter(v23);
    v26 = v25;
    v31 = sub_1000CE1C8(v24, v25, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "Failed to find location position, location=%{private,mask.hash}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v22, 1);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }

  return 0xFFFFFFFFLL;
}

uint64_t sub_10049A20C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v1 = Location.Identifier.id.getter(a1);
  v3 = v2;
  v4 = Location.Identifier.id.getter(v1);
  if (v1 == v4 && v3 == v5)
  {
    v8 = 1;
    v7 = v3;
  }
  else
  {
    v7 = v5;
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
  }
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10049A2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a3;
  v58 = type metadata accessor for Location.Identifier(0);
  v5 = *(_QWORD *)(v58 - 8);
  v6 = __chkstk_darwin(v58);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v58 - v9;
  v11 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocationWeatherDataState(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v58 - v19;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(a1 + 48))(&v61, v18);
  v21 = v61;
  v22 = *(_QWORD *)(v61 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain(v22);
  v23 = swift_release(v21);
  v24 = Location.Identifier.id.getter(v23);
  v26 = v25;
  sub_1000EED10(v24, v25, v22);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v22);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1)
  {
    sub_100021A14((uint64_t)v13, &qword_100BC3380);
    if (qword_100BC2400 != -1)
      swift_once(&qword_100BC2400, sub_1001597C4);
    v27 = type metadata accessor for Logger(0);
    sub_1000AECD4(v27, (uint64_t)qword_100CAEFF8);
    v28 = v58;
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v58);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc(22, -1);
      v33 = swift_slowAlloc(32, -1);
      *(_DWORD *)v32 = 141558275;
      v60 = 1752392040;
      v61 = v33;
      v34 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      *(_WORD *)(v32 + 12) = 2081;
      v35 = Location.Identifier.id.getter(v34);
      v37 = v36;
      v60 = sub_1000CE1C8(v35, v36, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      v38 = swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v28, v38);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Weather missing for location: %{private,mask.hash}s", (uint8_t *)v32, 0x16u);
      v39 = 1;
      swift_arrayDestroy(v33, 1);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);

LABEL_15:
      v43 = v59;
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v28);

    goto LABEL_14;
  }
  sub_10007802C((uint64_t)v13, (uint64_t)v20, type metadata accessor for LocationWeatherDataState);
  sub_100080C0C((uint64_t)v20, (uint64_t)v17, type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload(v17, v14) != 1)
  {
    sub_1000215BC((uint64_t)v17, type metadata accessor for LocationWeatherDataState);
    if (qword_100BC2400 != -1)
      swift_once(&qword_100BC2400, sub_1001597C4);
    v44 = type metadata accessor for Logger(0);
    sub_1000AECD4(v44, (uint64_t)qword_100CAEFF8);
    v45 = v58;
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v58);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc(22, -1);
      v50 = swift_slowAlloc(32, -1);
      *(_DWORD *)v49 = 141558275;
      v60 = 1752392040;
      v61 = v50;
      v51 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      *(_WORD *)(v49 + 12) = 2081;
      v52 = Location.Identifier.id.getter(v51);
      v54 = v53;
      v60 = sub_1000CE1C8(v52, v53, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      v55 = swift_bridgeObjectRelease(v54);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v58, v55);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Data missing for weather data for %{private,mask.hash}s", (uint8_t *)v49, 0x16u);
      v39 = 1;
      swift_arrayDestroy(v50, 1);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);

      sub_1000215BC((uint64_t)v20, type metadata accessor for LocationWeatherDataState);
      goto LABEL_15;
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v45);
    sub_1000215BC((uint64_t)v20, type metadata accessor for LocationWeatherDataState);
LABEL_14:
    v39 = 1;
    goto LABEL_15;
  }
  sub_1000215BC((uint64_t)v20, type metadata accessor for LocationWeatherDataState);
  v40 = sub_1000BA294(&qword_100BC3358);
  v41 = (uint64_t)&v17[*(int *)(v40 + 48)];
  v42 = (uint64_t)&v17[*(int *)(v40 + 64)];
  v43 = v59;
  sub_10007802C((uint64_t)v17, v59, type metadata accessor for WeatherData);
  sub_1000215BC(v42, type metadata accessor for NewsDataModel);
  sub_1000215BC(v41, type metadata accessor for PreprocessedWeatherData);
  v39 = 0;
LABEL_16:
  v56 = type metadata accessor for WeatherData(0);
  return _s7Weather24LocationCompositionStateOwst_0(v43, v39, 1, v56);
}

void sub_10049A87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[2];

  v44 = a7;
  v42 = a6;
  v39 = a4;
  v40 = a5;
  v38 = a3;
  v8 = sub_1000BA294(&qword_100BE55C8);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for AQIData(0);
  v37 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD1200);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocationConditionData(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocationListPositionData(0);
  sub_100086DA4(&qword_100BE55D0, (uint64_t (*)(uint64_t))&type metadata accessor for LocationListPositionData, (uint64_t)&protocol conformance descriptor for LocationListPositionData);
  v41 = (unint64_t)"ion is cached, not current.";
  AccessTracker.push<A>(data:traits:file:line:)(a2, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 119, v19, v20);
  v21 = type metadata accessor for TemperatureScaleData(0);
  sub_100086DA4(&qword_100BD4618, (uint64_t (*)(uint64_t))&type metadata accessor for TemperatureScaleData, (uint64_t)&protocol conformance descriptor for TemperatureScaleData);
  AccessTracker.push<A>(data:traits:file:line:)(v38, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 120, v21, v22);
  v23 = type metadata accessor for LocationData(0);
  sub_100086DA4(&qword_100BD1218, (uint64_t (*)(uint64_t))&type metadata accessor for LocationData, (uint64_t)&protocol conformance descriptor for LocationData);
  AccessTracker.push<A>(data:traits:file:line:)(v39, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 121, v23, v24);
  sub_100037768(v40, (uint64_t)v14, &qword_100BD1200);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15) == 1)
  {
    sub_100021A14((uint64_t)v14, &qword_100BD1200);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_100086DA4(&qword_100BD1268, (uint64_t (*)(uint64_t))&type metadata accessor for LocationConditionData, (uint64_t)&protocol conformance descriptor for LocationConditionData);
    AccessTracker.push<A>(data:traits:file:line:)(v18, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 123, v15, v25);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  sub_100037768(v42, (uint64_t)v10, &qword_100BE55C8);
  v26 = v43;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v43) == 1)
  {
    sub_100021A14((uint64_t)v10, &qword_100BE55C8);
    v27 = v41;
  }
  else
  {
    v29 = v36;
    v28 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v10, v26);
    sub_100086DA4(&qword_100BE55E0, (uint64_t (*)(uint64_t))&type metadata accessor for AQIData, (uint64_t)&protocol conformance descriptor for AQIData);
    v27 = v41;
    AccessTracker.push<A>(data:traits:file:line:)(v29, _swiftEmptyArrayStorage, 0xD00000000000005CLL, v41 | 0x8000000000000000, 126, v26, v30);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v26);
  }
  v31 = type metadata accessor for AQIAvailabilityData(0);
  sub_100086DA4(&qword_100BE55D8, (uint64_t (*)(uint64_t))&type metadata accessor for AQIAvailabilityData, (uint64_t)&protocol conformance descriptor for AQIAvailabilityData);
  AccessTracker.push<A>(data:traits:file:line:)(v44, _swiftEmptyArrayStorage, 0xD00000000000005CLL, v27 | 0x8000000000000000, 128, v31, v32);
  v33 = type metadata accessor for LocationViewEvent(0);
  sub_100086DA4(&qword_100BE55C0, (uint64_t (*)(uint64_t))&type metadata accessor for LocationViewEvent, (uint64_t)&protocol conformance descriptor for LocationViewEvent);
  memset(v45, 0, sizeof(v45));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v33, 1, v45, 0, 0, v33, v34);
  sub_100021A14((uint64_t)v45, &qword_100C0B800);
}

void sub_10049ACCC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v85 = a5;
  v86 = a6;
  v89 = a3;
  v90 = a4;
  v91 = a2;
  v100 = a1;
  v83 = sub_100098778();
  v88 = *(_QWORD *)(v83 - 8);
  sub_1000DDBA0();
  __chkstk_darwin(v7);
  sub_1000C5578(v8, v9, v10, v11, v12, v13, v14, v15, v79);
  v87 = v16;
  __chkstk_darwin(v17);
  sub_100079F7C();
  v96 = v18;
  v19 = sub_10009876C();
  v84 = type metadata accessor for ComponentPositionData(v19);
  v99 = *(_QWORD *)(v84 - 8);
  v20 = *(_QWORD *)(v99 + 64);
  __chkstk_darwin(v84);
  v94 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  sub_100079F7C();
  v98 = v22;
  v97 = sub_1000C5F2C();
  v95 = *(_QWORD *)(v97 - 8);
  v23 = *(_QWORD *)(v95 + 64);
  __chkstk_darwin(v97);
  __chkstk_darwin(v24);
  v101 = (uint64_t)&v79 - v25;
  v26 = sub_10009876C();
  type metadata accessor for LocationComponentViewModel(v26);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100098728();
  v30 = v29 - v28;
  sub_1000BA294(&qword_100BE55E8);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100098728();
  v34 = v33 - v32;
  v36 = type metadata accessor for ComponentData(0, v35);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(_QWORD *)(v37 + 64);
  __chkstk_darwin(v36);
  v92 = (uint64_t)&v79 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v79 - v40;
  v42 = type metadata accessor for LocationComponentContainerViewModel(0);
  sub_100080C0C(v100 + *(int *)(v42 + 20), v30, type metadata accessor for LocationComponentViewModel);
  sub_10049B19C(v30, v34);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v36) == 1)
  {
    sub_100021A14(v34, &qword_100BE55E8);
LABEL_13:
    sub_10009990C();
    return;
  }
  v100 = (uint64_t)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = v37;
  v43 = v36;
  v81 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
  v81(v41, v34, v36);
  v44 = v6[4];
  v45 = v6[5];
  v46 = v6;
  sub_1000DB418(v6 + 1, v44);
  v47 = dispatch thunk of LocationPrivacySamplerType.canRecordLocation(_:)(v91, v44, v45);
  if ((v47 & 1) != 0)
  {
    v48 = Location.Identifier.coordinate.getter(v47);
    Location.Identifier.coordinate.getter(v49);
  }
  else
  {
    v50 = 999.0;
    v48 = 999.0;
  }
  LocationData.init(latitudeDouble:longitudeDouble:)(v48, v50);
  v51 = v43;
  v52 = v82;
  if (v90 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v89 < (uint64_t)0xFFFFFFFF80000000 || v90 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_15;
  if (v89 <= 0x7FFFFFFF)
  {
    v54 = v98;
    ComponentPositionData.init(row:column:)();
    v90 = *v46;
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16);
    v80 = v20;
    v56 = v95;
    v55(v100, v101, v97);
    sub_1000992E4(v92, (uint64_t)v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16));
    v57 = v88;
    v91 = v41;
    v58 = v99;
    v59 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v94, v54, v84);
    v89 = v51;
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
    v61 = v83;
    v60(v96, v85, v83);
    v60(v93, v86, v61);
    v62 = *(unsigned __int8 *)(v56 + 80);
    v63 = (v62 + 16) & ~v62;
    v64 = *(unsigned __int8 *)(v52 + 80);
    v65 = (v23 + v64 + v63) & ~v64;
    v66 = *(unsigned __int8 *)(v58 + 80);
    v67 = (v38 + v66 + v65) & ~v66;
    v68 = *(unsigned __int8 *)(v57 + 80);
    v69 = (v80 + v68 + v67) & ~v68;
    v70 = v61;
    v71 = (v87 + v68 + v69) & ~v68;
    v72 = swift_allocObject(&unk_100B76090, v71 + v87, v62 | v64 | v66 | v68 | 7);
    sub_1000C5B18(v72 + v63, v100, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32));
    v73 = v72 + v65;
    v74 = v89;
    v81((char *)v73, v92, v89);
    v75 = v72 + v67;
    v76 = v99;
    (*(void (**)(uint64_t, char *, uint64_t))(v99 + 32))(v75, v94, v59);
    v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32);
    v77(v72 + v69, v96, v70);
    v77(v72 + v71, v93, v70);
    Tracker.diagnosticTransaction(block:)(sub_10049C07C, v72);
    v78 = swift_release(v72);
    (*(void (**)(uint64_t, uint64_t, __n128))(v76 + 8))(v98, v59, v78);
    sub_100098B40(v101, *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8));
    (*(void (**)(char *, uint64_t))(v82 + 8))(v91, v74);
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
}

void sub_10049B19C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[2];

  v10[1] = a2;
  v3 = type metadata accessor for ComponentType(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for LocationComponentViewModel(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ComponentData(0, v5);
  __chkstk_darwin(v8);
  sub_100080C0C(a1, (uint64_t)v7, type metadata accessor for LocationComponentViewModel);
  v9 = (char *)sub_10049B2AC + 4 * byte_1009A2D60[swift_getEnumCaseMultiPayload(v7)];
  __asm { BR              X10 }
}

uint64_t sub_10049B2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000215BC(v1, type metadata accessor for LocationComponentViewModel);
  return _s7Weather24LocationCompositionStateOwst_0(*(_QWORD *)(v2 - 88), 1, 1, v0);
}

uint64_t sub_10049B4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v11 = type metadata accessor for LocationData(0);
  sub_100086DA4(&qword_100BD1218, (uint64_t (*)(uint64_t))&type metadata accessor for LocationData, (uint64_t)&protocol conformance descriptor for LocationData);
  AccessTracker.push<A>(data:traits:file:line:)(a2, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 155, v11, v12);
  v14 = type metadata accessor for ComponentData(0, v13);
  sub_100086DA4(&qword_100BE55F0, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentData, (uint64_t)&protocol conformance descriptor for ComponentData);
  AccessTracker.push<A>(data:traits:file:line:)(a3, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 156, v14, v15);
  v16 = type metadata accessor for ComponentPositionData(0);
  sub_100086DA4(&qword_100BE55F8, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentPositionData, (uint64_t)&protocol conformance descriptor for ComponentPositionData);
  AccessTracker.push<A>(data:traits:file:line:)(a4, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 157, v16, v17);
  v18 = type metadata accessor for ComponentExposureEvent(0);
  sub_100086DA4(&qword_100BE5600, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentExposureEvent, (uint64_t)&protocol conformance descriptor for ComponentExposureEvent);
  v20 = v19;
  AccessTracker.explicitTime<A>(_:startTime:)(v18, a5, v18, v19);
  return AccessTracker.explicitSubmit<A>(_:submitTime:completion:)(v18, a6, 0, 0, v18, v20);
}

void sub_10049B668(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100098728();
  v6 = v5 - v4;
  v7 = URL.host.getter();
  if (v8)
  {
    v9 = v7;
    v10 = v8;
    v11 = swift_allocObject(&unk_100B75F68, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = v10;
    Tracker.diagnosticTransaction(block:)(sub_10049BA74, v11);
    swift_release();
  }
  else
  {
    if (qword_100BC2400 != -1)
      swift_once(&qword_100BC2400, sub_1001597C4);
    v12 = type metadata accessor for Logger(0);
    sub_1000AECD4(v12, (uint64_t)qword_100CAEFF8);
    v13 = sub_1000992E4(v6, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    v14 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.error.getter(v14, v15);
    if (os_log_type_enabled(v14, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v22 = v18;
      *(_DWORD *)v17 = 136315138;
      sub_100086DA4(&qword_100BCCFF8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v19 = dispatch thunk of CustomStringConvertible.description.getter(v2);
      v21 = sub_1000CE1C8(v19, v20, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      swift_bridgeObjectRelease();
      sub_1000BBF94();
      _os_log_impl((void *)&_mh_execute_header, v14, v16, "Attempted to track provider tap but the provider URL has no host. URL=%s", v17, 0xCu);
      swift_arrayDestroy(v18, 1);
      sub_1000986F0(v18);
      sub_1000986F0((uint64_t)v17);
    }
    else
    {
      sub_1000BBF94();
    }

    sub_100098640();
  }
}

void sub_10049B898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];

  v5 = type metadata accessor for LinkType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URLData(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for LinkType.provider(_:), v5, v12);
  v15 = swift_bridgeObjectRetain();
  URLData.init(url:linkType:)(a2, a3, v9, v15);
  sub_100086DA4(&qword_100BD45F8, (uint64_t (*)(uint64_t))&type metadata accessor for URLData, (uint64_t)&protocol conformance descriptor for URLData);
  AccessTracker.push<A>(data:traits:file:line:)(v14, _swiftEmptyArrayStorage, 0xD00000000000005CLL, 0x8000000100A06730, 172, v10, v16);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v17 = type metadata accessor for LinkTapEvent(0);
  sub_100086DA4(&qword_100BD4600, (uint64_t (*)(uint64_t))&type metadata accessor for LinkTapEvent, (uint64_t)&protocol conformance descriptor for LinkTapEvent);
  memset(v19, 0, sizeof(v19));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v17, 0, v19, 0, 0, v17, v18);
  sub_100021A14((uint64_t)v19, &qword_100C0B800);
}

uint64_t sub_10049BA50()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10049BA74(uint64_t a1)
{
  uint64_t v1;

  sub_10049B898(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10049BA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000C4A10();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10049BAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v22 = type metadata accessor for LocationListPositionData(0);
  v1 = *(_QWORD *)(v22 - 8);
  v32 = *(unsigned __int8 *)(v1 + 80);
  v2 = (v32 + 16) & ~v32;
  v3 = *(_QWORD *)(v1 + 64);
  v21 = type metadata accessor for TemperatureScaleData(0);
  v4 = *(_QWORD *)(v21 - 8);
  v31 = *(unsigned __int8 *)(v4 + 80);
  v5 = (v2 + v3 + v31) & ~v31;
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_1000C5F2C();
  v8 = *(_QWORD *)(v7 - 8);
  v30 = *(unsigned __int8 *)(v8 + 80);
  v9 = (v5 + v6 + v30) & ~v30;
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_1000BA294(&qword_100BD1200) - 8);
  v29 = *(unsigned __int8 *)(v11 + 80);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = *(_QWORD *)(sub_1000BA294(&qword_100BE55C8) - 8);
  v23 = (((v9 + v10 + v29) & ~v29) + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v26 = *(_QWORD *)(v13 + 64);
  v27 = *(unsigned __int8 *)(v13 + 80);
  v28 = sub_1000C66AC();
  v14 = *(_QWORD *)(v28 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v25 = v14;
  v24 = *(_QWORD *)(v14 + 64);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v2, v22);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v5, v21);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  v16 = type metadata accessor for LocationConditionData(0);
  if (!sub_1000BC04C(v16))
    sub_100098C04();
  v17 = type metadata accessor for AQIData(0);
  if (!sub_1000BC04C(v17))
    sub_100098C04();
  v18 = (v23 + v26 + v15) & ~v15;
  v19 = v18 + v24;
  (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v0 + v18, v28);
  return swift_deallocObject(v0, v19, v32 | v31 | v30 | v29 | v27 | v15 | 7);
}

void sub_10049BCB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for LocationListPositionData(0);
  v6 = sub_1000D962C();
  type metadata accessor for TemperatureScaleData(v6);
  v7 = sub_1000CCDDC();
  type metadata accessor for LocationData(v7);
  sub_1000D9E3C();
  sub_1000BA294(&qword_100BD1200);
  sub_1000DA5E0();
  v10 = v9 & ~v8;
  v12 = *(_QWORD *)(v11 + 64);
  v13 = *(_QWORD *)(sub_1000BA294(&qword_100BE55C8) - 8);
  v14 = (v10 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000C66AC() - 8) + 80);
  sub_10049A87C(a1, v1 + v2, v1 + v3, v1 + v4, v1 + v10, v1 + v14, v1 + ((v14 + v15 + v16) & ~v16));
}

uint64_t sub_10049BD78(uint64_t a1)
{
  return sub_10049A20C(a1) & 1;
}

_QWORD *assignWithCopy for LocationTracker(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_100094D04(a1 + 1, a2 + 1);
  v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  v5 = a2[9];
  a1[8] = a2[8];
  a1[9] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LocationTracker(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationTracker(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationTracker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationTracker()
{
  return &type metadata for LocationTracker;
}

uint64_t sub_10049BF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = sub_1000C5F2C();
  v1 = *(_QWORD *)(v28 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v24 = (v2 + 16) & ~v2;
  v25 = v1;
  v3 = *(_QWORD *)(v1 + 64);
  v27 = type metadata accessor for ComponentData(0, v4);
  v5 = *(_QWORD *)(v27 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v23 = (v24 + v3 + v6) & ~v6;
  v7 = *(_QWORD *)(v5 + 64);
  v26 = type metadata accessor for ComponentPositionData(0);
  v8 = *(_QWORD *)(v26 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v23 + v7 + v9) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  v12 = sub_100098778();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v10 + v11 + v14) & ~v14;
  v16 = *(_QWORD *)(v13 + 64);
  v17 = v2 | v6 | v9 | v14 | 7;
  v18 = (v16 + v14 + v15) & ~v14;
  v19 = v18 + v16;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v0 + v24, v28);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v23, v27);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v26);
  v20 = v0 + v15;
  v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v21(v20, v12);
  v21(v0 + v18, v12);
  return swift_deallocObject(v0, v19, v17);
}

uint64_t sub_10049C07C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000C5F2C();
  v6 = sub_1000D962C();
  type metadata accessor for ComponentData(v6, v7);
  v8 = sub_1000CCDDC();
  type metadata accessor for ComponentPositionData(v8);
  sub_1000D9E3C();
  sub_100098778();
  sub_1000DA5E0();
  return sub_10049B4C0(a1, v1 + v2, v1 + v3, v1 + v4, v1 + (v10 & ~v9), v1 + ((*(_QWORD *)(v11 + 64) + v9 + (v10 & ~v9)) & ~v9));
}

uint64_t sub_10049C0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for LocationOfInterest(0);
  v35 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_1000986FC();
  v33 = v7;
  __chkstk_darwin(v8);
  v34 = (uint64_t)&v32 - v9;
  v10 = type metadata accessor for Location(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = sub_1000992A8();
  type metadata accessor for HomeAndWorkRefinementInput(v12);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  sub_1000BA294(&qword_100BE5720);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100099864();
  v19 = v2 + *(int *)(v18 + 48);
  sub_10049D080(a1, v2, type metadata accessor for HomeAndWorkRefinementInput);
  sub_10049D080(a2, v19, type metadata accessor for HomeAndWorkRefinementInput);
  v20 = sub_1000BA294(&qword_100BC5FC0);
  sub_1000CC960(v2);
  if (!v24)
  {
    sub_10049D080(v2, v16, type metadata accessor for HomeAndWorkRefinementInput);
    v23 = *(int *)(v20 + 48);
    sub_1000CC960(v19);
    if (!v24)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v3, v19, v10);
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
      v25(v34, v16 + v23, v6);
      v26 = v33;
      v25(v33, v19 + v23, v6);
      v27 = static Location.== infix(_:_:)(v16, v3);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
      if ((v27 & 1) != 0)
      {
        v28 = v34;
        v22 = static LocationOfInterest.== infix(_:_:)(v34, v26);
        sub_1000BAD8C(v26);
        sub_1000BAD8C(v28);
        v29 = sub_1000C5F34();
        sub_10004A2E0(v29, type metadata accessor for HomeAndWorkRefinementInput);
        return v22 & 1;
      }
      sub_1000BAD8C(v26);
      sub_1000BAD8C(v34);
      v30 = sub_1000C5F34();
      sub_10004A2E0(v30, type metadata accessor for HomeAndWorkRefinementInput);
LABEL_13:
      v22 = 0;
      return v22 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v16 + v23, v6);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
LABEL_9:
    sub_100021A14(v2, &qword_100BE5720);
    goto LABEL_13;
  }
  v21 = sub_1000CC960(v19);
  if (!v24)
    goto LABEL_9;
  sub_10004A2E0(v21, type metadata accessor for HomeAndWorkRefinementInput);
  v22 = 1;
  return v22 & 1;
}

uint64_t sub_10049C394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;

  sub_1000BA294(&qword_100BE5728);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = type metadata accessor for HomeAndWorkRefinementViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100099864();
  sub_10049C5A4(a1, v8);
  if (_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9) == 1)
  {
    sub_100021A14(v8, &qword_100BE5728);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_1000AECD4(v11, (uint64_t)qword_100CAF0E8);
    v13 = Logger.logObject.getter(v12);
    v15 = static os_log_type_t.error.getter(v13, v14);
    if (os_log_type_enabled(v13, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v15, "Failed to create home and work refinement input due to missing view state", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v17 = sub_1000BA294(&qword_100BC5FC0);
    v18 = a2;
    v19 = 1;
  }
  else
  {
    sub_10049D0B0(v8, v2, type metadata accessor for HomeAndWorkRefinementViewState);
    v20 = sub_1000BA294(&qword_100BC5FC0);
    v21 = a2 + *(int *)(v20 + 48);
    type metadata accessor for Location(0);
    v22 = sub_1000AE930();
    v23(v22, v2);
    v24 = type metadata accessor for LocationOfInterest(0);
    sub_1000C13A8(v21, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32));
    v18 = a2;
    v19 = 0;
    v17 = v20;
  }
  _s7Weather24LocationCompositionStateOwst_0(v18, v19, 1, v17);
  v25 = type metadata accessor for HomeAndWorkRefinementInput(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v25);
}

uint64_t sub_10049C5A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a2;
  v39 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v40 = v6 - v5;
  v38 = type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v8 = sub_1000992A8();
  v41 = type metadata accessor for HomeAndWorkRefinementViewState(v8);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000986FC();
  v37 = v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - v12;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v37 - v18;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v37 - v24;
  v26 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_10049D080(v26, (uint64_t)v19, type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload(v19) == 5)
  {
    sub_10049D0B0((uint64_t)v19, (uint64_t)v25, type metadata accessor for ModalViewState.LocationDetailModal);
    sub_10049D0B0((uint64_t)v25, (uint64_t)v22, type metadata accessor for ModalViewState.LocationDetailModal);
    if (swift_getEnumCaseMultiPayload(v22) == 7)
    {
      sub_10049D0B0((uint64_t)v22, (uint64_t)v13, type metadata accessor for HomeAndWorkRefinementViewState);
      v27 = v42;
      sub_10049D0B0((uint64_t)v13, v42, type metadata accessor for HomeAndWorkRefinementViewState);
      v28 = 0;
      v29 = v41;
      return _s7Weather24LocationCompositionStateOwst_0(v27, v28, 1, v29);
    }
    v30 = type metadata accessor for ModalViewState.LocationDetailModal;
    v31 = (uint64_t)v22;
  }
  else
  {
    v30 = type metadata accessor for ModalViewState;
    v31 = (uint64_t)v19;
  }
  sub_1000215BC(v31, v30);
  sub_10049D080(v26, (uint64_t)v16, type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload(v16))
  {
    sub_1000215BC((uint64_t)v16, type metadata accessor for ModalViewState);
    v28 = 1;
    v29 = v41;
    v27 = v42;
  }
  else
  {
    sub_1000DF690((uint64_t)v16, v2);
    v32 = v40;
    sub_10049D080(v2 + *(int *)(v38 + 20), v40, type metadata accessor for LocationPreviewModalViewState);
    sub_1000215BC(v2, type metadata accessor for LocationPreviewViewState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v32);
    v29 = v41;
    v27 = v42;
    if (EnumCaseMultiPayload == 8)
    {
      v34 = v32;
      v35 = v37;
      sub_1000DF690(v34, v37);
      sub_1000DF690(v35, v27);
      v28 = 0;
    }
    else
    {
      sub_1000215BC(v32, type metadata accessor for LocationPreviewModalViewState);
      v28 = 1;
    }
  }
  return _s7Weather24LocationCompositionStateOwst_0(v27, v28, 1, v29);
}

uint64_t type metadata accessor for HomeAndWorkRefinementInputFactory()
{
  return objc_opt_self(_TtC7Weather33HomeAndWorkRefinementInputFactory);
}

uint64_t *sub_10049C8E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC5FC0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(v7 + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10049C9D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1000BA294(&qword_100BC5FC0);
  result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(v2 + 48);
    v6 = type metadata accessor for LocationOfInterest(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return result;
}

char *sub_10049CA60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BC5FC0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *sub_10049CB2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_1000BA294(&qword_100BC5FC0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v15 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(a1, a2, v15);
      v16 = *(int *)(v6 + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BC5FC0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(v6 + 48);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

char *sub_10049CC7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BC5FC0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(v6 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *sub_10049CD48(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_1000BA294(&qword_100BC5FC0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v15 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(a1, a2, v15);
      v16 = *(int *)(v6 + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
      return a1;
    }
    sub_100021A14((uint64_t)a1, &qword_100BC5FC0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  v10 = *(int *)(v6 + 48);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10049CE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10049CEA4);
}

uint64_t sub_10049CEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000BA294(&qword_100BC5FC0);
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_10049CEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10049CEF8);
}

uint64_t sub_10049CEF8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1000BA294(&qword_100BC5FC0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_10049CF44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC5FC0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_10049CF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5FC0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for HomeAndWorkRefinementInput(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE5710;
  if (!qword_100BE5710)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeAndWorkRefinementInput);
  return result;
}

uint64_t sub_10049CFEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[32];

  v2 = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v4 = type metadata accessor for LocationOfInterest(319);
    if (v5 > 0x3F)
    {
      return v4;
    }
    else
    {
      swift_getTupleTypeLayout2(v7, *(_QWORD *)(v2 - 8) + 64, *(_QWORD *)(v4 - 8) + 64);
      swift_initEnumMetadataSinglePayload(a1, 256, v7, 1);
      return 0;
    }
  }
  return v2;
}

void sub_10049D080(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_10004A2B0(a1, a2, a3);
  sub_1000C13A8(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_10004A298();
}

void sub_10049D0B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  sub_10004A2B0(a1, a2, a3);
  v3 = sub_1000AE930();
  sub_1000C13A8(v3, v4);
  sub_10004A298();
}

uint64_t *sub_10049D0D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __n128 v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      v9 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = 1;
    }
    else
    {
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v13);
    v15 = a3[5];
    v16 = a3[6];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (char *)a1 + v16;
    v21 = (char *)a2 + v16;
    v22 = type metadata accessor for DayWeather(0);
    v23 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
    v24 = swift_bridgeObjectRetain(v19);
    v23(v20, v21, v22, v24);
    v25 = a3[7];
    v26 = a3[8];
    v27 = (uint64_t *)((char *)a1 + v25);
    v28 = (uint64_t *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    v32 = swift_retain();
    v23(v30, v31, v22, v32);
    v33 = sub_1000BA294(&qword_100BE5730);
    *(_QWORD *)&v30[*(int *)(v33 + 28)] = *(_QWORD *)&v31[*(int *)(v33 + 28)];
  }
  swift_retain();
  return a1;
}

double sub_10049D268(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  __n128 v10;
  double result;

  sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v5 = a1 + *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v6 = type metadata accessor for PresentationMode(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 24);
  v8 = type metadata accessor for DayWeather(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = swift_release();
  ((void (*)(uint64_t, uint64_t, __n128))v9)(a1 + *(int *)(a2 + 32), v8, v10);
  sub_1000BA294(&qword_100BE5730);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_10049D36C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __n128 v30;
  uint64_t v31;

  v6 = sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v12);
  v13 = a3[5];
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (char *)a1 + v14;
  v19 = (char *)a2 + v14;
  v20 = type metadata accessor for DayWeather(0);
  v21 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v20 - 8) + 16);
  v22 = swift_bridgeObjectRetain(v17);
  v21(v18, v19, v20, v22);
  v23 = a3[7];
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v23);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (char *)a1 + v24;
  v29 = (char *)a2 + v24;
  v30 = swift_retain();
  v21(v28, v29, v20, v30);
  v31 = sub_1000BA294(&qword_100BE5730);
  *(_QWORD *)&v28[*(int *)(v31 + 28)] = *(_QWORD *)&v29[*(int *)(v31 + 28)];
  swift_retain();
  return a1;
}

_QWORD *sub_10049D4D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v12);
  }
  v13 = a3[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v16 = v15[1];
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for DayWeather(0);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v22 = a3[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  v26 = swift_release();
  v27 = a3[8];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  ((void (*)(char *, char *, uint64_t, __n128))v21)((char *)a1 + v27, v29, v20, v26);
  v30 = sub_1000BA294(&qword_100BE5730);
  *(_QWORD *)&v28[*(int *)(v30 + 28)] = *(_QWORD *)&v29[*(int *)(v30 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_10049D68C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_1000BA294(&qword_100BC4F28);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for DayWeather(0);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v17 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v16((char *)a1 + v17, v19, v15);
  v20 = sub_1000BA294(&qword_100BE5730);
  *(_QWORD *)&v18[*(int *)(v20 + 28)] = *(_QWORD *)&v19[*(int *)(v20 + 28)];
  return a1;
}

_QWORD *sub_10049D7CC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for DayWeather(0);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40);
  v21(v18, v19, v20);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v22 = swift_release();
  v23 = a3[8];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  ((void (*)(char *, char *, uint64_t, __n128))v21)((char *)a1 + v23, v25, v20, v22);
  v26 = sub_1000BA294(&qword_100BE5730);
  *(_QWORD *)&v24[*(int *)(v26 + 28)] = *(_QWORD *)&v25[*(int *)(v26 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_10049D950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10049D95C);
}

uint64_t sub_10049D95C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v11 = sub_1000CCDFC();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v11;
      v12 = a3[6];
    }
    else
    {
      v7 = sub_1000BA294(&qword_100BE5730);
      v12 = a3[8];
    }
    v8 = a1 + v12;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10049DA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10049DA30);
}

uint64_t sub_10049DA30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v11 = sub_1000CCDFC();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[6];
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BE5730);
      v12 = a4[8];
    }
    v10 = a1 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

uint64_t type metadata accessor for DayWeatherEditorView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE5790;
  if (!qword_100BE5790)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DayWeatherEditorView);
  return result;
}

void sub_10049DB2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_100158A50(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_1009A2E98;
    v4 = type metadata accessor for DayWeather(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = (char *)&value witness table for () + 64;
      sub_10049DBE0(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_10049DBE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BE57A0)
  {
    v2 = type metadata accessor for DayWeather(255);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BE57A0);
  }
}

uint64_t sub_10049DC34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5D60, 1);
}

void sub_10049DC44(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[16];
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  void *v79;
  _QWORD v80[3];

  v73 = a1;
  v64 = sub_1000C4A18();
  v2 = *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64);
  v69 = *(_QWORD *)(v64 - 8);
  v70 = v2;
  __chkstk_darwin(v64);
  v67 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC4FA0);
  v5 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v72 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100098728();
  v68 = v8 - v7;
  v9 = type metadata accessor for InsetGroupedListStyle(0);
  v62 = *(_QWORD *)(v9 - 8);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v14 = sub_1000BA294(&qword_100BE57E0);
  v61 = *(_QWORD *)(v14 - 8);
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  v19 = sub_1000BA294(&qword_100BE57E8);
  v63 = *(_QWORD *)(v19 - 8);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  v24 = sub_1000BA294(&qword_100BE57F0);
  v25 = *(_QWORD *)(v24 - 8);
  v65 = v24;
  v66 = v25;
  sub_10009D98C();
  __chkstk_darwin(v26);
  sub_100098728();
  v60 = v28 - v27;
  v75 = v1;
  v29 = sub_1000BA294(&qword_100BE57F8);
  sub_10003D310(&qword_100BE5800, &qword_100BE57F8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v31 = List<>.init(content:)(sub_10049EFC8, v74, v29, v30);
  InsetGroupedListStyle.init()(v31);
  sub_10003D310(&qword_100BE5808, &qword_100BE57E0, (uint64_t)&protocol conformance descriptor for List<A, B>);
  v33 = v32;
  View.listStyle<A>(_:)(v13, v14, v9, v32, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v13, v9);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v18, v14);
  v35 = v59;
  v36 = (uint64_t *)(v59 + *(int *)(v64 + 20));
  v38 = *v36;
  v37 = v36[1];
  v80[0] = v38;
  v80[1] = v37;
  v76 = v14;
  v77 = (_QWORD *)v9;
  v78 = v33;
  v79 = &protocol witness table for InsetGroupedListStyle;
  v39 = sub_1000DBAA4(v34, (uint64_t)&opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>);
  v40 = sub_100114EF8();
  View.navigationTitle<A>(_:)(v80, v19, &type metadata for String, v39, v40);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v23, v19);
  v41 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v43 = v42;
  LOBYTE(v13) = v44;
  v46 = v45;
  v47 = v67;
  sub_10049EFD0(v35, v67);
  v48 = *(unsigned __int8 *)(v69 + 80);
  v49 = (v48 + 16) & ~v48;
  v50 = swift_allocObject(&unk_100B760F8, v49 + v70, v48 | 7);
  sub_10049F018(v47, v50 + v49);
  v51 = v68;
  v52 = Button<>.init(_:action:)(v41, v43, v13 & 1, v46, sub_10049F05C, v50);
  v76 = v19;
  v77 = &type metadata for String;
  v78 = v39;
  v79 = (void *)v40;
  v53 = sub_1000DBAA4(v52, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>);
  sub_10003D310(&qword_100BC4FC0, &qword_100BC4FA0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v54 = v65;
  v55 = v71;
  v56 = v60;
  View.navigationBarItems<A>(trailing:)(v51, v65, v71, v53, v57);
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v51, v55);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v56, v54);
  sub_100098640();
}

uint64_t sub_10049E020@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char v48[16];
  uint64_t v49;
  char v50[16];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  v47 = a2;
  v3 = sub_1000BA294(&qword_100BE5810);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - v6;
  v8 = sub_1000BA294(&qword_100BE5818);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - v13;
  v15 = LocalizedStringKey.init(stringLiteral:)(0x74617265706D6554, 0xEB00000000657275);
  v52 = Text.init(_:tableName:bundle:comment:)(v15, v17, v16 & 1, v18, 0, 0, 0, 0);
  v53 = v19;
  v54 = v20 & 1;
  v55 = v21;
  v51 = a1;
  v22 = sub_1000BA294(&qword_100BE5820);
  sub_10003D310(&qword_100BE5828, &qword_100BE5820, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v43 = v14;
  Section<>.init(header:content:)(&v52, sub_10049F078, v50, &type metadata for Text, v22, &protocol witness table for Text);
  v23 = LocalizedStringKey.init(stringLiteral:)(0x7469706963657250, 0xED00006E6F697461);
  v52 = Text.init(_:tableName:bundle:comment:)(v23, v25, v24 & 1, v26, 0, 0, 0, 0);
  v53 = v27;
  v54 = v28 & 1;
  v55 = v29;
  v49 = a1;
  v30 = sub_1000BA294(&qword_100BE5830);
  sub_10003D310(&qword_100BE5838, &qword_100BE5830, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Section<>.init(header:content:)(&v52, sub_10049F0B0, v48, &type metadata for Text, v30, &protocol witness table for Text);
  v31 = v9;
  v32 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v32(v11, v14, v8);
  v34 = v44;
  v33 = v45;
  v35 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v36 = v46;
  v35(v46, v7, v45);
  v37 = v47;
  v32(v47, v11, v8);
  v38 = sub_1000BA294(&qword_100BE5840);
  v35(&v37[*(int *)(v38 + 48)], v36, v33);
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v7, v33);
  v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  v40(v43, v8);
  v39(v36, v33);
  return ((uint64_t (*)(char *, uint64_t))v40)(v11, v8);
}

void sub_10049E340(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for DayWeatherEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DayWeather(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(qword_100BC4E80);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - v12;
  DayWeather.highTemperature.getter(v14);
  v15 = sub_1000BA294(&qword_100BC4E68);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BE5730);
  v17 = State.wrappedValue.getter(v7, v16);
  DayWeather.highTemperature.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_10049EFD0(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B76198, v20 + v3, v19 | 7);
  sub_10049F018(v18, v21 + v20);
  sub_1007AC340();
}

void sub_10049E550(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for DayWeatherEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DayWeather(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(qword_100BC4E80);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - v12;
  DayWeather.lowTemperature.getter(v14);
  v15 = sub_1000BA294(&qword_100BC4E68);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BE5730);
  v17 = State.wrappedValue.getter(v7, v16);
  DayWeather.lowTemperature.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_10049EFD0(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B76170, v20 + v3, v19 | 7);
  sub_10049F018(v18, v21 + v20);
  sub_1007AC340();
}

void sub_10049E768(uint64_t *a1@<X1>, uint64_t (*a2)(__n128)@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1000BA294(a1);
  sub_10009D98C();
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v24 - v16;
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v24 - v20;
  v22 = a2(v19);
  a3(v22);
  sub_1000C5F40((uint64_t)v21, (uint64_t)v14);
  sub_1000C5F40((uint64_t)v17, (uint64_t)v11);
  sub_1000C5F40((uint64_t)v14, a5);
  v23 = sub_1000BA294(a4);
  sub_1000C5F40((uint64_t)v11, a5 + *(int *)(v23 + 48));
  sub_1000C2428((uint64_t)v17);
  sub_1000C2428((uint64_t)v21);
  sub_1000C2428((uint64_t)v11);
  sub_1000C2428((uint64_t)v14);
  sub_100098640();
}

void sub_10049E898(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for DayWeatherEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DayWeather(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BDD660);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - v12;
  DayWeather.precipitationAmount.getter(v14);
  v15 = sub_1000BA294(&qword_100BCB0A8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BE5730);
  v17 = State.wrappedValue.getter(v7, v16);
  DayWeather.precipitationAmount.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_10049EFD0(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B76148, v20 + v3, v19 | 7);
  sub_10049F018(v18, v21 + v20);
  sub_1007AC170();
}

void sub_10049EAA8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for DayWeatherEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DayWeather(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BDD660);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v22 - v13;
  DayWeather.snowfallAmount.getter(v12);
  v15 = sub_1000BA294(&qword_100BCB0A8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BE5730);
  State.wrappedValue.getter(v7, v16);
  DayWeather.snowfallAmount.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_10049EFD0(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B76120, v20 + v3, v19 | 7);
  sub_10049F018(v18, v21 + v20);
  sub_1007AC170();
}

void sub_10049ECC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;

  v2 = type metadata accessor for PresentationMode(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC6510);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DayWeather(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void (**)(_QWORD *))(a1 + *(int *)(type metadata accessor for DayWeatherEditorView(0) + 28));
  v13 = sub_1000BA294(&qword_100BE5730);
  State.wrappedValue.getter(v11, v13);
  v12(v11);
  v14.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  sub_1007A5A6C(v14);
  Binding.wrappedValue.getter(v5);
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter(v4, v5);
  sub_100021AA4((uint64_t)v7, &qword_100BC6510);
}

void sub_10049EE34(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  sub_1000CCDFC();
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = (_QWORD *)(v11 - v10);
  sub_1000BA294(a3);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  v17 = sub_1000BA294(a4);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v25 - v22;
  sub_10007EBC8(a1, v16, a3);
  if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17) == 1)
  {
    sub_100021AA4(v16, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v23, v16, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v23, v17);
    sub_1000C4A18();
    v24 = sub_1000BA294(&qword_100BE5730);
    State.wrappedValue.getter(v12, v24);
    a5(v20);
    State.wrappedValue.setter(v12, v24);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  }
  sub_100098640();
}

uint64_t sub_10049EFC8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_10049E020(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10049EFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayWeatherEditorView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10049F018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayWeatherEditorView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10049F05C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000C4A18();
  sub_1000BA550();
  sub_10049ECC0(v0 + v1);
}

void sub_10049F078(uint64_t a1@<X8>)
{
  sub_10049E768(&qword_100BE5850, (uint64_t (*)(__n128))sub_10049E340, (void (*)(uint64_t))sub_10049E550, &qword_100BE5858, a1);
}

void sub_10049F0B0(uint64_t a1@<X8>)
{
  sub_10049E768(&qword_100BDD650, (uint64_t (*)(__n128))sub_10049E898, (void (*)(uint64_t))sub_10049EAA8, &qword_100BE5848, a1);
}

void sub_10049F0EC(uint64_t a1)
{
  sub_10049F168(a1, &qword_100BDD660, &qword_100BCB0A8, (void (*)(char *))&DayWeather.snowfallAmount.setter);
}

void sub_10049F10C(uint64_t a1)
{
  sub_10049F168(a1, &qword_100BDD660, &qword_100BCB0A8, (void (*)(char *))&DayWeather.rainfallAmount.setter);
}

void sub_10049F12C(uint64_t a1)
{
  sub_10049F168(a1, qword_100BC4E80, &qword_100BC4E68, (void (*)(char *))&DayWeather.lowTemperature.setter);
}

void sub_10049F14C(uint64_t a1)
{
  sub_10049F168(a1, qword_100BC4E80, &qword_100BC4E68, (void (*)(char *))&DayWeather.highTemperature.setter);
}

void sub_10049F168(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(char *))
{
  uint64_t v4;
  uint64_t v9;

  sub_1000C4A18();
  sub_1000BA550();
  sub_10049EE34(a1, v4 + v9, a2, a3, a4);
}

uint64_t sub_10049F1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v0 = sub_100075EB0(&qword_100BE57F0);
  sub_100075EB0(&qword_100BC4FA0);
  v1 = sub_100075EB0(&qword_100BE57E8);
  v2 = sub_100075EB0(&qword_100BE57E0);
  type metadata accessor for InsetGroupedListStyle(255);
  sub_10003D310(&qword_100BE5808, &qword_100BE57E0, (uint64_t)&protocol conformance descriptor for List<A, B>);
  sub_100099AA4(v3, (uint64_t)&opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, v4, v5, v6, v7, v8, v9, v2);
  v10 = sub_100114EF8();
  sub_100099AA4(v10, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, v11, v12, v13, v14, v15, v16, v1);
  sub_10003D310(&qword_100BC4FC0, &qword_100BC4FA0, (uint64_t)&protocol conformance descriptor for Button<A>);
  return sub_100099AA4(v17, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>, v18, v19, v20, v21, v22, v23, v0);
}

uint64_t *sub_10049F2D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    v11 = a2[11];
    a1[10] = a2[10];
    a1[11] = v11;
    v64 = a2[13];
    a1[12] = a2[12];
    a1[13] = v64;
    v12 = a2[15];
    a1[14] = a2[14];
    a1[15] = v12;
    v13 = a2[17];
    a1[16] = a2[16];
    a1[17] = v13;
    v62 = a2[19];
    a1[18] = a2[18];
    a1[19] = v62;
    v60 = a2[21];
    a1[20] = a2[20];
    a1[21] = v60;
    v14 = a2[23];
    a1[22] = a2[22];
    a1[23] = v14;
    v58 = a2[25];
    v59 = v14;
    v15 = a3[5];
    v57 = (uint64_t *)((char *)a1 + v15);
    v16 = (uint64_t *)((char *)a2 + v15);
    a1[24] = a2[24];
    a1[25] = v58;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v59);
    swift_bridgeObjectRetain(v58);
    v17 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v16) == 1)
    {
      v18 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v57, v16, v18);
      v19 = 1;
    }
    else
    {
      *v57 = *v16;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v57, v17, v19);
    v21 = a3[6];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = v23[8];
    sub_10008D47C(*(_QWORD *)v23, v25);
    *(_QWORD *)v22 = v24;
    v22[8] = v25;
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)v28;
    v30 = v28[8];
    sub_10008D47C(*(_QWORD *)v28, v30);
    *(_QWORD *)v27 = v29;
    v27[8] = v30;
    v31 = a3[8];
    v32 = (uint64_t *)((char *)a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v33) == 1)
    {
      v35 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
      v36 = 1;
    }
    else
    {
      *v32 = *v33;
      swift_retain();
      v36 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v34, v36);
    v37 = a3[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(_QWORD *)v39;
    v41 = v39[8];
    sub_10008D47C(*(_QWORD *)v39, v41);
    *(_QWORD *)v38 = v40;
    v38[8] = v41;
    v42 = a3[10];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = *((_QWORD *)v44 + 1);
    v46 = *((_QWORD *)v44 + 2);
    v47 = *((_QWORD *)v44 + 3);
    v48 = *((_QWORD *)v44 + 4);
    v49 = *((_QWORD *)v44 + 5);
    v50 = *((_QWORD *)v44 + 6);
    v51 = *((_QWORD *)v44 + 7);
    v61 = *(_QWORD *)v44;
    v63 = *((_QWORD *)v44 + 8);
    v65 = v44[72];
    sub_1000D4FF4(*(_QWORD *)v44, v45, v46, v47, v48, v49, v50, v51, v63, v65);
    *(_QWORD *)v43 = v61;
    *((_QWORD *)v43 + 1) = v45;
    *((_QWORD *)v43 + 2) = v46;
    *((_QWORD *)v43 + 3) = v47;
    *((_QWORD *)v43 + 4) = v48;
    *((_QWORD *)v43 + 5) = v49;
    *((_QWORD *)v43 + 6) = v50;
    *((_QWORD *)v43 + 7) = v51;
    *((_QWORD *)v43 + 8) = v63;
    v52 = a3[11];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    v43[72] = v65;
    v55 = type metadata accessor for Text.Measurements(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t sub_10049F648(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  v6 = a1 + a2[8];
  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
  v8 = a1 + a2[10];
  sub_1000CEE98(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_BYTE *)(v8 + 72));
  v9 = a1 + a2[11];
  v10 = type metadata accessor for Text.Measurements(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_10049F808(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char v64;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  v61 = a2[13];
  a1[12] = a2[12];
  a1[13] = v61;
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  v59 = a2[19];
  a1[18] = a2[18];
  a1[19] = v59;
  v58 = a2[21];
  a1[20] = a2[20];
  a1[21] = v58;
  v13 = a2[23];
  a1[22] = a2[22];
  a1[23] = v13;
  v56 = a2[25];
  v57 = v13;
  v14 = a3[5];
  v63 = (_QWORD *)((char *)a1 + v14);
  v15 = (_QWORD *)((char *)a2 + v14);
  a1[24] = a2[24];
  a1[25] = v56;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRetain(v56);
  v16 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v15) == 1)
  {
    v17 = type metadata accessor for ColorSchemeContrast(0);
    v18 = v63;
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v63, v15, v17);
    v19 = 1;
  }
  else
  {
    v18 = v63;
    *v63 = *v15;
    swift_retain();
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v16, v19);
  v20 = a3[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)v22;
  v24 = v22[8];
  sub_10008D47C(*(_QWORD *)v22, v24);
  *(_QWORD *)v21 = v23;
  v21[8] = v24;
  v25 = a3[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = v27[8];
  sub_10008D47C(*(_QWORD *)v27, v29);
  *(_QWORD *)v26 = v28;
  v26[8] = v29;
  v30 = a3[8];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v32) == 1)
  {
    v34 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
    v35 = 1;
  }
  else
  {
    *v31 = *v32;
    swift_retain();
    v35 = 0;
  }
  swift_storeEnumTagMultiPayload(v31, v33, v35);
  v36 = a3[9];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  v40 = v38[8];
  sub_10008D47C(*(_QWORD *)v38, v40);
  *(_QWORD *)v37 = v39;
  v37[8] = v40;
  v41 = a3[10];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *((_QWORD *)v43 + 1);
  v45 = *((_QWORD *)v43 + 2);
  v46 = *((_QWORD *)v43 + 3);
  v47 = *((_QWORD *)v43 + 4);
  v48 = *((_QWORD *)v43 + 5);
  v49 = *((_QWORD *)v43 + 6);
  v50 = *((_QWORD *)v43 + 7);
  v60 = *(_QWORD *)v43;
  v62 = *((_QWORD *)v43 + 8);
  v64 = v43[72];
  sub_1000D4FF4(*(_QWORD *)v43, v44, v45, v46, v47, v48, v49, v50, v62, v64);
  *(_QWORD *)v42 = v60;
  *((_QWORD *)v42 + 1) = v44;
  *((_QWORD *)v42 + 2) = v45;
  *((_QWORD *)v42 + 3) = v46;
  *((_QWORD *)v42 + 4) = v47;
  *((_QWORD *)v42 + 5) = v48;
  *((_QWORD *)v42 + 6) = v49;
  *((_QWORD *)v42 + 7) = v50;
  *((_QWORD *)v42 + 8) = v62;
  v51 = a3[11];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v42[72] = v64;
  v54 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

_QWORD *sub_10049FB50(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  char v79;
  int *v80;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v8 = a2[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  v9 = a2[7];
  a1[7] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  v10 = a2[9];
  a1[9] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  v11 = a2[11];
  a1[11] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  v12 = a2[13];
  a1[13] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  v13 = a2[15];
  a1[15] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  v14 = a2[17];
  a1[17] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  v15 = a2[19];
  a1[19] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  v16 = a2[21];
  a1[21] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  v17 = a2[23];
  a1[23] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  v18 = a2[25];
  a1[25] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v19 = a3[5];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    sub_100021A14((uint64_t)a1 + v19, &qword_100BC68C8);
    v22 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v21) == 1)
    {
      v23 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      v24 = 1;
    }
    else
    {
      *v20 = *v21;
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v22, v24);
  }
  v25 = a3[6];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = v27[8];
  sub_10008D47C(*(_QWORD *)v27, v29);
  v30 = *(_QWORD *)v26;
  v31 = v26[8];
  *(_QWORD *)v26 = v28;
  v26[8] = v29;
  sub_1000B15F8(v30, v31);
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = v34[8];
  sub_10008D47C(*(_QWORD *)v34, v36);
  v37 = *(_QWORD *)v33;
  v38 = v33[8];
  *(_QWORD *)v33 = v35;
  v33[8] = v36;
  sub_1000B15F8(v37, v38);
  if (a1 != a2)
  {
    v39 = a3[8];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    sub_100021A14((uint64_t)a1 + v39, &qword_100BC2990);
    v42 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v41) == 1)
    {
      v43 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
      v44 = 1;
    }
    else
    {
      *v40 = *v41;
      swift_retain();
      v44 = 0;
    }
    swift_storeEnumTagMultiPayload(v40, v42, v44);
  }
  v45 = a3[9];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = *(_QWORD *)v47;
  v49 = v47[8];
  sub_10008D47C(*(_QWORD *)v47, v49);
  v50 = *(_QWORD *)v46;
  v51 = v46[8];
  *(_QWORD *)v46 = v48;
  v46[8] = v49;
  sub_1000B15F8(v50, v51);
  v52 = a3[10];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = *(_QWORD *)v54;
  v56 = *((_QWORD *)v54 + 1);
  v80 = a3;
  v57 = *((_QWORD *)v54 + 2);
  v58 = *((_QWORD *)v54 + 3);
  v59 = *((_QWORD *)v54 + 4);
  v60 = *((_QWORD *)v54 + 5);
  v61 = *((_QWORD *)v54 + 6);
  v77 = *((_QWORD *)v54 + 7);
  v78 = *((_QWORD *)v54 + 8);
  v79 = v54[72];
  sub_1000D4FF4(*(_QWORD *)v54, v56, v57, v58, v59, v60, v61, v77, v78, v79);
  v62 = *(_QWORD *)v53;
  v63 = *((_QWORD *)v53 + 1);
  v64 = *((_QWORD *)v53 + 2);
  v65 = *((_QWORD *)v53 + 3);
  v66 = *((_QWORD *)v53 + 4);
  v67 = *((_QWORD *)v53 + 5);
  v68 = *((_QWORD *)v53 + 6);
  v69 = *((_QWORD *)v53 + 7);
  v70 = *((_QWORD *)v53 + 8);
  v71 = v53[72];
  *(_QWORD *)v53 = v55;
  *((_QWORD *)v53 + 1) = v56;
  *((_QWORD *)v53 + 2) = v57;
  *((_QWORD *)v53 + 3) = v58;
  *((_QWORD *)v53 + 4) = v59;
  *((_QWORD *)v53 + 5) = v60;
  *((_QWORD *)v53 + 6) = v61;
  *((_QWORD *)v53 + 7) = v77;
  *((_QWORD *)v53 + 8) = v78;
  v53[72] = v79;
  sub_1000CEE98(v62, v63, v64, v65, v66, v67, v68, v69, v70, v71);
  v72 = v80[11];
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
  return a1;
}

char *sub_10049FFC4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  memcpy(a1, a2, 0xD0uLL);
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = &a1[v12];
  v16 = &a2[v12];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v19) == 1)
  {
    v21 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload(v18, v20, 1);
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v22 = a3[9];
  v23 = a3[10];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  memcpy(&a1[v23], &a2[v23], 0x49uLL);
  v26 = a3[11];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

_QWORD *sub_1004A0180(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[17];
  a1[16] = a2[16];
  a1[17] = v14;
  swift_bridgeObjectRelease();
  v15 = a2[19];
  a1[18] = a2[18];
  a1[19] = v15;
  swift_bridgeObjectRelease();
  v16 = a2[21];
  a1[20] = a2[20];
  a1[21] = v16;
  swift_bridgeObjectRelease();
  v17 = a2[23];
  a1[22] = a2[22];
  a1[23] = v17;
  swift_bridgeObjectRelease();
  v18 = a2[25];
  a1[24] = a2[24];
  a1[25] = v18;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v19 = a3[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    sub_100021A14((uint64_t)a1 + v19, &qword_100BC68C8);
    v22 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v21) == 1)
    {
      v23 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload(v20, v22, 1);
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  v24 = a3[6];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  LOBYTE(v26) = v26[8];
  v28 = *(_QWORD *)v25;
  v29 = v25[8];
  *(_QWORD *)v25 = v27;
  v25[8] = (char)v26;
  sub_1000B15F8(v28, v29);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(_QWORD *)v32;
  LOBYTE(v32) = v32[8];
  v34 = *(_QWORD *)v31;
  v35 = v31[8];
  *(_QWORD *)v31 = v33;
  v31[8] = (char)v32;
  sub_1000B15F8(v34, v35);
  if (a1 != a2)
  {
    v36 = a3[8];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_100021A14((uint64_t)a1 + v36, &qword_100BC2990);
    v39 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v38) == 1)
    {
      v40 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload(v37, v39, 1);
    }
    else
    {
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
  }
  v41 = a3[9];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)v43;
  LOBYTE(v43) = v43[8];
  v45 = *(_QWORD *)v42;
  v46 = v42[8];
  *(_QWORD *)v42 = v44;
  v42[8] = (char)v43;
  sub_1000B15F8(v45, v46);
  v47 = a3[10];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = *((_QWORD *)v49 + 8);
  v51 = v49[72];
  v52 = *(_QWORD *)v48;
  v53 = *((_QWORD *)v48 + 1);
  v54 = *((_QWORD *)v48 + 2);
  v55 = *((_QWORD *)v48 + 3);
  v56 = *((_QWORD *)v48 + 4);
  v57 = *((_QWORD *)v48 + 5);
  v58 = *((_QWORD *)v48 + 6);
  v59 = *((_QWORD *)v48 + 7);
  v60 = *((_QWORD *)v48 + 8);
  v61 = v48[72];
  v62 = *((_OWORD *)v49 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *((_OWORD *)v48 + 1) = v62;
  v63 = *((_OWORD *)v49 + 3);
  *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
  *((_OWORD *)v48 + 3) = v63;
  *((_QWORD *)v48 + 8) = v50;
  v48[72] = v51;
  sub_1000CEE98(v52, v53, v54, v55, v56, v57, v58, v59, v60, v61);
  v64 = a3[11];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  return a1;
}

uint64_t sub_1004A04A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A04B0);
}

uint64_t sub_1004A04B0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BCD380);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      v11 = sub_1000BA294(&qword_100BD8F08);
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
      {
        v9 = v11;
        v10 = a3[8];
      }
      else
      {
        v9 = type metadata accessor for Text.Measurements(0);
        v10 = a3[11];
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_1004A0574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A0580);
}

uint64_t sub_1004A0580(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BCD380);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = sub_1000BA294(&qword_100BD8F08);
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[8];
      }
      else
      {
        v9 = type metadata accessor for Text.Measurements(0);
        v10 = a4[11];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1004A0640(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5DB0, 1);
}

void sub_1004A0650(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t OpaqueTypeConformance2;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  char v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD v81[3];

  v79 = a1;
  v71 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio(0);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  sub_100088FDC();
  v67 = v1;
  v65 = sub_1000BA294(&qword_100BE5908);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1000BA294(&qword_100BE5910);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  sub_100088FDC();
  v66 = v5;
  v73 = sub_1000BA294(&qword_100BE5918);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v72 = v7;
  v8 = sub_1000BA294(&qword_100BE5920);
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  __chkstk_darwin(v8);
  sub_100088FDC();
  v76 = v9;
  v74 = sub_1000BA294(&qword_100BE5928);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v75 = v11;
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BE5930);
  v17 = *(_QWORD *)(v13 + 72);
  v18 = *(unsigned __int8 *)(v13 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v16, v19 + 3 * v17, v18 | 7);
  *(_OWORD *)(v20 + 16) = xmmword_10098B610;
  v21 = v20 + v19;
  sub_100098DC0(v20 + v19, enum case for DynamicTypeSize.xLarge(_:));
  v22 = v20 + v19 + v17;
  sub_100098DC0(v22, enum case for DynamicTypeSize.xxLarge(_:));
  v23 = v20 + v19 + 2 * v17;
  sub_100098DC0(v21 + 2 * v17, enum case for DynamicTypeSize.xxxLarge(_:));
  v64 = type metadata accessor for AveragesComponentView(0);
  sub_10010FD3C();
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  v24 = sub_1000C2A34(v21);
  v25 = 1;
  if ((v24 & 1) == 0 && (sub_1000C2A34(v22) & 1) == 0)
    v25 = sub_1000C2A34(v23);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_setDeallocating(v20);
  v26 = sub_100500534();
  *(_QWORD *)v4 = static HorizontalAlignment.leading.getter(v26);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 0;
  v27 = sub_1000BA294(&qword_100BE5938);
  v28 = v80;
  v29.n128_f64[0] = sub_1004A0B94(v80, v25 & 1, (uint64_t)&v4[*(int *)(v27 + 44)]);
  v30 = v67;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter(v29);
  sub_10003D2DC(&qword_100BE5940, &qword_100BE5908);
  v31 = v66;
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)(v30, 1, v65, v32);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v30, v71);
  sub_100075DD0((uint64_t)v4);
  v62 = static Alignment.leading.getter(v33);
  v63 = v34;
  v61 = 1;
  v60 = 0;
  v35 = v72;
  sub_100946404();
  v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v31, v70);
  __chkstk_darwin(v36);
  v62 = (uint64_t)v28;
  v37 = sub_1000BA294(&qword_100BE5948);
  v38 = sub_1004A6024();
  v39 = sub_100075EB0(&qword_100BE5958);
  v40 = sub_1004A60D8();
  v81[0] = v39;
  v81[1] = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v81, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v42 = v76;
  View.accessibilityRepresentation<A>(representation:)(sub_1004A601C, &v60, v73, v37, v38, OpaqueTypeConformance2);
  sub_100021A14(v35, &qword_100BE5918);
  v44 = static Edge.Set.top.getter(v43);
  v45 = (char *)v28 + *(int *)(v64 + 36);
  v46 = *(_QWORD *)v45;
  LOBYTE(v38) = v45[8];
  sub_10008D47C(*(_QWORD *)v45, v38);
  sub_100109B54();
  LOBYTE(v39) = v47;
  sub_1000B15F8(v46, v38);
  v48 = 0.0;
  if ((v39 & 1) != 0)
    v48 = -5.0;
  v49 = EdgeInsets.init(_all:)(v48);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v77;
  v56 = v78;
  v58 = v75;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v75, v42, v78);
  v59 = v58 + *(int *)(v74 + 36);
  *(_BYTE *)v59 = v44;
  *(double *)(v59 + 8) = v49;
  *(_QWORD *)(v59 + 16) = v51;
  *(_QWORD *)(v59 + 24) = v53;
  *(_QWORD *)(v59 + 32) = v55;
  *(_BYTE *)(v59 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v42, v56);
  sub_1000F111C(v58, v79, &qword_100BE5928);
}

double sub_1004A0B94@<D0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  double result;
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];
  unsigned __int8 v49;
  uint64_t v50;

  v40 = a2;
  v47 = sub_1000BA294(&qword_100BE5978);
  __chkstk_darwin(v47);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_1000BA294(&qword_100BE5980);
  __chkstk_darwin(v41);
  v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = sub_1000BA294(&qword_100BE5988);
  __chkstk_darwin(v42);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1000BA294(&qword_100BE5990);
  __chkstk_darwin(v11);
  v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v39[-v15];
  sub_1004A0F48(v48);
  v44 = v48[1];
  v45 = v48[0];
  v43 = v49;
  v46 = v50;
  v17 = (char *)a1 + *(int *)(type metadata accessor for AveragesComponentView(0) + 28);
  v18 = *(_QWORD *)v17;
  v19 = v17[8];
  sub_10008D47C(*(_QWORD *)v17, v19);
  sub_10010BCB4();
  v21 = v20;
  v22 = sub_1000B15F8(v18, v19);
  if ((v21 & 1) != 0)
  {
    *v10 = static Axis.Set.vertical.getter(v22);
    v29 = sub_1000BA294(&qword_100BE59B8);
    sub_1004A1304(v40 & 1, a1, (uint64_t)&v10[*(int *)(v29 + 44)]);
    v24 = &qword_100BE5988;
    sub_100037794((uint64_t)v10, (uint64_t)v8, &qword_100BE5988);
    swift_storeEnumTagMultiPayload(v8, v41, 0);
    sub_10003D2DC(&qword_100BE59A0, &qword_100BE5988);
    v31 = v30;
    sub_10003D2DC(&qword_100BE59A8, &qword_100BE5978);
    _ConditionalContent<>.init(storage:)(v8, v42, v47, v31, v32);
    v28 = (uint64_t)v10;
  }
  else
  {
    *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v22);
    *((_QWORD *)v6 + 1) = 0;
    v6[16] = 0;
    v23 = sub_1000BA294(&qword_100BE5998);
    sub_1004A28C0((uint64_t)a1, (uint64_t)&v6[*(int *)(v23 + 44)]);
    v24 = &qword_100BE5978;
    sub_100037794((uint64_t)v6, (uint64_t)v8, &qword_100BE5978);
    swift_storeEnumTagMultiPayload(v8, v41, 1);
    sub_10003D2DC(&qword_100BE59A0, &qword_100BE5988);
    v26 = v25;
    sub_10003D2DC(&qword_100BE59A8, &qword_100BE5978);
    _ConditionalContent<>.init(storage:)(v8, v42, v47, v26, v27);
    v28 = (uint64_t)v6;
  }
  sub_100021A14(v28, v24);
  sub_100037794((uint64_t)v16, (uint64_t)v13, &qword_100BE5990);
  v34 = v44;
  v33 = v45;
  *(_QWORD *)a3 = v45;
  *(_QWORD *)(a3 + 8) = v34;
  v35 = v43;
  *(_BYTE *)(a3 + 16) = v43;
  v36 = v46;
  *(_QWORD *)(a3 + 24) = v46;
  v37 = sub_1000BA294(&qword_100BE59B0);
  sub_100037794((uint64_t)v13, a3 + *(int *)(v37 + 48), &qword_100BE5990);
  sub_1000D55D4(v33, v34, v35);
  swift_bridgeObjectRetain(v36);
  sub_100021A14((uint64_t)v16, &qword_100BE5990);
  sub_100021A14((uint64_t)v13, &qword_100BE5990);
  sub_1000D31B4(v33, v34, v35);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1004A0F48(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  _BYTE *v66;
  uint64_t *v67;
  _BYTE v68[4];
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;

  v78 = a1;
  v2 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v2);
  v4 = &v68[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v77 = &v68[-v6];
  v7 = type metadata accessor for Text.Scale(0);
  __chkstk_darwin(v7);
  v11 = &v68[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v1[3];
  if (v12)
  {
    v73 = v4;
    v13 = v1[1];
    v14 = v1[2];
    v79 = *v1;
    v80 = v13;
    v75 = v9;
    v76 = v8;
    v15 = sub_100114EF8();
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    v16 = Text.init<A>(_:)(&v79, &type metadata for String, v15);
    v70 = v17;
    v71 = v16;
    v72 = v18;
    v69 = v19 & 1;
    v79 = v14;
    v80 = v12;
    v20 = Text.init<A>(_:)(&v79, &type metadata for String, v15);
    v22 = v21;
    v24 = v23;
    v26 = v25 & 1;
    static Text.Scale.secondary.getter();
    v27 = Text.textScale(_:isEnabled:)(v11, 1, v20, v22, v26, v24);
    v29 = v28;
    v31 = v30;
    v33 = v32 & 1;
    sub_1000D31B4(v20, v22, v26);
    v34 = swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t, __n128))(v75 + 8))(v11, v76, v34);
    v35 = v70;
    v36 = v71;
    LOBYTE(v24) = v69;
    v37 = static Text.+ infix(_:_:)(v71, v70, v69, v72, v27, v29, v33, v31);
    v74 = v38;
    v75 = v37;
    v40 = v39;
    v76 = v41;
    sub_1000D31B4(v27, v29, v33);
    v4 = v73;
    swift_bridgeObjectRelease();
    sub_1000D31B4(v36, v35, v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = v1[1];
    v79 = *v1;
    v80 = v43;
    v44 = sub_100114EF8();
    swift_bridgeObjectRetain(v43);
    v42 = Text.init<A>(_:)(&v79, &type metadata for String, v44);
    v74 = v45;
    v75 = v42;
    v40 = v46;
    v76 = v47;
  }
  v48 = v40 & 1;
  v49 = static Font.largeTitle.getter(v42);
  v50 = static Font.title2.getter();
  v51 = (char *)v1 + *(int *)(type metadata accessor for AveragesComponentView(0) + 36);
  v52 = *(_QWORD *)v51;
  v53 = v51[8];
  sub_10008D47C(*(_QWORD *)v51, v53);
  sub_100109B54();
  v55 = v54;
  sub_1000B15F8(v52, v53);
  v56 = enum case for Font.Leading.tight(_:);
  v57 = type metadata accessor for Font.Leading(0);
  v58 = (uint64_t)v77;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v77, v56, v57);
  _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, v57);
  sub_100037794(v58, (uint64_t)v4, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v59 = sub_10040BDEC(v49, v50, v55 & 1, (uint64_t)v4);
  v61 = v74;
  v60 = v75;
  v62 = Text.font(_:)(v59, v75, v74, v48, v76);
  v64 = v63;
  LODWORD(v72) = v65;
  v73 = v66;
  swift_release();
  swift_release();
  swift_release();
  sub_1000D31B4(v60, v61, v48);
  swift_bridgeObjectRelease();
  sub_100021A14(v58, &qword_100BCCDA8);
  v67 = v78;
  *v78 = v62;
  v67[1] = v64;
  *((_BYTE *)v67 + 16) = v72 & 1;
  v67[3] = (uint64_t)v73;
}

void sub_1004A1304(char a1@<W0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;

  v72 = a3;
  v5 = sub_1000BA294(&qword_100BE59C0);
  v69 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v65 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - v8;
  v10 = sub_1000BA294(&qword_100BE59C8);
  __chkstk_darwin(v10);
  v71 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - v13;
  v15 = sub_1000BA294(&qword_100BE59D0);
  __chkstk_darwin(v15);
  v70 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - v18;
  v20 = sub_1000BA294(&qword_100BE59D8);
  __chkstk_darwin(v20);
  v68 = (uint64_t)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v62 - v23;
  v25 = sub_1000BA294(&qword_100BE59E0);
  __chkstk_darwin(v25);
  v67 = (uint64_t)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v62 - v28;
  v30 = sub_1000BA294(&qword_100BE59E8);
  __chkstk_darwin(v30);
  v66 = (uint64_t)&v62 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v73 = (uint64_t *)((char *)&v62 - v34);
  if ((a1 & 1) != 0)
  {
    v35 = sub_1000BA294(&qword_100BE59F8);
    v36 = v73;
    v37 = 1;
  }
  else
  {
    v38 = static HorizontalAlignment.leading.getter(v33);
    v39 = v73;
    *v73 = v38;
    v39[1] = 0;
    *((_BYTE *)v39 + 16) = 0;
    v40 = sub_1000BA294(&qword_100BE59F0);
    sub_1004A187C((uint64_t)a2, (uint64_t)v39 + *(int *)(v40 + 44));
    v35 = sub_1000BA294(&qword_100BE59F8);
    v36 = v39;
    v37 = 0;
  }
  v41 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, v37, 1, v35);
  *(_QWORD *)v29 = static HorizontalAlignment.leading.getter(v41);
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = 0;
  v42 = sub_1000BA294(&qword_100BE5A00);
  v43 = sub_1004A1D20((uint64_t)a2, &v29[*(int *)(v42 + 44)]);
  *(_QWORD *)v24 = static HorizontalAlignment.leading.getter(v43);
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 0;
  v44 = sub_1000BA294(&qword_100BE5A08);
  v45 = sub_1004A23D8((uint64_t)a2, &v24[*(int *)(v44 + 44)]);
  *(_QWORD *)v19 = static HorizontalAlignment.leading.getter(v45);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 0;
  v46 = sub_1000BA294(&qword_100BE5A10);
  v47 = sub_1004A2644(a2, &v19[*(int *)(v46 + 44)]);
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v47);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v48 = *(int *)(sub_1000BA294(&qword_100BE5A18) + 44);
  v63 = v19;
  v49 = &v14[v48];
  sub_1004A1F8C((uint64_t)v9);
  v64 = v24;
  v50 = v69;
  v51 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v52 = v65;
  v51(v65, v9, v5);
  v51(v49, v52, v5);
  v53 = &v49[*(int *)(sub_1000BA294(&qword_100BE5A20) + 48)];
  *(_QWORD *)v53 = 0;
  v53[8] = 0;
  v54 = *(void (**)(char *, uint64_t))(v50 + 8);
  v54(v9, v5);
  v54(v52, v5);
  v55 = v66;
  sub_100037794((uint64_t)v73, v66, &qword_100BE59E8);
  v56 = v67;
  sub_100037794((uint64_t)v29, v67, &qword_100BE59E0);
  v57 = v68;
  sub_100037794((uint64_t)v24, v68, &qword_100BE59D8);
  v58 = v70;
  sub_100037794((uint64_t)v19, v70, &qword_100BE59D0);
  v59 = v71;
  sub_100037794((uint64_t)v14, v71, &qword_100BE59C8);
  v60 = v72;
  sub_100037794(v55, v72, &qword_100BE59E8);
  v61 = (int *)sub_1000BA294(&qword_100BE5A28);
  sub_100037794(v56, v60 + v61[12], &qword_100BE59E0);
  sub_100037794(v57, v60 + v61[16], &qword_100BE59D8);
  sub_100037794(v58, v60 + v61[20], &qword_100BE59D0);
  sub_100037794(v59, v60 + v61[24], &qword_100BE59C8);
  sub_100021A14((uint64_t)v14, &qword_100BE59C8);
  sub_100021A14((uint64_t)v63, &qword_100BE59D0);
  sub_100021A14((uint64_t)v64, &qword_100BE59D8);
  sub_100021A14((uint64_t)v29, &qword_100BE59E0);
  sub_100021A14((uint64_t)v73, &qword_100BE59E8);
  sub_100021A14(v59, &qword_100BE59C8);
  sub_100021A14(v58, &qword_100BE59D0);
  sub_100021A14(v57, &qword_100BE59D8);
  sub_100021A14(v56, &qword_100BE59E0);
  sub_100021A14(v55, &qword_100BE59E8);
}

double sub_1004A187C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;

  v4 = sub_1000BA294(&qword_100BE5AA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE5AA8);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  v13 = sub_1004A1A90();
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  *(_QWORD *)v6 = static Alignment.leading.getter(v13);
  *((_QWORD *)v6 + 1) = v20;
  *((_QWORD *)v6 + 2) = 0;
  v6[24] = 1;
  *((_QWORD *)v6 + 4) = 0;
  v6[40] = 0;
  v21 = sub_1000BA294(&qword_100BE5AB0);
  sub_1004A226C(a1, &qword_100BE5A48, (void (*)(uint64_t, __n128))sub_1004A34D0, (void (*)(uint64_t))sub_1004A454C, &qword_100BE5AC0, (uint64_t)&v6[*(int *)(v21 + 44)]);
  sub_100037794((uint64_t)v6, (uint64_t)v9, &qword_100BE5AA0);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = 0xBFF0000000000000;
  sub_100021A14((uint64_t)v6, &qword_100BE5AA0);
  sub_1000F111C((uint64_t)v9, (uint64_t)v12, &qword_100BE5AA8);
  sub_100037794((uint64_t)v12, (uint64_t)v9, &qword_100BE5AA8);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 0;
  v22 = sub_1000BA294(&qword_100BE5AC8);
  sub_100037794((uint64_t)v9, a2 + *(int *)(v22 + 64), &qword_100BE5AA8);
  sub_1000D55D4(v13, v15, v19);
  swift_bridgeObjectRetain(v17);
  sub_100021A14((uint64_t)v12, &qword_100BE5AA8);
  sub_100021A14((uint64_t)v9, &qword_100BE5AA8);
  sub_1000D31B4(v13, v15, v19);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1004A1A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];

  v1 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - v5;
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + 40);
  v38[0] = *(_QWORD *)(v0 + 32);
  v38[1] = v11;
  v12 = sub_100114EF8();
  swift_bridgeObjectRetain(v11);
  v13 = Text.init<A>(_:)(v38, &type metadata for String, v12);
  v36 = v15;
  v37 = v14;
  v17 = v16 & 1;
  v18 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.subheadline(_:), v7);
  static Font.Weight.semibold.getter(v18);
  v19 = static Font.system(_:weight:)(v10);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = static Font.footnote.getter(v20);
  v22 = v0 + *(int *)(type metadata accessor for AveragesComponentView(0) + 36);
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_10008D47C(*(_QWORD *)v22, v24);
  sub_100109B54();
  LOBYTE(v11) = v25;
  sub_1000B15F8(v23, v24);
  v26 = enum case for Font.Leading.tight(_:);
  v27 = type metadata accessor for Font.Leading(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104);
  v35 = v6;
  v28(v6, v26, v27);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v27);
  sub_100037794((uint64_t)v6, (uint64_t)v3, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v29 = sub_10040BDEC(v19, v21, v11 & 1, (uint64_t)v3);
  v30 = v13;
  v31 = v13;
  v32 = v37;
  v34 = Text.font(_:)(v29, v31, v37, v17, v36);
  swift_release();
  swift_release();
  swift_release();
  sub_1000D31B4(v30, v32, v17);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v35, &qword_100BCCDA8);
  return v34;
}

uint64_t sub_1004A1D20@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = sub_1000BA294(&qword_100BE5AA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE5AA8);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v13 = sub_1000BA294(&qword_100BE59C0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - v18;
  sub_1004A1F8C((uint64_t)&v28 - v18);
  *(_QWORD *)v6 = static Alignment.leading.getter(v20);
  *((_QWORD *)v6 + 1) = v21;
  *((_QWORD *)v6 + 2) = 0;
  v6[24] = 1;
  *((_QWORD *)v6 + 4) = 0;
  v6[40] = 0;
  v22 = sub_1000BA294(&qword_100BE5AB0);
  sub_1004A226C(a1, &qword_100BE5A48, (void (*)(uint64_t, __n128))sub_1004A34D0, (void (*)(uint64_t))sub_1004A454C, &qword_100BE5AC0, (uint64_t)&v6[*(int *)(v22 + 44)]);
  sub_100037794((uint64_t)v6, (uint64_t)v9, &qword_100BE5AA0);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = 0xBFF0000000000000;
  sub_100021A14((uint64_t)v6, &qword_100BE5AA0);
  sub_1000F111C((uint64_t)v9, (uint64_t)v12, &qword_100BE5AA8);
  v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v23(v16, v19, v13);
  sub_100037794((uint64_t)v12, (uint64_t)v9, &qword_100BE5AA8);
  v23(a2, v16, v13);
  v24 = sub_1000BA294(&qword_100BE5AB8);
  v25 = &a2[*(int *)(v24 + 48)];
  *(_QWORD *)v25 = 0;
  v25[8] = 0;
  sub_100037794((uint64_t)v9, (uint64_t)&a2[*(int *)(v24 + 64)], &qword_100BE5AA8);
  sub_100021A14((uint64_t)v12, &qword_100BE5AA8);
  v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v19, v13);
  sub_100021A14((uint64_t)v9, &qword_100BE5AA8);
  return ((uint64_t (*)(char *, uint64_t))v26)(v16, v13);
}

void sub_1004A1F8C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v37 = a1;
  v36 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v36);
  v39 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.Leading(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v40 = v11;
  v41 = v12;
  v13 = sub_100114EF8();
  swift_bridgeObjectRetain(v12);
  v14 = Text.init<A>(_:)(&v40, &type metadata for String, v13);
  v16 = v15;
  v38 = v17;
  v19 = v18 & 1;
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.footnote(_:), v7);
  static Font.Weight.semibold.getter(v20);
  v21 = static Font.system(_:weight:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Font.Leading.tight(_:), v3);
  v22 = Font.leading(_:)(v6, v21);
  v23 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v23);
  v24 = Text.font(_:)(v22, v14, v16, v19, v38);
  v26 = v25;
  LOBYTE(v6) = v27;
  v29 = v28;
  swift_release();
  sub_1000D31B4(v14, v16, v19);
  swift_bridgeObjectRelease();
  v40 = v24;
  v41 = v26;
  v42 = v6 & 1;
  v43 = v29;
  v30 = enum case for DynamicTypeSize.xLarge(_:);
  v31 = type metadata accessor for DynamicTypeSize(0);
  v32 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v39, v30, v31);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v32, v32, v31, v33) & 1) != 0)
  {
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    View.dynamicTypeSize<A>(_:)(v32, &type metadata for Text, v36, &protocol witness table for Text, v34);
    sub_100021A14(v32, (uint64_t *)&unk_100C0A510);
    sub_1000D31B4(v40, v41, v42);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1004A226C(uint64_t a1@<X0>, uint64_t *a2@<X1>, void (*a3)(uint64_t, __n128)@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t *v24;

  v23 = a4;
  v24 = a5;
  sub_1000BA294(a2);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v23 - v16;
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v23 - v20;
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  a3(a1, v19);
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v23(a1);
  sub_1000C5F5C((uint64_t)v21, (uint64_t)v14);
  sub_1000C5F5C((uint64_t)v17, (uint64_t)v11);
  sub_1000C5F5C((uint64_t)v14, a6);
  v22 = sub_1000BA294(v24);
  sub_1000C5F5C((uint64_t)v11, a6 + *(int *)(v22 + 48));
  sub_100075DD0((uint64_t)v17);
  sub_100075DD0((uint64_t)v21);
  sub_100075DD0((uint64_t)v11);
  sub_100075DD0((uint64_t)v14);
}

uint64_t sub_1004A23D8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = sub_1000BA294(&qword_100BE5A68);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE5A70);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v13 = sub_1000BA294(&qword_100BE59C0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - v18;
  sub_1004A1F8C((uint64_t)&v28 - v18);
  *(_QWORD *)v6 = static Alignment.leading.getter(v20);
  *((_QWORD *)v6 + 1) = v21;
  *((_QWORD *)v6 + 2) = 0;
  v6[24] = 1;
  *((_QWORD *)v6 + 4) = 0;
  v6[40] = 0;
  v22 = sub_1000BA294(&qword_100BE5A78);
  sub_1004A226C(a1, &qword_100BE5A88, (void (*)(uint64_t, __n128))sub_1004A3CE0, (void (*)(uint64_t))sub_1004A4D5C, &qword_100BE5A90, (uint64_t)&v6[*(int *)(v22 + 44)]);
  sub_100037794((uint64_t)v6, (uint64_t)v9, &qword_100BE5A68);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = 0xBFF0000000000000;
  sub_100021A14((uint64_t)v6, &qword_100BE5A68);
  sub_1000F111C((uint64_t)v9, (uint64_t)v12, &qword_100BE5A70);
  v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v23(v16, v19, v13);
  sub_100037794((uint64_t)v12, (uint64_t)v9, &qword_100BE5A70);
  v23(a2, v16, v13);
  v24 = sub_1000BA294(&qword_100BE5A80);
  v25 = &a2[*(int *)(v24 + 48)];
  *(_QWORD *)v25 = 0;
  v25[8] = 0;
  sub_100037794((uint64_t)v9, (uint64_t)&a2[*(int *)(v24 + 64)], &qword_100BE5A70);
  sub_100021A14((uint64_t)v12, &qword_100BE5A70);
  v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v19, v13);
  sub_100021A14((uint64_t)v9, &qword_100BE5A70);
  return ((uint64_t (*)(char *, uint64_t))v26)(v16, v13);
}

uint64_t sub_1004A2644@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v29 = a2;
  v3 = sub_1000BA294(&qword_100BE5A30);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000BA294(&qword_100BE5A38);
  __chkstk_darwin(v28);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - v9;
  v11 = sub_1000BA294(&qword_100BE59C0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - v16;
  sub_1004A1F8C((uint64_t)&v28 - v16);
  *(_QWORD *)v5 = static Alignment.leading.getter(v18);
  *((_QWORD *)v5 + 1) = v19;
  *((_QWORD *)v5 + 2) = 0;
  v5[24] = 1;
  *((_QWORD *)v5 + 4) = 0;
  v5[40] = 0;
  v20 = &v5[*(int *)(sub_1000BA294(&qword_100BE5A40) + 44)];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v21 = sub_1000BA294(&qword_100BE5A48);
  sub_1004A454C(a1, (uint64_t)&v20[*(int *)(v21 + 36)]);
  sub_100037794((uint64_t)v5, (uint64_t)v7, &qword_100BE5A30);
  *(_QWORD *)&v7[*(int *)(v28 + 36)] = 0xBFF0000000000000;
  sub_100021A14((uint64_t)v5, &qword_100BE5A30);
  sub_1000F111C((uint64_t)v7, (uint64_t)v10, &qword_100BE5A38);
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v22(v14, v17, v11);
  sub_100037794((uint64_t)v10, (uint64_t)v7, &qword_100BE5A38);
  v23 = v29;
  v22(v29, v14, v11);
  v24 = sub_1000BA294(&qword_100BE5A50);
  v25 = &v23[*(int *)(v24 + 48)];
  *(_QWORD *)v25 = 0;
  v25[8] = 0;
  sub_100037794((uint64_t)v7, (uint64_t)&v23[*(int *)(v24 + 64)], &qword_100BE5A38);
  sub_100021A14((uint64_t)v10, &qword_100BE5A38);
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v17, v11);
  sub_100021A14((uint64_t)v7, &qword_100BE5A38);
  return ((uint64_t (*)(char *, uint64_t))v26)(v14, v11);
}

void sub_1004A28C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE __dst[88];

  v4 = sub_1000BA294(&qword_100BE5AD0);
  __chkstk_darwin(v4);
  v46 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v45 = &v38[-v7];
  v8 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v8);
  v10 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = sub_1004A1A90();
  v41 = v11;
  v39 = v12;
  v44 = v13;
  KeyPath = swift_getKeyPath(&unk_1009A3010);
  v40 = swift_getKeyPath(&unk_1009A2FE0);
  v14 = type metadata accessor for AveragesComponentView(0);
  memcpy(__dst, (const void *)(a1 + *(int *)(v14 + 40)), 0x49uLL);
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000D4FF4);
  sub_10008CF58();
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000CEE98);
  v15 = sub_1007F9520();
  if (qword_100BC1EB8 != -1)
    swift_once(&qword_100BC1EB8, sub_100129188);
  v16 = v15 - (*(double *)&qword_100CAE538 + *(double *)&qword_100CAE538);
  v17 = sub_1004A1A90();
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  v24 = type metadata accessor for Text.WritingMode(0);
  v25 = 1;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v24);
  v26 = Text.Measurements.numberOfLines(of:in:writingMode:)(v17, v19, v23, v21, v10, v16, INFINITY);
  sub_1000D31B4(v17, v19, v23);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v10, &qword_100BC39D0);
  v28 = v45;
  if (v26 <= 2)
  {
    *v28 = static Axis.Set.horizontal.getter(v27);
    v29 = sub_1000BA294(&qword_100BE5AD8);
    sub_1004A2C7C(a1, (uint64_t)&v28[*(int *)(v29 + 44)]);
    v25 = 0;
  }
  v30 = sub_1000BA294(&qword_100BE5AE0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, v25, 1, v30);
  v31 = v39 & 1;
  v32 = v46;
  sub_100037794((uint64_t)v28, (uint64_t)v46, &qword_100BE5AD0);
  v33 = v42;
  v34 = v41;
  *(_QWORD *)a2 = v42;
  *(_QWORD *)(a2 + 8) = v34;
  *(_BYTE *)(a2 + 16) = v31;
  v35 = v44;
  v36 = KeyPath;
  *(_QWORD *)(a2 + 24) = v44;
  *(_QWORD *)(a2 + 32) = v36;
  *(_QWORD *)(a2 + 40) = 4;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v40;
  *(_QWORD *)(a2 + 64) = 0x3FE0000000000000;
  *(_QWORD *)(a2 + 72) = 0;
  *(_BYTE *)(a2 + 80) = 0;
  v37 = sub_1000BA294(&qword_100BE5AE8);
  sub_100037794((uint64_t)v32, a2 + *(int *)(v37 + 64), &qword_100BE5AD0);
  sub_1000D55D4(v33, v34, v31);
  swift_bridgeObjectRetain(v35);
  swift_retain();
  swift_retain();
  sub_100021A14((uint64_t)v28, &qword_100BE5AD0);
  sub_100021A14((uint64_t)v32, &qword_100BE5AD0);
  sub_1000D31B4(v33, v34, v31);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1004A2C7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a2;
  v3 = type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE5AF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v12 = sub_1000BA294(&qword_100BE5AF8);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v35 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v35 - v22;
  v25 = static Font.subheadline.getter(v24);
  sub_1004A2F68(v25, 0, (uint64_t)v23);
  swift_release();
  v27 = static Font.caption2.getter(v26);
  sub_1004A2F68(v27, 0, (uint64_t)v20);
  swift_release();
  v28 = *(_QWORD *)(a1 + 168);
  sub_10000AB54(a1, (uint64_t)v5, type metadata accessor for AveragesComponentView);
  if (v28)
  {
    sub_1000215BC((uint64_t)v5, type metadata accessor for AveragesComponentView);
  }
  else
  {
    v30 = *((_QWORD *)v5 + 13);
    sub_1000215BC((uint64_t)v5, type metadata accessor for AveragesComponentView);
    if (!v30)
    {
      v32 = 1;
      goto LABEL_5;
    }
  }
  v31 = static Font.caption2.getter(v29);
  sub_1004A2F68(v31, 1, (uint64_t)v11);
  swift_release();
  v32 = 0;
LABEL_5:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, v32, 1, v12);
  sub_100037794((uint64_t)v23, (uint64_t)v17, &qword_100BE5AF8);
  sub_100037794((uint64_t)v20, (uint64_t)v14, &qword_100BE5AF8);
  sub_100037794((uint64_t)v11, (uint64_t)v8, &qword_100BE5AF0);
  v33 = v36;
  sub_100037794((uint64_t)v17, v36, &qword_100BE5AF8);
  v34 = sub_1000BA294(&qword_100BE5B00);
  sub_100037794((uint64_t)v14, v33 + *(int *)(v34 + 48), &qword_100BE5AF8);
  sub_100037794((uint64_t)v8, v33 + *(int *)(v34 + 64), &qword_100BE5AF0);
  sub_100021A14((uint64_t)v11, &qword_100BE5AF0);
  sub_100021A14((uint64_t)v20, &qword_100BE5AF8);
  sub_100021A14((uint64_t)v23, &qword_100BE5AF8);
  sub_100021A14((uint64_t)v8, &qword_100BE5AF0);
  sub_100021A14((uint64_t)v14, &qword_100BE5AF8);
  sub_100021A14((uint64_t)v17, &qword_100BE5AF8);
}

double sub_1004A2F68@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;

  v7 = type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  v13 = v3[12];
  v14 = v3[13];
  sub_10000AB54((uint64_t)v3, (uint64_t)&v24 - v11, v15);
  if (v14)
  {
    v16 = v14;
  }
  else
  {
    v13 = *((_QWORD *)v12 + 10);
    v16 = *((_QWORD *)v12 + 11);
    swift_bridgeObjectRetain(v16);
  }
  swift_bridgeObjectRetain(v14);
  sub_1000215BC((uint64_t)v12, type metadata accessor for AveragesComponentView);
  v17 = v3[20];
  v18 = v3[21];
  sub_10000AB54((uint64_t)v3, (uint64_t)v9, type metadata accessor for AveragesComponentView);
  if (v18)
  {
    v19 = v18;
  }
  else
  {
    v17 = *((_QWORD *)v9 + 18);
    v19 = *((_QWORD *)v9 + 19);
    swift_bridgeObjectRetain(v19);
  }
  swift_bridgeObjectRetain(v18);
  sub_1000215BC((uint64_t)v9, type metadata accessor for AveragesComponentView);
  *(_QWORD *)a3 = static Alignment.leading.getter(v20);
  *(_QWORD *)(a3 + 8) = v21;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 0;
  v22 = sub_1000BA294(&qword_100BE5B08);
  sub_1004A55C8(v3, a2 & 1, v13, v16, a1, v17, v19, a3 + *(int *)(v22 + 44));
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1004A30F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v28 = a2;
  v29 = type metadata accessor for AccessibilityChildBehavior(0);
  v27 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v25 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1000BA294(&qword_100BE5958);
  __chkstk_darwin(v26);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static HorizontalAlignment.center.getter(v6);
  sub_1004A3328(a1, (uint64_t)&v30);
  v9 = v30;
  v8 = v31;
  v10 = v32;
  v12 = v33;
  v11 = v34;
  v13 = v35;
  v14 = v36;
  v20 = v37;
  v23 = v38;
  v22 = v39;
  v21 = v40;
  v24 = v41;
  v30 = v7;
  v31 = 0;
  v32 = 1;
  v33 = v9;
  v34 = v8;
  LOBYTE(v35) = v10;
  v36 = v12;
  v37 = v11;
  v38 = v13;
  LOBYTE(v39) = v14;
  v40 = v20;
  v41 = v23;
  v42 = v22;
  v43 = v21;
  v44 = v24;
  v15 = sub_1000BA294(&qword_100BE5970);
  sub_10003D2DC(&qword_100BE5968, &qword_100BE5970);
  View.accessibilityRespondsToUserInteraction(_:)(1, v15, v16);
  sub_1000D31B4(v9, v8, v10);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v11, v13, v14);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v23, v22, v21);
  swift_bridgeObjectRelease();
  v17 = v25;
  static AccessibilityChildBehavior.combine.getter(v18);
  v19 = sub_1004A60D8();
  View.accessibilityElement(children:)(v17, v26, v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v29);
  sub_100021A14((uint64_t)v5, &qword_100BE5958);
}

double sub_1004A3328@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = a1;
  v4 = a1[9];
  v31 = a1[8];
  v32 = v4;
  v5 = sub_100114EF8();
  swift_bridgeObjectRetain(v4);
  v29 = Text.init<A>(_:)(&v31, &type metadata for String, v5);
  v30 = v6;
  v8 = v7;
  v9 = v2[17];
  v11 = v10 & 1;
  v31 = v2[16];
  v32 = v9;
  swift_bridgeObjectRetain(v9);
  v12 = Text.init<A>(_:)(&v31, &type metadata for String, v5);
  v14 = v13;
  v16 = v15;
  v18 = v2[24];
  v17 = v2[25];
  LOBYTE(v2) = v19 & 1;
  v31 = v18;
  v32 = v17;
  swift_bridgeObjectRetain(v17);
  v20 = Text.init<A>(_:)(&v31, &type metadata for String, v5);
  v22 = v21;
  v24 = v23;
  v25 = v11;
  LOBYTE(v31) = v11;
  v27 = v26 & 1;
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = v30;
  *(_BYTE *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v14;
  *(_BYTE *)(a2 + 48) = (_BYTE)v2;
  *(_QWORD *)(a2 + 56) = v16;
  *(_QWORD *)(a2 + 64) = v20;
  *(_QWORD *)(a2 + 72) = v21;
  *(_BYTE *)(a2 + 80) = v26 & 1;
  *(_QWORD *)(a2 + 88) = v23;
  sub_1000D55D4(v29, v30, v25);
  swift_bridgeObjectRetain(v8);
  sub_1000D55D4(v12, v14, (char)v2);
  swift_bridgeObjectRetain(v16);
  sub_1000D55D4(v20, v22, v27);
  swift_bridgeObjectRetain(v24);
  sub_1000D31B4(v20, v22, v27);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v12, v14, (char)v2);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v29, v30, v31);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1004A34D0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD);
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  int v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, __n128);
  void (*v114)(char *, _QWORD, uint64_t);
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t KeyPath;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned __int8 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v122 = a2;
  v3 = type metadata accessor for Font.TextStyle(0);
  v119 = *(_QWORD *)(v3 - 8);
  v120 = v3;
  __chkstk_darwin(v3);
  v118 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v5);
  v128 = (uint64_t)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BlendMode(0);
  v126 = *(_QWORD *)(v7 - 8);
  v127 = v7;
  __chkstk_darwin(v7);
  v125 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v99);
  v100 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ColorSchemeContrast(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v98 - v15;
  v17 = type metadata accessor for Font.Leading(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_1000BA294(&qword_100BE5A58);
  __chkstk_darwin(v102);
  v121 = (uint64_t)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v98 - v23;
  v26 = __chkstk_darwin(v25);
  v117 = (uint64_t)&v98 - v27;
  v101 = static Axis.Set.horizontal.getter(v26);
  sub_1004A44C0(a1);
  v105 = v129;
  v104 = v130;
  v103 = v131;
  v106 = v132;
  v112 = v133;
  v111 = v134;
  v109 = v135;
  v107 = v136;
  v29 = static Font.subheadline.getter(v28);
  v30 = *(void (**)(_QWORD))(v18 + 104);
  v115 = enum case for Font.Leading.tight(_:);
  v114 = (void (*)(char *, _QWORD, uint64_t))v30;
  v30(v20);
  v124 = Font.leading(_:)(v20, v29);
  v31 = swift_release();
  v32 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v108 = v20;
  v33 = v20;
  v34 = v99;
  v116 = v17;
  v113 = v32;
  v32(v33, v17, v31);
  KeyPath = swift_getKeyPath(&unk_1009A2FB0);
  sub_100114A94();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for ColorSchemeContrast.increased(_:), v10);
  LOBYTE(v29) = static ColorSchemeContrast.== infix(_:_:)(v16, v13);
  v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v13, v10);
  v36 = v16;
  v37 = (uint64_t)v100;
  v35(v36, v10);
  v110 = a1;
  sub_10000AB54((uint64_t)a1, v37, type metadata accessor for AveragesComponentView);
  if ((v29 & 1) != 0)
  {
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
  }
  else
  {
    v39 = v37 + *(int *)(v34 + 24);
    v40 = *(_QWORD *)v39;
    v41 = *(_BYTE *)(v39 + 8);
    sub_10008D47C(*(_QWORD *)v39, v41);
    sub_100109B54();
    v43 = v42;
    sub_1000B15F8(v40, v41);
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
    if ((v43 & 1) == 0)
    {
      v44 = static HierarchicalShapeStyle.tertiary.getter(v38);
      goto LABEL_6;
    }
  }
  v44 = static HierarchicalShapeStyle.primary.getter(v38);
LABEL_6:
  LODWORD(v100) = v44;
  v46 = v125;
  v45 = v126;
  v47 = v127;
  (*(void (**)(char *, _QWORD, uint64_t))(v126 + 104))(v125, enum case for BlendMode.plusLighter(_:), v127);
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 16);
  v49 = v128;
  v48(v128, v46, v47);
  sub_10000AB54(v49, (uint64_t)&v24[*(int *)(v102 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *v24 = v101;
  v50 = v105;
  v51 = v104;
  *((_QWORD *)v24 + 1) = v105;
  *((_QWORD *)v24 + 2) = v51;
  v52 = v103;
  v24[24] = v103;
  v53 = v106;
  v54 = v112;
  *((_QWORD *)v24 + 4) = v106;
  *((_QWORD *)v24 + 5) = v54;
  v55 = v111;
  v56 = v109;
  *((_QWORD *)v24 + 6) = v111;
  *((_QWORD *)v24 + 7) = v56;
  v57 = v107;
  v59 = KeyPath;
  v58 = v124;
  *((_QWORD *)v24 + 8) = v107;
  *((_QWORD *)v24 + 9) = v59;
  *((_QWORD *)v24 + 10) = v58;
  *((_DWORD *)v24 + 22) = (_DWORD)v100;
  sub_1000D55D4(v50, v51, v52);
  swift_bridgeObjectRetain(v53);
  sub_10010F980(v54, v55, v56, v57);
  swift_retain();
  swift_retain();
  sub_1000215BC(v128, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v127);
  sub_1000D31B4(v50, v51, v52);
  swift_bridgeObjectRelease();
  sub_10010F9B0(v54, v55, v56, v57);
  swift_release();
  swift_release();
  v60 = v117;
  sub_1000F111C((uint64_t)v24, v117, &qword_100BE5A58);
  v61 = v110[15];
  v129 = v110[14];
  v130 = v61;
  v62 = sub_100114EF8();
  swift_bridgeObjectRetain(v61);
  v63 = Text.init<A>(_:)(&v129, &type metadata for String, v62);
  v65 = v64;
  v67 = v66;
  v69 = v68 & 1;
  v71 = v118;
  v70 = v119;
  v72 = v120;
  v73 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v119 + 104))(v118, enum case for Font.TextStyle.subheadline(_:), v120);
  static Font.Weight.bold.getter(v73);
  v74 = static Font.system(_:weight:)(v71);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
  v75 = v108;
  v76 = v116;
  v114(v108, v115, v116);
  v77 = Font.leading(_:)(v75, v74);
  v78 = swift_release();
  v113(v75, v76, v78);
  v79 = Text.font(_:)(v77, v63, v65, v69, v67);
  v81 = v80;
  LOBYTE(v75) = v82;
  v84 = v83;
  swift_release();
  sub_1000D31B4(v63, v65, v69);
  v85 = swift_bridgeObjectRelease();
  v86 = Text.monospacedDigit()(v79, v81, v75 & 1, v84, v85);
  v88 = v87;
  v90 = v89;
  LOBYTE(v69) = v91 & 1;
  sub_1000D31B4(v79, v81, v75 & 1);
  swift_bridgeObjectRelease();
  v92 = swift_getKeyPath(&unk_1009A2FE0);
  v93 = v121;
  sub_100037794(v60, v121, &qword_100BE5A58);
  v94 = v122;
  sub_100037794(v93, v122, &qword_100BE5A58);
  v95 = sub_1000BA294(&qword_100BE5A60);
  v96 = v94 + *(int *)(v95 + 48);
  *(_QWORD *)v96 = 0x4010000000000000;
  *(_BYTE *)(v96 + 8) = 0;
  v97 = v94 + *(int *)(v95 + 64);
  *(_QWORD *)v97 = v86;
  *(_QWORD *)(v97 + 8) = v88;
  *(_BYTE *)(v97 + 16) = v69;
  *(_QWORD *)(v97 + 24) = v90;
  *(_QWORD *)(v97 + 32) = v92;
  *(_QWORD *)(v97 + 40) = 0x3FE999999999999ALL;
  sub_1000D55D4(v86, v88, v69);
  swift_bridgeObjectRetain(v90);
  swift_retain();
  sub_100021A14(v60, &qword_100BE5A58);
  sub_1000D31B4(v86, v88, v69);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100021A14(v93, &qword_100BE5A58);
}

void sub_1004A3CE0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD);
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, __n128);
  void (*v113)(char *, _QWORD, uint64_t);
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t KeyPath;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v121 = a2;
  v3 = type metadata accessor for Font.TextStyle(0);
  v118 = *(_QWORD *)(v3 - 8);
  v119 = v3;
  __chkstk_darwin(v3);
  v117 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v5);
  v127 = (uint64_t)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BlendMode(0);
  v125 = *(_QWORD *)(v7 - 8);
  v126 = v7;
  __chkstk_darwin(v7);
  v124 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v98);
  v99 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ColorSchemeContrast(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v97 - v15;
  v17 = type metadata accessor for Font.Leading(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1000BA294(&qword_100BE5A58);
  __chkstk_darwin(v101);
  v120 = (uint64_t)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v97 - v23;
  v26 = __chkstk_darwin(v25);
  v116 = (uint64_t)&v97 - v27;
  v100 = static Axis.Set.horizontal.getter(v26);
  sub_1004A44C0(a1);
  v104 = v128;
  v103 = v129;
  v102 = v130;
  v105 = v131;
  v111 = v132;
  v110 = v133;
  v108 = v134;
  v106 = v135;
  v29 = static Font.caption2.getter(v28);
  v30 = *(void (**)(_QWORD))(v18 + 104);
  v114 = enum case for Font.Leading.tight(_:);
  v113 = (void (*)(char *, _QWORD, uint64_t))v30;
  v30(v20);
  v123 = Font.leading(_:)(v20, v29);
  v31 = swift_release();
  v32 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v107 = v20;
  v33 = v20;
  v34 = v98;
  v115 = v17;
  v112 = v32;
  v32(v33, v17, v31);
  KeyPath = swift_getKeyPath(&unk_1009A2FB0);
  sub_100114A94();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for ColorSchemeContrast.increased(_:), v10);
  LOBYTE(v29) = static ColorSchemeContrast.== infix(_:_:)(v16, v13);
  v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v13, v10);
  v36 = v16;
  v37 = (uint64_t)v99;
  v35(v36, v10);
  v109 = a1;
  sub_10000AB54((uint64_t)a1, v37, type metadata accessor for AveragesComponentView);
  if ((v29 & 1) != 0)
  {
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
  }
  else
  {
    v39 = v37 + *(int *)(v34 + 24);
    v40 = *(_QWORD *)v39;
    v41 = *(_BYTE *)(v39 + 8);
    sub_10008D47C(*(_QWORD *)v39, v41);
    sub_100109B54();
    v43 = v42;
    sub_1000B15F8(v40, v41);
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
    if ((v43 & 1) == 0)
    {
      v44 = static HierarchicalShapeStyle.tertiary.getter(v38);
      goto LABEL_6;
    }
  }
  v44 = static HierarchicalShapeStyle.primary.getter(v38);
LABEL_6:
  LODWORD(v99) = v44;
  v46 = v124;
  v45 = v125;
  v47 = v126;
  (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v124, enum case for BlendMode.plusLighter(_:), v126);
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 16);
  v49 = v127;
  v48(v127, v46, v47);
  sub_10000AB54(v49, (uint64_t)&v24[*(int *)(v101 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *v24 = v100;
  v50 = v104;
  v51 = v103;
  *((_QWORD *)v24 + 1) = v104;
  *((_QWORD *)v24 + 2) = v51;
  v52 = v102;
  v24[24] = v102;
  v53 = v105;
  v54 = v111;
  *((_QWORD *)v24 + 4) = v105;
  *((_QWORD *)v24 + 5) = v54;
  v55 = v110;
  v56 = v108;
  *((_QWORD *)v24 + 6) = v110;
  *((_QWORD *)v24 + 7) = v56;
  v57 = v106;
  v59 = KeyPath;
  v58 = v123;
  *((_QWORD *)v24 + 8) = v106;
  *((_QWORD *)v24 + 9) = v59;
  *((_QWORD *)v24 + 10) = v58;
  *((_DWORD *)v24 + 22) = (_DWORD)v99;
  sub_1000D55D4(v50, v51, v52);
  swift_bridgeObjectRetain(v53);
  sub_10010F980(v54, v55, v56, v57);
  swift_retain();
  swift_retain();
  sub_1000215BC(v127, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v124, v126);
  sub_1000D31B4(v50, v51, v52);
  swift_bridgeObjectRelease();
  sub_10010F9B0(v54, v55, v56, v57);
  swift_release();
  swift_release();
  v60 = v116;
  sub_1000F111C((uint64_t)v24, v116, &qword_100BE5A58);
  v61 = v109[15];
  v128 = v109[14];
  v129 = v61;
  v62 = sub_100114EF8();
  swift_bridgeObjectRetain(v61);
  v63 = Text.init<A>(_:)(&v128, &type metadata for String, v62);
  v65 = v64;
  v67 = v66;
  v69 = v68 & 1;
  v71 = v117;
  v70 = v118;
  v72 = v119;
  v73 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v118 + 104))(v117, enum case for Font.TextStyle.caption2(_:), v119);
  static Font.Weight.bold.getter(v73);
  v74 = static Font.system(_:weight:)(v71);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
  v75 = v107;
  v76 = v115;
  v113(v107, v114, v115);
  v77 = Font.leading(_:)(v75, v74);
  v78 = swift_release();
  v112(v75, v76, v78);
  v79 = Text.font(_:)(v77, v63, v65, v69, v67);
  v81 = v80;
  LOBYTE(v75) = v82;
  v84 = v83;
  swift_release();
  sub_1000D31B4(v63, v65, v69);
  v85 = swift_bridgeObjectRelease();
  v86 = Text.monospacedDigit()(v79, v81, v75 & 1, v84, v85);
  v88 = v87;
  v90 = v89;
  LOBYTE(v69) = v91 & 1;
  sub_1000D31B4(v79, v81, v75 & 1);
  swift_bridgeObjectRelease();
  v92 = v120;
  sub_100037794(v60, v120, &qword_100BE5A58);
  v93 = v121;
  sub_100037794(v92, v121, &qword_100BE5A58);
  v94 = sub_1000BA294(&qword_100BE5A98);
  v95 = v93 + *(int *)(v94 + 48);
  *(_QWORD *)v95 = 0x4010000000000000;
  *(_BYTE *)(v95 + 8) = 0;
  v96 = v93 + *(int *)(v94 + 64);
  *(_QWORD *)v96 = v86;
  *(_QWORD *)(v96 + 8) = v88;
  *(_BYTE *)(v96 + 16) = v69;
  *(_QWORD *)(v96 + 24) = v90;
  sub_1000D55D4(v86, v88, v69);
  swift_bridgeObjectRetain(v90);
  sub_100021A14(v60, &qword_100BE5A58);
  sub_1000D31B4(v86, v88, v69);
  swift_bridgeObjectRelease();
  sub_100021A14(v92, &qword_100BE5A58);
}

void sub_1004A44C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a1[10];
  sub_100114EF8();
  v2 = sub_1000D186C();
  sub_1000C4A20(v2, (uint64_t)&type metadata for String, v3, v4, v5, v6, v7, v8, v17);
  sub_1000CD794();
  v9 = a1[13];
  if (v9)
  {
    v18 = a1[12];
    swift_bridgeObjectRetain(v9);
    sub_1000C4A20(v10, (uint64_t)&type metadata for String, v11, v12, v13, v14, v15, v16, v18);
    sub_1000D9648();
  }
  else
  {
    sub_1000D9030();
  }
  sub_1000BC2B0();
  sub_1000C5F48();
  sub_1000B4A48();
  sub_1000D9E58();
  sub_1000C3B50();
}

void sub_1004A454C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD);
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  int v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, __n128);
  void (*v114)(char *, _QWORD, uint64_t);
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t KeyPath;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned __int8 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v122 = a2;
  v3 = type metadata accessor for Font.TextStyle(0);
  v119 = *(_QWORD *)(v3 - 8);
  v120 = v3;
  __chkstk_darwin(v3);
  v118 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v5);
  v128 = (uint64_t)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BlendMode(0);
  v126 = *(_QWORD *)(v7 - 8);
  v127 = v7;
  __chkstk_darwin(v7);
  v125 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v99);
  v100 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ColorSchemeContrast(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v98 - v15;
  v17 = type metadata accessor for Font.Leading(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_1000BA294(&qword_100BE5A58);
  __chkstk_darwin(v102);
  v121 = (uint64_t)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v98 - v23;
  v26 = __chkstk_darwin(v25);
  v117 = (uint64_t)&v98 - v27;
  v101 = static Axis.Set.horizontal.getter(v26);
  sub_1004A553C(a1);
  v105 = v129;
  v104 = v130;
  v103 = v131;
  v106 = v132;
  v112 = v133;
  v111 = v134;
  v109 = v135;
  v107 = v136;
  v29 = static Font.subheadline.getter(v28);
  v30 = *(void (**)(_QWORD))(v18 + 104);
  v115 = enum case for Font.Leading.tight(_:);
  v114 = (void (*)(char *, _QWORD, uint64_t))v30;
  v30(v20);
  v124 = Font.leading(_:)(v20, v29);
  v31 = swift_release();
  v32 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v108 = v20;
  v33 = v20;
  v34 = v99;
  v116 = v17;
  v113 = v32;
  v32(v33, v17, v31);
  KeyPath = swift_getKeyPath(&unk_1009A2FB0);
  sub_100114A94();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for ColorSchemeContrast.increased(_:), v10);
  LOBYTE(v29) = static ColorSchemeContrast.== infix(_:_:)(v16, v13);
  v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v13, v10);
  v36 = v16;
  v37 = (uint64_t)v100;
  v35(v36, v10);
  v110 = a1;
  sub_10000AB54((uint64_t)a1, v37, type metadata accessor for AveragesComponentView);
  if ((v29 & 1) != 0)
  {
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
  }
  else
  {
    v39 = v37 + *(int *)(v34 + 24);
    v40 = *(_QWORD *)v39;
    v41 = *(_BYTE *)(v39 + 8);
    sub_10008D47C(*(_QWORD *)v39, v41);
    sub_100109B54();
    v43 = v42;
    sub_1000B15F8(v40, v41);
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
    if ((v43 & 1) == 0)
    {
      v44 = static HierarchicalShapeStyle.tertiary.getter(v38);
      goto LABEL_6;
    }
  }
  v44 = static HierarchicalShapeStyle.primary.getter(v38);
LABEL_6:
  LODWORD(v100) = v44;
  v46 = v125;
  v45 = v126;
  v47 = v127;
  (*(void (**)(char *, _QWORD, uint64_t))(v126 + 104))(v125, enum case for BlendMode.plusLighter(_:), v127);
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 16);
  v49 = v128;
  v48(v128, v46, v47);
  sub_10000AB54(v49, (uint64_t)&v24[*(int *)(v102 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *v24 = v101;
  v50 = v105;
  v51 = v104;
  *((_QWORD *)v24 + 1) = v105;
  *((_QWORD *)v24 + 2) = v51;
  v52 = v103;
  v24[24] = v103;
  v53 = v106;
  v54 = v112;
  *((_QWORD *)v24 + 4) = v106;
  *((_QWORD *)v24 + 5) = v54;
  v55 = v111;
  v56 = v109;
  *((_QWORD *)v24 + 6) = v111;
  *((_QWORD *)v24 + 7) = v56;
  v57 = v107;
  v59 = KeyPath;
  v58 = v124;
  *((_QWORD *)v24 + 8) = v107;
  *((_QWORD *)v24 + 9) = v59;
  *((_QWORD *)v24 + 10) = v58;
  *((_DWORD *)v24 + 22) = (_DWORD)v100;
  sub_1000D55D4(v50, v51, v52);
  swift_bridgeObjectRetain(v53);
  sub_10010F980(v54, v55, v56, v57);
  swift_retain();
  swift_retain();
  sub_1000215BC(v128, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v127);
  sub_1000D31B4(v50, v51, v52);
  swift_bridgeObjectRelease();
  sub_10010F9B0(v54, v55, v56, v57);
  swift_release();
  swift_release();
  v60 = v117;
  sub_1000F111C((uint64_t)v24, v117, &qword_100BE5A58);
  v61 = v110[23];
  v129 = v110[22];
  v130 = v61;
  v62 = sub_100114EF8();
  swift_bridgeObjectRetain(v61);
  v63 = Text.init<A>(_:)(&v129, &type metadata for String, v62);
  v65 = v64;
  v67 = v66;
  v69 = v68 & 1;
  v71 = v118;
  v70 = v119;
  v72 = v120;
  v73 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v119 + 104))(v118, enum case for Font.TextStyle.subheadline(_:), v120);
  static Font.Weight.bold.getter(v73);
  v74 = static Font.system(_:weight:)(v71);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
  v75 = v108;
  v76 = v116;
  v114(v108, v115, v116);
  v77 = Font.leading(_:)(v75, v74);
  v78 = swift_release();
  v113(v75, v76, v78);
  v79 = Text.font(_:)(v77, v63, v65, v69, v67);
  v81 = v80;
  LOBYTE(v75) = v82;
  v84 = v83;
  swift_release();
  sub_1000D31B4(v63, v65, v69);
  v85 = swift_bridgeObjectRelease();
  v86 = Text.monospacedDigit()(v79, v81, v75 & 1, v84, v85);
  v88 = v87;
  v90 = v89;
  LOBYTE(v69) = v91 & 1;
  sub_1000D31B4(v79, v81, v75 & 1);
  swift_bridgeObjectRelease();
  v92 = swift_getKeyPath(&unk_1009A2FE0);
  v93 = v121;
  sub_100037794(v60, v121, &qword_100BE5A58);
  v94 = v122;
  sub_100037794(v93, v122, &qword_100BE5A58);
  v95 = sub_1000BA294(&qword_100BE5A60);
  v96 = v94 + *(int *)(v95 + 48);
  *(_QWORD *)v96 = 0x4010000000000000;
  *(_BYTE *)(v96 + 8) = 0;
  v97 = v94 + *(int *)(v95 + 64);
  *(_QWORD *)v97 = v86;
  *(_QWORD *)(v97 + 8) = v88;
  *(_BYTE *)(v97 + 16) = v69;
  *(_QWORD *)(v97 + 24) = v90;
  *(_QWORD *)(v97 + 32) = v92;
  *(_QWORD *)(v97 + 40) = 0x3FE999999999999ALL;
  sub_1000D55D4(v86, v88, v69);
  swift_bridgeObjectRetain(v90);
  swift_retain();
  sub_100021A14(v60, &qword_100BE5A58);
  sub_1000D31B4(v86, v88, v69);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100021A14(v93, &qword_100BE5A58);
}

void sub_1004A4D5C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD);
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, __n128);
  void (*v113)(char *, _QWORD, uint64_t);
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t KeyPath;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v121 = a2;
  v3 = type metadata accessor for Font.TextStyle(0);
  v118 = *(_QWORD *)(v3 - 8);
  v119 = v3;
  __chkstk_darwin(v3);
  v117 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v5);
  v127 = (uint64_t)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BlendMode(0);
  v125 = *(_QWORD *)(v7 - 8);
  v126 = v7;
  __chkstk_darwin(v7);
  v124 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v98);
  v99 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ColorSchemeContrast(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v97 - v15;
  v17 = type metadata accessor for Font.Leading(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1000BA294(&qword_100BE5A58);
  __chkstk_darwin(v101);
  v120 = (uint64_t)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v97 - v23;
  v26 = __chkstk_darwin(v25);
  v116 = (uint64_t)&v97 - v27;
  v100 = static Axis.Set.horizontal.getter(v26);
  sub_1004A553C(a1);
  v104 = v128;
  v103 = v129;
  v102 = v130;
  v105 = v131;
  v111 = v132;
  v110 = v133;
  v108 = v134;
  v106 = v135;
  v29 = static Font.caption2.getter(v28);
  v30 = *(void (**)(_QWORD))(v18 + 104);
  v114 = enum case for Font.Leading.tight(_:);
  v113 = (void (*)(char *, _QWORD, uint64_t))v30;
  v30(v20);
  v123 = Font.leading(_:)(v20, v29);
  v31 = swift_release();
  v32 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v107 = v20;
  v33 = v20;
  v34 = v98;
  v115 = v17;
  v112 = v32;
  v32(v33, v17, v31);
  KeyPath = swift_getKeyPath(&unk_1009A2FB0);
  sub_100114A94();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for ColorSchemeContrast.increased(_:), v10);
  LOBYTE(v29) = static ColorSchemeContrast.== infix(_:_:)(v16, v13);
  v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v13, v10);
  v36 = v16;
  v37 = (uint64_t)v99;
  v35(v36, v10);
  v109 = a1;
  sub_10000AB54((uint64_t)a1, v37, type metadata accessor for AveragesComponentView);
  if ((v29 & 1) != 0)
  {
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
  }
  else
  {
    v39 = v37 + *(int *)(v34 + 24);
    v40 = *(_QWORD *)v39;
    v41 = *(_BYTE *)(v39 + 8);
    sub_10008D47C(*(_QWORD *)v39, v41);
    sub_100109B54();
    v43 = v42;
    sub_1000B15F8(v40, v41);
    sub_1000215BC(v37, type metadata accessor for AveragesComponentView);
    if ((v43 & 1) == 0)
    {
      v44 = static HierarchicalShapeStyle.tertiary.getter(v38);
      goto LABEL_6;
    }
  }
  v44 = static HierarchicalShapeStyle.primary.getter(v38);
LABEL_6:
  LODWORD(v99) = v44;
  v46 = v124;
  v45 = v125;
  v47 = v126;
  (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v124, enum case for BlendMode.plusLighter(_:), v126);
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 16);
  v49 = v127;
  v48(v127, v46, v47);
  sub_10000AB54(v49, (uint64_t)&v24[*(int *)(v101 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *v24 = v100;
  v50 = v104;
  v51 = v103;
  *((_QWORD *)v24 + 1) = v104;
  *((_QWORD *)v24 + 2) = v51;
  v52 = v102;
  v24[24] = v102;
  v53 = v105;
  v54 = v111;
  *((_QWORD *)v24 + 4) = v105;
  *((_QWORD *)v24 + 5) = v54;
  v55 = v110;
  v56 = v108;
  *((_QWORD *)v24 + 6) = v110;
  *((_QWORD *)v24 + 7) = v56;
  v57 = v106;
  v59 = KeyPath;
  v58 = v123;
  *((_QWORD *)v24 + 8) = v106;
  *((_QWORD *)v24 + 9) = v59;
  *((_QWORD *)v24 + 10) = v58;
  *((_DWORD *)v24 + 22) = (_DWORD)v99;
  sub_1000D55D4(v50, v51, v52);
  swift_bridgeObjectRetain(v53);
  sub_10010F980(v54, v55, v56, v57);
  swift_retain();
  swift_retain();
  sub_1000215BC(v127, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v124, v126);
  sub_1000D31B4(v50, v51, v52);
  swift_bridgeObjectRelease();
  sub_10010F9B0(v54, v55, v56, v57);
  swift_release();
  swift_release();
  v60 = v116;
  sub_1000F111C((uint64_t)v24, v116, &qword_100BE5A58);
  v61 = v109[23];
  v128 = v109[22];
  v129 = v61;
  v62 = sub_100114EF8();
  swift_bridgeObjectRetain(v61);
  v63 = Text.init<A>(_:)(&v128, &type metadata for String, v62);
  v65 = v64;
  v67 = v66;
  v69 = v68 & 1;
  v71 = v117;
  v70 = v118;
  v72 = v119;
  v73 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v118 + 104))(v117, enum case for Font.TextStyle.caption2(_:), v119);
  static Font.Weight.bold.getter(v73);
  v74 = static Font.system(_:weight:)(v71);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
  v75 = v107;
  v76 = v115;
  v113(v107, v114, v115);
  v77 = Font.leading(_:)(v75, v74);
  v78 = swift_release();
  v112(v75, v76, v78);
  v79 = Text.font(_:)(v77, v63, v65, v69, v67);
  v81 = v80;
  LOBYTE(v75) = v82;
  v84 = v83;
  swift_release();
  sub_1000D31B4(v63, v65, v69);
  v85 = swift_bridgeObjectRelease();
  v86 = Text.monospacedDigit()(v79, v81, v75 & 1, v84, v85);
  v88 = v87;
  v90 = v89;
  LOBYTE(v69) = v91 & 1;
  sub_1000D31B4(v79, v81, v75 & 1);
  swift_bridgeObjectRelease();
  v92 = v120;
  sub_100037794(v60, v120, &qword_100BE5A58);
  v93 = v121;
  sub_100037794(v92, v121, &qword_100BE5A58);
  v94 = sub_1000BA294(&qword_100BE5A98);
  v95 = v93 + *(int *)(v94 + 48);
  *(_QWORD *)v95 = 0x4010000000000000;
  *(_BYTE *)(v95 + 8) = 0;
  v96 = v93 + *(int *)(v94 + 64);
  *(_QWORD *)v96 = v86;
  *(_QWORD *)(v96 + 8) = v88;
  *(_BYTE *)(v96 + 16) = v69;
  *(_QWORD *)(v96 + 24) = v90;
  sub_1000D55D4(v86, v88, v69);
  swift_bridgeObjectRetain(v90);
  sub_100021A14(v60, &qword_100BE5A58);
  sub_1000D31B4(v86, v88, v69);
  swift_bridgeObjectRelease();
  sub_100021A14(v92, &qword_100BE5A58);
}

void sub_1004A553C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a1[18];
  sub_100114EF8();
  v2 = sub_1000D186C();
  sub_1000C4A20(v2, (uint64_t)&type metadata for String, v3, v4, v5, v6, v7, v8, v17);
  sub_1000CD794();
  v9 = a1[21];
  if (v9)
  {
    v18 = a1[20];
    swift_bridgeObjectRetain(v9);
    sub_1000C4A20(v10, (uint64_t)&type metadata for String, v11, v12, v13, v14, v15, v16, v18);
    sub_1000D9648();
  }
  else
  {
    sub_1000D9030();
  }
  sub_1000BC2B0();
  sub_1000C5F48();
  sub_1000B4A48();
  sub_1000D9E58();
  sub_1000C3B50();
}

void sub_1004A55C8(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a6;
  v40 = a8;
  v41 = a3;
  v42 = a5;
  v12 = sub_1000BA294(&qword_100BE5B10);
  __chkstk_darwin(v12);
  v38 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v37 = (uint64_t)&v37 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v37 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v37 - v26;
  if ((a2 & 1) == 0)
  {
    a4 = a1[11];
    v41 = a1[10];
  }
  swift_bridgeObjectRetain(a4);
  v28 = a1[14];
  v29 = a1[15];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  sub_1004A5834(v41, a4, v42, (uint64_t)a1, v28, v29, (uint64_t)&v24[*(int *)(v12 + 36)]);
  swift_bridgeObjectRelease();
  sub_1000F111C((uint64_t)v24, (uint64_t)v27, &qword_100BE5B10);
  v30 = v39;
  if ((a2 & 1) == 0)
  {
    v30 = a1[18];
    a7 = a1[19];
  }
  swift_bridgeObjectRetain(a7);
  v31 = a1[22];
  v32 = a1[23];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  sub_1004A5834(v30, a7, v42, (uint64_t)a1, v31, v32, (uint64_t)&v18[*(int *)(v12 + 36)]);
  swift_bridgeObjectRelease();
  sub_1000F111C((uint64_t)v18, (uint64_t)v21, &qword_100BE5B10);
  v33 = v37;
  sub_100037794((uint64_t)v27, v37, &qword_100BE5B10);
  v34 = v38;
  sub_100037794((uint64_t)v21, v38, &qword_100BE5B10);
  v35 = v40;
  sub_100037794(v33, v40, &qword_100BE5B10);
  v36 = sub_1000BA294(&qword_100BE5B18);
  sub_100037794(v34, v35 + *(int *)(v36 + 48), &qword_100BE5B10);
  sub_100021A14((uint64_t)v21, &qword_100BE5B10);
  sub_100021A14((uint64_t)v27, &qword_100BE5B10);
  sub_100021A14(v34, &qword_100BE5B10);
  sub_100021A14(v33, &qword_100BE5B10);
}

void sub_1004A5834(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(_QWORD);
  uint64_t v39;
  void (*v40)(_QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t);
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  int v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t KeyPath;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE v111[4];
  int v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(_BYTE *, _QWORD, uint64_t);
  unsigned int v122;
  unint64_t v123;
  void (*v124)(_BYTE *, uint64_t, __n128);
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v134 = a5;
  v135 = a6;
  v119 = a4;
  v138 = a7;
  v10 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v10);
  v132 = &v111[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for BlendMode(0);
  v130 = *(_QWORD *)(v12 - 8);
  v131 = v12;
  __chkstk_darwin(v12);
  v128 = &v111[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v114 = type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v114);
  v118 = &v111[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = type metadata accessor for ColorSchemeContrast(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = &v111[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v111[-v17];
  v19 = type metadata accessor for Font.Leading(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = &v111[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v120 = sub_1000BA294(&qword_100BC3B90);
  __chkstk_darwin(v120);
  v24 = &v111[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v126 = sub_1000BA294(&qword_100BD6A50);
  __chkstk_darwin(v126);
  v137 = &v111[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v125 = &v111[-v27];
  __chkstk_darwin(v28);
  v133 = &v111[-v29];
  v139 = a1;
  v140 = a2;
  v30 = sub_100114EF8();
  swift_bridgeObjectRetain(a2);
  v123 = v30;
  v31 = Text.init<A>(_:)(&v139, &type metadata for String, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  v38 = *(void (**)(_QWORD))(v20 + 104);
  v122 = enum case for Font.Leading.tight(_:);
  v121 = (void (*)(_BYTE *, _QWORD, uint64_t))v38;
  v38(v22);
  v136 = a3;
  v39 = Font.leading(_:)(v22, a3);
  v40 = *(void (**)(_QWORD))(v20 + 8);
  v41 = v19;
  v42 = v114;
  v127 = v22;
  v129 = v41;
  v124 = (void (*)(_BYTE *, uint64_t, __n128))v40;
  v40(v22);
  v43 = Text.font(_:)(v39, v31, v33, v37, v35);
  v113 = v44;
  v112 = v45;
  v47 = v46;
  swift_release();
  sub_1000D31B4(v31, v33, v37);
  swift_bridgeObjectRelease();
  v48 = v119;
  sub_100114A94();
  v49 = v116;
  v50 = v115;
  v51 = v117;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v116 + 104))(v115, enum case for ColorSchemeContrast.increased(_:), v117);
  LOBYTE(v37) = static ColorSchemeContrast.== infix(_:_:)(v18, v50);
  v52 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
  v52(v50, v51);
  v53 = v18;
  v54 = (uint64_t)v118;
  v52(v53, v51);
  sub_10000AB54(v48, v54, type metadata accessor for AveragesComponentView);
  if ((v37 & 1) != 0)
  {
    sub_1000215BC(v54, type metadata accessor for AveragesComponentView);
  }
  else
  {
    v56 = v54 + *(int *)(v42 + 24);
    v57 = *(_QWORD *)v56;
    v58 = *(_BYTE *)(v56 + 8);
    sub_10008D47C(*(_QWORD *)v56, v58);
    sub_100109B54();
    v60 = v59;
    sub_1000B15F8(v57, v58);
    sub_1000215BC(v54, type metadata accessor for AveragesComponentView);
    if ((v60 & 1) == 0)
    {
      v61 = static HierarchicalShapeStyle.tertiary.getter(v55);
      goto LABEL_6;
    }
  }
  v61 = static HierarchicalShapeStyle.primary.getter(v55);
LABEL_6:
  v62 = v112 & 1;
  LODWORD(v139) = v61;
  v63 = v113;
  v64 = Text.foregroundStyle<A>(_:)(&v139, v43, v113, v112 & 1, v47, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v66 = v65;
  v68 = v67;
  v70 = v69 & 1;
  sub_1000D31B4(v43, v63, v62);
  v71 = swift_bridgeObjectRelease();
  v73 = v130;
  v72 = v131;
  v74 = v128;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v130 + 104))(v128, enum case for BlendMode.plusLighter(_:), v131, v71);
  v75 = (uint64_t)v132;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v73 + 16))(v132, v74, v72);
  sub_10000AB54(v75, (uint64_t)&v24[*(int *)(v120 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v24 = v64;
  *((_QWORD *)v24 + 1) = v66;
  v24[16] = v70;
  *((_QWORD *)v24 + 3) = v68;
  sub_1000D55D4(v64, v66, v70);
  swift_bridgeObjectRetain(v68);
  sub_1000215BC(v75, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v74, v72);
  sub_1000D31B4(v64, v66, v70);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_1009A3010);
  v77 = v125;
  sub_100037794((uint64_t)v24, (uint64_t)v125, &qword_100BC3B90);
  v78 = &v77[*(int *)(v126 + 36)];
  *(_QWORD *)v78 = KeyPath;
  *((_QWORD *)v78 + 1) = 1;
  v78[16] = 0;
  sub_100021A14((uint64_t)v24, &qword_100BC3B90);
  v79 = v133;
  sub_1000F111C((uint64_t)v77, (uint64_t)v133, &qword_100BD6A50);
  v139 = v134;
  v140 = v135;
  swift_bridgeObjectRetain(v135);
  v80 = Text.init<A>(_:)(&v139, &type metadata for String, v123);
  v82 = v81;
  v84 = v83;
  v86 = v85 & 1;
  static Font.Weight.bold.getter(v80);
  v87 = Font.weight(_:)(v136);
  v88 = v127;
  v89 = v129;
  v121(v127, v122, v129);
  v90 = Font.leading(_:)(v88, v87);
  v91 = swift_release();
  v124(v88, v89, v91);
  v92 = Text.font(_:)(v90, v80, v82, v86, v84);
  v94 = v93;
  LOBYTE(v74) = v95;
  v97 = v96;
  swift_release();
  sub_1000D31B4(v80, v82, v86);
  v98 = swift_bridgeObjectRelease();
  v99 = Text.monospacedDigit()(v92, v94, v74 & 1, v97, v98);
  v101 = v100;
  v103 = v102;
  LOBYTE(v86) = v104 & 1;
  sub_1000D31B4(v92, v94, v74 & 1);
  swift_bridgeObjectRelease();
  v105 = swift_getKeyPath(&unk_1009A3010);
  v106 = v137;
  sub_100037794((uint64_t)v79, (uint64_t)v137, &qword_100BD6A50);
  v107 = v138;
  sub_100037794((uint64_t)v106, v138, &qword_100BD6A50);
  v108 = sub_1000BA294(&qword_100BE5B20);
  v109 = v107 + *(int *)(v108 + 48);
  *(_QWORD *)v109 = 0x4010000000000000;
  *(_BYTE *)(v109 + 8) = 0;
  v110 = v107 + *(int *)(v108 + 64);
  *(_QWORD *)v110 = v99;
  *(_QWORD *)(v110 + 8) = v101;
  *(_BYTE *)(v110 + 16) = v86;
  *(_QWORD *)(v110 + 24) = v103;
  *(_QWORD *)(v110 + 32) = v105;
  *(_QWORD *)(v110 + 40) = 1;
  *(_BYTE *)(v110 + 48) = 0;
  sub_1000D55D4(v99, v101, v86);
  swift_bridgeObjectRetain(v103);
  swift_retain();
  sub_100021A14((uint64_t)v79, &qword_100BD6A50);
  sub_1000D31B4(v99, v101, v86);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v106, &qword_100BD6A50);
}

void sub_1004A601C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1004A30F0(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_1004A6024()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_100BE5950;
  if (!qword_100BE5950)
  {
    v1 = sub_100075EB0(&qword_100BE5918);
    v2 = sub_100075EB0(&qword_100BE5908);
    sub_10003D2DC(&qword_100BE5940, &qword_100BE5908);
    v4[0] = v2;
    v4[1] = v3;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE5950);
  }
  return result;
}

unint64_t sub_1004A60D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE5960;
  if (!qword_100BE5960)
  {
    v1 = sub_100075EB0(&qword_100BE5958);
    sub_10003D2DC(&qword_100BE5968, &qword_100BE5970);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE5960);
  }
  return result;
}

unint64_t sub_1004A6190()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_100BE5B28;
  if (!qword_100BE5B28)
  {
    v1 = sub_100075EB0(&qword_100BE5928);
    v2 = sub_100075EB0(&qword_100BE5918);
    v3 = sub_100075EB0(&qword_100BE5948);
    v4 = sub_1004A6024();
    v6 = sub_100075EB0(&qword_100BE5958);
    v7 = sub_1004A60D8();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v6 = v2;
    v7 = v3;
    v8 = v4;
    v9 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityRepresentation<A>(representation:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE5B28);
  }
  return result;
}

void sub_1004A6278()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[2];

  v0 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v0);
  v2 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ActivityAction(0);
  __chkstk_darwin(v3);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1002CA8E0();
  if (!v7)
  {
    v10 = sub_1000BAD10();
    v12 = 3;
    goto LABEL_5;
  }
  v8 = v6;
  v9 = v7;
  type metadata accessor for WeatherLocation();
  if ((sub_1005DC0B0(v8, v9) & 1) != 0)
  {
    swift_bridgeObjectRelease(v9);
    v10 = sub_1000BAD10();
    v12 = 4;
LABEL_5:
    swift_storeEnumTagMultiPayload(v10, v11, v12);
    v13 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    v14 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_10026563C((uint64_t)v5, v13 & 1, v14 & 1);
    sub_1001C8E48((uint64_t)v5);
    return;
  }
  v36[0] = v8;
  v36[1] = v9;
  sub_100114EF8();
  v15 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(44, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1);
  swift_bridgeObjectRelease(v9);
  if (v15[2] != 2
    || (v16 = v15[4],
        v17 = v15[5],
        v18 = v15[6],
        v19 = v15[7],
        swift_bridgeObjectRetain(v19),
        v20 = Double.init(_:)(v16, v17, v18, v19),
        (v21 & 1) != 0))
  {
    swift_bridgeObjectRelease(v15);
  }
  else if (v15[2] < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v22 = *(double *)&v20;
    v23 = v15[8];
    v24 = v15[9];
    v25 = v15[10];
    v26 = v15[11];
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(v15);
    *(double *)&v27 = COERCE_DOUBLE(Double.init(_:)(v23, v24, v25, v26));
    if ((v28 & 1) == 0)
    {
      v29 = v22;
      v30 = *(double *)&v27;
      v31 = sub_1002CA8FC();
      v33 = v32;
      v34 = type metadata accessor for Date(0);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v34);
      sub_1001C6D68();
      v35 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
      sub_1001C6064(v31, v33, 16, (uint64_t)v2, v35, v29, v30);
      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v33);
      sub_1001C8EF4((uint64_t)v2);
    }
  }
}

uint64_t type metadata accessor for NanoWeatherUserActivityHandler()
{
  return objc_opt_self(_TtC7Weather30NanoWeatherUserActivityHandler);
}

ValueMetadata *type metadata accessor for LocationViewPreprocessedDataModel()
{
  return &type metadata for LocationViewPreprocessedDataModel;
}

uint64_t sub_1004A654C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v13;
  unint64_t v14;
  char v16;

  if (a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275)
  {
    v5 = 0xEB00000000657275;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74617265706D6574, 0xEB00000000657275, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x74617265706D6574 && a2 == 0xEF74696E55657275)
  {
    v8 = 0xEF74696E55657275;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74617265706D6574, 0xEF74696E55657275, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000013)
  {
    v9 = 0x8000000100A06830;
    if (a2 == 0x8000000100A06830)
      goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A06830, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2;
  }
  if (a1 == 0x706D655468676968 && a2 == 0xEF65727574617265)
  {
    v11 = 0xEF65727574617265;
    goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x706D655468676968, 0xEF65727574617265, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3;
  }
  if (a1 == 0x65706D6554776F6CLL && a2 == 0xEE00657275746172)
  {
    v13 = 0xEE00657275746172;
    goto LABEL_37;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65706D6554776F6CLL, 0xEE00657275746172, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x80000001009F8F60)
  {
    v14 = 0x80000001009F8F60;
LABEL_43:
    swift_bridgeObjectRelease(v14);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x80000001009F8F60, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_43;
  }
  if (a1 == 0x5373736572646461 && a2 == 0xED0000676E697274)
  {
    swift_bridgeObjectRelease(0xED0000676E697274);
    return 6;
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(0x5373736572646461, 0xED0000676E697274, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v16 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1004A68AC()
{
  return 7;
}

uint64_t sub_1004A68B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004A68F0
                                                            + 4 * asc_1009A3070[a1]))(0x74617265706D6574, 0xEB00000000657275);
}

unint64_t sub_1004A6904()
{
  return 0xD000000000000013;
}

uint64_t sub_1004A6920()
{
  return 0x706D655468676968;
}

uint64_t sub_1004A6944()
{
  return 0x65706D6554776F6CLL;
}

unint64_t sub_1004A6968()
{
  return 0xD000000000000018;
}

uint64_t sub_1004A6988()
{
  return 0x5373736572646461;
}

uint64_t sub_1004A69AC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BE5BE8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1004A6FEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for LocationViewPreprocessedDataModel.CodingKeys, &type metadata for LocationViewPreprocessedDataModel.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v34 = 0;
  sub_1000BC254(v12, v13, (uint64_t)&v34);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v33 = 1;
    sub_1000B4A5C(v14, v15, (uint64_t)&v33);
    v16 = v3[4];
    v17 = v3[5];
    v32 = 2;
    sub_1000BC254(v16, v17, (uint64_t)&v32);
    v18 = v3[6];
    v19 = v3[7];
    v31 = 3;
    sub_1000BC254(v18, v19, (uint64_t)&v31);
    v20 = v3[8];
    v21 = v3[9];
    v30 = 4;
    sub_1000BC254(v20, v21, (uint64_t)&v30);
    v22 = v3[10];
    v23 = v3[11];
    v29 = 5;
    sub_1000BC254(v22, v23, (uint64_t)&v29);
    v24 = v3[12];
    v25 = v3[13];
    v28 = 6;
    sub_1000B4A5C(v24, v25, (uint64_t)&v28);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1004A6B34(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v5 = sub_1000BA294(&qword_100BE5BD8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1004A6FEC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LocationViewPreprocessedDataModel.CodingKeys, &type metadata for LocationViewPreprocessedDataModel.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_1000C52EC();
  }
  else
  {
    v50 = 0;
    v12 = sub_1000C2A48((uint64_t)&v50);
    v14 = v13;
    v49 = 1;
    sub_10009D328(v12, v13);
    v38 = sub_1000DBAB0((uint64_t)&v49);
    v39 = v12;
    v48 = 2;
    v16 = v15;
    sub_10009D328(v38, v15);
    v17 = sub_1000C2A48((uint64_t)&v48);
    v43 = v16;
    v37 = v17;
    v47 = 3;
    v42 = v18;
    swift_bridgeObjectRetain(v18);
    v19 = sub_1000C2A48((uint64_t)&v47);
    v41 = v20;
    v36 = v19;
    v46 = 4;
    sub_10009D328(v19, v20);
    v35 = sub_1000C2A48((uint64_t)&v46);
    v45 = 5;
    v40 = v21;
    swift_bridgeObjectRetain(v21);
    v33 = sub_1000C2A48((uint64_t)&v45);
    v34 = v22;
    v44 = 6;
    sub_10009D328(v33, v22);
    v23 = sub_1000DBAB0((uint64_t)&v44);
    v25 = v24;
    v26 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32 = v23;
    v26(v8, v5);
    swift_bridgeObjectRetain(v25);
    sub_1000C52EC();
    swift_bridgeObjectRelease();
    v27 = v34;
    swift_bridgeObjectRelease();
    v28 = v40;
    swift_bridgeObjectRelease();
    v29 = v41;
    swift_bridgeObjectRelease();
    v30 = v42;
    swift_bridgeObjectRelease();
    v31 = v43;
    swift_bridgeObjectRelease();
    sub_100075DF4();
    *a2 = v39;
    a2[1] = v14;
    a2[2] = v38;
    a2[3] = v31;
    a2[4] = v37;
    a2[5] = v30;
    a2[6] = v36;
    a2[7] = v29;
    a2[8] = v35;
    a2[9] = v28;
    a2[10] = v33;
    a2[11] = v27;
    a2[12] = v32;
    a2[13] = v25;
  }
}

uint64_t sub_1004A6EEC()
{
  unsigned __int8 *v0;

  return sub_1004A68B4(*v0);
}

uint64_t sub_1004A6EF4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004A654C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004A6F18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1004A68AC();
  *a1 = result;
  return result;
}

uint64_t sub_1004A6F3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004A6FEC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004A6F64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004A6FEC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1004A6F8C(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4[14];

  sub_1004A6B34(a1, v4);
  if (!v2)
    memcpy(a2, v4, 0x70uLL);
}

uint64_t sub_1004A6FD4(_QWORD *a1)
{
  return sub_1004A69AC(a1);
}

unint64_t sub_1004A6FEC()
{
  unint64_t result;

  result = qword_100BE5BE0;
  if (!qword_100BE5BE0)
  {
    result = swift_getWitnessTable(&unk_1009A3220, &type metadata for LocationViewPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5BE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LocationViewPreprocessedDataModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1004A7074 + 4 * byte_1009A307C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1004A70A8 + 4 * byte_1009A3077[v4]))();
}

uint64_t sub_1004A70A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A70B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004A70B8);
  return result;
}

uint64_t sub_1004A70C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004A70CCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1004A70D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A70D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationViewPreprocessedDataModel.CodingKeys()
{
  return &type metadata for LocationViewPreprocessedDataModel.CodingKeys;
}

unint64_t sub_1004A70F8()
{
  unint64_t result;

  result = qword_100BE5BF0;
  if (!qword_100BE5BF0)
  {
    result = swift_getWitnessTable(&unk_1009A31F8, &type metadata for LocationViewPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5BF0);
  }
  return result;
}

unint64_t sub_1004A7138()
{
  unint64_t result;

  result = qword_100BE5BF8;
  if (!qword_100BE5BF8)
  {
    result = swift_getWitnessTable(&unk_1009A3168, &type metadata for LocationViewPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5BF8);
  }
  return result;
}

unint64_t sub_1004A7178()
{
  unint64_t result;

  result = qword_100BE5C00;
  if (!qword_100BE5C00)
  {
    result = swift_getWitnessTable(&unk_1009A3190, &type metadata for LocationViewPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5C00);
  }
  return result;
}

uint64_t sub_1004A71B4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1004A7200 + 4 * byte_1009A3275[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1004A7234 + 4 * byte_1009A3270[v4]))();
}

uint64_t sub_1004A7234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A723C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004A7244);
  return result;
}

uint64_t sub_1004A7250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004A7258);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1004A725C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A7264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReportWeatherDescription()
{
  sub_100098884();
}

uint64_t sub_1004A727C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1004A72C8 + 4 * byte_1009A327F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1004A72FC + 4 * byte_1009A327A[v4]))();
}

uint64_t sub_1004A72FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A7304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004A730CLL);
  return result;
}

uint64_t sub_1004A7318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004A7320);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1004A7324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A732C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReportWeatherOtherCondition()
{
  sub_100098884();
}

void type metadata accessor for ReportWeatherAirQualityRating()
{
  sub_100098884();
}

void type metadata accessor for ReportWeatherWindRating()
{
  sub_100098884();
}

uint64_t sub_1004A7360(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004A73AC + 4 * byte_1009A3289[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004A73E0 + 4 * byte_1009A3284[v4]))();
}

uint64_t sub_1004A73E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A73E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004A73F0);
  return result;
}

uint64_t sub_1004A73FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004A7404);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004A7408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A7410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReportWeatherTemperatureRating()
{
  sub_100098884();
}

uint64_t sub_1004A7428()
{
  return sub_1004A8F00(&qword_100BE5C08, &qword_100BE48D8);
}

void sub_1004A744C(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_10015F3E0);
}

void sub_1004A7458(char a1)
{
  sub_1001D9CA8(0, a1);
}

void sub_1004A7464(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D8608);
}

void sub_1004A7470(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D854C);
}

void sub_1004A747C(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))LocationAuthorizationState.rawValue.getter);
}

void sub_1004A7488(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D8C50);
}

void sub_1004A7494(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100269170);
}

void sub_1004A74A0(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100281014);
}

void sub_1004A74B0(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D8AD4);
}

void sub_1004A74BC(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_1002CA6E4);
}

void sub_1004A74C8()
{
  sub_1001D9A4C(0);
}

void sub_1004A74D4()
{
  sub_1001D9AB4(0);
}

void sub_1004A74E0(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_1004EB598);
}

void sub_1004A74EC(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_1004FDDF8);
}

void sub_1004A74F8(char a1)
{
  sub_1001D98C4(0, a1);
}

void sub_1004A7504(char a1)
{
  sub_1001D9960(0, a1);
}

void sub_1004A7510()
{
  sub_1001D99D0(0);
}

void sub_1004A751C(Swift::UInt a1)
{
  sub_1000C4480(a1);
  Hasher._combine(_:)(a1);
  sub_10007A148();
  sub_100098918();
}

void sub_1004A754C()
{
  sub_1001D9B38(0);
}

void sub_1004A7558(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_1008259C4);
}

void sub_1004A7564()
{
  sub_1000D01A4(0x343230326C6C6166);
}

void sub_1004A7578(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))DetailKind.rawValue.getter);
}

void sub_1004A7584(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = a1;
  sub_1000C4480(a1);
  Hasher._combine(_:)(2 * v1 + 2);
  sub_10007A148();
  sub_100098918();
}

void sub_1004A75BC()
{
  sub_1001D9BE8(0);
}

void sub_1004A75C8()
{
  sub_1001D9C44(0);
}

void sub_1004A75D4(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100731564);
}

void sub_1004A75E0(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100731734);
}

void sub_1004A75EC(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100763D7C);
}

void sub_1004A75F8()
{
  sub_1001D9D4C(0);
}

void sub_1004A7604(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_1004142A4);
}

void sub_1004A7610(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100630F8C);
}

void sub_1004A761C(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D8CB0);
}

void sub_1004A7628()
{
  sub_1001D9DEC(0);
}

void sub_1004A7634(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D8B3C);
}

void sub_1004A7640(char a1)
{
  sub_1001D9E60(0, a1);
}

void sub_1004A764C()
{
  sub_1001D9EDC(0);
}

void sub_1004A7658(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D8990);
}

void sub_1004A7664()
{
  sub_1001D9F34(0);
}

void sub_1004A7670(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_1007B2D60);
}

void sub_1004A767C(uint64_t a1)
{
  char v1;
  _BYTE v2[72];

  v1 = a1 & 1;
  sub_1000C4480(a1);
  sub_1001D87C8((uint64_t)v2, v1);
  sub_10007A148();
  sub_100098918();
}

void sub_1004A76AC(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D879C);
}

void sub_1004A76B8(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100103744);
}

void sub_1004A76C4()
{
  sub_1001DA004(0);
}

void sub_1004A76D0(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_1008D63C0);
}

void sub_1004A76DC()
{
  sub_1001DA080(0);
}

void sub_1004A76E8()
{
  sub_1000D01A4(0x6E6F697469736F70);
}

void sub_1004A76FC(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100381A0C);
}

void sub_1004A7708(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_100381C5C);
}

void sub_1004A7714(uint64_t a1)
{
  sub_1004A7720(a1, (void (*)(_BYTE *, uint64_t))sub_1001D8438);
}

void sub_1004A7720(uint64_t a1, void (*a2)(_BYTE *, uint64_t))
{
  _BYTE v4[72];

  sub_1000C4480(a1);
  a2(v4, a1);
  sub_10007A148();
  sub_100098918();
}

void sub_1004A7754()
{
  sub_1001DA164(0);
}

void sub_1004A7760()
{
  sub_1004A77FC(1953720684, 0xE400000000000000);
}

void sub_1004A7770()
{
  sub_1001DA1C0(0);
}

void sub_1004A777C()
{
  sub_1001DA224(0);
}

void sub_1004A7788()
{
  sub_1001DA2A0(0);
}

void sub_1004A7794(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_10076C288);
}

void sub_1004A77A0(uint64_t a1)
{
  sub_1004A77AC(a1, (uint64_t (*)(uint64_t))sub_10076D8D4);
}

void sub_1004A77AC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[72];

  sub_1000C4480(a1);
  v4 = a2(a1);
  String.hash(into:)(v6, v4, v5);
  swift_bridgeObjectRelease();
  sub_10007A148();
  sub_100098918();
}

void sub_1004A77FC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1000C4480(a1);
  String.hash(into:)(v4, a1, a2);
  sub_10007A148();
  sub_100098918();
}

void sub_1004A7834()
{
  sub_1001DA3A0(0);
}

uint64_t sub_1004A7840(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  NSBundle v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v22;

  v2 = type metadata accessor for Locale.Language(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  if (!a1)
  {
    v7 = sub_10009D634();
    Locale.language.getter(v7);
    v8 = sub_1000CFD4C();
    Locale.Language.prefersObjectiveTemperatureTerminology.getter(v8);
    sub_1000D9044();
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((v4 & 1) != 0)
    {
      sub_1000989C4();
      sub_1000B2FC4();
LABEL_10:
      sub_10003BCE4();
      v20 = 0xD00000000000003ELL;
      goto LABEL_11;
    }
LABEL_9:
    sub_1000D1E78();
    goto LABEL_10;
  }
  if (a1 != 1)
  {
    v10 = sub_10009D634();
    Locale.language.getter(v10);
    v11 = sub_1000CFD4C();
    Locale.Language.prefersObjectiveTemperatureTerminology.getter(v11);
    sub_1000D9044();
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((v4 & 1) != 0)
    {
      sub_1000989C4();
      sub_1000B2FC4();
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000989C4();
  sub_1000C4A2C();
LABEL_8:
  sub_10003BCE4();
LABEL_11:
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, *(Swift::String_optional *)&v15, v17, *(Swift::String *)&v18, *(Swift::String *)&v20);
  sub_1000C362C();
  return sub_1000B3154();
}

void sub_1004A7A64(char a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  NSBundle v7;
  uint64_t v8;
  unint64_t v10;
  id v11;
  unint64_t v12;

  if (a1)
  {
    if (a1 != 1)
    {
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      sub_1000BA330();
      sub_1000B2FC4();
      sub_10003BCE4();
      goto LABEL_7;
    }
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v12 = 0x8000000100A06B70;
    sub_1000C4A2C();
  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    sub_100098DD0();
  }
  sub_10003BCE4();
  v10 = 0xD000000000000032;
LABEL_7:
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v5, v7, *(Swift::String *)&v8, *(Swift::String *)(&v12 - 1));
  sub_1000C362C();
  sub_1000B3154();
  sub_100099960();
}

void sub_1004A7B80(char a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  NSBundle v7;
  uint64_t v8;
  unint64_t v10;
  id v11;
  unint64_t v12;

  if (a1)
  {
    if (a1 == 1)
    {
      v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0x8000000100A06A90;
      sub_1000C4A2C();
    }
    else
    {
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      sub_100098DD0();
    }
    sub_10003BCE4();
    v10 = 0xD000000000000039;
  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v12 = 0x8000000100A06AD0;
    sub_10003BCE4();
  }
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v5, v7, *(Swift::String *)&v8, *(Swift::String *)(&v12 - 1));
  sub_1000C362C();
  sub_1000B3154();
  sub_100099960();
}

_UNKNOWN **sub_1004A7CAC()
{
  return &off_100B5A2F8;
}

void sub_1004A7CB8(char a1)
{
  __asm { BR              X10 }
}

void sub_1004A7CE8()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  NSBundle v3;
  Swift::String v4;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000D9E78();
  sub_1000BA330();
  sub_10003BCE4();
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, v3, v4, v5);
  sub_1000C362C();
  sub_1000B3154();
  sub_100099960();
}

uint64_t sub_1004A7EBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t))((char *)sub_1004A7EFC + 4 * byte_1009A328E[a1]))(0x2E776F626E696172, 0xEC0000006C6C6966, 1);
}

uint64_t sub_1004A7EFC()
{
  return 0x6F622E64756F6C63;
}

uint64_t sub_1004A7F28()
{
  return 0x61682E64756F6C63;
}

uint64_t sub_1004A7F50()
{
  return 0x69662E656B6F6D73;
}

uint64_t sub_1004A7F70()
{
  return 0x6F662E64756F6C63;
}

uint64_t sub_1004A7F98()
{
  return 0x657A61682E6E7573;
}

_UNKNOWN **sub_1004A7FC0()
{
  return &off_100B5A320;
}

unint64_t sub_1004A7FCC(char a1)
{
  return 0x607040502030001uLL >> (8 * a1);
}

void sub_1004A7FEC(char a1)
{
  __asm { BR              X10 }
}

void sub_1004A801C()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  NSBundle v3;
  Swift::String v4;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000D965C();
  sub_1000BA330();
  sub_10003BCE4();
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, v3, v4, v5);
  sub_1000C362C();
  sub_1000B3154();
  sub_100099960();
}

void sub_1004A8280()
{
  sub_1000C0EA8();
  __asm { BR              X10 }
}

void sub_1004A82B0()
{
  Swift::String v0;
  Swift::String_optional v1;
  NSBundle v2;
  Swift::String v3;
  Swift::String v4;

  objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000BA330();
  sub_10003BCE4();
  v4._countAndFlagsBits = 0xD000000000000036;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v0, v1, v2, v3, v4);
  sub_1000C362C();
  sub_1000B3154();
  sub_100099960();
}

void sub_1004A83CC()
{
  qword_100CAEBF0 = (uint64_t)&off_100B5A348;
}

void sub_1004A83E0()
{
  Swift::OpaquePointer v0;
  uint64_t v1;

  sub_1000DA5F4();
  v0._rawValue = &off_100B5A370;
  sub_1000C1680(v0, v1);
  sub_10009DED8();
  sub_10004A298();
}

uint64_t sub_1004A8414(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004A8440 + 4 * byte_1009A3294[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1004A8440()
{
  return 0x796C74726170;
}

uint64_t sub_1004A8464()
{
  return 0x796C6C7566;
}

void sub_1004A8478()
{
  sub_10068C854();
}

void sub_1004A8484(_BYTE *a1@<X8>)
{
  char v2;

  sub_1004A83E0();
  *a1 = v2;
}

void sub_1004A84B0()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_1000CD7A8();
  *v0 = sub_1004A8414(v1);
  v0[1] = v2;
  sub_10004A298();
}

void sub_1004A84D0()
{
  sub_1004A8280();
}

void sub_1004A84D8()
{
  sub_1000C0EA8();
  __asm { BR              X10 }
}

void sub_1004A8508()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String_optional v3;
  NSBundle v4;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000C5F64();
  sub_1000BA330();
  sub_1001102F8();
  sub_1000C66B4();
  v1._countAndFlagsBits = 0x746867694CLL;
  v1._object = (void *)0xE500000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, v4, v1, v5);
  sub_1000C362C();
  sub_1000B3154();
  sub_100099960();
}

void sub_1004A87B8()
{
  qword_100CAEBF8 = (uint64_t)&off_100B5A3F0;
}

void sub_1004A87CC()
{
  qword_100CAEC00 = (uint64_t)&off_100B5A418;
}

void sub_1004A87E0()
{
  qword_100CAEC08 = (uint64_t)&off_100B5A440;
}

void sub_1004A87F4()
{
  Swift::OpaquePointer v0;
  uint64_t v1;

  sub_1000DA5F4();
  v0._rawValue = &off_100B5A468;
  sub_1000C1680(v0, v1);
  sub_10009DED8();
  sub_10004A298();
}

uint64_t sub_1004A8828(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004A8854 + 4 * byte_1009A3298[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1004A8854()
{
  return 0x696152746867696CLL;
}

uint64_t sub_1004A88A0()
{
  return 0x656C53746867696CLL;
}

uint64_t sub_1004A88EC()
{
  return 0x6F6E53746867696CLL;
}

uint64_t sub_1004A890C()
{
  return 0x6E536D756964656DLL;
}

uint64_t sub_1004A8930()
{
  return 0x6F6E537976616568;
}

void sub_1004A8950()
{
  sub_10068C0F0();
}

void sub_1004A895C(_BYTE *a1@<X8>)
{
  char v2;

  sub_1004A87F4();
  *a1 = v2;
}

void sub_1004A8988()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_1000CD7A8();
  *v0 = sub_1004A8828(v1);
  v0[1] = v2;
  sub_10004A298();
}

void sub_1004A89A8()
{
  sub_1004A84D8();
}

uint64_t sub_1004A89B0(char a1)
{
  if (!a1)
    return 0x72656D726177;
  if (a1 == 1)
    return 0x616365726F467361;
  return 0x7265646C6F63;
}

void sub_1004A8A04(char a1)
{
  if (!a1)
    sub_1000B2FC4();
}

void sub_1004A8A5C()
{
  void *v0;
  Swift::OpaquePointer v1;
  uint64_t v2;

  sub_1000DA5F4();
  v1._rawValue = v0;
  sub_1000C1680(v1, v2);
  sub_10009DED8();
  sub_10004A298();
}

void sub_1004A8A8C(char a1)
{
  if (!a1)
    sub_1000B2FC4();
}

void sub_1004A8AE4()
{
  Swift::OpaquePointer v0;
  uint64_t v1;

  sub_1000DA5F4();
  v0._rawValue = &off_100B5A6B0;
  sub_1000C1680(v0, v1);
  sub_10009DED8();
  sub_10004A298();
}

uint64_t sub_1004A8B18(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004A8B4C + 4 * byte_1009A32A2[a1]))(0x73776F626E696172, 0xE800000000000000);
}

uint64_t sub_1004A8B4C()
{
  return 0x6E696E746867696CLL;
}

uint64_t sub_1004A8B68()
{
  return 1818845544;
}

uint64_t sub_1004A8B78()
{
  return 0x656B6F6D73;
}

uint64_t sub_1004A8B8C()
{
  return 6778726;
}

uint64_t sub_1004A8B9C()
{
  return 1702519144;
}

void sub_1004A8BAC()
{
  Swift::OpaquePointer v0;
  uint64_t v1;

  sub_1000DA5F4();
  v0._rawValue = &off_100B5A760;
  sub_1000C1680(v0, v1);
  sub_10009DED8();
  sub_10004A298();
}

uint64_t sub_1004A8BE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004A8C14 + 4 * byte_1009A32A8[a1]))(0x746E617361656C70, 0xE800000000000000);
}

uint64_t sub_1004A8C14()
{
  return 0x617361656C706E75;
}

uint64_t sub_1004A8C30()
{
  return 7630696;
}

uint64_t sub_1004A8C40()
{
  return 0x796C6C696863;
}

uint64_t sub_1004A8C54()
{
  return 0x796767756DLL;
}

uint64_t sub_1004A8C88()
{
  return 1835819363;
}

void sub_1004A8C98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_10068C318(*a1, *a2);
}

void sub_1004A8CA4(_BYTE *a1@<X8>)
{
  char v2;

  sub_1004A8A5C();
  *a1 = v2;
}

void sub_1004A8CD8()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;

  v1 = sub_1000CD7A8();
  *v0 = sub_1004A89B0(v1);
  v0[1] = v2;
  sub_10004A298();
}

uint64_t sub_1004A8CF8()
{
  char *v0;

  return sub_1004A7840(*v0);
}

void sub_1004A8D00(_QWORD *a1@<X8>)
{
  *a1 = &off_100B5A280;
}

uint64_t sub_1004A8D10()
{
  return sub_1004A8F00(&qword_100BE5C10, &qword_100BE4830);
}

void sub_1004A8D34()
{
  sub_10068C3F8();
}

void sub_1004A8D40(_BYTE *a1@<X8>)
{
  char v2;

  sub_1004A8A5C();
  *a1 = v2;
}

void sub_1004A8D74()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1000CD7A8();
  sub_1004A8A04(v1);
  *v0 = v2;
  v0[1] = v3;
  sub_10004A298();
}

void sub_1004A8D94()
{
  char *v0;

  sub_1004A7A64(*v0);
}

void sub_1004A8D9C(_QWORD *a1@<X8>)
{
  *a1 = &off_100B5A2A8;
}

uint64_t sub_1004A8DAC()
{
  return sub_1004A8F00(&qword_100BE5C18, &qword_100BE4628);
}

void sub_1004A8DD0(char *a1, char *a2)
{
  sub_10068C4A4(*a1, *a2);
}

void sub_1004A8DDC(_BYTE *a1@<X8>)
{
  char v2;

  sub_1004A8A5C();
  *a1 = v2;
}

void sub_1004A8E10()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1000CD7A8();
  sub_1004A8A8C(v1);
  *v0 = v2;
  v0[1] = v3;
  sub_10004A298();
}

void sub_1004A8E30()
{
  char *v0;

  sub_1004A7B80(*v0);
}

void sub_1004A8E38(_QWORD *a1@<X8>)
{
  *a1 = &off_100B5A2D0;
}

uint64_t sub_1004A8E48()
{
  return sub_1004A8F00(&qword_100BE5C20, &qword_100BE4760);
}

void sub_1004A8E6C(char *a1)
{
  sub_10068C6FC(*a1);
}

void sub_1004A8E78(_BYTE *a1@<X8>)
{
  char v2;

  sub_1004A8AE4();
  *a1 = v2;
}

void sub_1004A8EA4()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_1000CD7A8();
  *v0 = sub_1004A8B18(v1);
  v0[1] = v2;
  sub_10004A298();
}

void sub_1004A8EC4()
{
  char *v0;

  sub_1004A7CB8(*v0);
}

void sub_1004A8ECC(_QWORD *a1@<X8>)
{
  *a1 = &off_100B5A2F8;
}

uint64_t sub_1004A8EDC()
{
  return sub_1004A8F00(&qword_100BE5C28, &qword_100BE5C30);
}

uint64_t sub_1004A8F00(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100075EB0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1004A8F40(char *a1)
{
  sub_10068C55C(*a1);
}

void sub_1004A8F4C(_BYTE *a1@<X8>)
{
  char v2;

  sub_1004A8BAC();
  *a1 = v2;
}

void sub_1004A8F78()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_1000CD7A8();
  *v0 = sub_1004A8BE0(v1);
  v0[1] = v2;
  sub_10004A298();
}

void sub_1004A8F98()
{
  char *v0;

  sub_1004A7FEC(*v0);
}

void sub_1004A8FA0(_QWORD *a1@<X8>)
{
  *a1 = &off_100B5A320;
}

void sub_1004A8FB0()
{
  unsigned __int8 *v0;

  sub_1004A7720(*v0, (void (*)(_BYTE *, uint64_t))sub_1001D9524);
}

void sub_1004A8FD0()
{
  sub_1001D9524();
}

void sub_1004A8FD8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D9948(a1, *v1);
}

void sub_1004A8FE0()
{
  unsigned __int8 *v0;

  sub_1004A77AC(*v0, (uint64_t (*)(uint64_t))sub_1004A8828);
}

void sub_1004A9000()
{
  sub_1001D9290();
}

void sub_1004A9008(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D9A40(a1, *v1);
}

void sub_1004A9010()
{
  sub_1004A7510();
}

double sub_1004A9018(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D93A4(a1, *v1);
}

void sub_1004A9020(uint64_t a1)
{
  sub_1001D99D0(a1);
}

void sub_1004A9028()
{
  char *v0;

  sub_1004A74F8(*v0);
}

double sub_1004A9030(uint64_t a1)
{
  char *v1;

  return sub_1001D9660(a1, *v1);
}

void sub_1004A9038(uint64_t a1)
{
  char *v1;

  sub_1001D98C4(a1, *v1);
}

void sub_1004A9040()
{
  char *v0;

  sub_1004A7504(*v0);
}

double sub_1004A9048(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D9404(a1, *v1);
}

void sub_1004A9050(uint64_t a1)
{
  char *v1;

  sub_1001D9960(a1, *v1);
}

void sub_1004A9058()
{
  unsigned __int8 *v0;

  sub_1004A77AC(*v0, (uint64_t (*)(uint64_t))sub_1004A8B18);
}

void sub_1004A9078(uint64_t a1)
{
  char *v1;

  sub_1001D9478(a1, *v1);
}

void sub_1004A9080(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D9954(a1, *v1);
}

void sub_1004A9088()
{
  unsigned __int8 *v0;

  sub_1004A77AC(*v0, (uint64_t (*)(uint64_t))sub_1004A8BE0);
}

void sub_1004A90A8(uint64_t a1)
{
  char *v1;

  sub_1001D9590(a1, *v1);
}

void sub_1004A90B0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D993C(a1, *v1);
}

uint64_t sub_1004A90B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A97D0();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004A9114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A97D0();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1004A9160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A980C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004A91BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A980C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1004A9208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A9848();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004A9264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A9848();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1004A92B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A9884();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004A930C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A9884();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1004A9358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A98C0();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004A93B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A98C0();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1004A9400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A98FC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004A945C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A98FC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1004A94A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A9938();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004A9504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004A9938();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1004A9550(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_10069554C(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1004A9578(uint64_t a1)
{
  char *v1;

  sub_1006955D4(a1, *v1);
}

void sub_1004A9590(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_10069574C(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1004A95B8(uint64_t a1)
{
  char *v1;

  sub_100695760(a1, *v1);
}

void sub_1004A95D0(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  static MoonPhase.read(from:)(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1004A95F8(uint64_t a1)
{
  char *v1;

  MoonPhase.write(to:)(a1, *v1);
}

unint64_t sub_1004A9614()
{
  unint64_t result;

  result = qword_100BE5C38;
  if (!qword_100BE5C38)
  {
    result = swift_getWitnessTable(&unk_1009A3708, &unk_100B76490);
    atomic_store(result, (unint64_t *)&qword_100BE5C38);
  }
  return result;
}

unint64_t sub_1004A9654()
{
  unint64_t result;

  result = qword_100BE5C40;
  if (!qword_100BE5C40)
  {
    result = swift_getWitnessTable(&unk_1009A3648, &unk_100B76520);
    atomic_store(result, (unint64_t *)&qword_100BE5C40);
  }
  return result;
}

unint64_t sub_1004A9694()
{
  unint64_t result;

  result = qword_100BE5C48;
  if (!qword_100BE5C48)
  {
    result = swift_getWitnessTable(&unk_1009A3588, &unk_100B765B0);
    atomic_store(result, (unint64_t *)&qword_100BE5C48);
  }
  return result;
}

unint64_t sub_1004A96D4()
{
  unint64_t result;

  result = qword_100BE5C50;
  if (!qword_100BE5C50)
  {
    result = swift_getWitnessTable(&unk_1009A34C8, &unk_100B76640);
    atomic_store(result, (unint64_t *)&qword_100BE5C50);
  }
  return result;
}

unint64_t sub_1004A9714()
{
  unint64_t result;

  result = qword_100BE5C58;
  if (!qword_100BE5C58)
  {
    result = swift_getWitnessTable(&unk_1009A3408, &unk_100B766D0);
    atomic_store(result, (unint64_t *)&qword_100BE5C58);
  }
  return result;
}

unint64_t sub_1004A9754()
{
  unint64_t result;

  result = qword_100BE5C60;
  if (!qword_100BE5C60)
  {
    result = swift_getWitnessTable(&unk_1009A3D10, &unk_100B76760);
    atomic_store(result, (unint64_t *)&qword_100BE5C60);
  }
  return result;
}

unint64_t sub_1004A9794()
{
  unint64_t result;

  result = qword_100BE5C68;
  if (!qword_100BE5C68)
  {
    result = swift_getWitnessTable(&unk_1009A3D78, &unk_100B767F0);
    atomic_store(result, (unint64_t *)&qword_100BE5C68);
  }
  return result;
}

unint64_t sub_1004A97D0()
{
  unint64_t result;

  result = qword_100BE5C70;
  if (!qword_100BE5C70)
  {
    result = swift_getWitnessTable(&unk_1009A3E74, &unk_100B767F0);
    atomic_store(result, (unint64_t *)&qword_100BE5C70);
  }
  return result;
}

unint64_t sub_1004A980C()
{
  unint64_t result;

  result = qword_100BE5C78;
  if (!qword_100BE5C78)
  {
    result = swift_getWitnessTable(&unk_1009A3E3C, &unk_100B76760);
    atomic_store(result, (unint64_t *)&qword_100BE5C78);
  }
  return result;
}

unint64_t sub_1004A9848()
{
  unint64_t result;

  result = qword_100BE5C80;
  if (!qword_100BE5C80)
  {
    result = swift_getWitnessTable(&unk_1009A33D0, &unk_100B766D0);
    atomic_store(result, (unint64_t *)&qword_100BE5C80);
  }
  return result;
}

unint64_t sub_1004A9884()
{
  unint64_t result;

  result = qword_100BE5C88;
  if (!qword_100BE5C88)
  {
    result = swift_getWitnessTable(&unk_1009A3490, &unk_100B76640);
    atomic_store(result, (unint64_t *)&qword_100BE5C88);
  }
  return result;
}

unint64_t sub_1004A98C0()
{
  unint64_t result;

  result = qword_100BE5C90;
  if (!qword_100BE5C90)
  {
    result = swift_getWitnessTable(&unk_1009A3550, &unk_100B765B0);
    atomic_store(result, (unint64_t *)&qword_100BE5C90);
  }
  return result;
}

unint64_t sub_1004A98FC()
{
  unint64_t result;

  result = qword_100BE5C98;
  if (!qword_100BE5C98)
  {
    result = swift_getWitnessTable(&unk_1009A3610, &unk_100B76520);
    atomic_store(result, (unint64_t *)&qword_100BE5C98);
  }
  return result;
}

unint64_t sub_1004A9938()
{
  unint64_t result;

  result = qword_100BE5CA0;
  if (!qword_100BE5CA0)
  {
    result = swift_getWitnessTable(&unk_1009A36D0, &unk_100B76490);
    atomic_store(result, (unint64_t *)&qword_100BE5CA0);
  }
  return result;
}

uint64_t sub_1004A9974(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1004A99C0 + 4 * byte_1009A32B5[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1004A99F4 + 4 * byte_1009A32B0[v4]))();
}

uint64_t sub_1004A99F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A99FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004A9A04);
  return result;
}

uint64_t sub_1004A9A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004A9A18);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1004A9A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A9A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReportWeatherPrecipitationIntensity()
{
  sub_100098884();
}

uint64_t sub_1004A9A3C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1004A9A88 + 4 * byte_1009A32BF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004A9ABC + 4 * byte_1009A32BA[v4]))();
}

uint64_t sub_1004A9ABC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A9AC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004A9ACCLL);
  return result;
}

uint64_t sub_1004A9AD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004A9AE0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1004A9AE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004A9AEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReportWeatherCloudCoverKind()
{
  sub_100098884();
}

uint64_t LocationSearchEntityFromWeatherCoreResolver.resolve(from:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch(sub_1004A9B1C, 0, 0);
}

uint64_t sub_1004A9B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v24;

  v24 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 56) = LocationEntity.id.getter();
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = 44;
  *(_QWORD *)(v0 + 80) = 0xE100000000000000;
  *(_QWORD *)(v0 + 88) = 58;
  *(_QWORD *)(v0 + 96) = 0xE100000000000000;
  sub_100114EF8();
  v2 = sub_1000BADA4();
  v4 = v3;
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_1000BC2E8();
  v6._countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  *(_QWORD *)&v7 = swift_bridgeObjectRelease().n128_u64[0];
  *(_QWORD *)(v0 + 56) = LocationEntity.name.getter(v7);
  *(_QWORD *)(v0 + 64) = v8;
  *(_QWORD *)(v0 + 72) = 58;
  *(_QWORD *)(v0 + 80) = 0xE100000000000000;
  *(_QWORD *)(v0 + 88) = 0;
  *(_QWORD *)(v0 + 96) = 0xE000000000000000;
  v9 = sub_1000BADA4();
  v11 = v10;
  swift_bridgeObjectRelease();
  sub_1000BC2E8();
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13 = swift_bridgeObjectRelease().n128_u64[0];
  v14 = LocationEntity.name.getter(v13);
  v16 = v15;
  v19 = (void *)LocationEntity.placemark.getter(v14, v15, v17, v18);
  LocationSearchEntity.init(id:name:placemark:isLocal:)(0x6E6F697461636F4CLL, 0xEB000000003A4449, v14, v16, v19, 0, v0 + 16);
  v20 = *(_QWORD *)(v0 + 40);
  v21 = *(_BYTE *)(v0 + 48);
  v22 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)v24 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v24 + 8) = v22;
  *(_QWORD *)(v24 + 24) = v20;
  *(_BYTE *)(v24 + 32) = v21;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004A9D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 56) = a1;
  v4 = (_QWORD *)swift_task_alloc(dword_100BE5CAC);
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_100237DA0;
  return LocationSearchEntityFromWeatherCoreResolver.resolve(from:context:)(v2 + 16, a2);
}

unint64_t sub_1004A9D74()
{
  unint64_t result;

  result = qword_100BE5CB0;
  if (!qword_100BE5CB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationSearchEntityFromWeatherCoreResolver, &type metadata for LocationSearchEntityFromWeatherCoreResolver);
    atomic_store(result, (unint64_t *)&qword_100BE5CB0);
  }
  return result;
}

unint64_t sub_1004A9DB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE5CB8;
  if (!qword_100BE5CB8)
  {
    v1 = type metadata accessor for LocationEntity(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationEntity, v1);
    atomic_store(result, (unint64_t *)&qword_100BE5CB8);
  }
  return result;
}

unint64_t sub_1004A9DF8()
{
  unint64_t result;

  result = qword_100BE5CC8;
  if (!qword_100BE5CC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationSearchEntityFromWeatherCoreResolver, &type metadata for LocationSearchEntityFromWeatherCoreResolver);
    atomic_store(result, (unint64_t *)&qword_100BE5CC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSearchEntityFromWeatherCoreResolver()
{
  return &type metadata for LocationSearchEntityFromWeatherCoreResolver;
}

uint64_t getEnumTagSinglePayload for Previous(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[56])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Previous(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Previous()
{
  return &type metadata for Previous;
}

uint64_t sub_1004A9EE0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

double sub_1004A9EE8()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t *sub_1004A9EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = (int *)type metadata accessor for DetailChartSelection(0);
      v16 = v15[5];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for Date(0);
      v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
      v21 = swift_bridgeObjectRetain(v14);
      v20(v17, v18, v19, v21);
      ((void (*)(char *, char *, uint64_t))v20)((char *)a1 + v15[6], (char *)a2 + v15[6], v19);
      ((void (*)(char *, char *, uint64_t))v20)((char *)a1 + v15[7], (char *)a2 + v15[7], v19);
      *(uint64_t *)((char *)a1 + v15[8]) = *(uint64_t *)((char *)a2 + v15[8]);
      v22 = v15[9];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v23[8] = v24[8];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v10 = a1;
      v11 = a3;
      v12 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v25 = type metadata accessor for DetailCondition(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v9 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_1004AA0A4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload(a1);
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    v4 = (int *)type metadata accessor for DetailChartSelection(0);
    v5 = a1 + v4[5];
    v6 = type metadata accessor for Date(0);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(v5, v6);
    v7(a1 + v4[6], v6);
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + v4[7], v6);
  }
  else
  {
    if ((_DWORD)result == 1)
    {
      v3 = type metadata accessor for DetailCondition(0);
    }
    else
    {
      if ((_DWORD)result)
        return result;
      v3 = type metadata accessor for Date(0);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

_QWORD *sub_1004AA18C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = (int *)type metadata accessor for DetailChartSelection(0);
    v13 = v12[5];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Date(0);
    v17 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
    v18 = swift_bridgeObjectRetain(v11);
    v17(v14, v15, v16, v18);
    ((void (*)(char *, char *, uint64_t))v17)((char *)a1 + v12[6], (char *)a2 + v12[6], v16);
    ((void (*)(char *, char *, uint64_t))v17)((char *)a1 + v12[7], (char *)a2 + v12[7], v16);
    *(_QWORD *)((char *)a1 + v12[8]) = *(_QWORD *)((char *)a2 + v12[8]);
    v19 = v12[9];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v20[8] = v21[8];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v8 = a1;
    v9 = a3;
    v10 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v22 = type metadata accessor for DetailCondition(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

_QWORD *sub_1004AA318(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for ConditionDetailViewAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v11 = a2[1];
      a1[1] = v11;
      v12 = (int *)type metadata accessor for DetailChartSelection(0);
      v13 = v12[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for Date(0);
      v17 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
      v18 = swift_bridgeObjectRetain(v11);
      v17(v14, v15, v16, v18);
      ((void (*)(char *, char *, uint64_t))v17)((char *)a1 + v12[6], (char *)a2 + v12[6], v16);
      ((void (*)(char *, char *, uint64_t))v17)((char *)a1 + v12[7], (char *)a2 + v12[7], v16);
      *(_QWORD *)((char *)a1 + v12[8]) = *(_QWORD *)((char *)a2 + v12[8]);
      v19 = v12[9];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = v21[8];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v22;
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v23 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

char *sub_1004AA4C4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v11 = (int *)type metadata accessor for DetailChartSelection(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = type metadata accessor for Date(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    v16(&a1[v11[6]], &a2[v11[6]], v15);
    v16(&a1[v11[7]], &a2[v11[7]], v15);
    *(_QWORD *)&a1[v11[8]] = *(_QWORD *)&a2[v11[8]];
    v17 = v11[9];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v18[8] = v19[8];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v8 = a1;
    v9 = a3;
    v10 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v20 = type metadata accessor for DetailCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

char *sub_1004AA640(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for ConditionDetailViewAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v11 = (int *)type metadata accessor for DetailChartSelection(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      v16(&a1[v11[6]], &a2[v11[6]], v15);
      v16(&a1[v11[7]], &a2[v11[7]], v15);
      *(_QWORD *)&a1[v11[8]] = *(_QWORD *)&a2[v11[8]];
      v17 = v11[9];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v18[8] = v19[8];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v20 = type metadata accessor for DetailCondition(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_1004AA7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = type metadata accessor for DetailChartSelection(0);
  __chkstk_darwin(v8);
  sub_100088FDC();
  v1 = type metadata accessor for DetailCondition(0);
  __chkstk_darwin(v1);
  sub_100098728();
  v2 = type metadata accessor for Date(0);
  __chkstk_darwin(v2);
  sub_100098728();
  v3 = type metadata accessor for ConditionDetailViewAction(0);
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v9 = sub_1000BA294(&qword_100BE5D80);
  __chkstk_darwin(v9);
  sub_100088FDC();
  sub_100084050(v0, v6, type metadata accessor for ConditionDetailViewAction);
  v7 = (char *)sub_1004AA94C + 4 * byte_1009A3FC0[swift_getEnumCaseMultiPayload(v6)];
  __asm { BR              X10 }
}

uint64_t sub_1004AA94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  _QWORD *v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3, v0, v1);
  v5 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v5, v4 - 328);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 1702125924;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 72) = v1;
  sub_100077A84((_QWORD *)(inited + 48));
  (*(void (**)(void))(v2 + 16))();
  sub_1000C3B6C();
  sub_1000BADCC();
  sub_1000DCF8C(0x64657463656C6573, 0xEC00000065746144, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v8 = *(_QWORD **)(v4 - 344);
  v8[3] = *(_QWORD *)(v4 - 352);
  v8[4] = sub_1004AAD0C();
  sub_100077A84(v8);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 - 360) + 32))();
}

uint64_t sub_1004AACB0(uint64_t a1)
{
  uint64_t v2;

  sub_1004AAD50(&qword_100BE5D90, (uint64_t)&unk_1009A4014);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_1004AACE8()
{
  sub_1004AAD50(&qword_100BE5D78, (uint64_t)&unk_1009A3FEC);
}

unint64_t sub_1004AAD0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE5D88;
  if (!qword_100BE5D88)
  {
    v1 = sub_100075EB0(&qword_100BE5D80);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE5D88);
  }
  return result;
}

void sub_1004AAD50(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for ConditionDetailViewAction(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

ValueMetadata *type metadata accessor for VFXTestTracker()
{
  return &type metadata for VFXTestTracker;
}

uint64_t sub_1004AAD9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v21[2];
  char v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  __int128 v26[2];

  v3 = sub_1000BA294(&qword_100BCB0A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21[-1] - v7;
  v9 = *(_QWORD *)(v1 + 56);
  sub_100043CA8(v1 + 16, (uint64_t)v26);
  v21[0] = 0;
  v21[1] = 0;
  v22 = 1;
  swift_retain();
  v10 = sub_1000BA294(&qword_100BE1FD8);
  State.init(wrappedValue:)(v21, v10);
  v11 = v24;
  v12 = v25;
  *(_OWORD *)(a1 + 16) = v23;
  *(_BYTE *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v12;
  v13 = (int *)type metadata accessor for SunriseSunsetDetailView(0);
  v14 = type metadata accessor for DetailChartDataElement(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v14);
  sub_1004AAF64((uint64_t)v8, (uint64_t)v5);
  State.init(wrappedValue:)(v5, v3);
  sub_1004AAFAC((uint64_t)v8);
  v15 = v13[7];
  swift_beginAccess(&unk_100BE0830, &v23, 1, 0);
  *(double *)(a1 + v15) = sub_10040908C();
  *(_BYTE *)(a1 + v13[9]) = 0;
  v16 = sub_1000BA294(&qword_100BC4810);
  v17 = sub_1004AAFEC();
  *(_QWORD *)a1 = ObservedObject.init(wrappedValue:)(v9, v16, v17);
  *(_QWORD *)(a1 + 8) = v18;
  return sub_10003C800(v26, a1 + v13[8]);
}

uint64_t type metadata accessor for SunriseSunsetDetailModule()
{
  return objc_opt_self(_TtC7Weather25SunriseSunsetDetailModule);
}

uint64_t sub_1004AAF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCB0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AAFAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BCB0A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004AAFEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4818;
  if (!qword_100BC4818)
  {
    v1 = sub_100075EB0(&qword_100BC4810);
    result = swift_getWitnessTable(&unk_1009D9950, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4818);
  }
  return result;
}

uint64_t sub_1004AB030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t result;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;

  v4 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v43 = (uint64_t)v37 - v8;
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  v12 = (char *)v37 - v11;
  __chkstk_darwin(v13);
  v17 = (char *)v37 - v16;
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    v22 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  v39 = a2;
  v40 = v15;
  v37[1] = v18;
  v38 = a1;
  v41 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = v18 + v41;
  v21 = *(_QWORD *)(v14 + 72);
  swift_bridgeObjectRetain(v18);
  v22 = _swiftEmptyArrayStorage;
  v42 = v6;
  do
  {
    sub_1000A1570(v20, (uint64_t)v17);
    sub_1000A1570((uint64_t)v17, (uint64_t)v12);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
    if (EnumCaseMultiPayload == 2)
    {
      v24 = v40;
      sub_1000A1570((uint64_t)v12, v40);
      v25 = type metadata accessor for EnvironmentAction(0);
      if (sub_1000BADE0(v25) == 1)
      {
LABEL_20:
        v30 = (uint64_t)v17;
        v31 = type metadata accessor for MainAction;
        goto LABEL_21;
      }
      v26 = v24;
      v27 = type metadata accessor for EnvironmentAction;
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload != 3)
    {
      if (EnumCaseMultiPayload == 19)
        goto LABEL_20;
LABEL_15:
      sub_1000A1570((uint64_t)v17, (uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      {
        sub_1000C2A68();
        v22 = v34;
      }
      v32 = v22[2];
      if (v32 >= v22[3] >> 1)
      {
        sub_1000C2A68();
        v22 = v35;
      }
      v22[2] = v32 + 1;
      v33 = (uint64_t)v22 + v41 + v32 * v21;
      v6 = v42;
      sub_1004AB310((uint64_t)v42, v33);
      goto LABEL_20;
    }
    sub_1000A1570((uint64_t)v12, v43);
    v28 = type metadata accessor for LocationsAction(0);
    v29 = sub_1000BADE0(v28);
    if (v29 == 2)
    {
      sub_1000BC2F4((uint64_t)v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if (v29)
    {
      v26 = v43;
      v27 = type metadata accessor for LocationsAction;
LABEL_14:
      sub_10006BD20(v26, v27);
      goto LABEL_15;
    }
    sub_1000BC2F4((uint64_t)v17);
    v30 = v43;
    v31 = (uint64_t (*)(uint64_t))&type metadata accessor for CurrentLocation;
LABEL_21:
    sub_10006BD20(v30, v31);
LABEL_22:
    sub_1000BC2F4((uint64_t)v12);
    v20 += v21;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  a1 = v38;
  a2 = v39;
LABEL_25:
  result = sub_1000A5F84(a1, a2);
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_1004AB310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MainAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

UIImage *sub_1004AB354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  NSString *v13;
  NSString *v14;
  uint64_t v15;
  Class isa;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  NSString *v22;
  id v23;
  uint64_t v24;
  NSString *v25;
  id v26;
  uint64_t v27;
  NSString v28;
  Class v29;
  double v30;
  double v31;
  double v32;
  double v33;
  CGContext *v34;
  CGContext *v35;
  NSString v36;
  UIImage *v37;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57[112];
  char v58[48];
  char v59[32];
  CGSize v60;

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004AB9D4(v0);
  v7 = v6;
  if (String.count.getter(v5, v6) > 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v52 = v2;
  v53 = v1;
  v8 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleBody);
  v9 = sub_1000BA294(&qword_100BE5EF0);
  inited = swift_initStackObject(v9, v59);
  v54 = xmmword_10097CA50;
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  v11 = sub_1000BA294(&qword_100BE5EF8);
  v12 = swift_initStackObject(v11, v58);
  *(_OWORD *)(v12 + 16) = v54;
  *(_QWORD *)(v12 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v12 + 40) = UIFontWeightSemibold;
  type metadata accessor for TraitKey(0);
  sub_100051B90(&qword_100BC2CD0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_10097D574);
  v13 = UIFontDescriptorTraitsAttribute;
  v14 = UIFontWeightTrait;
  v15 = sub_1000BADEC(v12);
  *(_QWORD *)(inited + 64) = sub_1000BA294(&qword_100BE5F00);
  *(_QWORD *)(inited + 40) = v15;
  type metadata accessor for AttributeName(0);
  sub_100051B90(&qword_100BC2CE0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10097D530);
  sub_1000BADEC(inited);
  isa = sub_1000C2A74().super.isa;
  v17 = objc_msgSend(v8, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v18 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v17, 0.0);
  v19 = sub_1000BA294(&qword_100BDAE18);
  v20 = swift_initStackObject(v19, v57);
  *(_OWORD *)(v20 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v20 + 32) = NSForegroundColorAttributeName;
  v21 = (void *)objc_opt_self(UIColor);
  v22 = NSForegroundColorAttributeName;
  v23 = objc_msgSend(v21, "whiteColor");
  v24 = sub_1000A0794(0, (unint64_t *)&qword_100BDADD0, UIColor_ptr);
  *(_QWORD *)(v20 + 40) = v23;
  *(_QWORD *)(v20 + 64) = v24;
  *(_QWORD *)(v20 + 72) = NSFontAttributeName;
  *(_QWORD *)(v20 + 104) = sub_1000A0794(0, (unint64_t *)&qword_100BD35F0, UIFont_ptr);
  *(_QWORD *)(v20 + 80) = v18;
  type metadata accessor for Key(0);
  sub_100051B90(&qword_100BC2CC0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10097D4EC);
  v25 = NSFontAttributeName;
  v26 = v18;
  v27 = sub_1000BADEC(v20);
  v28 = sub_1000C3B74();
  v29 = sub_1000C2A74().super.isa;
  objc_msgSend(v28, "sizeWithAttributes:", v29);
  v31 = v30;
  v33 = v32;

  v60.width = v31;
  v60.height = v33;
  UIGraphicsBeginImageContextWithOptions(v60, 0, 0.0);
  v34 = UIGraphicsGetCurrentContext();
  v35 = v34;
  if (v34)
  {
    CGContextSetShouldAntialias(v34, 1);
    CGContextSetAllowsAntialiasing(v35, 1);
  }
  v36 = sub_1000C3B74();
  sub_1004ABB90((v31 - v31) * 0.5, (v33 - v33) * 0.5, v27, v36);

  v37 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (!v37)
  {
    if (qword_100BC23F8 != -1)
      swift_once(&qword_100BC23F8, sub_1006F3784);
    v39 = type metadata accessor for Logger(0);
    sub_1000AECD4(v39, (uint64_t)qword_100CAEFE0);
    swift_bridgeObjectRetain(v7);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc(22, -1);
      v44 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v54 = v44;
      v56 = v44;
      *(_DWORD *)v43 = 136446466;
      v50 = v43 + 4;
      static Locale.current.getter(v44);
      sub_100051B90(&qword_100BE5F08, (uint64_t (*)(uint64_t))&type metadata accessor for Locale, (uint64_t)&protocol conformance descriptor for Locale);
      v51 = v26;
      v45 = v53;
      v46 = dispatch thunk of CustomStringConvertible.description.getter(v53);
      v48 = v47;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v45);
      v55 = sub_1000CE1C8(v46, v48, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      swift_bridgeObjectRetain(v7);
      v55 = sub_1000CE1C8(v5, v7, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease_n(v7, 3);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "UnitTemperature.localizedIcon generated image is nil. locale=%{public}s, symbolText=%{public}s", (uint8_t *)v43, 0x16u);
      v49 = v54;
      swift_arrayDestroy(v54, 2);
      sub_1000986F0(v49);
      sub_1000986F0(v43);

    }
    else
    {

      swift_bridgeObjectRelease_n(v7, 2);
    }
    return 0;
  }

  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1004AB9D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  Class isa;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)NSMeasurementFormatter), "init");
  static Locale.current.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, "setLocale:", isa);

  objc_msgSend(v6, "setUnitStyle:", 1);
  v8 = objc_msgSend(v6, "stringFromUnit:", a1);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = v9 == 45250 && v11 == 0xA200000000000000;
  if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, 45250, 0xA200000000000000, 0) & 1) != 0)
  {
    objc_msgSend(v6, "setUnitStyle:", 2);
    v13 = objc_msgSend(v6, "stringFromUnit:", a1);
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17 = String.count.getter(v14, v16);
    if (v17 > 2)
    {
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      swift_bridgeObjectRelease(v11);
      return v14;
    }
  }
  else
  {

  }
  return v9;
}

void sub_1004ABB90(double a1, double a2, uint64_t a3, void *a4)
{
  Class isa;

  type metadata accessor for Key(0);
  sub_100051B90(&qword_100BC2CC0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10097D4EC);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a4, "drawAtPoint:withAttributes:", isa, a1, a2);

}

uint64_t *sub_1004ABC40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for NotificationsAction);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 1u:
        v6 = type metadata accessor for LocationModel(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
        {
          v7 = type metadata accessor for NotificationLocation(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
        }
        v23 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
        {
          v27 = sub_1000BA294(&qword_100BD4280);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
        }
        v13 = a1;
        v14 = a3;
        v15 = 1;
        goto LABEL_15;
      case 2u:
        v8 = type metadata accessor for NotificationSubscription.Location(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for NotificationSubscription.Kind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        v13 = a1;
        v14 = a3;
        v15 = 2;
        goto LABEL_15;
      case 3u:
        v16 = *a2;
        *a1 = *a2;
        swift_bridgeObjectRetain(v16);
        v13 = a1;
        v14 = a3;
        v15 = 3;
        goto LABEL_15;
      case 4u:
        v17 = *a2;
        *a1 = *a2;
        swift_bridgeObjectRetain(v17);
        v13 = a1;
        v14 = a3;
        v15 = 4;
        goto LABEL_15;
      case 5u:
        v18 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        v19 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for NotificationSubscription.Kind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        v13 = a1;
        v14 = a3;
        v15 = 5;
LABEL_15:
        swift_storeEnumTagMultiPayload(v13, v14, v15);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1004ABEE4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 5:
      v9 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for NotificationSubscription.Kind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = a1;
      v15 = a3;
      v16 = 5;
LABEL_14:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    case 2:
      v17 = type metadata accessor for NotificationSubscription.Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for NotificationSubscription.Kind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      v14 = a1;
      v15 = a3;
      v16 = 2;
      goto LABEL_14;
    case 1:
      v7 = type metadata accessor for LocationModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = type metadata accessor for NotificationLocation(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      v22 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_1000BA294(&qword_100BD4280);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1004AC12C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 == a2)
    return a1;
  sub_10006BD20((uint64_t)a1, type metadata accessor for NotificationsAction);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 5:
      v9 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for NotificationSubscription.Kind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = a1;
      v15 = a3;
      v16 = 5;
LABEL_15:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    case 2:
      v17 = type metadata accessor for NotificationSubscription.Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for NotificationSubscription.Kind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      v14 = a1;
      v15 = a3;
      v16 = 2;
      goto LABEL_15;
    case 1:
      v7 = type metadata accessor for LocationModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = type metadata accessor for NotificationLocation(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      v22 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_1000BA294(&qword_100BD4280);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1004AC38C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10013A25C(&qword_100BE5FC0, (uint64_t)&unk_1009A41D8);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_1004AC3C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BD4280);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004AC404(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000100A07260)
  {
    swift_bridgeObjectRelease(0x8000000100A07260);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A07260, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

unint64_t sub_1004AC488()
{
  return 0xD000000000000013;
}

uint64_t sub_1004AC4A4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1000BA294(&qword_100BE5FF0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1004AC688();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ReportWeatherComponent.CodingKeys, &type metadata for ReportWeatherComponent.CodingKeys, v10, v8, v9);
  KeyedEncodingContainer.encode(_:forKey:)(a2, v11, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1004AC584(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_1000BA294(&qword_100BE5FC8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_1000DB418(a1, v7);
  v10 = sub_1004AC688();
  v11 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ReportWeatherComponent.CodingKeys, &type metadata for ReportWeatherComponent.CodingKeys, v10, v7, v8);
  if (!v1)
  {
    v9 = KeyedDecodingContainer.decode(_:forKey:)(v11, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v9 & 1;
}

unint64_t sub_1004AC688()
{
  unint64_t result;

  result = qword_100BE5FD0;
  if (!qword_100BE5FD0)
  {
    result = swift_getWitnessTable(&unk_1009A4378, &type metadata for ReportWeatherComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5FD0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReportWeatherComponent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004AC704 + 4 * byte_1009A4210[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004AC724 + 4 * byte_1009A4215[v4]))();
}

_BYTE *sub_1004AC704(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004AC724(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004AC72C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004AC734(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004AC73C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004AC744(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherComponent.CodingKeys()
{
  return &type metadata for ReportWeatherComponent.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ReportWeatherComponent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004AC7AC + 4 * byte_1009A421F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004AC7E0 + 4 * byte_1009A421A[v4]))();
}

uint64_t sub_1004AC7E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AC7E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004AC7F0);
  return result;
}

uint64_t sub_1004AC7FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004AC804);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004AC808(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AC810(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherComponent()
{
  return &type metadata for ReportWeatherComponent;
}

uint64_t sub_1004AC830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004AC404(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1004AC858(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004AC688();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004AC880(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004AC688();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004AC8A8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1004AC584(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1004AC8D4(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1004AC4A4(a1, *v1);
}

unint64_t sub_1004AC8F0()
{
  unint64_t result;

  result = qword_100BE5FD8;
  if (!qword_100BE5FD8)
  {
    result = swift_getWitnessTable(&unk_1009A4350, &type metadata for ReportWeatherComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5FD8);
  }
  return result;
}

unint64_t sub_1004AC930()
{
  unint64_t result;

  result = qword_100BE5FE0;
  if (!qword_100BE5FE0)
  {
    result = swift_getWitnessTable(&unk_1009A42C0, &type metadata for ReportWeatherComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5FE0);
  }
  return result;
}

unint64_t sub_1004AC970()
{
  unint64_t result;

  result = qword_100BE5FE8;
  if (!qword_100BE5FE8)
  {
    result = swift_getWitnessTable(&unk_1009A42E8, &type metadata for ReportWeatherComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5FE8);
  }
  return result;
}

uint64_t type metadata accessor for MessageCoverInteractor()
{
  return objc_opt_self(_TtC7Weather22MessageCoverInteractor);
}

uint64_t *sub_1004AC9CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Elevation(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BC3370);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for BackgroundMoonData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      v18 = sub_1000BA294(&qword_100BC3378);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_1004ACB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Elevation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = type metadata accessor for BackgroundMoonData(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return result;
}

uint64_t sub_1004ACC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Elevation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC3370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for BackgroundMoonData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_1000BA294(&qword_100BC3378);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1004ACD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Elevation(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_1000BA294(&qword_100BC3370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = type metadata accessor for BackgroundMoonData(0);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v22 = sub_1000BA294(&qword_100BC3378);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t sub_1004ACF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Elevation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC3370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for BackgroundMoonData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_1000BA294(&qword_100BC3378);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1004AD098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Elevation(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_1000BA294(&qword_100BC3370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = type metadata accessor for BackgroundMoonData(0);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v22 = sub_1000BA294(&qword_100BC3378);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t sub_1004AD280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004AD28C);
}

uint64_t sub_1004AD28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100098A00();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v9 = sub_1000BA294(&qword_100BC3370);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = sub_1000BA294(&qword_100BC3378);
      v10 = *(int *)(a3 + 24);
    }
    v8 = v4 + v10;
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_1004AD314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004AD320);
}

uint64_t sub_1004AD320(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_100098A00();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v11 = sub_1000BA294(&qword_100BC3370);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BC3378);
      v12 = *(int *)(a4 + 24);
    }
    v10 = v5 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t type metadata accessor for WeatherConditionBackgroundTimeData(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE60E8;
  if (!qword_100BE60E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WeatherConditionBackgroundTimeData);
  return result;
}

void sub_1004AD3E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001345CC(319, &qword_100BE60F8, (uint64_t (*)(uint64_t))&type metadata accessor for Elevation);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001345CC(319, (unint64_t *)&unk_100BE6100, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
      }
    }
  }
}

BOOL sub_1004AD4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a2;
  v69 = type metadata accessor for BackgroundMoonData(0);
  v65 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  sub_100088FDC();
  v64 = v5;
  v67 = sub_1000BA294(&qword_100BE6138);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v68 = v7;
  sub_1000BA294(&qword_100BC3378);
  sub_1000B42B0();
  v9 = __chkstk_darwin(v8);
  v66 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v59 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v59 - v14;
  v71 = type metadata accessor for Elevation(0);
  v16 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  sub_100094EC4();
  v70 = (char *)sub_1000BA294(&qword_100BE6140);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100079FBC();
  sub_1000BA294(&qword_100BC3370);
  sub_1000B42B0();
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v59 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v59 - v25;
  v27 = a1;
  v28 = a1;
  v29 = v72;
  if ((static Date.== infix(_:_:)(v28, v72) & 1) == 0)
    return 0;
  v62 = v21;
  v63 = v16;
  v59 = v3;
  v60 = v13;
  v61 = v15;
  v30 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  sub_1000CDC2C(v27 + *(int *)(v30 + 20), (uint64_t)v26);
  v31 = v29;
  sub_1000CDC2C(v29 + *(int *)(v30 + 20), (uint64_t)v24);
  v32 = v2 + *((int *)v70 + 12);
  sub_1000CDC2C((uint64_t)v26, v2);
  sub_1000CDC2C((uint64_t)v24, v32);
  v33 = v71;
  sub_100088FC8(v2, 1, v71);
  v34 = v27;
  v35 = (uint64_t)v26;
  if (v37)
  {
    sub_1000C2428((uint64_t)v24);
    sub_1000C2428((uint64_t)v26);
    sub_100088FC8(v32, 1, v33);
    if (v37)
    {
      sub_100021AA4(v2, &qword_100BC3370);
      goto LABEL_12;
    }
LABEL_10:
    v38 = &qword_100BE6140;
    v39 = v2;
LABEL_21:
    sub_100021AA4(v39, v38);
    return 0;
  }
  v36 = (uint64_t)v62;
  sub_100037768(v2, (uint64_t)v62, &qword_100BC3370);
  sub_100088FC8(v32, 1, v33);
  if (v37)
  {
    sub_1000C2428((uint64_t)v24);
    sub_1000C2428(v35);
    sub_1000DDBC4(v63);
    goto LABEL_10;
  }
  v70 = v24;
  v40 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v59, v32, v33);
  sub_100086DA4(&qword_100BCA160, (uint64_t (*)(uint64_t))&type metadata accessor for Elevation, (uint64_t)&protocol conformance descriptor for Elevation);
  v34 = v27;
  v42 = v33;
  v43 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v40, v33, v41);
  v44 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v45 = v40;
  v31 = v72;
  v44(v45, v42);
  sub_1000C2428((uint64_t)v70);
  sub_1000C2428(v35);
  v44(v36, v42);
  sub_1000C2428(v2);
  if ((v43 & 1) == 0)
    return 0;
LABEL_12:
  v46 = (uint64_t)v61;
  sub_1000BCF38(v34 + *(int *)(v30 + 24), (uint64_t)v61);
  v47 = (uint64_t)v60;
  sub_1000BCF38(v31 + *(int *)(v30 + 24), (uint64_t)v60);
  v48 = v68;
  v49 = v68 + *(int *)(v67 + 48);
  sub_1000BCF38(v46, v68);
  sub_1000BCF38(v47, v49);
  v50 = v69;
  sub_100088FC8(v48, 1, v69);
  if (v37)
  {
    sub_1000C28AC(v47);
    sub_1000C28AC(v46);
    sub_100088FC8(v49, 1, v50);
    if (v37)
    {
      sub_100021AA4(v48, &qword_100BC3378);
      return 1;
    }
    goto LABEL_20;
  }
  v51 = v66;
  sub_100037768(v48, v66, &qword_100BC3378);
  sub_100088FC8(v49, 1, v50);
  if (v52)
  {
    sub_1000C2428(v47);
    sub_1000C2428(v46);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v51, v50);
LABEL_20:
    v38 = &qword_100BE6138;
    v39 = v48;
    goto LABEL_21;
  }
  v55 = v64;
  v54 = v65;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v64, v49, v50);
  sub_100086DA4(&qword_100BE6148, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData, (uint64_t)&protocol conformance descriptor for BackgroundMoonData);
  v57 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v55, v50, v56);
  v58 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
  v58(v55, v50);
  sub_1000C28AC(v47);
  sub_1000C28AC(v46);
  v58(v51, v50);
  sub_1000C28AC(v48);
  return (v57 & 1) != 0;
}

uint64_t sub_1004ADA00(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v10;

  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1702125924, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6F69746176656C65 && a2 == 0xE90000000000006ELL)
  {
    v8 = 0xE90000000000006ELL;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F69746176656C65, 0xE90000000000006ELL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x617461446E6F6F6DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 2;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x617461446E6F6F6DLL, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1004ADB48(char a1)
{
  if (!a1)
    return 1702125924;
  if (a1 == 1)
    return 0x6F69746176656C65;
  return 0x617461446E6F6F6DLL;
}

uint64_t sub_1004ADB9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  char v22;
  char v23;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100BE6170);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1004AE3EC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WeatherConditionBackgroundTimeData.CodingKeys, &type metadata for WeatherConditionBackgroundTimeData.CodingKeys, v10, v8, v9);
  v23 = 0;
  v11 = type metadata accessor for Date(0);
  sub_100086DA4(&qword_100BC3578, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v4, &v23, v6, v11, v12);
  if (!v2)
  {
    v13 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
    v14 = v4 + *(int *)(v13 + 20);
    v22 = 1;
    v15 = type metadata accessor for Elevation(0);
    sub_100086DA4(&qword_100BE6178, (uint64_t (*)(uint64_t))&type metadata accessor for Elevation, (uint64_t)&protocol conformance descriptor for Elevation);
    sub_1000D966C(v14, (uint64_t)&v22, v6, v15, v16);
    v17 = v4 + *(int *)(v13 + 24);
    v21 = 2;
    v18 = type metadata accessor for BackgroundMoonData(0);
    sub_100086DA4(&qword_100BE6180, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData, (uint64_t)&protocol conformance descriptor for BackgroundMoonData);
    sub_1000D966C(v17, (uint64_t)&v21, v6, v18, v19);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

void sub_1004ADD64(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1000BA294(&qword_100BC3378);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v20 = v4;
  sub_1000BA294(&qword_100BC3370);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v21 = v6;
  v22 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_100088FDC();
  v23 = v8;
  v24 = sub_1000BA294(&qword_100BE6150);
  __chkstk_darwin(v24);
  sub_100094EC4();
  v9 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v15 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v15);
  v16 = sub_1004AE3EC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WeatherConditionBackgroundTimeData.CodingKeys, &type metadata for WeatherConditionBackgroundTimeData.CodingKeys, v16, v15, v14);
  if (v25)
  {
    sub_1000C2760();
  }
  else
  {
    v28 = 0;
    sub_100086DA4(&qword_100BC3558, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v22, &v28, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v13, v23, v22);
    v17 = type metadata accessor for Elevation(0);
    v27 = 1;
    sub_100086DA4(&qword_100BE6160, (uint64_t (*)(uint64_t))&type metadata accessor for Elevation, (uint64_t)&protocol conformance descriptor for Elevation);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v17, &v27, v24, v17);
    sub_1000787D4(v21, v13 + *(int *)(v9 + 20), &qword_100BC3370);
    v18 = type metadata accessor for BackgroundMoonData(0);
    v26 = 2;
    sub_100086DA4(&qword_100BE6168, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData, (uint64_t)&protocol conformance descriptor for BackgroundMoonData);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v18, &v26, v24, v18);
    sub_1000BC2FC();
    sub_1000787D4(v20, v13 + *(int *)(v9 + 24), &qword_100BC3378);
    sub_1004AE428(v13, a2);
    sub_1000C2760();
    sub_1004AE46C(v13);
  }
}

uint64_t sub_1004AE0BC()
{
  char *v0;

  return sub_1004ADB48(*v0);
}

uint64_t sub_1004AE0C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004ADA00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004AE0E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004AE3EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004AE110(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004AE3EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1004AE138(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004ADD64(a1, a2);
}

uint64_t sub_1004AE14C(_QWORD *a1)
{
  return sub_1004ADB9C(a1);
}

uint64_t sub_1004AE160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;

  v1 = 7104878;
  sub_1000BA294(&qword_100BC3378);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  sub_1000BA294(&qword_100BC3370);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10 = type metadata accessor for Date(0);
  sub_100086DA4((unint64_t *)&qword_100BC52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v10);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 0x746176656C65202CLL;
  v13._object = (void *)0xEC0000003D6E6F69;
  String.append(_:)(v13);
  v14 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  sub_100037768(v0 + *(int *)(v14 + 20), v9, &qword_100BC3370);
  v15 = type metadata accessor for Elevation(0);
  v16 = sub_100088FC8(v9, 1, v15);
  if (v17)
  {
    sub_100021AA4(v9, &qword_100BC3370);
    v20 = (void *)0xE300000000000000;
    v18 = 7104878;
  }
  else
  {
    v18 = Elevation.description.getter(v16);
    v20 = v19;
    sub_1000DDBC4(*(_QWORD *)(v15 - 8));
  }
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x61446E6F6F6D202CLL;
  v22._object = (void *)0xEB000000003D6174;
  String.append(_:)(v22);
  sub_100037768(v0 + *(int *)(v14 + 24), v5, &qword_100BC3378);
  v23 = type metadata accessor for BackgroundMoonData(0);
  v24 = sub_100088FC8(v5, 1, v23);
  if (v17)
  {
    sub_100021AA4(v5, &qword_100BC3378);
    v26 = (void *)0xE300000000000000;
  }
  else
  {
    v1 = BackgroundMoonData.moonImageName.getter(v24);
    v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v5, v23);
  }
  v27._countAndFlagsBits = v1;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v26);
  v28._countAndFlagsBits = 125;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  return 0x3D657461647BLL;
}

unint64_t sub_1004AE3EC()
{
  unint64_t result;

  result = qword_100BE6158;
  if (!qword_100BE6158)
  {
    result = swift_getWitnessTable(&unk_1009A45B8, &type metadata for WeatherConditionBackgroundTimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6158);
  }
  return result;
}

uint64_t sub_1004AE428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AE46C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundTimeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004AE4F4 + 4 * byte_1009A4425[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004AE528 + 4 * byte_1009A4420[v4]))();
}

uint64_t sub_1004AE528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AE530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004AE538);
  return result;
}

uint64_t sub_1004AE544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004AE54CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004AE550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AE558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundTimeData.CodingKeys()
{
  return &type metadata for WeatherConditionBackgroundTimeData.CodingKeys;
}

unint64_t sub_1004AE578()
{
  unint64_t result;

  result = qword_100BE6188;
  if (!qword_100BE6188)
  {
    result = swift_getWitnessTable(&unk_1009A4590, &type metadata for WeatherConditionBackgroundTimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6188);
  }
  return result;
}

unint64_t sub_1004AE5B8()
{
  unint64_t result;

  result = qword_100BE6190;
  if (!qword_100BE6190)
  {
    result = swift_getWitnessTable(&unk_1009A4500, &type metadata for WeatherConditionBackgroundTimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6190);
  }
  return result;
}

unint64_t sub_1004AE5F8()
{
  unint64_t result;

  result = qword_100BE6198[0];
  if (!qword_100BE6198[0])
  {
    result = swift_getWitnessTable(&unk_1009A4528, &type metadata for WeatherConditionBackgroundTimeData.CodingKeys);
    atomic_store(result, qword_100BE6198);
  }
  return result;
}

uint64_t sub_1004AE634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v2 = type metadata accessor for Optional(0, *(_QWORD *)(*(_QWORD *)v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v4 = *v3;
  swift_bridgeObjectRelease(v3[1]);
  swift_bridgeObjectRelease(v4);
  return v0;
}

uint64_t sub_1004AE698()
{
  uint64_t v0;

  v0 = sub_1004AE634();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004AE6B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2) & 1;
}

uint64_t sub_1004AE6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 96);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = v6;
  sub_1000BF398(v7, v8);
  return a1;
}

uint64_t sub_1004AE774(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

_QWORD *assignWithCopy for AnyEquatable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  sub_1004AE810(a1, a2);
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1004AE810(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v10 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v10 + 82) & 2) != 0)
      {
        v12 = *result;
        v13 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v12);
        *v3 = v13;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v10 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v11 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v15 = *a2;
          *v3 = *a2;
          swift_retain(v15);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v11);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v16, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          v9 = swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v16, v4, v9);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AnyEquatable(uint64_t a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyEquatable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyEquatable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1004AEA3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004AEA68(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_1004AEA74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for NotificationsState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t assignWithTake for NotificationsState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationsState()
{
  return &type metadata for NotificationsState;
}

void sub_1004AEB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;

  if ((sub_10009B650(a1, a4) & 1) != 0)
  {
    sub_10094A268();
    if ((v4 & 1) != 0)
      sub_10094A268();
  }
}

void sub_1004AEBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v8 = sub_1000C5594();
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v12 = v11 - v10;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a5);
  static NotificationSubscription.Kind.precipitation.getter(v13);
  v33 = sub_100051B90(&qword_100BE62F0, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind, (uint64_t)&protocol conformance descriptor for NotificationSubscription.Kind);
  v14 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v8, v33);
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  v15 = v32(v12, v8);
  if ((v14 & 1) != 0)
  {
    __chkstk_darwin(v15);
    sub_1000DBAC0();
    sub_100849C2C();
    v16 = sub_1000BA294(&qword_100BE62F8);
    v17 = type metadata accessor for NotificationSubscription.Location(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = swift_allocObject(v16, v20 + *(_QWORD *)(v18 + 72), v19 | 7);
    *(_OWORD *)(v21 + 16) = xmmword_10097CA50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v21 + v20, a1, v17);
    sub_10025E288(v21);
  }
  static NotificationSubscription.Kind.severe.getter(v15);
  v22 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v8, v33);
  v23 = v32(v12, v8);
  if ((v22 & 1) != 0)
  {
    __chkstk_darwin(v23);
    sub_1000DBAC0();
    sub_100849C2C();
    v24 = sub_1000BA294(&qword_100BE62F8);
    v25 = type metadata accessor for NotificationSubscription.Location(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned __int8 *)(v26 + 80);
    v28 = (v27 + 32) & ~v27;
    v29 = swift_allocObject(v24, v28 + *(_QWORD *)(v26 + 72), v27 | 7);
    v30 = a1;
    v31 = v29;
    *(_OWORD *)(v29 + 16) = xmmword_10097CA50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v29 + v28, v30, v25);
    sub_10025E288(v31);
  }
  sub_100098640();
}

void sub_1004AEE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v7 = sub_1000C5594();
  __chkstk_darwin(v7);
  sub_100098728();
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a5);
  static NotificationSubscription.Kind.precipitation.getter(v8);
  sub_100051B90(&qword_100BE62F0, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind, (uint64_t)&protocol conformance descriptor for NotificationSubscription.Kind);
  v9 = sub_1000C4A60();
  v10 = sub_1000B4A6C();
  if ((v9 & 1) != 0)
  {
    __chkstk_darwin(v10);
    sub_1000C5F78();
    sub_100849C2C();
  }
  static NotificationSubscription.Kind.severe.getter(v10);
  v11 = sub_1000C4A60();
  v12 = sub_1000B4A6C();
  if ((v11 & 1) != 0)
  {
    __chkstk_darwin(v12);
    sub_1000C5F78();
    sub_100849C2C();
  }
  sub_100098640();
}

uint64_t sub_1004AEFA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v4 = NotificationSubscription.Location.id.getter();
  v6 = v5;
  v7 = a3();
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
    v12 = 0;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    v12 = v11 ^ 1;
  }
  return v12 & 1;
}

uint64_t sub_1004AF050(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  char v8;

  if (a1 == 0xD000000000000012)
  {
    v4 = 0x8000000100A072C0;
    if (a2 == 0x8000000100A072C0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100A072C0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100A072E0)
  {
    v6 = 0x8000000100A072E0;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A072E0, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0x6F4C657265766573 && a2 == 0xEF736E6F69746163)
  {
    swift_bridgeObjectRelease(0xEF736E6F69746163);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F4C657265766573, 0xEF736E6F69746163, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1004AF1BC(char a1)
{
  uint64_t result;

  result = 0xD000000000000012;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000016;
    else
      return 0x6F4C657265766573;
  }
  return result;
}

uint64_t sub_1004AF228(_QWORD *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v19;
  char v20;

  v8 = sub_1000BA294(&qword_100BE62D0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v12 = v11 - v10;
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = sub_1004AF694();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NotificationsState.CodingKeys, &type metadata for NotificationsState.CodingKeys, v15, v13, v14);
  LOBYTE(v19) = a2;
  v20 = 0;
  v16 = sub_1004AF70C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v19, &v20, v8, &type metadata for NotificationAuthorizationState, v16);
  if (!v4)
  {
    v19 = a3;
    v20 = 1;
    sub_1000BA294(&qword_100BE62B8);
    sub_1004AF748(&qword_100BE62E0, &qword_100BE62E8, (uint64_t)&protocol conformance descriptor for NotificationSubscription.Location, (uint64_t)&protocol conformance descriptor for <A> [A]);
    sub_1000BAE08();
    v19 = a4;
    v20 = 2;
    sub_1000BAE08();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1004AF3A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  char v19;

  v3 = sub_1000BA294(&qword_100BE62A0);
  __chkstk_darwin(v3);
  sub_100098728();
  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1004AF694();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NotificationsState.CodingKeys, &type metadata for NotificationsState.CodingKeys, v6, v4, v5);
  if (v1)
  {
    v12 = 0;
  }
  else
  {
    v19 = 0;
    sub_1004AF6D0();
    sub_1000C3B98((uint64_t)&type metadata for NotificationAuthorizationState, (uint64_t)&v19, v3, (uint64_t)&type metadata for NotificationAuthorizationState);
    v4 = v18;
    sub_1000BA294(&qword_100BE62B8);
    v19 = 1;
    v7 = sub_1004AF748(&qword_100BE62C0, &qword_100BE62C8, (uint64_t)&protocol conformance descriptor for NotificationSubscription.Location, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v8 = sub_1000DDBD4();
    sub_1000C3B98(v8, v9, v10, v11);
    v19 = 2;
    swift_bridgeObjectRetain();
    v14 = sub_1000DDBD4();
    sub_1000C3B98(v14, v15, v16, v17);
    sub_1000DCFA4();
    if (!v7)
    {
      swift_bridgeObjectRetain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
      swift_bridgeObjectRelease();
      sub_1000CC8C8();
      return v4;
    }
    sub_1000CC8C8();
    v12 = 1;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  if (v12)
    sub_1000CC8C8();
  return v4;
}

uint64_t sub_1004AF570()
{
  char *v0;

  return sub_1004AF1BC(*v0);
}

uint64_t sub_1004AF578@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004AF050(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004AF59C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004AF694();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004AF5C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004AF694();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004AF5EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1004AF3A0(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1004AF618(_QWORD *a1)
{
  uint64_t v1;

  return sub_1004AF228(a1, *(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004AF634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_10069579C();
  if (!v1)
  {
    *(_BYTE *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
  }
  return result;
}

void sub_1004AF660()
{
  sub_100695870();
}

void sub_1004AF67C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1004AEB68(*a1, *((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2), *a2);
}

unint64_t sub_1004AF694()
{
  unint64_t result;

  result = qword_100BE62A8;
  if (!qword_100BE62A8)
  {
    result = swift_getWitnessTable(&unk_1009A4940, &type metadata for NotificationsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE62A8);
  }
  return result;
}

unint64_t sub_1004AF6D0()
{
  unint64_t result;

  result = qword_100BE62B0;
  if (!qword_100BE62B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotificationAuthorizationState, &type metadata for NotificationAuthorizationState);
    atomic_store(result, (unint64_t *)&qword_100BE62B0);
  }
  return result;
}

unint64_t sub_1004AF70C()
{
  unint64_t result;

  result = qword_100BE62D8;
  if (!qword_100BE62D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotificationAuthorizationState, &type metadata for NotificationAuthorizationState);
    atomic_store(result, (unint64_t *)&qword_100BE62D8);
  }
  return result;
}

uint64_t sub_1004AF748(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_100075EB0(&qword_100BE62B8);
    sub_100051B90(a2, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationSubscription.Location, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004AF7CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1004AEFA8(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(void))&NotificationSubscription.Location.id.getter) & 1;
}

uint64_t sub_1004AF7F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1004AEFA8(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(void))&Location.id.getter) & 1;
}

uint64_t storeEnumTagSinglePayload for NotificationsState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004AF860 + 4 * byte_1009A4795[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004AF894 + 4 * byte_1009A4790[v4]))();
}

uint64_t sub_1004AF894(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AF89C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004AF8A4);
  return result;
}

uint64_t sub_1004AF8B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004AF8B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004AF8BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AF8C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationsState.CodingKeys()
{
  return &type metadata for NotificationsState.CodingKeys;
}

unint64_t sub_1004AF8E4()
{
  unint64_t result;

  result = qword_100BE6300;
  if (!qword_100BE6300)
  {
    result = swift_getWitnessTable(&unk_1009A4918, &type metadata for NotificationsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6300);
  }
  return result;
}

unint64_t sub_1004AF924()
{
  unint64_t result;

  result = qword_100BE6308;
  if (!qword_100BE6308)
  {
    result = swift_getWitnessTable(&unk_1009A4888, &type metadata for NotificationsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6308);
  }
  return result;
}

unint64_t sub_1004AF964()
{
  unint64_t result;

  result = qword_100BE6310;
  if (!qword_100BE6310)
  {
    result = swift_getWitnessTable(&unk_1009A48B0, &type metadata for NotificationsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6310);
  }
  return result;
}

uint64_t sub_1004AF9A0(uint64_t a1)
{
  return sub_1004AF7CC(a1) & 1;
}

uint64_t sub_1004AF9B8(uint64_t a1)
{
  return sub_1004AF7F0(a1) & 1;
}

void type metadata accessor for NotificationsOptInFlowState()
{
  sub_100098884();
}

uint64_t sub_1004AF9E4(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 4))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 2);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1004AFA30(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)(result + 2) = a2 + 1;
  }
  return result;
}

void type metadata accessor for NotificationsOptInViewModel()
{
  sub_100098884();
}

void type metadata accessor for NotificationsOptInAlertState()
{
  sub_100098884();
}

unint64_t sub_1004AFA90()
{
  unint64_t result;

  result = qword_100BE6318;
  if (!qword_100BE6318)
  {
    result = swift_getWitnessTable(&unk_1009A4BF0, &unk_100B773D8);
    atomic_store(result, (unint64_t *)&qword_100BE6318);
  }
  return result;
}

uint64_t sub_1004AFACC(unsigned int a1, unsigned int a2)
{
  uint64_t v2;
  unsigned int v4;

  if (a2 != a1)
    return 0;
  if ((a1 & 0xFF00) == 0x600)
  {
    v2 = 0;
    if (BYTE1(a2) != 6)
      return v2;
  }
  else
  {
    if (BYTE1(a2) == 6)
      return 0;
    v2 = 0;
    if ((((unsigned __int16)a2 ^ (unsigned __int16)a1) & 0xFF00) != 0)
      return v2;
  }
  if (((a1 ^ a2) & 0x10000) != 0)
    return v2;
  v4 = HIBYTE(a2);
  if (HIBYTE(a1) == 2)
  {
    if (v4 == 2)
      return 1;
  }
  else if (HIBYTE(a1) == 3)
  {
    if (v4 == 3)
      return 1;
  }
  else if ((HIBYTE(a2) & 0xFE) != 2 && ((((a1 & 0x1000000) == 0) ^ ((a2 & 0x1000000) >> 24)) & 1) != 0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1004AFB7C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v10;

  if (a1 == 0x74617453776F6C66 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74617453776F6C66, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000011)
  {
    v7 = 0x8000000100A07300;
    if (a2 == 0x8000000100A07300)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100A07300, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x80000001009F4B80)
  {
    v8 = 0x80000001009F4B80;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000001009F4B80, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 0x6573556E4974706FLL && a2 == 0xEF73757461745372)
  {
    swift_bridgeObjectRelease(0xEF73757461745372);
    return 3;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6573556E4974706FLL, 0xEF73757461745372, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1004AFD54(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004AFD8C + 4 * byte_1009A4990[a1]))(0x74617453776F6C66, 0xE900000000000065);
}

unint64_t sub_1004AFD8C()
{
  return 0xD000000000000011;
}

unint64_t sub_1004AFDA8()
{
  return 0xD000000000000014;
}

uint64_t sub_1004AFDC8()
{
  return 0x6573556E4974706FLL;
}

uint64_t sub_1004AFDEC(_QWORD *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v7 = sub_1000BA294(&qword_100BE6478);
  sub_100099300();
  __chkstk_darwin(v8);
  sub_100079FBC();
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1004B203C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInViewModel.CodingKeys, &type metadata for NotificationsOptInViewModel.CodingKeys, v11, v9, v10);
  v21 = a2;
  v20 = 0;
  v12 = sub_1004B20F0();
  sub_1000C26D4((uint64_t)&v21, (uint64_t)&v20, v7, (uint64_t)&unk_100B772C0, v12);
  if (!v2)
  {
    v19 = BYTE1(a2);
    v18 = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v19, &v18, v7, &unk_100B772C0, v12);
    v17 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(HIWORD(a2) & 1, &v17, v7);
    v16 = HIBYTE(a2);
    v15 = 3;
    v13 = sub_1004B212C();
    sub_1000C26D4((uint64_t)&v16, (uint64_t)&v15, v7, (uint64_t)&type metadata for OptInUserStatus, v13);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v7);
}

void sub_1004AFF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_100099310();
  a25 = v26;
  a26 = v27;
  v29 = v28;
  v30 = sub_1000BA294(&qword_100BE6458);
  sub_100099300();
  __chkstk_darwin(v31);
  sub_100094EC4();
  v32 = v29[3];
  v33 = v29[4];
  sub_1000DB418(v29, v32);
  v34 = sub_1004B203C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInViewModel.CodingKeys, &type metadata for NotificationsOptInViewModel.CodingKeys, v34, v32, v33);
  a16 = 0;
  sub_1004B2078();
  sub_1000C1688();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v35, v36, v37);
  a14 = 1;
  sub_1000C1688();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v38, v39, v40, v41);
  a13 = 2;
  KeyedDecodingContainer.decode(_:forKey:)(&a13, v30);
  a11 = 3;
  sub_1004B20B4();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for OptInUserStatus, &a11, v30);
  sub_1000BAE28();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
  sub_1000B44B0();
}

uint64_t sub_1004B00F8()
{
  unsigned __int8 *v0;

  return sub_1004AFD54(*v0);
}

uint64_t sub_1004B0100@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004AFB7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004B0124(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B203C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B014C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B203C();
  return CodingKey.debugDescription.getter(a1, v2);
}

#error "1004B0184: call analysis failed (funcsize=16)"

uint64_t sub_1004B01B4(_QWORD *a1)
{
  unsigned __int8 *v1;
  int v2;

  if (v1[2])
    v2 = 0x10000;
  else
    v2 = 0;
  return sub_1004AFDEC(a1, v2 | (v1[3] << 24) | (v1[1] << 8) | *v1);
}

uint64_t sub_1004B01F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  unsigned int v3;
  int v4;

  if (a1[2])
    v2 = 0x10000;
  else
    v2 = 0;
  v3 = v2 | (a1[3] << 24) | (a1[1] << 8) | *a1;
  if (a2[2])
    v4 = 0x10000;
  else
    v4 = 0;
  return sub_1004AFACC(v3, v4 | (a2[3] << 24) | (a2[1] << 8) | *a2);
}

void sub_1004B0240(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v4;

  sub_100695918(a1);
  if (!v2)
  {
    *(_WORD *)a2 = v4;
    *(_BYTE *)(a2 + 2) = BYTE2(v4) & 1;
    *(_BYTE *)(a2 + 3) = HIBYTE(v4);
  }
}

void sub_1004B0280()
{
  sub_1006959E0();
}

uint64_t sub_1004B02BC@<X0>(unsigned int a1@<W0>, _QWORD *a2@<X8>)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v13;
  _BYTE v14[176];

  v4 = a1 >> 8;
  v5 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v5, v14);
  *(_OWORD *)(inited + 16) = xmmword_10098B610;
  *(_QWORD *)(inited + 32) = 0x74617453776F6C66;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v13 = a1;
  *(_QWORD *)(inited + 48) = String.init<A>(describing:)(&v13);
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0xD000000000000011;
  *(_QWORD *)(inited + 88) = 0x8000000100A07300;
  v13 = v4;
  sub_1000BA294(&qword_100BE6330);
  *(_QWORD *)(inited + 96) = String.init<A>(describing:)(&v13);
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 0xD000000000000014;
  v9 = 1702195828;
  if ((a1 & 0x10000) == 0)
    v9 = 0x65736C6166;
  v10 = 0xE400000000000000;
  if ((a1 & 0x10000) == 0)
    v10 = 0xE500000000000000;
  *(_QWORD *)(inited + 168) = &type metadata for String;
  *(_QWORD *)(inited + 136) = 0x80000001009F4B80;
  *(_QWORD *)(inited + 144) = v9;
  *(_QWORD *)(inited + 152) = v10;
  v11 = Dictionary.init(dictionaryLiteral:)(inited);
  a2[3] = sub_1000BA294(&qword_100BE6338);
  a2[4] = sub_1004B1D28();
  sub_10005F164(a2);
  return ShortDescription.init(name:_:)(0xD00000000000001BLL, 0x80000001009A49D0, v11, &unk_100B77338);
}

uint64_t sub_1004B0460@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;
  int v2;

  if (v1[2])
    v2 = 0x10000;
  else
    v2 = 0;
  return sub_1004B02BC(v2 | (v1[3] << 24) | (v1[1] << 8) | *v1, a1);
}

uint64_t sub_1004B048C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1D6C();
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_1004B04B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for Location.Identifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100079FBC();
  type metadata accessor for LocationViewerActiveLocationState(0);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100094EC4();
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for ViewState(0) + 36) + 8) == 1
    && (swift_retain(), sub_10076B570(), v8 = v7, sub_1000C1354(), (v8 & 1) != 0)
    && (v9 = sub_10076B388()) != 0)
  {
    sub_1000F0D1C(v9 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v2);
    if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v4) == 1)
    {
      sub_10011030C();
      sub_1000C1354();
      return 1;
    }
    else
    {
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v2, v4);
      v12 = Location.Identifier.kind.getter(v11);
      v13 = Location.Identifier.Kind.rawValue.getter(v12 & 1);
      v15 = v14;
      v16 = 1;
      v17 = Location.Identifier.Kind.rawValue.getter(1);
      v19 = v13 == v17 && v15 == v18;
      v20 = v15;
      if (!v19)
      {
        v21 = v18;
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v18, 0);
        v20 = v21;
      }
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v20);
      sub_1000C1354();
      sub_10011030C();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
      return v16 & 1;
    }
  }
  else
  {
    sub_10011030C();
    return 2;
  }
}

uint64_t sub_1004B066C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v9;
  unint64_t v11;
  unint64_t v13;
  char v14;

  if (a1 == 0x7461636F4C6B7361 && a2 == 0xEB000000006E6F69)
  {
    v5 = 0xEB000000006E6F69;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461636F4C6B7361, 0xEB000000006E6F69, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010)
  {
    v7 = 0x8000000100A07340;
    if (a2 == 0x8000000100A07340)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100A07340, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0x72657665536B7361 && a2 == 0xE900000000000065)
  {
    v9 = 0xE900000000000065;
    goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72657665536B7361, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2;
  }
  if (a1 == 0x6574656C706D6F63 && a2 == 0xE800000000000000)
  {
    v11 = 0xE800000000000000;
    goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574656C706D6F63, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3;
  }
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEE006465696E6544)
  {
    v13 = 0xEE006465696E6544;
    goto LABEL_37;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xEE006465696E6544, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100A07320)
  {
    swift_bridgeObjectRelease(0x8000000100A07320);
    return 5;
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A07320, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1004B091C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004B0958 + 4 * byte_1009A4994[a1]))(0x7461636F4C6B7361, 0xEB000000006E6F69);
}

unint64_t sub_1004B0958()
{
  return 0xD000000000000010;
}

uint64_t sub_1004B0974()
{
  return 0x72657665536B7361;
}

uint64_t sub_1004B0990()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1004B09A8()
{
  return 0x6E6F697461636F6CLL;
}

unint64_t sub_1004B09CC()
{
  return 0xD000000000000013;
}

void sub_1004B09EC()
{
  char v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_100099310();
  v15 = v0;
  v2 = v1;
  sub_1000BA294(&qword_100BE63C0);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_10009DE08(v4, v13);
  sub_1000BA294(&qword_100BE63C8);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  sub_1000BA294(&qword_100BE63D0);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  sub_1000BA294(&qword_100BE63D8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v14 = sub_1000BA294(&qword_100BE63E0);
  __chkstk_darwin(v14);
  sub_100098728();
  v8 = sub_1000BA294(&qword_100BE63E8);
  __chkstk_darwin(v8);
  sub_100098728();
  sub_1000BA294(&qword_100BE63F0);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100098694();
  v10 = v2[3];
  v11 = v2[4];
  sub_1000DB418(v2, v10);
  v12 = sub_1004B1DA8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInFlowState.CodingKeys, &type metadata for NotificationsOptInFlowState.CodingKeys, v12, v10, v11);
  __asm { BR              X10 }
}

void sub_1004B0BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  *(_BYTE *)(v4 - 70) = 0;
  sub_1004B1F10();
  sub_1000BC308((uint64_t)&type metadata for NotificationsOptInFlowState.AskLocationCodingKeys, v4 - 70);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v5 = sub_1000D0088();
  v6(v5, v0);
  sub_1000B44B0();
}

void sub_1004B0CEC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;

  sub_100099310();
  v2 = v1;
  sub_1000BA294(&qword_100BE6350);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_1000CE53C(v4, v31);
  sub_1000BA294(&qword_100BE6358);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  sub_1000BA294(&qword_100BE6360);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_10009DE08(v7, v32);
  sub_1000BA294(&qword_100BE6368);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100088FDC();
  sub_1000BA294(&qword_100BE6370);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v10 = sub_1000BA294(&qword_100BE6378);
  __chkstk_darwin(v10);
  sub_100094EC4();
  v11 = sub_1000BA294(&qword_100BE6380);
  __chkstk_darwin(v11);
  sub_100098728();
  v12 = v2[3];
  v13 = v2[4];
  sub_1000DB418(v2, v12);
  v14 = sub_1004B1DA8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInFlowState.CodingKeys, &type metadata for NotificationsOptInFlowState.CodingKeys, v14, v12, v13);
  if (!v0)
  {
    v15 = KeyedDecodingContainer.allKeys.getter(v11);
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = *(unsigned __int8 *)(v15 + 32);
      sub_10055FF58(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
      v19 = v18;
      v21 = v20;
      swift_bridgeObjectRelease();
      if (v19 == v21 >> 1)
        __asm { BR              X9 }
    }
    v22 = type metadata accessor for DecodingError(0);
    sub_10009D46C(v22, (uint64_t)&protocol witness table for DecodingError);
    v24 = v23;
    sub_1000BA294(&qword_100BC6CF8);
    *v24 = &unk_100B772C0;
    v25 = KeyedDecodingContainer.codingPath.getter(v11);
    sub_10003BD2C(v25, v26, 0x80000001009F2600);
    v27 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, enum case for DecodingError.typeMismatch(_:), v22);
    swift_willThrow(v27, v28);
    sub_1000C0EBC();
    v29 = sub_1000CD7B4();
    v30(v29);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2);
  sub_1000B44B0();
}

uint64_t sub_1004B114C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1F10();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1174(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1F10();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B119C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1ED4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B11C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1ED4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B11EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1E98();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1214(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1E98();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B123C()
{
  unsigned __int8 *v0;

  return sub_1004B091C(*v0);
}

uint64_t sub_1004B1244@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004B066C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004B1268(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1DA8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1290(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1DA8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B12B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1E5C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B12E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1E5C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B1308(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1E20();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1330(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1E20();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B1358(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1DE4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1380(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1DE4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1004B13A8(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_1004B0CEC();
  if (!v1)
    *a1 = v3;
}

void sub_1004B13D0()
{
  sub_1004B09EC();
}

uint64_t sub_1004B13E8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v9;

  if (a1 == 0x6E6564646968 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6564646968, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEE006465696E6544)
  {
    v8 = 0xEE006465696E6544;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xEE006465696E6544, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100A07320)
  {
    swift_bridgeObjectRelease(0x8000000100A07320);
    return 2;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A07320, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1004B1550(char a1)
{
  if (!a1)
    return 0x6E6564646968;
  if (a1 == 1)
    return 0x6E6F697461636F6CLL;
  return 0xD000000000000013;
}

void sub_1004B15B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, char a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_100099310();
  a24 = v27;
  a25 = v28;
  a10 = v29;
  v31 = v30;
  v32 = sub_1000BA294(&qword_100BE6438);
  v51 = *(_QWORD *)(v32 - 8);
  v52 = v32;
  sub_10009D98C();
  __chkstk_darwin(v33);
  sub_1000CE53C(v34, v47);
  v35 = sub_1000BA294(&qword_100BE6440);
  v48 = *(_QWORD *)(v35 - 8);
  v49 = v35;
  sub_10009D98C();
  __chkstk_darwin(v36);
  sub_100098728();
  v39 = v38 - v37;
  v40 = sub_1000BA294(&qword_100BE6448);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  sub_100094EC4();
  v42 = sub_1000BA294(&qword_100BE6450);
  v53 = *(_QWORD *)(v42 - 8);
  sub_10009D98C();
  __chkstk_darwin(v43);
  sub_100098694();
  v45 = v31[3];
  v44 = v31[4];
  sub_1000DB418(v31, v45);
  v46 = sub_1004B1F4C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInAlertState.CodingKeys, &type metadata for NotificationsOptInAlertState.CodingKeys, v46, v45, v44);
  if (a10)
  {
    if (a10 == 1)
    {
      a14 = 1;
      sub_1004B1FC4();
      sub_1000BD9C8((uint64_t)&type metadata for NotificationsOptInAlertState.LocationDeniedCodingKeys, (uint64_t)&a14, v42);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v39, v49);
    }
    else
    {
      sub_1000BD514();
      sub_1000BD9C8((uint64_t)&type metadata for NotificationsOptInAlertState.NotificationsDeniedCodingKeys, (uint64_t)&a15, v42);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    }
  }
  else
  {
    a13 = 0;
    sub_1004B2000();
    sub_1000BD9C8((uint64_t)&type metadata for NotificationsOptInAlertState.HiddenCodingKeys, (uint64_t)&a13, v42);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v26, v40);
  }
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v25, v42);
  sub_1000B44B0();
}

void sub_1004B1794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  sub_100099310();
  a23 = v26;
  a24 = v27;
  v29 = v28;
  v68 = sub_1000BA294(&qword_100BE63F8);
  v71 = *(_QWORD *)(v68 - 8);
  sub_10009D98C();
  __chkstk_darwin(v30);
  sub_100088FDC();
  v70 = v31;
  v32 = sub_1000BA294(&qword_100BE6400);
  v66 = *(_QWORD *)(v32 - 8);
  v67 = v32;
  sub_10009D98C();
  __chkstk_darwin(v33);
  sub_100088FDC();
  v69 = v34;
  v65 = sub_1000BA294(&qword_100BE6408);
  sub_100099300();
  __chkstk_darwin(v35);
  sub_100098694();
  v36 = sub_1000BA294(&qword_100BE6410);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  sub_100079FBC();
  v39 = v29[3];
  v38 = v29[4];
  sub_1000DB418(v29, v39);
  v40 = sub_1004B1F4C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NotificationsOptInAlertState.CodingKeys, &type metadata for NotificationsOptInAlertState.CodingKeys, v40, v39, v38);
  if (v24)
    goto LABEL_11;
  v63 = v25;
  v64 = v37;
  v72 = v29;
  v41 = KeyedDecodingContainer.allKeys.getter(v36);
  v42 = v41;
  v43 = *(_QWORD *)(v41 + 16);
  if (!v43)
  {
LABEL_8:
    v51 = type metadata accessor for DecodingError(0);
    sub_10009D46C(v51, (uint64_t)&protocol witness table for DecodingError);
    v53 = v52;
    sub_1000BA294(&qword_100BC6CF8);
    *v53 = &unk_100B773D8;
    v54 = KeyedDecodingContainer.codingPath.getter(v36);
    sub_10003BD2C(v54, v55, 0x80000001009F2600);
    v56 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v53, enum case for DecodingError.typeMismatch(_:), v51);
    swift_willThrow(v56, v57);
    swift_unknownObjectRelease(v42);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v36);
    v29 = v72;
LABEL_11:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
    goto LABEL_12;
  }
  v44 = v36;
  v45 = *(unsigned __int8 *)(v41 + 32);
  v46 = sub_10055FF58(1, v43, v41, v41 + 32, 0, (2 * v43) | 1);
  v48 = v47;
  v50 = v49;
  swift_bridgeObjectRelease();
  v42 = v46;
  if (v48 != v50 >> 1)
  {
    v36 = v44;
    goto LABEL_8;
  }
  if (v45)
  {
    if (v45 == 1)
    {
      a13 = 1;
      sub_1004B1FC4();
      sub_100098904((uint64_t)&type metadata for NotificationsOptInAlertState.LocationDeniedCodingKeys, (uint64_t)&a13);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v69, v67);
    }
    else
    {
      sub_1000BD514();
      sub_100098904((uint64_t)&type metadata for NotificationsOptInAlertState.NotificationsDeniedCodingKeys, (uint64_t)&a14);
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v68);
    }
    v60 = v46;
  }
  else
  {
    a12 = 0;
    sub_1004B2000();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for NotificationsOptInAlertState.HiddenCodingKeys, &a12, v44, &type metadata for NotificationsOptInAlertState.HiddenCodingKeys);
    v58 = sub_1000D0088();
    v59(v58, v65);
    v60 = v46;
  }
  swift_unknownObjectRelease(v60);
  v61 = sub_1000CD7B4();
  v62(v61);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v72);
LABEL_12:
  sub_1000B44B0();
}

uint64_t sub_1004B1AFC()
{
  char *v0;

  return sub_1004B1550(*v0);
}

uint64_t sub_1004B1B04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004B13E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004B1B28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1F4C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1B50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1F4C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B1B78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B2000();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1BA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B2000();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B1BC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1FC4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1BF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1FC4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004B1C18(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1F88();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004B1C40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004B1F88();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_1004B1C6C()
{
  unint64_t result;

  result = qword_100BE6320;
  if (!qword_100BE6320)
  {
    result = swift_getWitnessTable(&unk_1009A4CB8, &unk_100B772C0);
    atomic_store(result, (unint64_t *)&qword_100BE6320);
  }
  return result;
}

#error "1004B1CB8: call analysis failed (funcsize=10)"

#error "1004B1CDC: call analysis failed (funcsize=6)"

unint64_t sub_1004B1CEC()
{
  unint64_t result;

  result = qword_100BE6328;
  if (!qword_100BE6328)
  {
    result = swift_getWitnessTable(&unk_1009A4CE0, &unk_100B77338);
    atomic_store(result, (unint64_t *)&qword_100BE6328);
  }
  return result;
}

unint64_t sub_1004B1D28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE6340;
  if (!qword_100BE6340)
  {
    v1 = sub_100075EB0(&qword_100BE6338);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE6340);
  }
  return result;
}

unint64_t sub_1004B1D6C()
{
  unint64_t result;

  result = qword_100BE6348;
  if (!qword_100BE6348)
  {
    result = swift_getWitnessTable(&unk_1009A4D08, &unk_100B77338);
    atomic_store(result, (unint64_t *)&qword_100BE6348);
  }
  return result;
}

unint64_t sub_1004B1DA8()
{
  unint64_t result;

  result = qword_100BE6388;
  if (!qword_100BE6388)
  {
    result = swift_getWitnessTable(&unk_1009A56DC, &type metadata for NotificationsOptInFlowState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6388);
  }
  return result;
}

unint64_t sub_1004B1DE4()
{
  unint64_t result;

  result = qword_100BE6390;
  if (!qword_100BE6390)
  {
    result = swift_getWitnessTable(&unk_1009A568C, &type metadata for NotificationsOptInFlowState.NotificationsDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6390);
  }
  return result;
}

unint64_t sub_1004B1E20()
{
  unint64_t result;

  result = qword_100BE6398;
  if (!qword_100BE6398)
  {
    result = swift_getWitnessTable(&unk_1009A563C, &type metadata for NotificationsOptInFlowState.LocationDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6398);
  }
  return result;
}

unint64_t sub_1004B1E5C()
{
  unint64_t result;

  result = qword_100BE63A0;
  if (!qword_100BE63A0)
  {
    result = swift_getWitnessTable(&unk_1009A55EC, &type metadata for NotificationsOptInFlowState.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE63A0);
  }
  return result;
}

unint64_t sub_1004B1E98()
{
  unint64_t result;

  result = qword_100BE63A8;
  if (!qword_100BE63A8)
  {
    result = swift_getWitnessTable(&unk_1009A559C, &type metadata for NotificationsOptInFlowState.AskSevereCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE63A8);
  }
  return result;
}

unint64_t sub_1004B1ED4()
{
  unint64_t result;

  result = qword_100BE63B0;
  if (!qword_100BE63B0)
  {
    result = swift_getWitnessTable(&unk_1009A554C, &type metadata for NotificationsOptInFlowState.AskNotificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE63B0);
  }
  return result;
}

unint64_t sub_1004B1F10()
{
  unint64_t result;

  result = qword_100BE63B8;
  if (!qword_100BE63B8)
  {
    result = swift_getWitnessTable(&unk_1009A54FC, &type metadata for NotificationsOptInFlowState.AskLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE63B8);
  }
  return result;
}

unint64_t sub_1004B1F4C()
{
  unint64_t result;

  result = qword_100BE6418;
  if (!qword_100BE6418)
  {
    result = swift_getWitnessTable(&unk_1009A54AC, &type metadata for NotificationsOptInAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6418);
  }
  return result;
}

unint64_t sub_1004B1F88()
{
  unint64_t result;

  result = qword_100BE6420;
  if (!qword_100BE6420)
  {
    result = swift_getWitnessTable(&unk_1009A545C, &type metadata for NotificationsOptInAlertState.NotificationsDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6420);
  }
  return result;
}

unint64_t sub_1004B1FC4()
{
  unint64_t result;

  result = qword_100BE6428;
  if (!qword_100BE6428)
  {
    result = swift_getWitnessTable(&unk_1009A540C, &type metadata for NotificationsOptInAlertState.LocationDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6428);
  }
  return result;
}

unint64_t sub_1004B2000()
{
  unint64_t result;

  result = qword_100BE6430;
  if (!qword_100BE6430)
  {
    result = swift_getWitnessTable(&unk_1009A53BC, &type metadata for NotificationsOptInAlertState.HiddenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6430);
  }
  return result;
}

unint64_t sub_1004B203C()
{
  unint64_t result;

  result = qword_100BE6460;
  if (!qword_100BE6460)
  {
    result = swift_getWitnessTable(&unk_1009A536C, &type metadata for NotificationsOptInViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6460);
  }
  return result;
}

unint64_t sub_1004B2078()
{
  unint64_t result;

  result = qword_100BE6468;
  if (!qword_100BE6468)
  {
    result = swift_getWitnessTable(&unk_1009A4C90, &unk_100B772C0);
    atomic_store(result, (unint64_t *)&qword_100BE6468);
  }
  return result;
}

unint64_t sub_1004B20B4()
{
  unint64_t result;

  result = qword_100BE6470;
  if (!qword_100BE6470)
  {
    result = swift_getWitnessTable(&unk_1009A6F38, &type metadata for OptInUserStatus);
    atomic_store(result, (unint64_t *)&qword_100BE6470);
  }
  return result;
}

unint64_t sub_1004B20F0()
{
  unint64_t result;

  result = qword_100BE6480;
  if (!qword_100BE6480)
  {
    result = swift_getWitnessTable(&unk_1009A4C68, &unk_100B772C0);
    atomic_store(result, (unint64_t *)&qword_100BE6480);
  }
  return result;
}

unint64_t sub_1004B212C()
{
  unint64_t result;

  result = qword_100BE6488;
  if (!qword_100BE6488)
  {
    result = swift_getWitnessTable(&unk_1009A6F10, &type metadata for OptInUserStatus);
    atomic_store(result, (unint64_t *)&qword_100BE6488);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationsOptInViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1004B21B4 + 4 * byte_1009A49AB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004B21E8 + 4 * byte_1009A49A6[v4]))();
}

uint64_t sub_1004B21E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B21F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004B21F8);
  return result;
}

uint64_t sub_1004B2204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004B220CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1004B2210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B2218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInViewModel.CodingKeys()
{
  return &type metadata for NotificationsOptInViewModel.CodingKeys;
}

uint64_t _s7Weather28NotificationsOptInAlertStateO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004B2280 + 4 * byte_1009A49B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004B22B4 + 4 * byte_1009A49B0[v4]))();
}

uint64_t sub_1004B22B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B22BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004B22C4);
  return result;
}

uint64_t sub_1004B22D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004B22D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004B22DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B22E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.CodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.HiddenCodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.HiddenCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.LocationDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.LocationDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.NotificationsDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.NotificationsDeniedCodingKeys;
}

uint64_t _s7Weather27NotificationsOptInFlowStateO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1004B237C + 4 * byte_1009A49BF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1004B23B0 + 4 * byte_1009A49BA[v4]))();
}

uint64_t sub_1004B23B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B23B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004B23C0);
  return result;
}

uint64_t sub_1004B23CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004B23D4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1004B23D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004B23E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.CodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.AskLocationCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.AskLocationCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.AskNotificationsCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.AskNotificationsCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.AskSevereCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.AskSevereCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.CompleteCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.CompleteCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.LocationDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.LocationDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.NotificationsDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.NotificationsDeniedCodingKeys;
}

unint64_t sub_1004B2460()
{
  unint64_t result;

  result = qword_100BE6490;
  if (!qword_100BE6490)
  {
    result = swift_getWitnessTable(&unk_1009A50E4, &type metadata for NotificationsOptInFlowState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6490);
  }
  return result;
}

unint64_t sub_1004B24A0()
{
  unint64_t result;

  result = qword_100BE6498;
  if (!qword_100BE6498)
  {
    result = swift_getWitnessTable(&unk_1009A528C, &type metadata for NotificationsOptInAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6498);
  }
  return result;
}

unint64_t sub_1004B24E0()
{
  unint64_t result;

  result = qword_100BE64A0;
  if (!qword_100BE64A0)
  {
    result = swift_getWitnessTable(&unk_1009A5344, &type metadata for NotificationsOptInViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64A0);
  }
  return result;
}

unint64_t sub_1004B2520()
{
  unint64_t result;

  result = qword_100BE64A8;
  if (!qword_100BE64A8)
  {
    result = swift_getWitnessTable(&unk_1009A52B4, &type metadata for NotificationsOptInViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64A8);
  }
  return result;
}

unint64_t sub_1004B2560()
{
  unint64_t result;

  result = qword_100BE64B0;
  if (!qword_100BE64B0)
  {
    result = swift_getWitnessTable(&unk_1009A52DC, &type metadata for NotificationsOptInViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64B0);
  }
  return result;
}

unint64_t sub_1004B25A0()
{
  unint64_t result;

  result = qword_100BE64B8;
  if (!qword_100BE64B8)
  {
    result = swift_getWitnessTable(&unk_1009A51AC, &type metadata for NotificationsOptInAlertState.HiddenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64B8);
  }
  return result;
}

unint64_t sub_1004B25E0()
{
  unint64_t result;

  result = qword_100BE64C0;
  if (!qword_100BE64C0)
  {
    result = swift_getWitnessTable(&unk_1009A51D4, &type metadata for NotificationsOptInAlertState.HiddenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64C0);
  }
  return result;
}

unint64_t sub_1004B2620()
{
  unint64_t result;

  result = qword_100BE64C8;
  if (!qword_100BE64C8)
  {
    result = swift_getWitnessTable(&unk_1009A515C, &type metadata for NotificationsOptInAlertState.LocationDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64C8);
  }
  return result;
}

unint64_t sub_1004B2660()
{
  unint64_t result;

  result = qword_100BE64D0;
  if (!qword_100BE64D0)
  {
    result = swift_getWitnessTable(&unk_1009A5184, &type metadata for NotificationsOptInAlertState.LocationDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64D0);
  }
  return result;
}

unint64_t sub_1004B26A0()
{
  unint64_t result;

  result = qword_100BE64D8;
  if (!qword_100BE64D8)
  {
    result = swift_getWitnessTable(&unk_1009A510C, &type metadata for NotificationsOptInAlertState.NotificationsDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64D8);
  }
  return result;
}

unint64_t sub_1004B26E0()
{
  unint64_t result;

  result = qword_100BE64E0;
  if (!qword_100BE64E0)
  {
    result = swift_getWitnessTable(&unk_1009A5134, &type metadata for NotificationsOptInAlertState.NotificationsDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64E0);
  }
  return result;
}

unint64_t sub_1004B2720()
{
  unint64_t result;

  result = qword_100BE64E8;
  if (!qword_100BE64E8)
  {
    result = swift_getWitnessTable(&unk_1009A51FC, &type metadata for NotificationsOptInAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64E8);
  }
  return result;
}

unint64_t sub_1004B2760()
{
  unint64_t result;

  result = qword_100BE64F0;
  if (!qword_100BE64F0)
  {
    result = swift_getWitnessTable(&unk_1009A5224, &type metadata for NotificationsOptInAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64F0);
  }
  return result;
}

unint64_t sub_1004B27A0()
{
  unint64_t result;

  result = qword_100BE64F8;
  if (!qword_100BE64F8)
  {
    result = swift_getWitnessTable(&unk_1009A5004, &type metadata for NotificationsOptInFlowState.AskLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE64F8);
  }
  return result;
}

unint64_t sub_1004B27E0()
{
  unint64_t result;

  result = qword_100BE6500;
  if (!qword_100BE6500)
  {
    result = swift_getWitnessTable(&unk_1009A502C, &type metadata for NotificationsOptInFlowState.AskLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6500);
  }
  return result;
}

unint64_t sub_1004B2820()
{
  unint64_t result;

  result = qword_100BE6508;
  if (!qword_100BE6508)
  {
    result = swift_getWitnessTable(&unk_1009A4FB4, &type metadata for NotificationsOptInFlowState.AskNotificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6508);
  }
  return result;
}

unint64_t sub_1004B2860()
{
  unint64_t result;

  result = qword_100BE6510;
  if (!qword_100BE6510)
  {
    result = swift_getWitnessTable(&unk_1009A4FDC, &type metadata for NotificationsOptInFlowState.AskNotificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6510);
  }
  return result;
}

unint64_t sub_1004B28A0()
{
  unint64_t result;

  result = qword_100BE6518;
  if (!qword_100BE6518)
  {
    result = swift_getWitnessTable(&unk_1009A4F64, &type metadata for NotificationsOptInFlowState.AskSevereCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6518);
  }
  return result;
}

unint64_t sub_1004B28E0()
{
  unint64_t result;

  result = qword_100BE6520;
  if (!qword_100BE6520)
  {
    result = swift_getWitnessTable(&unk_1009A4F8C, &type metadata for NotificationsOptInFlowState.AskSevereCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6520);
  }
  return result;
}

unint64_t sub_1004B2920()
{
  unint64_t result;

  result = qword_100BE6528;
  if (!qword_100BE6528)
  {
    result = swift_getWitnessTable(&unk_1009A4F14, &type metadata for NotificationsOptInFlowState.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6528);
  }
  return result;
}

unint64_t sub_1004B2960()
{
  unint64_t result;

  result = qword_100BE6530;
  if (!qword_100BE6530)
  {
    result = swift_getWitnessTable(&unk_1009A4F3C, &type metadata for NotificationsOptInFlowState.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6530);
  }
  return result;
}

unint64_t sub_1004B29A0()
{
  unint64_t result;

  result = qword_100BE6538;
  if (!qword_100BE6538)
  {
    result = swift_getWitnessTable(&unk_1009A4EC4, &type metadata for NotificationsOptInFlowState.LocationDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6538);
  }
  return result;
}

unint64_t sub_1004B29E0()
{
  unint64_t result;

  result = qword_100BE6540;
  if (!qword_100BE6540)
  {
    result = swift_getWitnessTable(&unk_1009A4EEC, &type metadata for NotificationsOptInFlowState.LocationDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6540);
  }
  return result;
}

unint64_t sub_1004B2A20()
{
  unint64_t result;

  result = qword_100BE6548;
  if (!qword_100BE6548)
  {
    result = swift_getWitnessTable(&unk_1009A4E74, &type metadata for NotificationsOptInFlowState.NotificationsDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6548);
  }
  return result;
}

unint64_t sub_1004B2A60()
{
  unint64_t result;

  result = qword_100BE6550;
  if (!qword_100BE6550)
  {
    result = swift_getWitnessTable(&unk_1009A4E9C, &type metadata for NotificationsOptInFlowState.NotificationsDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6550);
  }
  return result;
}

unint64_t sub_1004B2AA0()
{
  unint64_t result;

  result = qword_100BE6558;
  if (!qword_100BE6558)
  {
    result = swift_getWitnessTable(&unk_1009A5054, &type metadata for NotificationsOptInFlowState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6558);
  }
  return result;
}

unint64_t sub_1004B2AE0()
{
  unint64_t result;

  result = qword_100BE6560;
  if (!qword_100BE6560)
  {
    result = swift_getWitnessTable(&unk_1009A507C, &type metadata for NotificationsOptInFlowState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE6560);
  }
  return result;
}

uint64_t sub_1004B2B1C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BE6628);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v36;
  if (!v36)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1000BA294(&qword_100BC45B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v12 = result;
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = sub_1000BA294(&qword_100BE6638);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  v16 = v34;
  if (!v34)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v28 = v35;
  v29 = v37;
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BE6610);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  v20 = v32;
  if (!v32)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v21 = v33;
  v22 = a1[3];
  v23 = a1[4];
  sub_1000DB418(a1, v22);
  v24 = sub_1000BA294(&qword_100BE6650);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v24, v24, v22, v23);
  if (v31)
  {
    v25 = sub_100068EB4((uint64_t)v30, v31);
    __chkstk_darwin(v25);
    (*(void (**)(void))(v26 + 16))();
    v27 = sub_1004B3F88(v8, v29, v12, v16, v28, v20, v21);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
    result = type metadata accessor for InteractiveMapModule();
    a2[3] = result;
    a2[4] = &off_100B900B0;
    *a2 = v27;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004B2D3C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v31;
  if (v31)
  {
    v9 = v32;
    v26 = v33;
    v27 = v34;
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BE6648);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v30)
    {
      v13 = sub_100068EB4((uint64_t)v29, v30);
      __chkstk_darwin(v13);
      v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v16 + 16))(v15);
      v17 = *v15;
      v18 = type metadata accessor for ListViewModelFactory(0);
      v28[3] = v18;
      v28[4] = &off_100B75EE8;
      v28[0] = v17;
      v19 = type metadata accessor for LocationRowViewModelProvider();
      v20 = (_QWORD *)swift_allocObject(v19, 88, 7);
      v21 = sub_100068EB4((uint64_t)v28, v18);
      __chkstk_darwin(v21);
      v23 = (uint64_t *)((char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v24 + 16))(v23);
      v25 = *v23;
      v20[9] = v18;
      v20[10] = &off_100B75EE8;
      v20[2] = v8;
      v20[3] = v9;
      v20[4] = v26;
      v20[5] = v27;
      v20[6] = v25;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
      a2[3] = v19;
      a2[4] = &off_100B79270;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1004B2F2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  v2 = type metadata accessor for WeatherMapZoomController();
  v3 = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit(v3 + 16, 0);
  result = sub_1004B43C4();
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t sub_1004B2F78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for MapPerformanceTestConditionsProvider();
  swift_allocObject(v2, 24, 7);
  result = sub_10070288C();
  *a1 = result;
  a1[1] = (uint64_t)&off_100B8BC10;
  return result;
}

double sub_1004B2FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;

  v0 = type metadata accessor for Scope(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = ProxyContainer.public.getter(v4);
  v6 = type metadata accessor for Tracker(0);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0xD000000000000014, 0x8000000100A07390, sub_1004B31C0, 0, v6);
  v8 = swift_release(v5);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v3, enum case for Scope.containerSingleton(_:), v0, v8);
  v9 = Definition.inScope(_:)(v3);
  swift_release(v9);
  v10 = swift_release(v7);
  (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v10);
  v11 = sub_1000BA294(&qword_100BE6618);
  v12 = RegistrationContainer.register<A>(_:name:factory:)(v11, 0, 0, sub_1004B323C, 0, v11);
  swift_release(v12);
  v13 = sub_1000BA294(&qword_100BE6620);
  v14 = RegistrationContainer.register<A>(_:name:factory:)(v13, 0, 0, sub_1004B32D0, 0, v13);
  swift_release(v14);
  v15 = sub_1000BA294(&qword_100BE6628);
  v16 = RegistrationContainer.register<A>(_:name:factory:)(v15, 0, 0, sub_1004B33D0, 0, v15);
  swift_release(v16);
  v17 = sub_1000BA294(&qword_100BC45B0);
  v18 = RegistrationContainer.register<A>(_:name:factory:)(v17, 0, 0, sub_1004B36BC, 0, v17);
  swift_release(v18);
  v19 = sub_1000BA294(&qword_100BE6630);
  v20 = RegistrationContainer.register<A>(_:name:factory:)(v19, 0, 0, sub_1004B39A4, 0, v19);
  swift_release(v20);
  v21 = sub_1000BA294(&qword_100BE6638);
  v22 = RegistrationContainer.register<A>(_:name:factory:)(v21, 0, 0, sub_1004B39E8, 0, v21);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_1004B31C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = a1[3];
  v2 = a1[4];
  sub_1000DB418(a1, v1);
  v3 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v3, v3, v1, v2);
  if (result)
  {
    v5 = result;
    v6 = Tracker.chain(name:identifier:)(7364973, 0xE300000000000000, 0, 0);
    swift_release(v5);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004B323C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(&type metadata for InteractiveMapPresentationContext, &type metadata for InteractiveMapPresentationContext, v3, v4);
  if (v7 == 3)
  {
    __break(1u);
  }
  else
  {
    v6 = type metadata accessor for InteractiveMapInputFactory();
    result = swift_allocObject(v6, 17, 7);
    *(_BYTE *)(result + 16) = v7;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_100B68228;
    *a2 = result;
  }
  return result;
}

void sub_1004B32D0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = type metadata accessor for Tracker(0);
  if (dispatch thunk of ResolverType.resolve<A>(_:name:)(v6, 0xD000000000000014, 0x8000000100A07390, v6, v4, v5))
  {
    v7 = a1[3];
    v8 = a1[4];
    sub_1000DB418(a1, v7);
    v9 = sub_1000BA294(&qword_100BCF678);
    dispatch thunk of ResolverType.resolve<A>(_:)(v9, v9, v7, v8);
    if (v10)
    {
      a2[3] = &type metadata for InteractiveMapTracker;
      a2[4] = &off_100B80FC0;
      *a2 = swift_allocObject(&unk_100B77850, 65, 7);
      sub_100582194();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1004B33D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t **v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v46;
  if (!v46)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = v47;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BE6620);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v45)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = type metadata accessor for WeatherDataUpdater();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v43[3] = v15;
  v43[4] = &off_100B94A68;
  v43[0] = result;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BDBAD0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  v19 = v41;
  if (!v41)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v37 = v42;
  v38 = a2;
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BDC598);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (v40)
  {
    v23 = sub_100068EB4((uint64_t)v44, v45);
    __chkstk_darwin(v23);
    v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v26 + 16))(v25);
    v27 = sub_100068EB4((uint64_t)v43, v15);
    __chkstk_darwin(v27);
    v29 = (uint64_t *)((char *)&v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v30 + 16))(v29);
    v31 = sub_100068EB4((uint64_t)v39, v40);
    __chkstk_darwin(v31);
    v33 = (uint64_t **)((char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v34 + 16))(v33);
    v35 = sub_1004B4184(v8, v9, (uint64_t)v25, *v29, v19, v37, *v33);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v39);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v43);
    result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v44);
    v36 = v38;
    *v38 = v35;
    v36[1] = &off_100B9B590;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004B36BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v30;
  v7 = v31;
  v9 = v29;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BE6618);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v26, v27);
  v24 = type metadata accessor for InteractiveMapInputFactory();
  v25 = &off_100B68228;
  v23[0] = v13;
  sub_100043CA8((uint64_t)v23, (uint64_t)v22);
  v14 = swift_allocObject(&unk_100B777D8, 56, 7);
  sub_10003C800(v22, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  v15 = swift_allocObject(&unk_100B77800, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1004B3DDC;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BE6630);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v27)
  {
    v19 = *sub_1000DB418(v26, v27);
    v24 = type metadata accessor for InteractiveMapViewModelFactory();
    v25 = &off_100B6D7A0;
    v23[0] = v19;
    sub_100043CA8((uint64_t)v23, (uint64_t)v22);
    v20 = swift_allocObject(&unk_100B77828, 56, 7);
    sub_10003C800(v22, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
    v21 = sub_1000BA294(&qword_100BC45B0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    return sub_100183BA4(v6, v9, v8, v7, sub_100182F48, 0, sub_1000A22C0, v15, sub_1004B3E08, v20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1004B3914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_100281750(a1, a3);
}

uint64_t sub_1004B395C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_100324198(a1, a3);
}

uint64_t sub_1004B39A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for InteractiveMapViewModelFactory();
  result = swift_allocObject(v2, 16, 7);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100B6D7A0;
  *a1 = result;
  return result;
}

uint64_t sub_1004B39E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD v48[3];
  ValueMetadata *v49;
  _UNKNOWN **v50;
  _QWORD v51[5];
  _QWORD v52[3];
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v56)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BDBAB8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!v55)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v43 = v57;
  v44 = v58;
  v45 = v59;
  v46 = v56;
  v47 = a2;
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BDBAC0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (v53)
  {
    v14 = sub_100068EB4((uint64_t)v54, v55);
    v42[1] = v42;
    __chkstk_darwin(v14);
    v16 = (_QWORD *)((char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    v18 = sub_100068EB4((uint64_t)v52, v53);
    v42[0] = v42;
    __chkstk_darwin(v18);
    v20 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v20);
    v22 = *v16;
    v23 = type metadata accessor for LocationFinder();
    v51[3] = v23;
    v51[4] = &off_100B788B0;
    v51[0] = v22;
    v49 = &type metadata for AddLocationContextHelper;
    v50 = &off_100B720D8;
    v24 = swift_allocObject(&unk_100B777B0, 56, 7);
    v48[0] = v24;
    v25 = *((_OWORD *)v20 + 1);
    *(_OWORD *)(v24 + 16) = *(_OWORD *)v20;
    *(_OWORD *)(v24 + 32) = v25;
    *(_QWORD *)(v24 + 48) = *((_QWORD *)v20 + 4);
    v26 = type metadata accessor for InteractiveMapLocationReader();
    v27 = (_QWORD *)swift_allocObject(v26, 128, 7);
    v28 = sub_100068EB4((uint64_t)v51, v23);
    __chkstk_darwin(v28);
    v30 = (_QWORD *)((char *)v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v31 + 16))(v30);
    v32 = sub_100068EB4((uint64_t)v48, (uint64_t)v49);
    __chkstk_darwin(v32);
    v34 = (char *)v42 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v34);
    v36 = *v30;
    v27[9] = v23;
    v27[10] = &off_100B788B0;
    v27[6] = v36;
    v27[14] = &type metadata for AddLocationContextHelper;
    v27[15] = &off_100B720D8;
    v37 = swift_allocObject(&unk_100B777B0, 56, 7);
    v27[11] = v37;
    v38 = *((_OWORD *)v34 + 1);
    *(_OWORD *)(v37 + 16) = *(_OWORD *)v34;
    *(_OWORD *)(v37 + 32) = v38;
    *(_QWORD *)(v37 + 48) = *((_QWORD *)v34 + 4);
    v39 = v43;
    v27[2] = v46;
    v27[3] = v39;
    v40 = v45;
    v27[4] = v44;
    v27[5] = v40;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v48);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v51);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v52);
    result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v54);
    v41 = v47;
    *v47 = v27;
    v41[1] = &off_100B95578;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_1004B3DB0()
{
  return sub_1004B2FBC();
}

uint64_t sub_1004B3DB8()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004B3DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004B3914(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1004B3DE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B3E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004B395C(a1, (_QWORD *)(v2 + 16), a2);
}

_QWORD *sub_1004B3E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  ValueMetadata *v35;
  _UNKNOWN **v36;

  v32 = a2;
  v33 = a3;
  v31 = a1;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = &type metadata for ContentStatusBannerViewFactory;
  v36 = &off_100B99BA0;
  v18 = static Logger.map.getter(v15);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    v30 = a4;
    v22 = a5;
    v23 = a6;
    v24 = a7;
    v25 = v21;
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Initializing fullscreen map module", v21, 2u);
    v26 = v25;
    a7 = v24;
    a6 = v23;
    a5 = v22;
    a4 = v30;
    swift_slowDealloc(v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v27 = v32;
  a8[2] = v31;
  a8[3] = v27;
  a8[4] = v33;
  a8[5] = a4;
  a8[6] = a5;
  a8[7] = a6;
  a8[8] = a7;
  sub_10003C800(&v34, (uint64_t)(a8 + 9));
  return a8;
}

_QWORD *sub_1004B3F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[5];

  v20[3] = &type metadata for ContentStatusBannerViewFactory;
  v20[4] = &off_100B99BA0;
  v14 = type metadata accessor for InteractiveMapModule();
  v15 = (_QWORD *)swift_allocObject(v14, 112, 7);
  v16 = sub_100068EB4((uint64_t)v20, (uint64_t)&type metadata for ContentStatusBannerViewFactory);
  __chkstk_darwin(v16);
  (*(void (**)(void))(v17 + 16))();
  v18 = sub_1004B3E10(a1, a2, a3, a4, a5, a6, a7, v15);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v20);
  return v18;
}

_QWORD *sub_1004B408C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  a8[7] = &type metadata for InteractiveMapTracker;
  a8[8] = &off_100B80FC0;
  v16 = swift_allocObject(&unk_100B77850, 65, 7);
  a8[4] = v16;
  v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(a3 + 32);
  *(_BYTE *)(v16 + 64) = *(_BYTE *)(a3 + 48);
  a8[12] = type metadata accessor for WeatherDataUpdater();
  a8[13] = &off_100B94A68;
  a8[9] = a4;
  a8[19] = type metadata accessor for NetworkActivityManager();
  a8[20] = &off_100B6D7E8;
  a8[16] = a7;
  v18 = (uint64_t)a8 + OBJC_IVAR____TtC7Weather24InteractiveMapInteractor_viewData;
  v19 = type metadata accessor for ViewData(0);
  _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
  a8[2] = a1;
  a8[3] = a2;
  a8[14] = a5;
  a8[15] = a6;
  return a8;
}

_QWORD *sub_1004B4184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  ValueWitnessTable *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  _BYTE v35[64];
  _QWORD v37[3];
  uint64_t v38;
  _UNKNOWN **v39;
  _QWORD v40[5];
  _QWORD v41[5];

  v14 = *a7;
  v41[3] = &type metadata for InteractiveMapTracker;
  v41[4] = &off_100B80FC0;
  v15 = swift_allocObject(&unk_100B77850, 65, 7);
  v41[0] = v15;
  v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a3 + 32);
  *(_BYTE *)(v15 + 64) = *(_BYTE *)(a3 + 48);
  v17 = type metadata accessor for WeatherDataUpdater();
  v40[3] = v17;
  v40[4] = &off_100B94A68;
  v40[0] = a4;
  v38 = v14;
  v39 = &off_100B6D7E8;
  v37[0] = a7;
  v18 = type metadata accessor for InteractiveMapInteractor(0);
  v19 = (_QWORD *)swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v20 = sub_100068EB4((uint64_t)v41, (uint64_t)&type metadata for InteractiveMapTracker);
  __chkstk_darwin(v20);
  v22 = (char *)&v37[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(uint64_t, uint64_t *))v23->initializeWithCopy)((uint64_t)v22, v24);
  v25 = sub_100068EB4((uint64_t)v40, v17);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)&v35[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  v29 = sub_100068EB4((uint64_t)v37, v38);
  __chkstk_darwin(v29);
  v31 = (uint64_t *)&v35[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  v33 = sub_1004B408C(a1, a2, (uint64_t)v22, *v27, a5, a6, *v31, v19);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v40);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v41);
  return v33;
}

uint64_t sub_1004B4398()
{
  uint64_t v0;

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 65, 7);
}

unint64_t sub_1004B43C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE6640;
  if (!qword_100BE6640)
  {
    v1 = type metadata accessor for WeatherMapZoomController();
    result = swift_getWitnessTable(&unk_1009DCF9C, v1);
    atomic_store(result, (unint64_t *)&qword_100BE6640);
  }
  return result;
}

uint64_t *sub_1004B440C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v35;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for DetailChartDataElement(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v7 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v22 = *v20;
    v21 = v20[1];
    *v19 = v22;
    v19[1] = v21;
    v23 = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)v7 + v18) = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = *(uint64_t *)((char *)a2 + v24);
    *(uint64_t *)((char *)v7 + v24) = v26;
    v27 = *(uint64_t *)((char *)a2 + v25);
    *(uint64_t *)((char *)v7 + v25) = v27;
    v28 = a3[11];
    v35 = (char *)v7 + v28;
    v29 = (char *)a2 + v28;
    v30 = type metadata accessor for Date(0);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    v31(v35, v29, v30);
    v32 = a3[12];
    v33 = *(uint64_t *)((char *)a2 + v32);
    *(uint64_t *)((char *)v7 + v32) = v33;
    swift_bridgeObjectRetain(v33);
  }
  return v7;
}

double sub_1004B4584(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for DetailChartDataElement(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[6];
  v7 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[9]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10]));
  v8 = (char *)a1 + a2[11];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[12])).n128_u64[0];
  return result;
}

uint64_t *sub_1004B4658(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v34;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for DetailChartDataElement(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (uint64_t *)((char *)a1 + v16);
  v19 = (uint64_t *)((char *)a2 + v16);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  v22 = *(uint64_t *)((char *)a2 + v17);
  *(uint64_t *)((char *)a1 + v17) = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = *(uint64_t *)((char *)a2 + v23);
  *(uint64_t *)((char *)a1 + v23) = v25;
  v26 = *(uint64_t *)((char *)a2 + v24);
  *(uint64_t *)((char *)a1 + v24) = v26;
  v27 = a3[11];
  v34 = (char *)a1 + v27;
  v28 = (char *)a2 + v27;
  v29 = type metadata accessor for Date(0);
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v26);
  v30(v34, v28, v29);
  v31 = a3[12];
  v32 = *(uint64_t *)((char *)a2 + v31);
  *(uint64_t *)((char *)a1 + v31) = v32;
  swift_bridgeObjectRetain(v32);
  return a1;
}

uint64_t *sub_1004B47A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for DetailChartDataElement(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(uint64_t *)((char *)a2 + v16);
  v20 = *(uint64_t *)((char *)a1 + v16);
  *(uint64_t *)((char *)a1 + v16) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v21 = a3[8];
  v22 = *(uint64_t *)((char *)a2 + v21);
  v23 = *(uint64_t *)((char *)a1 + v21);
  *(uint64_t *)((char *)a1 + v21) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = a3[9];
  v25 = *(uint64_t *)((char *)a2 + v24);
  v26 = *(uint64_t *)((char *)a1 + v24);
  *(uint64_t *)((char *)a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  v27 = a3[10];
  v28 = *(uint64_t *)((char *)a2 + v27);
  v29 = *(uint64_t *)((char *)a1 + v27);
  *(uint64_t *)((char *)a1 + v27) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  v30 = a3[11];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = a3[12];
  v35 = *(uint64_t *)((char *)a2 + v34);
  v36 = *(uint64_t *)((char *)a1 + v34);
  *(uint64_t *)((char *)a1 + v34) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  return a1;
}

_QWORD *sub_1004B4918(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DetailChartDataElement(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v15 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  v16 = a3[11];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  return a1;
}

uint64_t *sub_1004B4A10(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for DetailChartDataElement(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(uint64_t *)((char *)a1 + v15);
  *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  swift_bridgeObjectRelease(v18);
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  v19 = a3[8];
  v20 = *(uint64_t *)((char *)a1 + v19);
  *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[9];
  v22 = *(uint64_t *)((char *)a1 + v21);
  *(uint64_t *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[10];
  v24 = *(uint64_t *)((char *)a1 + v23);
  *(uint64_t *)((char *)a1 + v23) = *(uint64_t *)((char *)a2 + v23);
  swift_bridgeObjectRelease(v24);
  v25 = a3[11];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = a3[12];
  v30 = *(uint64_t *)((char *)a1 + v29);
  *(uint64_t *)((char *)a1 + v29) = *(uint64_t *)((char *)a2 + v29);
  swift_bridgeObjectRelease(v30);
  return a1;
}

uint64_t sub_1004B4B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B4B5C);
}

void sub_1004B4B5C(unint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*a1);
    sub_100079F70();
  }
  else
  {
    sub_1000BD520();
    sub_100088FF0();
    if (v9)
    {
      v7 = v6;
      v8 = a3[5];
    }
    else
    {
      type metadata accessor for Location(0);
      sub_100088FF0();
      if (v9)
      {
        v7 = v10;
        v8 = a3[6];
      }
      else
      {
        v7 = sub_100098778();
        v8 = a3[11];
      }
    }
    sub_1000B250C((uint64_t)a1 + v8, a2, v7);
  }
}

uint64_t sub_1004B4BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B4BF0);
}

void sub_1004B4BF0(_QWORD *a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    sub_1000BD520();
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      type metadata accessor for Location(0);
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[6];
      }
      else
      {
        v8 = sub_100098778();
        v9 = a4[11];
      }
    }
    sub_1000987C4((uint64_t)a1 + v9, a2, a2, v8);
  }
}

uint64_t _s14ChartViewModelVMa(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE66B0, (uint64_t)&_s14ChartViewModelVMn);
}

uint64_t sub_1004B4C94(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for DetailChartDataElement(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Location(319);
    if (v4 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(result - 8) + 64;
      v6[3] = &unk_1009A5780;
      v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      result = type metadata accessor for Date(319);
      if (v5 <= 0x3F)
      {
        v6[7] = *(_QWORD *)(result - 8) + 64;
        v6[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1004B4D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  __n128 v46;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  int v54;
  uint64_t v55;
  _QWORD *v56;

  v55 = a1;
  v3 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v3);
  v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100098778();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v48 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)v48 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v48 - v17;
  __chkstk_darwin(v19);
  v52 = (uint64_t)v48 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)v48 - v22;
  sub_10007C714(a2, (uint64_t)v5);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_1001C8EF4((uint64_t)v5);
    LOBYTE(v24) = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v5, v6);
    v56 = _swiftEmptyArrayStorage;
    v25 = (int *)_s14ChartViewModelVMa(0);
    v26 = sub_1000C55A0(v25[8]);
    sub_10025E29C(v26);
    v27 = sub_1000C55A0(v25[9]);
    sub_10025E29C(v27);
    v28 = sub_1000C55A0(v25[10]);
    sub_10025E29C(v28);
    v29 = v56;
    v24 = v56[2];
    if (v24)
    {
      v50 = v15;
      v30 = *(_QWORD *)(sub_1000BD520() - 8);
      v31 = (char *)v29 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      v32 = *(_QWORD *)(v30 + 72);
      v48[1] = v29;
      v49 = v32;
      swift_bridgeObjectRetain();
      v54 = 0;
      v51 = v7;
      v34 = (uint64_t)v18;
      v35 = v52;
      v53 = v23;
      do
      {
        DetailChartDataElement.date.getter(v33);
        v36 = static Date.< infix(_:_:)(v23, v35);
        sub_10009BBCC(v34, v35);
        v37 = v34;
        v38 = (uint64_t)v50;
        sub_10009BBCC((uint64_t)v50, v55);
        if ((v36 & 1) != 0)
        {
          v39 = sub_1004B5854();
          v41 = sub_1000D9E88(v38, v37, v40, v39);
          sub_1000BAD8C(v38);
          sub_1000BAD8C(v37);
          v54 |= v41 ^ 1;
        }
        else
        {
          sub_1000BAD8C(v38);
          sub_1000BAD8C(v37);
        }
        v34 = v37;
        v42 = sub_1004B5854();
        v35 = v52;
        v44 = sub_1000D9E88(v52, v55, v43, v42);
        sub_10009BBCC((uint64_t)v12, v35);
        sub_10009BBCC((uint64_t)v9, (uint64_t)v53);
        if ((v44 & 1) != 0)
        {
          sub_1000BAD8C((uint64_t)v9);
          sub_1000BAD8C((uint64_t)v12);
          v33 = sub_1000BAD8C(v35);
        }
        else
        {
          v45 = static Date.< infix(_:_:)(v12, v9);
          sub_1000BAD8C((uint64_t)v9);
          sub_1000BAD8C((uint64_t)v12);
          v33 = sub_1000BAD8C(v35);
          v54 |= v45;
        }
        v31 += v49;
        --v24;
        v7 = v51;
        v23 = v53;
      }
      while (v24);
      swift_bridgeObjectRelease();
      LOBYTE(v24) = v54;
    }
    v46 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v23, v6, v46);
  }
  return v24 & 1;
}

void sub_1004B50E0(uint64_t a1, uint64_t a2)
{
  char v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  sub_100946D9C();
  if ((v4 & 1) != 0)
  {
    v5 = (int *)_s14ChartViewModelVMa(0);
    v6 = sub_1000D8E28(v5[5]);
    if ((static DetailChartDataElement.== infix(_:_:)(v6) & 1) != 0)
    {
      v7 = sub_1000D8E28(v5[6]);
      if ((static Location.== infix(_:_:)(v7, v8) & 1) != 0)
      {
        v9 = v5[7];
        v10 = *(_QWORD *)(a1 + v9);
        v11 = *(double *)(a1 + v9 + 8);
        v12 = a2 + v9;
        v13 = *(double *)(v12 + 8);
        if ((static Gradient.== infix(_:_:)(v10, *(_QWORD *)v12) & 1) != 0 && v11 == v13)
        {
          sub_1000DDBEC();
          if ((v14 & 1) != 0)
          {
            sub_1000DDBEC();
            if ((v15 & 1) != 0)
            {
              sub_1000DDBEC();
              if ((v16 & 1) != 0)
              {
                v17 = sub_1000D8E28(v5[11]);
                if ((static Date.== infix(_:_:)(v17, v18) & 1) != 0)
                  sub_1009475D0();
              }
            }
          }
        }
      }
    }
  }
}

void sub_1004B51D0(uint64_t a1, uint64_t a2)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if ((static Date.== infix(_:_:)(a1, a2) & 1) != 0
    && ((v2 = (int *)_s14ChartViewModelV26SunEventAccessibilityModelVMa(0), v3 = sub_1000BA7EC(v2[5]), v7)
      ? (v7 = v4 == v6)
      : (v7 = 0),
        (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5) & 1) != 0)
     && ((v8 = sub_1000BA7EC(v2[6]), v7) ? (v12 = v9 == v11) : (v12 = 0),
         v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10) & 1) != 0)))
  {
    v13 = sub_1000D8E28(v2[7]);
    static DetailChartDataElement.== infix(_:_:)(v13);
  }
  else
  {
    sub_100079F70();
  }
}

uint64_t _s14ChartViewModelV26SunEventAccessibilityModelVMa(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE6760, (uint64_t)&_s14ChartViewModelV26SunEventAccessibilityModelVMn);
}

uint64_t *sub_1004B5274(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for DetailChartDataElement(0);
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    v20(v17, v18, v19);
  }
  return a1;
}

uint64_t sub_1004B5364(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  v5 = a1 + a2[7];
  v6 = type metadata accessor for DetailChartDataElement(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1004B53E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for DetailChartDataElement(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  v19(v16, v17, v18);
  return a1;
}

uint64_t sub_1004B54A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for DetailChartDataElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_1004B5578(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DetailChartDataElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1004B5608(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for DetailChartDataElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_1004B56BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B56C8);
}

void sub_1004B56C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_100098778();
  sub_100088FF0();
  if (v7)
  {
    v8 = v6;
    v9 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
      sub_100079F70();
      return;
    }
    v8 = sub_1000BD520();
    v9 = a1 + *(int *)(a3 + 28);
  }
  sub_1000B250C(v9, a2, v8);
}

uint64_t sub_1004B573C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B5748);
}

void sub_1004B5748(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_100098778();
  sub_10009D2E8();
  if (v9)
  {
    v10 = v8;
    v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      sub_100079F70();
      return;
    }
    v10 = sub_1000BD520();
    v11 = a1 + *(int *)(a4 + 28);
  }
  sub_1000987C4(v11, a2, a2, v10);
}

uint64_t sub_1004B57C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_1009A5780;
    v5[2] = &unk_1009A5780;
    result = type metadata accessor for DetailChartDataElement(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1004B5854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BCB0E0;
  if (!qword_100BCB0E0)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_100BCB0E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Swipe()
{
  return &type metadata for Swipe;
}

uint64_t sub_1004B58A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[10] = a2;
  v3[11] = a3;
  v4 = type metadata accessor for MainActor(0);
  v3[12] = v4;
  v3[13] = static MainActor.shared.getter(v4);
  v3[14] = dispatch thunk of Actor.unownedExecutor.getter(v4);
  v3[15] = v5;
  return sub_1000BBE68();
}

uint64_t sub_1004B5910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  if (qword_100BC24D8 != -1)
    swift_once(&qword_100BC24D8, sub_1006F39A0);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_1000AECD4(v1, (uint64_t)qword_100CAF270);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Performing Swipe instruction", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v7 = static MainActor.shared.getter(v6);
  *(_QWORD *)(v0 + 128) = v7;
  if (v7)
  {
    ObjectType = swift_getObjectType(v7);
    dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
  }
  return sub_1000BBE68();
}

uint64_t sub_1004B5A28()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, double, double, double, double);
  uint64_t v2;

  v1 = (uint64_t (*)(uint64_t, double, double, double, double))v0[10];
  v0[2] = v0;
  v0[3] = sub_1002628B8;
  v2 = swift_continuation_init(v0 + 2, 0);
  sub_1004B5A84(v2, v1);
  return swift_continuation_await(v0 + 2);
}

void sub_1004B5A84(uint64_t a1, uint64_t (*a2)(uint64_t, double, double, double, double))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;

  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  UIApplication.expectedWindow.getter(v52);

  v5 = v53;
  v6 = v54;
  sub_1000DB418(v52, v53);
  v7 = dispatch thunk of WindowType.bounds.getter(v5, v6);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v52);
  v15 = a2(v14, v7, v9, v11, v13);
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = (void *)objc_opt_self(UIDevice);
    v18 = v15 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_100043CA8(v18, (uint64_t)v52);
      v19 = v53;
      v20 = v54;
      sub_1000DB418(v52, v53);
      v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v28 = v53;
      v29 = v54;
      sub_1000DB418(v52, v53);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
      v31 = v53;
      v32 = v54;
      sub_1000DB418(v52, v53);
      v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
      v34 = objc_msgSend(v17, "currentDevice");
      v35 = objc_msgSend(v34, "userInterfaceIdiom");

      v36 = 3;
      if ((v33 & 1) != 0)
        v36 = 4;
      v37 = 5;
      if ((v33 & 1) == 0)
        v37 = 6;
      if (v35 == (id)1)
        v38 = v36;
      else
        v38 = v37;
      v39 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
      v41 = sub_1006E43B8(0, 0, v30, v38, 0, 0, (uint64_t)v39, v40, v21, v23, v25, v27);
      v42 = v53;
      v43 = v54;
      sub_1000DB418(v52, v53);
      v44 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", (*(double (**)(uint64_t, uint64_t))(v43 + 32))(v42, v43));
      objc_msgSend(v41, "setSwipeSpeedFactor:", v44);

      v45 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v52);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
      v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v46 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v47 >= v46 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1);
      v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v41);
      specialized Array._endMutation()(v48);
      v18 += 40;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v49 = swift_allocObject(&unk_100B77930, 24, 7);
  *(_QWORD *)(v49 + 16) = a1;
  v50 = objc_allocWithZone((Class)type metadata accessor for GroupTestParameters());
  v51 = sub_1002CC0D0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1004B5F38, v49);
  objc_msgSend((id)objc_opt_self(RPTTestRunner), "runTestWithParameters:", v51);

}

uint64_t sub_1004B5E04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_100BC24D8 != -1)
    swift_once(&qword_100BC24D8, sub_1006F39A0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000AECD4(v2, (uint64_t)qword_100CAF270);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Performed Swipe instruction", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return swift_continuation_throwingResume(a1);
}

uint64_t sub_1004B5ED8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v3 = v0[1];
  v4 = (_QWORD *)swift_task_alloc(dword_100BE67AC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_100223BE0;
  return sub_1004B58A4((uint64_t)v4, v2, v3);
}

uint64_t sub_1004B5F28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B5F38()
{
  uint64_t v0;

  return sub_1004B5E04(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004B5F40@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16[2];
  __int128 v17[2];

  v3 = sub_1000BA294((uint64_t *)&unk_100C09CA0);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = v1[7];
  sub_100043CA8((uint64_t)(v1 + 2), (uint64_t)v17);
  v7 = v1[8];
  v8 = v1[9];
  sub_100043CA8((uint64_t)(v1 + 10), (uint64_t)v16);
  *v5 = swift_getKeyPath(&unk_1009A5888);
  v9 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v5, v9, 0);
  KeyPath = swift_getKeyPath(&unk_1009A58B8);
  v11 = type metadata accessor for ObservableResolver(0);
  v12 = sub_1004B6220();
  swift_retain();
  swift_unknownObjectRetain(v7);
  v13 = EnvironmentObject.init()(v11, v12);
  return sub_100270408((uint64_t)v5, KeyPath, 0, v13, v14, (uint64_t)sub_10026AD10, 0, v6, a1, v17, v7, v8, v16);
}

_QWORD *sub_1004B608C()
{
  _QWORD *v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  swift_release();
  swift_unknownObjectRelease(v0[8]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 10);
  return v0;
}

uint64_t sub_1004B60C0()
{
  uint64_t v0;

  sub_1004B608C();
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for LocationPreviewModule()
{
  return objc_opt_self(_TtC7Weather21LocationPreviewModule);
}

_QWORD *sub_1004B6100(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v25 = a6;
  v26 = a8;
  v15 = sub_10005F164(v24);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v15, a1, a6);
  v16 = (_QWORD *)swift_allocObject(a5, 120, 7);
  v17 = sub_100068EB4((uint64_t)v24, v25);
  __chkstk_darwin(v17);
  v19 = (_QWORD *)((char *)&v24[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  v21 = *v19;
  v16[5] = type metadata accessor for LocationPreviewInteractor();
  v16[6] = &off_100B9DF50;
  v16[2] = v21;
  v16[7] = a2;
  v16[8] = a3;
  v16[9] = a9;
  sub_10003C800(a4, (uint64_t)(v16 + 10));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v24);
  return v16;
}

unint64_t sub_1004B6220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD0930;
  if (!qword_100BD0930)
  {
    v1 = type metadata accessor for ObservableResolver(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ObservableResolver, v1);
    atomic_store(result, (unint64_t *)&qword_100BD0930);
  }
  return result;
}

void sub_1004B6260(char a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[32];

  v94 = a3;
  v5 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v93 = v7;
  __chkstk_darwin(v8);
  v92 = (uint64_t)&v69 - v9;
  __chkstk_darwin(v10);
  v91 = (uint64_t)&v69 - v11;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_10009883C();
  v19 = v17 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - v21;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_1000986FC();
  v90 = v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v69 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v69 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v69 - v32;
  if (a1)
  {
    if (a1 == 1)
    {
      if ((a2 & 1) != 0)
      {
        v34 = &qword_100BE6BF8;
        goto LABEL_11;
      }
    }
    else if ((a2 & 1) != 0)
    {
      v34 = &qword_100BE6F88;
      goto LABEL_11;
    }
    v34 = &qword_100BE6DC0;
  }
  else if ((a2 & 1) != 0)
  {
    v34 = &qword_100BE6868;
  }
  else
  {
    v34 = &qword_100BE6A30;
  }
LABEL_11:
  v35 = *((_BYTE *)v34 + 224);
  v77 = *v34;
  v76 = v34[1];
  v75 = v34[2];
  v74 = v34[3];
  v36 = v34[8];
  v80 = v34[9];
  v81 = v36;
  v37 = v34[10];
  v78 = v34[11];
  v79 = v37;
  v38 = v34[24];
  v73 = v34[25];
  v72 = v34[26];
  v71 = v34[27];
  v39 = v34[45];
  v84 = v34[46];
  v85 = v39;
  v40 = v34[47];
  v82 = v34[48];
  v83 = v40;
  v41 = v34[53];
  v88 = v34[54];
  v89 = v41;
  v42 = v94 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map;
  v44 = v34[55];
  v43 = v34[56];
  v86 = v44;
  v87 = v43;
  sub_1000992EC(v94 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map, (uint64_t)v95);
  sub_10003773C(v42, v15, &qword_100BC4A98);
  v45 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v45) == 1)
  {
    sub_100021A14(v15, &qword_100BC4A98);
LABEL_16:
    v46 = 1;
    goto LABEL_17;
  }
  v70 = v38;
  sub_10009D3BC(v15 + *(int *)(v45 + 20), v19);
  sub_1000215BC(v15, type metadata accessor for LocationComponentContainerViewModel);
  sub_10007C77C(v19, (uint64_t)v22, type metadata accessor for LocationComponentViewModel);
  if ((v35 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v22, type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10007C77C((uint64_t)v22, (uint64_t)v30, type metadata accessor for LocationComponentViewModel);
  v46 = 0;
  v47 = &v30[*(int *)(v5 + 20)];
  v48 = v73;
  *(_QWORD *)v47 = v70;
  *((_QWORD *)v47 + 1) = v48;
  v49 = v71;
  *((_QWORD *)v47 + 2) = v72;
  *((_QWORD *)v47 + 3) = v49;
LABEL_17:
  sub_1000988B8((uint64_t)v30, v46);
  sub_1002228F0((uint64_t)v30, (uint64_t)v33);
  sub_10009D3BC(v94 + *(int *)(v45 + 20) + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, (uint64_t)v27);
  v50 = &v27[*(int *)(v5 + 20)];
  v51 = v76;
  *(_QWORD *)v50 = v77;
  *((_QWORD *)v50 + 1) = v51;
  v52 = v74;
  *((_QWORD *)v50 + 2) = v75;
  *((_QWORD *)v50 + 3) = v52;
  sub_1000988B8((uint64_t)v27, 0);
  v53 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v54 = v91;
  sub_10009D3BC(v53, v91);
  v55 = (uint64_t *)(v54 + *(int *)(v5 + 20));
  v56 = v80;
  *v55 = v81;
  v55[1] = v56;
  v57 = v78;
  v55[2] = v79;
  v55[3] = v57;
  v58 = v90;
  sub_10003773C((uint64_t)v33, v90, &qword_100BCC760);
  v59 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v60 = v92;
  sub_10009D3BC(v59, v92);
  v61 = (uint64_t *)(v60 + *(int *)(v5 + 20));
  v62 = v84;
  *v61 = v85;
  v61[1] = v62;
  v63 = v82;
  v61[2] = v83;
  v61[3] = v63;
  v64 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v65 = v93;
  sub_10009D3BC(v64, v93);
  v66 = (uint64_t *)(v65 + *(int *)(v5 + 20));
  v67 = v88;
  *v66 = v89;
  v66[1] = v67;
  v68 = v87;
  v66[2] = v86;
  v66[3] = v68;
  sub_10087CED0((uint64_t)v27, v54, v58, v60, v65);
  sub_100021A14((uint64_t)v33, &qword_100BCC760);
  sub_100098640();
}

void sub_1004B6754(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 *v55;
  __n128 *v56;
  uint64_t v57;
  uint64_t v58;
  __n128 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 *v81;
  uint64_t v82;
  uint64_t v83;
  __n128 *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  _BYTE v94[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000878BC();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map, (uint64_t)v94);
  sub_10003773C(v11, v5, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6) == 1)
  {
    sub_100021A14(v5, &qword_100BC4A98);
    v12 = sub_1000BA294(&qword_100BCC750);
    v13 = swift_allocObject(v12, 224, 7);
    *(_OWORD *)(v13 + 16) = xmmword_10098BCC0;
    v14 = sub_1000BA294(&qword_100BCC758);
    v15 = *(unsigned __int8 *)(v7 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = v15 | 7;
    v19 = v14;
    v20 = (__n128 *)sub_1000BA6B8(v14);
    v21 = sub_100099954(v20, (__n128)xmmword_10097CA50);
    sub_10009F7F4(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v21 + v16);
    *(_QWORD *)(v13 + 32) = sub_1000B4580();
    *(_QWORD *)(v13 + 40) = v22;
    *(_QWORD *)(v13 + 48) = v23;
    v24 = sub_1000BA6B8(v19);
    *(_OWORD *)(v24 + 16) = v93;
    sub_10009F7F4(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v24 + v16);
    *(_QWORD *)(v13 + 56) = sub_1000B4580();
    *(_QWORD *)(v13 + 64) = v25;
    *(_QWORD *)(v13 + 72) = v26;
    v91 = v19;
    v27 = sub_1000BA6B8(v19);
    *(_OWORD *)(v27 + 16) = v93;
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, v27 + v16);
    *(_QWORD *)(v13 + 80) = sub_100080C44(v27);
    *(_QWORD *)(v13 + 88) = v28;
    *(_QWORD *)(v13 + 96) = v29;
    v30 = (__n128 *)swift_allocObject(v19, v16 + 2 * v17, v18);
    v31 = (char *)sub_100099954(v30, (__n128)xmmword_10097DA20) + v16;
    v32 = *(_QWORD *)(a1 + 16);
    sub_10009F7F4(v32 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v31);
    sub_10009F7F4(v32 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v31[v17]);
    *(_QWORD *)(v13 + 104) = sub_1000B4580();
    *(_QWORD *)(v13 + 112) = v33;
    *(_QWORD *)(v13 + 120) = v34;
    v35 = (__n128 *)sub_1000BA6B8(v91);
    sub_1000B46B8(v35);
    sub_100095B78(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v31, type metadata accessor for LocationComponentContainerViewModel);
    sub_100098A1C(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v31[v17]);
    *(_QWORD *)(v13 + 128) = sub_1000B4580();
    *(_QWORD *)(v13 + 136) = v36;
    *(_QWORD *)(v13 + 144) = v37;
    v38 = (__n128 *)sub_1000BA6B8(v91);
    sub_1000B46B8(v38);
    sub_100095B78(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v31, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v31[v17], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v13 + 152) = sub_1000B4580();
    *(_QWORD *)(v13 + 160) = v39;
    *(_QWORD *)(v13 + 168) = v40;
    v41 = (__n128 *)sub_1000BA6B8(v91);
    sub_1000B46B8(v41);
    sub_100098A1C(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v31);
    sub_100098A1C(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v31[v17]);
    *(_QWORD *)(v13 + 176) = sub_1000B4580();
    *(_QWORD *)(v13 + 184) = v42;
    *(_QWORD *)(v13 + 192) = v43;
    v44 = swift_allocObject(v91, v16 + 2 * v17, v18);
    *(_OWORD *)(v44 + 16) = v93;
    v45 = *(_QWORD *)(a1 + 16);
    sub_100098A1C(v45 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v44 + v16);
    sub_100098A1C(v45 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v44 + v16 + v17);
    *(_QWORD *)(v13 + 200) = sub_100080C44(v44);
    *(_QWORD *)(v13 + 208) = v46;
    *(_QWORD *)(v13 + 216) = v47;
  }
  else
  {
    sub_10007C77C(v5, v10, type metadata accessor for LocationComponentContainerViewModel);
    v48 = sub_1000BA294(&qword_100BCC750);
    v49 = swift_allocObject(v48, 248, 7);
    *(_OWORD *)(v49 + 16) = xmmword_10098E040;
    v50 = sub_1000BA294(&qword_100BCC758);
    v92 = *(_QWORD *)(v7 + 72);
    v51 = *(unsigned __int8 *)(v7 + 80);
    v52 = (v51 + 32) & ~v51;
    v53 = v51 | 7;
    v54 = v50;
    v55 = (__n128 *)sub_1000BA6AC(v50);
    v56 = sub_100099954(v55, (__n128)xmmword_10097CA50);
    sub_1000B4590(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v56 + v52);
    *(_QWORD *)(v49 + 32) = sub_1000B4588();
    *(_QWORD *)(v49 + 40) = v57;
    *(_QWORD *)(v49 + 48) = v58;
    v59 = (__n128 *)sub_1000BA6AC(v54);
    sub_100098A38(v59);
    sub_1000B4590(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v60);
    *(_QWORD *)(v49 + 56) = sub_1000B4588();
    *(_QWORD *)(v49 + 64) = v61;
    *(_QWORD *)(v49 + 72) = v62;
    v63 = (__n128 *)sub_1000BA6AC(v54);
    sub_100098A38(v63);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, v64);
    *(_QWORD *)(v49 + 80) = sub_1000B4588();
    *(_QWORD *)(v49 + 88) = v65;
    *(_QWORD *)(v49 + 96) = v66;
    v67 = (__n128 *)sub_1000BA6AC(v54);
    sub_100098A38(v67);
    sub_1000B4590(v10, v68);
    *(_QWORD *)(v49 + 104) = sub_1000B4580();
    *(_QWORD *)(v49 + 112) = v69;
    *(_QWORD *)(v49 + 120) = v70;
    v71 = (__n128 *)swift_allocObject(v54, v52 + 2 * v92, v53);
    v72 = (char *)sub_100099954(v71, (__n128)xmmword_10097DA20) + v52;
    v73 = *(_QWORD *)(a1 + 16);
    sub_1000B4590(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v72);
    sub_1000B4590(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v72[v92]);
    *(_QWORD *)(v49 + 128) = sub_1000B4588();
    *(_QWORD *)(v49 + 136) = v74;
    *(_QWORD *)(v49 + 144) = v75;
    v76 = sub_1000BA6AC(v54);
    *(_OWORD *)(v76 + 16) = v93;
    v77 = v76 + v52;
    v78 = *(_QWORD *)(a1 + 16);
    sub_100095B78(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, v76 + v52, type metadata accessor for LocationComponentContainerViewModel);
    sub_1000D94C0(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v77 + v92);
    *(_QWORD *)(v49 + 152) = sub_1000B4588();
    *(_QWORD *)(v49 + 160) = v79;
    *(_QWORD *)(v49 + 168) = v80;
    v81 = (__n128 *)sub_1000BA6AC(v54);
    sub_100098AE8(v81);
    sub_10008611C(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, v77);
    sub_10008611C(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v77 + v92);
    *(_QWORD *)(v49 + 176) = sub_1000B4588();
    *(_QWORD *)(v49 + 184) = v82;
    *(_QWORD *)(v49 + 192) = v83;
    v84 = (__n128 *)sub_1000BA6AC(v54);
    sub_100098AE8(v84);
    sub_1000D94C0(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, v77);
    sub_1000D94C0(v78 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v77 + v92);
    *(_QWORD *)(v49 + 200) = sub_1000B4588();
    *(_QWORD *)(v49 + 208) = v85;
    *(_QWORD *)(v49 + 216) = v86;
    v87 = swift_allocObject(v54, v52 + 2 * v92, v53);
    *(_OWORD *)(v87 + 16) = v93;
    v88 = *(_QWORD *)(a1 + 16);
    sub_1000D94C0(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v87 + v52);
    sub_1000D94C0(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v87 + v52 + v92);
    *(_QWORD *)(v49 + 224) = sub_100080C44(v87);
    *(_QWORD *)(v49 + 232) = v89;
    *(_QWORD *)(v49 + 240) = v90;
    sub_1000215BC(v10, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_1004B6E60(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_10009883C();
  v8 = v6 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_10009883C();
  v19 = v17 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v26 - v21;
  v23 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v27 = v24;
  swift_release(v23);
  sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_map, v15, type metadata accessor for LocationViewComponent);
  a2(v15);
  sub_10009D530();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v4);
  sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_airQuality, v15, type metadata accessor for LocationViewComponent);
  a2(v15);
  sub_10009D530();
  sub_10003773C((uint64_t)v22, v19, &qword_100BC4A98);
  sub_10008611C((uint64_t)v11, v8);
  v25 = type metadata accessor for DefaultContent._Storage(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  sub_1001DA474(v27, v19, v8);
  sub_1000215BC((uint64_t)v11, type metadata accessor for LocationComponentContainerViewModel);
  sub_100021A14((uint64_t)v22, &qword_100BC4A98);
  sub_100098640();
}

void sub_1004B704C(void *a1)
{
  _QWORD *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  const char *v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  unint64_t v15;
  unint64_t v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  const char *v20;
  unint64_t v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  const char *v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = objc_msgSend(a1, "activityType");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = "com.apple.nanoweather.useractivity";
  if (v4 == 0xD000000000000022)
  {
    v8 = sub_1000BC31C((uint64_t)"com.apple.nanoweather.useractivity");
    if (v9)
      goto LABEL_5;
  }
  if ((sub_1000BAE38(0xD000000000000022, (unint64_t)(v7 - 32) | 0x8000000000000000) & 1) != 0)
  {
    v8 = v6;
LABEL_5:
    swift_bridgeObjectRelease(v8);
    sub_1004A6278();
    return;
  }
  v9 = v4 == 0x4972656874616557 && v6 == 0xED0000746E65746ELL;
  if (v9)
  {
    v10 = 0xED0000746E65746ELL;
    goto LABEL_13;
  }
  if ((sub_1000BAE38(0x4972656874616557, 0xED0000746E65746ELL) & 1) != 0)
  {
    v10 = v6;
LABEL_13:
    swift_bridgeObjectRelease(v10);
    v11 = v1[6];
    v12 = v1[7];
    sub_1000DB418(v1 + 3, v11);
    dispatch thunk of WeatherIntentHandlerType.handleActivity(_:)(a1, v11, v12);
    return;
  }
  v13 = 0xD00000000000001ELL;
  v14 = "com.apple.weather.useractivity";
  if (v4 == 0xD00000000000001ELL)
  {
    sub_1000C2AB8();
    if (v9)
    {
      v16 = v15;
LABEL_20:
      swift_bridgeObjectRelease(v16);
      sub_100414838((char *)a1);
      return;
    }
  }
  if ((sub_1000BAE38(v13, (unint64_t)(v14 - 32) | 0x8000000000000000) & 1) != 0)
  {
    v16 = v6;
    goto LABEL_20;
  }
  v17 = "com.apple.weather.complication.moonEvents";
  if (v4 == 0xD000000000000029)
  {
    v18 = sub_1000BC31C((uint64_t)"com.apple.weather.complication.moonEvents");
    if (v9)
      goto LABEL_29;
  }
  if ((sub_1000BAE38(0xD000000000000029, (unint64_t)(v17 - 32) | 0x8000000000000000) & 1) != 0)
  {
LABEL_24:
    v18 = v6;
LABEL_29:
    swift_bridgeObjectRelease(v18);
    sub_1000DB418(v1 + 9, v1[12]);
    sub_100679F2C();
    return;
  }
  v19 = 0xD000000000000028;
  v20 = "com.apple.weather.complication.sunEvents";
  if (v4 == 0xD000000000000028)
  {
    sub_1000C2AB8();
    if (v9)
      goto LABEL_28;
  }
  if ((sub_1000BAE38(v19, (unint64_t)(v20 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v22 = "com.apple.weather.complication.conditions";
  if (v4 == 0xD000000000000029)
  {
    v18 = sub_1000BC31C((uint64_t)"com.apple.weather.complication.conditions");
    if (v9)
      goto LABEL_29;
  }
  if ((sub_1000BAE38(0xD000000000000029, (unint64_t)(v22 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v23 = 0xD000000000000027;
  v24 = "com.apple.weather.complication.location";
  if (v4 == 0xD000000000000027)
  {
    sub_1000C2AB8();
    if (v9)
      goto LABEL_28;
  }
  if ((sub_1000BAE38(v23, (unint64_t)(v24 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v25 = "com.apple.weather.complication.rain";
  if (v4 == 0xD000000000000023)
  {
    v18 = sub_1000BC31C((uint64_t)"com.apple.weather.complication.rain");
    if (v9)
      goto LABEL_29;
  }
  if ((sub_1000BAE38(0xD000000000000023, (unint64_t)(v25 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v26 = 0xD00000000000002ALL;
  v27 = "com.apple.weather.complication.temperature";
  if (v4 == 0xD00000000000002ALL)
  {
    sub_1000C2AB8();
    if (v9)
    {
LABEL_28:
      v18 = v21;
      goto LABEL_29;
    }
  }
  if ((sub_1000BAE38(v26, (unint64_t)(v27 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v28 = "com.apple.weather.complication.aqi";
  if (v4 == 0xD000000000000022)
  {
    v18 = sub_1000BC31C((uint64_t)"com.apple.weather.complication.aqi");
    if (v9)
      goto LABEL_29;
  }
  if ((sub_1000BAE38(0xD000000000000022, (unint64_t)(v28 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v29 = "com.apple.weather.complication.uvIndex";
  if (v4 == 0xD000000000000026)
  {
    v18 = sub_1000BC31C((uint64_t)"com.apple.weather.complication.uvIndex");
    if (v9)
      goto LABEL_29;
  }
  if ((sub_1000BAE38(0xD000000000000026, (unint64_t)(v29 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v30 = "com.apple.weather.complication.wind";
  if (v4 == 0xD000000000000023)
  {
    v18 = sub_1000BC31C((uint64_t)"com.apple.weather.complication.wind");
    if (v9)
      goto LABEL_29;
  }
  if ((sub_1000BAE38(0xD000000000000023, (unint64_t)(v30 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  v31 = "com.apple.weather.widget.sunriseSunset";
  if (v4 == 0xD000000000000026)
  {
    v18 = sub_1000BC31C((uint64_t)"com.apple.weather.widget.sunriseSunset");
    if (v9)
      goto LABEL_29;
  }
  if ((sub_1000BAE38(0xD000000000000026, (unint64_t)(v31 - 32) | 0x8000000000000000) & 1) != 0)
    goto LABEL_24;
  if (qword_100BC24B0 != -1)
    swift_once(&qword_100BC24B0, sub_1006F391C);
  v32 = type metadata accessor for Logger(0);
  sub_1000AECD4(v32, (uint64_t)qword_100CAF1F8);
  swift_bridgeObjectRetain(v6);
  v34 = Logger.logObject.getter(v33);
  v36 = static os_log_type_t.error.getter(v34, v35);
  if (os_log_type_enabled(v34, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    v40 = v38;
    *(_DWORD *)v37 = 136446210;
    swift_bridgeObjectRetain(v6);
    v39 = sub_1000CE1C8(v4, v6, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    swift_bridgeObjectRelease_n(v6, 3);
    _os_log_impl((void *)&_mh_execute_header, v34, v36, "Unrecognized user activity type. activityType=%{public}s", v37, 0xCu);
    swift_arrayDestroy(v38, 1);
    sub_1000986F0(v38);
    sub_1000986F0((uint64_t)v37);

  }
  else
  {

    swift_bridgeObjectRelease_n(v6, 2);
  }
}

uint64_t sub_1004B7520()
{
  uint64_t v0;

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 72));
  return v0;
}

uint64_t sub_1004B7554()
{
  uint64_t v0;

  sub_1004B7520();
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for ContinueUserActivityHandlerManager()
{
  return objc_opt_self(_TtC7Weather34ContinueUserActivityHandlerManager);
}

uint64_t getEnumTagSinglePayload for WeatherURLContext(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherURLContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void sub_1004B7638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[48];

  sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  if (a2)
  {
    sub_1000DB418((_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 128));
    sub_100324E78(a1, a2);
  }
  v9 = type metadata accessor for LocationPreviewViewAction(0);
  swift_storeEnumTagMultiPayload(v8, v9, 3);
  v10 = sub_10009DB1C();
  swift_storeEnumTagMultiPayload(v8, v10, 0);
  sub_1000DF698(v8);
  sub_1000BA5F4();
  sub_1000C16A0(v8, (uint64_t)v11);
  sub_1000D1878();
  sub_1000979AC(v8, type metadata accessor for MainAction);
  sub_10009880C();
  sub_10004A2A0();
}

void sub_1004B770C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[48];

  v1 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_1000B4A84();
  v3 = type metadata accessor for LocationViewerViewAction(0);
  swift_storeEnumTagMultiPayload(v0, v3, 5);
  v4 = type metadata accessor for ViewAction(0);
  swift_storeEnumTagMultiPayload(v0, v4, 1);
  sub_1000BA4FC(v0, v1);
  sub_1000BA5F4();
  sub_1000C16A0(v0, (uint64_t)v5);
  sub_1000D1878();
  sub_100098DF0();
  sub_10009880C();
  sub_10004A2A0();
}

void sub_1004B77AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[48];

  v1 = *v0;
  sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = (uint64_t (*)(uint64_t))v0[6];
  *(_BYTE *)(v4 - v3) = 4;
  v7 = sub_10009DB1C();
  swift_storeEnumTagMultiPayload(v5, v7, 1);
  sub_1000DF698(v5);
  sub_1000D9678();
  swift_retain();
  sub_1000A5EBC(v5, (uint64_t)v10, v6);
  sub_1000C16AC();
  sub_1000979AC(v5, type metadata accessor for MainAction);
  swift_release();
  if (qword_100BC1F10 != -1)
    swift_once(&qword_100BC1F10, sub_10015B0AC);
  v8 = qword_100CAE5C0;
  sub_1004B7E9C(&qword_100BE72C0, (uint64_t)&unk_1009A59E8);
  Configurable.setting<A>(_:)(v8, v1, v9);
  if ((v10[0] & 1) == 0)
  {
    swift_retain();
    asyncMain(block:)(sub_1004B7E94, v0);
    sub_10009880C();
  }
  sub_10009D300();
}

double sub_1004B78E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  v2 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(uint64_t (**)(uint64_t))(a1 + 48);
  v6 = type metadata accessor for NotificationsOptInAction(0);
  swift_storeEnumTagMultiPayload(v4, v6, 11);
  swift_storeEnumTagMultiPayload(v4, v2, 5);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1000A5EBC((uint64_t)v4, (uint64_t)v8, v5);
  sub_100159C94((uint64_t)v8);
  sub_1000979AC((uint64_t)v4, type metadata accessor for MainAction);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004B79C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD v15[6];

  v1 = type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  *(_BYTE *)(v9 - v8) = 0;
  v11 = sub_10009DB1C();
  swift_storeEnumTagMultiPayload(v10, v11, 2);
  swift_storeEnumTagMultiPayload(v10, v6, 7);
  sub_1000C5204();
  sub_1000C5F8C();
  sub_100159C94((uint64_t)v15);
  sub_1000979AC(v10, type metadata accessor for MainAction);
  v12 = sub_10009925C();
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(v0 + 16))(v15, v12);
  sub_10005EAA0(v15[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v5);
  sub_10009880C();
  v13 = *(unsigned __int8 *)(v5 + *(int *)(v1 + 52));
  sub_1000979AC(v5, type metadata accessor for NotificationsOptInState);
  if (v13 == 1)
  {
    v14 = type metadata accessor for NotificationsOptInAction(0);
    swift_storeEnumTagMultiPayload(v10, v14, 11);
    swift_storeEnumTagMultiPayload(v10, v6, 5);
    sub_1000C5204();
    sub_1000C5F8C();
    sub_100159C94((uint64_t)v15);
    sub_1000979AC(v10, type metadata accessor for MainAction);
    sub_10009925C();
  }
}

void sub_1004B7B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[48];

  sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000B4A84();
  *(_QWORD *)v0 = 0xF000000000000006;
  v2 = sub_10009DB1C();
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 88) = 0;
  swift_storeEnumTagMultiPayload(v0, v2, 3);
  sub_1000DF698(v0);
  sub_1000BA5F4();
  sub_1000C16A0(v0, (uint64_t)v3);
  sub_1000D1878();
  sub_100098DF0();
  sub_10009880C();
  sub_10004A2A0();
}

void sub_1004B7BE8()
{
  sub_1000DBAD4(type metadata accessor for ModalViewAction, 5);
}

void sub_1004B7BF8()
{
  sub_1000DBAD4(type metadata accessor for ModalViewAction, 6);
}

void sub_1004B7C08(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  _BYTE v14[48];

  v7 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = *(uint64_t (**)(uint64_t))(v3 + 48);
  v13 = a1(0);
  swift_storeEnumTagMultiPayload(v11, v13, a2);
  swift_storeEnumTagMultiPayload(v11, v7, a3);
  sub_1000D9678();
  swift_retain();
  sub_1000A5EBC(v11, (uint64_t)v14, v12);
  sub_1000C16AC();
  sub_1000979AC(v11, type metadata accessor for MainAction);
  sub_10009880C();
  sub_10009D300();
}

void sub_1004B7CC8()
{
  sub_1004B7CD8(1);
}

void sub_1004B7CD0()
{
  sub_1004B7CD8(0);
}

void sub_1004B7CD8(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[48];

  v3 = *v1;
  v4 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = (uint64_t (*)(uint64_t))v1[6];
  *(_BYTE *)(v7 - v6) = a1;
  v10 = type metadata accessor for ViewAction(0);
  sub_1000BA4FC(v8, v10);
  sub_1000BA4FC(v8, v4);
  sub_1000D9678();
  swift_retain();
  sub_1000A5EBC(v8, (uint64_t)v13, v9);
  sub_1000C16AC();
  sub_1000979AC(v8, type metadata accessor for MainAction);
  swift_release();
  if (qword_100BC2650 != -1)
    swift_once(&qword_100BC2650, sub_10015AA64);
  v11 = qword_100CAF4B8;
  v13[0] = a1;
  sub_1004B7E9C(&qword_100BE72C8, (uint64_t)&unk_1009A5A28);
  Updatable.save<A>(setting:value:)(v11, v13, v3, v12);
  sub_10009D300();
}

void sub_1004B7DF0()
{
  sub_1000E70D4(type metadata accessor for ViewAction, 8);
}

void sub_1004B7E00()
{
  sub_1000E70D4(type metadata accessor for ViewAction, 9);
}

void sub_1004B7E10()
{
  uint64_t v0;

  swift_release();
  sub_10009925C();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 64));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 104));
  sub_10004A298();
}

uint64_t sub_1004B7E50()
{
  uint64_t v0;

  sub_1004B7E10();
  return swift_deallocClassInstance(v0, 144, 7);
}

void sub_1004B7E70()
{
  sub_1004B7E9C(&qword_100BE72C0, (uint64_t)&unk_1009A59E8);
}

double sub_1004B7E94()
{
  uint64_t v0;

  return sub_1004B78E0(v0);
}

void sub_1004B7E9C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for MainInteractor();
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

uint64_t sub_1004B7ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v27;

  v4 = type metadata accessor for TemperatureChartKind(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v27 - v12);
  v14 = sub_1000BA294(&qword_100BE72D0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 48)];
  sub_1004B8150(a1, (uint64_t)v17);
  sub_1004B8150(a2, (uint64_t)v18);
  if (sub_10009D644((uint64_t)v17) != 1)
  {
    sub_1004B8150((uint64_t)v17, (uint64_t)v13);
    v22 = *v13;
    v21 = v13[1];
    if (sub_10009D644((uint64_t)v18) != 1)
    {
      v23 = *((_QWORD *)v18 + 1);
      if (v22 == *(_QWORD *)v18 && v21 == v23)
      {
        swift_bridgeObjectRelease_n(v21, 2);
      }
      else
      {
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v21, *(_QWORD *)v18, *((_QWORD *)v18 + 1), 0);
        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v21);
        if ((v25 & 1) == 0)
        {
          sub_1000BC32C();
          goto LABEL_8;
        }
      }
      sub_1000BC32C();
      v19 = 1;
      return v19 & 1;
    }
    swift_bridgeObjectRelease(v21);
LABEL_7:
    sub_1004B8194((uint64_t)v17);
LABEL_8:
    v19 = 0;
    return v19 & 1;
  }
  sub_1004B8150((uint64_t)v17, (uint64_t)v11);
  if (sub_10009D644((uint64_t)v18) != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
  v19 = static TemperatureChartKind.== infix(_:_:)(v11, v7);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v20(v11, v4);
  sub_1000BC32C();
  return v19 & 1;
}

uint64_t type metadata accessor for ConditionDetailChartFooterViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE7348;
  if (!qword_100BE7348)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ConditionDetailChartFooterViewModel);
  return result;
}

uint64_t sub_1004B8150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B8194(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE72D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004B81D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1004B8210(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_1004B82CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for TemperatureChartKind(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1004B831C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for TemperatureChartKind(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain(v10);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_1004B83AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1004B81D4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v6 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_1004B8454(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for TemperatureChartKind(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1004B84E0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1004B81D4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v6 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004B857C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1009A5AA8;
  result = type metadata accessor for TemperatureChartKind(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t destroy for MoonDetailView(uint64_t a1)
{
  swift_release();
  sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1000B15F8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for MoonDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_10008D47C(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_10008D47C(v7, v8);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, a2 + 48);
  return a1;
}

uint64_t assignWithCopy for MoonDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_10008D47C(v8, v9);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  sub_1000B15F8(v10, v11);
  sub_100094D04((_QWORD *)(a1 + 48), (_QWORD *)(a2 + 48));
  return a1;
}

uint64_t assignWithTake for MoonDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1000B15F8(v9, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 48));
  v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t sub_1004B87EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB67DC, 1);
}

uint64_t sub_1004B87FC(uint64_t a1, uint64_t a2, char a3, double a4)
{
  char v7;
  uint64_t v8;

  v7 = a3 & 1;
  v8 = sub_1000BA294(&qword_100BE75D0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return sub_1004B8A84(a1, a2, v7, a4);
}

uint64_t sub_1004B8868(uint64_t a1, char a2, double a3)
{
  char v5;
  uint64_t v6;

  v5 = a2 & 1;
  v6 = sub_1000BA294(&qword_100BE7640);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  return sub_1004B915C(a1, v5, a3);
}

uint64_t sub_1004B88C4@<X0>(_QWORD *a1@<X8>)
{
  return sub_100376F74(a1);
}

void sub_1004B88E4(uint64_t a1)
{
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = __chkstk_darwin(a1);
  v3 = (char *)&v5 - v2;
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v5 - v2, v1);
  sub_100377194((uint64_t)v3);
  sub_100079F70();
}

uint64_t sub_1004B8950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  sub_1004CDCF8();
  KeyPath = swift_getKeyPath(&unk_1009A5D70);
  v6 = swift_getKeyPath(&unk_1009A5DA8);
  v8[0] = a1;
  v8[1] = a2;
  swift_retain();
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

uint64_t sub_1004B89EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  sub_1004CE094();
  KeyPath = swift_getKeyPath(&unk_1009A5D70);
  v4 = swift_getKeyPath(&unk_1009A5DA8);
  v6 = a1;
  swift_retain();
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t sub_1004B8A84(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  __n128 v45;
  char *v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  __n128 v59;
  _QWORD *v60;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82[4];

  v5 = v4;
  v70 = a3 & 1;
  v10 = sub_1000BA294(&qword_100BE75D8);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  __chkstk_darwin(v10);
  v67 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BE75E0);
  v13 = __chkstk_darwin(v12);
  v65 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0, v13);
  v75 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  __chkstk_darwin(v15);
  v74 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BE75E8);
  v71 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100BE75F0);
  v72 = *(_QWORD *)(v20 - 8);
  v73 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1000BA294(&qword_100BE75F8);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v63 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = (_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
  *v77 = &_swiftEmptySetSingleton;
  v24 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  swift_beginAccess(v24, v82, 33, 0);
  v80 = a1;
  v81 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Published.init(initialValue:)(&v80, &type metadata for MoonCompactOverviewTableViewModel);
  swift_endAccess(v82);
  swift_beginAccess(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104), v82, 33, 0);
  v80 = a1;
  v81 = a2;
  v79 = a1;
  swift_bridgeObjectRetain();
  v78 = a2;
  swift_bridgeObjectRetain();
  Published.init(initialValue:)(&v80, &type metadata for MoonCompactOverviewTableViewModel);
  swift_endAccess(v82);
  *(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120)) = v70;
  swift_beginAccess(v24, v82, 33, 0);
  v25 = sub_1000BA294(&qword_100BE7600);
  Published.projectedValue.getter(v25);
  swift_endAccess(v82);
  sub_10007AB60((uint64_t)&unk_100BE7608);
  v27 = v26;
  v28 = sub_1004CDCF8();
  Publisher<>.removeDuplicates()(v17, v27, v28);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v19, v17);
  if ((a3 & 1) != 0)
  {
    v46 = v74;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v29, a4);
    v47 = sub_10009FFE0();
    v48 = (void *)static OS_dispatch_queue.main.getter(v47);
    v82[0] = v48;
    sub_10007AB60((uint64_t)&unk_100BE7618);
    v50 = v49;
    sub_10007A100((uint64_t)&unk_100BE7620);
    v51 = v67;
    v52 = v73;
    Publisher.throttle<A>(for:scheduler:latest:)(v46, v82, 1, v73, v47, v50, v53);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v76);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v52);
    v54 = swift_allocObject(&unk_100B77D30, 24, 7);
    swift_weakInit(v54 + 16);
    sub_10007AB60((uint64_t)&unk_100BE7628);
    v56 = v55;
    v57 = swift_retain();
    v58 = v69;
    Publisher<>.sink(receiveValue:)(sub_1004CDD58, v54, v69, v56, v57);
    v59 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v51, v58, v59);
  }
  else
  {
    v30 = v74;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v29, a4);
    v31 = sub_10009FFE0();
    v82[0] = (id)static OS_dispatch_queue.main.getter(v31);
    v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v33 = v65;
    _s7Weather24LocationCompositionStateOwst_0(v65, 1, 1, v32);
    sub_10007AB60((uint64_t)&unk_100BE7618);
    v35 = v34;
    sub_10007A100((uint64_t)&unk_100BE7620);
    v36 = v63;
    v37 = v73;
    Publisher.debounce<A>(for:scheduler:options:)(v30, v82, v33, v73, v31, v35, v38, v39);
    sub_100021A14(v33, &qword_100BE75E0);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v30, v76);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v37);
    v40 = swift_allocObject(&unk_100B77D30, 24, 7);
    swift_weakInit(v40 + 16);
    sub_10007AB60((uint64_t)&unk_100BE7630);
    v42 = v41;
    v43 = swift_retain();
    v44 = v66;
    Publisher<>.sink(receiveValue:)(sub_1004CDD58, v40, v66, v42, v43);
    v45 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v36, v44, v45);
  }
  swift_release();
  v60 = v77;
  swift_beginAccess(v77, v82, 33, 0);
  AnyCancellable.store(in:)(v60);
  swift_endAccess(v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

uint64_t sub_1004B915C(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  _QWORD *v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  id v72[4];

  v4 = v3;
  v63 = a2 & 1;
  v8 = sub_1000BA294(&qword_100BE7648);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  __chkstk_darwin(v8);
  v60 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BE75E0);
  v11 = __chkstk_darwin(v10);
  v58 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0, v11);
  v67 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BE7650);
  v64 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BE7658);
  v65 = *(_QWORD *)(v19 - 8);
  v66 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1000BA294(&qword_100BE7660);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v56 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112));
  *v69 = &_swiftEmptySetSingleton;
  v23 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
  swift_beginAccess(v23, v72, 33, 0);
  v71 = a1;
  swift_bridgeObjectRetain();
  Published.init(initialValue:)(&v71, &type metadata for OverviewTableViewModel);
  swift_endAccess(v72);
  swift_beginAccess(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), v72, 33, 0);
  v70 = a1;
  v71 = a1;
  swift_bridgeObjectRetain();
  Published.init(initialValue:)(&v71, &type metadata for OverviewTableViewModel);
  swift_endAccess(v72);
  *(_BYTE *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = v63;
  swift_beginAccess(v23, v72, 33, 0);
  v24 = sub_1000BA294(&qword_100BE7668);
  Published.projectedValue.getter(v24);
  swift_endAccess(v72);
  sub_10007AB60((uint64_t)&unk_100BE7670);
  v26 = v25;
  v27 = sub_1004CE094();
  Publisher<>.removeDuplicates()(v16, v26, v27);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v18, v16);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v28, a3);
  v29 = sub_10009FFE0();
  if ((a2 & 1) != 0)
  {
    v45 = (void *)static OS_dispatch_queue.main.getter(v29);
    v72[0] = v45;
    sub_10007AB60((uint64_t)&unk_100BE7680);
    v47 = v46;
    sub_10007A100((uint64_t)&unk_100BE7620);
    v34 = v60;
    v48 = v66;
    Publisher.throttle<A>(for:scheduler:latest:)(v15, v72, 1, v66, v29, v47, v49);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v68);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v48);
    v50 = swift_allocObject(&unk_100B77D80, 24, 7);
    swift_weakInit(v50 + 16);
    sub_10007AB60((uint64_t)&unk_100BE7688);
    v52 = v51;
    v53 = swift_retain();
    v42 = v62;
    Publisher<>.sink(receiveValue:)(sub_1004CE0E8, v50, v62, v52, v53);
    v43 = swift_release();
    v44 = v61;
  }
  else
  {
    v72[0] = (id)static OS_dispatch_queue.main.getter(v29);
    v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v31 = v58;
    _s7Weather24LocationCompositionStateOwst_0(v58, 1, 1, v30);
    sub_10007AB60((uint64_t)&unk_100BE7680);
    v33 = v32;
    sub_10007A100((uint64_t)&unk_100BE7620);
    v34 = v56;
    v35 = v66;
    Publisher.debounce<A>(for:scheduler:options:)(v15, v72, v31, v66, v29, v33, v36, v37);
    sub_100021A14(v31, &qword_100BE75E0);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v68);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v35);
    v38 = swift_allocObject(&unk_100B77D80, 24, 7);
    swift_weakInit(v38 + 16);
    sub_10007AB60((uint64_t)&unk_100BE7690);
    v40 = v39;
    v41 = swift_retain();
    v42 = v59;
    Publisher<>.sink(receiveValue:)(sub_1004CE0E8, v38, v59, v40, v41);
    v43 = swift_release();
    v44 = v57;
  }
  (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v34, v42, v43);
  swift_release();
  v54 = v69;
  swift_beginAccess(v69, v72, 33, 0);
  AnyCancellable.store(in:)(v54);
  swift_endAccess(v72);
  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

uint64_t sub_1004B97D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a3 + 16;
  sub_1000992EC(a3 + 16, (uint64_t)v9);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    sub_10009EF94();
    swift_bridgeObjectRetain(a1);
    sub_1004B8950(v8, a2);
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_1004B9848(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  sub_1000992EC(a2 + 16, (uint64_t)v6);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = sub_10009EF94();
    sub_1004B89EC(v5);
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_1004B989C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  _BYTE v19[32];
  uint64_t v20;
  char v21;
  _BYTE v22[16];
  uint64_t v23;
  char v24;

  v1 = v0;
  v2 = type metadata accessor for MoonDetailViewModel.Model(0);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for MoonDetailViewModel(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  sub_10017B230();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v2) == 1)
    goto LABEL_6;
  sub_10007802C((uint64_t)v7, (uint64_t)v4, type metadata accessor for MoonDetailViewModel.Model);
  v8 = v4[*(int *)(v2 + 60)];
  sub_1004BA484(v1, (uint64_t)v22);
  if (v8 != 1)
  {
    sub_1004C2948((uint64_t)v22);
    sub_1000215BC((uint64_t)v4, type metadata accessor for MoonDetailViewModel.Model);
LABEL_6:
    v13 = 0;
    return v13 & 1;
  }
  v9 = v23;
  v10 = v24;
  sub_10008D47C(v23, v24);
  sub_100109B54();
  v12 = v11;
  sub_1000B15F8(v9, v10);
  sub_1004BA484((uint64_t)v22, (uint64_t)v19);
  if ((v12 & 1) != 0)
  {
    v13 = 0;
  }
  else
  {
    v14 = v20;
    v15 = v21;
    sub_10008D47C(v20, v21);
    sub_100109B54();
    v17 = v16;
    sub_1000B15F8(v14, v15);
    v13 = v17 ^ 1;
  }
  sub_1004C2948((uint64_t)v19);
  sub_1004C2948((uint64_t)v22);
  sub_1000215BC((uint64_t)v4, type metadata accessor for MoonDetailViewModel.Model);
  return v13 & 1;
}

void sub_1004B9A60(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[88];
  _QWORD v80[5];

  v78 = a1;
  v74 = sub_1000BA294(&qword_100BE7380);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  sub_100088FDC();
  v72 = v2;
  v69 = sub_1000992C4();
  v3 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  sub_100088FDC();
  v67 = v4;
  v5 = type metadata accessor for DetailType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100088FDC();
  v8 = v7;
  v66 = type metadata accessor for DetailViewVisibilityTrackerModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v68 = v10;
  v75 = sub_1000BA294(&qword_100BE7388);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v71 = (uint64_t)&v62 - v15;
  v16 = sub_1000DF648();
  sub_1000B42B0();
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v62 - v21;
  v76 = sub_1000BA294(&qword_100BE7390);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100088FDC();
  v77 = v24;
  type metadata accessor for MoonDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100098728();
  v28 = v27 - v26;
  v70 = v1;
  swift_retain();
  sub_10017B230();
  swift_release();
  if (sub_1000952CC(v28) == 1)
  {
    v29 = v77;
    swift_storeEnumTagMultiPayload(v77, v76, 0);
    sub_10007AB60((uint64_t)&unk_100BE7398);
    _ConditionalContent<>.init(storage:)(v29, &type metadata for EmptyView, v75, &protocol witness table for EmptyView, v30);
  }
  else
  {
    v62 = v3;
    v65 = v22;
    sub_10007802C(v28, (uint64_t)v22, type metadata accessor for MoonDetailViewModel.Model);
    sub_100080C0C((uint64_t)v22, (uint64_t)v19, type metadata accessor for MoonDetailViewModel.Model);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DetailType.moonPhase(_:), v5);
    v31 = &v19[*(int *)(v16 + 56)];
    v32 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 16);
    v33 = (uint64_t)v19;
    v64 = v19;
    v34 = v67;
    v35 = v69;
    v32(v67, v31, v69);
    sub_1000215BC(v33, type metadata accessor for MoonDetailViewModel.Model);
    v36 = v66;
    v37 = v68 + *(int *)(v66 + 24);
    v63 = v16;
    v38 = v68;
    v39 = enum case for DetailViewOrigin.component(_:);
    v40 = type metadata accessor for DetailViewOrigin(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v37, v39, v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v38, v8, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v38 + *(int *)(v36 + 20), v34, v35);
    v41 = (uint64_t)v70;
    v42 = v70[9];
    v43 = v70[10];
    v44 = sub_1000DB418(v70 + 6, v42);
    v80[3] = v42;
    v80[4] = *(_QWORD *)(v43 + 8);
    v45 = sub_10005F164(v80);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v45, v44, v42);
    v46 = *(int *)(v63 + 24);
    v47 = &v65[*(int *)(v63 + 20)];
    v49 = *(_QWORD *)v47;
    v48 = *((_QWORD *)v47 + 1);
    v50 = *(_QWORD *)&v65[v46];
    v51 = *(_QWORD *)&v65[v46 + 8];
    v52 = (uint64_t)v64;
    sub_100080C0C((uint64_t)v65, (uint64_t)v64, type metadata accessor for MoonDetailViewModel.Model);
    sub_1004BA484(v41, (uint64_t)v79);
    *v13 = swift_getKeyPath(&unk_1009A5BD8);
    v53 = sub_1000BA294(&qword_100BC4F28);
    swift_storeEnumTagMultiPayload(v13, v53, 0);
    v54 = (int *)v75;
    sub_100080C0C(v38, (uint64_t)v13 + *(int *)(v75 + 36), type metadata accessor for DetailViewVisibilityTrackerModel);
    sub_10003B59C((uint64_t)v80, (uint64_t)v13 + v54[10]);
    v55 = (_QWORD *)((char *)v13 + v54[11]);
    *v55 = v49;
    v55[1] = v48;
    v56 = (_QWORD *)((char *)v13 + v54[12]);
    *v56 = v50;
    v56[1] = v51;
    *((_BYTE *)v13 + v54[13]) = 0;
    v57 = (_QWORD *)((char *)v13 + v54[14]);
    *v57 = 0;
    v57[1] = 0;
    *((_BYTE *)v13 + v54[15]) = 1;
    swift_bridgeObjectRetain();
    sub_10009EF94();
    v58 = v72;
    sub_1004BA03C(v52, (uint64_t)v79);
    sub_1000215BC(v52, type metadata accessor for MoonDetailViewModel.Model);
    sub_1004C2948((uint64_t)v79);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v80);
    sub_1000215BC(v38, type metadata accessor for DetailViewVisibilityTrackerModel);
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))((char *)v13 + v54[16], v58, v74);
    v59 = v71;
    sub_1000787D4((uint64_t)v13, v71, &qword_100BE7388);
    v60 = v77;
    sub_100037768(v59, v77, &qword_100BE7388);
    swift_storeEnumTagMultiPayload(v60, v76, 1);
    sub_10007AB60((uint64_t)&unk_100BE7398);
    _ConditionalContent<>.init(storage:)(v60, &type metadata for EmptyView, v54, &protocol witness table for EmptyView, v61);
    sub_100021A14(v59, &qword_100BE7388);
    sub_1000215BC((uint64_t)v65, type metadata accessor for MoonDetailViewModel.Model);
  }
}

void sub_1004BA03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18[2];

  v4 = sub_1000BA294(&qword_100BC6518);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for MoonDetailViewModel.Model(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for MoonDetailViewModel.Model);
  sub_10003B59C(a2 + 48, (uint64_t)v18);
  *v6 = swift_getKeyPath(&unk_1009A5BD8);
  v13 = sub_1000BA294(&qword_100BC4F28);
  swift_storeEnumTagMultiPayload(v6, v13, 0);
  KeyPath = swift_getKeyPath(&unk_1009A5C08);
  v15 = swift_getKeyPath(&unk_1009A5C38);
  sub_1004BA224((uint64_t)v6, KeyPath, 0, v15, 0, (uint64_t)v9, v18, (uint64_t)v12, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
  LOBYTE(a2) = sub_1004B989C();
  sub_10007A100((uint64_t)&unk_100BE73A0);
  View.navigationBarHidden(_:)(a2 & 1, v10, v16);
  sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
}

double sub_1004BA224@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, double a14@<D5>, double a15@<D6>)
{
  int *v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  double *v34;
  uint64_t v35;
  double *v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  double *v44;
  double result;
  uint64_t v46;
  _QWORD *v47;
  double v48;
  double v49;
  uint64_t v50;

  sub_1000787D4(a1, a8, &qword_100BC6518);
  v29 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  v30 = a8 + v29[5];
  *(_QWORD *)v30 = a2;
  *(_BYTE *)(v30 + 8) = a3 & 1;
  v31 = a8 + v29[6];
  *(_QWORD *)v31 = a4;
  *(_BYTE *)(v31 + 8) = a5 & 1;
  sub_10007802C(a6, a8 + v29[7], type metadata accessor for MoonDetailViewModel.Model);
  sub_10003C800(a7, a8 + v29[8]);
  v32 = (double *)(a8 + v29[9]);
  v48 = a9;
  State.init(wrappedValue:)(&v48, &type metadata for CGFloat);
  v33 = v50;
  *v32 = v49;
  *((_QWORD *)v32 + 1) = v33;
  v34 = (double *)(a8 + v29[10]);
  v48 = a10;
  State.init(wrappedValue:)(&v48, &type metadata for CGFloat);
  v35 = v50;
  *v34 = v49;
  *((_QWORD *)v34 + 1) = v35;
  v36 = (double *)(a8 + v29[11]);
  v48 = a11;
  State.init(wrappedValue:)(&v48, &type metadata for CGFloat);
  v37 = v50;
  *v36 = v49;
  *((_QWORD *)v36 + 1) = v37;
  v38 = (double *)(a8 + v29[12]);
  v48 = a12;
  State.init(wrappedValue:)(&v48, &type metadata for CGFloat);
  v39 = v50;
  *v38 = v49;
  *((_QWORD *)v38 + 1) = v39;
  v40 = (double *)(a8 + v29[13]);
  v48 = a13;
  State.init(wrappedValue:)(&v48, &type metadata for CGFloat);
  v41 = v50;
  *v40 = v49;
  *((_QWORD *)v40 + 1) = v41;
  v42 = (double *)(a8 + v29[14]);
  v48 = a14;
  State.init(wrappedValue:)(&v48, &type metadata for CGFloat);
  v43 = v50;
  *v42 = v49;
  *((_QWORD *)v42 + 1) = v43;
  v44 = (double *)(a8 + v29[15]);
  v48 = a15;
  State.init(wrappedValue:)(&v48, &type metadata for CGFloat);
  result = v49;
  v46 = v50;
  *v44 = v49;
  *((_QWORD *)v44 + 1) = v46;
  v47 = (_QWORD *)(a8 + v29[16]);
  *v47 = 0xD000000000000014;
  v47[1] = 0x8000000100A07530;
  return result;
}

uint64_t sub_1004BA484(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MoonDetailView(a2, a1);
  return a2;
}

uint64_t sub_1004BA4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - v6;
  v9 = v1 + *(int *)(v8 + 28);
  LODWORD(v9) = *(unsigned __int8 *)(v9 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(v1, (uint64_t)v7, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v9 == 1)
  {
    v10 = &v7[*(int *)(v2 + 20)];
    v11 = *(_QWORD *)v10;
    v12 = v10[8];
    sub_10008D47C(*(_QWORD *)v10, v12);
    sub_100109B54();
    v14 = v13;
    sub_1000B15F8(v11, v12);
    sub_100080C0C((uint64_t)v7, (uint64_t)v4, type metadata accessor for MoonDetailRootContentView);
    if ((v14 & 1) != 0)
    {
      v15 = 0;
    }
    else
    {
      v16 = &v4[*(int *)(v2 + 24)];
      v17 = *(_QWORD *)v16;
      v18 = v16[8];
      sub_10008D47C(*(_QWORD *)v16, v18);
      sub_100109B54();
      v20 = v19;
      sub_1000B15F8(v17, v18);
      v15 = v20 ^ 1;
    }
    sub_1000215BC((uint64_t)v4, type metadata accessor for MoonDetailRootContentView);
  }
  else
  {
    v15 = 0;
  }
  sub_1000215BC((uint64_t)v7, type metadata accessor for MoonDetailRootContentView);
  return v15 & 1;
}

void sub_1004BA634(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = type metadata accessor for MoonDetailRootContentView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  sub_100080C0C(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonDetailRootContentView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_100B77B78, v7 + v5, v6 | 7);
  sub_10007802C((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for MoonDetailRootContentView);
  *a1 = sub_1004CD9A4;
  a1[1] = v8;
}

void sub_1004BA6F0(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;

  *a2 = static Alignment.top.getter(a1);
  a2[1] = v6;
  v7 = sub_1000BA294(&qword_100BE7478);
  sub_1004BA744(a1, (_QWORD *)((char *)a2 + *(int *)(v7 + 44)), a3);
}

void sub_1004BA744(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  __n128 v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t, __n128);
  __n128 v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;

  v6 = sub_1000BA294(&qword_100BE7480);
  __chkstk_darwin(v6);
  v90 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v72 - v9;
  v11 = type metadata accessor for ScrollIndicatorVisibility(0);
  v83 = *(_QWORD *)(v11 - 8);
  v84 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE7488);
  v80 = *(_QWORD *)(v14 - 8);
  v81 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1000BA294(&qword_100BE7490);
  v82 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1000BA294(&qword_100BE7498);
  __chkstk_darwin(v79);
  v88 = (uint64_t)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v72 - v21;
  __chkstk_darwin(v23);
  v87 = (char *)&v72 - v24;
  v25 = sub_1004BA4B8();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  if ((v25 & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, &v91, 33, 0);
    v26 = sub_1007B187C();
    v33 = sub_1007B1944();
    v34 = v33 + sub_1007B19F4();
    v35 = sub_1007B197C();
    swift_endAccess(&v91);
    static Alignment.center.getter(v36);
    v25 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(0, 1, v34 + v35, 0);
    v27 = v91;
    v28 = v92;
    v29 = v93;
    v30 = v94;
    v31 = v95;
    v32 = v96;
  }
  v73 = v32;
  v74 = v31;
  v75 = v30;
  v76 = v29;
  v77 = v28;
  v78 = v27;
  v86 = v26;
  __chkstk_darwin(v25);
  v89 = a1;
  *(&v72 - 2) = a1;
  *((double *)&v72 - 1) = a3;
  v38 = static Axis.Set.vertical.getter(v37);
  v39 = sub_1000BA294(&qword_100BE74A0);
  v40 = sub_1004CD9E4();
  v41 = ScrollView.init(_:showsIndicators:content:)(v38, 1, sub_1004CD9D8, &v72 - 4, v39, v40);
  v42 = static ScrollIndicatorVisibility.never.getter(v41);
  v43 = static Axis.Set.vertical.getter(v42);
  v45 = static Axis.Set.horizontal.getter(v44);
  v46 = Axis.Set.init(rawValue:)(0);
  v47 = Axis.Set.init(rawValue:)(v46);
  if (Axis.Set.init(rawValue:)(v47 & v43) != v43)
    v46 = Axis.Set.init(rawValue:)(v46 | v43);
  v48 = Axis.Set.init(rawValue:)(v46);
  if (Axis.Set.init(rawValue:)(v48 & v45) != v45)
    v46 = Axis.Set.init(rawValue:)(v46 | v45);
  v49 = (uint64_t)v87;
  sub_10007AB60((uint64_t)&unk_100BE74C0);
  v50 = v81;
  View.scrollIndicators(_:axes:)(v13, v46, v81, v51);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v13, v84);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v50);
  v52 = type metadata accessor for MoonDetailRootContentView(0);
  v53 = v89;
  v54 = (uint64_t *)(v89 + *(int *)(v52 + 64));
  v56 = *v54;
  v55 = v54[1];
  v57 = v82;
  v58 = v85;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v22, v18, v85);
  v59 = &v22[*(int *)(v79 + 36)];
  *(_QWORD *)v59 = v56;
  *((_QWORD *)v59 + 1) = v55;
  v60 = *(void (**)(char *, uint64_t, __n128))(v57 + 8);
  v61 = swift_bridgeObjectRetain();
  v60(v18, v58, v61);
  sub_1000787D4((uint64_t)v22, v49, &qword_100BE7498);
  v63 = 1;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    *(_QWORD *)v10 = static VerticalAlignment.top.getter(v62);
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 1;
    v64 = sub_1000BA294(&qword_100BE74D8);
    sub_1004BEF44(v53, &v10[*(int *)(v64 + 44)]);
    v63 = 0;
  }
  v65 = sub_1000BA294(&qword_100BE74C8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, v63, 1, v65);
  v66 = v88;
  sub_100037768(v49, v88, &qword_100BE7498);
  v67 = v90;
  sub_100037768((uint64_t)v10, v90, &qword_100BE7480);
  v68 = v78;
  *a2 = v86;
  a2[1] = v68;
  v69 = v76;
  a2[2] = v77;
  a2[3] = v69;
  v70 = v74;
  a2[4] = v75;
  a2[5] = v70;
  a2[6] = v73;
  v71 = sub_1000BA294(&qword_100BE74D0);
  sub_100037768(v66, (uint64_t)a2 + *(int *)(v71 + 48), &qword_100BE7498);
  sub_100037768(v67, (uint64_t)a2 + *(int *)(v71 + 64), &qword_100BE7480);
  swift_retain();
  sub_100021A14((uint64_t)v10, &qword_100BE7480);
  sub_100021A14(v49, &qword_100BE7498);
  sub_100021A14(v67, &qword_100BE7480);
  sub_100021A14(v66, &qword_100BE7498);
  swift_release();
}

void sub_1004BAD10(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];

  v6 = sub_1000BA294(&qword_100BE74B8);
  __chkstk_darwin(v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v9);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v10 = sub_1000BA294(&qword_100BE7518);
  sub_1004BAE40(a1, (uint64_t)&v8[*(int *)(v10 + 44)], a3);
  v12 = static Edge.Set.bottom.getter(v11);
  swift_beginAccess(&unk_100BE0830, v23, 1, 0);
  v13 = sub_1004092CC();
  v14 = EdgeInsets.init(_all:)(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_100037768((uint64_t)v8, a2, &qword_100BE74B8);
  v21 = a2 + *(int *)(sub_1000BA294(&qword_100BE74A0) + 36);
  *(_BYTE *)v21 = v12;
  *(double *)(v21 + 8) = v14;
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = v18;
  *(_QWORD *)(v21 + 32) = v20;
  *(_BYTE *)(v21 + 40) = 0;
  sub_100021A14((uint64_t)v8, &qword_100BE74B8);
}

void sub_1004BAE40(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t OpaqueTypeConformance2;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  int *v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  void (**v119)(uint64_t@<X8>);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t KeyPath;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  __int128 v210;
  char v211[8];
  char v212[8];
  uint64_t v213;
  char v214;
  uint64_t v215;
  char v216;
  __int128 v217;
  _OWORD v218[3];

  v191 = a2;
  v188 = sub_1000BA294(&qword_100BE7520);
  v187 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v186 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_1000BA294(&qword_100BDB068);
  __chkstk_darwin(v185);
  v181 = (char *)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v190 = (uint64_t)&v158 - v8;
  v9 = type metadata accessor for DetailNewsComponentView(0);
  __chkstk_darwin(v9);
  v163 = (uint64_t *)((char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1000BA294(&qword_100BC68A0);
  __chkstk_darwin(v11);
  v196 = (uint64_t)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for DetailComponentContainerViewModel(0);
  __chkstk_darwin(v180);
  v162 = (uint64_t)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v161 = (uint64_t)&v158 - v15;
  v16 = sub_1000BA294(&qword_100BC68A8);
  __chkstk_darwin(v16);
  v189 = (uint64_t)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v184 = (uint64_t)&v158 - v19;
  v177 = sub_1000BA294(&qword_100BE7528);
  __chkstk_darwin(v177);
  v179 = (char *)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_1000BA294(&qword_100BDB060);
  __chkstk_darwin(v178);
  v202 = (uint64_t)&v158 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v201 = (uint64_t)&v158 - v23;
  v24 = sub_1000BA294(&qword_100BE7530);
  __chkstk_darwin(v24);
  v176 = (uint64_t *)((char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v175 = sub_1000BA294(&qword_100BDB058);
  __chkstk_darwin(v175);
  v183 = (uint64_t)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v174 = (uint64_t)&v158 - v28;
  __chkstk_darwin(v29);
  v199 = (uint64_t)&v158 - v30;
  v31 = sub_1000BA294(&qword_100BE7538);
  __chkstk_darwin(v31);
  v173 = (uint64_t *)((char *)&v158 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v172 = sub_1000BA294(&qword_100BDB050);
  __chkstk_darwin(v172);
  v200 = (uint64_t)&v158 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v171 = (uint64_t)&v158 - v35;
  __chkstk_darwin(v36);
  v198 = (uint64_t)&v158 - v37;
  v38 = sub_1000BA294(&qword_100BE7540);
  __chkstk_darwin(v38);
  v40 = (char *)&v158 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_1000BA294(&qword_100BE7548);
  __chkstk_darwin(v164);
  v169 = (uint64_t)&v158 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_1000BA294(&qword_100BE7550);
  __chkstk_darwin(v166);
  v167 = (uint64_t)&v158 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v168 = (uint64_t)&v158 - v44;
  v165 = sub_1000BA294(&qword_100BDB048);
  __chkstk_darwin(v165);
  v205 = (uint64_t)&v158 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v204 = (uint64_t)&v158 - v47;
  v170 = type metadata accessor for MoonDetailRootContentView(0);
  v192 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v193 = v48;
  v49 = (char *)&v158 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_1000BA294(&qword_100BD62E8);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v51 = (char *)&v158 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1000BA294(&qword_100BE7558);
  __chkstk_darwin(v52);
  v54 = (char *)&v158 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1000BA294(&qword_100BDB038);
  __chkstk_darwin(v55);
  v197 = (uint64_t)&v158 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v59 = (char *)&v158 - v58;
  v60 = sub_1004BA4B8();
  v195 = a1;
  v203 = v59;
  v194 = v49;
  v182 = v9;
  if ((v60 & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, &v206, 33, 0);
    v61 = sub_1007B187C();
    v62 = sub_1007B190C();
    swift_endAccess(&v206);
    static Alignment.center.getter(v63);
    _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v62, 0);
    *(_QWORD *)&v206 = v61;
    *((_QWORD *)&v206 + 1) = v213;
    LOBYTE(v207) = v214;
    v208 = v215;
    LOBYTE(v209) = v216;
    v210 = v217;
    sub_100080C0C(a1, (uint64_t)v49, type metadata accessor for MoonDetailRootContentView);
    v64 = *(unsigned __int8 *)(v192 + 80);
    v65 = (v64 + 16) & ~v64;
    v66 = swift_allocObject(&unk_100B77C18, v65 + v193, v64 | 7);
    sub_10007802C((uint64_t)v49, v66 + v65, type metadata accessor for MoonDetailRootContentView);
    v67 = sub_1000BA294(&qword_100BC4B70);
    v68 = sub_1000BA294(&qword_100BD62F8);
    v69 = sub_1001A3880();
    v70 = type metadata accessor for EmptyVisualEffect(255);
    sub_10007A100((uint64_t)&qword_100BD6300);
    *(_QWORD *)&v218[0] = v70;
    *((_QWORD *)&v218[0] + 1) = v71;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v218, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
    v73 = v67;
    v49 = v194;
    v74 = v68;
    v59 = v203;
    a1 = v195;
    View.visualEffect<A>(_:)(sub_1004CDB00, v66, v73, v74, v69, OpaqueTypeConformance2);
    swift_release();
    v75 = swift_release();
    v76 = v159;
    v77 = v160;
    (*(void (**)(char *, char *, uint64_t, __n128))(v159 + 16))(v54, v51, v160, v75);
    *(_QWORD *)&v54[*(int *)(v52 + 36)] = 0x40C1940000000000;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v51, v77);
    sub_1000787D4((uint64_t)v54, (uint64_t)v59, &qword_100BE7558);
    v78 = 0;
  }
  else
  {
    v78 = 1;
  }
  v79 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, v78, 1, v52);
  *(_QWORD *)v40 = static HorizontalAlignment.center.getter(v79);
  *((_QWORD *)v40 + 1) = 0;
  v40[16] = 0;
  v80 = sub_1000BA294(&qword_100BE7560);
  sub_1004BF914(a1, (uint64_t)&v40[*(int *)(v80 + 44)]);
  swift_beginAccess(&unk_100C070A0, v212, 1, 0);
  sub_1007B1AE8();
  v82 = v81;
  v84 = v83 & 1;
  static Alignment.center.getter(v81);
  _FrameLayout.init(width:height:alignment:)(0, 1, v82, v84);
  v85 = v169;
  sub_100037768((uint64_t)v40, v169, &qword_100BE7540);
  v86 = (_OWORD *)(v85 + *(int *)(v164 + 36));
  v87 = v218[1];
  *v86 = v218[0];
  v86[1] = v87;
  v86[2] = v218[2];
  sub_100021A14((uint64_t)v40, &qword_100BE7540);
  sub_100080C0C(a1, (uint64_t)v49, type metadata accessor for MoonDetailRootContentView);
  v88 = *(unsigned __int8 *)(v192 + 80);
  v89 = (v88 + 16) & ~v88;
  v193 += v89;
  v192 = v88 | 7;
  v90 = swift_allocObject(&unk_100B77BC8, v193, v88 | 7);
  sub_10007802C((uint64_t)v49, v90 + v89, type metadata accessor for MoonDetailRootContentView);
  v91 = v167;
  sub_100037768(v85, v167, &qword_100BE7548);
  v92 = (_QWORD *)(v91 + *(int *)(v166 + 36));
  *v92 = sub_1004BF538;
  v92[1] = 0;
  v92[2] = sub_1004CDAC0;
  v92[3] = v90;
  sub_100021A14(v85, &qword_100BE7548);
  v93 = v168;
  sub_1000787D4(v91, v168, &qword_100BE7550);
  v94 = v205;
  sub_100037768(v93, v205, &qword_100BE7550);
  *(_QWORD *)(v94 + *(int *)(v165 + 36)) = 0x40C3880000000000;
  sub_100021A14(v93, &qword_100BE7550);
  sub_1000787D4(v94, v204, &qword_100BDB048);
  v96 = static Alignment.top.getter(v95);
  v97 = (uint64_t)v173;
  *v173 = v96;
  *(_QWORD *)(v97 + 8) = v98;
  v99 = sub_1000BA294(&qword_100BE7568);
  sub_1004BC348(a1, (void *)(v97 + *(int *)(v99 + 44)), a3);
  v100 = v171;
  sub_100037768(v97, v171, &qword_100BE7538);
  *(_QWORD *)(v100 + *(int *)(v172 + 36)) = 0x40BF400000000000;
  sub_100021A14(v97, &qword_100BE7538);
  sub_1000787D4(v100, v198, &qword_100BDB050);
  v102 = static Alignment.bottom.getter(v101);
  v103 = (uint64_t)v176;
  *v176 = v102;
  *(_QWORD *)(v103 + 8) = v104;
  v105 = sub_1000BA294(&qword_100BE7570);
  sub_1004BCE84(a1, (uint64_t *)(v103 + *(int *)(v105 + 44)));
  v106 = v174;
  sub_100037768(v103, v174, &qword_100BE7530);
  *(_QWORD *)(v106 + *(int *)(v175 + 36)) = 0x40BB580000000000;
  sub_100021A14(v103, &qword_100BE7530);
  sub_1000787D4(v106, v199, &qword_100BDB058);
  v107 = v170;
  v108 = a1 + *(int *)(v170 + 28);
  v109 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  v110 = v108 + v109[11];
  v111 = (_QWORD *)(a1 + *(int *)(v107 + 32));
  v112 = v111[3];
  v113 = v111[4];
  v114 = sub_1000DB418(v111, v112);
  v115 = (int *)v177;
  v116 = (uint64_t)v179;
  v117 = &v179[*(int *)(v177 + 40)];
  *((_QWORD *)v117 + 3) = v112;
  *((_QWORD *)v117 + 4) = *(_QWORD *)(v113 + 8);
  v118 = sub_10005F164(v117);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v118, v114, v112);
  sub_100080C0C(v110, v116, type metadata accessor for ConditionDetailPlatterViewModel);
  *(_BYTE *)(v116 + v115[9]) = 0;
  v119 = (void (**)(uint64_t@<X8>))(v116 + v115[11]);
  *v119 = sub_1004BECD8;
  v119[1] = 0;
  v120 = v115[12];
  swift_beginAccess(&unk_100BE0830, v211, 1, 0);
  *(double *)(v116 + v120) = sub_10040908C();
  v121 = v202;
  sub_100037768(v116, v202, &qword_100BE7528);
  *(_QWORD *)(v121 + *(int *)(v178 + 36)) = 0x40B7700000000000;
  sub_100021A14(v116, &qword_100BE7528);
  sub_1000787D4(v121, v201, &qword_100BDB060);
  v122 = v196;
  sub_100037768(v108 + v109[13], v196, &qword_100BC68A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v122, 1, v180) == 1)
  {
    sub_100021A14(v196, &qword_100BC68A0);
    v123 = 1;
    v124 = v184;
    v125 = v182;
  }
  else
  {
    v126 = v161;
    sub_10007802C(v196, v161, type metadata accessor for DetailComponentContainerViewModel);
    v127 = v162;
    sub_100080C0C(v126, v162, type metadata accessor for DetailComponentContainerViewModel);
    v128 = v111[3];
    v129 = v111[4];
    v130 = sub_1000DB418(v111, v128);
    v208 = v128;
    v209 = *(_QWORD *)(v129 + 8);
    v131 = sub_10005F164(&v206);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v131, v130, v128);
    sub_1000215BC(v126, type metadata accessor for DetailComponentContainerViewModel);
    KeyPath = swift_getKeyPath(&unk_1009A5D40);
    v133 = (uint64_t)v163;
    *v163 = KeyPath;
    v134 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    swift_storeEnumTagMultiPayload(v133, v134, 0);
    v125 = v182;
    sub_10007802C(v127, v133 + *(int *)(v182 + 20), type metadata accessor for DetailComponentContainerViewModel);
    sub_10003C800(&v206, v133 + *(int *)(v125 + 24));
    *(_BYTE *)(v133 + *(int *)(v125 + 28)) = 0;
    v124 = v184;
    sub_10007802C(v133, v184, type metadata accessor for DetailNewsComponentView);
    v123 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v124, v123, 1, v125);
  *(_QWORD *)&v206 = *(_QWORD *)(v108 + v109[12]);
  v135 = (uint64_t)v194;
  sub_100080C0C(v195, (uint64_t)v194, type metadata accessor for MoonDetailRootContentView);
  v136 = swift_allocObject(&unk_100B77BF0, v193, v192);
  sub_10007802C(v135, v136 + v89, type metadata accessor for MoonDetailRootContentView);
  swift_bridgeObjectRetain();
  v137 = sub_1000BA294(&qword_100BE1798);
  v138 = sub_1000BA294(&qword_100BC68B0);
  sub_10007AB60((uint64_t)&qword_100BE17A8);
  v140 = v139;
  sub_10007AB60((uint64_t)&qword_100BE7578);
  v142 = v141;
  sub_10007A100((uint64_t)&qword_100BE17B8);
  v143 = v186;
  ForEach<>.init(_:content:)(&v206, sub_1004CDAD0, v136, v137, &type metadata for ConditionDetailPlatterViewModel.PlatterIdentifier, v138, v140, v142, v144);
  v145 = v187;
  v146 = (uint64_t)v181;
  v147 = v188;
  (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v181, v143, v188);
  *(_QWORD *)(v146 + *(int *)(v185 + 36)) = 0x40B3880000000000;
  (*(void (**)(char *, uint64_t))(v145 + 8))(v143, v147);
  v148 = v190;
  sub_1000787D4(v146, v190, &qword_100BDB068);
  v149 = v197;
  sub_100037768((uint64_t)v203, v197, &qword_100BDB038);
  *(_QWORD *)&v206 = v149;
  v150 = v205;
  sub_100037768(v204, v205, &qword_100BDB048);
  *((_QWORD *)&v206 + 1) = v150;
  v151 = v198;
  v152 = v200;
  sub_100037768(v198, v200, &qword_100BDB050);
  v207 = v152;
  v153 = v199;
  v154 = v183;
  sub_100037768(v199, v183, &qword_100BDB058);
  v208 = v154;
  v155 = v201;
  v156 = v202;
  sub_100037768(v201, v202, &qword_100BDB060);
  v209 = v156;
  v157 = v189;
  sub_100037768(v124, v189, &qword_100BC68A8);
  *(_QWORD *)&v210 = v157;
  sub_100037768(v148, v146, &qword_100BDB068);
  *((_QWORD *)&v210 + 1) = v146;
  sub_10035DF9C((uint64_t)&v206);
  sub_100021A14(v148, &qword_100BDB068);
  sub_100021A14(v124, &qword_100BC68A8);
  sub_100021A14(v155, &qword_100BDB060);
  sub_100021A14(v153, &qword_100BDB058);
  sub_100021A14(v151, &qword_100BDB050);
  sub_100021A14(v204, &qword_100BDB048);
  sub_100021A14((uint64_t)v203, &qword_100BDB038);
  sub_100021A14(v146, &qword_100BDB068);
  sub_100021A14(v157, &qword_100BC68A8);
  sub_100021A14(v156, &qword_100BDB060);
  sub_100021A14(v154, &qword_100BDB058);
  sub_100021A14(v200, &qword_100BDB050);
  sub_100021A14(v205, &qword_100BDB048);
  sub_100021A14(v197, &qword_100BDB038);
}

double sub_1004BC140(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  double v24;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  CGRect v32;
  CGRect v33;

  v5 = v4;
  v10 = type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  v17 = v5 + *(int *)(v16 + 28);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(v5, (uint64_t)v15, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v17 != 1)
  {
    v23 = (uint64_t)v15;
    goto LABEL_5;
  }
  v18 = &v15[*(int *)(v10 + 20)];
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_10008D47C(*(_QWORD *)v18, v20);
  sub_100109B54();
  v22 = v21;
  sub_1000B15F8(v19, v20);
  sub_100080C0C((uint64_t)v15, (uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
  if ((v22 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
    v23 = (uint64_t)v15;
LABEL_5:
    sub_1000215BC(v23, type metadata accessor for MoonDetailRootContentView);
    return 0.0;
  }
  v26 = &v12[*(int *)(v10 + 24)];
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_10008D47C(*(_QWORD *)v26, v28);
  sub_100109B54();
  v30 = v29;
  sub_1000B15F8(v27, v28);
  sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
  sub_1000215BC((uint64_t)v15, type metadata accessor for MoonDetailRootContentView);
  v24 = 0.0;
  if ((v30 & 1) == 0)
  {
    v32.origin.x = a1;
    v32.origin.y = a2;
    v32.size.width = a3;
    v32.size.height = a4;
    if (CGRectGetMinY(v32) < 0.0)
    {
      v33.origin.x = a1;
      v33.origin.y = a2;
      v33.size.width = a3;
      v33.size.height = a4;
      return 0.0 - CGRectGetMinY(v33);
    }
  }
  return v24;
}

_QWORD *sub_1004BC348@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v34[272];
  _QWORD v35[34];
  _QWORD v36[35];
  char v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  _BYTE v41[280];

  v6 = type metadata accessor for MoonDetailRootContentView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = sub_1000BA294(&qword_100BE7698);
  __chkstk_darwin(v9);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v34[-v13 - 8];
  sub_1004BC6B0((uint64_t)v41, a3);
  if ((sub_1004BA4B8() & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, v36, 33, 0);
    v15 = sub_1007B187C();
    v16 = sub_1007B1A18();
    swift_endAccess(v36);
    static Alignment.center.getter(v17);
    _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v16, 0);
    v36[0] = v15;
    v36[1] = v36[34];
    LOBYTE(v36[2]) = v37;
    v36[3] = v38;
    LOBYTE(v36[4]) = v39;
    *(_OWORD *)&v36[5] = v40;
    sub_100080C0C(a1, (uint64_t)&v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for MoonDetailRootContentView);
    v18 = *(unsigned __int8 *)(v7 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = swift_allocObject(&unk_100B77DD0, v19 + v8, v18 | 7);
    sub_10007802C((uint64_t)&v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v20 + v19, type metadata accessor for MoonDetailRootContentView);
    v21 = sub_1000BA294(&qword_100BC4B70);
    v22 = sub_1000BA294(&qword_100BD6308);
    v23 = sub_1001A3880();
    v24 = sub_100075EB0(&qword_100BD62F8);
    v25 = type metadata accessor for EmptyVisualEffect(255);
    sub_10007A100((uint64_t)&qword_100BD6300);
    v35[0] = v25;
    v35[1] = v26;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v35, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
    v35[0] = v24;
    v35[1] = OpaqueTypeConformance2;
    v28 = swift_getOpaqueTypeConformance2(v35, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
    View.visualEffect<A>(_:)(sub_1004CE190, v20, v21, v22, v23, v28);
    swift_release();
    swift_release();
    v29 = 0;
  }
  else
  {
    v29 = 1;
  }
  v30 = sub_1000BA294(&qword_100BD62E0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, v29, 1, v30);
  memcpy(v34, v41, sizeof(v34));
  sub_100037768((uint64_t)v14, (uint64_t)v11, &qword_100BE7698);
  memcpy(v35, v34, sizeof(v35));
  memcpy(a2, v34, 0x110uLL);
  v31 = sub_1000BA294(&qword_100BE76A0);
  sub_100037768((uint64_t)v11, (uint64_t)a2 + *(int *)(v31 + 48), &qword_100BE7698);
  sub_1004CE0FC(v35);
  sub_100021A14((uint64_t)v14, &qword_100BE7698);
  sub_100021A14((uint64_t)v11, &qword_100BE7698);
  memcpy(v36, v34, 0x110uLL);
  return sub_1004CE144(v36);
}

double sub_1004BC6B0@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double result;
  _BYTE v51[4];
  int v52;
  double v53;
  int v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[56];
  _BYTE v68[24];
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;

  v3 = v2;
  v6 = type metadata accessor for MoonDetailRootContentView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v66 = static Alignment.center.getter(v9);
  v65 = v10;
  swift_beginAccess(&unk_100C070A0, v68, 1, 0);
  v55 = sub_1007B1B18();
  v11 = sub_1007B1B18();
  v12 = a2 - (v11 + v11);
  static Alignment.center.getter(v13);
  v14 = _FrameLayout.init(width:height:alignment:)(*(_QWORD *)&v12, 0, 0, 1);
  v64 = v69;
  v15 = v70;
  v63 = v71;
  v16 = v72;
  v62 = v73;
  v61 = v74;
  v60 = static Edge.Set.top.getter(v14);
  v17 = sub_10055E278();
  v59 = EdgeInsets.init(_all:)(v17);
  v58 = v18;
  v57 = v19;
  v56 = v20;
  v54 = static Edge.Set.bottom.getter(v21);
  v22 = sub_1007B1B3C();
  v23 = EdgeInsets.init(_all:)(v22);
  v25 = v24;
  v53 = v26;
  v28 = v27;
  v52 = static Edge.Set.horizontal.getter(v29);
  v30 = sub_1007B1B18();
  v31 = EdgeInsets.init(_all:)(v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = sub_1004BA4B8();
  if ((v38 & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, v67, 33, 0);
    v39 = sub_1007B187C();
    swift_endAccess(v67);
  }
  else
  {
    v40 = static Color.clear.getter(v38);
    v39 = v40;
  }
  v67[40] = v15;
  v41 = a2 - (v55 + v55);
  v67[32] = v16;
  v67[24] = 0;
  v67[48] = 0;
  v67[0] = 0;
  v42 = static Edge.Set.all.getter(v40);
  sub_100080C0C(v3, (uint64_t)&v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for MoonDetailRootContentView);
  v43 = *(unsigned __int8 *)(v7 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_100B77DF8, v44 + v8, v43 | 7);
  sub_10007802C((uint64_t)&v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v45 + v44, type metadata accessor for MoonDetailRootContentView);
  v46 = v65;
  *(_QWORD *)a1 = v66;
  *(_QWORD *)(a1 + 8) = v46;
  *(double *)(a1 + 16) = v41;
  *(_QWORD *)(a1 + 24) = v64;
  *(_BYTE *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v63;
  *(_BYTE *)(a1 + 48) = v16;
  v47 = v61;
  *(_QWORD *)(a1 + 56) = v62;
  *(_QWORD *)(a1 + 64) = v47;
  *(_WORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = v60;
  v48 = v58;
  *(double *)(a1 + 88) = v59;
  *(_QWORD *)(a1 + 96) = v48;
  v49 = v56;
  *(_QWORD *)(a1 + 104) = v57;
  *(_QWORD *)(a1 + 112) = v49;
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = v54;
  *(double *)(a1 + 136) = v23;
  *(_QWORD *)(a1 + 144) = v25;
  result = v53;
  *(double *)(a1 + 152) = v53;
  *(_QWORD *)(a1 + 160) = v28;
  *(_BYTE *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = v52;
  *(double *)(a1 + 184) = v31;
  *(_QWORD *)(a1 + 192) = v33;
  *(_QWORD *)(a1 + 200) = v35;
  *(_QWORD *)(a1 + 208) = v37;
  *(_BYTE *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = v39;
  *(_BYTE *)(a1 + 232) = v42;
  *(_QWORD *)(a1 + 240) = sub_1004BF538;
  *(_QWORD *)(a1 + 248) = 0;
  *(_QWORD *)(a1 + 256) = sub_1004CE1A8;
  *(_QWORD *)(a1 + 264) = v45;
  return result;
}

uint64_t sub_1004BCA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  void (*v24)(char *, uint64_t);
  double v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  uint64_t v43;
  double v44;
  int *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  _QWORD v73[4];
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;

  v64 = a1;
  v68 = a4;
  v6 = type metadata accessor for CoordinateSpace(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD62F8);
  v66 = *(_QWORD *)(v10 - 8);
  v67 = v10;
  __chkstk_darwin(v10);
  v69 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MoonDetailRootContentView(0);
  v13 = (uint64_t *)(a3 + *(int *)(v12 + 64));
  v14 = v13[1];
  v73[0] = *v13;
  v73[1] = v14;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(v73);
  v15 = enum case for CoordinateSpace.named(_:);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v16(v9, enum case for CoordinateSpace.named(_:), v6);
  v65 = a2;
  v17 = GeometryProxy.frame(in:)(v9);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v9, v6);
  swift_beginAccess(&unk_100C070A0, v73, 1, 0);
  v25 = sub_1007B190C();
  v61 = (int *)v12;
  v26 = (uint64_t *)(a3 + *(int *)(v12 + 44));
  v27 = v26[1];
  v70 = *v26;
  v71 = v27;
  v28 = sub_1000BA294(&qword_100BC40A8);
  State.wrappedValue.getter(&v72, v28);
  v29 = v72;
  v30 = 0.0;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    v31 = v25 + v29;
    v74.origin.x = v17;
    v74.origin.y = v19;
    v74.size.width = v21;
    v74.size.height = v23;
    if (CGRectGetMinY(v74) < v31)
    {
      v75.origin.x = v17;
      v75.origin.y = v19;
      v75.size.width = v21;
      v75.size.height = v23;
      v30 = v31 - CGRectGetMinY(v75) + 0.0;
    }
  }
  v32 = type metadata accessor for EmptyVisualEffect(0);
  sub_10007A100((uint64_t)&qword_100BD6300);
  v63 = v32;
  v62 = v33;
  VisualEffect.offset(x:y:)(v32, v33, 0.0, v30);
  v34 = v13[1];
  v70 = *v13;
  v71 = v34;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(&v70);
  v16(v9, v15, v6);
  v35 = GeometryProxy.frame(in:)(v9);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v24(v9, v6);
  v42 = sub_1007B190C();
  v43 = v26[1];
  v70 = *v26;
  v71 = v43;
  State.wrappedValue.getter(&v72, v28);
  v44 = v72;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    v76.origin.x = v35;
    v76.origin.y = v37;
    v76.size.width = v39;
    v76.size.height = v41;
    if (CGRectGetMinY(v76) < v42 + v44)
    {
      v77.origin.x = v35;
      v77.origin.y = v37;
      v77.size.width = v39;
      v77.size.height = v41;
      CGRectGetMinY(v77);
      v45 = v61;
      v46 = (uint64_t *)(a3 + v61[10]);
      v47 = *v46;
      v48 = v46[1];
      v70 = v47;
      v71 = v48;
      State.wrappedValue.getter(&v72, v28);
      v49 = (uint64_t *)(a3 + v45[12]);
      v50 = *v49;
      v51 = v49[1];
      v70 = v50;
      v71 = v51;
      State.wrappedValue.getter(&v72, v28);
      v52 = (uint64_t *)(a3 + v45[13]);
      v53 = *v52;
      v54 = v52[1];
      v70 = v53;
      v71 = v54;
      State.wrappedValue.getter(&v72, v28);
      v55 = (uint64_t *)(a3 + v45[14]);
      v56 = *v55;
      v57 = v55[1];
      v70 = v56;
      v71 = v57;
      State.wrappedValue.getter(&v72, v28);
    }
  }
  v70 = v63;
  v71 = v62;
  swift_getOpaqueTypeConformance2(&v70, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
  v58 = v67;
  v59 = v69;
  VisualEffect.opacity(_:)(v67);
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v59, v58);
}

double sub_1004BCE84@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  double result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  void *(*v75)(uint64_t);
  uint64_t v76;
  uint64_t (*v77)();
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v72 = a2;
  v3 = sub_1000BA294(&qword_100BE7588);
  __chkstk_darwin(v3);
  v73 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v71 = (char *)&v61 - v6;
  v7 = type metadata accessor for MoonDetailRootContentView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1000BA294(&qword_100BE7590);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v61 - v13;
  v15 = 0;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, &v75, 33, 0);
    v15 = sub_1007B187C();
    swift_endAccess(&v75);
  }
  v67 = v15;
  v66 = a1 + *(int *)(v7 + 28);
  v16 = v66;
  v65 = type metadata accessor for MoonDetailViewModel.Model(0);
  v17 = *(_QWORD *)(v16 + *(int *)(v65 + 36));
  sub_100080C0C(a1, (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonDetailRootContentView);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = v19 + v9;
  v21 = v18 | 7;
  v22 = swift_allocObject(&unk_100B77C40, v20, v18 | 7);
  sub_10007802C((uint64_t)v10, v22 + v19, type metadata accessor for MoonDetailRootContentView);
  v23 = swift_allocObject(&unk_100B77C68, 40, 7);
  *(_QWORD *)(v23 + 16) = v17;
  v24 = 1;
  *(_BYTE *)(v23 + 24) = 1;
  *(_QWORD *)(v23 + 32) = 0x3FB999999999999ALL;
  v75 = sub_1004CDB10;
  v76 = v22;
  v77 = sub_1004CDC00;
  v78 = v23;
  v79 = 0;
  v80 = v17;
  sub_100080C0C(a1, (uint64_t)v10, type metadata accessor for MoonDetailRootContentView);
  v63 = v21;
  v64 = v20;
  v25 = swift_allocObject(&unk_100B77C90, v20, v21);
  sub_10007802C((uint64_t)v10, v25 + v19, type metadata accessor for MoonDetailRootContentView);
  swift_bridgeObjectRetain_n(v17, 2);
  v26 = sub_1000BA294(&qword_100BE7598);
  v27 = sub_1000BA294(&qword_100BE75A0);
  sub_10007AB60((uint64_t)&unk_100BE75A8);
  v29 = v28;
  v30 = type metadata accessor for EmptyVisualEffect(255);
  sub_10007A100((uint64_t)&qword_100BD6300);
  v62 = v30;
  v82 = v30;
  v83 = v31;
  v61 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
  v74 = v14;
  View.visualEffect<A>(_:)(sub_1004CDC14, v25, v26, v27, v29, OpaqueTypeConformance2);
  swift_release();
  swift_release();
  sub_1000BF398((uint64_t)v77, v78);
  swift_bridgeObjectRelease();
  v33 = (uint64_t *)(v66 + *(int *)(v65 + 40));
  v34 = *v33;
  if (*v33)
  {
    v35 = v33[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = sub_1004BA4B8();
    v37 = (uint64_t)v71;
    if ((v36 & 1) != 0)
    {
      sub_100080C0C(a1, (uint64_t)v10, type metadata accessor for MoonDetailRootContentView);
      v39 = v63;
      v38 = v64;
      v40 = swift_allocObject(&unk_100B77CB8, v64, v63);
      sub_10007802C((uint64_t)v10, v40 + v19, type metadata accessor for MoonDetailRootContentView);
      v41 = swift_allocObject(&unk_100B77CE0, 48, 7);
      *(_QWORD *)(v41 + 16) = v34;
      *(_QWORD *)(v41 + 24) = v35;
      *(_BYTE *)(v41 + 32) = 1;
      *(_QWORD *)(v41 + 40) = 0x3FE0000000000000;
      v75 = sub_1004CDC80;
      v76 = v40;
      v77 = sub_1004CDCD0;
      v78 = v41;
      v79 = 0;
      v80 = v34;
      v81 = v35;
      sub_100080C0C(a1, (uint64_t)v10, type metadata accessor for MoonDetailRootContentView);
      v42 = swift_allocObject(&unk_100B77D08, v38, v39);
      sub_10007802C((uint64_t)v10, v42 + v19, type metadata accessor for MoonDetailRootContentView);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43 = sub_1000BA294(&qword_100BE75C0);
      v44 = sub_1000BA294(&qword_100BD6308);
      sub_10007AB60((uint64_t)&unk_100BE75C8);
      v46 = v45;
      v47 = sub_100075EB0(&qword_100BD62F8);
      v82 = v62;
      v83 = v61;
      v48 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
      v82 = v47;
      v83 = v48;
      v49 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
      View.visualEffect<A>(_:)(sub_1004CDCE4, v42, v43, v44, v46, v49);
      swift_release();
      swift_release();
      sub_1000BF398((uint64_t)v77, v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = 1;
    }
  }
  else
  {
    v37 = (uint64_t)v71;
  }
  v50 = v74;
  v51 = sub_1000BA294(&qword_100BE75B0);
  _s7Weather24LocationCompositionStateOwst_0(v37, v24, 1, v51);
  v53 = v68;
  v52 = v69;
  v54 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v55 = v70;
  v54(v69, v50, v70);
  v56 = v73;
  sub_100037768(v37, v73, &qword_100BE7588);
  v57 = v72;
  *v72 = v67;
  v58 = sub_1000BA294(&qword_100BE75B8);
  v54((char *)v57 + *(int *)(v58 + 48), v52, v55);
  sub_100037768(v56, (uint64_t)v57 + *(int *)(v58 + 64), &qword_100BE7588);
  swift_retain();
  sub_100021A14(v37, &qword_100BE7588);
  v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v74, v55);
  sub_100021A14(v56, &qword_100BE7588);
  v59(v52, v55);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void *sub_1004BD4E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  _BYTE __src[184];

  sub_1004BD52C(*a1, (uint64_t)__src);
  return memcpy(a2, __src, 0xB8uLL);
}

void sub_1004BD52C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  char v45;
  char v46;
  _BYTE v47[32];

  v3 = v2;
  v6 = type metadata accessor for MoonDetailRootContentView(0);
  v40 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v40 + 64);
  __chkstk_darwin(v6);
  v42 = static HorizontalAlignment.center.getter(v8);
  v43 = a1;
  swift_bridgeObjectRetain();
  v41 = static Edge.Set.horizontal.getter(v9);
  swift_beginAccess(&unk_100C070A0, v47, 1, 0);
  v10 = sub_1007B1A7C();
  v11 = EdgeInsets.init(_all:)(v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v39 = static Edge.Set.bottom.getter(v18);
  v19 = sub_1004BA4B8();
  v20 = 0.0;
  if ((v19 & 1) != 0)
    v20 = 16.0;
  v21 = EdgeInsets.init(_all:)(v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = sub_1004BA4B8();
  if ((v28 & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, v44, 33, 0);
    v38 = sub_1007B187C();
    swift_endAccess(v44);
  }
  else
  {
    v29 = static Color.clear.getter(v28);
    v38 = v29;
  }
  v44[0] = 0;
  v46 = 0;
  v45 = 0;
  v30 = static Edge.Set.all.getter(v29);
  v31 = v44[0];
  v32 = v46;
  v33 = v45;
  sub_100080C0C(v3, (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonDetailRootContentView);
  v34 = *(unsigned __int8 *)(v40 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_100B77DA8, v35 + v7, v34 | 7);
  sub_10007802C((uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35, type metadata accessor for MoonDetailRootContentView);
  *(_QWORD *)a2 = v42;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v31;
  *(_QWORD *)(a2 + 24) = v43;
  *(_BYTE *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = v41;
  *(double *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 72) = v17;
  *(_BYTE *)(a2 + 80) = v32;
  *(_BYTE *)(a2 + 88) = v39;
  *(double *)(a2 + 96) = v21;
  *(_QWORD *)(a2 + 104) = v23;
  *(_QWORD *)(a2 + 112) = v25;
  *(_QWORD *)(a2 + 120) = v27;
  *(_BYTE *)(a2 + 128) = v33;
  *(_QWORD *)(a2 + 136) = v38;
  *(_BYTE *)(a2 + 144) = v30;
  *(_QWORD *)(a2 + 152) = sub_1004BF538;
  *(_QWORD *)(a2 + 160) = 0;
  *(_QWORD *)(a2 + 168) = sub_1004CE0F0;
  *(_QWORD *)(a2 + 176) = v36;
}

uint64_t sub_1004BD770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  uint64_t v17;
  _QWORD v19[2];

  v4 = type metadata accessor for CoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)(a3 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 64));
  v9 = v8[1];
  v19[0] = *v8;
  v19[1] = v9;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CoordinateSpace.named(_:), v4);
  v10 = GeometryProxy.frame(in:)(v7);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1004BD8D8(v10, v12, v14, v16);
  v17 = type metadata accessor for EmptyVisualEffect(0);
  sub_10007A100((uint64_t)&qword_100BD6300);
  return VisualEffect.opacity(_:)(v17);
}

double sub_1004BD8D8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v22;
  _BYTE v23[24];
  CGRect v24;
  CGRect v25;

  swift_beginAccess(&unk_100C070A0, v23, 1, 0);
  v7 = sub_1007B190C();
  type metadata accessor for MoonDetailRootContentView(0);
  v8 = sub_1000BA294(&qword_100BC40A8);
  State.wrappedValue.getter(&v22, v8);
  v9 = v22;
  State.wrappedValue.getter(&v22, v8);
  v10 = v22;
  v11 = 1.0;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    v12 = v7 + v9 + v10;
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    if (CGRectGetMinY(v24) < v12)
    {
      v25.origin.x = a1;
      v25.origin.y = a2;
      v25.size.width = a3;
      v25.size.height = a4;
      v13 = v12 - CGRectGetMinY(v25) + 0.0;
      State.wrappedValue.getter(&v22, v8);
      v14 = v22;
      State.wrappedValue.getter(&v22, v8);
      v15 = v14 + v22;
      State.wrappedValue.getter(&v22, v8);
      v16 = v15 - v22;
      State.wrappedValue.getter(&v22, v8);
      v17 = v13 - (v16 + v22);
      v18 = v17 + sub_1007B1B5C();
      v19 = 1.0 - v18 / sub_1007B1B5C();
      if (v19 > 0.0)
        return v19;
      else
        return 0.0;
    }
  }
  return v11;
}

void *sub_1004BDB08@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE __src[752];
  _BYTE v9[759];

  v4 = *a1;
  v5 = a1[1];
  v6 = static Axis.Set.horizontal.getter(a3);
  sub_1004BDB88(v4, v5, __src);
  memcpy(&v9[7], __src, 0x2F0uLL);
  *a2 = v6;
  return memcpy(a2 + 1, v9, 0x2F7uLL);
}

_QWORD *sub_1004BDB88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  _BYTE v6[376];
  _BYTE v7[376];
  _QWORD v8[47];
  _BYTE v9[376];
  _BYTE __dst[752];
  _BYTE v11[376];
  _QWORD __src[47];
  _BYTE v13[376];
  _BYTE v14[376];

  sub_1004BDCDC(a1, (uint64_t)v14);
  if (a2)
  {
    sub_1004BDCDC(a2, (uint64_t)__src);
    memcpy(__dst, __src, 0x178uLL);
    LocationSearchEntityFromStringResolver.init()();
  }
  else
  {
    sub_1004CDD98(__dst);
  }
  sub_1000787D4((uint64_t)__dst, (uint64_t)v13, &qword_100BE7638);
  memcpy(v7, v14, sizeof(v7));
  sub_1000787D4((uint64_t)v13, (uint64_t)v6, &qword_100BE7638);
  memcpy(v8, v7, sizeof(v8));
  sub_1000787D4((uint64_t)v6, (uint64_t)v9, &qword_100BE7638);
  memcpy(__dst, v8, 0x178uLL);
  sub_1000787D4((uint64_t)v9, (uint64_t)&__dst[376], &qword_100BE7638);
  memcpy(a3, __dst, 0x2F0uLL);
  sub_1000787D4((uint64_t)v6, (uint64_t)v11, &qword_100BE7638);
  sub_1004CDDA0(v8);
  sub_1004CDE84((uint64_t)v9);
  sub_1004CDE84((uint64_t)v11);
  memcpy(__src, v7, sizeof(__src));
  return sub_1004CDF8C(__src);
}

void *sub_1004BDCDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *result;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _BYTE v36[24];
  _QWORD v37[5];
  char v38;
  _BYTE v39[135];
  __int16 v40;
  uint64_t v41[16];
  _BYTE v42[144];
  char v43;
  _QWORD v44[35];

  v4 = type metadata accessor for MoonDetailRootContentView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v8 = static HorizontalAlignment.center.getter(v7);
  sub_1004BF3C4(a1, (uint64_t)v41);
  v42[136] = 0;
  memcpy(&v42[7], v41, 0x80uLL);
  v37[3] = v8;
  v37[4] = 0;
  v38 = 0;
  v9 = memcpy(v39, v42, sizeof(v39));
  v40 = 256;
  v10 = static Alignment.center.getter(v9);
  v31 = 1;
  v30 = 1;
  sub_100946434(v44, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v30, 0, v31, v10, v11);
  v12 = sub_1004CE000(v41);
  v34 = static Edge.Set.horizontal.getter(v12);
  swift_beginAccess(&unk_100C070A0, v37, 1, 0);
  v13 = sub_1007B1A7C();
  v14 = EdgeInsets.init(_all:)(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v43 = 0;
  v22 = static Alignment.center.getter(v21);
  v33 = v23;
  swift_beginAccess(&unk_100C070A0, v36, 33, 0);
  v24 = sub_1007B187C();
  swift_endAccess(v36);
  v25 = v43;
  sub_100080C0C(v35, (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonDetailRootContentView);
  v26 = *(unsigned __int8 *)(v5 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = swift_allocObject(&unk_100B77D58, v27 + v6, v26 | 7);
  sub_10007802C((uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for MoonDetailRootContentView);
  result = memcpy((void *)a2, v44, 0x110uLL);
  *(_BYTE *)(a2 + 272) = v34;
  *(double *)(a2 + 280) = v14;
  *(_QWORD *)(a2 + 288) = v16;
  *(_QWORD *)(a2 + 296) = v18;
  *(_QWORD *)(a2 + 304) = v20;
  *(_BYTE *)(a2 + 312) = v25;
  *(_QWORD *)(a2 + 320) = v24;
  *(_QWORD *)(a2 + 328) = v22;
  *(_QWORD *)(a2 + 336) = v33;
  *(_QWORD *)(a2 + 344) = sub_1004BF538;
  *(_QWORD *)(a2 + 352) = 0;
  *(_QWORD *)(a2 + 360) = sub_1004CE04C;
  *(_QWORD *)(a2 + 368) = v28;
  return result;
}

uint64_t sub_1004BDF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  void (*v24)(char *, uint64_t);
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  uint64_t v37;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v39[1] = a2;
  v39[2] = a1;
  v42 = a4;
  v5 = type metadata accessor for CoordinateSpace(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD62F8);
  v10 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  v41 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t *)(a3 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 64));
  v39[0] = a3;
  v14 = v13[1];
  v43 = *v13;
  v44 = v14;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(&v43);
  v15 = enum case for CoordinateSpace.named(_:);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v16(v8, enum case for CoordinateSpace.named(_:), v5);
  v17 = GeometryProxy.frame(in:)(v8);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24(v8, v5);
  v25 = sub_1004BE1A8(v17, v19, v21, v23);
  v26 = type metadata accessor for EmptyVisualEffect(0);
  sub_10007A100((uint64_t)&qword_100BD6300);
  v28 = v27;
  VisualEffect.offset(x:y:)(v26, v27, 0.0, v25);
  v29 = v13[1];
  v43 = *v13;
  v44 = v29;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(&v43);
  v16(v8, v15, v5);
  v30 = GeometryProxy.frame(in:)(v8);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v24(v8, v5);
  sub_1004BE66C(v30, v32, v34, v36);
  v43 = v26;
  v44 = v28;
  swift_getOpaqueTypeConformance2(&v43, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
  v37 = v40;
  VisualEffect.opacity(_:)(v40);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v37);
}

double sub_1004BE1A8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  double v24;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double *v39;
  double v40;
  uint64_t v41;
  double v42;
  double *v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double *v53;
  double v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double *v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  char v67;
  uint64_t v68;
  double v69;
  double v70;
  double MinY;
  double v72;
  uint64_t v73;
  double v74;
  char v75[24];
  CGRect v76;
  CGRect v77;

  v5 = v4;
  v10 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - v14;
  v17 = v5 + *(int *)(v16 + 28);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(v5, (uint64_t)v15, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v17 != 1)
  {
    v23 = (uint64_t)v15;
    goto LABEL_5;
  }
  v18 = &v15[v10[5]];
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_10008D47C(*(_QWORD *)v18, v20);
  sub_100109B54();
  v22 = v21;
  sub_1000B15F8(v19, v20);
  sub_100080C0C((uint64_t)v15, (uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
  if ((v22 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
    v23 = (uint64_t)v15;
LABEL_5:
    sub_1000215BC(v23, type metadata accessor for MoonDetailRootContentView);
    return 0.0;
  }
  v26 = &v12[v10[6]];
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_10008D47C(*(_QWORD *)v26, v28);
  sub_100109B54();
  v30 = v29;
  sub_1000B15F8(v27, v28);
  sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
  sub_1000215BC((uint64_t)v15, type metadata accessor for MoonDetailRootContentView);
  v24 = 0.0;
  if ((v30 & 1) == 0)
  {
    v76.origin.x = a1;
    v76.origin.y = a2;
    v76.size.width = a3;
    v76.size.height = a4;
    MinY = CGRectGetMinY(v76);
    swift_beginAccess(&unk_100C070A0, v75, 1, 0);
    v31 = sub_1007B190C();
    v32 = v5 + v10[11];
    v33 = *(_QWORD *)(v32 + 8);
    v69 = *(double *)v32;
    v72 = v69;
    v73 = v33;
    v34 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v74, v34);
    v35 = v31 + v74;
    v36 = v5 + v10[10];
    v37 = *(_QWORD *)(v36 + 8);
    v70 = *(double *)v36;
    v72 = v70;
    v73 = v37;
    State.wrappedValue.getter(&v74, v34);
    v38 = v35 + v74;
    v39 = (double *)(v5 + v10[12]);
    v40 = *v39;
    v41 = *((_QWORD *)v39 + 1);
    v72 = *v39;
    v73 = v41;
    State.wrappedValue.getter(&v74, v34);
    v42 = v38 + v74;
    v43 = (double *)(v5 + v10[13]);
    v44 = *v43;
    v45 = *((_QWORD *)v43 + 1);
    v72 = *v43;
    v73 = v45;
    State.wrappedValue.getter(&v74, v34);
    if (MinY < v42 - v74)
    {
      v77.origin.x = a1;
      v77.origin.y = a2;
      v77.size.width = a3;
      v77.size.height = a4;
      MinY = CGRectGetMinY(v77);
      v46 = sub_1007B190C();
      v72 = v69;
      v73 = v33;
      State.wrappedValue.getter(&v74, v34);
      v47 = v46 + v74;
      v48 = v70;
      v72 = v70;
      v73 = v37;
      State.wrappedValue.getter(&v74, v34);
      v49 = v47 + v74;
      v72 = v40;
      v73 = v41;
      State.wrappedValue.getter(&v74, v34);
      v50 = v49 + v74;
      v72 = v44;
      v73 = v45;
      State.wrappedValue.getter(&v74, v34);
      v69 = v50 - v74;
      v72 = v48;
      v73 = v37;
      State.wrappedValue.getter(&v74, v34);
      v70 = v74;
      v72 = v40;
      v73 = v41;
      State.wrappedValue.getter(&v74, v34);
      v51 = v74;
      v72 = v44;
      v73 = v45;
      State.wrappedValue.getter(&v74, v34);
      v52 = v74;
      v53 = (double *)(v5 + v10[15]);
      v54 = *v53;
      v55 = *((_QWORD *)v53 + 1);
      v72 = v54;
      v73 = v55;
      State.wrappedValue.getter(&v74, v34);
      v56 = v74;
      v57 = sub_1007B190C();
      v58 = sub_1007B1944();
      v59 = (double *)(v5 + v10[9]);
      v60 = *v59;
      v61 = *((_QWORD *)v59 + 1);
      v72 = v60;
      v73 = v61;
      State.wrappedValue.getter(&v74, v34);
      v62 = v74;
      v63 = sub_1007B197C();
      v64 = sub_1007B19AC();
      sub_1007B19CC();
      v66 = v65;
      if ((v67 & 1) != 0)
        v66 = 0.0;
      return fmax(v69 - MinY + 0.0 - (v70 + v51 - v52 + v56 + v57 - v58 + v62 - v63 - v64 - v66), 0.0);
    }
  }
  return v24;
}

double sub_1004BE66C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  double v24;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  double MinY;
  double v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t *v38;
  uint64_t v39;
  double v40;
  uint64_t *v41;
  uint64_t v42;
  double v43;
  uint64_t *v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  double v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  char v68;
  double v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  double v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  double v89;
  double v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  _BYTE v99[24];
  CGRect v100;
  CGRect v101;

  v5 = v4;
  v10 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v88 - v14;
  v17 = v5 + *(int *)(v16 + 28);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(v5, (uint64_t)v15, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v17 != 1)
  {
    v23 = (uint64_t)v15;
    goto LABEL_5;
  }
  v18 = &v15[v10[5]];
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_10008D47C(*(_QWORD *)v18, v20);
  sub_100109B54();
  v22 = v21;
  sub_1000B15F8(v19, v20);
  sub_100080C0C((uint64_t)v15, (uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
  if ((v22 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
    v23 = (uint64_t)v15;
LABEL_5:
    sub_1000215BC(v23, type metadata accessor for MoonDetailRootContentView);
    return 0.0;
  }
  v26 = &v12[v10[6]];
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_10008D47C(*(_QWORD *)v26, v28);
  sub_100109B54();
  v30 = v29;
  sub_1000B15F8(v27, v28);
  sub_1000215BC((uint64_t)v12, type metadata accessor for MoonDetailRootContentView);
  sub_1000215BC((uint64_t)v15, type metadata accessor for MoonDetailRootContentView);
  v24 = 0.0;
  if ((v30 & 1) == 0)
  {
    v100.origin.x = a1;
    v100.origin.y = a2;
    v100.size.width = a3;
    v100.size.height = a4;
    MinY = CGRectGetMinY(v100);
    swift_beginAccess(&unk_100C070A0, v99, 1, 0);
    v32 = sub_1007B190C();
    v33 = (uint64_t *)(v5 + v10[11]);
    v34 = *v33;
    v35 = v33[1];
    v96 = *v33;
    v97 = v35;
    v36 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v98, v36);
    v37 = v32 + v98;
    v38 = (uint64_t *)(v5 + v10[10]);
    v39 = v38[1];
    v95 = *v38;
    v96 = v95;
    v97 = v39;
    State.wrappedValue.getter(&v98, v36);
    v40 = v37 + v98;
    v41 = (uint64_t *)(v5 + v10[12]);
    v42 = v41[1];
    v94 = *v41;
    v96 = v94;
    v97 = v42;
    State.wrappedValue.getter(&v98, v36);
    v43 = v40 + v98;
    v44 = (uint64_t *)(v5 + v10[13]);
    v45 = v44[1];
    v93 = *v44;
    v96 = v93;
    v97 = v45;
    State.wrappedValue.getter(&v98, v36);
    if (MinY < v43 - v98)
    {
      v101.origin.x = a1;
      v101.origin.y = a2;
      v101.size.width = a3;
      v101.size.height = a4;
      v92 = CGRectGetMinY(v101);
      v46 = sub_1007B190C();
      v96 = v34;
      v97 = v35;
      State.wrappedValue.getter(&v98, v36);
      v47 = v46 + v98;
      v96 = v95;
      v48 = v95;
      v97 = v39;
      State.wrappedValue.getter(&v98, v36);
      v49 = v47 + v98;
      v96 = v94;
      v50 = v94;
      v97 = v42;
      State.wrappedValue.getter(&v98, v36);
      v51 = v49 + v98;
      v96 = v93;
      v52 = v93;
      v97 = v45;
      State.wrappedValue.getter(&v98, v36);
      v91 = v51 - v98;
      v96 = v48;
      v97 = v39;
      State.wrappedValue.getter(&v98, v36);
      v90 = v98;
      v96 = v50;
      v97 = v42;
      State.wrappedValue.getter(&v98, v36);
      v89 = v98;
      v96 = v52;
      v97 = v45;
      State.wrappedValue.getter(&v98, v36);
      v53 = v98;
      v54 = (uint64_t *)(v5 + v10[15]);
      v55 = *v54;
      v56 = v54[1];
      v96 = v55;
      v97 = v56;
      State.wrappedValue.getter(&v98, v36);
      v57 = v98;
      v58 = sub_1007B190C();
      v59 = sub_1007B1944();
      v60 = (uint64_t *)(v5 + v10[9]);
      v61 = *v60;
      v62 = v60[1];
      v96 = v61;
      v97 = v62;
      State.wrappedValue.getter(&v98, v36);
      v63 = v98;
      v64 = sub_1007B197C();
      v65 = sub_1007B19AC();
      sub_1007B19CC();
      v67 = v66;
      v24 = 0.0;
      if ((v68 & 1) != 0)
        v67 = 0.0;
      v69 = v90 + v89 - v53 + v57 + v58 - v59 + v63 - v64 - v65 - v67;
      v70 = v95;
      v96 = v95;
      v97 = v39;
      State.wrappedValue.getter(&v98, v36);
      v71 = v98;
      v72 = v94;
      v96 = v94;
      v97 = v42;
      State.wrappedValue.getter(&v98, v36);
      v73 = v71 + v98;
      v74 = v93;
      v96 = v93;
      v97 = v45;
      State.wrappedValue.getter(&v98, v36);
      v75 = v73 - v98;
      v76 = (uint64_t *)(v5 + v10[14]);
      v78 = v76[1];
      v96 = *v76;
      v77 = v96;
      v97 = v78;
      State.wrappedValue.getter(&v98, v36);
      v79 = v69 - (v75 + v98);
      v96 = v70;
      v97 = v39;
      State.wrappedValue.getter(&v98, v36);
      v80 = v98;
      v96 = v72;
      v97 = v42;
      State.wrappedValue.getter(&v98, v36);
      v81 = v80 + v98;
      v96 = v74;
      v97 = v45;
      State.wrappedValue.getter(&v98, v36);
      v82 = v81 - v98;
      v96 = v77;
      v97 = v78;
      State.wrappedValue.getter(&v98, v36);
      v83 = v79 * 0.33 + v82 + v98;
      v96 = v70;
      v97 = v39;
      State.wrappedValue.getter(&v98, v36);
      v84 = v98;
      v96 = v72;
      v97 = v42;
      State.wrappedValue.getter(&v98, v36);
      v85 = v98;
      v96 = v74;
      v97 = v45;
      State.wrappedValue.getter(&v98, v36);
      v86 = v98;
      v96 = v77;
      v97 = v78;
      State.wrappedValue.getter(&v98, v36);
      v87 = v91 - v92 + 0.0 - v83;
      if (v87 > 0.0)
        return fmin(v87 / (v79 * 0.67 + v84 + v85 - v86 + v98 - v83), 1.0);
    }
  }
  return v24;
}

void sub_1004BECD8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = sub_1000BA294(&qword_100BE7580);
  *(_QWORD *)(a1 + 80) = sub_1006796B0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_QWORD *)a1 = v2;
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  swift_beginAccess(&xmmword_100CAE588, v6, 0, 0);
  sub_100037768((uint64_t)&xmmword_100CAE588, (uint64_t)&v4, &qword_100BCED50);
  if (v5)
  {
    sub_10003C800(&v4, a1 + 24);
    *(_QWORD *)(a1 + 8) = sub_1004BEDC4;
    *(_QWORD *)(a1 + 16) = 0;
    v3 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    *(_QWORD *)(a1 + 64) = _swiftEmptyArrayStorage;
    *(_QWORD *)(a1 + 72) = v3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004BEDC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1000DB418(a1, a1[3]);
  return sub_10090ECA8(a2);
}

void sub_1004BEDF4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v17[24];
  _QWORD v18[5];

  v6 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100080C0C(a1, (uint64_t)v8, type metadata accessor for ConditionDetailPlatterViewModel);
  v9 = (_QWORD *)(a2 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 32));
  v10 = v9[3];
  v11 = v9[4];
  v12 = sub_1000DB418(v9, v10);
  v18[3] = v10;
  v18[4] = *(_QWORD *)(v11 + 8);
  v13 = sub_10005F164(v18);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v13, v12, v10);
  sub_100080C0C((uint64_t)v8, a3, type metadata accessor for ConditionDetailPlatterViewModel);
  v14 = (int *)sub_1000BA294(&qword_100BC68B0);
  sub_10003B59C((uint64_t)v18, a3 + v14[10]);
  *(_BYTE *)(a3 + v14[9]) = 0;
  v15 = (_QWORD *)(a3 + v14[11]);
  *v15 = 0;
  v15[1] = 0;
  v16 = v14[12];
  swift_beginAccess(&unk_100BE0830, v17, 1, 0);
  *(double *)(a3 + v16) = sub_10040908C();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v18);
  sub_1000215BC((uint64_t)v8, type metadata accessor for ConditionDetailPlatterViewModel);
}

void sub_1004BEF44(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)();
  uint64_t v37;
  __int16 v38;

  v35 = a2;
  v3 = type metadata accessor for MoonDetailRootContentView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_1000BA294(&qword_100BE74E0);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1000BA294(&qword_100BE74E8);
  __chkstk_darwin(v31);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000BA294(&qword_100BE74F0);
  __chkstk_darwin(v32);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  sub_100080C0C(a1, (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonDetailRootContentView);
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_100B77BA0, v17 + v5, v16 | 7);
  sub_10007802C((uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for MoonDetailRootContentView);
  v36 = sub_1004CDA6C;
  v37 = v18;
  v38 = 257;
  v19 = sub_1000BA294(&qword_100BE74F8);
  v20 = sub_1000BA294(&qword_100BCF180);
  v21 = sub_1002C4E14((uint64_t)&qword_100BE7500);
  sub_10007AB60((uint64_t)&qword_100BCF188);
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_1004BF374, 0, v19, v20, v21);
  v22 = swift_release();
  LOBYTE(v18) = static Edge.Set.trailing.getter(v22);
  v24 = v33;
  v23 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v10, v8, v34);
  v25 = &v10[*(int *)(v31 + 36)];
  *v25 = v18;
  *(_OWORD *)(v25 + 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  v25[40] = 1;
  v26 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v23);
  LOBYTE(v18) = static Edge.Set.top.getter(v26);
  sub_100037768((uint64_t)v10, (uint64_t)v12, &qword_100BE74E8);
  v27 = &v12[*(int *)(v32 + 36)];
  *v27 = v18;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  v27[40] = 1;
  sub_100021A14((uint64_t)v10, &qword_100BE74E8);
  sub_1000787D4((uint64_t)v12, (uint64_t)v15, &qword_100BE74F0);
  sub_100037768((uint64_t)v15, (uint64_t)v12, &qword_100BE74F0);
  v28 = v35;
  *v35 = 0;
  *((_BYTE *)v28 + 8) = 1;
  v29 = v28;
  v30 = sub_1000BA294(&qword_100BE7510);
  sub_100037768((uint64_t)v12, (uint64_t)v29 + *(int *)(v30 + 48), &qword_100BE74F0);
  sub_100021A14((uint64_t)v15, &qword_100BE74F0);
  sub_100021A14((uint64_t)v12, &qword_100BE74F0);
}

void sub_1004BF294()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v0 = type metadata accessor for PresentationMode(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BC6510);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007A5A6C(v4);
  Binding.wrappedValue.getter(v3);
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter(v2, v3);
  sub_100021A14((uint64_t)v6, &qword_100BC6510);
}

uint64_t sub_1004BF374()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0x65736F6C43, 0xE500000000000000);
  return Label<>.init(_:systemImage:)(v0);
}

double sub_1004BF3C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  swift_beginAccess(&unk_100C070A0, &v21, 33, 0);
  v14 = sub_1007B187C();
  v4 = sub_1007B1A38();
  swift_endAccess(&v21);
  static Alignment.center.getter(v5);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v4, 0);
  swift_beginAccess(&unk_100C070A0, &v21, 33, 0);
  swift_bridgeObjectRetain();
  v6 = sub_1007B187C();
  v7 = sub_1007B1A5C();
  swift_endAccess(&v21);
  static Alignment.center.getter(v8);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v7, 0);
  v9 = v21;
  v10 = v22;
  v11 = v23;
  v12 = v24;
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v17;
  *(_BYTE *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 56) = a1;
  *(_BYTE *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = v6;
  *(_QWORD *)(a2 + 80) = v9;
  *(_BYTE *)(a2 + 88) = v10;
  *(_QWORD *)(a2 + 96) = v11;
  *(_BYTE *)(a2 + 104) = v12;
  result = *(double *)&v25;
  *(_OWORD *)(a2 + 112) = v25;
  return result;
}

void sub_1004BF53C(uint64_t *a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];

  v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29[-1] - v8;
  v10 = *a1;
  v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(a2, (uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v12 != 1)
  {
    v18 = (uint64_t)v9;
    goto LABEL_5;
  }
  v13 = &v9[v4[5]];
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_10008D47C(*(_QWORD *)v13, v15);
  sub_100109B54();
  v17 = v16;
  sub_1000B15F8(v14, v15);
  sub_100080C0C((uint64_t)v9, (uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  if ((v17 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
    v18 = (uint64_t)v9;
LABEL_5:
    sub_1000215BC(v18, type metadata accessor for MoonDetailRootContentView);
    return;
  }
  v19 = &v6[v4[6]];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_10008D47C(*(_QWORD *)v19, v21);
  sub_100109B54();
  v23 = v22;
  sub_1000B15F8(v20, v21);
  sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  sub_1000215BC((uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((v23 & 1) == 0)
  {
    v24 = (uint64_t *)(a2 + v4[13]);
    v25 = *v24;
    v26 = v24[1];
    v29[0] = v10;
    v29[1] = v25;
    v29[2] = v26;
    v27 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.setter(v29, v27);
  }
}

void sub_1004BF728(uint64_t *a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];

  v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29[-1] - v8;
  v10 = *a1;
  v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(a2, (uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v12 != 1)
  {
    v18 = (uint64_t)v9;
    goto LABEL_5;
  }
  v13 = &v9[v4[5]];
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_10008D47C(*(_QWORD *)v13, v15);
  sub_100109B54();
  v17 = v16;
  sub_1000B15F8(v14, v15);
  sub_100080C0C((uint64_t)v9, (uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  if ((v17 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
    v18 = (uint64_t)v9;
LABEL_5:
    sub_1000215BC(v18, type metadata accessor for MoonDetailRootContentView);
    return;
  }
  v19 = &v6[v4[6]];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_10008D47C(*(_QWORD *)v19, v21);
  sub_100109B54();
  v23 = v22;
  sub_1000B15F8(v20, v21);
  sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  sub_1000215BC((uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((v23 & 1) == 0)
  {
    v24 = (uint64_t *)(a2 + v4[12]);
    v25 = *v24;
    v26 = v24[1];
    v29[0] = v10;
    v29[1] = v25;
    v29[2] = v26;
    v27 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.setter(v29, v27);
  }
}

void sub_1004BF914(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  double *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  double v43;
  double *v44;
  double v45;
  uint64_t v46;
  double *v47;
  double v48;
  uint64_t v49;
  double *v50;
  double v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  char v63;
  int *v64;
  double *v65;
  uint64_t v66;
  double v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  double v83;
  double v84;
  uint64_t v85;
  double v86;
  double v87;
  uint64_t v88;
  double v89;
  double v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  double v107;
  double v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;

  v103 = a2;
  v3 = type metadata accessor for MoonScrubberHeaderViewModel(0);
  __chkstk_darwin(v3);
  v104 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for MoonScrubberHeaderView(0);
  __chkstk_darwin(v99);
  v102 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v81 - v7);
  __chkstk_darwin(v9);
  v101 = (uint64_t)&v81 - v10;
  v85 = type metadata accessor for MoonDetailRootContentView(0);
  v11 = *(_QWORD *)(v85 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v85);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE76A8);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1000BA294(&qword_100BE76B0);
  __chkstk_darwin(v17);
  v100 = (uint64_t)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v81 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v81 - v23;
  v98 = (uint64_t)&v81 - v23;
  *v16 = static Alignment.center.getter(v25);
  v16[1] = v26;
  v27 = sub_1000BA294(&qword_100BE76B8);
  sub_1004C014C(a1, (uint64_t)v16 + *(int *)(v27 + 44));
  sub_100080C0C(a1, (uint64_t)v13, type metadata accessor for MoonDetailRootContentView);
  v28 = *(unsigned __int8 *)(v11 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_100B77E20, v29 + v12, v28 | 7);
  sub_10007802C((uint64_t)v13, v30 + v29, type metadata accessor for MoonDetailRootContentView);
  sub_100037768((uint64_t)v16, (uint64_t)v21, &qword_100BE76A8);
  v31 = &v21[*(int *)(v17 + 36)];
  *(_QWORD *)v31 = sub_1004BF538;
  *((_QWORD *)v31 + 1) = 0;
  *((_QWORD *)v31 + 2) = sub_1004CE1B8;
  *((_QWORD *)v31 + 3) = v30;
  sub_100021A14((uint64_t)v16, &qword_100BE76A8);
  sub_1000787D4((uint64_t)v21, (uint64_t)v24, &qword_100BE76B0);
  v32 = (int *)v85;
  v33 = (double *)(a1 + *(int *)(v85 + 56));
  v34 = *v33;
  v35 = *((_QWORD *)v33 + 1);
  v108 = v34;
  v109 = v35;
  v36 = sub_1000BA294(&qword_100BC40A8);
  State.projectedValue.getter(v36);
  v96 = *((_QWORD *)&v110 + 1);
  v97 = v110;
  v95 = v111;
  v37 = (double *)(a1 + v32[15]);
  v39 = *((_QWORD *)v37 + 1);
  v108 = *v37;
  v38 = v108;
  v109 = v39;
  State.projectedValue.getter(v36);
  v92 = *((_QWORD *)&v110 + 1);
  v93 = v110;
  v94 = v111;
  sub_10003B59C(a1 + v32[8], (uint64_t)&v110);
  v40 = a1 + v32[7];
  v41 = type metadata accessor for MoonDetailViewModel.Model(0);
  sub_100080C0C(v40 + *(int *)(v41 + 32), v104, type metadata accessor for MoonScrubberHeaderViewModel);
  v91 = sub_1004BA4B8();
  v42 = (double *)(a1 + v32[9]);
  v43 = *v42;
  v88 = *((_QWORD *)v42 + 1);
  v108 = v43;
  v109 = v88;
  State.wrappedValue.getter(&v105, v36);
  v90 = v105;
  swift_beginAccess(&unk_100C070A0, &v108, 1, 0);
  v89 = sub_1007B190C();
  v44 = (double *)(a1 + v32[10]);
  v46 = *((_QWORD *)v44 + 1);
  v105 = *v44;
  v45 = v105;
  v106 = v46;
  State.wrappedValue.getter(&v107, v36);
  v87 = v107;
  v47 = (double *)(a1 + v32[12]);
  v49 = *((_QWORD *)v47 + 1);
  v105 = *v47;
  v48 = v105;
  v106 = v49;
  State.wrappedValue.getter(&v107, v36);
  v86 = v107;
  v50 = (double *)(a1 + v32[13]);
  v52 = *((_QWORD *)v50 + 1);
  v105 = *v50;
  v51 = v105;
  v106 = v52;
  State.wrappedValue.getter(&v107, v36);
  v84 = v107;
  v105 = v38;
  v106 = v39;
  State.wrappedValue.getter(&v107, v36);
  v83 = v107;
  v105 = v45;
  v106 = v46;
  State.wrappedValue.getter(&v107, v36);
  v82 = v107;
  v105 = v48;
  v106 = v49;
  State.wrappedValue.getter(&v107, v36);
  v53 = v107;
  v105 = v51;
  v106 = v52;
  State.wrappedValue.getter(&v107, v36);
  v54 = v107;
  v105 = v38;
  v106 = v39;
  State.wrappedValue.getter(&v107, v36);
  v55 = v107;
  v56 = sub_1007B190C();
  v57 = sub_1007B1944();
  v105 = v43;
  v106 = v88;
  State.wrappedValue.getter(&v107, v36);
  v58 = v107;
  v59 = sub_1007B197C();
  v60 = sub_1007B19AC();
  sub_1007B19CC();
  v62 = v61;
  if ((v63 & 1) != 0)
    v62 = 0.0;
  v90 = v90 + v89;
  v89 = v87 + v86 - v84 + v83;
  v64 = (int *)v99;
  v65 = (double *)(a1 + v32[16]);
  v66 = *((_QWORD *)v65 + 1);
  v67 = v82 + v53 - v54 + v55 + v56 - v57 + v58 - v59 - v60 - v62;
  v68 = (char *)v8 + *(int *)(v99 + 48);
  v105 = *v65;
  v106 = v66;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(&v105);
  v69 = enum case for CoordinateSpace.named(_:);
  v70 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v68, v69, v70);
  v71 = v96;
  *v8 = v97;
  v8[1] = v71;
  v8[2] = v95;
  v72 = v92;
  v8[3] = v93;
  v8[4] = v72;
  v8[5] = v94;
  sub_10003C800(&v110, (uint64_t)(v8 + 6));
  sub_10007802C(v104, (uint64_t)v8 + v64[7], type metadata accessor for MoonScrubberHeaderViewModel);
  *((_BYTE *)v8 + v64[8]) = v91 & 1;
  *(double *)((char *)v8 + v64[9]) = v90;
  *(double *)((char *)v8 + v64[10]) = v89;
  *(double *)((char *)v8 + v64[11]) = v67;
  v73 = (double *)((char *)v8 + v64[13]);
  v107 = 0.0;
  State.init(wrappedValue:)(&v107, &type metadata for CGFloat);
  v74 = v106;
  *v73 = v105;
  *((_QWORD *)v73 + 1) = v74;
  v75 = v101;
  sub_10007802C((uint64_t)v8, v101, type metadata accessor for MoonScrubberHeaderView);
  v76 = v98;
  v77 = v100;
  sub_100037768(v98, v100, &qword_100BE76B0);
  v78 = v102;
  sub_100080C0C(v75, v102, type metadata accessor for MoonScrubberHeaderView);
  v79 = v103;
  sub_100037768(v77, v103, &qword_100BE76B0);
  v80 = sub_1000BA294(&qword_100BE76C0);
  sub_100080C0C(v78, v79 + *(int *)(v80 + 48), type metadata accessor for MoonScrubberHeaderView);
  sub_1000215BC(v75, type metadata accessor for MoonScrubberHeaderView);
  sub_100021A14(v76, &qword_100BE76B0);
  sub_1000215BC(v78, type metadata accessor for MoonScrubberHeaderView);
  sub_100021A14(v77, &qword_100BE76B0);
}

void sub_1004C014C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];

  v4 = sub_1000BA294(&qword_100BE76C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v35[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35[-1] - v8;
  v10 = type metadata accessor for MoonDetailRootContentView(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v35[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE76D0);
  __chkstk_darwin(v14);
  v16 = (char *)&v35[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v35[-1] - v18;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, v35, 33, 0);
    v20 = sub_1007B187C();
    swift_endAccess(v35);
    v34 = v20;
    sub_100080C0C(a1, (uint64_t)&v35[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonDetailRootContentView);
    v21 = *(unsigned __int8 *)(v11 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = swift_allocObject(&unk_100B77E48, v22 + v12, v21 | 7);
    sub_10007802C((uint64_t)v13, v23 + v22, type metadata accessor for MoonDetailRootContentView);
    v24 = sub_1000BA294(&qword_100BD62F8);
    v25 = type metadata accessor for EmptyVisualEffect(255);
    sub_10007A100((uint64_t)&qword_100BD6300);
    v35[0] = v25;
    v35[1] = v26;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v35, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
    View.visualEffect<A>(_:)(sub_1004CE1C8, v23, &type metadata for Color, v24, &protocol witness table for Color, OpaqueTypeConformance2);
    swift_release();
    swift_release();
    v28 = sub_1000BA294(&qword_100BE76D8);
    v29 = (uint64_t)v19;
    v30 = 0;
  }
  else
  {
    v28 = sub_1000BA294(&qword_100BE76D8);
    v29 = (uint64_t)v19;
    v30 = 1;
  }
  v31 = _s7Weather24LocationCompositionStateOwst_0(v29, v30, 1, v28);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v31);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v32 = sub_1000BA294(&qword_100BE76E0);
  sub_1004C08D8(a1, &v9[*(int *)(v32 + 44)]);
  sub_100037768((uint64_t)v19, (uint64_t)v16, &qword_100BE76D0);
  sub_100037768((uint64_t)v9, (uint64_t)v6, &qword_100BE76C8);
  sub_100037768((uint64_t)v16, a2, &qword_100BE76D0);
  v33 = sub_1000BA294(&qword_100BE76E8);
  sub_100037768((uint64_t)v6, a2 + *(int *)(v33 + 48), &qword_100BE76C8);
  sub_100021A14((uint64_t)v9, &qword_100BE76C8);
  sub_100021A14((uint64_t)v19, &qword_100BE76D0);
  sub_100021A14((uint64_t)v6, &qword_100BE76C8);
  sub_100021A14((uint64_t)v16, &qword_100BE76D0);
}

uint64_t sub_1004C047C(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(double, double, double, double))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v6 = sub_1000C537C();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = (_QWORD *)(a3 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 64));
  v12 = v11[1];
  v24[0] = *v11;
  v24[1] = v12;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10, enum case for CoordinateSpace.named(_:), v6);
  v13 = GeometryProxy.frame(in:)(v10);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  v20 = a4(v13, v15, v17, v19);
  v21 = type metadata accessor for EmptyVisualEffect(0);
  sub_10007A100((uint64_t)&qword_100BD6300);
  return VisualEffect.offset(x:y:)(v21, v22, 0.0, v20);
}

double sub_1004C05E0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8;
  double v9;
  double MinY;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  char v24;
  double v25;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  _BYTE v32[24];
  CGRect v33;
  CGRect v34;

  swift_beginAccess(&unk_100C070A0, v32, 1, 0);
  v8 = sub_1007B190C();
  v9 = 0.0;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    v33.origin.x = a1;
    v33.origin.y = a2;
    v33.size.width = a3;
    v33.size.height = a4;
    if (CGRectGetMinY(v33) < v8)
    {
      v34.origin.x = a1;
      v34.origin.y = a2;
      v34.size.width = a3;
      v34.size.height = a4;
      MinY = CGRectGetMinY(v34);
      type metadata accessor for MoonDetailRootContentView(0);
      v11 = sub_1000BA294(&qword_100BC40A8);
      State.wrappedValue.getter(&v31, v11);
      v12 = v31;
      State.wrappedValue.getter(&v31, v11);
      v13 = v12 + v31;
      State.wrappedValue.getter(&v31, v11);
      v14 = v13 - v31;
      State.wrappedValue.getter(&v31, v11);
      v15 = v14 + v31;
      v9 = v8 - MinY + 0.0;
      v30 = v9 - (v14 + v31);
      State.wrappedValue.getter(&v31, v11);
      v29 = v31;
      State.wrappedValue.getter(&v31, v11);
      v28 = v31;
      State.wrappedValue.getter(&v31, v11);
      v27 = v31;
      State.wrappedValue.getter(&v31, v11);
      v16 = v31;
      v17 = sub_1007B190C();
      v18 = sub_1007B1944();
      State.wrappedValue.getter(&v31, v11);
      v19 = v31;
      v20 = sub_1007B197C();
      v21 = sub_1007B19AC();
      sub_1007B19CC();
      v23 = v22;
      if ((v24 & 1) != 0)
        v23 = 0.0;
      if (v30 >= 0.0)
      {
        v25 = v9 - (v29 + v28 - v27 + v16 + v17 - v18 + v19 - v20 - v21 - v23);
        if (v25 <= 0.0)
          return v15;
        else
          return v15 + v25;
      }
    }
  }
  return v9;
}

void sub_1004C08D8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  char v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double *v26;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double *v56;
  double v57;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  double v73;
  char v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  double v101;
  uint64_t v102;
  double v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;
  unsigned __int8 v107;
  uint64_t v108;
  unsigned __int8 v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;

  v96 = a2;
  v3 = sub_1000BA294(&qword_100BC3800);
  __chkstk_darwin(v3);
  v94 = (uint64_t *)((char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = type metadata accessor for CoordinateSpace(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MoonViewModel(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v10);
  v95 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v99 = (uint64_t)&v86 - v13;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, v105, 1, 0);
    v14 = 0;
    v16 = sub_1007B19F4();
  }
  else
  {
    swift_beginAccess(&unk_100C070A0, v105, 1, 0);
    sub_1007B19CC();
    v16 = v15;
    v14 = v17 & 1;
  }
  static Alignment.center.getter(*(_QWORD *)&v15);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v16, v14);
  v93 = v106;
  v92 = v107;
  v91 = v108;
  v90 = v109;
  v89 = v110;
  v88 = v111;
  v18 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  v19 = a1 + v18[7];
  v20 = type metadata accessor for MoonDetailViewModel.Model(0);
  sub_100080C0C(v19 + *(int *)(v20 + 28), (uint64_t)v9, type metadata accessor for MoonViewModel);
  sub_10003B59C(a1 + v18[8], (uint64_t)&v112);
  v21 = (double *)(a1 + v18[10]);
  v22 = *v21;
  v87 = v9;
  v23 = *((_QWORD *)v21 + 1);
  v103 = v22;
  v104 = v23;
  v24 = sub_1000BA294(&qword_100BC40A8);
  State.wrappedValue.getter(&v101, v24);
  v25 = v101;
  v26 = (double *)(a1 + v18[12]);
  v28 = *((_QWORD *)v26 + 1);
  v103 = *v26;
  v27 = v103;
  v104 = v28;
  State.wrappedValue.getter(&v101, v24);
  v29 = v25 + v101;
  swift_beginAccess(&unk_100C070A0, &v103, 1, 0);
  v30 = sub_1007B190C();
  v31 = v30 + sub_1007B19F4();
  v32 = a1 + v18[16];
  v33 = *(_QWORD *)(v32 + 8);
  v101 = *(double *)v32;
  v102 = v33;
  swift_bridgeObjectRetain();
  v86 = v6;
  AnyHashable.init<A>(_:)(&v101);
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v6, enum case for CoordinateSpace.named(_:), v98);
  v101 = v22;
  v102 = v23;
  State.wrappedValue.getter(&v100, v24);
  v34 = v100;
  v101 = v27;
  v102 = v28;
  State.wrappedValue.getter(&v100, v24);
  v35 = v34 + v100;
  v36 = a1 + v18[13];
  v38 = *(_QWORD *)(v36 + 8);
  v101 = *(double *)v36;
  v37 = v101;
  v102 = v38;
  State.wrappedValue.getter(&v100, v24);
  v39 = v35 - v100;
  v40 = a1 + v18[15];
  v42 = *(_QWORD *)(v40 + 8);
  v101 = *(double *)v40;
  v41 = v101;
  v102 = v42;
  State.wrappedValue.getter(&v100, v24);
  v43 = v39 + v100;
  v101 = v22;
  v102 = v23;
  State.wrappedValue.getter(&v100, v24);
  v44 = v100;
  v101 = v27;
  v102 = v28;
  State.wrappedValue.getter(&v100, v24);
  v45 = v44 + v100;
  v101 = v37;
  v102 = v38;
  State.wrappedValue.getter(&v100, v24);
  v46 = v45 - v100;
  v101 = v41;
  v102 = v42;
  State.wrappedValue.getter(&v100, v24);
  v47 = v46 + v100;
  v48 = v47 + sub_1007B190C();
  v49 = v48 - sub_1007B1944();
  v101 = v22;
  v102 = v23;
  State.wrappedValue.getter(&v100, v24);
  v50 = v100;
  v101 = v27;
  v102 = v28;
  State.wrappedValue.getter(&v100, v24);
  v51 = v50 + v100;
  v101 = v37;
  v102 = v38;
  State.wrappedValue.getter(&v100, v24);
  v52 = v51 - v100;
  v101 = v41;
  v102 = v42;
  State.wrappedValue.getter(&v100, v24);
  v53 = v52 + v100;
  v54 = v53 + sub_1007B190C();
  v55 = v54 - sub_1007B1944();
  v56 = (double *)(a1 + v18[9]);
  v57 = *v56;
  v58 = *((_QWORD *)v56 + 1);
  v101 = v57;
  v102 = v58;
  State.wrappedValue.getter(&v100, v24);
  v59 = v55 + v100;
  v60 = v59 - sub_1007B197C();
  KeyPath = swift_getKeyPath(&unk_1009A5DC8);
  v62 = (uint64_t)v94;
  *v94 = KeyPath;
  v63 = sub_1000BA294(&qword_100BC2908);
  swift_storeEnumTagMultiPayload(v62, v63, 0);
  v64 = swift_getKeyPath(&unk_1009A5C08);
  v65 = swift_getKeyPath(&unk_1009A5C38);
  v66 = v99;
  sub_1000787D4(v62, v99, &qword_100BC3800);
  v67 = v66 + v10[5];
  *(_QWORD *)v67 = v64;
  *(_BYTE *)(v67 + 8) = 0;
  v68 = v66 + v10[6];
  *(_QWORD *)v68 = v65;
  *(_BYTE *)(v68 + 8) = 0;
  v69 = v66 + v10[7];
  LOBYTE(v100) = 0;
  State.init(wrappedValue:)(&v100, &type metadata for Bool);
  v70 = v102;
  *(_BYTE *)v69 = LOBYTE(v101);
  *(_QWORD *)(v69 + 8) = v70;
  sub_10007802C((uint64_t)v87, v66 + v10[8], type metadata accessor for MoonViewModel);
  sub_10003C800(&v112, v66 + v10[9]);
  *(double *)(v66 + v10[10]) = v29;
  *(double *)(v66 + v10[11]) = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v66 + v10[12], v86, v98);
  *(double *)(v66 + v10[13]) = v43;
  *(double *)(v66 + v10[14]) = v49;
  *(double *)(v66 + v10[15]) = v60;
  *(_QWORD *)(v66 + v10[16]) = 0;
  if ((sub_1004BA4B8() & 1) != 0)
  {
    v71 = 0;
    v73 = sub_1007B1A9C();
  }
  else
  {
    sub_1007B1AC0();
    v73 = v72;
    v71 = v74 & 1;
  }
  static Alignment.center.getter(*(_QWORD *)&v72);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v73, v71);
  v98 = v112;
  v75 = BYTE8(v112);
  v76 = v113;
  v77 = v114;
  v78 = v115;
  v79 = v116;
  v80 = v99;
  v81 = v95;
  sub_100080C0C(v99, v95, type metadata accessor for MoonContainerView);
  v82 = v96;
  *v96 = 0;
  *((_BYTE *)v82 + 8) = 1;
  v82[2] = v93;
  *((_BYTE *)v82 + 24) = v92;
  v82[4] = v91;
  *((_BYTE *)v82 + 40) = v90;
  v83 = v88;
  v82[6] = v89;
  v82[7] = v83;
  v84 = sub_1000BA294(&qword_100BE76F0);
  sub_100080C0C(v81, (uint64_t)v82 + *(int *)(v84 + 48), type metadata accessor for MoonContainerView);
  v85 = (char *)v82 + *(int *)(v84 + 64);
  *(_QWORD *)v85 = 0;
  v85[8] = 1;
  *((_QWORD *)v85 + 2) = v98;
  v85[24] = v75;
  *((_QWORD *)v85 + 4) = v76;
  v85[40] = v77;
  *((_QWORD *)v85 + 6) = v78;
  *((_QWORD *)v85 + 7) = v79;
  sub_1000215BC(v80, type metadata accessor for MoonContainerView);
  sub_1000215BC(v81, type metadata accessor for MoonContainerView);
}

void sub_1004C11A8(uint64_t *a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];

  v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29[-1] - v8;
  v10 = *a1;
  v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(a2, (uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v12 != 1)
  {
    v18 = (uint64_t)v9;
    goto LABEL_5;
  }
  v13 = &v9[v4[5]];
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_10008D47C(*(_QWORD *)v13, v15);
  sub_100109B54();
  v17 = v16;
  sub_1000B15F8(v14, v15);
  sub_100080C0C((uint64_t)v9, (uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  if ((v17 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
    v18 = (uint64_t)v9;
LABEL_5:
    sub_1000215BC(v18, type metadata accessor for MoonDetailRootContentView);
    return;
  }
  v19 = &v6[v4[6]];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_10008D47C(*(_QWORD *)v19, v21);
  sub_100109B54();
  v23 = v22;
  sub_1000B15F8(v20, v21);
  sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  sub_1000215BC((uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((v23 & 1) == 0)
  {
    v24 = (uint64_t *)(a2 + v4[9]);
    v25 = *v24;
    v26 = v24[1];
    v29[0] = v10;
    v29[1] = v25;
    v29[2] = v26;
    v27 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.setter(v29, v27);
  }
}

void sub_1004C1394(uint64_t *a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];

  v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29[-1] - v8;
  v10 = *a1;
  v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100080C0C(a2, (uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((_DWORD)v12 != 1)
  {
    v18 = (uint64_t)v9;
    goto LABEL_5;
  }
  v13 = &v9[v4[5]];
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_10008D47C(*(_QWORD *)v13, v15);
  sub_100109B54();
  v17 = v16;
  sub_1000B15F8(v14, v15);
  sub_100080C0C((uint64_t)v9, (uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  if ((v17 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
    v18 = (uint64_t)v9;
LABEL_5:
    sub_1000215BC(v18, type metadata accessor for MoonDetailRootContentView);
    return;
  }
  v19 = &v6[v4[6]];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_10008D47C(*(_QWORD *)v19, v21);
  sub_100109B54();
  v23 = v22;
  sub_1000B15F8(v20, v21);
  sub_1000215BC((uint64_t)v6, type metadata accessor for MoonDetailRootContentView);
  sub_1000215BC((uint64_t)v9, type metadata accessor for MoonDetailRootContentView);
  if ((v23 & 1) == 0)
  {
    v24 = (uint64_t *)(a2 + v4[11]);
    v25 = *v24;
    v26 = v24[1];
    v29[0] = v10;
    v29[1] = v25;
    v29[2] = v26;
    v27 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.setter(v29, v27);
  }
}

uint64_t sub_1004C1580@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v2 = type metadata accessor for LocalCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100098728();
  v6 = v5 - v4;
  static CoordinateSpaceProtocol<>.local.getter(v7);
  v8 = GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for LocalCoordinateSpace);
  v10 = v9;
  result = (*(uint64_t (**)(uint64_t, uint64_t, double))(v3 + 8))(v6, v2, v8);
  *a1 = v10;
  return result;
}

uint64_t sub_1004C1620(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  v2 = *a1;
  v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v8[0] = v2;
  v8[1] = v4;
  v8[2] = v5;
  v6 = sub_1000BA294(&qword_100BC40A8);
  return State.wrappedValue.setter(v8, v6);
}

uint64_t sub_1004C1690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - v6;
  v9 = v1 + *(int *)(v8 + 32);
  LODWORD(v9) = *(unsigned __int8 *)(v9 + *(int *)(type metadata accessor for MoonViewModel(0) + 32));
  sub_100080C0C(v1, (uint64_t)v7, type metadata accessor for MoonContainerView);
  if ((_DWORD)v9 == 1)
  {
    v10 = &v7[*(int *)(v2 + 20)];
    v11 = *(_QWORD *)v10;
    v12 = v10[8];
    sub_10008D47C(*(_QWORD *)v10, v12);
    sub_100109B54();
    v14 = v13;
    sub_1000B15F8(v11, v12);
    sub_100080C0C((uint64_t)v7, (uint64_t)v4, type metadata accessor for MoonContainerView);
    if ((v14 & 1) != 0)
    {
      v15 = 0;
    }
    else
    {
      v16 = &v4[*(int *)(v2 + 24)];
      v17 = *(_QWORD *)v16;
      v18 = v16[8];
      sub_10008D47C(*(_QWORD *)v16, v18);
      sub_100109B54();
      v20 = v19;
      sub_1000B15F8(v17, v18);
      v15 = v20 ^ 1;
    }
    sub_1000215BC((uint64_t)v4, type metadata accessor for MoonContainerView);
  }
  else
  {
    v15 = 0;
  }
  sub_1000215BC((uint64_t)v7, type metadata accessor for MoonContainerView);
  return v15 & 1;
}

void sub_1004C180C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.center.getter(a1);
  a2[1] = v4;
  v5 = sub_1000BA294(&qword_100BE77D0);
  sub_1004C184C(v2, (uint64_t)a2 + *(int *)(v5 + 44));
}

void sub_1004C184C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for MoonContainerView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_1000BA294(&qword_100BE77D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v13);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v14 = sub_1000BA294(&qword_100BE77E0);
  v15 = sub_1004C1A18(a1, &v12[*(int *)(v14 + 44)]);
  v16 = static VerticalAlignment.center.getter(v15);
  sub_100080C0C(a1, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MoonContainerView);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_100B77EC0, v18 + v6, v17 | 7);
  sub_10007802C((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for MoonContainerView);
  sub_100037768((uint64_t)v12, (uint64_t)v9, &qword_100BE77D8);
  sub_100037768((uint64_t)v9, a2, &qword_100BE77D8);
  v20 = a2 + *(int *)(sub_1000BA294(&qword_100BE77E8) + 48);
  *(_QWORD *)v20 = v16;
  *(_QWORD *)(v20 + 8) = 0;
  *(_BYTE *)(v20 + 16) = 1;
  *(_QWORD *)(v20 + 24) = 0;
  *(_BYTE *)(v20 + 32) = 1;
  *(_QWORD *)(v20 + 40) = sub_1004CF5FC;
  *(_QWORD *)(v20 + 48) = v19;
  swift_retain();
  sub_100021A14((uint64_t)v12, &qword_100BE77D8);
  swift_release();
  sub_100021A14((uint64_t)v9, &qword_100BE77D8);
}

uint64_t sub_1004C1A18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t OpaqueTypeConformance2;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[24];
  _BYTE v88[24];
  __int128 v89;
  __int128 v90;
  __int128 v91;

  v84 = a2;
  v3 = type metadata accessor for MoonContainerView(0);
  v75 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v76 = v5;
  v78 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MoonView.RenderBehavior(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for MoonView(0, v12);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1000BA294(&qword_100BE77F0);
  __chkstk_darwin(v71);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1000BA294(&qword_100BE77F8);
  __chkstk_darwin(v79);
  v80 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1000BA294(&qword_100BE7800);
  v83 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v82 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v74 = (char *)&v70 - v22;
  v24 = __chkstk_darwin(v23);
  v81 = (char *)&v70 - v25;
  v26 = a1 + *(int *)(v3 + 32);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, v26, v10, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for MoonView.RenderBehavior.pauseAnimationWhenIdle(_:), v6);
  v27 = v14;
  v28 = a1;
  MoonView.init(date:renderBehavior:forceUpdateFlag:)(v27, v9, 0);
  if ((sub_1004C1690() & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, v88, 1, 0);
    v29 = sub_1007B1B84();
  }
  else
  {
    swift_beginAccess(&unk_100C070A0, v88, 1, 0);
    v29 = sub_1007B1BAC();
  }
  v30 = v29;
  if ((sub_1004C1690() & 1) != 0)
  {
    swift_beginAccess(&unk_100C070A0, v87, 1, 0);
    v32 = sub_1007B1B84();
  }
  else
  {
    swift_beginAccess(&unk_100C070A0, v87, 1, 0);
    v32 = sub_1007B1BAC();
  }
  v33 = v32;
  static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(*(_QWORD *)&v30, 0, *(_QWORD *)&v33, 0);
  v34 = v72;
  v35 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v18, v16, v73);
  v36 = &v18[*(int *)(v71 + 36)];
  v37 = v90;
  *(_OWORD *)v36 = v89;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v91;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
  v38 = type metadata accessor for MoonViewModel(0);
  v39 = *(double *)(v26 + *(int *)(v38 + 20)) * 0.0174532925;
  v40 = static UnitPoint.center.getter(v38);
  v42 = v41;
  v43 = v80;
  sub_100037768((uint64_t)v18, v80, &qword_100BE77F0);
  v44 = v79;
  v45 = v43 + *(int *)(v79 + 36);
  *(double *)v45 = v39;
  *(double *)(v45 + 8) = v40;
  *(_QWORD *)(v45 + 16) = v42;
  sub_100021A14((uint64_t)v18, &qword_100BE77F0);
  v46 = v28;
  v47 = v78;
  sub_100080C0C(v46, v78, type metadata accessor for MoonContainerView);
  v48 = *(unsigned __int8 *)(v75 + 80);
  v49 = (v48 + 16) & ~v48;
  v50 = swift_allocObject(&unk_100B77EE8, v49 + v76, v48 | 7);
  sub_10007802C(v47, v50 + v49, type metadata accessor for MoonContainerView);
  v51 = sub_1000BA294(&qword_100BE7808);
  v52 = sub_1002C4E14((uint64_t)&unk_100BE7810);
  v53 = sub_100075EB0(&qword_100BE7828);
  v54 = type metadata accessor for EmptyVisualEffect(255);
  sub_10007A100((uint64_t)&qword_100BD6300);
  v85 = v54;
  v86 = v55;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v85, &opaque type descriptor for <<opaque return type of VisualEffect.scaleEffect(x:y:anchor:)>>, 1);
  v85 = v53;
  v86 = OpaqueTypeConformance2;
  v57 = swift_getOpaqueTypeConformance2(&v85, &opaque type descriptor for <<opaque return type of VisualEffect.offset(x:y:)>>, 1);
  v58 = v74;
  View.visualEffect<A>(_:)(sub_1004CF780, v50, v44, v51, v52, v57);
  swift_release();
  sub_100021A14(v43, &qword_100BE77F8);
  v59 = v83;
  v60 = v81;
  v61 = v58;
  v62 = v77;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v81, v61, v77);
  v63 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v64 = v82;
  v63(v82, v60, v62);
  v65 = v84;
  *v84 = 0;
  *((_BYTE *)v65 + 8) = 1;
  v66 = sub_1000BA294(&qword_100BE7830);
  v63((char *)v65 + *(int *)(v66 + 48), v64, v62);
  v67 = (char *)v65 + *(int *)(v66 + 64);
  *(_QWORD *)v67 = 0;
  v67[8] = 1;
  v68 = *(void (**)(char *, uint64_t))(v59 + 8);
  v68(v60, v62);
  return ((uint64_t (*)(char *, uint64_t))v68)(v64, v62);
}

uint64_t sub_1004C2044@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  __n128 v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  double v29;
  uint64_t OpaqueTypeConformance2;
  _QWORD v32[2];
  _QWORD v33[2];

  v32[1] = a2;
  v3 = sub_1000BA294(&qword_100BE7828);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for MoonContainerView(0) + 48);
  v8 = GeometryProxy.frame(in:)(v7);
  v12 = sub_1004C21D8(v8, v9, v10, v11);
  v13 = GeometryProxy.frame(in:)(v7);
  v17.n128_f64[0] = sub_1004C21D8(v13, v14, v15, v16);
  v18 = v17.n128_f64[0];
  v19 = static UnitPoint.top.getter(v17);
  v21 = v20;
  v22 = type metadata accessor for EmptyVisualEffect(0);
  sub_10007A100((uint64_t)&qword_100BD6300);
  v24 = v23;
  VisualEffect.scaleEffect(x:y:anchor:)(v22, v23, v12, v18, v19, v21);
  v25 = GeometryProxy.frame(in:)(v7);
  v29 = sub_1004C2490(v25, v26, v27, v28);
  v33[0] = v22;
  v33[1] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v33, &opaque type descriptor for <<opaque return type of VisualEffect.scaleEffect(x:y:anchor:)>>, 1);
  VisualEffect.offset(x:y:)(v3, OpaqueTypeConformance2, 0.0, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

double sub_1004C21D8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  double v24;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  CGFloat MinY;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  _BYTE v43[24];
  CGRect v44;
  CGRect v45;

  v5 = v4;
  v10 = (int *)type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v10);
  v12 = &v43[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v15 = &v43[-v14 - 8];
  v17 = v5 + *(int *)(v16 + 32);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonViewModel(0) + 32));
  sub_100080C0C(v5, (uint64_t)v15, type metadata accessor for MoonContainerView);
  if ((_DWORD)v17 != 1)
  {
    v23 = (uint64_t)v15;
    goto LABEL_5;
  }
  v18 = &v15[v10[5]];
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_10008D47C(*(_QWORD *)v18, v20);
  sub_100109B54();
  v22 = v21;
  sub_1000B15F8(v19, v20);
  sub_100080C0C((uint64_t)v15, (uint64_t)v12, type metadata accessor for MoonContainerView);
  if ((v22 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v12, type metadata accessor for MoonContainerView);
    v23 = (uint64_t)v15;
LABEL_5:
    sub_1000215BC(v23, type metadata accessor for MoonContainerView);
    return 1.0;
  }
  v26 = &v12[v10[6]];
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_10008D47C(*(_QWORD *)v26, v28);
  sub_100109B54();
  v30 = v29;
  sub_1000B15F8(v27, v28);
  sub_1000215BC((uint64_t)v12, type metadata accessor for MoonContainerView);
  sub_1000215BC((uint64_t)v15, type metadata accessor for MoonContainerView);
  v24 = 1.0;
  if ((v30 & 1) == 0)
  {
    v44.origin.x = a1;
    v44.origin.y = a2;
    v44.size.width = a3;
    v44.size.height = a4;
    MinY = CGRectGetMinY(v44);
    v32 = *(double *)(v5 + v10[11]);
    if (MinY < v32)
    {
      v45.origin.x = a1;
      v45.origin.y = a2;
      v45.size.width = a3;
      v45.size.height = a4;
      v33 = CGRectGetMinY(v45);
      swift_beginAccess(&unk_100C070A0, v43, 1, 0);
      v34 = sub_1007B197C();
      v35 = *(double *)(v5 + v10[13]);
      v36 = v32 - v33 + 0.0 - v35;
      if (v36 >= 0.0)
      {
        v37 = *(double *)(v5 + v10[15]) - v35;
        if ((sub_1004C1690() & 1) != 0)
          v38 = sub_1007B1B84();
        else
          v38 = sub_1007B1BAC();
        v39 = fabs(v36 / v37);
        v40 = 1.0 - v34 / v38;
        if (v39 > 1.0)
          v39 = 1.0;
        v41 = 0.0;
        if (v36 / v37 != 0.0)
          v41 = v39;
        return 1.0 - v41 * v40;
      }
    }
  }
  return v24;
}

double sub_1004C2490(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  double v23;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  CGFloat MinY;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  CGRect v35;
  CGRect v36;

  v9 = (int *)type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - v13;
  v16 = v4 + *(int *)(v15 + 32);
  LODWORD(v16) = *(unsigned __int8 *)(v16 + *(int *)(type metadata accessor for MoonViewModel(0) + 32));
  sub_100080C0C(v4, (uint64_t)v14, type metadata accessor for MoonContainerView);
  if ((_DWORD)v16 != 1)
  {
    v22 = (uint64_t)v14;
    goto LABEL_5;
  }
  v17 = &v14[v9[5]];
  v18 = *(_QWORD *)v17;
  v19 = v17[8];
  sub_10008D47C(*(_QWORD *)v17, v19);
  sub_100109B54();
  v21 = v20;
  sub_1000B15F8(v18, v19);
  sub_100080C0C((uint64_t)v14, (uint64_t)v11, type metadata accessor for MoonContainerView);
  if ((v21 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v11, type metadata accessor for MoonContainerView);
    v22 = (uint64_t)v14;
LABEL_5:
    sub_1000215BC(v22, type metadata accessor for MoonContainerView);
    return 0.0;
  }
  v25 = &v11[v9[6]];
  v26 = *(_QWORD *)v25;
  v27 = v25[8];
  sub_10008D47C(*(_QWORD *)v25, v27);
  sub_100109B54();
  v29 = v28;
  sub_1000B15F8(v26, v27);
  sub_1000215BC((uint64_t)v11, type metadata accessor for MoonContainerView);
  sub_1000215BC((uint64_t)v14, type metadata accessor for MoonContainerView);
  v23 = 0.0;
  if ((v29 & 1) == 0)
  {
    v35.origin.x = a1;
    v35.origin.y = a2;
    v35.size.width = a3;
    v35.size.height = a4;
    MinY = CGRectGetMinY(v35);
    v31 = *(double *)(v4 + v9[11]);
    if (MinY < v31)
    {
      v36.origin.x = a1;
      v36.origin.y = a2;
      v36.size.width = a3;
      v36.size.height = a4;
      v23 = v31 - CGRectGetMinY(v36) + 0.0;
      v32 = *(double *)(v4 + v9[13]);
      if (v23 - v32 >= 0.0)
      {
        v33 = *(double *)(v4 + v9[14]);
        if (v23 - v33 >= 0.0)
          return v23 + v32 - v33;
        else
          return v23 - (v23 - v32);
      }
    }
  }
  return v23;
}

double sub_1004C26E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _QWORD v4[3];
  char v5;

  v4[2] = a2;
  v5 = a1;
  v2 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v2, sub_1004CF628, v4, &type metadata for () + 1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004C2740(uint64_t a1, char a2)
{
  uint64_t v3;
  char v5;

  type metadata accessor for MoonContainerView(0);
  v5 = a2;
  v3 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(&v5, v3);
}

void sub_1004C27BC(void *a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  _QWORD __src[13];
  _BYTE __dst[97];

  v4 = swift_allocObject(&unk_100B77E98, 24, 7);
  *(double *)(v4 + 16) = a2;
  __src[10] = sub_1006796BC;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = sub_1000BA294(&qword_100BE77C8);
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  swift_beginAccess(&xmmword_100CAE588, v6, 0, 0);
  sub_100037768((uint64_t)&xmmword_100CAE588, (uint64_t)__dst, &qword_100BCED50);
  if (*(_QWORD *)&__dst[24])
  {
    sub_10003C800((__int128 *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_1004CF5F0;
    __src[2] = v4;
    v5 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v5;
    memcpy(__dst, __src, sizeof(__dst));
    memcpy(a1, __dst, 0x61uLL);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004C28FC(_QWORD *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  sub_1000DB418(a1, a1[3]);
  sub_10071B194(a2, a3);
}

void sub_1004C293C(void *a1@<X8>)
{
  double *v1;

  sub_1004C27BC(a1, *v1);
}

uint64_t sub_1004C2948(uint64_t a1)
{
  destroy for MoonDetailView(a1);
  return a1;
}

uint64_t type metadata accessor for MoonDetailRootContentView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE7400, (uint64_t)&nominal type descriptor for MoonDetailRootContentView);
}

uint64_t sub_1004C2990(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  __n128 v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t, __n128);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v88;
  int *v89;
  char *v90;
  char *v91;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      v9 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = 1;
    }
    else
    {
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v13);
    v16 = a3[5];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = v18[8];
    sub_10008D47C(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    v17[8] = v20;
    v21 = a3[6];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = v23[8];
    sub_10008D47C(*(_QWORD *)v23, v25);
    *(_QWORD *)v22 = v24;
    v22[8] = v25;
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for MoonDetailSelectedDate(0);
    v30 = swift_getEnumCaseMultiPayload(v28);
    v31 = type metadata accessor for Date(0);
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(v27, v28, v31);
    swift_storeEnumTagMultiPayload(v27, v29, v30);
    v33 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
    v34 = v33[5];
    v35 = &v27[v34];
    v36 = &v28[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v33[6];
    v39 = &v27[v38];
    v40 = &v28[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v42 = v33[7];
    v90 = v28;
    v91 = v27;
    v43 = &v27[v42];
    v44 = &v28[v42];
    v45 = v32;
    swift_bridgeObjectRetain();
    v46 = swift_bridgeObjectRetain();
    ((void (*)(char *, char *, uint64_t, __n128))v32)(v43, v44, v31, v46);
    v47 = (int *)type metadata accessor for MoonViewModel(0);
    *(_QWORD *)&v43[v47[5]] = *(_QWORD *)&v44[v47[5]];
    v48 = v47[6];
    v49 = &v43[v48];
    v50 = &v44[v48];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v44[v48], 1, v31))
    {
      v51 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v45(v49, v50, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v31);
    }
    v52 = v47[7];
    v53 = &v43[v52];
    v54 = &v44[v52];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v44[v52], 1, v31))
    {
      v55 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v45(v53, v54, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v31);
    }
    v56 = (void (*)(char *, char *, uint64_t, __n128))v45;
    v43[v47[8]] = v44[v47[8]];
    v57 = v33[8];
    v58 = &v91[v57];
    v89 = v33;
    v59 = &v90[v57];
    v60 = *(_QWORD *)&v90[v57 + 8];
    *(_QWORD *)v58 = *(_QWORD *)&v90[v57];
    *((_QWORD *)v58 + 1) = v60;
    v61 = *(_QWORD *)&v90[v57 + 24];
    *((_QWORD *)v58 + 2) = *(_QWORD *)&v90[v57 + 16];
    *((_QWORD *)v58 + 3) = v61;
    v62 = *(_QWORD *)&v90[v57 + 40];
    *((_QWORD *)v58 + 4) = *(_QWORD *)&v90[v57 + 32];
    *((_QWORD *)v58 + 5) = v62;
    v58[48] = v90[v57 + 48];
    v63 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
    v64 = v63[8];
    v65 = &v58[v64];
    v66 = &v59[v64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67 = swift_bridgeObjectRetain();
    v56(v65, v66, v31, v67);
    ((void (*)(char *, char *, uint64_t))v56)(&v58[v63[9]], &v59[v63[9]], v31);
    v58[v63[10]] = v59[v63[10]];
    *(_QWORD *)&v91[v89[9]] = *(_QWORD *)&v90[v89[9]];
    v68 = v89[10];
    v69 = &v91[v68];
    v70 = &v90[v68];
    v71 = *(_QWORD *)&v90[v68];
    swift_bridgeObjectRetain();
    if (v71)
    {
      v72 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v69 = v71;
      *((_QWORD *)v69 + 1) = v72;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)v70;
    }
    v73 = v89[11];
    v74 = &v91[v73];
    v75 = &v90[v73];
    v76 = *(_QWORD *)&v90[v73];
    v77 = *(_QWORD *)&v90[v73 + 8];
    v78 = v90[v73 + 16];
    sub_1000B2044(v76, v77, v78);
    *(_QWORD *)v74 = v76;
    *((_QWORD *)v74 + 1) = v77;
    v74[16] = v78;
    v79 = *((_QWORD *)v75 + 4);
    *((_QWORD *)v74 + 3) = *((_QWORD *)v75 + 3);
    *((_QWORD *)v74 + 4) = v79;
    v88 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    v80 = *(int *)(v88 + 24);
    v81 = &v74[v80];
    v82 = &v75[v80];
    v83 = type metadata accessor for WeatherDescription(0);
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
    {
      v84 = sub_1000BA294(&qword_100BC3368);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
    }
    v85 = &v75[*(int *)(v88 + 28)];
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v86 = (char *)&loc_1004C2E94 + 4 * byte_1009A5AF0[swift_getEnumCaseMultiPayload(v85)];
    __asm { BR              X10 }
  }
  v14 = *a2;
  *a1 = *a2;
  v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v15;
}

double sub_1004C44A4(uint64_t a1, int *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  void (*v59)(uint64_t, uint64_t, __n128);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  void (*v72)(uint64_t, uint64_t, __n128);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double result;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, __n128);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t);
  void (*v111)(uint64_t, uint64_t);
  void (*v112)(uint64_t, uint64_t);
  uint64_t v113;
  int *v114;

  sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v5 = a1 + *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v6 = type metadata accessor for PresentationMode(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  v7 = a1 + a2[7];
  type metadata accessor for MoonDetailSelectedDate(0);
  if (swift_getEnumCaseMultiPayload(v7) <= 2)
  {
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v7 + v9[7];
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v13 = type metadata accessor for MoonViewModel(0);
  v14 = v10 + *(int *)(v13 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v11))
    v12(v14, v11);
  v15 = v10 + *(int *)(v13 + 28);
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v11))
    v12(v15, v11);
  v16 = v7 + v9[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = type metadata accessor for MoonScrubberHeaderViewModel(0);
  v12(v16 + *(int *)(v17 + 32), v11);
  v12(v16 + *(int *)(v17 + 36), v11);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + v9[10]))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = v7 + v9[11];
  sub_10006BD8C(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_BYTE *)(v18 + 16));
  swift_bridgeObjectRelease();
  v19 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v20 = v18 + v19[6];
  v21 = type metadata accessor for WeatherDescription(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  v113 = v21;
  v22 = v18 + v19[7];
  v23 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v22))
  {
    case 0u:
      v24 = *(_QWORD *)(v113 - 8);
      goto LABEL_31;
    case 1u:
      goto LABEL_35;
    case 2u:
      v25 = type metadata accessor for AttributedString(0);
      goto LABEL_30;
    case 3u:
      v25 = sub_1000BA294(&qword_100BD30F8);
      goto LABEL_30;
    case 4u:
      v110 = v12;
      if (*(_QWORD *)(v22 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v106 = type metadata accessor for DetailComponentContainerViewModel(0);
      v26 = v22 + *(int *)(v106 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v26) == 1)
      {
        swift_bridgeObjectRelease();
        v103 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v98 = v26 + v103[5];
        v101 = type metadata accessor for URL(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v98, 1, v101))
          (*(void (**)(uint64_t))(*(_QWORD *)(v101 - 8) + 8))(v98);
        v27 = swift_bridgeObjectRelease();
        v97 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v101 - 8) + 8);
        v97(v26 + v103[7], v101, v27);
        v104 = v26 + v103[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v104, 1, v101))
          ((void (*)(uint64_t, uint64_t))v97)(v104, v101);
      }
      v22 += *(int *)(v106 + 24);
      v28 = type metadata accessor for DetailComponentAction(0);
      v12 = v110;
      if (_s7Weather24LocationCompositionStateOwet_0(v22, 1, v28))
        break;
      v25 = type metadata accessor for URL(0);
LABEL_30:
      v24 = *(_QWORD *)(v25 - 8);
LABEL_31:
      (*(void (**)(uint64_t))(v24 + 8))(v22);
      break;
    case 5u:
      if (*(_QWORD *)(v22 + 24))
      {
        sub_1000D31B4(*(_QWORD *)v22, *(_QWORD *)(v22 + 8), *(_BYTE *)(v22 + 16));
        swift_bridgeObjectRelease();
      }
      sub_1002387C0(*(_QWORD *)(v22 + 32), *(_QWORD *)(v22 + 40), *(_QWORD *)(v22 + 48), *(_QWORD *)(v22 + 56), *(_QWORD *)(v22 + 64), *(_QWORD *)(v22 + 72), *(_QWORD *)(v22 + 80), *(unsigned __int8 *)(v22 + 88), *(_BYTE *)(v22 + 89));
      break;
    case 6u:
      v25 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      goto LABEL_30;
    case 7u:
      type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      v29 = swift_getEnumCaseMultiPayload(v22);
      if (v29 == 1)
      {
        v111 = v12;
        swift_bridgeObjectRelease();
        v30 = type metadata accessor for ConditionDetailMapViewModel(0);
        v107 = v22 + *(int *)(v30 + 20);
        v31 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v107, v31);
        v105 = v30;
        v32 = v22 + *(int *)(v30 + 24);
        v33 = type metadata accessor for WeatherData(0);
        v108 = v32;
        v34 = v32;
        v35 = (int *)v33;
        if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v33))
        {
          swift_bridgeObjectRelease();
          v102 = v35;
          v36 = v108 + v35[5];
          v99 = type metadata accessor for Locale(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v99))
            (*(void (**)(uint64_t))(*(_QWORD *)(v99 - 8) + 8))(v36);
          v100 = v108 + v102[6];
          v37 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v100, v37);
          v38 = v108 + v102[7];
          v39 = sub_1000BA294(&qword_100BC3348);
          if (!_s7Weather24LocationCompositionStateOwet_0(v38, 1, v39))
            v111(v38, v11);
          v40 = v108 + v102[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          v41 = swift_getEnumCaseMultiPayload(v40);
          if (v41 == 1)
          {
            v42 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v40, v42);
          }
          else if (!v41)
          {
            swift_bridgeObjectRelease();
          }
          v43 = v108 + v102[9];
          v44 = type metadata accessor for WeatherDataOverrides(0);
          v109 = v43;
          v45 = v43;
          v46 = v44;
          if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v44))
          {
            if (!_s7Weather24LocationCompositionStateOwet_0(v109, 1, v11))
              v111(v109, v11);
            v47 = v109 + *(int *)(v46 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v11))
              v111(v47, v11);
          }
        }
        swift_bridgeObjectRelease();
        v48 = v22 + *(int *)(v105 + 32);
        v49 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
        v12 = v111;
      }
      else if (!v29)
      {
        swift_bridgeObjectRelease();
LABEL_35:
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v50 = v18 + v19[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v50, 1, v23))
  {
    switch(swift_getEnumCaseMultiPayload(v50))
    {
      case 0u:
        v51 = *(_QWORD *)(v113 - 8);
        goto LABEL_70;
      case 1u:
        goto LABEL_75;
      case 2u:
        v52 = type metadata accessor for AttributedString(0);
        goto LABEL_69;
      case 3u:
        v52 = sub_1000BA294(&qword_100BD30F8);
        goto LABEL_69;
      case 4u:
        if (*(_QWORD *)(v50 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v53 = type metadata accessor for DetailComponentContainerViewModel(0);
        v54 = v50 + *(int *)(v53 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v54) == 1)
        {
          swift_bridgeObjectRelease();
          v55 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v56 = v54 + v55[5];
          v57 = type metadata accessor for URL(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v56, 1, v57))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
          v58 = swift_bridgeObjectRelease();
          v59 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v57 - 8) + 8);
          v59(v54 + v55[7], v57, v58);
          v60 = v54 + v55[8];
          if (!_s7Weather24LocationCompositionStateOwet_0(v60, 1, v57))
            ((void (*)(uint64_t, uint64_t))v59)(v60, v57);
        }
        v61 = v50 + *(int *)(v53 + 24);
        v62 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
          break;
        v63 = type metadata accessor for URL(0);
        goto LABEL_102;
      case 5u:
        if (*(_QWORD *)(v50 + 24))
        {
          sub_1000D31B4(*(_QWORD *)v50, *(_QWORD *)(v50 + 8), *(_BYTE *)(v50 + 16));
          swift_bridgeObjectRelease();
        }
        sub_1002387C0(*(_QWORD *)(v50 + 32), *(_QWORD *)(v50 + 40), *(_QWORD *)(v50 + 48), *(_QWORD *)(v50 + 56), *(_QWORD *)(v50 + 64), *(_QWORD *)(v50 + 72), *(_QWORD *)(v50 + 80), *(unsigned __int8 *)(v50 + 88), *(_BYTE *)(v50 + 89));
        break;
      case 6u:
        v52 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
LABEL_69:
        v51 = *(_QWORD *)(v52 - 8);
LABEL_70:
        (*(void (**)(uint64_t))(v51 + 8))(v50);
        break;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        v64 = swift_getEnumCaseMultiPayload(v50);
        if (v64 == 1)
        {
          swift_bridgeObjectRelease();
          v80 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
          v81 = v50 + v80[5];
          v82 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8))(v81, v82);
          v83 = v50 + v80[6];
          v84 = (int *)type metadata accessor for WeatherData(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v83, 1, (uint64_t)v84))
          {
            v112 = v12;
            v114 = v80;
            swift_bridgeObjectRelease();
            v85 = v83 + v84[5];
            v86 = type metadata accessor for Locale(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v85, 1, v86))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v85, v86);
            v87 = v83 + v84[6];
            v88 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 8))(v87, v88);
            v89 = v83 + v84[7];
            v90 = sub_1000BA294(&qword_100BC3348);
            if (!_s7Weather24LocationCompositionStateOwet_0(v89, 1, v90))
              v112(v89, v11);
            v91 = v83 + v84[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v92 = swift_getEnumCaseMultiPayload(v91);
            v80 = v114;
            if (v92 == 1)
            {
              v93 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v91, v93);
            }
            else if (!v92)
            {
              swift_bridgeObjectRelease();
            }
            v94 = v83 + v84[9];
            v95 = type metadata accessor for WeatherDataOverrides(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v94, 1, v95))
            {
              if (!_s7Weather24LocationCompositionStateOwet_0(v94, 1, v11))
                v112(v94, v11);
              v96 = v94 + *(int *)(v95 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v96, 1, v11))
                v112(v96, v11);
            }
          }
          swift_bridgeObjectRelease();
          v61 = v50 + v80[8];
          v63 = type metadata accessor for WeatherMapOverlayKind(0);
LABEL_102:
          (*(void (**)(uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v61);
        }
        else if (!v64)
        {
          swift_bridgeObjectRelease();
LABEL_75:
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
  }
  swift_bridgeObjectRelease();
  v65 = v7 + v9[13];
  v66 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v66))
  {
    if (*(_QWORD *)(v65 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v67 = v65 + *(int *)(v66 + 20);
    type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v67) == 1)
    {
      swift_bridgeObjectRelease();
      v68 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v69 = v67 + v68[5];
      v70 = type metadata accessor for URL(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v69, 1, v70))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
      v71 = swift_bridgeObjectRelease();
      v72 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v70 - 8) + 8);
      v72(v67 + v68[7], v70, v71);
      v73 = v67 + v68[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v73, 1, v70))
        ((void (*)(uint64_t, uint64_t))v72)(v73, v70);
    }
    v74 = v65 + *(int *)(v66 + 24);
    v75 = type metadata accessor for DetailComponentAction(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v74, 1, v75))
    {
      v76 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v74, v76);
    }
  }
  v77 = v7 + v9[14];
  v78 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + a2[8]));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1004C51F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __n128 v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v82)(char *, char *, uint64_t, __n128);
  uint64_t v83;
  int *v84;
  char *v85;
  char *v86;

  v6 = sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v12);
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = v15[8];
  sub_10008D47C(*(_QWORD *)v15, v17);
  *(_QWORD *)v14 = v16;
  v14[8] = v17;
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = v20[8];
  sub_10008D47C(*(_QWORD *)v20, v22);
  *(_QWORD *)v19 = v21;
  v19[8] = v22;
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = type metadata accessor for MoonDetailSelectedDate(0);
  v27 = swift_getEnumCaseMultiPayload(v25);
  v28 = type metadata accessor for Date(0);
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v29(v24, v25, v28);
  swift_storeEnumTagMultiPayload(v24, v26, v27);
  v30 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  v31 = v30[5];
  v32 = &v24[v31];
  v33 = &v25[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  v35 = v30[6];
  v36 = &v24[v35];
  v37 = &v25[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = v30[7];
  v85 = v25;
  v86 = v24;
  v40 = &v24[v39];
  v41 = &v25[v39];
  swift_bridgeObjectRetain();
  v42 = swift_bridgeObjectRetain();
  ((void (*)(char *, char *, uint64_t, __n128))v29)(v40, v41, v28, v42);
  v43 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v40[v43[5]] = *(_QWORD *)&v41[v43[5]];
  v44 = v43[6];
  v45 = &v40[v44];
  v46 = &v41[v44];
  v82 = (void (*)(char *, char *, uint64_t, __n128))v29;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v41[v44], 1, v28))
  {
    v47 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v29(v45, v46, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v28);
  }
  v48 = v43[7];
  v49 = &v40[v48];
  v50 = &v41[v48];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v41[v48], 1, v28))
  {
    v51 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v29(v49, v50, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v28);
  }
  v40[v43[8]] = v41[v43[8]];
  v52 = v30[8];
  v53 = &v86[v52];
  v84 = v30;
  v54 = &v85[v52];
  v55 = *(_QWORD *)&v85[v52 + 8];
  *(_QWORD *)v53 = *(_QWORD *)&v85[v52];
  *((_QWORD *)v53 + 1) = v55;
  v56 = *(_QWORD *)&v85[v52 + 24];
  *((_QWORD *)v53 + 2) = *(_QWORD *)&v85[v52 + 16];
  *((_QWORD *)v53 + 3) = v56;
  v57 = *(_QWORD *)&v85[v52 + 40];
  *((_QWORD *)v53 + 4) = *(_QWORD *)&v85[v52 + 32];
  *((_QWORD *)v53 + 5) = v57;
  v53[48] = v85[v52 + 48];
  v58 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v59 = v58[8];
  v60 = &v53[v59];
  v61 = &v54[v59];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62 = swift_bridgeObjectRetain();
  v82(v60, v61, v28, v62);
  ((void (*)(char *, char *, uint64_t))v82)(&v53[v58[9]], &v54[v58[9]], v28);
  v53[v58[10]] = v54[v58[10]];
  *(_QWORD *)&v86[v84[9]] = *(_QWORD *)&v85[v84[9]];
  v63 = v84[10];
  v64 = &v86[v63];
  v65 = &v85[v63];
  v66 = *(_QWORD *)&v85[v63];
  swift_bridgeObjectRetain();
  if (v66)
  {
    v67 = *((_QWORD *)v65 + 1);
    *(_QWORD *)v64 = v66;
    *((_QWORD *)v64 + 1) = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
  }
  v68 = v84[11];
  v69 = &v86[v68];
  v70 = &v85[v68];
  v71 = *(_QWORD *)&v85[v68];
  v72 = *(_QWORD *)&v85[v68 + 8];
  v73 = v85[v68 + 16];
  sub_1000B2044(v71, v72, v73);
  *(_QWORD *)v69 = v71;
  *((_QWORD *)v69 + 1) = v72;
  v69[16] = v73;
  v74 = *((_QWORD *)v70 + 4);
  *((_QWORD *)v69 + 3) = *((_QWORD *)v70 + 3);
  *((_QWORD *)v69 + 4) = v74;
  v83 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  v75 = *(int *)(v83 + 24);
  v76 = &v69[v75];
  v77 = &v70[v75];
  v78 = type metadata accessor for WeatherDescription(0);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78))
  {
    v79 = sub_1000BA294(&qword_100BC3368);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v78);
  }
  v80 = &v70[*(int *)(v83 + 28)];
  type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v81 = (char *)sub_1004C56D8 + 4 * byte_1009A5B10[swift_getEnumCaseMultiPayload(v80)];
  __asm { BR              X10 }
}

uint64_t sub_1004C56D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void (*v89)(char *, char *, uint64_t, __n128);
  __n128 v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v48, v47);
  swift_storeEnumTagMultiPayload(v48, v43, v41);
  v52 = v42[8];
  v53 = (void *)(v45 + v52);
  v54 = (const void *)(v46 + v52);
  if (!_s7Weather24LocationCompositionStateOwet_0(v46 + v52, 1, v43))
  {
    v56 = (char *)&loc_1004C5FFC + 4 * byte_1009A5B18[swift_getEnumCaseMultiPayload(v54)];
    __asm { BR              X10 }
  }
  v55 = sub_1000BA294(&qword_100BD3108);
  memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  *(_BYTE *)(v45 + v42[9]) = *(_BYTE *)(v46 + v42[9]);
  *(_BYTE *)(v45 + v42[10]) = *(_BYTE *)(v46 + v42[10]);
  v57 = *(_QWORD *)(v51 - 96);
  *(_QWORD *)(v57 + *(int *)(v49 + 48)) = *(_QWORD *)(v44 + *(int *)(v49 + 48));
  v58 = *(int *)(v49 + 52);
  v59 = (_QWORD *)(v57 + v58);
  v60 = (_QWORD *)(v44 + v58);
  v61 = type metadata accessor for DetailComponentContainerViewModel(0);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
  {
    v63 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    v64 = v142;
    v65 = v143;
    v66 = *(_QWORD *)(v51 - 96);
    v67 = *(_QWORD *)(v51 - 112);
  }
  else
  {
    v68 = v60[1];
    if (v68)
    {
      *v59 = *v60;
      v59[1] = v68;
      v69 = v60[3];
      v59[2] = v60[2];
      v59[3] = v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v70 = *((_OWORD *)v60 + 1);
      *(_OWORD *)v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v70;
    }
    v71 = *(int *)(v61 + 20);
    v72 = (_QWORD *)((char *)v59 + v71);
    v73 = (_QWORD *)((char *)v60 + v71);
    v74 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v73) == 1)
    {
      v144 = v74;
      v75 = v73[1];
      *v72 = *v73;
      v72[1] = v75;
      v76 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v77 = v76[5];
      v78 = (char *)v72 + v77;
      v79 = (char *)v73 + v77;
      v80 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
      {
        v81 = sub_1000BA294(&qword_100BD4280);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
      }
      v82 = v76[6];
      v83 = (_QWORD *)((char *)v72 + v82);
      v84 = (_QWORD *)((char *)v73 + v82);
      v85 = v84[1];
      *v83 = *v84;
      v83[1] = v85;
      v86 = v76[7];
      v87 = (char *)v72 + v86;
      v88 = (char *)v73 + v86;
      v89 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v80 - 8) + 16);
      v90 = swift_bridgeObjectRetain();
      v89(v87, v88, v80, v90);
      v91 = v76[8];
      v92 = (char *)v72 + v91;
      v93 = (char *)v73 + v91;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73 + v91, 1, v80))
      {
        v94 = sub_1000BA294(&qword_100BD4280);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v89)(v92, v93, v80);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v80);
      }
      *((_BYTE *)v72 + v76[9]) = *((_BYTE *)v73 + v76[9]);
      swift_storeEnumTagMultiPayload(v72, v144, 1);
    }
    else
    {
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    v95 = *(int *)(v61 + 24);
    v96 = (char *)v59 + v95;
    v97 = (char *)v60 + v95;
    v98 = type metadata accessor for DetailComponentAction(0);
    v50 = v145;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98))
    {
      v99 = sub_1000BA294(&qword_100BD3100);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      v100 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v96, v97, v100);
      v101 = sub_1000BA294(&qword_100BC5FE8);
      v96[*(int *)(v101 + 48)] = v97[*(int *)(v101 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v98);
    }
    v66 = *(_QWORD *)(v51 - 96);
    v67 = *(_QWORD *)(v51 - 112);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
    v64 = v142;
    v65 = v143;
    v44 = *(_QWORD *)(v51 - 104);
  }
  v102 = *(int *)(v67 + 56);
  v103 = v66 + v102;
  v104 = v44 + v102;
  v105 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
  *(_BYTE *)(v66 + *(int *)(v67 + 60)) = *(_BYTE *)(v44 + *(int *)(v67 + 60));
  v106 = v64[8];
  v107 = *(_OWORD *)(v65 + v106 + 24);
  *(_OWORD *)(v50 + v106 + 24) = v107;
  (**(void (***)(void))(v107 - 8))();
  v108 = v64[9];
  v109 = v64[10];
  v110 = (_QWORD *)(v50 + v108);
  v111 = (_QWORD *)(v65 + v108);
  v112 = v111[1];
  *v110 = *v111;
  v110[1] = v112;
  v113 = (_QWORD *)(v50 + v109);
  v114 = (_QWORD *)(v65 + v109);
  v115 = v114[1];
  *v113 = *v114;
  v113[1] = v115;
  v116 = v64[11];
  v117 = v64[12];
  v118 = (_QWORD *)(v50 + v116);
  v119 = (_QWORD *)(v65 + v116);
  v120 = v119[1];
  *v118 = *v119;
  v118[1] = v120;
  v121 = (_QWORD *)(v50 + v117);
  v122 = (_QWORD *)(v65 + v117);
  v123 = v122[1];
  *v121 = *v122;
  v121[1] = v123;
  v124 = v64[13];
  v125 = v64[14];
  v126 = (_QWORD *)(v50 + v124);
  v127 = (_QWORD *)(v65 + v124);
  v128 = v127[1];
  *v126 = *v127;
  v126[1] = v128;
  v129 = (_QWORD *)(v50 + v125);
  v130 = (_QWORD *)(v65 + v125);
  v131 = v130[1];
  *v129 = *v130;
  v129[1] = v131;
  v132 = v64[15];
  v133 = v64[16];
  v134 = (_QWORD *)(v50 + v132);
  v135 = (_QWORD *)(v65 + v132);
  v136 = v135[1];
  *v134 = *v135;
  v134[1] = v136;
  v137 = (_QWORD *)(v50 + v133);
  v138 = (_QWORD *)(v65 + v133);
  v139 = v138[1];
  *v137 = *v138;
  v137[1] = v139;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return v50;
}

_QWORD *sub_1004C6D50(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int v90;
  int v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  void (*v120)(char *, char *, uint64_t, __n128);
  __n128 v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  _QWORD *v151;
  void (*v152)(char *, char *, uint64_t, __n128);
  __n128 v153;
  uint64_t v154;
  char *v155;
  char *v156;
  int v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  int v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  _QWORD *v193;
  uint64_t v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  _QWORD *v201;
  _QWORD *v202;
  _QWORD *v203;
  uint64_t v204;
  int *v205;
  char *__dst;
  char *__dsta;
  void *__dstb;
  int *v209;
  uint64_t v210;
  _QWORD *v211;
  char *v212;
  char *v213;
  int *v214;

  v4 = a2;
  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    sub_100021A14(a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4);
    *v5 = *v4;
    if (EnumCaseMultiPayload == 1)
    {
      v5[1] = v4[1];
      swift_retain();
      swift_retain();
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)v5 + v8;
      v10 = (char *)v4 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v5, v6, v12);
  }
  v13 = a3[5];
  v14 = (char *)v5 + v13;
  v15 = (char *)v4 + v13;
  v16 = *(_QWORD *)v15;
  v17 = v15[8];
  sub_10008D47C(*(_QWORD *)v15, v17);
  v18 = *(_QWORD *)v14;
  v19 = v14[8];
  *(_QWORD *)v14 = v16;
  v14[8] = v17;
  sub_1000B15F8(v18, v19);
  v20 = a3[6];
  v21 = (char *)v5 + v20;
  v22 = (char *)v4 + v20;
  v23 = *(_QWORD *)v22;
  v24 = v22[8];
  sub_10008D47C(*(_QWORD *)v22, v24);
  v25 = *(_QWORD *)v21;
  v26 = v21[8];
  *(_QWORD *)v21 = v23;
  v21[8] = v24;
  sub_1000B15F8(v25, v26);
  v205 = a3;
  v27 = a3[7];
  v28 = (char *)v5 + v27;
  v29 = (char *)v4 + v27;
  if (v5 != v4)
  {
    sub_1000215BC((uint64_t)v5 + v27, type metadata accessor for MoonDetailSelectedDate);
    v30 = type metadata accessor for MoonDetailSelectedDate(0);
    v31 = swift_getEnumCaseMultiPayload(v29);
    v32 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v28, v29, v32);
    swift_storeEnumTagMultiPayload(v28, v30, v31);
  }
  v33 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  v34 = v33[5];
  v35 = &v28[v34];
  v36 = &v29[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v33[6];
  v38 = &v28[v37];
  v39 = &v29[v37];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v213 = v29;
  v214 = v33;
  v40 = v33[7];
  v212 = v28;
  v41 = &v28[v40];
  v42 = &v29[v40];
  v43 = type metadata accessor for Date(0);
  v204 = *(_QWORD *)(v43 - 8);
  v44 = *(void (**)(char *, char *, uint64_t))(v204 + 24);
  v44(v41, v42, v43);
  v45 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v41[v45[5]] = *(_QWORD *)&v42[v45[5]];
  v46 = v45[6];
  v47 = &v41[v46];
  v48 = &v42[v46];
  v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v41[v46], 1, v43);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v43);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v47, v48, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v43);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v47, v43);
LABEL_13:
    v51 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_14;
  }
  v44(v47, v48, v43);
LABEL_14:
  v52 = v45[7];
  v53 = &v41[v52];
  v54 = &v42[v52];
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v41[v52], 1, v43);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v53, v54, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v53, v43);
LABEL_19:
    v57 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_20;
  }
  v44(v53, v54, v43);
LABEL_20:
  v41[v45[8]] = v42[v45[8]];
  v58 = v214[8];
  v59 = v212;
  v60 = &v212[v58];
  v61 = &v213[v58];
  *(_QWORD *)v60 = *(_QWORD *)&v213[v58];
  *((_QWORD *)v60 + 1) = *(_QWORD *)&v213[v58 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v60 + 2) = *((_QWORD *)v61 + 2);
  *((_QWORD *)v60 + 3) = *((_QWORD *)v61 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
  *((_QWORD *)v60 + 5) = *((_QWORD *)v61 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60[48] = v61[48];
  v62 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v44(&v60[v62[8]], &v61[v62[8]], v43);
  v44(&v60[v62[9]], &v61[v62[9]], v43);
  v60[v62[10]] = v61[v62[10]];
  *(_QWORD *)&v212[v214[9]] = *(_QWORD *)&v213[v214[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = v214[10];
  v64 = &v212[v63];
  v65 = &v213[v63];
  v66 = *(_QWORD *)&v213[v63];
  if (*(_QWORD *)&v212[v63])
  {
    if (v66)
    {
      *(_QWORD *)v64 = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    sub_10046CBB0(&v212[v63]);
  }
  else if (v66)
  {
    *(_QWORD *)v64 = v66;
    *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_27;
  }
  *(_OWORD *)v64 = *(_OWORD *)v65;
LABEL_27:
  v67 = v214[11];
  v68 = &v212[v67];
  v69 = &v213[v67];
  v70 = *(_QWORD *)&v213[v67];
  v71 = *(_QWORD *)&v213[v67 + 8];
  v72 = v213[v67 + 16];
  sub_1000B2044(*(_QWORD *)v69, *((_QWORD *)v69 + 1), v69[16]);
  v73 = *(_QWORD *)v68;
  v74 = *((_QWORD *)v68 + 1);
  *(_QWORD *)v68 = v70;
  *((_QWORD *)v68 + 1) = v71;
  v75 = v68[16];
  v68[16] = v72;
  sub_10006BD8C(v73, v74, v75);
  *((_QWORD *)v68 + 3) = *((_QWORD *)v69 + 3);
  *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v209 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v76 = v209[6];
  v77 = &v68[v76];
  v78 = &v69[v76];
  v79 = type metadata accessor for WeatherDescription(0);
  LODWORD(v70) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v79);
  v80 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79);
  if ((_DWORD)v70)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  v81 = *(_QWORD *)(v79 - 8);
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v79);
LABEL_32:
    v82 = sub_1000BA294(&qword_100BC3368);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v81 + 24))(v77, v78, v79);
LABEL_33:
  __dst = v69;
  if (v5 != v4)
  {
    v83 = v209[7];
    v84 = &v69[v83];
    sub_1000215BC((uint64_t)&v68[v83], type metadata accessor for ConditionDetailPlatterViewModel.Body);
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v85 = (char *)&loc_1004C73D8 + 4 * byte_1009A5B20[swift_getEnumCaseMultiPayload(v84)];
    __asm { BR              X10 }
  }
  v86 = v209[8];
  v87 = &v68[v86];
  v88 = &v69[v86];
  v89 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v89);
  v91 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89);
  if (v90)
  {
    if (!v91)
    {
      v92 = (char *)&loc_1004C7DEC + 4 * byte_1009A5B28[swift_getEnumCaseMultiPayload(v88)];
      __asm { BR              X10 }
    }
    goto LABEL_43;
  }
  if (v91)
  {
    sub_1000215BC((uint64_t)v87, type metadata accessor for ConditionDetailPlatterViewModel.Body);
LABEL_43:
    v93 = sub_1000BA294(&qword_100BD3108);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_46;
  }
  if (v5 != v4)
  {
    sub_1000215BC((uint64_t)v87, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    v94 = (char *)&loc_1004C7E70 + 4 * byte_1009A5B30[swift_getEnumCaseMultiPayload(v88)];
    __asm { BR              X10 }
  }
LABEL_46:
  v68[v209[9]] = __dst[v209[9]];
  v68[v209[10]] = __dst[v209[10]];
  *(_QWORD *)&v212[v214[12]] = *(_QWORD *)&v213[v214[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95 = v214[13];
  v96 = &v212[v95];
  v97 = &v213[v95];
  v98 = type metadata accessor for DetailComponentContainerViewModel(0);
  v99 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v98);
  v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98);
  if (!v99)
  {
    if (v100)
    {
      sub_1000215BC((uint64_t)v96, type metadata accessor for DetailComponentContainerViewModel);
      goto LABEL_52;
    }
    v103 = *((_QWORD *)v97 + 1);
    if (*((_QWORD *)v96 + 1))
    {
      if (v103)
      {
        *(_QWORD *)v96 = *(_QWORD *)v97;
        *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
        *((_QWORD *)v96 + 3) = *((_QWORD *)v97 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10035C44C((uint64_t)v96);
        v133 = *((_OWORD *)v97 + 1);
        *(_OWORD *)v96 = *(_OWORD *)v97;
        *((_OWORD *)v96 + 1) = v133;
      }
    }
    else if (v103)
    {
      *(_QWORD *)v96 = *(_QWORD *)v97;
      *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
      *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
      *((_QWORD *)v96 + 3) = *((_QWORD *)v97 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v134 = *((_OWORD *)v97 + 1);
      *(_OWORD *)v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v134;
    }
    if (v5 != v4)
    {
      v135 = *(int *)(v98 + 20);
      v136 = &v96[v135];
      v137 = &v97[v135];
      sub_1000215BC((uint64_t)&v96[v135], type metadata accessor for NewsArticleComponentViewModel);
      v138 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v137) == 1)
      {
        __dstb = (void *)v138;
        v201 = v5;
        v203 = v4;
        *(_QWORD *)v136 = *(_QWORD *)v137;
        *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
        v139 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v140 = v139[5];
        v141 = &v136[v140];
        v142 = &v137[v140];
        v143 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v143))
        {
          v144 = sub_1000BA294(&qword_100BD4280);
          memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v143);
        }
        v145 = v139[6];
        v146 = &v136[v145];
        v147 = &v137[v145];
        *(_QWORD *)v146 = *(_QWORD *)v147;
        *((_QWORD *)v146 + 1) = *((_QWORD *)v147 + 1);
        v148 = v139[7];
        v149 = &v136[v148];
        v150 = &v137[v148];
        v151 = v137;
        v152 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v143 - 8) + 16);
        v153 = swift_bridgeObjectRetain();
        v152(v149, v150, v143, v153);
        v154 = v139[8];
        v155 = &v136[v154];
        v211 = v151;
        v156 = (char *)v151 + v154;
        v157 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v151 + v154, 1, v143);
        v5 = v201;
        if (v157)
        {
          v158 = sub_1000BA294(&qword_100BD4280);
          memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v152)(v155, v156, v143);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v143);
        }
        v4 = v203;
        v136[v139[9]] = *((_BYTE *)v211 + v139[9]);
        swift_storeEnumTagMultiPayload(v136, __dstb, 1);
      }
      else
      {
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
    }
    v159 = v4;
    v160 = *(int *)(v98 + 24);
    v161 = &v96[v160];
    v162 = &v97[v160];
    v163 = type metadata accessor for DetailComponentAction(0);
    v164 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v163);
    v165 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v163);
    if (v164)
    {
      v102 = v205;
      v59 = v212;
      if (!v165)
      {
        v166 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v161, v162, v166);
        v167 = sub_1000BA294(&qword_100BC5FE8);
        v161[*(int *)(v167 + 48)] = v162[*(int *)(v167 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v163);
LABEL_90:
        v4 = v159;
        goto LABEL_91;
      }
    }
    else
    {
      v102 = v205;
      v59 = v212;
      if (!v165)
      {
        v198 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 24))(v161, v162, v198);
        v199 = sub_1000BA294(&qword_100BC5FE8);
        v161[*(int *)(v199 + 48)] = v162[*(int *)(v199 + 48)];
        goto LABEL_90;
      }
      sub_1000215BC((uint64_t)v161, type metadata accessor for DetailComponentAction);
    }
    v168 = sub_1000BA294(&qword_100BD3100);
    memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    goto LABEL_90;
  }
  if (v100)
  {
LABEL_52:
    v101 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    v102 = v205;
    goto LABEL_91;
  }
  v200 = v5;
  if (*((_QWORD *)v97 + 1))
  {
    *(_QWORD *)v96 = *(_QWORD *)v97;
    *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
    *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
    *((_QWORD *)v96 + 3) = *((_QWORD *)v97 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v104 = *((_OWORD *)v97 + 1);
    *(_OWORD *)v96 = *(_OWORD *)v97;
    *((_OWORD *)v96 + 1) = v104;
  }
  v202 = v4;
  v105 = *(int *)(v98 + 20);
  v106 = &v96[v105];
  v107 = &v97[v105];
  v108 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload(v107) == 1)
  {
    *(_QWORD *)v106 = *(_QWORD *)v107;
    *((_QWORD *)v106 + 1) = *((_QWORD *)v107 + 1);
    v109 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    v110 = v109[5];
    __dsta = &v106[v110];
    v111 = &v107[v110];
    v112 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain();
    v210 = v108;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
    {
      v113 = sub_1000BA294(&qword_100BD4280);
      memcpy(__dsta, v111, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(__dsta, v111, v112);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v112);
    }
    v114 = v109[6];
    v115 = &v106[v114];
    v116 = &v107[v114];
    *(_QWORD *)v115 = *(_QWORD *)v116;
    *((_QWORD *)v115 + 1) = *((_QWORD *)v116 + 1);
    v117 = v109[7];
    v118 = &v106[v117];
    v119 = &v107[v117];
    v120 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v112 - 8) + 16);
    v121 = swift_bridgeObjectRetain();
    v120(v118, v119, v112, v121);
    v122 = v109[8];
    v123 = &v106[v122];
    v124 = &v107[v122];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v107[v122], 1, v112))
    {
      v125 = sub_1000BA294(&qword_100BD4280);
      memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v120)(v123, v124, v112);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v112);
    }
    v106[v109[9]] = v107[v109[9]];
    swift_storeEnumTagMultiPayload(v106, v210, 1);
  }
  else
  {
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  v126 = *(int *)(v98 + 24);
  v127 = &v96[v126];
  v128 = &v97[v126];
  v129 = type metadata accessor for DetailComponentAction(0);
  v5 = v200;
  v59 = v212;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129))
  {
    v130 = sub_1000BA294(&qword_100BD3100);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
  }
  else
  {
    v131 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v127, v128, v131);
    v132 = sub_1000BA294(&qword_100BC5FE8);
    v127[*(int *)(v132 + 48)] = v128[*(int *)(v132 + 48)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v129);
  }
  v4 = v202;
  v102 = v205;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v98);
LABEL_91:
  v169 = v214[14];
  v170 = &v59[v169];
  v171 = &v213[v169];
  v172 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 24))(v170, v171, v172);
  v59[v214[15]] = v213[v214[15]];
  sub_100094D04((_QWORD *)((char *)v5 + v102[8]), (_QWORD *)((char *)v4 + v102[8]));
  v173 = v102[9];
  v174 = (_QWORD *)((char *)v5 + v173);
  v175 = (_QWORD *)((char *)v4 + v173);
  *v174 = *v175;
  v174[1] = v175[1];
  swift_retain();
  swift_release();
  v176 = v102[10];
  v177 = (_QWORD *)((char *)v5 + v176);
  v178 = (_QWORD *)((char *)v4 + v176);
  *v177 = *v178;
  v177[1] = v178[1];
  swift_retain();
  swift_release();
  v179 = v102[11];
  v180 = (_QWORD *)((char *)v5 + v179);
  v181 = (_QWORD *)((char *)v4 + v179);
  *v180 = *v181;
  v180[1] = v181[1];
  swift_retain();
  swift_release();
  v182 = v102[12];
  v183 = (_QWORD *)((char *)v5 + v182);
  v184 = (_QWORD *)((char *)v4 + v182);
  *v183 = *v184;
  v183[1] = v184[1];
  swift_retain();
  swift_release();
  v185 = v102[13];
  v186 = (_QWORD *)((char *)v5 + v185);
  v187 = (_QWORD *)((char *)v4 + v185);
  *v186 = *v187;
  v186[1] = v187[1];
  swift_retain();
  swift_release();
  v188 = v102[14];
  v189 = (_QWORD *)((char *)v5 + v188);
  v190 = (_QWORD *)((char *)v4 + v188);
  *v189 = *v190;
  v189[1] = v190[1];
  swift_retain();
  swift_release();
  v191 = v102[15];
  v192 = (_QWORD *)((char *)v5 + v191);
  v193 = (_QWORD *)((char *)v4 + v191);
  *v192 = *v193;
  v192[1] = v193[1];
  swift_retain();
  swift_release();
  v194 = v102[16];
  v195 = (_QWORD *)((char *)v5 + v194);
  v196 = (_QWORD *)((char *)v4 + v194);
  *v195 = *v196;
  v195[1] = v196[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

_QWORD *sub_1004C99E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t EnumCaseMultiPayload;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, char *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  int *v221;
  __int128 v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  int *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  void (*v233)(char *, char *, uint64_t);
  char *v234;
  void (*v235)(char *, char *, uint64_t);
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  __int128 v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void (*v260)(char *, char *, uint64_t);
  uint64_t v261;
  uint64_t v262;
  int *v263;
  char *v264;
  uint64_t v265;
  _OWORD *v266;
  _OWORD *v267;
  int *v268;
  _OWORD *v269;
  int *v270;
  uint64_t v271;
  void (*v272)(char *, char *, uint64_t);
  int *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  int *v277;
  int *v278;
  int *v279;
  int *v280;
  int *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  int *v289;
  _QWORD *v290;
  void (*v291)(char *, char *, uint64_t);
  int *v292;
  uint64_t v293;
  _QWORD *v294;
  char *v295;
  int *v296;
  char *v297;

  v6 = sub_1000BA294(&qword_100BC4F28);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[5];
  v13 = a3[6];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = a3[7];
  v294 = a1;
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for MoonDetailSelectedDate(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20);
  v23 = type metadata accessor for Date(0);
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
  v24(v19, v20, v23);
  swift_storeEnumTagMultiPayload(v19, v21, EnumCaseMultiPayload);
  v25 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  *(_OWORD *)&v19[v25[5]] = *(_OWORD *)&v20[v25[5]];
  *(_OWORD *)&v19[v25[6]] = *(_OWORD *)&v20[v25[6]];
  v26 = v25[7];
  v295 = v19;
  v27 = &v19[v26];
  v297 = v20;
  v28 = &v20[v26];
  v24(v27, &v20[v26], v23);
  v29 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v27[v29[5]] = *(_QWORD *)&v28[v29[5]];
  v30 = v29[6];
  v31 = &v27[v30];
  v32 = &v28[v30];
  v291 = (void (*)(_QWORD, _QWORD, _QWORD))v24;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v28[v30], 1, v23))
  {
    v33 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v24(v31, v32, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v23);
  }
  v34 = v294;
  v35 = v29[7];
  v36 = &v27[v35];
  v37 = &v28[v35];
  v289 = a3;
  v290 = a2;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v28[v35], 1, v23))
  {
    v38 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    v39 = v295;
    v40 = (void (*)(char *, char *, uint64_t))v291;
  }
  else
  {
    v40 = (void (*)(char *, char *, uint64_t))v291;
    v291(v36, v37, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v23);
    v39 = v295;
  }
  v27[v29[8]] = v28[v29[8]];
  v41 = v25[8];
  v42 = &v39[v41];
  v43 = &v297[v41];
  v44 = *(_OWORD *)&v297[v41 + 16];
  *(_OWORD *)v42 = *(_OWORD *)&v297[v41];
  *((_OWORD *)v42 + 1) = v44;
  *((_OWORD *)v42 + 2) = *(_OWORD *)&v297[v41 + 32];
  v42[48] = v297[v41 + 48];
  v45 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v40(&v42[v45[8]], &v43[v45[8]], v23);
  v40(&v42[v45[9]], &v43[v45[9]], v23);
  v42[v45[10]] = v43[v45[10]];
  *(_QWORD *)&v39[v25[9]] = *(_QWORD *)&v297[v25[9]];
  *(_OWORD *)&v39[v25[10]] = *(_OWORD *)&v297[v25[10]];
  v296 = v25;
  v46 = v25[11];
  v47 = &v39[v46];
  v48 = &v297[v46];
  *(_OWORD *)v47 = *(_OWORD *)&v297[v46];
  v47[16] = v297[v46 + 16];
  *(_OWORD *)(v47 + 24) = *(_OWORD *)&v297[v46 + 24];
  v49 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v50 = v49[6];
  v51 = &v47[v50];
  v52 = &v48[v50];
  v53 = type metadata accessor for WeatherDescription(0);
  v286 = v53;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
  {
    v54 = sub_1000BA294(&qword_100BC3368);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v53);
  }
  v55 = v49[7];
  v56 = &v47[v55];
  v57 = &v48[v55];
  v58 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v57))
  {
    case 0u:
      (*(void (**)(char *, char *))(*(_QWORD *)(v286 - 8) + 32))(v56, v57);
      v59 = v56;
      v60 = v58;
      v61 = 0;
      goto LABEL_57;
    case 2u:
      v62 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v56, v57, v62);
      v59 = v56;
      v60 = v58;
      v61 = 2;
      goto LABEL_57;
    case 3u:
      v63 = sub_1000BA294(&qword_100BD30F8);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v56, v57, v63);
      v59 = v56;
      v60 = v58;
      v61 = 3;
      goto LABEL_57;
    case 4u:
      v282 = v58;
      v64 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v64;
      v65 = type metadata accessor for DetailComponentContainerViewModel(0);
      v66 = *(int *)(v65 + 20);
      v274 = v56;
      v67 = &v56[v66];
      v68 = &v57[v66];
      v69 = type metadata accessor for NewsArticleComponentViewModel(0);
      v278 = v49;
      if (swift_getEnumCaseMultiPayload(v68) == 1)
      {
        v262 = v69;
        v265 = v65;
        *(_OWORD *)v67 = *(_OWORD *)v68;
        v267 = v67;
        v270 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v70 = v270[5];
        v71 = &v67[v70];
        v72 = &v68[v70];
        v73 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
        {
          v74 = sub_1000BA294(&qword_100BD4280);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          v75 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v73 - 8) + 32);
        }
        else
        {
          v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32);
          v89(v71, v72, v73);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
          v75 = (void (*)(_QWORD, _QWORD, _QWORD))v89;
        }
        *(_OWORD *)((char *)v267 + v270[6]) = *(_OWORD *)&v68[v270[6]];
        v260 = (void (*)(char *, char *, uint64_t))v75;
        v75((char *)v267 + v270[7], &v68[v270[7]], v73);
        v90 = v270[8];
        v91 = (char *)v267 + v90;
        v92 = v68;
        v93 = &v68[v90];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v68[v90], 1, v73))
        {
          v94 = sub_1000BA294(&qword_100BD4280);
          memcpy(v91, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          v260(v91, v93, v73);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v73);
        }
        v65 = v265;
        v88 = v274;
        *((_BYTE *)v267 + v270[9]) = v92[v270[9]];
        swift_storeEnumTagMultiPayload(v267, v262, 1);
        v58 = v282;
      }
      else
      {
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        v58 = v282;
        v88 = v274;
      }
      v101 = *(int *)(v65 + 24);
      v102 = &v88[v101];
      v103 = &v57[v101];
      v104 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
      {
        v105 = sub_1000BA294(&qword_100BD3100);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        v106 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v102, v103, v106);
        v107 = sub_1000BA294(&qword_100BC5FE8);
        v102[*(int *)(v107 + 48)] = v103[*(int *)(v107 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
      }
      v39 = v295;
      v49 = v278;
      v59 = v88;
      v60 = v58;
      v61 = 4;
      goto LABEL_57;
    case 6u:
      v76 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v56, v57, v76);
      v59 = v56;
      v60 = v58;
      v61 = 6;
      goto LABEL_57;
    case 7u:
      v77 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      if (swift_getEnumCaseMultiPayload(v57) == 1)
      {
        v271 = v77;
        v275 = v23;
        v283 = v58;
        *(_OWORD *)v56 = *(_OWORD *)v57;
        v78 = type metadata accessor for ConditionDetailMapViewModel(0);
        v79 = *(int *)(v78 + 20);
        v80 = &v56[v79];
        v81 = &v57[v79];
        v82 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
        v268 = (int *)v78;
        v83 = *(int *)(v78 + 24);
        v84 = &v56[v83];
        v85 = &v57[v83];
        v86 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
        {
          v87 = sub_1000BA294(&qword_100BC3460);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          v279 = v49;
          *(_OWORD *)v84 = *(_OWORD *)v85;
          v95 = *(int *)(v86 + 20);
          v96 = v85;
          v97 = &v84[v95];
          v263 = (int *)v86;
          v266 = v96;
          v98 = (char *)v96 + v95;
          v99 = type metadata accessor for Locale(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
          {
            v100 = sub_1000BA294(&qword_100BC3340);
            memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
          }
          v108 = v263[6];
          v109 = &v84[v108];
          v110 = (uint64_t)v266 + v108;
          v111 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
          v112 = v263[7];
          v113 = &v84[v112];
          v114 = (char *)v266 + v112;
          v115 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
          {
            v116 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          }
          else
          {
            v291(v113, v114, v275);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
          }
          v117 = v263[8];
          v118 = &v84[v117];
          v119 = (char *)v266 + v117;
          v120 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v119) == 1)
          {
            v121 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v118, v119, v121);
            swift_storeEnumTagMultiPayload(v118, v120, 1);
          }
          else
          {
            memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          v122 = v263[9];
          v261 = (uint64_t)v84;
          v123 = &v84[v122];
          v124 = (char *)v266 + v122;
          v125 = type metadata accessor for WeatherDataOverrides(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
          {
            v126 = sub_1000BA294(&qword_100BC3350);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v275))
            {
              v127 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
            }
            else
            {
              v291(v123, v124, v275);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v275);
            }
            v128 = *(int *)(v125 + 20);
            v129 = &v123[v128];
            v130 = &v124[v128];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v275))
            {
              v131 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
            }
            else
            {
              v291(v129, v130, v275);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v275);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
          }
          v39 = v295;
          v49 = v279;
          _s7Weather24LocationCompositionStateOwst_0(v261, 0, 1, (uint64_t)v263);
        }
        *(_OWORD *)&v56[v268[7]] = *(_OWORD *)&v57[v268[7]];
        v132 = v268[8];
        v133 = &v56[v132];
        v134 = &v57[v132];
        v135 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
        v56[v268[9]] = v57[v268[9]];
        swift_storeEnumTagMultiPayload(v56, v271, 1);
        v58 = v283;
        v23 = v275;
      }
      else
      {
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      v59 = v56;
      v60 = v58;
      v61 = 7;
LABEL_57:
      swift_storeEnumTagMultiPayload(v59, v60, v61);
      break;
    default:
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      break;
  }
  v136 = v49[8];
  v137 = &v47[v136];
  v138 = &v48[v136];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v136], 1, v58))
  {
    v139 = sub_1000BA294(&qword_100BD3108);
    memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v138))
    {
      case 0u:
        (*(void (**)(char *, char *))(*(_QWORD *)(v286 - 8) + 32))(v137, v138);
        v140 = v137;
        v141 = v58;
        v142 = 0;
        goto LABEL_104;
      case 2u:
        v143 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v137, v138, v143);
        v140 = v137;
        v141 = v58;
        v142 = 2;
        goto LABEL_104;
      case 3u:
        v144 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v137, v138, v144);
        v140 = v137;
        v141 = v58;
        v142 = 3;
        goto LABEL_104;
      case 4u:
        v284 = v58;
        v145 = *((_OWORD *)v138 + 1);
        *(_OWORD *)v137 = *(_OWORD *)v138;
        *((_OWORD *)v137 + 1) = v145;
        v146 = type metadata accessor for DetailComponentContainerViewModel(0);
        v147 = *(int *)(v146 + 20);
        v148 = &v137[v147];
        v149 = &v138[v147];
        v150 = type metadata accessor for NewsArticleComponentViewModel(0);
        v280 = v49;
        if (swift_getEnumCaseMultiPayload(v149) == 1)
        {
          v276 = v150;
          v287 = v146;
          *(_OWORD *)v148 = *(_OWORD *)v149;
          v292 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v151 = v292[5];
          v152 = &v148[v151];
          v153 = &v149[v151];
          v154 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v153, 1, v154))
          {
            v155 = sub_1000BA294(&qword_100BD4280);
            memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
            v156 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32);
          }
          else
          {
            v170 = v153;
            v156 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32);
            v156(v152, v170, v154);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152, 0, 1, v154);
          }
          *(_OWORD *)&v148[v292[6]] = *(_OWORD *)&v149[v292[6]];
          v272 = v156;
          v156(&v148[v292[7]], &v149[v292[7]], v154);
          v171 = v292[8];
          v172 = &v148[v171];
          v173 = &v149[v171];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v149[v171], 1, v154))
          {
            v174 = sub_1000BA294(&qword_100BD4280);
            memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
          }
          else
          {
            v272(v172, v173, v154);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v154);
          }
          v146 = v287;
          v148[v292[9]] = v149[v292[9]];
          swift_storeEnumTagMultiPayload(v148, v276, 1);
        }
        else
        {
          memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
        }
        v58 = v284;
        v180 = *(int *)(v146 + 24);
        v181 = &v137[v180];
        v182 = &v138[v180];
        v183 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v182, 1, v183))
        {
          v184 = sub_1000BA294(&qword_100BD3100);
          memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
        }
        else
        {
          v185 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v181, v182, v185);
          v186 = sub_1000BA294(&qword_100BC5FE8);
          v181[*(int *)(v186 + 48)] = v182[*(int *)(v186 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v181, 0, 1, v183);
        }
        v39 = v295;
        v49 = v280;
        v140 = v137;
        v141 = v284;
        v142 = 4;
        goto LABEL_104;
      case 6u:
        v157 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v137, v138, v157);
        v140 = v137;
        v141 = v58;
        v142 = 6;
        goto LABEL_104;
      case 7u:
        v158 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v138) == 1)
        {
          v285 = v58;
          v288 = v158;
          *(_OWORD *)v137 = *(_OWORD *)v138;
          v159 = type metadata accessor for ConditionDetailMapViewModel(0);
          v160 = *(int *)(v159 + 20);
          v161 = &v137[v160];
          v162 = &v138[v160];
          v163 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v161, v162, v163);
          v277 = (int *)v159;
          v164 = *(int *)(v159 + 24);
          v165 = &v137[v164];
          v166 = &v138[v164];
          v167 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, v167))
          {
            v168 = sub_1000BA294(&qword_100BC3460);
            memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
            v39 = v295;
            v169 = v277;
          }
          else
          {
            v281 = v49;
            *(_OWORD *)v165 = *(_OWORD *)v166;
            v269 = v165;
            v273 = (int *)v167;
            v175 = *(int *)(v167 + 20);
            v176 = &v165[v175];
            v177 = &v166[v175];
            v178 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
            {
              v179 = sub_1000BA294(&qword_100BC3340);
              memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v178);
            }
            v187 = v273[6];
            v264 = (char *)v269 + v187;
            v188 = &v166[v187];
            v189 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v264, v188, v189);
            v190 = v273[7];
            v191 = (char *)v269 + v190;
            v192 = &v166[v190];
            v193 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
            {
              v194 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
            }
            else
            {
              v291(v191, v192, v23);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
            }
            v195 = v273[8];
            v196 = (char *)v269 + v195;
            v197 = &v166[v195];
            v198 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v197) == 1)
            {
              v199 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v196, v197, v199);
              swift_storeEnumTagMultiPayload(v196, v198, 1);
            }
            else
            {
              memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
            }
            v200 = (uint64_t)v269;
            v201 = v273[9];
            v202 = (char *)v269 + v201;
            v203 = &v166[v201];
            v204 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v204))
            {
              v205 = sub_1000BA294(&qword_100BC3350);
              memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
              v39 = v295;
              v169 = v277;
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v23))
              {
                v206 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
              }
              else
              {
                v291(v202, v203, v23);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v23);
              }
              v207 = *(int *)(v204 + 20);
              v208 = &v202[v207];
              v209 = &v203[v207];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v209, 1, v23))
              {
                v210 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
              }
              else
              {
                v291(v208, v209, v23);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v208, 0, 1, v23);
              }
              v169 = v277;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v204);
              v39 = v295;
              v200 = (uint64_t)v269;
            }
            _s7Weather24LocationCompositionStateOwst_0(v200, 0, 1, (uint64_t)v273);
            v49 = v281;
          }
          *(_OWORD *)&v137[v169[7]] = *(_OWORD *)&v138[v169[7]];
          v211 = v169[8];
          v212 = &v137[v211];
          v213 = &v138[v211];
          v214 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
          v137[v169[9]] = v138[v169[9]];
          swift_storeEnumTagMultiPayload(v137, v288, 1);
          v58 = v285;
        }
        else
        {
          memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        v140 = v137;
        v141 = v58;
        v142 = 7;
LABEL_104:
        swift_storeEnumTagMultiPayload(v140, v141, v142);
        break;
      default:
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v137, 0, 1, v58);
  }
  v47[v49[9]] = v48[v49[9]];
  v47[v49[10]] = v48[v49[10]];
  *(_QWORD *)&v39[v296[12]] = *(_QWORD *)&v297[v296[12]];
  v215 = v296[13];
  v216 = &v39[v215];
  v217 = &v297[v215];
  v218 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v217, 1, v218))
  {
    v219 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
    v221 = v289;
    v220 = v290;
  }
  else
  {
    v222 = *((_OWORD *)v217 + 1);
    *(_OWORD *)v216 = *(_OWORD *)v217;
    *((_OWORD *)v216 + 1) = v222;
    v223 = *(int *)(v218 + 20);
    v224 = &v216[v223];
    v225 = &v217[v223];
    v226 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v225) == 1)
    {
      v293 = v226;
      *(_OWORD *)v224 = *(_OWORD *)v225;
      v227 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v228 = v227[5];
      v229 = &v224[v228];
      v230 = &v225[v228];
      v231 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v230, 1, v231))
      {
        v232 = sub_1000BA294(&qword_100BD4280);
        memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
        v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32);
      }
      else
      {
        v234 = v230;
        v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32);
        v233(v229, v234, v231);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v229, 0, 1, v231);
      }
      *(_OWORD *)&v224[v227[6]] = *(_OWORD *)&v225[v227[6]];
      v235 = v233;
      v233(&v224[v227[7]], &v225[v227[7]], v231);
      v236 = v227[8];
      v237 = &v224[v236];
      v238 = &v225[v236];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v225[v236], 1, v231))
      {
        v239 = sub_1000BA294(&qword_100BD4280);
        memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
      }
      else
      {
        v235(v237, v238, v231);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v237, 0, 1, v231);
      }
      v34 = v294;
      v224[v227[9]] = v225[v227[9]];
      swift_storeEnumTagMultiPayload(v224, v293, 1);
    }
    else
    {
      memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
    }
    v221 = v289;
    v220 = v290;
    v240 = *(int *)(v218 + 24);
    v241 = &v216[v240];
    v242 = &v217[v240];
    v243 = type metadata accessor for DetailComponentAction(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v243))
    {
      v244 = sub_1000BA294(&qword_100BD3100);
      memcpy(v241, v242, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
    }
    else
    {
      v245 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v241, v242, v245);
      v246 = sub_1000BA294(&qword_100BC5FE8);
      v241[*(int *)(v246 + 48)] = v242[*(int *)(v246 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v243);
    }
    v39 = v295;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v216, 0, 1, v218);
  }
  v247 = v296[14];
  v248 = &v39[v247];
  v249 = &v297[v247];
  v250 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v250 - 8) + 32))(v248, v249, v250);
  v39[v296[15]] = v297[v296[15]];
  v251 = v221[8];
  v252 = v221[9];
  v253 = (uint64_t)v34 + v251;
  v254 = (uint64_t)v220 + v251;
  *(_QWORD *)(v253 + 32) = *(_QWORD *)(v254 + 32);
  v255 = *(_OWORD *)(v254 + 16);
  *(_OWORD *)v253 = *(_OWORD *)v254;
  *(_OWORD *)(v253 + 16) = v255;
  *(_OWORD *)((char *)v34 + v252) = *(_OWORD *)((char *)v220 + v252);
  v256 = v221[11];
  *(_OWORD *)((char *)v34 + v221[10]) = *(_OWORD *)((char *)v220 + v221[10]);
  *(_OWORD *)((char *)v34 + v256) = *(_OWORD *)((char *)v220 + v256);
  v257 = v221[13];
  *(_OWORD *)((char *)v34 + v221[12]) = *(_OWORD *)((char *)v220 + v221[12]);
  *(_OWORD *)((char *)v34 + v257) = *(_OWORD *)((char *)v220 + v257);
  v258 = v221[15];
  *(_OWORD *)((char *)v34 + v221[14]) = *(_OWORD *)((char *)v220 + v221[14]);
  *(_OWORD *)((char *)v34 + v258) = *(_OWORD *)((char *)v220 + v258);
  *(_OWORD *)((char *)v34 + v221[16]) = *(_OWORD *)((char *)v220 + v221[16]);
  return v34;
}

_QWORD *sub_1004CB160(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t EnumCaseMultiPayload;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  int v166;
  _OWORD *v167;
  int v168;
  _OWORD *v169;
  uint64_t v170;
  int v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _OWORD *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(char *, char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  int *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  _OWORD *v205;
  uint64_t v206;
  _OWORD *v207;
  _OWORD *v208;
  int *v209;
  uint64_t v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  __int128 v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  int *v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  void (*v226)(char *, char *, uint64_t);
  uint64_t v227;
  uint64_t v228;
  int *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  _OWORD *v235;
  uint64_t v236;
  _OWORD *v237;
  _OWORD *v238;
  int *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  char *v336;
  char *v337;
  char *v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  int v343;
  int v344;
  _QWORD *v345;
  __int128 v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  int *v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  void (*v356)(char *, char *, uint64_t);
  uint64_t v357;
  int *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  __int128 v372;
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  int *v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  void (*v383)(char *, char *, uint64_t);
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t v391;
  int v392;
  int v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  char *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  __int128 v404;
  uint64_t v405;
  _QWORD *v406;
  _QWORD *v407;
  uint64_t v408;
  _QWORD *v409;
  _QWORD *v410;
  uint64_t v411;
  _QWORD *v412;
  _QWORD *v413;
  uint64_t v414;
  _QWORD *v415;
  _QWORD *v416;
  uint64_t v417;
  _QWORD *v418;
  _QWORD *v419;
  uint64_t v420;
  _QWORD *v421;
  _QWORD *v422;
  uint64_t v423;
  _QWORD *v424;
  _QWORD *v425;
  uint64_t v426;
  _QWORD *v427;
  uint64_t *v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v432;
  uint64_t v433;
  void (*v434)(char *, char *, uint64_t);
  uint64_t v435;
  char *v436;
  void *v437;
  char *v438;
  char *v439;
  char *v440;
  char *v441;
  char *__dst;
  char *__dsta;
  int *__dstb;
  void *__dstc;
  void *__dstd;
  char *v447;
  uint64_t v448;
  char *v449;
  _OWORD *v450;
  char *v451;
  _OWORD *v452;
  int *v453;
  int *v454;
  int *v455;
  int *v456;
  int *v457;
  char *v458;
  int *v459;
  uint64_t v460;
  uint64_t v461;
  void (*v462)(char *, char *, uint64_t);
  void (*v463)(char *, char *, uint64_t);
  uint64_t v464;
  uint64_t v465;
  int *v466;
  _OWORD *v467;
  uint64_t v468;
  _QWORD *v469;
  char *v470;
  _QWORD *v471;
  char *v472;
  char *v473;
  char *v474;
  void (*v475)(char *, char *, uint64_t);
  char *v476;
  int *v477;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = v14[8];
  v16 = *(_QWORD *)v13;
  v17 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = (char)v14;
  sub_1000B15F8(v16, v17);
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)v20;
  LOBYTE(v20) = v20[8];
  v22 = *(_QWORD *)v19;
  v23 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = (char)v20;
  sub_1000B15F8(v22, v23);
  v466 = a3;
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v471 = a2;
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1 + v24, type metadata accessor for MoonDetailSelectedDate);
    v27 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v26);
    v29 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v25, v26, v29);
    swift_storeEnumTagMultiPayload(v25, v27, EnumCaseMultiPayload);
  }
  v30 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  v31 = v30[5];
  v32 = &v25[v31];
  v33 = &v26[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = v30[6];
  v37 = &v25[v36];
  v38 = &v26[v36];
  v40 = *(_QWORD *)v38;
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v477 = v30;
  v41 = v30[7];
  v42 = &v25[v41];
  v472 = v26;
  v43 = &v26[v41];
  v44 = type metadata accessor for Date(0);
  v461 = *(_QWORD *)(v44 - 8);
  v45 = *(void (**)(char *, char *, uint64_t))(v461 + 40);
  v45(v42, v43, v44);
  v46 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v42[v46[5]] = *(_QWORD *)&v43[v46[5]];
  v47 = v46[6];
  v48 = &v42[v47];
  v49 = &v43[v47];
  LODWORD(v30) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v42[v47], 1, v44);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v44);
  if ((_DWORD)v30)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v48, v49, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v44);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v461 + 8))(v48, v44);
LABEL_12:
    v51 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_13;
  }
  v45(v48, v49, v44);
LABEL_13:
  v52 = v46[7];
  v53 = &v42[v52];
  v54 = &v43[v52];
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v42[v52], 1, v44);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v44);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v53, v54, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v44);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v461 + 8))(v53, v44);
LABEL_18:
    v57 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_19;
  }
  v45(v53, v54, v44);
LABEL_19:
  v42[v46[8]] = v43[v46[8]];
  v58 = v477[8];
  v59 = &v25[v58];
  v60 = &v472[v58];
  v61 = *(_QWORD *)&v472[v58 + 8];
  *(_QWORD *)v59 = *(_QWORD *)&v472[v58];
  *((_QWORD *)v59 + 1) = v61;
  swift_bridgeObjectRelease();
  v62 = *((_QWORD *)v60 + 3);
  *((_QWORD *)v59 + 2) = *((_QWORD *)v60 + 2);
  *((_QWORD *)v59 + 3) = v62;
  swift_bridgeObjectRelease();
  v63 = *((_QWORD *)v60 + 5);
  *((_QWORD *)v59 + 4) = *((_QWORD *)v60 + 4);
  *((_QWORD *)v59 + 5) = v63;
  swift_bridgeObjectRelease();
  v59[48] = v60[48];
  v64 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v45(&v59[v64[8]], &v60[v64[8]], v44);
  v45(&v59[v64[9]], &v60[v64[9]], v44);
  v59[v64[10]] = v60[v64[10]];
  *(_QWORD *)&v25[v477[9]] = *(_QWORD *)&v472[v477[9]];
  swift_bridgeObjectRelease();
  v65 = v477[10];
  v66 = &v25[v65];
  v67 = &v472[v65];
  if (*(_QWORD *)&v25[v65])
  {
    if (*(_QWORD *)v67)
    {
      *(_QWORD *)v66 = *(_QWORD *)v67;
      swift_bridgeObjectRelease();
      *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    sub_10046CBB0(v66);
  }
  *(_OWORD *)v66 = *(_OWORD *)v67;
LABEL_24:
  v68 = v477[11];
  v470 = v25;
  v69 = &v25[v68];
  v70 = &v472[v68];
  LOBYTE(v68) = v472[v68 + 16];
  v71 = *(_QWORD *)v69;
  v72 = *((_QWORD *)v69 + 1);
  *(_OWORD *)v69 = *(_OWORD *)v70;
  v73 = v69[16];
  v69[16] = v68;
  sub_10006BD8C(v71, v72, v73);
  v74 = *((_QWORD *)v70 + 4);
  *((_QWORD *)v69 + 3) = *((_QWORD *)v70 + 3);
  *((_QWORD *)v69 + 4) = v74;
  swift_bridgeObjectRelease();
  v75 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v76 = v75[6];
  v473 = v69;
  v77 = &v69[v76];
  v78 = &v70[v76];
  v79 = type metadata accessor for WeatherDescription(0);
  LODWORD(v69) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v79);
  v80 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79);
  if ((_DWORD)v69)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  v81 = *(_QWORD *)(v79 - 8);
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v79);
LABEL_29:
    v82 = sub_1000BA294(&qword_100BC3368);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v81 + 40))(v77, v78, v79);
LABEL_30:
  v83 = v471;
  if (a1 != v471)
  {
    v453 = v75;
    v84 = v75[7];
    v85 = &v473[v84];
    v86 = &v70[v84];
    sub_1000215BC((uint64_t)&v473[v84], type metadata accessor for ConditionDetailPlatterViewModel.Body);
    v87 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload(v86))
    {
      case 0u:
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v85, v86, v79);
        v88 = v85;
        v89 = v87;
        v90 = 0;
        goto LABEL_78;
      case 2u:
        v91 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v85, v86, v91);
        v88 = v85;
        v89 = v87;
        v90 = 2;
        goto LABEL_78;
      case 3u:
        v92 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v85, v86, v92);
        v88 = v85;
        v89 = v87;
        v90 = 3;
        goto LABEL_78;
      case 4u:
        v93 = *((_OWORD *)v86 + 1);
        *(_OWORD *)v85 = *(_OWORD *)v86;
        *((_OWORD *)v85 + 1) = v93;
        v94 = type metadata accessor for DetailComponentContainerViewModel(0);
        v95 = *(int *)(v94 + 20);
        v96 = &v85[v95];
        v467 = v86;
        v97 = &v86[v95];
        v98 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v97) == 1)
        {
          v435 = v98;
          v437 = (void *)v94;
          *(_OWORD *)v96 = *(_OWORD *)v97;
          v99 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v100 = v99[5];
          v458 = v96;
          __dst = &v96[v100];
          v101 = &v97[v100];
          v102 = type metadata accessor for URL(0);
          v447 = v97;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
          {
            v103 = sub_1000BA294(&qword_100BD4280);
            memcpy(__dst, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
            v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32);
          }
          else
          {
            v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32);
            v117(__dst, v101, v102);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v102);
            v104 = v117;
          }
          *(_OWORD *)((char *)v458 + v99[6]) = *(_OWORD *)((char *)v447 + v99[6]);
          v434 = v104;
          v104((char *)v458 + v99[7], (char *)v447 + v99[7], v102);
          v118 = v99[8];
          __dsta = (char *)v458 + v118;
          v119 = (char *)v447 + v118;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v447 + v118, 1, v102))
          {
            v120 = sub_1000BA294(&qword_100BD4280);
            memcpy(__dsta, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          else
          {
            v434(__dsta, v119, v102);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v102);
          }
          *((_BYTE *)v458 + v99[9]) = *((_BYTE *)v447 + v99[9]);
          swift_storeEnumTagMultiPayload((char *)v458, v435, 1);
          v94 = (uint64_t)v437;
        }
        else
        {
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        v127 = *(int *)(v94 + 24);
        v128 = &v85[v127];
        v129 = (char *)v467 + v127;
        v130 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
        {
          v131 = sub_1000BA294(&qword_100BD3100);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          v132 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v128, v129, v132);
          v133 = sub_1000BA294(&qword_100BC5FE8);
          v128[*(int *)(v133 + 48)] = v129[*(int *)(v133 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
        }
        v75 = v453;
        swift_storeEnumTagMultiPayload(v85, v87, 4);
        v83 = v471;
        goto LABEL_80;
      case 6u:
        v105 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v85, v86, v105);
        v88 = v85;
        v89 = v87;
        v90 = 6;
        goto LABEL_78;
      case 7u:
        v106 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v86) == 1)
        {
          v448 = v87;
          v468 = v106;
          *(_OWORD *)v85 = *(_OWORD *)v86;
          v107 = type metadata accessor for ConditionDetailMapViewModel(0);
          v108 = *(int *)(v107 + 20);
          v109 = &v85[v108];
          v110 = &v86[v108];
          v111 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
          v459 = (int *)v107;
          v112 = *(int *)(v107 + 24);
          v113 = &v85[v112];
          v114 = &v86[v112];
          v115 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
          {
            v116 = sub_1000BA294(&qword_100BC3460);
            memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v113 = *(_OWORD *)v114;
            v121 = *(int *)(v115 + 20);
            v122 = v114;
            v123 = &v113[v121];
            v438 = v122;
            __dstb = (int *)v115;
            v124 = &v122[v121];
            v125 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
            {
              v126 = sub_1000BA294(&qword_100BC3340);
              memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
            }
            v134 = __dstb[6];
            v436 = &v113[v134];
            v135 = &v438[v134];
            v136 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v436, v135, v136);
            v137 = __dstb[7];
            v138 = &v113[v137];
            v139 = &v438[v137];
            v140 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v139, 1, v140))
            {
              v141 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v138, v139, v44);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v138, 0, 1, v140);
            }
            v142 = __dstb[8];
            v143 = &v113[v142];
            v144 = &v438[v142];
            v145 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v144) == 1)
            {
              v146 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v143, v144, v146);
              swift_storeEnumTagMultiPayload(v143, v145, 1);
            }
            else
            {
              memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
            }
            v147 = __dstb[9];
            v148 = &v113[v147];
            v149 = &v438[v147];
            v150 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
            {
              v151 = sub_1000BA294(&qword_100BC3350);
              memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v44))
              {
                v152 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v148, v149, v44);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v44);
              }
              v153 = *(int *)(v150 + 20);
              v439 = &v148[v153];
              v154 = &v149[v153];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v44))
              {
                v155 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v439, v154, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v439, v154, v44);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v439, 0, 1, v44);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v150);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, (uint64_t)__dstb);
            v83 = v471;
          }
          *(_OWORD *)&v85[v459[7]] = *(_OWORD *)&v86[v459[7]];
          v156 = v459[8];
          v157 = &v85[v156];
          v158 = &v86[v156];
          v159 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
          v85[v459[9]] = v86[v459[9]];
          swift_storeEnumTagMultiPayload(v85, v468, 1);
          v87 = v448;
        }
        else
        {
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        v88 = v85;
        v89 = v87;
        v90 = 7;
LABEL_78:
        swift_storeEnumTagMultiPayload(v88, v89, v90);
        break;
      default:
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        break;
    }
    v75 = v453;
  }
LABEL_80:
  v160 = v79;
  v469 = a1;
  v161 = v75[8];
  v162 = &v473[v161];
  v163 = v70;
  v164 = &v70[v161];
  v165 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v166 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v165);
  v167 = v164;
  v460 = v165;
  v168 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v165);
  if (v166)
  {
    if (!v168)
    {
      v169 = v164;
      v170 = v460;
      v171 = swift_getEnumCaseMultiPayload(v164);
      v172 = v163;
      switch(v171)
      {
        case 0:
          (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v162, v167, v160);
          v173 = v162;
          v174 = v460;
          v175 = 0;
          goto LABEL_164;
        case 2:
          v182 = type metadata accessor for AttributedString(0);
          (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v162, v167, v182);
          v173 = v162;
          v174 = v460;
          v175 = 2;
          goto LABEL_164;
        case 3:
          v183 = sub_1000BA294(&qword_100BD30F8);
          (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v162, v167, v183);
          v173 = v162;
          v174 = v460;
          v175 = 3;
          goto LABEL_164;
        case 4:
          v184 = v167[1];
          *(_OWORD *)v162 = *v167;
          *((_OWORD *)v162 + 1) = v184;
          v185 = type metadata accessor for DetailComponentContainerViewModel(0);
          v186 = *(int *)(v185 + 20);
          v187 = &v162[v186];
          v188 = (char *)v169 + v186;
          v189 = type metadata accessor for NewsArticleComponentViewModel(0);
          v454 = v75;
          if (swift_getEnumCaseMultiPayload(v188) == 1)
          {
            v449 = v162;
            *(_OWORD *)v187 = *(_OWORD *)v188;
            v190 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            v191 = v190[5];
            v192 = &v187[v191];
            v193 = &v188[v191];
            v194 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v194))
            {
              v195 = sub_1000BA294(&qword_100BD4280);
              memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
              v196 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32);
            }
            else
            {
              v241 = v193;
              v196 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32);
              v196(v192, v241, v194);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v194);
            }
            *(_OWORD *)&v187[v190[6]] = *(_OWORD *)&v188[v190[6]];
            v462 = v196;
            v196(&v187[v190[7]], &v188[v190[7]], v194);
            v242 = v190[8];
            v243 = &v187[v242];
            v244 = &v188[v242];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v188[v242], 1, v194))
            {
              v245 = sub_1000BA294(&qword_100BD4280);
              memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
            }
            else
            {
              v462(v243, v244, v194);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v194);
            }
            v187[v190[9]] = v188[v190[9]];
            swift_storeEnumTagMultiPayload(v187, v189, 1);
            v162 = v449;
          }
          else
          {
            memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
          }
          v251 = *(int *)(v185 + 24);
          v252 = v162;
          v253 = &v162[v251];
          v254 = (char *)v169 + v251;
          v255 = type metadata accessor for DetailComponentAction(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
          {
            v256 = sub_1000BA294(&qword_100BD3100);
            memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
          }
          else
          {
            v257 = type metadata accessor for URL(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(v253, v254, v257);
            v258 = sub_1000BA294(&qword_100BC5FE8);
            v253[*(int *)(v258 + 48)] = v254[*(int *)(v258 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v253, 0, 1, v255);
          }
          v162 = v252;
          v259 = v252;
          v75 = v454;
          v170 = v460;
          swift_storeEnumTagMultiPayload(v259, v460, 4);
          v83 = v471;
          break;
        case 6:
          v197 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
          (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v162, v167, v197);
          v173 = v162;
          v174 = v460;
          v175 = 6;
          goto LABEL_164;
        case 7:
          v198 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
          if (swift_getEnumCaseMultiPayload(v167) == 1)
          {
            __dstc = (void *)v198;
            *(_OWORD *)v162 = *v167;
            v199 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
            v200 = v199[5];
            v201 = &v162[v200];
            v450 = v162;
            v202 = (char *)v167 + v200;
            v203 = type metadata accessor for Location(0);
            v204 = v201;
            v205 = v450;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v204, v202, v203);
            v206 = v199[6];
            v207 = (_OWORD *)((char *)v450 + v206);
            v208 = (_OWORD *)((char *)v167 + v206);
            v209 = (int *)type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, (uint64_t)v209))
            {
              v210 = sub_1000BA294(&qword_100BC3460);
              memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
              v211 = __dstc;
            }
            else
            {
              v456 = v75;
              *v207 = *v208;
              v246 = v209[5];
              v440 = (char *)v207;
              v247 = (char *)v207 + v246;
              v248 = (char *)v208 + v246;
              v249 = type metadata accessor for Locale(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v249))
              {
                v250 = sub_1000BA294(&qword_100BC3340);
                memcpy(v247, v248, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v247, v248, v249);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v249);
              }
              v270 = v209[6];
              v271 = &v440[v270];
              v272 = (char *)v208 + v270;
              v273 = type metadata accessor for WeatherDataModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v273 - 8) + 32))(v271, v272, v273);
              v274 = v209[7];
              v275 = &v440[v274];
              v276 = (char *)v208 + v274;
              v277 = sub_1000BA294(&qword_100BC3348);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v276, 1, v277))
              {
                v278 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v275, v276, v44);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v275, 0, 1, v277);
              }
              v287 = v209[8];
              v288 = &v440[v287];
              v289 = (char *)v208 + v287;
              v290 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload(v289) == 1)
              {
                v291 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v288, v289, v291);
                swift_storeEnumTagMultiPayload(v288, v290, 1);
              }
              else
              {
                memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
              }
              v292 = v209[9];
              v293 = &v440[v292];
              v294 = (char *)v208 + v292;
              v295 = type metadata accessor for WeatherDataOverrides(0);
              v75 = v456;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, v295))
              {
                v296 = sub_1000BA294(&qword_100BC3350);
                memcpy(v293, v294, *(_QWORD *)(*(_QWORD *)(v296 - 8) + 64));
                v297 = (uint64_t)v209;
                v211 = __dstc;
              }
              else
              {
                v211 = __dstc;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, v44))
                {
                  v298 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v293, v294, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v293, v294, v44);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v293, 0, 1, v44);
                }
                v308 = *(int *)(v295 + 20);
                v309 = &v293[v308];
                v310 = &v294[v308];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v310, 1, v44))
                {
                  v311 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v309, v310, v44);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v309, 0, 1, v44);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v293, 0, 1, v295);
                v75 = v456;
                v297 = (uint64_t)v209;
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v440, 0, 1, v297);
              v83 = v471;
              v205 = v450;
            }
            *(_OWORD *)((char *)v205 + v199[7]) = *(_OWORD *)((char *)v169 + v199[7]);
            v322 = v199[8];
            v323 = (uint64_t)v205 + v322;
            v324 = (char *)v169 + v322;
            v325 = type metadata accessor for WeatherMapOverlayKind(0);
            v326 = v324;
            v162 = (char *)v450;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v325 - 8) + 32))(v323, v326, v325);
            *((_BYTE *)v450 + v199[9]) = *((_BYTE *)v169 + v199[9]);
            swift_storeEnumTagMultiPayload(v450, v211, 1);
            v170 = v460;
          }
          else
          {
            memcpy(v162, v167, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
          }
          v173 = v162;
          v174 = v170;
          v175 = 7;
LABEL_164:
          swift_storeEnumTagMultiPayload(v173, v174, v175);
          break;
        default:
          memcpy(v162, v167, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v170);
      goto LABEL_177;
    }
LABEL_86:
    v176 = sub_1000BA294(&qword_100BD3108);
    memcpy(v162, v164, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
    v172 = v163;
    goto LABEL_177;
  }
  if (v168)
  {
    sub_1000215BC((uint64_t)v162, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    goto LABEL_86;
  }
  v172 = v163;
  if (v469 != v83)
  {
    v177 = v167;
    sub_1000215BC((uint64_t)v162, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    v178 = v460;
    switch(swift_getEnumCaseMultiPayload(v167))
    {
      case 0u:
        (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v162, v167, v160);
        v179 = v162;
        v180 = v460;
        v181 = 0;
        goto LABEL_176;
      case 2u:
        v212 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v162, v167, v212);
        v179 = v162;
        v180 = v460;
        v181 = 2;
        goto LABEL_176;
      case 3u:
        v213 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v162, v167, v213);
        v179 = v162;
        v180 = v460;
        v181 = 3;
        goto LABEL_176;
      case 4u:
        v214 = v167[1];
        *(_OWORD *)v162 = *v167;
        *((_OWORD *)v162 + 1) = v214;
        v215 = type metadata accessor for DetailComponentContainerViewModel(0);
        v216 = *(int *)(v215 + 20);
        v217 = &v162[v216];
        v218 = (char *)v177 + v216;
        v219 = type metadata accessor for NewsArticleComponentViewModel(0);
        v455 = v75;
        if (swift_getEnumCaseMultiPayload(v218) == 1)
        {
          v451 = v162;
          *(_OWORD *)v217 = *(_OWORD *)v218;
          v220 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v221 = v220[5];
          v222 = &v217[v221];
          v223 = &v218[v221];
          v224 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
          {
            v225 = sub_1000BA294(&qword_100BD4280);
            memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
            v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 32);
          }
          else
          {
            v260 = v223;
            v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 32);
            v226(v222, v260, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
          }
          *(_OWORD *)&v217[v220[6]] = *(_OWORD *)&v218[v220[6]];
          v463 = v226;
          v226(&v217[v220[7]], &v218[v220[7]], v224);
          v261 = v220[8];
          v262 = &v217[v261];
          v263 = &v218[v261];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v218[v261], 1, v224))
          {
            v264 = sub_1000BA294(&qword_100BD4280);
            memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
          }
          else
          {
            v463(v262, v263, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, v224);
          }
          v217[v220[9]] = v218[v220[9]];
          swift_storeEnumTagMultiPayload(v217, v219, 1);
          v162 = v451;
        }
        else
        {
          memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
        }
        v279 = *(int *)(v215 + 24);
        v280 = v162;
        v281 = &v162[v279];
        v282 = (char *)v177 + v279;
        v283 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v282, 1, v283))
        {
          v284 = sub_1000BA294(&qword_100BD3100);
          memcpy(v281, v282, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
        }
        else
        {
          v285 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v285 - 8) + 32))(v281, v282, v285);
          v286 = sub_1000BA294(&qword_100BC5FE8);
          v281[*(int *)(v286 + 48)] = v282[*(int *)(v286 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v283);
        }
        v75 = v455;
        swift_storeEnumTagMultiPayload(v280, v460, 4);
        v83 = v471;
        break;
      case 6u:
        v227 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v162, v167, v227);
        v179 = v162;
        v180 = v460;
        v181 = 6;
        goto LABEL_176;
      case 7u:
        v228 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v167) == 1)
        {
          __dstd = (void *)v228;
          *(_OWORD *)v162 = *v167;
          v229 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
          v230 = v229[5];
          v231 = &v162[v230];
          v452 = v162;
          v232 = (char *)v167 + v230;
          v233 = type metadata accessor for Location(0);
          v234 = v231;
          v235 = v452;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 32))(v234, v232, v233);
          v236 = v229[6];
          v237 = (_OWORD *)((char *)v452 + v236);
          v238 = (_OWORD *)((char *)v167 + v236);
          v239 = (int *)type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v238, 1, (uint64_t)v239))
          {
            v240 = sub_1000BA294(&qword_100BC3460);
            memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
          }
          else
          {
            v457 = v75;
            *v237 = *v238;
            v265 = v239[5];
            v441 = (char *)v237;
            v266 = (char *)v237 + v265;
            v267 = (char *)v238 + v265;
            v268 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v267, 1, v268))
            {
              v269 = sub_1000BA294(&qword_100BC3340);
              memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v266, v267, v268);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v266, 0, 1, v268);
            }
            v299 = v239[6];
            v300 = &v441[v299];
            v301 = (char *)v238 + v299;
            v302 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v300, v301, v302);
            v303 = v239[7];
            v304 = &v441[v303];
            v305 = (char *)v238 + v303;
            v306 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v306))
            {
              v307 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v304, v305, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v304, v305, v44);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 1, v306);
            }
            v312 = v239[8];
            v313 = &v441[v312];
            v314 = (char *)v238 + v312;
            v315 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v314) == 1)
            {
              v316 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v316 - 8) + 32))(v313, v314, v316);
              swift_storeEnumTagMultiPayload(v313, v315, 1);
            }
            else
            {
              memcpy(v313, v314, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
            }
            v317 = v239[9];
            v318 = &v441[v317];
            v319 = (char *)v238 + v317;
            v320 = type metadata accessor for WeatherDataOverrides(0);
            v75 = v457;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v319, 1, v320))
            {
              v321 = sub_1000BA294(&qword_100BC3350);
              memcpy(v318, v319, *(_QWORD *)(*(_QWORD *)(v321 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v319, 1, v44))
              {
                v327 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v318, v319, *(_QWORD *)(*(_QWORD *)(v327 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v318, v319, v44);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v318, 0, 1, v44);
              }
              v328 = *(int *)(v320 + 20);
              v329 = &v318[v328];
              v330 = &v319[v328];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v330, 1, v44))
              {
                v331 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v329, v330, *(_QWORD *)(*(_QWORD *)(v331 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v329, v330, v44);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v329, 0, 1, v44);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v318, 0, 1, v320);
              v75 = v457;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v441, 0, 1, (uint64_t)v239);
            v83 = v471;
            v235 = v452;
          }
          *(_OWORD *)((char *)v235 + v229[7]) = *(_OWORD *)((char *)v177 + v229[7]);
          v332 = v229[8];
          v333 = (uint64_t)v235 + v332;
          v334 = (char *)v177 + v332;
          v335 = type metadata accessor for WeatherMapOverlayKind(0);
          v336 = v334;
          v162 = (char *)v452;
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v335 - 8) + 32))(v333, v336, v335);
          *((_BYTE *)v452 + v229[9]) = *((_BYTE *)v177 + v229[9]);
          swift_storeEnumTagMultiPayload(v452, __dstd, 1);
          v178 = v460;
        }
        else
        {
          memcpy(v162, v167, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
        }
        v179 = v162;
        v180 = v178;
        v181 = 7;
LABEL_176:
        swift_storeEnumTagMultiPayload(v179, v180, v181);
        break;
      default:
        memcpy(v162, v167, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
        break;
    }
  }
LABEL_177:
  v473[v75[9]] = v172[v75[9]];
  v473[v75[10]] = v172[v75[10]];
  v337 = v472;
  v338 = v470;
  *(_QWORD *)&v470[v477[12]] = *(_QWORD *)&v472[v477[12]];
  swift_bridgeObjectRelease();
  v339 = v477[13];
  v340 = &v470[v339];
  v341 = &v472[v339];
  v342 = type metadata accessor for DetailComponentContainerViewModel(0);
  v343 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v340, 1, v342);
  v344 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v341, 1, v342);
  if (!v343)
  {
    v345 = v469;
    if (v344)
    {
      sub_1000215BC((uint64_t)v340, type metadata accessor for DetailComponentContainerViewModel);
      goto LABEL_184;
    }
    if (*((_QWORD *)v340 + 1))
    {
      v359 = *((_QWORD *)v341 + 1);
      if (v359)
      {
        *(_QWORD *)v340 = *(_QWORD *)v341;
        *((_QWORD *)v340 + 1) = v359;
        swift_bridgeObjectRelease();
        v360 = *((_QWORD *)v341 + 3);
        *((_QWORD *)v340 + 2) = *((_QWORD *)v341 + 2);
        *((_QWORD *)v340 + 3) = v360;
        swift_bridgeObjectRelease();
        goto LABEL_200;
      }
      sub_10035C44C((uint64_t)v340);
    }
    v372 = *((_OWORD *)v341 + 1);
    *(_OWORD *)v340 = *(_OWORD *)v341;
    *((_OWORD *)v340 + 1) = v372;
LABEL_200:
    if (v469 != v83)
    {
      v373 = *(int *)(v342 + 20);
      v374 = &v340[v373];
      v375 = &v341[v373];
      sub_1000215BC((uint64_t)&v340[v373], type metadata accessor for NewsArticleComponentViewModel);
      v376 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v375) == 1)
      {
        v465 = v376;
        *(_OWORD *)v374 = *(_OWORD *)v375;
        v377 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v378 = v377[5];
        v379 = &v374[v378];
        v476 = v375;
        v380 = &v375[v378];
        v381 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v380, 1, v381))
        {
          v382 = sub_1000BA294(&qword_100BD4280);
          memcpy(v379, v380, *(_QWORD *)(*(_QWORD *)(v382 - 8) + 64));
          v383 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v381 - 8) + 32);
        }
        else
        {
          v383 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v381 - 8) + 32);
          v383(v379, v380, v381);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v379, 0, 1, v381);
        }
        *(_OWORD *)&v374[v377[6]] = *(_OWORD *)&v476[v377[6]];
        v383(&v374[v377[7]], &v476[v377[7]], v381);
        v384 = v377[8];
        v385 = &v374[v384];
        v386 = &v476[v384];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v476[v384], 1, v381))
        {
          v387 = sub_1000BA294(&qword_100BD4280);
          memcpy(v385, v386, *(_QWORD *)(*(_QWORD *)(v387 - 8) + 64));
        }
        else
        {
          v383(v385, v386, v381);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v385, 0, 1, v381);
        }
        v374[v377[9]] = v476[v377[9]];
        swift_storeEnumTagMultiPayload(v374, v465, 1);
      }
      else
      {
        memcpy(v374, v375, *(_QWORD *)(*(_QWORD *)(v376 - 8) + 64));
      }
      v337 = v472;
    }
    v388 = *(int *)(v342 + 24);
    v389 = &v340[v388];
    v390 = &v341[v388];
    v391 = type metadata accessor for DetailComponentAction(0);
    v392 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v389, 1, v391);
    v393 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v390, 1, v391);
    if (v392)
    {
      v358 = v466;
      if (!v393)
      {
        v394 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v394 - 8) + 32))(v389, v390, v394);
        v395 = sub_1000BA294(&qword_100BC5FE8);
        v389[*(int *)(v395 + 48)] = v390[*(int *)(v395 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v389, 0, 1, v391);
LABEL_217:
        v338 = v470;
        v83 = v471;
        goto LABEL_218;
      }
    }
    else
    {
      v358 = v466;
      if (!v393)
      {
        v432 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 40))(v389, v390, v432);
        v433 = sub_1000BA294(&qword_100BC5FE8);
        v389[*(int *)(v433 + 48)] = v390[*(int *)(v433 + 48)];
        goto LABEL_217;
      }
      sub_1000215BC((uint64_t)v389, type metadata accessor for DetailComponentAction);
    }
    v396 = sub_1000BA294(&qword_100BD3100);
    memcpy(v389, v390, *(_QWORD *)(*(_QWORD *)(v396 - 8) + 64));
    goto LABEL_217;
  }
  v345 = v469;
  if (v344)
  {
LABEL_184:
    v357 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v340, v341, *(_QWORD *)(*(_QWORD *)(v357 - 8) + 64));
    v358 = v466;
    goto LABEL_218;
  }
  v346 = *((_OWORD *)v341 + 1);
  *(_OWORD *)v340 = *(_OWORD *)v341;
  *((_OWORD *)v340 + 1) = v346;
  v347 = *(int *)(v342 + 20);
  v348 = &v340[v347];
  v349 = &v341[v347];
  v350 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload(v349) == 1)
  {
    *(_OWORD *)v348 = *(_OWORD *)v349;
    v351 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    v352 = v351[5];
    v474 = &v348[v352];
    v353 = &v349[v352];
    v354 = type metadata accessor for URL(0);
    v464 = v350;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v353, 1, v354))
    {
      v355 = sub_1000BA294(&qword_100BD4280);
      memcpy(v474, v353, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
      v356 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v354 - 8) + 32);
    }
    else
    {
      v356 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v354 - 8) + 32);
      v356(v474, v353, v354);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v474, 0, 1, v354);
    }
    *(_OWORD *)&v348[v351[6]] = *(_OWORD *)&v349[v351[6]];
    v475 = v356;
    v356(&v348[v351[7]], &v349[v351[7]], v354);
    v361 = v351[8];
    v362 = &v348[v361];
    v363 = &v349[v361];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v349[v361], 1, v354))
    {
      v364 = sub_1000BA294(&qword_100BD4280);
      memcpy(v362, v363, *(_QWORD *)(*(_QWORD *)(v364 - 8) + 64));
    }
    else
    {
      v475(v362, v363, v354);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v362, 0, 1, v354);
    }
    v348[v351[9]] = v349[v351[9]];
    swift_storeEnumTagMultiPayload(v348, v464, 1);
  }
  else
  {
    memcpy(v348, v349, *(_QWORD *)(*(_QWORD *)(v350 - 8) + 64));
  }
  v365 = *(int *)(v342 + 24);
  v366 = &v340[v365];
  v367 = &v341[v365];
  v368 = type metadata accessor for DetailComponentAction(0);
  v338 = v470;
  v337 = v472;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v367, 1, v368))
  {
    v369 = sub_1000BA294(&qword_100BD3100);
    memcpy(v366, v367, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
  }
  else
  {
    v370 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v370 - 8) + 32))(v366, v367, v370);
    v371 = sub_1000BA294(&qword_100BC5FE8);
    v366[*(int *)(v371 + 48)] = v367[*(int *)(v371 + 48)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v366, 0, 1, v368);
  }
  v358 = v466;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v340, 0, 1, v342);
  v83 = v471;
LABEL_218:
  v397 = v477[14];
  v398 = &v338[v397];
  v399 = &v337[v397];
  v400 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v400 - 8) + 40))(v398, v399, v400);
  v338[v477[15]] = v337[v477[15]];
  v401 = v358[8];
  v402 = (uint64_t)v345 + v401;
  v403 = (uint64_t)v83 + v401;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)v345 + v401));
  v404 = *(_OWORD *)(v403 + 16);
  *(_OWORD *)v402 = *(_OWORD *)v403;
  *(_OWORD *)(v402 + 16) = v404;
  *(_QWORD *)(v402 + 32) = *(_QWORD *)(v403 + 32);
  v405 = v358[9];
  v406 = (_QWORD *)((char *)v345 + v405);
  v407 = (_QWORD *)((char *)v83 + v405);
  *v406 = *v407;
  v406[1] = v407[1];
  swift_release();
  v408 = v358[10];
  v409 = (_QWORD *)((char *)v345 + v408);
  v410 = (_QWORD *)((char *)v83 + v408);
  *v409 = *v410;
  v409[1] = v410[1];
  swift_release();
  v411 = v358[11];
  v412 = (_QWORD *)((char *)v345 + v411);
  v413 = (_QWORD *)((char *)v83 + v411);
  *v412 = *v413;
  v412[1] = v413[1];
  swift_release();
  v414 = v358[12];
  v415 = (_QWORD *)((char *)v345 + v414);
  v416 = (_QWORD *)((char *)v83 + v414);
  *v415 = *v416;
  v415[1] = v416[1];
  swift_release();
  v417 = v358[13];
  v418 = (_QWORD *)((char *)v345 + v417);
  v419 = (_QWORD *)((char *)v83 + v417);
  *v418 = *v419;
  v418[1] = v419[1];
  swift_release();
  v420 = v358[14];
  v421 = (_QWORD *)((char *)v345 + v420);
  v422 = (_QWORD *)((char *)v83 + v420);
  *v421 = *v422;
  v421[1] = v422[1];
  swift_release();
  v423 = v358[15];
  v424 = (_QWORD *)((char *)v345 + v423);
  v425 = (_QWORD *)((char *)v83 + v423);
  *v424 = *v425;
  v424[1] = v425[1];
  swift_release();
  v426 = v358[16];
  v427 = (_QWORD *)((char *)v345 + v426);
  v428 = (_QWORD *)((char *)v83 + v426);
  v430 = *v428;
  v429 = v428[1];
  *v427 = v430;
  v427[1] = v429;
  swift_bridgeObjectRelease();
  return v345;
}

uint64_t sub_1004CD754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004CD760);
}

void sub_1004CD760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  sub_1000BA294(&qword_100BC6518);
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    sub_1000DF648();
    sub_100088FF0();
    if (!v9)
    {
      sub_1000D1EA0(*(int *)(a3 + 32));
      sub_100079F70();
      return;
    }
    v7 = v10;
    v8 = a1 + *(int *)(a3 + 28);
  }
  sub_1000B250C(v8, a2, v7);
}

uint64_t sub_1004CD7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004CD7DC);
}

void sub_1004CD7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_1000994F4();
  sub_1000BA294(&qword_100BC6518);
  sub_10009D2E8();
  if (v6)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    sub_1000DF648();
    sub_10009D2E8();
    if (!v6)
    {
      *(_QWORD *)(v1 + *(int *)(v2 + 32) + 24) = (v0 - 1);
      sub_100079F70();
      return;
    }
    v4 = v7;
    v5 = v1 + *(int *)(v2 + 28);
  }
  sub_1000987C4(v5, v0, v0, v4);
}

void sub_1004CD850(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[13];

  sub_100158A50(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\t";
    v6[2] = "\t";
    v4 = type metadata accessor for MoonDetailViewModel.Model(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_1009A5CA8;
      v6[5] = &unk_1009A5CC0;
      v6[6] = &unk_1009A5CC0;
      v6[7] = &unk_1009A5CC0;
      v6[8] = &unk_1009A5CC0;
      v6[9] = &unk_1009A5CC0;
      v6[10] = &unk_1009A5CC0;
      v6[11] = &unk_1009A5CC0;
      v6[12] = &unk_1009A5CD8;
      swift_initStructMetadata(a1, 256, 13, v6, a1 + 16);
    }
  }
}

unint64_t sub_1004CD90C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE7468;
  if (!qword_100BE7468)
  {
    v1 = sub_100075EB0(&qword_100BE7470);
    sub_10007AB60((uint64_t)&unk_100BE7398);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE7468);
  }
  return result;
}

uint64_t sub_1004CD990(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB6858, 1);
}

void sub_1004CD9A4(_QWORD *a1@<X8>, double a2@<D0>)
{
  uint64_t v4;

  v4 = sub_1000DA9FC();
  sub_1004BA6F0(v4, a1, a2);
}

void sub_1004CD9D8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1004BAD10(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 24));
}

unint64_t sub_1004CD9E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE74A8;
  if (!qword_100BE74A8)
  {
    v1 = sub_100075EB0(&qword_100BE74A0);
    sub_10007AB60((uint64_t)&unk_100BE74B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE74A8);
  }
  return result;
}

void sub_1004CDA6C()
{
  sub_1000DA9FC();
  sub_1004BF294();
}

unint64_t sub_1004CDA80()
{
  unint64_t result;

  result = qword_100BE7508;
  if (!qword_100BE7508)
  {
    result = swift_getWitnessTable(&unk_1009C318C, &type metadata for CloseButton);
    atomic_store(result, (unint64_t *)&qword_100BE7508);
  }
  return result;
}

uint64_t sub_1004CDAC0(uint64_t a1)
{
  return sub_1004CE058(a1, (uint64_t (*)(uint64_t))sub_1004C1394);
}

void sub_1004CDAD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1000BC334(a1);
  sub_1004BEDF4(v1, v2, v3);
}

uint64_t sub_1004CDB00(uint64_t a1, uint64_t a2)
{
  return sub_1004CE1D4(a1, a2, sub_1004BC140);
}

void *sub_1004CDB10(uint64_t a1)
{
  uint64_t *v1;
  void *v2;

  v1 = (uint64_t *)sub_1000BC334(a1);
  return sub_1004BD4E8(v1, v2);
}

uint64_t sub_1004CDB34(uint64_t a1, char a2, double a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1004B87FC(v6, v5, v4, a3);
}

uint64_t sub_1004CDB84(uint64_t *a1, uint64_t a2)
{
  return sub_1004B97D8(*a1, a1[1], a2);
}

uint64_t sub_1004CDBA4(double a1, uint64_t a2, char a3)
{
  char v4;
  uint64_t v5;

  v4 = a3 & 1;
  swift_bridgeObjectRetain();
  return sub_1004B8868(v5, v4, a1);
}

uint64_t sub_1004CDBDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004CDC00()
{
  uint64_t v0;

  return sub_1004CDBA4(*(double *)(v0 + 32), v0 + 16, *(_BYTE *)(v0 + 24));
}

uint64_t sub_1004CDC14(uint64_t a1, uint64_t a2)
{
  return sub_1004CDC28(a1, a2, (void (*)(_QWORD))type metadata accessor for MoonDetailRootContentView, (uint64_t (*)(uint64_t, uint64_t))sub_1004BD770);
}

uint64_t sub_1004CDC28(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  a3(0);
  sub_100099B10();
  return a4(a1, a2);
}

void *sub_1004CDC80(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  __n128 v3;

  v1 = (uint64_t *)sub_1000BC334(a1);
  return sub_1004BDB08(v1, v2, v3);
}

uint64_t sub_1004CDCA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004CDCD0()
{
  uint64_t v0;

  return sub_1004CDB34(v0 + 16, *(_BYTE *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1004CDCE4(uint64_t a1, uint64_t a2)
{
  return sub_1004CDC28(a1, a2, (void (*)(_QWORD))type metadata accessor for MoonDetailRootContentView, (uint64_t (*)(uint64_t, uint64_t))sub_1004BDF24);
}

unint64_t sub_1004CDCF8()
{
  unint64_t result;

  result = qword_100BE7610;
  if (!qword_100BE7610)
  {
    result = swift_getWitnessTable(&unk_100998F24, &type metadata for MoonCompactOverviewTableViewModel);
    atomic_store(result, (unint64_t *)&qword_100BE7610);
  }
  return result;
}

uint64_t sub_1004CDD34()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004CDD5C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100376F74(a1);
}

uint64_t sub_1004CDD80()
{
  return 16;
}

__n128 sub_1004CDD8C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1004CDD98(void *a1)
{
  bzero(a1, 0x178uLL);
}

_QWORD *sub_1004CDDA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[10];
  v3 = a1[12];
  v4 = a1[40];
  v5 = a1[44];
  v6 = a1[46];
  swift_retain(a1[3]);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

double sub_1004CDE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  double result;

  if (a4)
  {
    swift_retain(a4);
    swift_bridgeObjectRetain(a11);
    swift_retain(a13);
    swift_retain(a41);
    swift_retain(a45);
    *(_QWORD *)&result = swift_retain(a47).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004CDE84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = sub_10009987C(a1);
  v11 = *(_OWORD *)(v1 + 336);
  v12 = *(_OWORD *)(v1 + 352);
  v9 = *(_OWORD *)(v1 + 304);
  v10 = *(_OWORD *)(v1 + 320);
  v7 = *(_OWORD *)(v1 + 272);
  v8 = *(_OWORD *)(v1 + 288);
  v5 = *(_OWORD *)(v1 + 240);
  v6 = *(_OWORD *)(v1 + 256);
  v3(v2, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144),
    *(_QWORD *)(v1 + 152),
    *(_QWORD *)(v1 + 160),
    *(_QWORD *)(v1 + 168),
    *(_QWORD *)(v1 + 176),
    *(_QWORD *)(v1 + 184),
    *(_QWORD *)(v1 + 192),
    *(_QWORD *)(v1 + 200),
    *(_QWORD *)(v1 + 208),
    *(_QWORD *)(v1 + 216),
    *(_QWORD *)(v1 + 224),
    *(_QWORD *)(v1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    *(_QWORD *)(v1 + 368));
  return v1;
}

uint64_t sub_1004CDF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t result;

  if (a4)
  {
    swift_release(a4);
    swift_bridgeObjectRelease(a11);
    swift_release(a13);
    swift_release(a41);
    swift_release(a45);
    return swift_release(a47);
  }
  return result;
}

_QWORD *sub_1004CDF8C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[10];
  v4 = a1[12];
  v5 = a1[40];
  v6 = a1[44];
  swift_release(a1[46]);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  return a1;
}

uint64_t *sub_1004CE000(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[7];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  return a1;
}

uint64_t sub_1004CE04C(uint64_t a1)
{
  return sub_1004CE058(a1, (uint64_t (*)(uint64_t))sub_1004BF53C);
}

uint64_t sub_1004CE058(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  type metadata accessor for MoonDetailRootContentView(0);
  sub_1000987F4();
  return a2(a1);
}

unint64_t sub_1004CE094()
{
  unint64_t result;

  result = qword_100BE7678;
  if (!qword_100BE7678)
  {
    result = swift_getWitnessTable(&unk_1009B0088, &type metadata for OverviewTableViewModel);
    atomic_store(result, (unint64_t *)&qword_100BE7678);
  }
  return result;
}

uint64_t sub_1004CE0D0(uint64_t *a1, uint64_t a2)
{
  return sub_1004B9848(*a1, a2);
}

uint64_t sub_1004CE0F0(uint64_t a1)
{
  return sub_1004CE058(a1, (uint64_t (*)(uint64_t))sub_1004BF728);
}

_QWORD *sub_1004CE0FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[31];
  v3 = a1[33];
  swift_retain(a1[28]);
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

_QWORD *sub_1004CE144(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[28];
  v3 = a1[31];
  swift_release(a1[33]);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

uint64_t sub_1004CE190(uint64_t a1, uint64_t a2)
{
  return sub_1004CDC28(a1, a2, (void (*)(_QWORD))type metadata accessor for MoonDetailRootContentView, (uint64_t (*)(uint64_t, uint64_t))sub_1004BCA18);
}

uint64_t sub_1004CE1A8(uint64_t a1)
{
  return sub_1004CE058(a1, (uint64_t (*)(uint64_t))sub_1004C1620);
}

uint64_t sub_1004CE1B8(uint64_t a1)
{
  return sub_1004CE058(a1, (uint64_t (*)(uint64_t))sub_1004C11A8);
}

uint64_t sub_1004CE1C8(uint64_t a1, uint64_t a2)
{
  return sub_1004CE1D4(a1, a2, sub_1004C05E0);
}

uint64_t sub_1004CE1D4(uint64_t a1, uint64_t a2, double (*a3)(double, double, double, double))
{
  uint64_t v6;

  type metadata accessor for MoonDetailRootContentView(0);
  sub_100099B10();
  return sub_1004C047C(a1, a2, v6, a3);
}

uint64_t type metadata accessor for MoonContainerView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE7750, (uint64_t)&nominal type descriptor for MoonContainerView);
}

ValueMetadata *type metadata accessor for MoonScrubberContainerView()
{
  return &type metadata for MoonScrubberContainerView;
}

uint64_t *sub_1004CE258(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t, __n128);
  __n128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = a3[5];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = v15[8];
    sub_10008D47C(*(_QWORD *)v15, v17);
    *(_QWORD *)v14 = v16;
    v14[8] = v17;
    v18 = a3[6];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)v20;
    v22 = v20[8];
    sub_10008D47C(*(_QWORD *)v20, v22);
    *(_QWORD *)v19 = v21;
    v19[8] = v22;
    v23 = a3[7];
    v24 = a3[8];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *v25 = *v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    v27 = (char *)a1 + v24;
    v28 = (char *)a2 + v24;
    v29 = type metadata accessor for Date(0);
    v30 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v29 - 8) + 16);
    v31 = swift_retain();
    v30(v27, v28, v29, v31);
    v32 = (int *)type metadata accessor for MoonViewModel(0);
    *(_QWORD *)&v27[v32[5]] = *(_QWORD *)&v28[v32[5]];
    v33 = v32[6];
    v34 = &v27[v33];
    v35 = &v28[v33];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v28[v33], 1, v29))
    {
      v36 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v30)(v34, v35, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v29);
    }
    v37 = v32[7];
    v38 = &v27[v37];
    v39 = &v28[v37];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v28[v37], 1, v29))
    {
      v40 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v30)(v38, v39, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v29);
    }
    v27[v32[8]] = v28[v32[8]];
    v41 = a3[9];
    v42 = *(_OWORD *)((char *)a2 + v41 + 24);
    *(_OWORD *)((char *)a1 + v41 + 24) = v42;
    (**(void (***)(void))(v42 - 8))();
    v43 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v43) = *(uint64_t *)((char *)a2 + v43);
    v44 = a3[12];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    v47 = type metadata accessor for CoordinateSpace(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[14];
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)a1 + v48) = *(uint64_t *)((char *)a2 + v48);
    v49 = a3[16];
    *(uint64_t *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)a1 + v49) = *(uint64_t *)((char *)a2 + v49);
  }
  return a1;
}

uint64_t sub_1004CE55C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    v4 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  swift_release();
  v5 = a1 + a2[8];
  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = type metadata accessor for MoonViewModel(0);
  v9 = v5 + *(int *)(v8 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v6))
    v7(v9, v6);
  v10 = v5 + *(int *)(v8 + 28);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v6))
    v7(v10, v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + a2[9]));
  v11 = a1 + a2[12];
  v12 = type metadata accessor for CoordinateSpace(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *sub_1004CE6C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t, __n128);
  __n128 v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_10008D47C(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_10008D47C(*(_QWORD *)v18, v20);
  *(_QWORD *)v17 = v19;
  v17[8] = v20;
  v21 = a3[7];
  v22 = a3[8];
  v23 = (char *)a1 + v21;
  v24 = (char *)a2 + v21;
  *v23 = *v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  v25 = (char *)a1 + v22;
  v26 = (char *)a2 + v22;
  v27 = type metadata accessor for Date(0);
  v28 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v27 - 8) + 16);
  v29 = swift_retain();
  v28(v25, v26, v27, v29);
  v30 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v25[v30[5]] = *(_QWORD *)&v26[v30[5]];
  v31 = v30[6];
  v32 = &v25[v31];
  v33 = &v26[v31];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v26[v31], 1, v27))
  {
    v34 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v28)(v32, v33, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v27);
  }
  v35 = v30[7];
  v36 = &v25[v35];
  v37 = &v26[v35];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v26[v35], 1, v27))
  {
    v38 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v28)(v36, v37, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v27);
  }
  v25[v30[8]] = v26[v30[8]];
  v39 = a3[9];
  v40 = *(_OWORD *)((char *)a2 + v39 + 24);
  *(_OWORD *)((char *)a1 + v39 + 24) = v40;
  (**(void (***)(void))(v40 - 8))();
  v41 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v41) = *(_QWORD *)((char *)a2 + v41);
  v42 = a3[12];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);
  v47 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v47) = *(_QWORD *)((char *)a2 + v47);
  return a1;
}

_QWORD *sub_1004CE99C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BC2908);
    v6 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_10008D47C(*(_QWORD *)v13, v15);
  v16 = *(_QWORD *)v12;
  v17 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  sub_1000B15F8(v16, v17);
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = v20[8];
  sub_10008D47C(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = v22;
  sub_1000B15F8(v23, v24);
  v25 = a3[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *v26 = *v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_retain();
  swift_release();
  v28 = a3[8];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for Date(0);
  v51 = *(_QWORD *)(v31 - 8);
  v50 = *(void (**)(char *, char *, uint64_t))(v51 + 24);
  v50(v29, v30, v31);
  v32 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v29[v32[5]] = *(_QWORD *)&v30[v32[5]];
  v33 = v32[6];
  v34 = &v29[v33];
  v35 = &v30[v33];
  v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v29[v33], 1, v31);
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v31);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v34, v35, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v31);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v31);
LABEL_11:
    v38 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_12;
  }
  v50(v34, v35, v31);
LABEL_12:
  v39 = v32[7];
  v40 = &v29[v39];
  v41 = &v30[v39];
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v29[v39], 1, v31);
  v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v31);
  if (!v42)
  {
    if (!v43)
    {
      v50(v40, v41, v31);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v31);
    goto LABEL_17;
  }
  if (v43)
  {
LABEL_17:
    v44 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v40, v41, v31);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v31);
LABEL_18:
  v29[v32[8]] = v30[v32[8]];
  sub_100094D04((_QWORD *)((char *)a1 + a3[9]), (_QWORD *)((char *)a2 + a3[9]));
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v45 = a3[12];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  return a1;
}

char *sub_1004CED58(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = &a1[v9];
  v13 = &a2[v9];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for Date(0);
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v19 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v15[v19[5]] = *(_QWORD *)&v16[v19[5]];
  v20 = v19[6];
  v21 = &v15[v20];
  v22 = &v16[v20];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v16[v20], 1, v17))
  {
    v23 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v18(v21, v22, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v17);
  }
  v24 = v19[7];
  v25 = &v15[v24];
  v26 = &v16[v24];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v16[v24], 1, v17))
  {
    v27 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v18(v25, v26, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v17);
  }
  v15[v19[8]] = v16[v19[8]];
  v28 = a3[9];
  v29 = a3[10];
  v30 = &a1[v28];
  v31 = &a2[v28];
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];
  v33 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
  v37 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  v38 = a3[16];
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
  *(_QWORD *)&a1[v38] = *(_QWORD *)&a2[v38];
  return a1;
}

char *sub_1004CEFEC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BC2908);
    v6 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  v12 = *(_QWORD *)v9;
  v13 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  sub_1000B15F8(v12, v13);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(_QWORD *)v16;
  LOBYTE(v16) = v16[8];
  v18 = *(_QWORD *)v15;
  v19 = v15[8];
  *(_QWORD *)v15 = v17;
  v15[8] = (char)v16;
  sub_1000B15F8(v18, v19);
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *v21 = *v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_release();
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for Date(0);
  v53 = *(_QWORD *)(v26 - 8);
  v52 = *(void (**)(char *, char *, uint64_t))(v53 + 40);
  v52(v24, v25, v26);
  v27 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v24[v27[5]] = *(_QWORD *)&v25[v27[5]];
  v28 = v27[6];
  v29 = &v24[v28];
  v30 = &v25[v28];
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v24[v28], 1, v26);
  v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v26);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v29, v30, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v26);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v26);
LABEL_10:
    v33 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_11;
  }
  v52(v29, v30, v26);
LABEL_11:
  v34 = v27[7];
  v35 = &v24[v34];
  v36 = &v25[v34];
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v24[v34], 1, v26);
  v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v26);
  if (!v37)
  {
    if (!v38)
    {
      v52(v35, v36, v26);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v26);
    goto LABEL_16;
  }
  if (v38)
  {
LABEL_16:
    v39 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v35, v36, v26);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v26);
LABEL_17:
  v24[v27[8]] = v25[v27[8]];
  v40 = a3[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&a1[v40]);
  v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
  v44 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];
  v45 = a3[12];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = type metadata accessor for CoordinateSpace(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v46, v47, v48);
  v49 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_QWORD *)&a1[v49] = *(_QWORD *)&a2[v49];
  v50 = a3[16];
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
  *(_QWORD *)&a1[v50] = *(_QWORD *)&a2[v50];
  return a1;
}

uint64_t sub_1004CF38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004CF398);
}

void sub_1004CF398(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000BA294(&qword_100BC3800);
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    sub_1000C0EC4();
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v11 = a3[8];
    }
    else
    {
      if ((_DWORD)a2 == 0x7FFFFFFF)
      {
        sub_1000D1EA0(a3[9]);
        sub_100079F70();
        return;
      }
      v7 = sub_1000C537C();
      v11 = a3[12];
    }
    v8 = a1 + v11;
  }
  sub_1000B250C(v8, a2, v7);
}

uint64_t sub_1004CF424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004CF430);
}

void sub_1004CF430()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000994F4();
  sub_1000BA294(&qword_100BC3800);
  sub_10009D2E8();
  if (v7)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    sub_1000C0EC4();
    sub_10009D2E8();
    if (v7)
    {
      v5 = v8;
      v9 = v2[8];
    }
    else
    {
      if (v3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(v1 + v2[9] + 24) = (v0 - 1);
        sub_100079F70();
        return;
      }
      v5 = sub_1000C537C();
      v9 = v2[12];
    }
    v6 = v1 + v9;
  }
  sub_1000987C4(v6, v0, v0, v5);
}

void sub_1004CF4C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[13];

  sub_100158C28(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = "\t";
    v8[2] = "\t";
    v8[3] = &unk_1009A5CC0;
    v4 = type metadata accessor for MoonViewModel(319);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      v8[5] = &unk_1009A5CA8;
      v8[6] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[7] = (char *)&value witness table for Builtin.Int64 + 64;
      v6 = type metadata accessor for CoordinateSpace(319);
      if (v7 <= 0x3F)
      {
        v8[8] = *(_QWORD *)(v6 - 8) + 64;
        v8[9] = (char *)&value witness table for Builtin.Int64 + 64;
        v8[10] = (char *)&value witness table for Builtin.Int64 + 64;
        v8[11] = (char *)&value witness table for Builtin.Int64 + 64;
        v8[12] = (char *)&value witness table for Builtin.Int64 + 64;
        swift_initStructMetadata(a1, 256, 13, v8, a1 + 16);
      }
    }
  }
}

void sub_1004CF594()
{
  sub_10007AB60((uint64_t)&unk_100BE77B8);
}

uint64_t sub_1004CF5C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB68A8, 1);
}

uint64_t sub_1004CF5D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB6880, 1);
}

uint64_t sub_1004CF5E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004CF5F0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1004C28FC(a1, a2, *(double *)(v2 + 16));
}

double sub_1004CF5FC(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for MoonContainerView(0);
  sub_1000987F4();
  return sub_1004C26E0(a1, v2);
}

uint64_t sub_1004CF628()
{
  uint64_t v0;

  return sub_1004C2740(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1004CF648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = type metadata accessor for MoonContainerView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = sub_1000BA294(&qword_100BC2908);
  v17 = v5;
  if (sub_100098814(v7) == 1)
  {
    type metadata accessor for LayoutDirection(0);
    sub_1000C092C();
    v8(v0 + v4);
  }
  else
  {
    swift_release();
  }
  sub_1000C55A8();
  sub_1000C2470(v9);
  v10 = v6 + *(int *)(v1 + 32);
  v11 = sub_100098778();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  sub_1000DDBF8();
  v13 = sub_1000C0EC4();
  v14 = v10 + *(int *)(v13 + 24);
  if (!sub_1000B4560(v14))
    v12(v14, v11);
  if (!sub_1000B4560(v10 + *(int *)(v13 + 28)))
    sub_1000DDBF8();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v6 + *(int *)(v1 + 36)));
  v15 = sub_1000C537C();
  sub_10003BC44(v15);
  return swift_deallocObject(v0, v4 + v17, v3 | 7);
}

uint64_t sub_1004CF780(uint64_t a1, uint64_t a2)
{
  return sub_1004CDC28(a1, a2, (void (*)(_QWORD))type metadata accessor for MoonContainerView, (uint64_t (*)(uint64_t, uint64_t))sub_1004C2044);
}

unint64_t sub_1004CF794()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE7818;
  if (!qword_100BE7818)
  {
    v1 = sub_100075EB0(&qword_100BE77F0);
    sub_10007A100((uint64_t)&unk_100BE7820);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE7818);
  }
  return result;
}

void sub_1004CF818()
{
  sub_10007AB60((uint64_t)&unk_100BE7838);
}

void sub_1004CF844()
{
  sub_10007AB60((uint64_t)&unk_100BE7848);
}

uint64_t sub_1004CF874()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000992C4();
  v0 = sub_100051B90(&qword_100BC35B0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  sub_1000C5AFC(v0);
  sub_1000BC36C();
  sub_100098778();
  v1 = sub_100051B90((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  return sub_1000C5AFC(v1);
}

uint64_t sub_1004CF8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((static Location.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(sub_1000BC36C() + 20);
  return static Date.== infix(_:_:)(a1 + v4, a2 + v4);
}

Swift::Int sub_1004CF93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  sub_1000992C4();
  v0 = sub_100051B90(&qword_100BC35B0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  sub_1000AE878(v0, v1);
  sub_1000BC36C();
  sub_100098778();
  v2 = sub_100051B90((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  sub_1000AE878(v2, v3);
  return Hasher._finalize()();
}

Swift::Int sub_1004CF9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  v0 = type metadata accessor for Location(0);
  v1 = sub_100051B90(&qword_100BC35B0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  dispatch thunk of Hashable.hash(into:)(v5, v0, v1);
  v2 = type metadata accessor for Date(0);
  v3 = sub_100051B90((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v5, v2, v3);
  return Hasher._finalize()();
}

double sub_1004CFA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(v1 + 16);
  sub_100094EE4();
  Cache.subscript.getter(a1);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_1004CFACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1000BA294(&qword_100BC52F8);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000992C4();
  __chkstk_darwin(v7);
  sub_100098694();
  sub_1000E70DC(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16));
  sub_1000A6594(a2, (uint64_t)v6, type metadata accessor for SunriseSunsetMonthlyViewModel);
  v9 = type metadata accessor for SunriseSunsetMonthlyViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v9);
  sub_100094EE4();
  Cache.subscript.setter(v6, v2);
  return sub_10009880C();
}

void sub_1004CFBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_1000BC36C();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098694();
  v5 = sub_1000992C4();
  sub_1000E70DC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  sub_100098778();
  v6 = sub_1000DF6A4();
  v7(v6, a2);
  sub_100094EE4();
  Cache.subscript.getter(v2);
  sub_10009880C();
  sub_1004D0358(v2);
  sub_10004A2A0();
}

uint64_t sub_1004CFC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1000BC36C();
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v18 - v11;
  sub_1000992C4();
  v13 = sub_1000DF6A4();
  v14(v13, a1);
  v15 = &v12[*(int *)(v6 + 20)];
  v16 = sub_100098778();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a2, v16);
  sub_1000A6594((uint64_t)v12, (uint64_t)v9, type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey);
  v19 = a3;
  sub_100094EE4();
  swift_bridgeObjectRetain(a3);
  Cache.subscript.setter(&v19, v9);
  sub_10009880C();
  return sub_1004D0358((uint64_t)v12);
}

uint64_t sub_1004CFD40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t sub_1004CFD64()
{
  uint64_t v0;

  sub_1004CFD40();
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SunriseSunsetDetailViewDataCache()
{
  return objc_opt_self(_TtC7Weather32SunriseSunsetDetailViewDataCache);
}

uint64_t *sub_1004CFDA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1004CFE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1004CFEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004CFF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004CFFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004D001C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004D0098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D00A4);
}

uint64_t sub_1004D00A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1000992C4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = sub_100098778();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_1004D0104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D0110);
}

uint64_t sub_1004D0110(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1000992C4();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = sub_100098778();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

uint64_t type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE7958;
  if (!qword_100BE7958)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SunriseSunsetDetailViewDataCache.ElevationCacheKey);
  return result;
}

uint64_t sub_1004D01B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004D0234()
{
  return sub_100051B90(&qword_100BE7990, type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey, (uint64_t)&unk_1009A5F64);
}

void sub_1004D0260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000992C4();
  type metadata accessor for SunriseSunsetMonthlyViewModel(0);
  sub_100051B90(&qword_100BC35B0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v1 = sub_1000BA294(&qword_100BE7998);
  sub_1000860C4(v1);
  *(_QWORD *)(v0 + 16) = sub_1000C3BC0();
  sub_1000BC36C();
  sub_1000BA294(&qword_100BC5380);
  sub_100051B90(&qword_100BE79A0, type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey, (uint64_t)&unk_1009A5F8C);
  Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v2 = sub_1000BA294(&qword_100BE79A8);
  sub_1000860C4(v2);
  *(_QWORD *)(v0 + 24) = sub_1000C3BC0();
  sub_10004A2A0();
}

uint64_t sub_1004D0358(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1004D0394(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for CurrentWeather(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

uint64_t sub_1004D0420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_1004D0480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_1004D04EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004D0548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_1004D05AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D05B8);
}

uint64_t sub_1004D05B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for CurrentWeather(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1004D0630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D063C);
}

uint64_t sub_1004D063C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for CurrentWeather(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1004D06B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((static CurrentWeather.== infix(_:_:)(a1, a2) & 1) != 0)
  {
    v22 = *(int *)(type metadata accessor for DailyForecastComponent(0) + 20);
    sub_100086D8C(*(_QWORD *)(a1 + v22), *(_QWORD *)(a2 + v22), v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20);
  }
}

uint64_t sub_1004D06FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v17;
  uint64_t v18;
  char v19;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BE7A58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1004D0AE8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for DailyForecastComponent.CodingKeys, &type metadata for DailyForecastComponent.CodingKeys, v12, v10, v11);
  v19 = 0;
  v13 = type metadata accessor for CurrentWeather(0);
  v14 = sub_100387E1C(&qword_100BDC670, (uint64_t)&protocol conformance descriptor for CurrentWeather);
  sub_1000C26D4(v3, (uint64_t)&v19, v5, v13, v14);
  if (!v2)
  {
    v18 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for DailyForecastComponent(0) + 20));
    v17 = 1;
    v15 = sub_1004D0BE0();
    sub_1000C26D4((uint64_t)&v18, (uint64_t)&v17, v5, (uint64_t)&type metadata for DailyForecastComponentPreprocessedDataModel, v15);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1004D0844@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v18 = type metadata accessor for CurrentWeather(0);
  v15 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_100098728();
  v16 = v5 - v4;
  v17 = sub_1000BA294(&qword_100BE7A40);
  __chkstk_darwin(v17);
  sub_100098728();
  v6 = type metadata accessor for DailyForecastComponent(0);
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v11 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v11);
  v12 = sub_1004D0AE8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for DailyForecastComponent.CodingKeys, &type metadata for DailyForecastComponent.CodingKeys, v12, v11, v10);
  if (v2)
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  v21 = 0;
  sub_100387E1C(&qword_100BDC658, (uint64_t)&protocol conformance descriptor for CurrentWeather);
  sub_1000C2AC8(v18, (uint64_t)&v21, v17, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v9, v16, v18);
  v20 = 1;
  sub_1004D0B24();
  sub_1000C2AC8((uint64_t)&type metadata for DailyForecastComponentPreprocessedDataModel, (uint64_t)&v20, v17, (uint64_t)&type metadata for DailyForecastComponentPreprocessedDataModel);
  sub_1000BAE48();
  *(_QWORD *)(v9 + *(int *)(v6 + 20)) = v19;
  sub_1004D0B60(v9, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return sub_1004D0BA4(v9);
}

uint64_t sub_1004D0A6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D0AE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004D0A94(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D0AE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004D0ABC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004D0844(a1, a2);
}

uint64_t sub_1004D0AD0(_QWORD *a1)
{
  return sub_1004D06FC(a1);
}

unint64_t sub_1004D0AE8()
{
  unint64_t result;

  result = qword_100BE7A48;
  if (!qword_100BE7A48)
  {
    result = swift_getWitnessTable(&unk_1009A6144, &type metadata for DailyForecastComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE7A48);
  }
  return result;
}

unint64_t sub_1004D0B24()
{
  unint64_t result;

  result = qword_100BE7A50;
  if (!qword_100BE7A50)
  {
    result = swift_getWitnessTable(&unk_1009DD3DC, &type metadata for DailyForecastComponentPreprocessedDataModel);
    atomic_store(result, (unint64_t *)&qword_100BE7A50);
  }
  return result;
}

uint64_t sub_1004D0B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DailyForecastComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D0BA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DailyForecastComponent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004D0BE0()
{
  unint64_t result;

  result = qword_100BE7A60;
  if (!qword_100BE7A60)
  {
    result = swift_getWitnessTable(&unk_1009DD3B4, &type metadata for DailyForecastComponentPreprocessedDataModel);
    atomic_store(result, (unint64_t *)&qword_100BE7A60);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DailyForecastComponent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004D0C68 + 4 * byte_1009A5FE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004D0C9C + 4 * byte_1009A5FE0[v4]))();
}

uint64_t sub_1004D0C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004D0CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004D0CACLL);
  return result;
}

uint64_t sub_1004D0CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004D0CC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004D0CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004D0CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DailyForecastComponent.CodingKeys()
{
  return &type metadata for DailyForecastComponent.CodingKeys;
}

unint64_t sub_1004D0CEC()
{
  unint64_t result;

  result = qword_100BE7A68;
  if (!qword_100BE7A68)
  {
    result = swift_getWitnessTable(&unk_1009A611C, &type metadata for DailyForecastComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE7A68);
  }
  return result;
}

unint64_t sub_1004D0D2C()
{
  unint64_t result;

  result = qword_100BE7A70;
  if (!qword_100BE7A70)
  {
    result = swift_getWitnessTable(&unk_1009A608C, &type metadata for DailyForecastComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE7A70);
  }
  return result;
}

unint64_t sub_1004D0D6C()
{
  unint64_t result;

  result = qword_100BE7A78;
  if (!qword_100BE7A78)
  {
    result = swift_getWitnessTable(&unk_1009A60B4, &type metadata for DailyForecastComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE7A78);
  }
  return result;
}

uint64_t sub_1004D0DA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t **v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[3];
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BE7B30);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  if (!v31)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = a1[3];
  v7 = a1[4];
  sub_1000DB418(a1, v6);
  v8 = type metadata accessor for PerformanceTestRunner();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v8, v8, v6, v7);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = result;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BE7B28);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v29)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = sub_1000BA294(&qword_100BE7B20);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  if (v27)
  {
    v16 = sub_100068EB4((uint64_t)v28, v29);
    __chkstk_darwin(v16);
    v18 = (_QWORD *)((char *)&v26[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v19 + 16))(v18);
    v20 = sub_100068EB4((uint64_t)v26, v27);
    __chkstk_darwin(v20);
    v22 = (uint64_t **)((char *)&v26[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v23 + 16))(v22);
    v24 = sub_1004D1560(&v30, v9, *v18, *v22);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
    return (uint64_t)v24;
  }
LABEL_9:
  __break(1u);
  return result;
}

double sub_1004D0FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v0 = sub_1000BA294(&qword_100BE7B20);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_1004D1070, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BE7B28);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_1004D11EC, 0, v2);
  swift_release(v3);
  v4 = type metadata accessor for PerformanceTestRunner();
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1004D1238, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BE7B30);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_1004D1440, 0, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1004D1070@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v22)
  {
    __break(1u);
    goto LABEL_7;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = type metadata accessor for StubPPTWeatherDataManager(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v11 = result;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = type metadata accessor for WeatherDataUpdater();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = result;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BE00E8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v21)
  {
    v19 = type metadata accessor for LegacyPerformanceTestRunner();
    swift_allocObject(v19, 121, 7);
    result = sub_1006DBC28(v22, v23, v11, v15, &v20);
    a2[3] = v19;
    a2[4] = (uint64_t)&off_100B8A550;
    *a2 = result;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004D11EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for LegacyPerformanceTestManager();
  result = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(result + 16) = 33;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100B681B8;
  *a1 = result;
  return result;
}

_QWORD *sub_1004D1238(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43F0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v34;
  if (!v34)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = v35;
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = type metadata accessor for StubPPTWeatherDataManager(0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v11 = (uint64_t)result;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = type metadata accessor for WeatherDataUpdater();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v15 = (uint64_t)result;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BE00E8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (!v33)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = a1[3];
  v20 = a1[4];
  sub_1000DB418(a1, v19);
  v21 = sub_1000BA294(&qword_100BE1380);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v21, v21, v19, v20);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v22 = (uint64_t)result;
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BE6610);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  v26 = v30;
  if (v30)
  {
    v27 = v31;
    sub_100043CA8((uint64_t)a1, (uint64_t)v29);
    v28 = type metadata accessor for PerformanceTestRunner();
    swift_allocObject(v28, 152, 7);
    return sub_10056CE70(v6, v7, v11, v15, &v32, v22, v26, v27, v29);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1004D1440@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  _UNKNOWN **v5;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 == (id)5)
  {
    v4 = type metadata accessor for PerformanceTestDefinitions_Mac();
    v5 = &off_100B60600;
    goto LABEL_7;
  }
  if (v3 == (id)1)
  {
    v4 = type metadata accessor for PerformanceTestDefinitions_iPad();
    v5 = &off_100B8E8D8;
LABEL_7:
    result = swift_allocObject(v4, 16, 7);
    a1[3] = v4;
    a1[4] = (uint64_t)v5;
    *a1 = result;
    return result;
  }
  if (!v3)
  {
    v4 = type metadata accessor for PerformanceTestDefinitions_iPhone();
    v5 = &off_100B81460;
    goto LABEL_7;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000046, 0x8000000100A07630, "Weather/PerformanceTestAssembly.swift", 37, 2);
  __break(1u);
  return result;
}

_QWORD *sub_1004D1560(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[5];

  v8 = *a4;
  v9 = type metadata accessor for LegacyPerformanceTestManager();
  v26[3] = v9;
  v26[4] = &off_100B681B8;
  v26[0] = a3;
  v24 = v8;
  v25 = &off_100B8A550;
  v23[0] = a4;
  v10 = type metadata accessor for PerformanceTestManager();
  v11 = (_QWORD *)swift_allocObject(v10, 144, 7);
  v12 = sub_100068EB4((uint64_t)v26, v9);
  __chkstk_darwin(v12);
  v14 = (_QWORD *)((char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  v16 = sub_100068EB4((uint64_t)v23, v24);
  __chkstk_darwin(v16);
  v18 = (_QWORD *)((char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  v20 = *v14;
  v21 = *v18;
  v11[11] = v9;
  v11[12] = &off_100B681B8;
  v11[8] = v20;
  v11[16] = v8;
  v11[17] = &off_100B8A550;
  v11[13] = v21;
  sub_10003C800(a1, (uint64_t)(v11 + 2));
  v11[7] = a2;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  return v11;
}

double sub_1004D16D0()
{
  double result;

  result = 4.0;
  xmmword_100CAEC10 = xmmword_1009A6220;
  return result;
}

double sub_1004D16E4()
{
  double result;

  result = 4.0;
  xmmword_100CAEC20 = xmmword_1009A6230;
  return result;
}

uint64_t sub_1004D16F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = sub_1000BA294(&qword_100BCB130);
  __chkstk_darwin(v4);
  sub_100098694();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, a1, v4);
  v6 = sub_1004D3B50();
  v9 = dispatch thunk of Sequence._copyToContiguousArray()(v4, v6);
  sub_1004D17A8(&v9);
  v7 = v9;
  if (v1)
    swift_release(v9);
  return v7;
}

void sub_1004D17A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for DayWeather(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10021A620();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1004D3B94((int64_t)v6);
  *a1 = v3;
}

uint64_t sub_1004D1828@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unsigned __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  Swift::String v57;

  v7 = sub_1000D9EA0();
  v8 = (uint64_t *)(a3 + *(int *)(v7 + 24));
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000BA330();
  sub_1000CCE10(0x694C207473726946, 0xEB00000000746867, v10, v11, v12, v13, v14, v15);
  sub_1000C16B4();
  *v8 = v3;
  v8[1] = v4;
  v16 = sub_1000C5FA0();
  v17 = sub_1000BEE8C();
  sub_1000CCE10(v17 | 0x20657369726E0000, 0xED00007961646F54, v18, v19, v20, v21, v22, v23);
  sub_1000C16B4();
  *v8 = v3;
  v8[1] = v4;
  v24 = sub_1000C5FA0();
  v25 = sub_1000BEE8C();
  sub_1000CCE10(v25 | 0x54207465736E0000, 0xEC0000007961646FLL, v26, v27, v28, v29, v30, v31);
  sub_1000C16B4();
  *v8 = v3;
  v8[1] = v4;
  v32 = sub_1000C5FA0();
  sub_1000BA330();
  v33._countAndFlagsBits = 0x67694C207473614CLL;
  v33._object = (void *)0xEA00000000007468;
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v35 = 0xD00000000000003BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, *(Swift::String *)(&v55 - 1));
  sub_1000C16B4();
  *v8 = v3;
  v8[1] = v4;
  v36 = sub_1000C5FA0();
  sub_1000BA330();
  sub_1000CCE10(0x6144206C61746F54, 0xEE00746867696C79, v37, v38, v39, v40, v41, v42);
  sub_1000C16B4();
  *v8 = v3;
  v8[1] = v4;
  v43 = sub_1000C5FA0();
  sub_1000BA330();
  v44._countAndFlagsBits = 0x642064253E206E49;
  v44._object = (void *)0xEB00000000737961;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v57);

  v47 = sub_1000BA294(&qword_100BC3C38);
  v48 = swift_allocObject(v47, 72, 7);
  *(_OWORD *)(v48 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v48 + 56) = &type metadata for Int;
  *(_QWORD *)(v48 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v48 + 32) = 7;
  v49 = static String.localizedStringWithFormat(_:_:)(v46._countAndFlagsBits, v46._object, v48);
  v51 = v50;
  swift_bridgeObjectRelease(v46._object);
  swift_bridgeObjectRelease(v48);
  *v8 = v49;
  v8[1] = v51;
  sub_10003C800(a1, a3);
  v52 = a3 + *(int *)(v7 + 20);
  v53 = sub_1000DC720();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v52, a2, v53);
}

uint64_t type metadata accessor for SunriseSunsetTableViewModelFactory(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE7B98;
  if (!qword_100BE7B98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SunriseSunsetTableViewModelFactory);
  return result;
}

uint64_t sub_1004D1B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  int *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v6 = v5;
  v99 = a5;
  sub_1000BA294(&qword_100BE7B38);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v106 = v12;
  v13 = sub_1000EAFF0();
  v116 = *(_QWORD *)(v13 - 8);
  sub_10009D98C();
  __chkstk_darwin(v14);
  v108 = (uint64_t)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v16);
  v107 = (char *)&v96 - v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v101 = (char *)&v96 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  v96 = (uint64_t *)((char *)&v96 - v21);
  sub_10009D2A4();
  v23 = __chkstk_darwin(v22);
  v25 = (uint64_t *)((char *)&v96 - v24);
  __chkstk_darwin(v23);
  v27 = (uint64_t **)((char *)&v96 - v26);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v28);
  sub_1000986FC();
  v114 = v29;
  sub_10009D2A4();
  __chkstk_darwin(v30);
  v32 = (char *)&v96 - v31;
  v33 = sub_100098778();
  v103 = *(_QWORD *)(v33 - 8);
  v104 = v33;
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_100088FDC();
  v102 = v35;
  Date.midnight(timeZone:)(a3);
  v100 = a2;
  sub_1004D2348(a2, a1, (uint64_t)&SunEvents.sunrise.getter, (uint64_t)v32);
  v112 = a3;
  v36 = sub_1004D26D4((uint64_t)v32, v6, a3);
  v38 = v37;
  v105 = v32;
  v113 = a4;
  v111 = a1;
  v98 = sub_1004D2180((uint64_t)v32, a4, a1, v6);
  v40 = v39;
  v109 = (int *)sub_1000D9EA0();
  v41 = v109[6];
  v115 = v6;
  v42 = (uint64_t *)(v6 + v41);
  v43 = *v42;
  v44 = v42[1];
  v45 = (uint64_t)v27 + *(int *)(v13 + 24);
  v97 = v36;
  *(_QWORD *)v45 = v36;
  *(_QWORD *)(v45 + 8) = v38;
  v46 = v13;
  *(_BYTE *)(v45 + 16) = 0;
  v47 = sub_1000C55E0();
  sub_10009525C(v45, v47);
  sub_1000BA9D4(v45, 0);
  *v27 = v43;
  v27[1] = v44;
  v27[2] = v43;
  v27[3] = v44;
  *((_BYTE *)v27 + *(int *)(v13 + 28)) = 0;
  swift_bridgeObjectRetain_n(v44, 2);
  swift_bridgeObjectRetain(v38);
  sub_1000C6B10();
  v49 = v48;
  v50 = *(_QWORD *)(v48 + 16);
  if (v50 >= *(_QWORD *)(v48 + 24) >> 1)
  {
    sub_1000D9688();
    v49 = v93;
  }
  *(_QWORD *)(v49 + 16) = v50 + 1;
  v110 = (*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  v116 = *(_QWORD *)(v116 + 72);
  sub_1004D3A8C((uint64_t)v27, v49 + v110 + v116 * v50);
  v51 = (uint64_t)v25 + *(int *)(v13 + 24);
  *(_QWORD *)v51 = v97;
  *(_QWORD *)(v51 + 8) = v38;
  *(_BYTE *)(v51 + 16) = 0;
  sub_10009525C(v51, v47);
  sub_1000BA9D4(v51, 0);
  v52 = v98;
  *v25 = v98;
  v25[1] = v40;
  v25[2] = v52;
  v25[3] = v40;
  *((_BYTE *)v25 + *(int *)(v13 + 28)) = 0;
  v53 = *(_QWORD *)(v49 + 16);
  v54 = *(_QWORD *)(v49 + 24);
  swift_bridgeObjectRetain(v40);
  v56 = v96;
  if (v53 >= v54 >> 1)
  {
    sub_1000D9688();
    v49 = v55;
  }
  v99 &= 1u;
  *(_QWORD *)(v49 + 16) = v53 + 1;
  sub_1000C0A94(v55, v49 + v110 + v53 * v116);
  v57 = v114;
  v58 = v111;
  sub_1004D2348(v100, v111, (uint64_t)&SunEvents.sunset.getter, v114);
  v59 = v115;
  v60 = sub_1004D26D4(v57, v115, v112);
  v62 = v61;
  v63 = sub_1004D27EC(v57, v113, v58, v59);
  v65 = v64;
  v66 = (uint64_t)v56 + *(int *)(v46 + 24);
  *(_QWORD *)v66 = v60;
  *(_QWORD *)(v66 + 8) = v62;
  *(_BYTE *)(v66 + 16) = 0;
  sub_10009525C(v66, v47);
  sub_1000BA9D4(v66, 0);
  *v56 = v63;
  v56[1] = v65;
  v56[2] = v63;
  v56[3] = v65;
  *((_BYTE *)v56 + *(int *)(v46 + 28)) = 0;
  v67 = *(_QWORD *)(v49 + 16);
  v68 = *(_QWORD *)(v49 + 24);
  sub_1000860DC();
  swift_bridgeObjectRetain(v65);
  if (v67 >= v68 >> 1)
  {
    sub_1000D9688();
    v49 = v69;
  }
  *(_QWORD *)(v49 + 16) = v67 + 1;
  v70 = v110;
  sub_10009DB34(v69, v49 + v110 + v67 * v116);
  v71 = (uint64_t *)(v115 + v109[9]);
  v73 = *v71;
  v72 = v71[1];
  v74 = v101;
  v75 = (uint64_t)&v101[*(int *)(v46 + 24)];
  *(_QWORD *)v75 = v60;
  *(_QWORD *)(v75 + 8) = v62;
  *(_BYTE *)(v75 + 16) = 0;
  sub_10009525C(v75, v47);
  sub_1000BA9D4(v75, 0);
  *v74 = v73;
  v74[1] = v72;
  v74[2] = v73;
  v74[3] = v72;
  *((_BYTE *)v74 + *(int *)(v46 + 28)) = 0;
  v76 = *(_QWORD *)(v49 + 16);
  v77 = *(_QWORD *)(v49 + 24);
  swift_bridgeObjectRetain_n(v72, 2);
  if (v76 >= v77 >> 1)
  {
    sub_1000D9688();
    v49 = v94;
  }
  v78 = v106;
  v79 = v107;
  v80 = v102;
  *(_QWORD *)(v49 + 16) = v76 + 1;
  sub_1004D3A8C((uint64_t)v74, v49 + v70 + v76 * v116);
  sub_1004D29B0(v99, v111, v112, v113);
  v82 = sub_1004D2ABC(v81);
  v85 = (uint64_t *)(v115 + v109[10]);
  v87 = *v85;
  v86 = v85[1];
  if (v84 == -1)
  {
    v88 = 1;
  }
  else
  {
    *(_QWORD *)v78 = v82;
    *(_QWORD *)(v78 + 8) = v83;
    *(_BYTE *)(v78 + 16) = v84;
    sub_10009525C(v78, v47);
    v88 = 0;
  }
  sub_1000BA9D4(v78, v88);
  *v79 = v87;
  v79[1] = v86;
  v79[2] = v87;
  v79[3] = v86;
  sub_1004D3A44(v78, (uint64_t)v79 + *(int *)(v46 + 24));
  *((_BYTE *)v79 + *(int *)(v46 + 28)) = 0;
  v89 = v108;
  sub_1004D3AD0((uint64_t)v79, v108);
  v90 = *(_QWORD *)(v49 + 16);
  v91 = *(_QWORD *)(v49 + 24);
  sub_100098DFC();
  if (v90 >= v91 >> 1)
  {
    sub_1000D9688();
    v49 = v95;
  }
  *(_QWORD *)(v49 + 16) = v90 + 1;
  sub_1004D3A8C(v89, v49 + v70 + v90 * v116);
  sub_1004D3B14((uint64_t)v79);
  sub_10010AAC4(v114, (uint64_t *)&unk_100BD35A0);
  sub_10010AAC4((uint64_t)v105, (uint64_t *)&unk_100BD35A0);
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v80, v104);
  return v49;
}

uint64_t sub_1004D2180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t *v15;
  uint64_t countAndFlagsBits;
  id v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v21;
  Swift::String v22;

  v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007C714(a1, (uint64_t)v9);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_10010AAC4((uint64_t)v9, (uint64_t *)&unk_100BD35A0);
LABEL_5:
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v22._object = (void *)0x8000000100A07910;
    v18._countAndFlagsBits = 0x657369726E7553;
    v18._object = (void *)0xE700000000000000;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v22._countAndFlagsBits = 0xD000000000000041;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v22)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v14 = Calendar.isDate(_:inSameDayAs:)(a3, v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
    goto LABEL_5;
  v15 = (uint64_t *)(a4 + *(int *)(type metadata accessor for SunriseSunsetTableViewModelFactory(0) + 28));
  countAndFlagsBits = *v15;
  swift_bridgeObjectRetain(v15[1]);
  return countAndFlagsBits;
}

uint64_t sub_1004D2348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v62 = a3;
  v59 = a2;
  v52 = a4;
  v64 = sub_100098778();
  v6 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  sub_1000986FC();
  v53 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  sub_100079F7C();
  v63 = v9;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v58 = v11;
  v12 = type metadata accessor for SunEvents(0);
  v60 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_1000986FC();
  v51 = v14;
  sub_10009D2A4();
  __chkstk_darwin(v15);
  sub_100079F7C();
  v57 = v16;
  v17 = type metadata accessor for DayWeather(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v56 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v20);
  v22 = (char *)&v48 - v21;
  sub_1000BA294(&qword_100BCB138);
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_100079FBC();
  v24 = sub_1004D16F8(a1);
  result = sub_1000A8EAC(7, v24);
  v28 = result;
  v55 = v29;
  if (v26 == v27 >> 1)
  {
    v30 = 1;
LABEL_11:
    _s7Weather24LocationCompositionStateOwst_0(v4, v30, 1, v17);
    swift_unknownObjectRelease(v28);
    v47 = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v17);
    if ((_DWORD)v47 == 1)
    {
      sub_1000BCFA4(v47, &qword_100BCB138);
      return sub_1000BA9D4(v52, 1);
    }
    else
    {
      DayWeather.sun.getter(v47);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v4, v17);
      sub_1000BEABC();
      return sub_1000C51C8(v60);
    }
  }
  else
  {
    v31 = v26;
    v49 = result;
    v50 = v4;
    v32 = v27 >> 1;
    v33 = v63;
    v54 = v27 >> 1;
    while (v31 < v32)
    {
      v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v35 = v34(v22, v55 + *(_QWORD *)(v18 + 72) * v31, v17);
      DayWeather.sun.getter(v35);
      v36 = v58;
      sub_1000BEABC();
      sub_1000C51C8(v60);
      v37 = v64;
      v38 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v64);
      v39 = v36;
      v40 = v56;
      sub_10010AAC4(v39, (uint64_t *)&unk_100BD35A0);
      v34(v40, (uint64_t)v22, v17);
      v41 = (uint64_t (*)(char *, uint64_t))v6;
      v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v33, v59, v37);
      if (v38 == 1)
      {
        sub_100098820(v33, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        sub_1000C1AF4();
      }
      else
      {
        v43 = v18;
        v44 = v53;
        DayWeather.date.getter(v42);
        v45 = static Date.> infix(_:_:)(v44, v63);
        v41 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
        v46 = v44;
        v18 = v43;
        v33 = v63;
        sub_1000D1880(v46);
        sub_1000D1880(v33);
        sub_1000C1AF4();
        if ((v45 & 1) != 0)
        {
          v4 = v50;
          (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v50, v22, v17);
          v30 = 0;
          v28 = v49;
          goto LABEL_11;
        }
      }
      ++v31;
      result = v41(v22, v17);
      v32 = v54;
      if (v54 == v31)
      {
        v30 = 1;
        v28 = v49;
        v4 = v50;
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1004D26D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100079FBC();
  v9 = sub_100098778();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100098694();
  sub_10007C714(a1, v3);
  v11 = _s7Weather24LocationCompositionStateOwet_0(v3, 1, v9);
  if ((_DWORD)v11 == 1)
  {
    sub_1000BCFA4(v11, (uint64_t *)&unk_100BD35A0);
    v12 = (uint64_t *)(a2 + *(int *)(sub_1000D9EA0() + 44));
    v13 = *v12;
    swift_bridgeObjectRetain(v12[1]);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v4, v3, v9);
    v13 = Date.shortDayOfWeek(timeZone:isStandalone:)(a3, 1);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v9);
  }
  return v13;
}

uint64_t sub_1004D27EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t *v15;
  uint64_t countAndFlagsBits;
  id v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v21;
  Swift::String v22;

  v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007C714(a1, (uint64_t)v9);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_10010AAC4((uint64_t)v9, (uint64_t *)&unk_100BD35A0);
LABEL_5:
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v22._object = (void *)0x8000000100A078C0;
    v18._countAndFlagsBits = 0x7465736E7553;
    v18._object = (void *)0xE600000000000000;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v22._countAndFlagsBits = 0xD000000000000040;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v22)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v14 = Calendar.isDate(_:inSameDayAs:)(a3, v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
    goto LABEL_5;
  v15 = (uint64_t *)(a4 + *(int *)(type metadata accessor for SunriseSunsetTableViewModelFactory(0) + 32));
  countAndFlagsBits = *v15;
  swift_bridgeObjectRetain(v15[1]);
  return countAndFlagsBits;
}

uint64_t sub_1004D29B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v14 = (char *)&v18 - v13;
  if ((a1 & 1) == 0)
  {
    Date.midnight(timeZone:)(a3);
    Date.wc_addDays(_:calendar:)(1, a4);
    v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    v16 = v15(v11, v7);
    Date.timeIntervalSince1970.getter(v16);
    Date.timeIntervalSince1970.getter(v17);
    return v15(v14, v7);
  }
  return result;
}

uint64_t sub_1004D2ABC(double a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  sub_1000B375C();
  v2 = (void *)static NSDateFormatter.timeDurationWithZeroPaddingFormatter.getter();
  v3 = objc_msgSend(v2, "stringFromTimeInterval:", a1);

  if (!v3)
    return 0;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  return v4;
}

_QWORD *sub_1004D2B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v229;
  _QWORD *v230;
  _QWORD *v231;
  _QWORD *v232;
  _QWORD *v233;
  _QWORD *v234;
  _QWORD *v235;
  _QWORD *v236;
  _QWORD *v237;
  _QWORD *v238;
  _QWORD *v239;
  _QWORD *v240;
  _QWORD *v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t *v245;
  uint64_t *v246;
  _QWORD *v247;
  uint64_t *v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  _QWORD *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;

  v4 = v3;
  v261 = a3;
  v281 = a2;
  sub_1000BA294(&qword_100BE7B38);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v248 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  sub_1000860D0();
  v254 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_1000860D0();
  v244 = v11;
  sub_10009D2A4();
  __chkstk_darwin(v12);
  sub_100079F7C();
  v246 = v13;
  v14 = sub_1000EAFF0();
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_1000986FC();
  v249 = v16;
  sub_10009D2A4();
  __chkstk_darwin(v17);
  sub_1000860D0();
  v255 = v18;
  sub_10009D2A4();
  __chkstk_darwin(v19);
  sub_1000860D0();
  v245 = v20;
  sub_10009D2A4();
  __chkstk_darwin(v21);
  sub_1000860D0();
  v247 = v22;
  sub_10009D2A4();
  __chkstk_darwin(v23);
  sub_1000860D0();
  v277 = (_QWORD *)v24;
  sub_10009D2A4();
  __chkstk_darwin(v25);
  v276 = (uint64_t *)((char *)&v243 - v26);
  sub_10009D2A4();
  __chkstk_darwin(v27);
  sub_1000860D0();
  v273 = (_QWORD *)v28;
  sub_10009D2A4();
  __chkstk_darwin(v29);
  v31 = (uint64_t *)((char *)&v243 - v30);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_1000986FC();
  v258 = v33;
  sub_10009D2A4();
  __chkstk_darwin(v34);
  v265 = (char *)&v243 - v35;
  sub_10009D2A4();
  __chkstk_darwin(v36);
  sub_1000860D0();
  v259 = v37;
  sub_10009D2A4();
  __chkstk_darwin(v38);
  sub_1000860D0();
  v268 = v39;
  sub_10009D2A4();
  __chkstk_darwin(v40);
  sub_1000860D0();
  v262 = v41;
  sub_10009D2A4();
  __chkstk_darwin(v42);
  sub_1000860D0();
  v280 = v43;
  sub_10009D2A4();
  __chkstk_darwin(v44);
  sub_1000860D0();
  v274 = v45;
  sub_10009D2A4();
  __chkstk_darwin(v46);
  sub_1000860D0();
  v271 = v47;
  sub_10009D2A4();
  v49 = __chkstk_darwin(v48);
  v51 = (char *)&v243 - v50;
  __chkstk_darwin(v49);
  v53 = (char *)&v243 - v52;
  v54 = sub_100098778();
  v55 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_1000986FC();
  v257 = v56;
  sub_10009D2A4();
  __chkstk_darwin(v57);
  sub_1000860D0();
  v256 = v58;
  sub_10009D2A4();
  __chkstk_darwin(v59);
  sub_1000860D0();
  v267 = v60;
  sub_10009D2A4();
  __chkstk_darwin(v61);
  sub_1000860D0();
  v266 = v62;
  sub_10009D2A4();
  __chkstk_darwin(v63);
  sub_1000860D0();
  v260 = v64;
  sub_10009D2A4();
  __chkstk_darwin(v65);
  sub_1000860D0();
  v251 = v66;
  sub_10009D2A4();
  __chkstk_darwin(v67);
  sub_1000860D0();
  v250 = v68;
  sub_10009D2A4();
  __chkstk_darwin(v69);
  sub_1000860D0();
  v252 = v70;
  sub_10009D2A4();
  __chkstk_darwin(v71);
  sub_1000860D0();
  v263 = v72;
  sub_10009D2A4();
  __chkstk_darwin(v73);
  sub_1000860D0();
  v253 = v74;
  sub_10009D2A4();
  __chkstk_darwin(v75);
  sub_1000860D0();
  v264 = v76;
  sub_10009D2A4();
  __chkstk_darwin(v77);
  v275 = (uint64_t)&v243 - v78;
  sub_10009D2A4();
  __chkstk_darwin(v79);
  sub_1000860D0();
  v272 = v80;
  sub_10009D2A4();
  __chkstk_darwin(v81);
  v270 = (uint64_t)&v243 - v82;
  sub_10009D2A4();
  v84 = __chkstk_darwin(v83);
  v86 = (char *)&v243 - v85;
  v283 = a1;
  SunEvents.civilDawn.getter(v84);
  v87 = v281;
  v88 = sub_1000B489C((uint64_t)v53);
  v282 = v4;
  v278 = v55;
  v279 = v15;
  if (v147)
  {
    v99 = v14;
    v89 = sub_1000BCFA4(v88, (uint64_t *)&unk_100BD35A0);
    v90 = _swiftEmptyArrayStorage;
    v91 = v87;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v86, v53, v54);
    v92 = (uint64_t *)(v4 + *(int *)(sub_1000D9EA0() + 24));
    v94 = *v92;
    v93 = v92[1];
    swift_bridgeObjectRetain(v93);
    v95 = Date.formattedTime(timeZone:)(v87);
    v96 = (uint64_t)v31 + *(int *)(v14 + 24);
    *(_QWORD *)v96 = v95;
    *(_QWORD *)(v96 + 8) = v97;
    *(_BYTE *)(v96 + 16) = 2;
    v98 = sub_1000C55E0();
    sub_10009525C(v96, v98);
    _s7Weather24LocationCompositionStateOwst_0(v96, 0, 1, v98);
    *v31 = v94;
    v31[1] = v93;
    v31[2] = v94;
    v31[3] = v93;
    v99 = v14;
    *((_BYTE *)v31 + *(int *)(v14 + 28)) = 0;
    swift_bridgeObjectRetain(v93);
    sub_1000C6B10();
    v90 = (_QWORD *)v100;
    v101 = *(_QWORD *)(v100 + 16);
    if (v101 >= *(_QWORD *)(v100 + 24) >> 1)
    {
      sub_1000BC374();
      v90 = (_QWORD *)v100;
    }
    v90[2] = v101 + 1;
    sub_1000C0A94(v100, (uint64_t)v90+ ((*(unsigned __int8 *)(v279 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80))+ *(_QWORD *)(v279 + 72) * v101);
    v55 = v278;
    v89 = sub_100098820((uint64_t)v86, *(uint64_t (**)(uint64_t, uint64_t))(v278 + 8));
    v91 = v281;
  }
  SunEvents.sunrise.getter(v89);
  v102 = sub_1000B489C((uint64_t)v51);
  v103 = v99;
  v104 = v282;
  if (v147)
  {
    sub_1000DAF70(v102, (uint64_t *)&unk_100BD35A0);
    v105 = v280;
  }
  else
  {
    sub_1000C5FB0(v270, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    v106 = (uint64_t *)(v104 + *(int *)(sub_1000D9EA0() + 28));
    v108 = *v106;
    v107 = v106[1];
    sub_1000860DC();
    v109 = v91;
    v110 = Date.formattedTime(timeZone:)(v91);
    v111 = v273;
    v112 = (uint64_t)v273 + *(int *)(v103 + 24);
    *(_QWORD *)v112 = v110;
    *(_QWORD *)(v112 + 8) = v113;
    *(_BYTE *)(v112 + 16) = 2;
    v114 = sub_1000C55E0();
    sub_10009525C(v112, v114);
    _s7Weather24LocationCompositionStateOwst_0(v112, 0, 1, v114);
    *v111 = v108;
    v111[1] = v107;
    v111[2] = v108;
    v111[3] = v107;
    *((_BYTE *)v111 + *(int *)(v103 + 28)) = 0;
    sub_1000860DC();
    v115 = sub_1000D01B8();
    if ((v115 & 1) == 0)
    {
      sub_1000C2AD4();
      v90 = v229;
    }
    sub_1000E70E8();
    v105 = v280;
    v91 = v109;
    if (v116)
    {
      sub_1000BC374();
      v90 = v230;
    }
    v55 = v278;
    sub_1000DCFB4();
    sub_1004D3A8C((uint64_t)v273, v117);
    sub_100098820(v270, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
  }
  v118 = v271;
  sub_1000CDCBC();
  v119 = sub_1000B489C(v118);
  if (v147)
  {
    v120 = sub_1000DAF70(v119, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    v121 = v55;
    sub_1000C5FB0(v272, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    v122 = (uint64_t *)(v282 + *(int *)(sub_1000D9EA0() + 32));
    v124 = *v122;
    v123 = v122[1];
    sub_1000860DC();
    v125 = Date.formattedTime(timeZone:)(v91);
    v126 = v276;
    v127 = (uint64_t)v276 + *(int *)(v103 + 24);
    *(_QWORD *)v127 = v125;
    *(_QWORD *)(v127 + 8) = v128;
    *(_BYTE *)(v127 + 16) = 2;
    v129 = sub_1000C55E0();
    sub_10009525C(v127, v129);
    sub_1000E7764();
    *v126 = v124;
    v126[1] = v123;
    v126[2] = v124;
    v126[3] = v123;
    *((_BYTE *)v126 + *(int *)(v103 + 28)) = 0;
    sub_1000860DC();
    v130 = sub_1000D01B8();
    if ((v130 & 1) == 0)
    {
      sub_1000C2AD4();
      v90 = v231;
    }
    sub_1000E70E8();
    v91 = v281;
    v55 = v121;
    if (v116)
    {
      sub_1000BC374();
      v90 = v232;
    }
    sub_1000DCFB4();
    sub_1004D3A8C((uint64_t)v276, v131);
    v120 = sub_100098820(v272, *(uint64_t (**)(uint64_t, uint64_t))(v121 + 8));
  }
  v132 = v274;
  SunEvents.civilDusk.getter(v120);
  v133 = sub_1000B489C(v132);
  if (v147)
  {
    v134 = sub_1000DAF70(v133, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    sub_1000C5FB0(v275, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    v135 = (uint64_t *)(v282 + *(int *)(sub_1000D9EA0() + 36));
    v137 = *v135;
    v136 = v135[1];
    sub_1000860DC();
    v138 = Date.formattedTime(timeZone:)(v91);
    v139 = v277;
    v140 = (uint64_t)v277 + *(int *)(v103 + 24);
    *(_QWORD *)v140 = v138;
    *(_QWORD *)(v140 + 8) = v141;
    *(_BYTE *)(v140 + 16) = 2;
    v142 = sub_1000C55E0();
    sub_10009525C(v140, v142);
    sub_1000E7764();
    *v139 = v137;
    v139[1] = v136;
    v139[2] = v137;
    v139[3] = v136;
    *((_BYTE *)v139 + *(int *)(v103 + 28)) = 0;
    sub_1000860DC();
    v143 = sub_1000D01B8();
    if ((v143 & 1) == 0)
    {
      sub_1000C2AD4();
      v90 = v233;
    }
    sub_1000E70E8();
    v105 = v280;
    v91 = v281;
    if (v116)
    {
      sub_1000BC374();
      v90 = v234;
    }
    sub_1000DCFB4();
    sub_1004D3A8C((uint64_t)v277, v144);
    v134 = sub_100098820(v275, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
  }
  SunEvents.sunrise.getter(v134);
  sub_1000B489C(v105);
  v269 = v103;
  if (v147)
  {
    sub_10010AAC4(v105, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    v145 = v264;
    sub_1000D0A18(v264, v105);
    v146 = v262;
    sub_1000CDCBC();
    sub_1000B489C(v146);
    if (v147)
    {
      sub_100098820(v145, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
      sub_10010AAC4(v146, (uint64_t *)&unk_100BD35A0);
    }
    else
    {
      v148 = v253;
      sub_1000D0A18(v253, v146);
      v149 = static Date.> infix(_:_:)(v148, v145);
      if ((v149 & 1) != 0)
      {
        Date.timeIntervalSince1970.getter(v149);
        sub_1000C1EA8();
        sub_1000D9EA0();
        v150 = sub_10009D64C();
        if (v151)
        {
          v152 = (uint64_t)v246;
          *v246 = v150;
          *(_QWORD *)(v152 + 8) = v151;
          *(_BYTE *)(v152 + 16) = 1;
          v153 = sub_1000C55E0();
          sub_10009525C(v152, v153);
          sub_1000C0ECC();
          v158 = v152;
        }
        else
        {
          sub_1000C55E0();
          v158 = (uint64_t)v246;
          sub_1000C135C();
        }
        _s7Weather24LocationCompositionStateOwst_0(v154, v155, v156, v157);
        v219 = v247;
        *v247 = v91;
        v219[1] = v148;
        v219[2] = v91;
        v219[3] = v148;
        v220 = v269;
        sub_1004D3A44(v158, (uint64_t)v219 + *(int *)(v269 + 24));
        *((_BYTE *)v219 + *(int *)(v220 + 28)) = 0;
        sub_100098DFC();
        if ((sub_1000D01B8() & 1) == 0)
        {
          sub_1000C2AD4();
          v90 = v239;
        }
        sub_1000E70E8();
        if (v116)
        {
          sub_1000BC374();
          v90 = v240;
        }
        sub_100099554();
        sub_10009DB34(v221, v222);
        sub_10009C1DC(v253);
        v218 = &v285;
LABEL_79:
        sub_10009C1DC(*(v218 - 32));
        return v90;
      }
      sub_10009C1DC(v148);
      sub_10009C1DC(v145);
    }
    v103 = v269;
  }
  v159 = v268;
  sub_1000F4490();
  v160 = sub_1000B489C(v159);
  if (v147)
  {
    sub_1000DAF70(v160, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    v161 = v55;
    v162 = v103;
    v163 = v263;
    sub_1000D0A18(v263, v159);
    v164 = v259;
    sub_1000CDCBC();
    sub_1000B489C(v164);
    if (v165)
    {
      sub_100098820(v163, *(uint64_t (**)(uint64_t, uint64_t))(v161 + 8));
      sub_10010AAC4(v164, (uint64_t *)&unk_100BD35A0);
      v103 = v162;
      v55 = v161;
    }
    else
    {
      v166 = v252;
      sub_1000D0A18(v252, v164);
      v167 = sub_1004B5854();
      v168 = dispatch thunk of static Comparable.< infix(_:_:)(v163, v166, v54, v167);
      if ((v168 & 1) == 0)
      {
        sub_1000BDA58();
        v201 = v260;
        Date.midnight(timeZone:)(v91);
        v202 = v251;
        v203 = sub_1000BDCEC();
        Date.wc_addDays(_:calendar:)(v203, v204);
        v205 = sub_1000D1880(v201);
        Date.timeIntervalSince1970.getter(v205);
        v206 = sub_1000BF1AC();
        Date.timeIntervalSince1970.getter(v206);
        sub_1000C1EA8();
        sub_1000D9EA0();
        v207 = sub_1000CFD68();
        if (v208)
        {
          v209 = (uint64_t)v244;
          *v244 = v207;
          *(_QWORD *)(v209 + 8) = v208;
          *(_BYTE *)(v209 + 16) = 1;
          v210 = sub_1000C55E0();
          sub_10009525C(v209, v210);
          sub_1000C0ECC();
        }
        else
        {
          sub_1000C55E0();
          sub_1000C135C();
        }
        _s7Weather24LocationCompositionStateOwst_0(v211, v212, v213, v214);
        v223 = v245;
        v224 = v269;
        *v245 = v202;
        v223[1] = v202;
        v223[2] = v202;
        v223[3] = v202;
        sub_1000D0690();
        *((_BYTE *)v223 + *(int *)(v224 + 28)) = 0;
        sub_100098DFC();
        if ((sub_1000D01B8() & 1) == 0)
        {
          sub_1000C2AD4();
          v90 = v241;
        }
        v225 = v252;
        sub_1000E70E8();
        if (v116)
        {
          sub_1000BC374();
          v90 = v242;
        }
        sub_1000DCFB4();
        sub_1000C0A94(v226, v227);
        sub_1000D1880(v251);
        sub_1000D1880(v250);
        sub_1000D1880(v225);
        v200 = v263;
        goto LABEL_86;
      }
      v103 = v162;
      v55 = v278;
      sub_10009C1DC(v166);
      sub_10009C1DC(v163);
    }
  }
  v169 = (uint64_t)v265;
  sub_1000F4490();
  v170 = sub_1000B489C(v169);
  if (!v147)
  {
    sub_1000C5FB0(v266, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    v173 = v260;
    sub_1000BDA58();
    v174 = v267;
    v175 = sub_1000BDCEC();
    Date.wc_addDays(_:calendar:)(v175, v176);
    v177 = sub_1000D1880(v173);
    Date.timeIntervalSince1970.getter(v177);
    sub_1000C1EA8();
    sub_1000D9EA0();
    v178 = sub_1000CFD68();
    if (v179)
    {
      v180 = (uint64_t)v254;
      *v254 = v178;
      *(_QWORD *)(v180 + 8) = v179;
      *(_BYTE *)(v180 + 16) = 1;
      v181 = sub_1000C55E0();
      sub_10009525C(v180, v181);
      sub_1000C0ECC();
    }
    else
    {
      sub_1000C55E0();
      sub_1000C135C();
    }
    _s7Weather24LocationCompositionStateOwst_0(v182, v183, v184, v185);
    v196 = v255;
    *v255 = v174;
    v196[1] = v174;
    v196[2] = v174;
    v196[3] = v174;
    v197 = v269;
    sub_1000D0690();
    *((_BYTE *)v196 + *(int *)(v197 + 28)) = 0;
    sub_100098DFC();
    if ((sub_1000D01B8() & 1) == 0)
    {
      sub_1000C2AD4();
      v90 = v235;
    }
    sub_1000E70E8();
    if (v116)
    {
      sub_1000BC374();
      v90 = v236;
    }
    sub_100099554();
    sub_1000C0A94(v198, v199);
    sub_1000D1880(v267);
    v200 = v266;
LABEL_86:
    sub_1000D1880(v200);
    return v90;
  }
  sub_1000DAF70(v170, (uint64_t *)&unk_100BD35A0);
  v171 = v258;
  sub_1000CDCBC();
  v172 = sub_1000B489C(v171);
  if (!v147)
  {
    v186 = v256;
    sub_1000C5FB0(v256, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    v187 = Date.midnight(timeZone:)(v91);
    Date.timeIntervalSince1970.getter(v187);
    sub_1000BF1AC();
    sub_1000D9EA0();
    v188 = sub_10009D64C();
    if (v189)
    {
      v190 = (uint64_t)v248;
      *v248 = v188;
      *(_QWORD *)(v190 + 8) = v189;
      *(_BYTE *)(v190 + 16) = 1;
      v191 = sub_1000C55E0();
      sub_10009525C(v190, v191);
      sub_1000C0ECC();
    }
    else
    {
      sub_1000C55E0();
      v190 = (uint64_t)v248;
      sub_1000C135C();
    }
    _s7Weather24LocationCompositionStateOwst_0(v192, v193, v194, v195);
    v215 = v249;
    *v249 = v91;
    v215[1] = v186;
    v215[2] = v91;
    v215[3] = v186;
    sub_1004D3A44(v190, (uint64_t)v215 + *(int *)(v103 + 24));
    *((_BYTE *)v215 + *(int *)(v103 + 28)) = 0;
    sub_100098DFC();
    if ((sub_1000D01B8() & 1) == 0)
    {
      sub_1000C2AD4();
      v90 = v237;
    }
    sub_1000E70E8();
    if (v116)
    {
      sub_1000BC374();
      v90 = v238;
    }
    sub_1000DCFB4();
    sub_10009DB34(v216, v217);
    sub_10009C1DC(v257);
    v218 = &v284;
    goto LABEL_79;
  }
  sub_1000DAF70(v172, (uint64_t *)&unk_100BD35A0);
  return v90;
}

uint64_t sub_1004D3A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BE7B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D3A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OverviewTableRowViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D3AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OverviewTableRowViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D3B14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OverviewTableRowViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004D3B50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BCE7B8;
  if (!qword_100BCE7B8)
  {
    v1 = sub_100075EB0(&qword_100BCB130);
    result = swift_getWitnessTable(&protocol conformance descriptor for Forecast<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BCE7B8);
  }
  return result;
}

void sub_1004D3B94(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  char *v55;
  void (*v56)(void);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  Swift::Int v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t);
  void (*v101)(void);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t *v107;
  void (*v108)(void);
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  BOOL v130;
  uint64_t v131;
  char v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t *v150;
  uint64_t v151;
  char *v152;
  unint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  Swift::Int v166;
  uint64_t v167;
  Swift::Int v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  void (*v176)(uint64_t, uint64_t);
  void (*v177)(uint64_t, uint64_t, uint64_t, char *);
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  _QWORD *v183;
  uint64_t v184;
  void (*v185)(void);
  uint64_t v186;
  char *v187;
  uint64_t v188;
  _QWORD *v189;

  v2 = v1;
  v181 = sub_100098778();
  v174 = *(_QWORD *)(v181 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  v180 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  v7 = __chkstk_darwin(v6);
  v184 = sub_1000DAA24(v7, v8, v9, v10, v11, v12, v13, v14, v162);
  v189 = *(_QWORD **)(v184 - 8);
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_1000986FC();
  v170 = v16;
  sub_10009D2A4();
  __chkstk_darwin(v17);
  sub_1000860D0();
  v186 = v18;
  sub_10009D2A4();
  __chkstk_darwin(v19);
  v178 = (char *)&v162 - v20;
  sub_10009D2A4();
  v22 = __chkstk_darwin(v21);
  sub_1000C66D0(v22, v23, v24, v25, v26, v27, v28, v29, v162);
  v30 = *(_QWORD *)(a1 + 8);
  v31 = _minimumMergeRunLength(_:)(v30);
  if (v31 >= v30)
  {
    if ((v30 & 0x8000000000000000) == 0)
    {
      if (v30)
        sub_1004D45FC(0, v30, 1, (_QWORD *)a1);
      goto LABEL_117;
    }
    goto LABEL_140;
  }
  v166 = v31;
  sub_10087B6E4(v30 / 2);
  v164 = v32;
  v172 = v33;
  v165 = v30;
  if (v30 <= 0)
  {
LABEL_103:
    v35 = (char *)_swiftEmptyArrayStorage;
    v105 = _swiftEmptyArrayStorage[2];
LABEL_104:
    if (v105 < 2)
    {
LABEL_115:
      swift_bridgeObjectRelease(v35);
      if (v165 >= -1)
        goto LABEL_116;
      goto LABEL_144;
    }
    v155 = *(_QWORD *)a1;
    while (1)
    {
      a1 = v105 - 2;
      if (v105 < 2)
        break;
      if (!v155)
        goto LABEL_148;
      v156 = v35;
      v157 = *(_QWORD *)&v35[16 * a1 + 32];
      v158 = *(_QWORD *)&v35[16 * v105 + 24];
      sub_1000E7C7C(v155 + v189[9] * v157, v155 + v189[9] * *(_QWORD *)&v35[16 * v105 + 16], v155 + v189[9] * v158);
      if (v1)
      {
        v154 = v156;
        goto LABEL_101;
      }
      if (v158 < v157)
        goto LABEL_135;
      if ((swift_isUniquelyReferenced_nonNull_native(v156) & 1) == 0)
        v156 = sub_10021A488();
      if ((unint64_t)a1 >= *((_QWORD *)v156 + 2))
        goto LABEL_136;
      v159 = &v156[16 * a1 + 32];
      *(_QWORD *)v159 = v157;
      *((_QWORD *)v159 + 1) = v158;
      v160 = *((_QWORD *)v156 + 2);
      if (v105 > v160)
        goto LABEL_137;
      memmove(&v156[16 * v105 + 16], &v156[16 * v105 + 32], 16 * (v160 - v105));
      v35 = v156;
      *((_QWORD *)v156 + 2) = v160 - 1;
      v105 = v160 - 1;
      if (v160 <= 2)
        goto LABEL_115;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    return;
  }
  v34 = 0;
  v35 = (char *)_swiftEmptyArrayStorage;
  v183 = (_QWORD *)a1;
  while (1)
  {
    v36 = (uint64_t)v34;
    v37 = (uint64_t)v34 + 1;
    v169 = v35;
    v171 = (uint64_t)v34;
    if ((uint64_t)v34 + 1 < v30)
    {
      v167 = *(_QWORD *)a1;
      v38 = v167;
      v187 = (char *)v189[9];
      v39 = v187;
      v188 = (uint64_t)v34 + 1;
      v40 = (void (*)(void))v189[2];
      v41 = v184;
      v40();
      v42 = v38 + (_QWORD)v39 * v36;
      v43 = v178;
      v185 = v40;
      v44 = ((uint64_t (*)(char *, uint64_t, uint64_t))v40)(v178, v42, v41);
      v45 = v179;
      DayWeather.date.getter(v44);
      v46 = v180;
      sub_1000DA614();
      LODWORD(v177) = static Date.< infix(_:_:)(v45, v46);
      v47 = *(void (**)(char *, uint64_t))(v174 + 8);
      v48 = v181;
      v47(v46, v181);
      v49 = v45;
      v36 = v171;
      v176 = (void (*)(uint64_t, uint64_t))v47;
      v47(v49, v48);
      v50 = v187;
      v51 = (void (*)(char *, uint64_t))v189[1];
      v51(v43, v41);
      v175 = (char *)v51;
      v51(v182, v41);
      v37 = v36 + 2;
      if (v36 + 2 < v30)
      {
        v163 = v2;
        v173 = (_QWORD)v50 * v188;
        v52 = v167;
        v168 = (_QWORD)v50 * v37;
        while (1)
        {
          v53 = v30;
          v54 = v37;
          v55 = v182;
          v57 = v184;
          v56 = v185;
          ((void (*)(char *, uint64_t, uint64_t))v185)(v182, v52 + v168, v184);
          v58 = v178;
          v59 = ((uint64_t (*)(char *, uint64_t, uint64_t))v56)(v178, v52 + v173, v57);
          v60 = v179;
          v61 = DayWeather.date.getter(v59);
          v62 = v180;
          DayWeather.date.getter(v61);
          LODWORD(v188) = static Date.< infix(_:_:)(v60, v62);
          v63 = v62;
          v64 = v181;
          v65 = v176;
          v176((uint64_t)v63, v181);
          v65((uint64_t)v60, v64);
          v66 = (void (*)(uint64_t, uint64_t))v175;
          ((void (*)(char *, uint64_t))v175)(v58, v57);
          v66((uint64_t)v55, v57);
          if (((v177 ^ v188) & 1) != 0)
            break;
          v37 = v54 + 1;
          v50 = v187;
          v52 += (uint64_t)v187;
          v30 = v53;
          if (v37 >= v53)
          {
            v37 = v53;
            a1 = (int64_t)v183;
            v2 = v163;
            v36 = v171;
            goto LABEL_11;
          }
        }
        a1 = (int64_t)v183;
        v2 = v163;
        v37 = v54;
        v36 = v171;
        v30 = v53;
        v50 = v187;
      }
LABEL_11:
      v35 = v169;
      if ((v177 & 1) != 0)
      {
        if (v37 < v36)
          goto LABEL_141;
        if (v36 < v37)
        {
          v176 = (void (*)(uint64_t, uint64_t))v30;
          v67 = 0;
          v68 = (_QWORD)v50 * (v37 - 1);
          v69 = v37 * (_QWORD)v50;
          v70 = v36 * (_QWORD)v50;
          v185 = (void (*)(void))v37;
          do
          {
            if (v36 != v37 + v67 - 1)
            {
              v71 = v167;
              if (!v167)
                goto LABEL_147;
              v72 = v2;
              v73 = v167 + v70;
              v188 = v167 + v68;
              v74 = v184;
              v177 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v189[4];
              v177(v170, v167 + v70, v184, v35);
              if (v70 < v68 || v73 >= v71 + v69)
              {
                sub_1000DC43C(v71 + v70, v188);
                v50 = v187;
              }
              else
              {
                v50 = v187;
                if (v70 != v68)
                  swift_arrayInitWithTakeBackToFront(v73, v188, 1, v74);
              }
              ((void (*)(uint64_t, uint64_t, uint64_t))v177)(v188, v170, v74);
              v35 = v169;
              v2 = v72;
              v37 = (uint64_t)v185;
            }
            ++v36;
            --v67;
            v68 -= (uint64_t)v50;
            v69 -= (uint64_t)v50;
            v70 += (uint64_t)v50;
          }
          while (v36 < v37 + v67);
          a1 = (int64_t)v183;
          v36 = v171;
          v30 = (Swift::Int)v176;
        }
      }
    }
    if (v37 < v30)
    {
      if (__OFSUB__(v37, v36))
        goto LABEL_139;
      if (v37 - v36 < v166)
      {
        if (__OFADD__(v36, v166))
          goto LABEL_142;
        if (v36 + v166 >= v30)
          v76 = v30;
        else
          v76 = v36 + v166;
        if (v76 < v36)
          goto LABEL_143;
        if (v37 != v76)
        {
          v163 = v2;
          v77 = (char *)v189[9];
          v173 = v189[2];
          v78 = (_QWORD)v77 * (v37 - 1);
          v175 = v77;
          v79 = v37 * (_QWORD)v77;
          v80 = v184;
          v168 = v76;
          do
          {
            v81 = 0;
            v185 = (void (*)(void))v37;
            v176 = (void (*)(uint64_t, uint64_t))v79;
            v177 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v78;
            while (1)
            {
              v82 = *(_QWORD *)a1;
              v187 = (char *)(v79 + v81);
              v188 = v36;
              v83 = (char *)(v79 + v81 + v82);
              v84 = v182;
              v85 = (void (*)(char *, uint64_t, uint64_t))v173;
              ((void (*)(char *, char *, uint64_t, char *))v173)(v182, v83, v80, v35);
              v86 = v78 + v81 + v82;
              v87 = (uint64_t *)a1;
              v88 = v178;
              v85(v178, v86, v80);
              v89 = v179;
              v90 = sub_1000DA614();
              v91 = v180;
              DayWeather.date.getter(v90);
              LOBYTE(v82) = static Date.< infix(_:_:)(v89, v91);
              v92 = *(void (**)(char *, uint64_t))(v174 + 8);
              v93 = v91;
              v94 = v181;
              v92(v93, v181);
              v95 = v89;
              v80 = v184;
              v92(v95, v94);
              v96 = (void (*)(char *, uint64_t))v189[1];
              v96(v88, v80);
              v96(v84, v80);
              if ((v82 & 1) == 0)
                break;
              v97 = *v87;
              if (!*v87)
                goto LABEL_145;
              v79 = (uint64_t)v176;
              v78 = (uint64_t)v177;
              v98 = (uint64_t)v176 + v97 + v81;
              v99 = (uint64_t)v177 + v97 + v81;
              v100 = (void (*)(uint64_t, uint64_t, uint64_t))v189[4];
              v100(v186, v98, v80);
              sub_1000DC43C(v98, v99);
              v100(v99, v186, v80);
              v81 -= (uint64_t)v175;
              v36 = v188 + 1;
              v101 = v185;
              a1 = (int64_t)v183;
              if (v185 == (void (*)(void))(v188 + 1))
                goto LABEL_44;
            }
            v101 = v185;
            a1 = (int64_t)v87;
            v79 = (uint64_t)v176;
            v78 = (uint64_t)v177;
LABEL_44:
            v37 = (uint64_t)v101 + 1;
            v78 += (uint64_t)v175;
            v79 += (uint64_t)v175;
            v36 = v171;
          }
          while (v37 != v168);
          v37 = v168;
          v2 = v163;
          v35 = v169;
        }
      }
    }
    if (v37 < v36)
      goto LABEL_138;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
    v185 = (void (*)(void))v37;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v35 = v169;
    else
      v35 = sub_10021A398(0, *((_QWORD *)v169 + 2) + 1, 1, v169);
    v104 = *((_QWORD *)v35 + 2);
    v103 = *((_QWORD *)v35 + 3);
    v105 = v104 + 1;
    if (v104 >= v103 >> 1)
      v35 = sub_10021A398((char *)(v103 > 1), v104 + 1, 1, v35);
    *((_QWORD *)v35 + 2) = v105;
    v106 = v35 + 32;
    v107 = (uint64_t *)&v35[16 * v104 + 32];
    v108 = v185;
    *v107 = v36;
    v107[1] = (uint64_t)v108;
    if (v104)
      break;
    v105 = 1;
LABEL_94:
    a1 = (int64_t)v183;
    v30 = v183[1];
    v34 = v185;
    if ((uint64_t)v185 >= v30)
      goto LABEL_104;
  }
  while (1)
  {
    v109 = v105 - 1;
    if (v105 >= 4)
    {
      v114 = &v106[16 * v105];
      v115 = *((_QWORD *)v114 - 8);
      v116 = *((_QWORD *)v114 - 7);
      v120 = __OFSUB__(v116, v115);
      v117 = v116 - v115;
      if (v120)
        goto LABEL_123;
      v119 = *((_QWORD *)v114 - 6);
      v118 = *((_QWORD *)v114 - 5);
      v120 = __OFSUB__(v118, v119);
      v112 = v118 - v119;
      v113 = v120;
      if (v120)
        goto LABEL_124;
      v121 = v105 - 2;
      v122 = &v106[16 * v105 - 32];
      v124 = *(_QWORD *)v122;
      v123 = *((_QWORD *)v122 + 1);
      v120 = __OFSUB__(v123, v124);
      v125 = v123 - v124;
      if (v120)
        goto LABEL_125;
      v120 = __OFADD__(v112, v125);
      v126 = v112 + v125;
      if (v120)
        goto LABEL_127;
      if (v126 >= v117)
      {
        v144 = &v106[16 * v109];
        v146 = *(_QWORD *)v144;
        v145 = *((_QWORD *)v144 + 1);
        v120 = __OFSUB__(v145, v146);
        v147 = v145 - v146;
        if (v120)
          goto LABEL_133;
        v137 = v112 < v147;
        goto LABEL_83;
      }
    }
    else
    {
      if (v105 != 3)
      {
        v138 = *((_QWORD *)v35 + 4);
        v139 = *((_QWORD *)v35 + 5);
        v120 = __OFSUB__(v139, v138);
        v131 = v139 - v138;
        v132 = v120;
        goto LABEL_77;
      }
      v111 = *((_QWORD *)v35 + 4);
      v110 = *((_QWORD *)v35 + 5);
      v120 = __OFSUB__(v110, v111);
      v112 = v110 - v111;
      v113 = v120;
    }
    if ((v113 & 1) != 0)
      goto LABEL_126;
    v121 = v105 - 2;
    v127 = &v106[16 * v105 - 32];
    v129 = *(_QWORD *)v127;
    v128 = *((_QWORD *)v127 + 1);
    v130 = __OFSUB__(v128, v129);
    v131 = v128 - v129;
    v132 = v130;
    if (v130)
      goto LABEL_128;
    v133 = &v106[16 * v109];
    v135 = *(_QWORD *)v133;
    v134 = *((_QWORD *)v133 + 1);
    v120 = __OFSUB__(v134, v135);
    v136 = v134 - v135;
    if (v120)
      goto LABEL_130;
    if (__OFADD__(v131, v136))
      goto LABEL_132;
    if (v131 + v136 >= v112)
    {
      v137 = v112 < v136;
LABEL_83:
      if (v137)
        v109 = v121;
      goto LABEL_85;
    }
LABEL_77:
    if ((v132 & 1) != 0)
      goto LABEL_129;
    v140 = &v106[16 * v109];
    v142 = *(_QWORD *)v140;
    v141 = *((_QWORD *)v140 + 1);
    v120 = __OFSUB__(v141, v142);
    v143 = v141 - v142;
    if (v120)
      goto LABEL_131;
    if (v143 < v131)
      goto LABEL_94;
LABEL_85:
    v148 = v109 - 1;
    if (v109 - 1 >= v105)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v183)
      goto LABEL_146;
    v149 = v35;
    v150 = (uint64_t *)&v106[16 * v148];
    v151 = *v150;
    v152 = &v106[16 * v109];
    a1 = *((_QWORD *)v152 + 1);
    sub_1000E7C7C(*v183 + v189[9] * *v150, *v183 + v189[9] * *(_QWORD *)v152, *v183 + v189[9] * a1);
    v2 = v1;
    if (v1)
      break;
    if (a1 < v151)
      goto LABEL_120;
    if (v109 > *((_QWORD *)v149 + 2))
      goto LABEL_121;
    *v150 = v151;
    *(_QWORD *)&v106[16 * v148 + 8] = a1;
    v153 = *((_QWORD *)v149 + 2);
    if (v109 >= v153)
      goto LABEL_122;
    v105 = v153 - 1;
    memmove(&v106[16 * v109], v152 + 16, 16 * (v153 - 1 - v109));
    v35 = v149;
    *((_QWORD *)v149 + 2) = v153 - 1;
    if (v153 <= 2)
      goto LABEL_94;
  }
  v154 = v149;
LABEL_101:
  swift_bridgeObjectRelease(v154);
  if (v165 < -1)
  {
    __break(1u);
    goto LABEL_103;
  }
LABEL_116:
  v161 = v164;
  *(_QWORD *)(v164 + 16) = 0;
  swift_bridgeObjectRelease(v161);
LABEL_117:
  sub_1000B44B0();
}

void sub_1004D45FC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;

  v52 = a1;
  v7 = sub_100098778();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  v58 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  v11 = __chkstk_darwin(v10);
  v19 = sub_1000DAA24(v11, v12, v13, v14, v15, v16, v17, v18, v50);
  v67 = *(_QWORD **)(v19 - 8);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_1000986FC();
  v65 = v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  v56 = (char *)&v50 - v23;
  sub_10009D2A4();
  __chkstk_darwin(v24);
  sub_100079F7C();
  v55 = v25;
  v64 = a3;
  v51 = a2;
  if (a3 != a2)
  {
    v26 = v67[9];
    v53 = (void (*)(char *, uint64_t, uint64_t))v67[2];
    v54 = v19;
    v27 = v26 * (v64 - 1);
    v61 = v26;
    v28 = v26 * v64;
    while (2)
    {
      v29 = 0;
      v68 = v52;
      v62 = v28;
      v63 = v27;
      do
      {
        v30 = *a4;
        v66 = v28 + v29;
        v31 = v28 + v29 + v30;
        v32 = v55;
        v33 = v53;
        v53(v55, v31, v19);
        v34 = v27 + v29 + v30;
        v35 = v56;
        v33(v56, v34, v19);
        v36 = v57;
        sub_1000CDF58();
        v37 = a4;
        v38 = v58;
        sub_1000DA614();
        LOBYTE(v30) = static Date.< infix(_:_:)(v36, v38);
        v39 = *(void (**)(char *, uint64_t))(v59 + 8);
        v40 = v38;
        v41 = v60;
        v39(v40, v60);
        v42 = v41;
        a4 = v37;
        v19 = v54;
        v39(v36, v42);
        v43 = (void (*)(char *, uint64_t))v67[1];
        v44 = v35;
        v27 = v63;
        v43(v44, v19);
        v45 = v32;
        v28 = v62;
        v43(v45, v19);
        if ((v30 & 1) == 0)
          break;
        v46 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v47 = v46 + v28 + v29;
        v48 = v46 + v27 + v29;
        v49 = (void (*)(uint64_t, uint64_t, uint64_t))v67[4];
        v49(v65, v47, v19);
        swift_arrayInitWithTakeFrontToBack(v47, v48, 1, v19);
        v49(v48, v65, v19);
        v29 -= v61;
        ++v68;
      }
      while (v64 != v68);
      v27 += v61;
      v28 += v61;
      if (++v64 != v51)
        continue;
      break;
    }
  }
  sub_1000B44B0();
}

void sub_1004D4890(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t);
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v51;
  int64_t v53;
  uint64_t v55;
  unint64_t v56;
  void (*v57)();
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, unint64_t, uint64_t);
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;

  v70 = sub_100098778();
  v8 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  sub_1000986FC();
  v69 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v68 = v11;
  v75 = type metadata accessor for DayWeather(0);
  __chkstk_darwin(v75);
  sub_1000986FC();
  v67 = v12;
  sub_10009D2A4();
  v14 = __chkstk_darwin(v13);
  sub_1000C66D0(v14, v15, v16, v17, v18, v19, v20, v21, v55);
  v71 = v22;
  v23 = *(_QWORD *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v24 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_75;
  v26 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1)
    goto LABEL_76;
  v73 = a3;
  v28 = v24 / v23;
  v29 = v26 / v23;
  v65 = *(_QWORD *)(v22 + 72);
  if (v24 / v23 >= v26 / v23)
  {
    sub_1000DC644(a2, v26 / v23);
    v30 = a4 + v29 * v23;
    if (v29 * v23 < 1 || a1 >= a2)
      goto LABEL_69;
    v58 = -v23;
    v56 = a4;
    v57 = *(void (**)())(v71 + 16);
    v41 = v73;
    v64 = v8;
    v72 = a1;
    while (1)
    {
      v63 = v41;
      v74 = v41 + v58;
      v61 = v30 + v58;
      v57();
      v59 = a2 + v58;
      v42 = ((uint64_t (*)(uint64_t))v57)(v67);
      DayWeather.date.getter(v42);
      v43 = a2;
      sub_1000CDF58();
      v44 = static Date.< infix(_:_:)(v68, v69);
      v45 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v45(v69, v70);
      v45(v68, v70);
      v46 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v46(v67, v75);
      v46(v66, v75);
      if ((v44 & 1) != 0)
        break;
      v41 = v74;
      if (v63 < v30 || v74 >= v30)
      {
        v48 = v74;
        v30 += v58;
        v49 = v61;
LABEL_58:
        sub_100099A50(v48, v49);
        a4 = v56;
        v8 = v64;
        v23 = v65;
        v51 = v72;
        goto LABEL_65;
      }
      a4 = v56;
      v8 = v64;
      v23 = v65;
      v51 = v72;
      if (v63 == v30)
      {
        v30 += v58;
      }
      else
      {
        v30 += v58;
        sub_1000C549C(v74, v61);
      }
LABEL_65:
      if (v30 <= a4 || a2 <= v51)
        goto LABEL_69;
    }
    v41 = v74;
    if (v63 >= a2 && v74 < a2)
    {
      v8 = v64;
      v23 = v65;
      v51 = v72;
      a2 += v58;
      if (v63 != v43)
        sub_1000C549C(v74, v59);
      a4 = v56;
      goto LABEL_65;
    }
    v48 = v74;
    a2 += v58;
    v49 = v59;
    goto LABEL_58;
  }
  sub_1000DC644(a1, v24 / v23);
  v30 = a4 + v28 * v23;
  if (v28 * v23 >= 1 && a2 < v73)
  {
    v62 = *(void (**)(uint64_t, unint64_t, uint64_t))(v71 + 16);
    v60 = a4 + v28 * v23;
    do
    {
      v62(v66, a2, v75);
      v62(v67, a4, v75);
      v32 = a2;
      v33 = sub_1000CDF58();
      DayWeather.date.getter(v33);
      v34 = static Date.< infix(_:_:)(v68, v69);
      v35 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v35(v69, v70);
      v35(v68, v70);
      v36 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v36(v67, v75);
      v36(v66, v75);
      if ((v34 & 1) != 0)
      {
        v23 = v65;
        a2 += v65;
        if (a1 < v32 || a1 >= a2)
        {
          sub_100099A50(a1, v32);
        }
        else if (a1 != v32)
        {
          sub_1000C549C(a1, v32);
        }
      }
      else
      {
        v23 = v65;
        if (a1 < a4 || a1 >= a4 + v65)
        {
          sub_100099A50(a1, a4);
        }
        else if (a1 != a4)
        {
          sub_1000C549C(a1, a4);
        }
        a4 += v65;
      }
      v30 = v60;
      a1 += v23;
    }
    while (a4 < v60 && a2 < v73);
  }
LABEL_69:
  v53 = v30 - a4;
  if (v23 != -1 || v53 != 0x8000000000000000)
  {
    sub_1000DC644(a4, v53 / v23);
    return;
  }
LABEL_77:
  __break(1u);
}

_QWORD *sub_1004D4D3C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v36);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for SunriseSunsetEventCalculator(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)v4 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (_QWORD *)((char *)v4 + v13);
    v18 = (uint64_t *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)((char *)v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[10];
    v29 = a3[11];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (_QWORD *)((char *)v4 + v29);
    v34 = (uint64_t *)((char *)a2 + v29);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v35);
  }
  return v4;
}

double sub_1004D4E84(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  double result;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for SunriseSunsetEventCalculator(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1004D4F30(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SunriseSunsetEventCalculator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)(a1 + v20);
  v25 = (_QWORD *)(a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[10];
  v28 = a3[11];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (_QWORD *)(a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)(a1 + v28);
  v33 = (_QWORD *)(a2 + v28);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v34);
  return a1;
}

_QWORD *sub_1004D5044(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  sub_100094D04(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for SunriseSunsetEventCalculator(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004D51B4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SunriseSunsetEventCalculator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1004D5264(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SunriseSunsetEventCalculator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = a3[11];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004D5384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D5390);
}

uint64_t sub_1004D5390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000DC720();
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1004D5400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D540C);
}

uint64_t sub_1004D540C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000DC720();
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1004D5474(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = "(";
  result = type metadata accessor for SunriseSunsetEventCalculator(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1009A62B0;
    v4[3] = &unk_1009A62B0;
    v4[4] = &unk_1009A62B0;
    v4[5] = &unk_1009A62B0;
    v4[6] = &unk_1009A62B0;
    v4[7] = &unk_1009A62B0;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004D54FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE7C80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1004D553C(char a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94[32];

  v93 = a3;
  v5 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v92 = v7;
  __chkstk_darwin(v8);
  v91 = (uint64_t)&v68 - v9;
  __chkstk_darwin(v10);
  v90 = (uint64_t)&v68 - v11;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v68 - v20;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_1000986FC();
  v89 = v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v68 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v68 - v31;
  if (a1)
  {
    if (a1 == 1)
    {
      if ((a2 & 1) != 0)
      {
        v33 = &qword_100BE8058;
        goto LABEL_11;
      }
    }
    else if ((a2 & 1) != 0)
    {
      v33 = &qword_100BE8428;
      goto LABEL_11;
    }
    v33 = &qword_100BE8240;
  }
  else if ((a2 & 1) != 0)
  {
    v33 = &qword_100BE7C88;
  }
  else
  {
    v33 = &qword_100BE7E70;
  }
LABEL_11:
  v34 = *((_BYTE *)v33 + 224);
  v76 = *v33;
  v75 = v33[1];
  v74 = v33[2];
  v73 = v33[3];
  v35 = v33[8];
  v79 = v33[9];
  v80 = v35;
  v36 = v33[10];
  v77 = v33[11];
  v78 = v36;
  v37 = v33[24];
  v72 = v33[25];
  v71 = v33[26];
  v70 = v33[27];
  v38 = v33[49];
  v83 = v33[50];
  v84 = v38;
  v39 = v33[51];
  v81 = v33[52];
  v82 = v39;
  v40 = v33[57];
  v87 = v33[58];
  v88 = v40;
  v41 = v93 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map;
  v43 = v33[59];
  v42 = v33[60];
  v85 = v43;
  v86 = v42;
  sub_1000992EC(v93 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map, (uint64_t)v94);
  sub_10003773C(v41, v15, &qword_100BC4A98);
  v44 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v44) == 1)
  {
    sub_100021A14(v15, &qword_100BC4A98);
LABEL_16:
    v45 = 1;
    goto LABEL_17;
  }
  v69 = v37;
  sub_10009D3BC(v15 + *(int *)(v44 + 20), (uint64_t)v18);
  sub_1000215BC(v15, type metadata accessor for LocationComponentContainerViewModel);
  sub_10007C77C((uint64_t)v18, (uint64_t)v21, type metadata accessor for LocationComponentViewModel);
  if ((v34 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v21, type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10007C77C((uint64_t)v21, (uint64_t)v29, type metadata accessor for LocationComponentViewModel);
  v45 = 0;
  v46 = &v29[*(int *)(v5 + 20)];
  v47 = v72;
  *(_QWORD *)v46 = v69;
  *((_QWORD *)v46 + 1) = v47;
  v48 = v70;
  *((_QWORD *)v46 + 2) = v71;
  *((_QWORD *)v46 + 3) = v48;
LABEL_17:
  sub_1000988B8((uint64_t)v29, v45);
  sub_1002228F0((uint64_t)v29, (uint64_t)v32);
  sub_10009D3BC(v93 + *(int *)(v44 + 20) + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v26);
  v49 = &v26[*(int *)(v5 + 20)];
  v50 = v75;
  *(_QWORD *)v49 = v76;
  *((_QWORD *)v49 + 1) = v50;
  v51 = v73;
  *((_QWORD *)v49 + 2) = v74;
  *((_QWORD *)v49 + 3) = v51;
  sub_1000988B8((uint64_t)v26, 0);
  v52 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v53 = v90;
  sub_10009D3BC(v52, v90);
  v54 = (uint64_t *)(v53 + *(int *)(v5 + 20));
  v55 = v79;
  *v54 = v80;
  v54[1] = v55;
  v56 = v77;
  v54[2] = v78;
  v54[3] = v56;
  v57 = v89;
  sub_10003773C((uint64_t)v32, v89, &qword_100BCC760);
  v58 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v59 = v91;
  sub_10009D3BC(v58, v91);
  v60 = (uint64_t *)(v59 + *(int *)(v5 + 20));
  v61 = v83;
  *v60 = v84;
  v60[1] = v61;
  v62 = v81;
  v60[2] = v82;
  v60[3] = v62;
  v63 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v64 = v92;
  sub_10009D3BC(v63, v92);
  v65 = (uint64_t *)(v64 + *(int *)(v5 + 20));
  v66 = v87;
  *v65 = v88;
  v65[1] = v66;
  v67 = v86;
  v65[2] = v85;
  v65[3] = v67;
  sub_10087CED0((uint64_t)v26, v53, v57, v59, v64);
  sub_100021A14((uint64_t)v32, &qword_100BCC760);
  sub_100098640();
}

void sub_1004D5A38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 *v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 *v60;
  __n128 *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  _BYTE v107[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = sub_1000878BC();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_10009E540();
  v9 = a1;
  v10 = a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map, (uint64_t)v107);
  sub_10003773C(v10, v6, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7) == 1)
  {
    sub_100021A14(v6, &qword_100BC4A98);
    v11 = sub_1000BA294(&qword_100BCC750);
    v12 = swift_allocObject(v11, 248, 7);
    *(_OWORD *)(v12 + 16) = xmmword_10098E040;
    v13 = sub_1000BA294(&qword_100BCC758);
    v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = *(_QWORD *)(v8 + 72);
    v16 = v13;
    v17 = (__n128 *)sub_1000BA6B8(v13);
    v18 = sub_100099954(v17, (__n128)xmmword_10097CA50);
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v18 + v14);
    *(_QWORD *)(v12 + 32) = sub_1000B4580();
    *(_QWORD *)(v12 + 40) = v19;
    *(_QWORD *)(v12 + 48) = v20;
    v21 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000D11D8(v21);
    sub_10009F7F4(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23);
    *(_QWORD *)(v12 + 56) = sub_1000B4580();
    *(_QWORD *)(v12 + 64) = v24;
    *(_QWORD *)(v12 + 72) = v25;
    v26 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000D11D8(v26);
    sub_10009F7F4(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28);
    *(_QWORD *)(v12 + 80) = sub_1000B4580();
    *(_QWORD *)(v12 + 88) = v29;
    *(_QWORD *)(v12 + 96) = v30;
    v31 = sub_1000BA6B8(v16);
    *(_OWORD *)(v31 + 16) = v106;
    sub_10009F7F4(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert, v31 + v14);
    *(_QWORD *)(v12 + 104) = sub_100080C44(v31);
    *(_QWORD *)(v12 + 112) = v32;
    *(_QWORD *)(v12 + 120) = v33;
    v34 = (__n128 *)sub_1000C2514(v16, v14 + 2 * v15);
    v35 = (char *)sub_100099954(v34, (__n128)xmmword_10097DA20) + v14;
    v36 = *(_QWORD *)(a1 + 16);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v35);
    sub_10009F7F4(v36 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 128) = sub_1000B4580();
    *(_QWORD *)(v12 + 136) = v37;
    *(_QWORD *)(v12 + 144) = v38;
    v39 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v39);
    sub_100095B78(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v35, type metadata accessor for LocationComponentContainerViewModel);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 152) = sub_1000B4580();
    *(_QWORD *)(v12 + 160) = v40;
    *(_QWORD *)(v12 + 168) = v41;
    v42 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v42);
    sub_100098A1C(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v35);
    sub_100098A1C(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 176) = sub_1000B4580();
    *(_QWORD *)(v12 + 184) = v43;
    *(_QWORD *)(v12 + 192) = v44;
    v45 = (__n128 *)sub_1000BA6B8(v16);
    sub_1000B46B8(v45);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v35);
    sub_100098B48(v15 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v35[v15]);
    *(_QWORD *)(v12 + 200) = sub_1000B4580();
    *(_QWORD *)(v12 + 208) = v46;
    *(_QWORD *)(v12 + 216) = v47;
    v48 = sub_1000BA6B8(v16);
    *(_OWORD *)(v48 + 16) = v106;
    v49 = *(_QWORD *)(a1 + 16);
    sub_10009D3BC(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v14);
    sub_10009D3BC(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v14 + v15);
    *(_QWORD *)(v12 + 224) = sub_100080C44(v48);
    *(_QWORD *)(v12 + 232) = v50;
    *(_QWORD *)(v12 + 240) = v51;
  }
  else
  {
    sub_10007C77C(v6, v1, type metadata accessor for LocationComponentContainerViewModel);
    v52 = sub_1000BA294(&qword_100BCC750);
    v53 = swift_allocObject(v52, 272, 7);
    *(_OWORD *)(v53 + 16) = xmmword_10097FA60;
    v54 = sub_1000BA294(&qword_100BCC758);
    v55 = *(_QWORD *)(v8 + 72);
    v56 = *(unsigned __int8 *)(v8 + 80);
    v57 = (v56 + 32) & ~v56;
    v105 = v1;
    v58 = v56 | 7;
    v59 = v54;
    v60 = (__n128 *)swift_allocObject(v54, v57 + v55, v56 | 7);
    v61 = sub_100099954(v60, (__n128)xmmword_10097CA50);
    sub_1000B4590(v9 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v61 + v57);
    *(_QWORD *)(v53 + 32) = sub_1000B4588();
    *(_QWORD *)(v53 + 40) = v62;
    *(_QWORD *)(v53 + 48) = v63;
    v64 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v64);
    sub_1000B4590(v65 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v66);
    *(_QWORD *)(v53 + 56) = sub_1000B4588();
    *(_QWORD *)(v53 + 64) = v67;
    *(_QWORD *)(v53 + 72) = v68;
    v69 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v69);
    sub_1000B4590(v70 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
    *(_QWORD *)(v53 + 80) = sub_1000B4588();
    *(_QWORD *)(v53 + 88) = v72;
    *(_QWORD *)(v53 + 96) = v73;
    v74 = sub_1000BA5D8();
    *(_OWORD *)(v74 + 16) = v106;
    sub_1000B4590(v1, v74 + v57);
    *(_QWORD *)(v53 + 104) = sub_1000B4588();
    *(_QWORD *)(v53 + 112) = v75;
    *(_QWORD *)(v53 + 120) = v76;
    v77 = sub_1000BA5D8();
    *(_OWORD *)(v77 + 16) = v106;
    sub_1000B4590(v9 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert, v77 + v57);
    *(_QWORD *)(v53 + 128) = sub_1000B4580();
    *(_QWORD *)(v53 + 136) = v78;
    *(_QWORD *)(v53 + 144) = v79;
    v80 = v9;
    v81 = (__n128 *)swift_allocObject(v59, v57 + 2 * v55, v58);
    v82 = (char *)sub_100099954(v81, (__n128)xmmword_10097DA20) + v57;
    v83 = *(_QWORD *)(v80 + 16);
    v103 = v80;
    sub_1000B4590(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v82);
    v104 = v55;
    sub_1000B4590(v83 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 152) = sub_1000B4588();
    *(_QWORD *)(v53 + 160) = v84;
    *(_QWORD *)(v53 + 168) = v85;
    v86 = (__n128 *)sub_1000C2514(v59, v57 + 2 * v55);
    sub_1000C52D8(v86);
    v87 = *(_QWORD *)(v80 + 16);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v82);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 176) = sub_1000B4588();
    *(_QWORD *)(v53 + 184) = v88;
    *(_QWORD *)(v53 + 192) = v89;
    v90 = v57 + 2 * v55;
    v91 = (__n128 *)sub_1000C2514(v59, v90);
    sub_1000C52D8(v91);
    v92 = *(_QWORD *)(v103 + 16);
    sub_1000B4590(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v82);
    sub_100098A1C(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v82[v55]);
    *(_QWORD *)(v53 + 200) = sub_1000B4588();
    *(_QWORD *)(v53 + 208) = v93;
    *(_QWORD *)(v53 + 216) = v94;
    v95 = (__n128 *)sub_1000C2514(v59, v90);
    sub_1000C52D8(v95);
    v96 = *(_QWORD *)(v103 + 16);
    sub_100095B78(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v82, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v82[v55], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v53 + 224) = sub_1000B4588();
    *(_QWORD *)(v53 + 232) = v97;
    *(_QWORD *)(v53 + 240) = v98;
    v99 = swift_allocObject(v59, v90, v58);
    *(_OWORD *)(v99 + 16) = v106;
    v100 = *(_QWORD *)(v103 + 16);
    sub_100098B48(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v99 + v57);
    sub_100098B48(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v57 + v104);
    *(_QWORD *)(v53 + 248) = sub_100080C44(v99);
    *(_QWORD *)(v53 + 256) = v101;
    *(_QWORD *)(v53 + 264) = v102;
    sub_1000215BC(v105, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_1004D6174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1000878BC();
  sub_1000B42B0();
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_10009E540();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v14 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v17 = v15;
  swift_release(v14);
  sub_1000C5D34(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_map);
  sub_1000C661C();
  sub_100098B50();
  _s7Weather24LocationCompositionStateOwst_0(v13, 0, 1, v2);
  sub_1000C5D34(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_airQuality);
  sub_1000C661C();
  sub_100098B50();
  sub_1000C5D34(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_severeAlert);
  sub_1000C661C();
  sub_100098B50();
  sub_1001DAC38(v17, v13, (uint64_t)v8, (uint64_t)v6);
  sub_100098640();
}

uint64_t sub_1004D62E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = *((_BYTE *)a2 + 24);
    swift_bridgeObjectRetain();
    sub_10008D47C(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (uint64_t *)(a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = type metadata accessor for AutomationInfo(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
    if (EnumCaseMultiPayload == 2)
    {
      v21 = *v12;
      v22 = v12[1];
      v23 = *((_BYTE *)v12 + 16);
      sub_1000B2044(v21, v22, v23);
      *v11 = v21;
      v11[1] = v22;
      *((_BYTE *)v11 + 16) = v23;
      v24 = v11;
      v25 = v13;
      v26 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload(v12))
      {
        case 0u:
          v16 = v12[1];
          *v11 = *v12;
          v11[1] = v16;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 0;
          goto LABEL_27;
        case 1u:
          v35 = v12[1];
          *v11 = *v12;
          v11[1] = v35;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 1;
          goto LABEL_27;
        case 2u:
          v36 = v12[1];
          *v11 = *v12;
          v11[1] = v36;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 2;
          goto LABEL_27;
        case 3u:
          v37 = v12[1];
          *v11 = *v12;
          v11[1] = v37;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 3;
          goto LABEL_27;
        case 4u:
          v38 = v12[1];
          *v11 = *v12;
          v11[1] = v38;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 4;
          goto LABEL_27;
        case 5u:
          v39 = v12[1];
          *v11 = *v12;
          v11[1] = v39;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 5;
          goto LABEL_27;
        case 6u:
          v40 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v11, v12, v40);
          v17 = v11;
          v18 = v15;
          v19 = 6;
          goto LABEL_27;
        case 7u:
          v41 = v12[1];
          *v11 = *v12;
          v11[1] = v41;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 7;
          goto LABEL_27;
        case 8u:
          v42 = v12[1];
          *v11 = *v12;
          v11[1] = v42;
          v43 = v12[3];
          v11[2] = v12[2];
          v11[3] = v43;
          v44 = v12[4];
          v45 = v12[5];
          v11[4] = v44;
          v11[5] = v45;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 8;
          goto LABEL_27;
        case 9u:
          v46 = v12[1];
          *v11 = *v12;
          v11[1] = v46;
          v47 = v12[2];
          v48 = v12[3];
          v11[2] = v47;
          v11[3] = v48;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 9;
          goto LABEL_27;
        case 0xAu:
          v49 = v12[1];
          *v11 = *v12;
          v11[1] = v49;
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 10;
          goto LABEL_27;
        case 0xBu:
          v50 = v12[1];
          *v11 = *v12;
          v11[1] = v50;
          v51 = v12[2];
          v52 = v12[3];
          v11[2] = v51;
          v11[3] = v52;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17 = v11;
          v18 = v15;
          v19 = 11;
LABEL_27:
          swift_storeEnumTagMultiPayload(v17, v18, v19);
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      v24 = v11;
      v25 = v13;
      v26 = 1;
    }
    else
    {
      v27 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload(v12))
      {
        case 0u:
          v28 = v12[1];
          *v11 = *v12;
          v11[1] = v28;
          swift_bridgeObjectRetain();
          v29 = v11;
          v30 = v27;
          v31 = 0;
          goto LABEL_14;
        case 1u:
          v32 = v12[1];
          *v11 = *v12;
          v11[1] = v32;
          swift_bridgeObjectRetain();
          v29 = v11;
          v30 = v27;
          v31 = 1;
          goto LABEL_14;
        case 2u:
          v33 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v11, v12, v33);
          v29 = v11;
          v30 = v27;
          v31 = 2;
          goto LABEL_14;
        case 3u:
          v34 = v12[1];
          *v11 = *v12;
          v11[1] = v34;
          swift_bridgeObjectRetain();
          v29 = v11;
          v30 = v27;
          v31 = 3;
LABEL_14:
          swift_storeEnumTagMultiPayload(v29, v30, v31);
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          break;
      }
      v24 = v11;
      v25 = v13;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
  }
  return a1;
}

void sub_1004D66C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;

  swift_bridgeObjectRelease();
  sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for AutomationInfo(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      sub_10006BD8C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_BYTE *)(v4 + 16));
      break;
    case 1:
      type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload(v4))
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 0xAu:
          goto LABEL_7;
        case 6u:
LABEL_9:
          v6 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
          return;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 9u:
        case 0xBu:
          swift_bridgeObjectRelease();
LABEL_7:
          swift_bridgeObjectRelease();
          break;
        default:
          return;
      }
      break;
    case 0:
      type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload(v4))
      {
        case 0u:
        case 1u:
        case 3u:
          goto LABEL_7;
        case 2u:
          goto LABEL_9;
        default:
          return;
      }
  }
}

uint64_t sub_1004D6804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  uint64_t v12;
  uint64_t EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_10008D47C(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for AutomationInfo(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11);
  v14 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v17 = *(_QWORD *)v11;
    v18 = *((_QWORD *)v11 + 1);
    v19 = *((_BYTE *)v11 + 16);
    sub_1000B2044(v17, v18, v19);
    *v10 = v17;
    v10[1] = v18;
    *((_BYTE *)v10 + 16) = v19;
  }
  else
  {
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload(v11))
      {
        case 0u:
          goto LABEL_7;
        case 1u:
          goto LABEL_9;
        case 2u:
          v16 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v16;
          swift_bridgeObjectRetain();
          goto LABEL_12;
        case 3u:
          goto LABEL_10;
        case 4u:
          v27 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v27;
          swift_bridgeObjectRetain();
          v21 = v10;
          v22 = v15;
          v23 = 4;
          goto LABEL_21;
        case 5u:
          v28 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v28;
          swift_bridgeObjectRetain();
          v21 = v10;
          v22 = v15;
          v23 = 5;
          goto LABEL_21;
        case 6u:
          v29 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v10, v11, v29);
          v21 = v10;
          v22 = v15;
          v23 = 6;
          goto LABEL_21;
        case 7u:
          v30 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v30;
          swift_bridgeObjectRetain();
          v21 = v10;
          v22 = v15;
          v23 = 7;
          goto LABEL_21;
        case 8u:
          v31 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v31;
          v32 = *((_QWORD *)v11 + 3);
          v10[2] = *((_QWORD *)v11 + 2);
          v10[3] = v32;
          v33 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v10[4] = v33;
          v10[5] = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = v10;
          v22 = v15;
          v23 = 8;
          goto LABEL_21;
        case 9u:
          v35 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v35;
          v36 = *((_QWORD *)v11 + 2);
          v37 = *((_QWORD *)v11 + 3);
          v10[2] = v36;
          v10[3] = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = v10;
          v22 = v15;
          v23 = 9;
          goto LABEL_21;
        case 0xAu:
          v38 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v38;
          swift_bridgeObjectRetain();
          v21 = v10;
          v22 = v15;
          v23 = 10;
          goto LABEL_21;
        case 0xBu:
          v39 = *((_QWORD *)v11 + 1);
          *v10 = *(_QWORD *)v11;
          v10[1] = v39;
          v40 = *((_QWORD *)v11 + 2);
          v41 = *((_QWORD *)v11 + 3);
          v10[2] = v40;
          v10[3] = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = v10;
          v22 = v15;
          v23 = 11;
          goto LABEL_21;
        default:
          goto LABEL_8;
      }
    }
    v15 = type metadata accessor for AutomationViewInfo(0);
    switch(swift_getEnumCaseMultiPayload(v11))
    {
      case 0u:
LABEL_7:
        v20 = *((_QWORD *)v11 + 1);
        *v10 = *(_QWORD *)v11;
        v10[1] = v20;
        swift_bridgeObjectRetain();
        v21 = v10;
        v22 = v15;
        v23 = 0;
        goto LABEL_21;
      case 1u:
LABEL_9:
        v24 = *((_QWORD *)v11 + 1);
        *v10 = *(_QWORD *)v11;
        v10[1] = v24;
        swift_bridgeObjectRetain();
        v21 = v10;
        v22 = v15;
        v23 = 1;
        goto LABEL_21;
      case 2u:
        v26 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(uint64_t *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, v11, v26);
LABEL_12:
        v21 = v10;
        v22 = v15;
        v23 = 2;
        goto LABEL_21;
      case 3u:
LABEL_10:
        v25 = *((_QWORD *)v11 + 1);
        *v10 = *(_QWORD *)v11;
        v10[1] = v25;
        swift_bridgeObjectRetain();
        v21 = v10;
        v22 = v15;
        v23 = 3;
LABEL_21:
        swift_storeEnumTagMultiPayload(v21, v22, v23);
        break;
      default:
LABEL_8:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t sub_1004D6B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1000B15F8(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (uint64_t *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_10006BD20(a1 + v10, type metadata accessor for AutomationInfo);
    v13 = type metadata accessor for AutomationInfo(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
    v15 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v17 = *(_QWORD *)v12;
      v18 = *((_QWORD *)v12 + 1);
      v19 = *((_BYTE *)v12 + 16);
      sub_1000B2044(v17, v18, v19);
      *v11 = v17;
      v11[1] = v18;
      *((_BYTE *)v11 + 16) = v19;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        v16 = type metadata accessor for AutomationCellInfo(0);
        switch(swift_getEnumCaseMultiPayload(v12))
        {
          case 0u:
            goto LABEL_8;
          case 1u:
            goto LABEL_10;
          case 2u:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 3u:
            goto LABEL_11;
          case 4u:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            swift_bridgeObjectRetain();
            v20 = v11;
            v21 = v16;
            v22 = 4;
            goto LABEL_22;
          case 5u:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            swift_bridgeObjectRetain();
            v20 = v11;
            v21 = v16;
            v22 = 5;
            goto LABEL_22;
          case 6u:
            v24 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(uint64_t *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v12, v24);
            v20 = v11;
            v21 = v16;
            v22 = 6;
            goto LABEL_22;
          case 7u:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            swift_bridgeObjectRetain();
            v20 = v11;
            v21 = v16;
            v22 = 7;
            goto LABEL_22;
          case 8u:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            v11[2] = *((_QWORD *)v12 + 2);
            v11[3] = *((_QWORD *)v12 + 3);
            v11[4] = *((_QWORD *)v12 + 4);
            v11[5] = *((_QWORD *)v12 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v20 = v11;
            v21 = v16;
            v22 = 8;
            goto LABEL_22;
          case 9u:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            v11[2] = *((_QWORD *)v12 + 2);
            v11[3] = *((_QWORD *)v12 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v20 = v11;
            v21 = v16;
            v22 = 9;
            goto LABEL_22;
          case 0xAu:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            swift_bridgeObjectRetain();
            v20 = v11;
            v21 = v16;
            v22 = 10;
            goto LABEL_22;
          case 0xBu:
            *v11 = *(_QWORD *)v12;
            v11[1] = *((_QWORD *)v12 + 1);
            v11[2] = *((_QWORD *)v12 + 2);
            v11[3] = *((_QWORD *)v12 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v20 = v11;
            v21 = v16;
            v22 = 11;
            goto LABEL_22;
          default:
            goto LABEL_9;
        }
      }
      v16 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload(v12))
      {
        case 0u:
LABEL_8:
          *v11 = *(_QWORD *)v12;
          v11[1] = *((_QWORD *)v12 + 1);
          swift_bridgeObjectRetain();
          v20 = v11;
          v21 = v16;
          v22 = 0;
          goto LABEL_22;
        case 1u:
LABEL_10:
          *v11 = *(_QWORD *)v12;
          v11[1] = *((_QWORD *)v12 + 1);
          swift_bridgeObjectRetain();
          v20 = v11;
          v21 = v16;
          v22 = 1;
          goto LABEL_22;
        case 2u:
          v23 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v11, v12, v23);
LABEL_13:
          v20 = v11;
          v21 = v16;
          v22 = 2;
          goto LABEL_22;
        case 3u:
LABEL_11:
          *v11 = *(_QWORD *)v12;
          v11[1] = *((_QWORD *)v12 + 1);
          swift_bridgeObjectRetain();
          v20 = v11;
          v21 = v16;
          v22 = 3;
LABEL_22:
          swift_storeEnumTagMultiPayload(v20, v21, v22);
          break;
        default:
LABEL_9:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  return a1;
}

uint64_t sub_1004D6F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for AutomationInfo(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = type metadata accessor for AutomationCellInfo(0);
    if (swift_getEnumCaseMultiPayload(v6) == 6)
    {
      v12 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
      swift_storeEnumTagMultiPayload(v5, v11, 6);
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = v5;
    v14 = v7;
    v15 = 1;
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = type metadata accessor for AutomationViewInfo(0);
    if (swift_getEnumCaseMultiPayload(v6) == 2)
    {
      v10 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload(v5, v9, 2);
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v13 = v5;
    v14 = v7;
    v15 = 0;
LABEL_12:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

uint64_t sub_1004D708C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1000B15F8(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_10006BD20(a1 + v10, type metadata accessor for AutomationInfo);
    v13 = type metadata accessor for AutomationInfo(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for AutomationCellInfo(0);
      if (swift_getEnumCaseMultiPayload(v12) == 6)
      {
        v18 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v11, v12, v18);
        swift_storeEnumTagMultiPayload(v11, v17, 6);
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      v19 = v11;
      v20 = v13;
      v21 = 1;
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v15 = type metadata accessor for AutomationViewInfo(0);
      if (swift_getEnumCaseMultiPayload(v12) == 2)
      {
        v16 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
        swift_storeEnumTagMultiPayload(v11, v15, 2);
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      v19 = v11;
      v20 = v13;
      v21 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v19, v20, v21);
      return a1;
    }
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1004D7240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D724C);
}

uint64_t sub_1004D724C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BAE80();
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1004D72BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D72C8);
}

uint64_t sub_1004D72C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000BAE80();
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1004D7330(__n128 a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v3 = type metadata accessor for String.Encoding(0, a1);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for AutomationInfoProperty(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D7504((uint64_t)v1, (uint64_t)v6);
  v7 = *((_QWORD *)v6 + 2);
  v8 = v6[24];
  sub_10008D47C(v7, v8);
  sub_100109B54();
  v10 = v9;
  sub_1000B15F8(v7, v8);
  sub_10006BD20((uint64_t)v6, type metadata accessor for AutomationInfoProperty);
  if ((v10 & 1) != 0)
  {
    v11 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    JSONEncoder.init()();
    v12 = (char *)v1 + *(int *)(v4 + 24);
    v13 = sub_1000BAE80();
    v14 = sub_1004D7548();
    v15 = dispatch thunk of JSONEncoder.encode<A>(_:)(v12, v13, v14);
    v17 = v16;
    v18 = swift_release();
    static String.Encoding.utf8.getter(v18);
    v19 = String.init(data:encoding:)(v15);
    v21 = v20;
    sub_10021D04C(v15, v17);
    if (v21)
    {
      swift_bridgeObjectRelease();
      *v2 = v19;
      v2[1] = v21;
    }
    else
    {
      __break(1u);
      swift_unexpectedError(v19, "Weather/AutomationInfoProperty.swift", 36, 1, 33);
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    *v1 = 0;
    v1[1] = 0xE000000000000000;
  }
}

uint64_t sub_1004D7504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AutomationInfoProperty(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004D7548()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE86A8;
  if (!qword_100BE86A8)
  {
    v1 = type metadata accessor for AutomationInfo(255);
    result = swift_getWitnessTable(&unk_1009CA9D4, v1);
    atomic_store(result, (unint64_t *)&qword_100BE86A8);
  }
  return result;
}

uint64_t sub_1004D7588@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t HourPrecipitationStringBuilder;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t HourPrecipitationDetailInteractor;
  uint64_t HourPrecipitationDetailModule;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[3];
  uint64_t v31;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BE8758);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v31)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BC45E8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  HourPrecipitationStringBuilder = type metadata accessor for NextHourPrecipitationStringBuilder(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(HourPrecipitationStringBuilder, HourPrecipitationStringBuilder, v12, v13);
  if (result)
  {
    v15 = result;
    v16 = sub_100068EB4((uint64_t)v30, v31);
    __chkstk_darwin(v16);
    v18 = (_QWORD *)((char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v19 + 16))(v18);
    v20 = *v18;
    HourPrecipitationDetailInteractor = type metadata accessor for NextHourPrecipitationDetailInteractor();
    v29[3] = HourPrecipitationDetailInteractor;
    v29[4] = &off_100B7D1C0;
    v29[0] = v20;
    HourPrecipitationDetailModule = type metadata accessor for NextHourPrecipitationDetailModule();
    v23 = (_QWORD *)swift_allocObject(HourPrecipitationDetailModule, 72, 7);
    v24 = sub_100068EB4((uint64_t)v29, HourPrecipitationDetailInteractor);
    __chkstk_darwin(v24);
    v26 = (_QWORD *)((char *)v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v27 + 16))(v26);
    v28 = *v26;
    v23[5] = HourPrecipitationDetailInteractor;
    v23[6] = &off_100B7D1C0;
    v23[2] = v28;
    v23[7] = v11;
    v23[8] = v15;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
    result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
    a2[3] = HourPrecipitationDetailModule;
    a2[4] = &off_100B89278;
    *a2 = v23;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1004D7798@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for NextHourPrecipitationDetailViewStateReducer, (uint64_t)&off_100B6F2B0, a1);
}

double sub_1004D77AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t HourPrecipitationStringBuilder;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v0 = sub_1000BA294(&qword_100BE8750);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_1004D7920, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BE8758);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_1004D7A58, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BE8760);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1004D7C78, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BE8768);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_1004D7C8C, 0, v6);
  swift_release(v7);
  v8 = sub_1000BA294(&qword_100BE8770);
  v9 = RegistrationContainer.register<A>(_:name:factory:)(v8, 0, 0, sub_1004D7D28, 0, v8);
  swift_release(v9);
  HourPrecipitationStringBuilder = type metadata accessor for NextHourPrecipitationStringBuilder(0);
  v11 = RegistrationContainer.register<A>(_:name:factory:)(HourPrecipitationStringBuilder, 0, 0, sub_1004D7DD4, 0, HourPrecipitationStringBuilder);
  swift_release(v11);
  v12 = sub_1000BA294(&qword_100BE8778);
  v13 = RegistrationContainer.register<A>(_:name:factory:)(v12, 0, 0, sub_1004D7E08, 0, v12);
  swift_release(v13);
  v14 = sub_1000BA294(&qword_100BC45E8);
  v15 = RegistrationContainer.register<A>(_:name:factory:)(v14, 0, 0, sub_1004D7F2C, 0, v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1004D7920@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v6, 0x6E6F697461636F4CLL, 0xEE00656C75646F4DLL, v6, v4, v5);
  if (result)
  {
    v8 = result;
    v9 = Tracker.chain(name:identifier:)(0xD00000000000001BLL, 0x80000001009F0190, 0, 0);
    swift_release(v8);
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BC43F8);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v15)
    {
      a2[3] = (uint64_t)&type metadata for NextHourPrecipitationDetailTracker;
      a2[4] = (uint64_t)&off_100B9B730;
      v13 = swift_allocObject(&unk_100B78258, 64, 7);
      *a2 = v13;
      *(_QWORD *)(v13 + 16) = v9;
      return sub_10003C800(&v14, v13 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004D7A58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t HourPrecipitationDetailInteractor;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  ValueWitnessTable *v23;
  uint64_t *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v32;
  if (v32)
  {
    v28 = v33;
    v9 = a1[3];
    v10 = a1[4];
    sub_1000DB418(a1, v9);
    v11 = sub_1000BA294(&qword_100BE8750);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
    if (v31)
    {
      v12 = sub_100068EB4((uint64_t)v30, v31);
      __chkstk_darwin(v12);
      v14 = (_OWORD *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v15 + 16))(v14);
      v29[3] = &type metadata for NextHourPrecipitationDetailTracker;
      v29[4] = &off_100B9B730;
      v16 = (_OWORD *)swift_allocObject(&unk_100B78258, 64, 7);
      v29[0] = v16;
      v17 = v14[1];
      v16[1] = *v14;
      v16[2] = v17;
      v16[3] = v14[2];
      HourPrecipitationDetailInteractor = type metadata accessor for NextHourPrecipitationDetailInteractor();
      v19 = (_QWORD *)swift_allocObject(HourPrecipitationDetailInteractor, 72, 7);
      v20 = sub_100068EB4((uint64_t)v29, (uint64_t)&type metadata for NextHourPrecipitationDetailTracker);
      __chkstk_darwin(v20);
      v22 = (_OWORD *)((char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      ((void (*)(uint64_t, uint64_t *))v23->initializeWithCopy)((uint64_t)v22, v24);
      v19[7] = &type metadata for NextHourPrecipitationDetailTracker;
      v19[8] = &off_100B9B730;
      v25 = (_OWORD *)swift_allocObject(&unk_100B78258, 64, 7);
      v26 = v22[1];
      v25[1] = *v22;
      v25[2] = v26;
      v25[3] = v22[2];
      v19[2] = v8;
      v19[3] = v28;
      v19[4] = v25;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
      a2[3] = HourPrecipitationDetailInteractor;
      a2[4] = &off_100B7D1C0;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004D7C78@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for NextHourPrecipitationDetailInputFactory, (uint64_t)&off_100B687A8, a1);
}

uint64_t sub_1004D7C8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t HourPrecipitationChartViewModelFactory;
  _BYTE v8[24];
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BE8770);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v9)
  {
    HourPrecipitationChartViewModelFactory = type metadata accessor for NextHourPrecipitationChartViewModelFactory(0);
    swift_allocObject(HourPrecipitationChartViewModelFactory, *(unsigned int *)(HourPrecipitationChartViewModelFactory + 48), *(unsigned __int16 *)(HourPrecipitationChartViewModelFactory + 52));
    result = NextHourPrecipitationChartViewModelFactory.init(leadingPrecipitationValueRule:)(v8);
    a2[3] = HourPrecipitationChartViewModelFactory;
    a2[4] = (uint64_t)&protocol witness table for NextHourPrecipitationChartViewModelFactory;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004D7D28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v8)
  {
    v7 = sub_1004D826C();
    a2[3] = (uint64_t)&type metadata for NextHourPrecipitationLeadingValueRule;
    a2[4] = v7;
    result = swift_allocObject(&unk_100B78230, 48, 7);
    *a2 = result;
    *(_QWORD *)(result + 16) = v8;
    *(_OWORD *)(result + 24) = v9;
    *(_QWORD *)(result + 40) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004D7DD4()
{
  uint64_t HourPrecipitationStringBuilder;

  HourPrecipitationStringBuilder = type metadata accessor for NextHourPrecipitationStringBuilder(0);
  swift_allocObject(HourPrecipitationStringBuilder, *(unsigned int *)(HourPrecipitationStringBuilder + 48), *(unsigned __int16 *)(HourPrecipitationStringBuilder + 52));
  return NextHourPrecipitationStringBuilder.init()();
}

uint64_t sub_1004D7E08@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t HourPrecipitationStringBuilder;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t HourPrecipitationDetailViewModelFactory;
  __int128 v17;
  uint64_t v18;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BE8768);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  HourPrecipitationStringBuilder = type metadata accessor for NextHourPrecipitationStringBuilder(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(HourPrecipitationStringBuilder, HourPrecipitationStringBuilder, v8, v9);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = type metadata accessor for WeatherForecastDescriptionStringBuilder(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (result)
  {
    v15 = result;
    HourPrecipitationDetailViewModelFactory = type metadata accessor for NextHourPrecipitationDetailViewModelFactory();
    swift_allocObject(HourPrecipitationDetailViewModelFactory, 72, 7);
    result = sub_100248A44(&v17, v11, v15);
    a2[3] = HourPrecipitationDetailViewModelFactory;
    a2[4] = (uint64_t)&off_100B66780;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1004D7F2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t HourPrecipitationDetailInputFactory;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v30;
  v7 = v31;
  v9 = v29;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BE8760);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v26, v27);
  HourPrecipitationDetailInputFactory = type metadata accessor for NextHourPrecipitationDetailInputFactory();
  v25 = &off_100B687A8;
  v23[0] = v13;
  sub_100043CA8((uint64_t)v23, (uint64_t)v22);
  v14 = swift_allocObject(&unk_100B781B8, 56, 7);
  sub_10003C800(v22, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  v15 = swift_allocObject(&unk_100B781E0, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1004D8238;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BE8778);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v27)
  {
    v19 = *sub_1000DB418(v26, v27);
    HourPrecipitationDetailInputFactory = type metadata accessor for NextHourPrecipitationDetailViewModelFactory();
    v25 = &off_100B66780;
    v23[0] = v19;
    sub_100043CA8((uint64_t)v23, (uint64_t)v22);
    v20 = swift_allocObject(&unk_100B78208, 56, 7);
    sub_10003C800(v22, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
    v21 = sub_1000BA294(&qword_100BC45E8);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    return sub_100183CBC(v6, v9, v8, v7, sub_100182F48, 0, sub_1000A22C0, v15, sub_1004D8264, v20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1004D8184@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_10028D878(a1, a3);
}

uint64_t sub_1004D81CC@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_100248A7C(a1, a3);
}

uint64_t sub_1004D8214()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004D8238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004D8184(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1004D8240()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004D8264@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004D81CC(a1, (_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1004D826C()
{
  unint64_t result;

  result = qword_100BE8780;
  if (!qword_100BE8780)
  {
    result = swift_getWitnessTable(&unk_100998830, &type metadata for NextHourPrecipitationLeadingValueRule);
    atomic_store(result, (unint64_t *)&qword_100BE8780);
  }
  return result;
}

uint64_t sub_1004D82A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004D82D4()
{
  uint64_t v0;

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

id sub_1004D8304()
{
  uint64_t v0;
  char v1;
  id v2;
  _QWORD v4[5];

  sub_100043CA8(v0, (uint64_t)v4);
  v1 = *(_BYTE *)(v0 + 40);
  v2 = objc_allocWithZone((Class)type metadata accessor for SevereWeatherFeatureView.Coordinator());
  return sub_1004D89BC(v4, v1);
}

id sub_1004D834C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  NSString v38;
  id v39;
  id v40;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 60.0);
  v3 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v4 = objc_msgSend(v3, "configurationWithFont:scale:", v2, -1);

  v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v44 = objc_msgSend(v3, "configurationWithHierarchicalColor:", v5);

  sub_100120444();
  v46 = v4;
  v45 = sub_100292720(0x6461622E6C6C6562, 0xEF6C6C69662E6567, v4);
  v6 = objc_msgSend(v45, "imageByApplyingSymbolConfiguration:", v44);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  sub_1000BA330();
  v11 = sub_1000BAE88(v9, v10, (uint64_t)"Introducing Severe Weather Alerts");
  v13 = v12;

  v14 = objc_msgSend(v7, "mainBundle");
  sub_1000BA330();
  v17 = sub_1000BAE88(v15, v16, (uint64_t)"Get notifications about important weather events, like flash floods and tornadoes. Available for select countries and regions.");
  v19 = v18;

  v20 = objc_allocWithZone((Class)OBWelcomeController);
  v43 = v6;
  v21 = sub_100292A78(v11, v13, v17, v19, v6);
  v22 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v23 = sub_1004D87D4(v1);
  sub_100292B14(v23, v24, 0, v22);
  v25 = sub_1000BA294(&qword_100BE87C8);
  UIViewControllerRepresentableContext.coordinator.getter(&v47, v25);
  v26 = v47;
  sub_1000CCE28(v22, "addTarget:action:forControlEvents:", v27, (uint64_t)"continueButtonTapped");

  v28 = objc_msgSend(v21, "buttonTray");
  objc_msgSend(v28, "addButton:", v22);

  v29 = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
  v30 = objc_msgSend(v7, "mainBundle");
  sub_1000BA330();
  v31._countAndFlagsBits = 0x776F4E20746F4ELL;
  v31._object = (void *)0xE700000000000000;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, *(Swift::String *)(&v42 - 1));

  sub_100292B14(v33._countAndFlagsBits, (uint64_t)v33._object, 0, v29);
  UIViewControllerRepresentableContext.coordinator.getter(&v47, v25);
  v34 = v47;
  sub_1000CCE28(v29, "addTarget:action:forControlEvents:", v35, (uint64_t)"notNowButtonTapped");

  v36 = sub_1000C3BD0();
  objc_msgSend(v36, "addButton:", v29);

  v37 = (void *)objc_opt_self(OBPrivacyLinkController);
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend(v37, "linkWithBundleIdentifier:", v38);

  v40 = sub_1000C3BD0();
  objc_msgSend(v40, "setPrivacyLinkController:", v39);

  objc_msgSend(v21, "setModalPresentationStyle:", 2);
  return v21;
}

uint64_t sub_1004D87D4(uint64_t a1)
{
  int v1;
  objc_class *v2;
  uint64_t v3;
  unint64_t v4;
  NSBundle v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t countAndFlagsBits;
  unint64_t v11;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 2)
  {
    v11 = 0x8000000100A07DD0;
    v3 = 0x776F6C6C41;
    v4 = 0xE500000000000000;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
    v8 = 0xD00000000000004DLL;
  }
  else
  {
    v8 = 0xD000000000000059;
    v11 = 0x8000000100A07E20;
    v3 = 0x65756E69746E6F43;
    v4 = 0xE800000000000000;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

id sub_1004D88D4@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1004D8304();
  *a1 = result;
  return result;
}

uint64_t sub_1004D88F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004D8CB4();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1004D8948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004D8CB4();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1004D8998(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D8CB4();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

id sub_1004D89BC(_QWORD *a1, char a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  sub_100043CA8((uint64_t)a1, (uint64_t)&v2[OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor]);
  v2[OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_optInUserStatus] = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, "init");
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v6;
}

void sub_1004D8A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000C2AEC(OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 8))(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_optInUserStatus), v0, v2);
  sub_100079F70();
}

void sub_1004D8AB8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000C2AEC(OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor);
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
  sub_100079F70();
}

uint64_t type metadata accessor for SevereWeatherFeatureView.Coordinator()
{
  return objc_opt_self(_TtCV7Weather24SevereWeatherFeatureView11Coordinator);
}

uint64_t initializeWithCopy for SevereWeatherFeatureView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for SevereWeatherFeatureView(uint64_t a1, uint64_t a2)
{
  sub_100094D04((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for SevereWeatherFeatureView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SevereWeatherFeatureView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SevereWeatherFeatureView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SevereWeatherFeatureView()
{
  return &type metadata for SevereWeatherFeatureView;
}

unint64_t sub_1004D8CB4()
{
  unint64_t result;

  result = qword_100BE87C0;
  if (!qword_100BE87C0)
  {
    result = swift_getWitnessTable(&unk_1009A64EC, &type metadata for SevereWeatherFeatureView);
    atomic_store(result, (unint64_t *)&qword_100BE87C0);
  }
  return result;
}

uint64_t sub_1004D8CF0()
{
  uint64_t v0;

  sub_1004D9558(v0 + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_selectedDate);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004D8D20()
{
  return type metadata accessor for MoonScrubberStorage(0);
}

uint64_t type metadata accessor for MoonScrubberStorage(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE87F8;
  if (!qword_100BE87F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoonScrubberStorage);
  return result;
}

void sub_1004D8D60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1004D8DD4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_1004D8DD4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BD4848)
  {
    v2 = type metadata accessor for MoonDetailSelectedDate(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BD4848);
  }
}

uint64_t sub_1004D8E28(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v10;

  if (a1 == 0x647261776B636162 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x647261776B636162, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x64726177726F66 && a2 == 0xE700000000000000)
  {
    v8 = 0xE700000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64726177726F66, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 2;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(1701736302, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1004D8F64(char a1)
{
  if (!a1)
    return 0x647261776B636162;
  if (a1 == 1)
    return 0x64726177726F66;
  return 1701736302;
}

uint64_t sub_1004D8FB4(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  char v31;
  char v32;

  v4 = sub_1000BA294(&qword_100BE88D0);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v25 = v6;
  v7 = sub_1000BA294(&qword_100BE88D8);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = sub_1000BA294(&qword_100BE88E0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100098728();
  v16 = v15 - v14;
  v17 = sub_1000BA294(&qword_100BE88E8);
  v28 = *(_QWORD *)(v17 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100098694();
  v20 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v20);
  v21 = sub_1004D9798();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MoonScrubberHeaderArrowKind.CodingKeys, &type metadata for MoonScrubberHeaderArrowKind.CodingKeys, v21, v20, v19);
  if (a2)
  {
    if (a2 == 1)
    {
      v31 = 1;
      sub_1004D9810();
      sub_1000BA504((uint64_t)&type metadata for MoonScrubberHeaderArrowKind.ForwardCodingKeys, (uint64_t)&v31);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v11, v24);
    }
    else
    {
      sub_1000CCE34();
      sub_1000BA504((uint64_t)&type metadata for MoonScrubberHeaderArrowKind.NoneCodingKeys, (uint64_t)&v32);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
  }
  else
  {
    v30 = 0;
    sub_1004D984C();
    sub_1000BA504((uint64_t)&type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys, (uint64_t)&v30);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v2, v17);
}

uint64_t sub_1004D91B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  char v48;
  char v49;

  v41 = sub_1000BA294(&qword_100BE8890);
  v44 = *(_QWORD *)(v41 - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v43 = v4;
  v5 = sub_1000BA294(&qword_100BE8898);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v42 = v7;
  v38 = sub_1000BA294(&qword_100BE88A0);
  v8 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  sub_100098694();
  v9 = sub_1000BA294(&qword_100BE88A8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100098728();
  v13 = v12 - v11;
  v15 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v15);
  v16 = sub_1004D9798();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MoonScrubberHeaderArrowKind.CodingKeys, &type metadata for MoonScrubberHeaderArrowKind.CodingKeys, v16, v15, v14);
  if (v45)
    goto LABEL_11;
  v36 = v13;
  v37 = v10;
  v46 = a1;
  v17 = KeyedDecodingContainer.allKeys.getter(v9);
  v18 = v17;
  v19 = *(_QWORD *)(v17 + 16);
  if (!v19)
  {
LABEL_8:
    v26 = type metadata accessor for DecodingError(0);
    swift_allocError(v26, &protocol witness table for DecodingError, 0, 0);
    v28 = v27;
    sub_1000BA294(&qword_100BC6CF8);
    *v28 = &type metadata for MoonScrubberHeaderArrowKind;
    v29 = KeyedDecodingContainer.codingPath.getter(v9);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v29, 0xD00000000000002BLL, 0x80000001009F2600, 0);
    v30 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v26);
    swift_willThrow(v30, v31);
    swift_unknownObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v9);
    a1 = v46;
LABEL_11:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    return v9;
  }
  v20 = v9;
  v9 = *(unsigned __int8 *)(v17 + 32);
  v21 = sub_10055FF58(1, v19, v17, v17 + 32, 0, (2 * v19) | 1);
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease();
  v18 = v21;
  if (v23 != v25 >> 1)
  {
    v9 = v20;
    goto LABEL_8;
  }
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 1)
    {
      v48 = 1;
      sub_1004D9810();
      sub_100098904((uint64_t)&type metadata for MoonScrubberHeaderArrowKind.ForwardCodingKeys, (uint64_t)&v48);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v40);
    }
    else
    {
      sub_1000CCE34();
      sub_100098904((uint64_t)&type metadata for MoonScrubberHeaderArrowKind.NoneCodingKeys, (uint64_t)&v49);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v41);
    }
    v33 = v21;
  }
  else
  {
    v47 = 0;
    sub_1004D984C();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys, &v47, v20, &type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v38);
    v33 = v21;
  }
  swift_unknownObjectRelease(v33);
  v34 = sub_1000B4490();
  v35(v34);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v46);
  return v9;
}

uint64_t sub_1004D9558(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC6CB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind()
{
  return &type metadata for MoonScrubberHeaderArrowKind;
}

uint64_t sub_1004D95AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D984C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004D95D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D984C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004D95FC()
{
  char *v0;

  return sub_1004D8F64(*v0);
}

uint64_t sub_1004D9604@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004D8E28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004D9628(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D9798();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004D9650(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D9798();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004D9678(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D9810();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004D96A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D9810();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004D96C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D97D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004D96F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D97D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004D9718@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1004D91B4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1004D9740(_QWORD *a1)
{
  char *v1;

  return sub_1004D8FB4(a1, *v1);
}

unint64_t sub_1004D975C()
{
  unint64_t result;

  result = qword_100BE8888;
  if (!qword_100BE8888)
  {
    result = swift_getWitnessTable(&unk_1009A66AC, &type metadata for MoonScrubberHeaderArrowKind);
    atomic_store(result, (unint64_t *)&qword_100BE8888);
  }
  return result;
}

unint64_t sub_1004D9798()
{
  unint64_t result;

  result = qword_100BE88B0;
  if (!qword_100BE88B0)
  {
    result = swift_getWitnessTable(&unk_1009A6A4C, &type metadata for MoonScrubberHeaderArrowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE88B0);
  }
  return result;
}

unint64_t sub_1004D97D4()
{
  unint64_t result;

  result = qword_100BE88B8;
  if (!qword_100BE88B8)
  {
    result = swift_getWitnessTable(&unk_1009A69FC, &type metadata for MoonScrubberHeaderArrowKind.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE88B8);
  }
  return result;
}

unint64_t sub_1004D9810()
{
  unint64_t result;

  result = qword_100BE88C0;
  if (!qword_100BE88C0)
  {
    result = swift_getWitnessTable(&unk_1009A69AC, &type metadata for MoonScrubberHeaderArrowKind.ForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE88C0);
  }
  return result;
}

unint64_t sub_1004D984C()
{
  unint64_t result;

  result = qword_100BE88C8;
  if (!qword_100BE88C8)
  {
    result = swift_getWitnessTable(&unk_1009A695C, &type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE88C8);
  }
  return result;
}

uint64_t _s7Weather27MoonScrubberHeaderArrowKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004D98D4 + 4 * byte_1009A65C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004D9908 + 4 * byte_1009A65C0[v4]))();
}

uint64_t sub_1004D9908(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004D9910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004D9918);
  return result;
}

uint64_t sub_1004D9924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004D992CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004D9930(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004D9938(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.CodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.CodingKeys;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.BackwardCodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.ForwardCodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.ForwardCodingKeys;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.NoneCodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.NoneCodingKeys;
}

unint64_t sub_1004D9988()
{
  unint64_t result;

  result = qword_100BE88F0;
  if (!qword_100BE88F0)
  {
    result = swift_getWitnessTable(&unk_1009A6934, &type metadata for MoonScrubberHeaderArrowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE88F0);
  }
  return result;
}

unint64_t sub_1004D99C8()
{
  unint64_t result;

  result = qword_100BE88F8;
  if (!qword_100BE88F8)
  {
    result = swift_getWitnessTable(&unk_1009A6854, &type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE88F8);
  }
  return result;
}

unint64_t sub_1004D9A08()
{
  unint64_t result;

  result = qword_100BE8900;
  if (!qword_100BE8900)
  {
    result = swift_getWitnessTable(&unk_1009A687C, &type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8900);
  }
  return result;
}

unint64_t sub_1004D9A48()
{
  unint64_t result;

  result = qword_100BE8908;
  if (!qword_100BE8908)
  {
    result = swift_getWitnessTable(&unk_1009A6804, &type metadata for MoonScrubberHeaderArrowKind.ForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8908);
  }
  return result;
}

unint64_t sub_1004D9A88()
{
  unint64_t result;

  result = qword_100BE8910;
  if (!qword_100BE8910)
  {
    result = swift_getWitnessTable(&unk_1009A682C, &type metadata for MoonScrubberHeaderArrowKind.ForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8910);
  }
  return result;
}

unint64_t sub_1004D9AC8()
{
  unint64_t result;

  result = qword_100BE8918;
  if (!qword_100BE8918)
  {
    result = swift_getWitnessTable(&unk_1009A67B4, &type metadata for MoonScrubberHeaderArrowKind.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8918);
  }
  return result;
}

unint64_t sub_1004D9B08()
{
  unint64_t result;

  result = qword_100BE8920;
  if (!qword_100BE8920)
  {
    result = swift_getWitnessTable(&unk_1009A67DC, &type metadata for MoonScrubberHeaderArrowKind.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8920);
  }
  return result;
}

unint64_t sub_1004D9B48()
{
  unint64_t result;

  result = qword_100BE8928;
  if (!qword_100BE8928)
  {
    result = swift_getWitnessTable(&unk_1009A68A4, &type metadata for MoonScrubberHeaderArrowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8928);
  }
  return result;
}

unint64_t sub_1004D9B88()
{
  unint64_t result;

  result = qword_100BE8930;
  if (!qword_100BE8930)
  {
    result = swift_getWitnessTable(&unk_1009A68CC, &type metadata for MoonScrubberHeaderArrowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8930);
  }
  return result;
}

uint64_t sub_1004D9BC4()
{
  double v0;
  double v1;

  v0 = rint(((double (*)(void))Location.coordinate.getter)() * 1000.0) / 1000.0;
  Location.coordinate.getter();
  return LocationData.init(latitudeDouble:longitudeDouble:)(v0, rint(v1 * 1000.0) / 1000.0);
}

uint64_t sub_1004D9C1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_1000BA294(&qword_100BE89D8);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_10009883C();
  v5 = v3 - v4;
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - v10;
  sub_1000BA294(&qword_100BE89E0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = *(unsigned __int8 *)(a1 + 32);
  sub_1004D9D40(*(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73), v14 - v13);
  sub_1004D9E04(*(_BYTE *)(a1 + 112), *(_BYTE *)(a1 + 113), (uint64_t)v11);
  sub_1004D9E04(*(_BYTE *)(a1 + 152), *(_BYTE *)(a1 + 153), (uint64_t)v8);
  sub_1004D9E04(*(_BYTE *)(a1 + 192), *(_BYTE *)(a1 + 193), v5);
  return ConditionsFeedbackData.init(sunnyReport:cloudCoverReport:rainReport:sleetReport:snowReport:)(v16, v15, v11, v8, v5);
}

uint64_t sub_1004D9D40@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;

  if ((a1 & 1) != 0)
    __asm { BR              X10 }
  v4 = type metadata accessor for CloudCover(0);
  return _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v4);
}

uint64_t sub_1004D9E04@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;

  if ((a1 & 1) != 0)
    __asm { BR              X10 }
  v4 = type metadata accessor for PrecipitationIntensity(0);
  return _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v4);
}

void sub_1004D9EC8(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  _QWORD v23[3];
  uint64_t v24;

  v23[1] = a3;
  v23[2] = a2;
  v6 = sub_1000BA294(&qword_100BC4E68);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098694();
  v7 = type metadata accessor for CurrentWeather(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = sub_100099574();
  v10 = type metadata accessor for TemperatureFeedback(v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_10009883C();
  v14 = v12 - v13;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)v23 - v17;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 104))((char *)v23 - v17, *(unsigned int *)*(&off_100B78650 + a1), v10, v16);
  v19 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 16))(v14, v18, v10);
  v20 = WeatherDataModel.currentWeather.getter(v19);
  CurrentWeather.dewPoint.getter(v20);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  v21 = Measurement.value.getter(v6);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v3, v6);
  v22 = round(v21);
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v22 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v22 < 2147483650.0)
  {
    TemperatureFeedbackData.init(reportedTemperature:currrentDewPoint:)(v14, (int)v22);
    sub_100099254((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    sub_10009990C();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1004DA080(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  BOOL v63;

  v56 = a1;
  v51 = a3;
  v4 = type metadata accessor for WindFeedback(0);
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  __chkstk_darwin(v4);
  sub_1000986FC();
  v58 = v5;
  sub_10009D2A4();
  __chkstk_darwin(v6);
  v62 = (char *)&v48 - v7;
  sub_1000BA294(&qword_100BCE728);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = type metadata accessor for Wind(0);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000986FC();
  v55 = v13;
  sub_10009D2A4();
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - v15;
  v17 = type metadata accessor for CurrentWeather(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  sub_1000986FC();
  v53 = v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  v22 = (char *)&v48 - v21;
  v23 = sub_1000BA294(&qword_100BCB938);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_1000986FC();
  v52 = v25;
  sub_10009D2A4();
  __chkstk_darwin(v26);
  v28 = (char *)&v48 - v27;
  v57 = a2;
  v30 = WeatherDataModel.currentWeather.getter(v29);
  CurrentWeather.wind.getter(v30);
  v31 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  v54 = v17;
  v32 = v31(v22, v17);
  Wind.gust.getter(v32);
  v33 = *(void (**)(char *, uint64_t))(v61 + 8);
  v61 = v12;
  v33(v16, v12);
  v50 = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v23);
  if (v50 == 1)
  {
    v34 = (uint64_t (*)(uint64_t, uint64_t))v31;
    sub_100021A68(v11, &qword_100BCE728);
    v49 = 0;
    v35 = v24;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v28, v11, v23);
  v36 = Measurement.value.getter(v23);
  sub_100099254((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v36 <= -2147483650.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v36 < 2147483650.0)
  {
    v35 = v24;
    v34 = (uint64_t (*)(uint64_t, uint64_t))v31;
    v49 = (int)v36;
LABEL_7:
    v38 = v59;
    v37 = v60;
    v39 = v62;
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v62, *(unsigned int *)*(&off_100B78668 + (char)v56), v60);
    v40 = v58;
    v41 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 16))(v58, v39, v37);
    v42 = v53;
    v43 = WeatherDataModel.currentWeather.getter(v41);
    v44 = v55;
    CurrentWeather.wind.getter(v43);
    v45 = v34(v42, v54);
    v46 = v52;
    Wind.speed.getter(v45);
    v33(v44, v61);
    v47 = Measurement.value.getter(v23);
    sub_100099254(v46, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) != 0)
    {
      if (v47 > -2147483650.0)
      {
        if (v47 < 2147483650.0)
        {
          v63 = v50 == 1;
          WindFeedbackData.init(reportedWind:currrentWind:currrentWindGust:)(v40, (int)v47, v49 | ((unint64_t)(v50 == 1) << 32));
          (*(void (**)(char *, uint64_t))(v38 + 8))(v62, v37);
          sub_10009990C();
          return;
        }
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
}

void sub_1004DA440(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v31 = a3;
  v28 = a1;
  v5 = type metadata accessor for AQIFeedback(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1000986FC();
  v29 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - v9;
  sub_1000BA294(&qword_100BD11F8);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098694();
  sub_1000BA294(&qword_100BE55C8);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v13 = sub_100099574();
  v14 = type metadata accessor for AQIData(v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_10009883C();
  v18 = v16 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - v20;
  v22 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v3, v30, v22);
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v22);
  sub_10067E3A4(v3, v4);
  if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v14) == 1)
  {
    sub_100021A68(v4, &qword_100BE55C8);
    v24 = 1;
    v25 = v31;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v21, v4, v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v10, *(unsigned int *)*(&off_100B78680 + (char)v28), v5);
    v26 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v29, v10, v5);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v18, v21, v14);
    v25 = v31;
    AQIFeedbackData.init(reportedAQI:currentAQI:)(v26, v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
    v24 = 0;
  }
  v27 = type metadata accessor for AQIFeedbackData(0, v23);
  _s7Weather24LocationCompositionStateOwst_0(v25, v24, 1, v27);
  sub_100098640();
}

uint64_t sub_1004DA678(uint64_t a1)
{
  char v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  Swift::Int v33;
  unint64_t v34;
  _QWORD v35[9];

  if (*(_QWORD *)(a1 + 16))
  {
    Hasher.init(_seed:)(v35);
    String.hash(into:)(v35, 0x73776F626E696172, 0xE800000000000000);
    sub_1000CCE40();
    sub_1000E7778();
    sub_1000DAF78();
    if (((v6 >> v1) & 1) != 0)
    {
      sub_1000CFD80();
      __asm { BR              X9 }
    }
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1000BAEA8(v3, v4, v5);
      String.hash(into:)(v35, 0x6E696E746867696CLL, 0xE900000000000067);
      v8 = sub_1000CCE40() & ~(-1 << *(_BYTE *)(a1 + 32));
      sub_1000DAF78();
      if (((v12 >> v8) & 1) != 0)
      {
        sub_1000DBADC();
        __asm { BR              X9 }
      }
      if (*(_QWORD *)(a1 + 16))
      {
        sub_1000BAEA8(v9, v10, v11);
        sub_1000D0A20((uint64_t)v35, 6778726);
        v15 = sub_1000CCE40() & ~(-1 << *(_BYTE *)(a1 + 32));
        sub_1000DAF78();
        if (((v19 >> v15) & 1) != 0)
        {
          sub_1000DBADC();
          __asm { BR              X9 }
        }
        if (*(_QWORD *)(a1 + 16))
        {
          sub_1000BAEA8(v16, v17, v18);
          sub_1001099B4((uint64_t)v35, 1818845544);
          v21 = sub_1000CCE40() & ~(-1 << *(_BYTE *)(a1 + 32));
          sub_1000DAF78();
          if (((v25 >> v21) & 1) != 0)
          {
            sub_1000D9064();
            sub_1000DBADC();
            __asm { BR              X9 }
          }
          if (*(_QWORD *)(a1 + 16))
          {
            sub_1000BAEA8(v22, v23, v24);
            sub_100099B28((uint64_t)v35, 0x656B6F6D73);
            v27 = sub_1000CCE40() & ~(-1 << *(_BYTE *)(a1 + 32));
            sub_1000DAF78();
            if (((v31 >> v27) & 1) != 0)
            {
              sub_1000DBADC();
              __asm { BR              X9 }
            }
            if (*(_QWORD *)(a1 + 16))
            {
              sub_1000BAEA8(v28, v29, v30);
              sub_1001099B4((uint64_t)v35, 1702519144);
              v33 = sub_1000CCE40() & ~(-1 << *(_BYTE *)(a1 + 32));
              sub_1000DAF78();
              if (((v34 >> v33) & 1) != 0)
                __asm { BR              X9 }
            }
          }
        }
      }
    }
  }
  return OtherConditionsFeedbackData.init(rainbowsReport:lightningReport:fogReport:hailReport:smokeReport:hazeReport:)(0, 0, 0, 0, 0, 0);
}

void sub_1004DAC54()
{
  swift_bridgeObjectRelease(0xE900000000000067);
  JUMPOUT(0x1004DA8C4);
}

void sub_1004DAC68()
{
  sub_1000C6B20();
  JUMPOUT(0x1004DA998);
}

void sub_1004DAC74()
{
  sub_1000C0A9C();
  JUMPOUT(0x1004DAA6CLL);
}

void sub_1004DAC80()
{
  sub_1000D0D48();
  JUMPOUT(0x1004DAB54);
}

void sub_1004DAC8C()
{
  sub_1000C0A9C();
  JUMPOUT(0x1004DAC4CLL);
}

uint64_t sub_1004DAC98(Swift::Int a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  Swift::Int v5;
  Swift::Int v6;
  unint64_t v7;
  unint64_t v9;
  Swift::Int v11;
  char v14;
  char v16;
  char v18;
  char v19;
  uint64_t v20;
  _BYTE v21[72];

  v5 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1000BAEA8(a1, a2, a3);
    String.hash(into:)(v21, 0x746E617361656C70, 0xE800000000000000);
    sub_1000CCE40();
    sub_1000E7778();
    v6 = v5 + 56;
    if (((*(_QWORD *)(v5 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
    if (*(_QWORD *)(v5 + 16))
    {
      sub_1000BAEA8(a1, a2, a3);
      String.hash(into:)(v21, 0x617361656C706E75, 0xEA0000000000746ELL);
      a1 = sub_1000CCE40();
      v7 = a1 & ~(-1 << *(_BYTE *)(v5 + 32));
      if (((*(_QWORD *)(v6 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      {
        sub_1000C2AFC();
        __asm { BR              X9 }
      }
      if (*(_QWORD *)(v5 + 16))
      {
        sub_1000BAEA8(a1, a2, a3);
        sub_1000D0A20((uint64_t)v21, 7630696);
        a1 = sub_1000CCE40();
        v9 = a1 & ~(-1 << *(_BYTE *)(v5 + 32));
        if (((*(_QWORD *)(v6 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
        {
          sub_1000C2AFC();
          __asm { BR              X9 }
        }
        if (*(_QWORD *)(v5 + 16))
        {
          sub_1000BAEA8(a1, a2, a3);
          String.hash(into:)(v21, 0x796C6C696863, 0xE600000000000000);
          sub_1000CCE40();
          sub_1000BC38C();
          if ((v14 & 1) != 0)
          {
            sub_1000D9064();
            sub_1000C2AFC();
            __asm { BR              X9 }
          }
          BYTE4(v20) = 0;
          if (*(_QWORD *)(v5 + 16))
          {
            sub_1000BAEA8(a1, a2, a3);
            sub_100099B28((uint64_t)v21, 0x796767756DLL);
            sub_1000CCE40();
            sub_1000BC38C();
            if ((v16 & 1) != 0)
            {
              sub_1000D9064();
              sub_1000C2AFC();
              __asm { BR              X9 }
            }
            if (*(_QWORD *)(v5 + 16))
            {
              sub_1000BAEA8(a1, a2, a3);
              sub_1000D0A20((uint64_t)v21, 7959140);
              sub_1000CCE40();
              sub_1000BC38C();
              if ((v18 & 1) != 0)
                __asm { BR              X9 }
              LOBYTE(v20) = 0;
              if (*(_QWORD *)(v5 + 16))
              {
                sub_1000BAEA8(a1, a2, a3);
                sub_100099B28((uint64_t)v21, 0x79646E6977);
                sub_1000CCE40();
                sub_1000BC38C();
                if ((v19 & 1) != 0)
                  __asm { BR              X9 }
              }
            }
            else
            {
              LOBYTE(v20) = 0;
            }
          }
          else
          {
            LOBYTE(v20) = 0;
          }
        }
        else
        {
          v20 = 0;
        }
      }
      else
      {
        v20 = 0;
      }
    }
    else
    {
      v20 = 0;
    }
  }
  else
  {
    v20 = 0;
  }
  if (*(_QWORD *)(v5 + 16))
  {
    sub_1000BAEA8(a1, a2, a3);
    sub_1001099B4((uint64_t)v21, 1835819363);
    v11 = sub_1000CCE40();
    if (((*(_QWORD *)(v5 + 56 + (((v11 & (unint64_t)~(-1 << *(_BYTE *)(v5 + 32))) >> 3) & 0xFFFFFFFFFFFFF8)) >> (v11 & ~(-1 << *(_BYTE *)(v5 + 32)))) & 1) != 0)
    {
      sub_1000D9064();
      sub_1000C2AFC();
      __asm { BR              X9 }
    }
  }
  return DescriptionFeedbackData.init(pleasantReport:unpleasantReport:hotReport:chillyReport:muggyReport:dryReport:windyReport:calmReport:)(0, 0, 0, BYTE4(v20) & 1, 0, v20 & 1, 0, 0);
}

void sub_1004DB3D8()
{
  uint64_t v0;
  char v1;
  char v2;

  v0 = sub_1000C2AFC();
  v1 = sub_100099264(v0, 0xE800000000000000, 0x79646E6977, 0xE500000000000000);
  sub_1000986C4();
  if ((v1 & 1) == 0)
  {
    sub_1000DCFD4();
    if ((v2 & 1) != 0)
      JUMPOUT(0x1004DB3B0);
  }
  JUMPOUT(0x1004DAFD0);
}

void sub_1004DB43C()
{
  swift_bridgeObjectRelease(0xEA0000000000746ELL);
  JUMPOUT(0x1004DAEE0);
}

void sub_1004DB450()
{
  sub_1000C6B20();
  JUMPOUT(0x1004DB10CLL);
}

void sub_1004DB45C()
{
  swift_bridgeObjectRelease(0xE600000000000000);
  JUMPOUT(0x1004DB1D0);
}

void sub_1004DB470()
{
  sub_1000D0D48();
  JUMPOUT(0x1004DB28CLL);
}

void sub_1004DB47C()
{
  sub_1000C6B20();
  JUMPOUT(0x1004DB374);
}

void sub_1004DB48C()
{
  sub_1000D0D48();
  JUMPOUT(0x1004DB434);
}

void sub_1004DB498(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;

  v4 = type metadata accessor for WeatherDataModel(0);
  __chkstk_darwin(v4);
  sub_1000986FC();
  sub_10009D2A4();
  v6 = __chkstk_darwin(v5);
  type metadata accessor for String.Encoding(0, v6);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  type metadata accessor for JSONEncoder.OutputFormatting(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter(v14);
  v16 = sub_1004DB7CC();
  v17 = dispatch thunk of JSONEncoder.encode<A>(_:)(a1, v4, v16);
  v19 = v18;
  static String.Encoding.utf8.getter();
  v20 = String.init(data:encoding:)(v17, v19, v10);
  if (v21)
  {
    WeatherJSONData.init(json:)(v20);
    sub_10021D04C(v17, v19);
    sub_1000C1354();
    v23 = type metadata accessor for WeatherJSONData(0, v22);
    _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v23);
    sub_100098640();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for ReportWeatherDataFactory()
{
  return objc_opt_self(_TtC7Weather24ReportWeatherDataFactory);
}

unint64_t sub_1004DB7CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE89D0;
  if (!qword_100BE89D0)
  {
    v1 = type metadata accessor for WeatherDataModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WeatherDataModel, v1);
    atomic_store(result, (unint64_t *)&qword_100BE89D0);
  }
  return result;
}

uint64_t sub_1004DB80C(double a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  sub_1000B375C();
  v2 = (void *)static NSDateFormatter.timeDurationFormatter.getter();
  v3 = objc_msgSend(v2, "stringFromTimeInterval:", a1);

  if (!v3)
    return 0;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  return v4;
}

uint64_t sub_1004DB898@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1000BA294(&qword_100BD4B90);
  v6 = __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v18[-v9];
  v11 = (uint64_t)v2 + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___locationAnimationKind;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___locationAnimationKind, v19, 0, 0);
  sub_100037768(v11, (uint64_t)v10, &qword_100BD4B90);
  v12 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v10, v12);
  sub_100021A14((uint64_t)v10, &qword_100BD4B90);
  v13 = static Settings.VFX.animatedBackgrounds.getter();
  v14 = Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release(v13);
  v15 = sub_1004DD2E8();
  Configurable.setting<A>(_:)(v14, v4, v15);
  v16 = swift_release(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16))(v8, a1, v12, v16);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v12);
  swift_beginAccess(v11, v18, 33, 0);
  sub_1000A3908((uint64_t)v8, v11, &qword_100BD4B90);
  return swift_endAccess(v18);
}

uint64_t sub_1004DBA54()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  unsigned __int8 v7;

  v1 = OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___permitDuplicateLocations;
  v2 = *((unsigned __int8 *)v0
       + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___permitDuplicateLocations);
  if (v2 != 2)
    return v2 & 1;
  v3 = *v0;
  if (qword_100BC26C0 != -1)
    swift_once(&qword_100BC26C0, sub_100824B38);
  v4 = qword_100CAF528;
  v5 = sub_1004DD2E8();
  Configurable.setting<A>(_:)(v4, v3, v5);
  result = v7;
  *((_BYTE *)v0 + v1) = v7;
  return result;
}

uint64_t sub_1004DBAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void (*v52)(BOOL *);
  BOOL *v53;
  void (*v54)(void);
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, _QWORD);
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, _QWORD);
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, _QWORD);
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  char *v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110[2];
  char v111[8];
  uint64_t v112;
  uint64_t v113;

  v104 = type metadata accessor for Location.Identifier(0);
  v105 = *(_QWORD *)(v104 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v103 = v5;
  type metadata accessor for LocationPreviewModalViewState(0);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v8 = sub_1000987B4(v7);
  type metadata accessor for LocationPreviewModalViewModel(v8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v11 = sub_1000987B4(v10);
  v12 = type metadata accessor for WeatherConditionBackgroundModel(v11);
  __chkstk_darwin(v12);
  sub_100088FDC();
  v14 = sub_1000987B4(v13);
  type metadata accessor for PreviewLocation(v14);
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v17 = sub_1000987B4(v16);
  v18 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation(v17);
  sub_1000B43A4(v18, (uint64_t)&v112);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v21 = sub_1000987B4(v20);
  v22 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType(v21);
  sub_1000B43A4(v22, (uint64_t)v111);
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_100088FDC();
  v25 = sub_1000987B4(v24);
  v26 = type metadata accessor for VFXEffectViewID(v25);
  sub_1000B43A4(v26, (uint64_t)v110);
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_100088FDC();
  v29 = sub_1000987B4(v28);
  v30 = type metadata accessor for WeatherConditionBackgroundOptions(v29);
  sub_1000B43A4(v30, (uint64_t)&v113);
  sub_10009D98C();
  __chkstk_darwin(v31);
  sub_100088FDC();
  v100 = v32;
  v33 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  sub_100098728();
  v37 = v36 - v35;
  type metadata accessor for BackgroundAnimationKind(0);
  sub_10009D98C();
  __chkstk_darwin(v38);
  sub_100088FDC();
  v102 = v39;
  type metadata accessor for LocationPreviewInput(0);
  sub_10009D98C();
  __chkstk_darwin(v40);
  sub_100098728();
  v43 = v42 - v41;
  type metadata accessor for LocationPreviewContentInput(0);
  sub_10009D98C();
  __chkstk_darwin(v44);
  sub_100098728();
  v47 = v46 - v45;
  v49 = v48;
  sub_100080C0C(a1, v43, type metadata accessor for LocationPreviewInput);
  if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v49) != 1)
  {
    sub_10007802C(v43, v47, type metadata accessor for LocationPreviewContentInput);
    sub_1004DB898(v37);
    v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v37, v33);
    if (v51 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:))
    {
      *v102 = (*(_BYTE *)(v47 + *(int *)(v49 + 24)) & 1) == 0;
      sub_100099970();
    }
    else
    {
      if (v51 != enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:))
      {
        *v102 = 1;
        sub_100099970();
        v54();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v33);
LABEL_12:
        v92 = v49;
        v96 = v47;
        v55 = *(_QWORD *)(v47 + *(int *)(v49 + 28));
        v56 = *(_QWORD *)(v55 + 16);
        v57 = _swiftEmptyArrayStorage;
        if (v56)
        {
          v109 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain(v55);
          sub_10009AAB0();
          v91 = v55;
          v58 = v55 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
          v59 = *(_QWORD *)(v105 + 72);
          v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 16);
          do
          {
            v61 = v60(v103, v58, v104);
            v62 = Location.Identifier.uniqueID.getter(v61);
            v64 = v63;
            (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v103, v104);
            v57 = v109;
            if ((swift_isUniquelyReferenced_nonNull_native(v109) & 1) == 0)
            {
              sub_10009AAB0();
              v57 = v109;
            }
            v65 = v57[2];
            if (v65 >= v57[3] >> 1)
            {
              sub_10009AAB0();
              v57 = v109;
            }
            v57[2] = v65 + 1;
            v66 = &v57[2 * v65];
            v66[4] = v62;
            v66[5] = v64;
            v58 += v59;
            --v56;
          }
          while (v56);
          swift_bridgeObjectRelease(v91);
        }
        sub_100099970();
        sub_1000B3B68(v93, v67, v68);
        sub_100099970();
        sub_1000B3B68(v94, v69, v70);
        sub_100099970();
        sub_1000B3B68(v95, v71, v72);
        v73 = (void *)objc_opt_self(UIApplication);
        v74 = objc_msgSend(v73, "sharedApplication");
        UIApplication.expectedWindow.getter(&v109);

        v75 = v110[0];
        v76 = v110[1];
        sub_1000DB418(&v109, v110[0]);
        v77 = dispatch thunk of WindowType.bounds.getter(v75, v76);
        v79 = v78;
        v81 = v80;
        v83 = v82;
        v84 = objc_msgSend(v73, "sharedApplication");
        UIApplication.expectedWindow.getter(&v106);

        v85 = v107;
        v86 = v108;
        sub_1000DB418(&v106, v107);
        v87 = dispatch thunk of WindowType.displayScale.getter(v85, v86);
        WeatherConditionBackgroundOptions.init(locationIDs:applyMask:applyLegibilityScrim:effectViewID:canShowCollisionLayer:cameraPositionType:displayLocation:windowBounds:displayScale:locationViewerOrientation:)(v57, 1, 0, v93, 1, v77, v79, v81, v83, v87, v94);
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v106);
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v109);
        sub_100080C0C(v96, v98, type metadata accessor for PreviewLocation);
        sub_1004DC494(v96, v101, (uint64_t)v102, v100, v99);
        sub_1004DCFD0(v101);
        sub_100080C0C(v96 + *(int *)(v92 + 20), v97, type metadata accessor for LocationPreviewModalViewState);
        v88 = (char *)&loc_1004DC240 + dword_1004DC46C[swift_getEnumCaseMultiPayload(v97)];
        __asm { BR              X10 }
      }
      sub_100099970();
      v53 = v102;
    }
    v52(v53);
    goto LABEL_12;
  }
  sub_1000215BC(v43, type metadata accessor for LocationPreviewInput);
  v50 = type metadata accessor for LocationPreviewViewContentModel(0);
  _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v50);
  v89 = type metadata accessor for LocationPreviewViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v89);
}

void sub_1004DC494(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v122 = a4;
  v124 = a3;
  v109 = a2;
  v115 = a1;
  v128 = a5;
  v5 = sub_1000BA294(&qword_100BC3350);
  __chkstk_darwin(v5);
  v126 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v7);
  v127 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD11F8);
  __chkstk_darwin(v9);
  v139 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for WeatherConditionGradientModel.PresentationContext(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v138 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v137 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BC3378);
  __chkstk_darwin(v13);
  v136 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BC3370);
  __chkstk_darwin(v15);
  v135 = (uint64_t)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for Date(0);
  v113 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v134 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for BackgroundAnimationKind(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v133 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput(0);
  v123 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v121 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  __chkstk_darwin(v110);
  v132 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v21);
  v106 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for Location.Identifier(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v24 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Location(0);
  v105 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v104 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000BA294(&qword_100BC3460);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v28);
  v101 = (uint64_t)&v100 - v32;
  __chkstk_darwin(v31);
  v34 = (char *)&v100 - v33;
  v35 = sub_1000BA294(&qword_100BC3660);
  v36 = __chkstk_darwin(v35);
  v116 = (uint64_t)&v100 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&v100 - v39;
  __chkstk_darwin(v38);
  v42 = (char *)&v100 - v41;
  v43 = sub_1000BA294(&qword_100BC35F8);
  v44 = __chkstk_darwin(v43);
  v114 = (uint64_t)&v100 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __chkstk_darwin(v44);
  v48 = (char *)&v100 - v47;
  __chkstk_darwin(v46);
  v50 = (char *)&v100 - v49;
  sub_10062F730((uint64_t)&v100 - v49);
  v51 = type metadata accessor for WeatherCondition(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 1, 1, v51);
  v129 = type metadata accessor for WeatherData(0);
  v107 = v34;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 1, 1, v129);
  v131 = v50;
  sub_100037768((uint64_t)v50, (uint64_t)v48, &qword_100BC35F8);
  v108 = v25;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v25) == 1)
  {
    sub_100021A14((uint64_t)v48, &qword_100BC35F8);
    v52 = v115;
    v53 = v109;
    v54 = (uint64_t)v107;
  }
  else
  {
    v55 = v105;
    v56 = v104;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v48, v108);
    v57 = type metadata accessor for LocationPreviewContentInput(0);
    v58 = v115;
    v59 = *(_QWORD *)(v115 + *(int *)(v57 + 44) + 8);
    v60 = Location.identifier.getter(v57);
    v61 = Location.Identifier.id.getter(v60);
    v63 = v62;
    sub_1000F3CAC(v61, v62, v59);
    v64 = swift_bridgeObjectRelease(v63);
    (*(void (**)(char *, uint64_t, __n128))(v102 + 8))(v24, v103, v64);
    sub_100021A14((uint64_t)v42, &qword_100BC3660);
    v65 = sub_100273478((uint64_t)v40, (uint64_t)v42);
    v66 = *(_QWORD *)(v58 + *(int *)(v57 + 56) + 16);
    v67 = Location.id.getter(v65);
    v69 = v68;
    v70 = (uint64_t)v106;
    sub_1000EED10(v67, v68, v66);
    swift_bridgeObjectRelease(v69);
    v71 = type metadata accessor for LocationWeatherDataState(0);
    v52 = v58;
    if (_s7Weather24LocationCompositionStateOwet_0(v70, 1, v71) == 1)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v108);
      sub_100021A14(v70, &qword_100BC3380);
      v72 = v101;
      _s7Weather24LocationCompositionStateOwst_0(v101, 1, 1, v129);
    }
    else
    {
      v72 = v101;
      sub_1000EADE8();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v108);
      sub_1000215BC(v70, type metadata accessor for LocationWeatherDataState);
    }
    v53 = v109;
    v54 = (uint64_t)v107;
    sub_1000A3908(v72, (uint64_t)v107, &qword_100BC3460);
  }
  sub_1000DB418((_QWORD *)(v53 + 96), *(_QWORD *)(v53 + 120));
  sub_100037768(v54, (uint64_t)v30, &qword_100BC3460);
  v73 = type metadata accessor for LocationPreviewContentInput(0);
  v74 = (uint64_t)v131;
  v75 = v132;
  sub_1003B4364((uint64_t)v131, (uint64_t)v30, (void (*)(uint64_t, uint64_t))(v52 + *(int *)(v73 + 48)), v132);
  sub_100021A14((uint64_t)v30, &qword_100BC3460);
  sub_100043CA8(v53 + 56, (uint64_t)&v140);
  v76 = v141;
  v115 = v142;
  sub_1000DB418(&v140, v141);
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v133, v124, v112);
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v134, v75, v130);
  v77 = v110;
  sub_100037768(v75 + *(int *)(v110 + 20), v135, &qword_100BC3370);
  sub_100037768(v75 + *(int *)(v77 + 24), v136, &qword_100BC3378);
  v78 = (uint64_t)v42;
  v79 = (uint64_t)v42;
  v80 = v116;
  sub_100037768(v79, v116, &qword_100BC3660);
  v81 = *(unsigned __int8 *)(v52 + *(int *)(v73 + 52));
  v82 = v74;
  v83 = v114;
  sub_100037768(v82, v114, &qword_100BC35F8);
  v84 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 16))(v137, v122, v118);
  v85 = v138;
  BackgroundAnimationKind.gradientContext.getter(v84);
  (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v85, enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:), v120);
  v86 = v129;
  if (_s7Weather24LocationCompositionStateOwet_0(v54, 1, v129))
  {
    v87 = type metadata accessor for WeatherDataModel(0);
    v88 = (uint64_t)v139;
    v89 = 1;
  }
  else
  {
    v90 = v54 + *(int *)(v86 + 24);
    v91 = type metadata accessor for WeatherDataModel(0);
    v92 = v139;
    v93 = v90;
    v86 = v129;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v139, v93, v91);
    v88 = (uint64_t)v92;
    v89 = 0;
    v87 = v91;
  }
  _s7Weather24LocationCompositionStateOwst_0(v88, v89, 1, v87);
  v94 = (uint64_t)v126;
  v95 = _s7Weather24LocationCompositionStateOwet_0(v54, 1, v86);
  v96 = (uint64_t)v127;
  if (!v95)
  {
    sub_100037768(v54 + *(int *)(v86 + 36), v94, &qword_100BC3350);
    v97 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v94, 1, v97) != 1)
    {
      sub_100037768(v94 + *(int *)(v97 + 20), v96, (uint64_t *)&unk_100BD35A0);
      sub_1000215BC(v94, type metadata accessor for WeatherDataOverrides);
      goto LABEL_15;
    }
    sub_100021A14(v94, &qword_100BC3350);
  }
  _s7Weather24LocationCompositionStateOwst_0(v96, 1, 1, v130);
LABEL_15:
  v99 = v96;
  v98 = v121;
  WeatherConditionBackgroundModelFactoryInput.init(animationKind:currentTime:elevation:moonData:debugConditionOverride:isReduceMotionEnabled:location:options:presentationContext:weatherData:conditionBackgroundDateOverride:)(v133, v134, v135, v136, v80, v81, v83, v137, v138, v139, v99);
  dispatch thunk of WeatherConditionBackgroundModelFactoryType.makeModel(from:)(v98, v76, v115);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v98, v125);
  sub_1000215BC(v132, type metadata accessor for WeatherConditionBackgroundTimeData);
  sub_100021A14(v78, &qword_100BC3660);
  sub_100021A14((uint64_t)v131, &qword_100BC35F8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v140);
  sub_100021A14(v54, &qword_100BC3460);
}

uint64_t sub_1004DCFD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BOOL8 v12;
  _QWORD *v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v24;

  v2 = sub_1000BA294(&qword_100BC61F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Location(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1004DBA54() & 1) != 0)
    return 1;
  sub_10062F730((uint64_t)v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_100021A14((uint64_t)v7, &qword_100BC35F8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v13 = sub_1000DB418((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
    v14 = Location.coordinate.getter(v13);
    v16 = v15;
    Location.name.getter(v17);
    v19 = v18;
    sub_1004E18B4(v20, v18, (uint64_t)v4, v14, v16);
    v21 = swift_bridgeObjectRelease(v19);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
    v22 = type metadata accessor for SavedLocation(0);
    v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v22) == 1;
    sub_100021A14((uint64_t)v4, &qword_100BC61F0);
  }
  return v12;
}

_QWORD *sub_1004DD1A8()
{
  _QWORD *v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 17);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 22);
  sub_100021A14((uint64_t)v0 + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___locationAnimationKind, &qword_100BD4B90);
  return v0;
}

uint64_t sub_1004DD1FC()
{
  uint64_t v0;

  sub_1004DD1A8();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004DD220()
{
  return type metadata accessor for LocationPreviewViewModelFactory(0);
}

uint64_t type metadata accessor for LocationPreviewViewModelFactory(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE8A20;
  if (!qword_100BE8A20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LocationPreviewViewModelFactory);
  return result;
}

void sub_1004DD260(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = "(";
  v4[3] = "(";
  v4[4] = "(";
  sub_10015A460(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = &unk_1009A6C18;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

unint64_t sub_1004DD2E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE8AD8;
  if (!qword_100BE8AD8)
  {
    v1 = type metadata accessor for LocationPreviewViewModelFactory(255);
    result = swift_getWitnessTable(&unk_1009A6C30, v1);
    atomic_store(result, (unint64_t *)&qword_100BE8AD8);
  }
  return result;
}

void sub_1004DD328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v9);
  v10 = type metadata accessor for Date(0);
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  if (a9 != 2)
  {
    sub_1000C2B10();
    __asm { BR              X9 }
  }
  sub_100098640();
}

void sub_1004DD570(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, char a6, int a7, unsigned __int8 a8)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  _DWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  int v32;

  v32 = a7;
  v11 = a8;
  v12 = type metadata accessor for Calendar(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  if (v11 != 2)
  {
    v22 = (char *)v29 - v19;
    v30 = v18;
    v31 = v13;
    v29[0] = a3;
    v29[1] = a2;
    if (a6 == 1)
    {
      sub_1000C2B10();
      __asm { BR              X10 }
    }
    v24 = v20;
    v25 = v21;
    static Calendar.current.getter(v18);
    Date.wc_addDays(_:calendar:)(14, v15);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v12);
    Date.init()(v26);
    static Date.> infix(_:_:)(v22, v25);
    v27 = *(void (**)(char *, uint64_t))(v24 + 8);
    v28 = v30;
    v27(v25, v30);
    v27(v22, v28);
  }
  sub_100098640();
}

uint64_t type metadata accessor for NotificationsOptInStatusFactory()
{
  return objc_opt_self(_TtC7Weather31NotificationsOptInStatusFactory);
}

uint64_t sub_1004DD7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  char v9;

  sub_1004DD328(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v9 & 1;
}

uint64_t sub_1004DD81C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, char a6, int a7, unsigned __int8 a8)
{
  char v8;

  sub_1004DD570(a1, a2, a3, a4, a5, a6, a7, a8);
  return v8 & 1;
}

uint64_t type metadata accessor for StubNotificationsOptInStatusFactory()
{
  return objc_opt_self(_TtC7Weather35StubNotificationsOptInStatusFactory);
}

uint64_t sub_1004DD854()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for News(0);
  sub_10004037C(v0, qword_100CAEC40);
  v1 = sub_1000AECD4(v0, (uint64_t)qword_100CAEC40);
  return sub_1004DD89C(v1);
}

uint64_t sub_1004DD89C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void (*__ptr32 *v84)();
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  void (*__ptr32 *v122)();
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  _QWORD *v160;
  _QWORD *v161;
  _QWORD *v162;
  _QWORD *v163;
  _QWORD *v164;
  _QWORD *v165;
  _QWORD *v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;

  v2 = type metadata accessor for ArticlePlacementLocation(0);
  v183 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v182 = (char *)&v169 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ArticlePlacement(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v169 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v169 - v10;
  v12 = __chkstk_darwin(v9);
  v181 = (char *)&v169 - v13;
  v14 = __chkstk_darwin(v12);
  v180 = (char *)&v169 - v15;
  v16 = __chkstk_darwin(v14);
  v179 = (char *)&v169 - v17;
  v18 = __chkstk_darwin(v16);
  v172 = (char *)&v169 - v19;
  v20 = __chkstk_darwin(v18);
  v178 = (char *)&v169 - v21;
  v22 = __chkstk_darwin(v20);
  v177 = (char *)&v169 - v23;
  v24 = __chkstk_darwin(v22);
  v176 = (char *)&v169 - v25;
  v26 = __chkstk_darwin(v24);
  v175 = (char *)&v169 - v27;
  v28 = __chkstk_darwin(v26);
  v174 = (char *)&v169 - v29;
  v30 = __chkstk_darwin(v28);
  v173 = (char *)&v169 - v31;
  v32 = __chkstk_darwin(v30);
  v34 = (char *)&v169 - v33;
  v35 = __chkstk_darwin(v32);
  v37 = (char *)&v169 - v36;
  __chkstk_darwin(v35);
  v39 = (char *)&v169 - v38;
  if (qword_100BC2388 != -1)
    swift_once(&qword_100BC2388, sub_10015ACC8);
  if ((dispatch thunk of SettingGroup.isEnabled.getter() & 1) == 0)
    return News.init(placements:)(_swiftEmptyArrayStorage);
  v184 = type metadata accessor for SettingReader(0);
  v40 = ((uint64_t (*)(void))static SettingReader.shared.getter)();
  if (qword_100BC2310 != -1)
    swift_once(&qword_100BC2310, sub_100683BBC);
  v170 = v11;
  v171 = v8;
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v186 + 6));
  v41 = swift_release(v40);
  if (BYTE6(v186) == 1)
  {
    v169 = a1;
    v42 = sub_1000BA294(&qword_100BE8C10);
    v43 = type metadata accessor for Article(0);
    v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) | 7);
    *(_OWORD *)(v44 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08160);
    v45 = v182;
    (*(void (**)(char *, _QWORD, uint64_t))(v183 + 104))(v182, enum case for ArticlePlacementLocation.airQualityDetail(_:), v2);
    ArticlePlacement.init(articles:location:)(v44, v45);
    sub_1005FF238();
    v47 = v46;
    v48 = v46[2];
    if (v48 >= v46[3] >> 1)
    {
      sub_1005FF238();
      v47 = v140;
    }
    v47[2] = v48 + 1;
    v41 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v48, v39, v4);
  }
  else
  {
    v47 = _swiftEmptyArrayStorage;
  }
  v50 = static SettingReader.shared.getter(v41);
  if (qword_100BC2318 != -1)
    swift_once(&qword_100BC2318, sub_100683BDC);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v186 + 5));
  v51 = swift_release(v50);
  if (BYTE5(v186) == 1)
  {
    v52 = sub_1000BA294(&qword_100BE8C10);
    v53 = type metadata accessor for Article(0);
    v54 = swift_allocObject(v52, ((*(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v53 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80) | 7);
    *(_OWORD *)(v54 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08140);
    v55 = v182;
    (*(void (**)(char *, _QWORD, uint64_t))(v183 + 104))(v182, enum case for ArticlePlacementLocation.feelsLikeDetail(_:), v2);
    ArticlePlacement.init(articles:location:)(v54, v55);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v141;
    }
    v56 = v47[2];
    if (v56 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v142;
    }
    v47[2] = v56 + 1;
    v51 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v56, v37, v4);
  }
  v57 = static SettingReader.shared.getter(v51);
  v58 = v2;
  if (qword_100BC2320 != -1)
    swift_once(&qword_100BC2320, sub_100683BFC);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v186 + 4));
  v59 = swift_release(v57);
  v60 = v182;
  if (BYTE4(v186) == 1)
  {
    v61 = sub_1000BA294(&qword_100BE8C10);
    v62 = type metadata accessor for Article(0);
    v63 = swift_allocObject(v61, ((*(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v62 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80) | 7);
    *(_OWORD *)(v63 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08120);
    (*(void (**)(char *, _QWORD, uint64_t))(v183 + 104))(v60, enum case for ArticlePlacementLocation.humidityDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v63, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v143;
    }
    v64 = v47[2];
    if (v64 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v144;
    }
    v47[2] = v64 + 1;
    v59 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v64, v34, v4);
  }
  v65 = static SettingReader.shared.getter(v59);
  v66 = v183;
  if (qword_100BC2328 != -1)
    swift_once(&qword_100BC2328, sub_100683C1C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v186 + 3));
  v67 = swift_release(v65);
  if (BYTE3(v186) == 1)
  {
    v68 = sub_1000BA294(&qword_100BE8C10);
    v69 = type metadata accessor for Article(0);
    v70 = swift_allocObject(v68, ((*(unsigned __int8 *)(*(_QWORD *)(v69 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v69 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v69 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v69 - 8) + 80) | 7);
    *(_OWORD *)(v70 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08100);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.moonDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v70, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v145;
    }
    v71 = v47[2];
    if (v71 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v146;
    }
    v47[2] = v71 + 1;
    v67 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v71, v173, v4);
  }
  v72 = static SettingReader.shared.getter(v67);
  if (qword_100BC2330 != -1)
    swift_once(&qword_100BC2330, sub_100683C3C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v186 + 2));
  v73 = swift_release(v72);
  if (BYTE2(v186) == 1)
  {
    v74 = sub_1000BA294(&qword_100BE8C10);
    v75 = type metadata accessor for Article(0);
    v76 = swift_allocObject(v74, ((*(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v75 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80) | 7);
    *(_OWORD *)(v76 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A080E0);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.precipitationDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v76, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v147;
    }
    v77 = v47[2];
    if (v77 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v148;
    }
    v47[2] = v77 + 1;
    v73 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v77, v174, v4);
  }
  v78 = static SettingReader.shared.getter(v73);
  if (qword_100BC2338 != -1)
    swift_once(&qword_100BC2338, sub_100683C5C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v186 + 1));
  v79 = swift_release(v78);
  if (BYTE1(v186) == 1)
  {
    v80 = sub_1000BA294(&qword_100BE8C10);
    v81 = type metadata accessor for Article(0);
    v82 = swift_allocObject(v80, ((*(unsigned __int8 *)(*(_QWORD *)(v81 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v81 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v81 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v81 - 8) + 80) | 7);
    *(_OWORD *)(v82 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A080E0);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.precipitationAveragesDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v82, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v149;
    }
    v83 = v47[2];
    v84 = &off_10097C000;
    if (v83 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v150;
    }
    v47[2] = v83 + 1;
    v79 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v83, v175, v4);
  }
  else
  {
    v84 = &off_10097C000;
  }
  v85 = static SettingReader.shared.getter(v79);
  if (qword_100BC2340 != -1)
    swift_once(&qword_100BC2340, sub_100683C7C);
  SettingReader.read<A>(_:)(&v186);
  v86 = swift_release(v85);
  if (v186 == 1)
  {
    v87 = sub_1000BA294(&qword_100BE8C10);
    v88 = type metadata accessor for Article(0);
    v89 = swift_allocObject(v87, ((*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v88 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) | 7);
    *(_OWORD *)(v89 + 16) = *((_OWORD *)v84 + 165);
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A080C0);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.pressureDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v89, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v151;
    }
    v90 = v47[2];
    if (v90 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v152;
    }
    v47[2] = v90 + 1;
    v86 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v90, v176, v4);
  }
  v91 = static SettingReader.shared.getter(v86);
  if (qword_100BC2348 != -1)
    swift_once(&qword_100BC2348, sub_100683C9C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v185 + 7));
  v92 = swift_release(v91);
  if (HIBYTE(v185) == 1)
  {
    v93 = sub_1000BA294(&qword_100BE8C10);
    v94 = type metadata accessor for Article(0);
    v95 = swift_allocObject(v93, ((*(unsigned __int8 *)(*(_QWORD *)(v94 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v94 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v94 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v94 - 8) + 80) | 7);
    *(_OWORD *)(v95 + 16) = *((_OWORD *)v84 + 165);
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A080A0);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.severe(_:), v58);
    ArticlePlacement.init(articles:location:)(v95, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v153;
    }
    v96 = v47[2];
    if (v96 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v154;
    }
    v47[2] = v96 + 1;
    v92 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v96, v177, v4);
  }
  v97 = static SettingReader.shared.getter(v92);
  if (qword_100BC2350 != -1)
    swift_once(&qword_100BC2350, sub_100683CBC);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v185 + 6));
  v98 = swift_release(v97);
  if (BYTE6(v185) == 1)
  {
    v99 = sub_1000BA294(&qword_100BE8C10);
    v100 = type metadata accessor for Article(0);
    v101 = swift_allocObject(v99, ((*(unsigned __int8 *)(*(_QWORD *)(v100 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v100 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v100 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v100 - 8) + 80) | 7);
    *(_OWORD *)(v101 + 16) = *((_OWORD *)v84 + 165);
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08080);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.sunriseSunsetDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v101, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v155;
    }
    v102 = v47[2];
    if (v102 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v156;
    }
    v47[2] = v102 + 1;
    v98 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v102, v178, v4);
  }
  v103 = static SettingReader.shared.getter(v98);
  if (qword_100BC2358 != -1)
    swift_once(&qword_100BC2358, sub_100683CDC);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v185 + 5));
  v104 = swift_release(v103);
  if (BYTE5(v185) == 1)
  {
    v105 = sub_1000BA294(&qword_100BE8C10);
    v106 = type metadata accessor for Article(0);
    v107 = swift_allocObject(v105, ((*(unsigned __int8 *)(*(_QWORD *)(v106 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v106 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v106 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v106 - 8) + 80) | 7);
    *(_OWORD *)(v107 + 16) = *((_OWORD *)v84 + 165);
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08060);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.temperatureDetail(_:), v58);
    v108 = v172;
    ArticlePlacement.init(articles:location:)(v107, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v157;
    }
    v109 = v47[2];
    if (v109 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v158;
    }
    v47[2] = v109 + 1;
    v104 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v109, v108, v4);
  }
  v110 = static SettingReader.shared.getter(v104);
  if (qword_100BC2360 != -1)
    swift_once(&qword_100BC2360, sub_100683CFC);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v185 + 4));
  v111 = swift_release(v110);
  if (BYTE4(v185) == 1)
  {
    v112 = sub_1000BA294(&qword_100BE8C10);
    v113 = type metadata accessor for Article(0);
    v114 = swift_allocObject(v112, ((*(unsigned __int8 *)(*(_QWORD *)(v113 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v113 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v113 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v113 - 8) + 80) | 7);
    *(_OWORD *)(v114 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08040);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.temperatureAveragesDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v114, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v159;
    }
    v115 = v47[2];
    if (v115 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v160;
    }
    v47[2] = v115 + 1;
    v111 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v115, v179, v4);
  }
  v116 = static SettingReader.shared.getter(v111);
  if (qword_100BC2368 != -1)
    swift_once(&qword_100BC2368, sub_100683D1C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v185 + 3));
  v117 = swift_release(v116);
  if (BYTE3(v185) == 1)
  {
    v118 = sub_1000BA294(&qword_100BE8C10);
    v119 = type metadata accessor for Article(0);
    v120 = swift_allocObject(v118, ((*(unsigned __int8 *)(*(_QWORD *)(v119 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v119 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v119 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v119 - 8) + 80) | 7);
    *(_OWORD *)(v120 + 16) = xmmword_10097CA50;
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08040);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.trend(_:), v58);
    ArticlePlacement.init(articles:location:)(v120, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v161;
    }
    v121 = v47[2];
    v122 = &off_10097C000;
    if (v121 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v162;
    }
    v47[2] = v121 + 1;
    v117 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v121, v180, v4);
  }
  else
  {
    v122 = &off_10097C000;
  }
  v123 = static SettingReader.shared.getter(v117);
  if (qword_100BC2370 != -1)
    swift_once(&qword_100BC2370, sub_100683D3C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v185 + 2));
  v124 = swift_release(v123);
  if (BYTE2(v185) == 1)
  {
    v125 = sub_1000BA294(&qword_100BE8C10);
    v126 = type metadata accessor for Article(0);
    v127 = swift_allocObject(v125, ((*(unsigned __int8 *)(*(_QWORD *)(v126 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v126 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v126 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v126 - 8) + 80) | 7);
    *(_OWORD *)(v127 + 16) = *((_OWORD *)v122 + 165);
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08020);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.uvIndexDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v127, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v163;
    }
    v128 = v47[2];
    if (v128 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v164;
    }
    v47[2] = v128 + 1;
    v124 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v128, v181, v4);
  }
  v129 = static SettingReader.shared.getter(v124);
  if (qword_100BC2378 != -1)
    swift_once(&qword_100BC2378, sub_100683D5C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v185 + 1));
  v130 = swift_release(v129);
  if (BYTE1(v185) == 1)
  {
    v131 = sub_1000BA294(&qword_100BE8C10);
    v132 = type metadata accessor for Article(0);
    v133 = swift_allocObject(v131, ((*(unsigned __int8 *)(*(_QWORD *)(v132 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v132 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v132 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v132 - 8) + 80) | 7);
    *(_OWORD *)(v133 + 16) = *((_OWORD *)v122 + 165);
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A08000);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.visibilityDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v133, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v165;
    }
    v134 = v47[2];
    if (v134 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v166;
    }
    v47[2] = v134 + 1;
    v130 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v134, v170, v4);
  }
  v135 = static SettingReader.shared.getter(v130);
  if (qword_100BC2380 != -1)
    swift_once(&qword_100BC2380, sub_100683D7C);
  SettingReader.read<A>(_:)(&v185);
  swift_release(v135);
  if (v185 == 1)
  {
    v136 = sub_1000BA294(&qword_100BE8C10);
    v137 = type metadata accessor for Article(0);
    v138 = swift_allocObject(v136, ((*(unsigned __int8 *)(*(_QWORD *)(v137 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v137 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v137 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v137 - 8) + 80) | 7);
    *(_OWORD *)(v138 + 16) = *((_OWORD *)v122 + 165);
    sub_1004DF1D0(0xD000000000000017, 0x8000000100A07FE0);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v60, enum case for ArticlePlacementLocation.windDetail(_:), v58);
    ArticlePlacement.init(articles:location:)(v138, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    {
      sub_1005FF238();
      v47 = v167;
    }
    v139 = v47[2];
    if (v139 >= v47[3] >> 1)
    {
      sub_1005FF238();
      v47 = v168;
    }
    v47[2] = v139 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v139, v171, v4);
  }
  return News.init(placements:)(v47);
}

uint64_t sub_1004DF1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  Locale.init(identifier:)(0x53552D6E65, 0xE500000000000000);
  return Article.init(id:supportedStorefronts:locale:headlineOverride:phenomena:alertIds:)(a1, a2, &off_100B5A840, v6, 0, 0, _swiftEmptyArrayStorage, _swiftEmptyArrayStorage);
}

BOOL sub_1004DF284(uint64_t a1)
{
  char v1;
  uint64_t v3;
  char v4;
  const char *v5;
  uint64_t v6;
  const char *v7;

  if ((*(_BYTE *)(a1 + 48) & 1) != 0
    || (*(_BYTE *)(a1 + 88) & 1) != 0
    || (*(_BYTE *)(a1 + 128) & 1) != 0
    || (*(_BYTE *)(a1 + 168) & 1) != 0
    || (*(_BYTE *)(a1 + 208) & 1) != 0)
  {
    return 1;
  }
  if (*(_BYTE *)(a1 + 232))
  {
    if (*(_BYTE *)(a1 + 232) == 1)
    {
      sub_1000C2B24();
      goto LABEL_12;
    }
    v3 = 1684828003;
  }
  else
  {
    v3 = 1836212599;
  }
  v4 = sub_1000BC3D0(v3 & 0xFFFF0000FFFFFFFFLL | 0x726500000000, 0xE600000000000000);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    return 1;
LABEL_12:
  if (*(_BYTE *)(a1 + 256))
  {
    if (*(_BYTE *)(a1 + 256) == 1)
    {
      sub_1000C2B24();
      goto LABEL_18;
    }
    v5 = "lessThanForecast";
  }
  else
  {
    v5 = "moreThanForecast";
  }
  sub_1000BC3D0(0xD000000000000010, (unint64_t)(v5 - 32) | 0x8000000000000000);
  sub_1000C4AB0();
  if ((v1 & 1) == 0)
    return 1;
LABEL_18:
  if (*(_BYTE *)(a1 + 296))
  {
    if (*(_BYTE *)(a1 + 296) == 1)
    {
      sub_1000C2B24();
      goto LABEL_24;
    }
    v6 = 0xD000000000000011;
    v7 = "worseThanForecast";
  }
  else
  {
    v6 = 0xD000000000000012;
    v7 = "betterThanForecast";
  }
  sub_1000BC3D0(v6, (unint64_t)(v7 - 32) | 0x8000000000000000);
  sub_1000C4AB0();
  if ((v1 & 1) == 0)
    return 1;
LABEL_24:
  if (*(_QWORD *)(*(_QWORD *)(a1 + 304) + 16))
    return 1;
  return *(_QWORD *)(*(_QWORD *)(a1 + 312) + 16) != 0;
}

uint64_t sub_1004DF3DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD v31[26];

  v4 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v4, &v30);
  *(_OWORD *)(inited + 16) = xmmword_10097FA60;
  sub_1000C0AA4();
  *(_QWORD *)(v6 + 32) = 0xD000000000000013;
  *(_QWORD *)(v6 + 40) = v7;
  sub_1000B44F8(v31, (const void *)(a1 + 16));
  *(_QWORD *)(inited + 72) = &type metadata for ReportWeatherConditionsViewModel;
  v8 = swift_allocObject(&unk_100B78710, 210, 7);
  *(_QWORD *)(inited + 48) = v8;
  sub_1000B44F8((void *)(v8 + 16), v31);
  sub_1000C0AA4();
  *(_QWORD *)(inited + 80) = v10;
  *(_QWORD *)(inited + 88) = v9;
  v11 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(inited + 96) = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 0xD000000000000011;
  sub_1000C0AA4();
  *(_QWORD *)(inited + 136) = v12;
  *(_BYTE *)(inited + 144) = *(_BYTE *)(a1 + 232);
  *(_QWORD *)(inited + 168) = &unk_100B766D0;
  *(_QWORD *)(inited + 176) = 0xD000000000000013;
  sub_1000C0AA4();
  *(_QWORD *)(inited + 184) = v13;
  v14 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(inited + 192) = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(inited + 200) = v14;
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 224) = 0x69746152646E6977;
  *(_QWORD *)(inited + 232) = 0xEA0000000000676ELL;
  *(_BYTE *)(inited + 240) = *(_BYTE *)(a1 + 256);
  *(_QWORD *)(inited + 264) = &unk_100B76640;
  *(_QWORD *)(inited + 272) = 0x696C617551726961;
  *(_QWORD *)(inited + 280) = 0xEF656C7469547974;
  v15 = *(_QWORD *)(a1 + 264);
  v16 = *(_QWORD *)(a1 + 272);
  if (v16)
  {
    v17 = *(_QWORD *)(a1 + 272);
  }
  else
  {
    v15 = 7104878;
    v17 = 0xE300000000000000;
  }
  *(_QWORD *)(inited + 288) = v15;
  *(_QWORD *)(inited + 296) = v17;
  *(_QWORD *)(inited + 312) = &type metadata for String;
  *(_QWORD *)(inited + 320) = 0xD000000000000019;
  sub_1000C0AA4();
  *(_QWORD *)(inited + 328) = v20;
  v21 = *(_QWORD *)(a1 + 280);
  v22 = *(_QWORD *)(a1 + 288);
  if (v22)
  {
    v23 = *(_QWORD *)(a1 + 288);
  }
  else
  {
    v21 = v18;
    v23 = v19;
  }
  *(_QWORD *)(inited + 336) = v21;
  *(_QWORD *)(inited + 344) = v23;
  *(_QWORD *)(inited + 360) = &type metadata for String;
  *(_QWORD *)(inited + 368) = 0xD000000000000010;
  sub_1000C0AA4();
  *(_QWORD *)(inited + 376) = v24;
  *(_BYTE *)(inited + 384) = *(_BYTE *)(a1 + 296);
  *(_QWORD *)(inited + 408) = &unk_100B765B0;
  *(_QWORD *)(inited + 416) = 0x6E6F43726568746FLL;
  *(_QWORD *)(inited + 424) = 0xEF736E6F69746964;
  v25 = *(_QWORD *)(a1 + 304);
  v26 = sub_1000BA294(&qword_100BCA088);
  *(_QWORD *)(inited + 432) = v25;
  *(_QWORD *)(inited + 456) = v26;
  strcpy((char *)(inited + 464), "descriptions");
  *(_BYTE *)(inited + 477) = 0;
  *(_WORD *)(inited + 478) = -5120;
  v27 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(inited + 504) = sub_1000BA294(&qword_100BCA0A0);
  *(_QWORD *)(inited + 480) = v27;
  sub_1001F5330(v31);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v22);
  sub_10009E3E0();
  sub_1000860DC();
  sub_100099360();
  swift_bridgeObjectRetain(v14);
  v28 = Dictionary.init(dictionaryLiteral:)(inited);
  a2[3] = sub_1000BA294(&qword_100BE8C28);
  a2[4] = sub_1004DFE18();
  sub_10005F164(a2);
  return ShortDescription.init(name:_:)(0xD00000000000001DLL, 0x8000000100A08180, v28, &unk_100B632F8);
}

uint64_t sub_1004DF6E8(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17, uint64_t a18)
{
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  char *v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[200];
  _BYTE v98[200];
  _QWORD v99[4];
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  _BYTE v125[208];

  v92 = a8;
  v93 = a2;
  sub_1004DFC44((uint64_t)a1, (uint64_t)v97);
  sub_1004DFC44((uint64_t)v97, (uint64_t)v125);
  v24 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v24);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for URL(0);
  v95 = *(_QWORD *)(v27 - 8);
  v28 = __chkstk_darwin(v27);
  v86 = (char *)&v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v94 = (char *)&v51 - v30;
  v78 = a1;
  sub_1004DFC44((uint64_t)a1, (uint64_t)v98);
  if (sub_1001A73C8((uint64_t)v98) == 1)
  {
    sub_1000B44F8(v99, (const void *)(a18 + 16));
    sub_1000BAEB4();
    sub_1001F5330(v99);
    if (a3)
    {
LABEL_3:
      v84 = a3;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1004DFC44((uint64_t)v125, (uint64_t)v99);
    sub_1000BAEB4();
    if (a3)
      goto LABEL_3;
  }
  v31 = *(_QWORD *)(a18 + 224);
  v93 = *(_QWORD *)(a18 + 216);
  v84 = v31;
  swift_bridgeObjectRetain(v31);
LABEL_6:
  if (a4 == 3)
    a4 = *(unsigned __int8 *)(a18 + 232);
  if (a6)
  {
    v83 = a6;
  }
  else
  {
    a5 = *(_QWORD *)(a18 + 240);
    v83 = *(_QWORD *)(a18 + 248);
    swift_bridgeObjectRetain(v83);
  }
  v87 = a5;
  if (a7 == 3)
    a7 = *(unsigned __int8 *)(a18 + 256);
  v91 = a10;
  v90 = a9;
  if (!a9)
  {
    v32 = *(_QWORD *)(a18 + 272);
    v92 = *(_QWORD *)(a18 + 264);
    v90 = v32;
    swift_bridgeObjectRetain(v32);
  }
  v79 = a3;
  v33 = a12;
  v89 = a11;
  if (!a11)
  {
    v34 = *(_QWORD *)(a18 + 288);
    v91 = *(_QWORD *)(a18 + 280);
    v89 = v34;
    swift_bridgeObjectRetain(v34);
    v33 = a12;
  }
  v35 = a6;
  v96 = v27;
  v88 = a7;
  if (v33 == 3)
    v33 = *(unsigned __int8 *)(a18 + 296);
  v82 = v33;
  if (a13)
  {
    v36 = (uint64_t)v26;
    v81 = a13;
  }
  else
  {
    v81 = *(_QWORD *)(a18 + 304);
    swift_bridgeObjectRetain(v81);
    v36 = (uint64_t)v26;
  }
  v85 = a4;
  if (a14)
  {
    v80 = a14;
  }
  else
  {
    v80 = *(_QWORD *)(a18 + 312);
    swift_bridgeObjectRetain(v80);
    v36 = (uint64_t)v26;
  }
  v37 = v36;
  sub_100038D20(a15, v36);
  v38 = v96;
  if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v96) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v94, a18 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v38);
    sub_1004DFC8C(v78);
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(v79);
    swift_bridgeObjectRetain(v35);
    sub_1000860DC();
    sub_10009E3E0();
    sub_100099360();
    sub_1004AC3C4(v37);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 32))(v94, v37, v38);
    sub_1004DFC8C(v78);
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(v79);
    swift_bridgeObjectRetain(v35);
    sub_1000860DC();
    sub_10009E3E0();
    sub_100099360();
  }
  if (a16 == 2)
    v39 = *(_BYTE *)(a18 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView);
  else
    v39 = a16 & 1;
  if (a17 == 2)
    v40 = *(_BYTE *)(a18 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource);
  else
    v40 = a17 & 1;
  v99[0] = v75;
  v99[1] = v74;
  v99[2] = v52;
  v99[3] = v76;
  v100 = v77;
  v101 = v54;
  v102 = v53;
  v103 = v56;
  v104 = v55;
  v105 = v57;
  v106 = BYTE4(v57);
  v107 = v59;
  v108 = v58;
  v109 = v61;
  v110 = v60;
  v111 = v62;
  v112 = BYTE4(v62);
  v113 = v64;
  v114 = v63;
  v115 = v66;
  v116 = v65;
  v117 = v67;
  v118 = BYTE4(v67);
  v119 = v69;
  v120 = v68;
  v121 = v71;
  v122 = v70;
  v123 = v72;
  v124 = v73;
  v42 = v94;
  v41 = v95;
  v43 = (uint64_t)v86;
  v44 = v96;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v86, v94, v96);
  v45 = type metadata accessor for ReportWeatherContentViewModel._Storage(0);
  swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  BYTE1(v50) = v40;
  LOBYTE(v50) = v39;
  LOBYTE(v49) = v82;
  sub_1001EE2F0((uint64_t)v99, v93, v84, v85, v87, v83, v88, v92, v90, v91, v89, v49, v81, v80, v43, v50, v51, v52, v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    SBYTE1(v68));
  v47 = v46;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v44);
  return v47;
}

uint64_t sub_1004DFBD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1004DF3DC(*v1, a1);
}

uint64_t sub_1004DFBDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004DFE5C();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1004DFC08()
{
  unint64_t result;

  result = qword_100BE8C18;
  if (!qword_100BE8C18)
  {
    result = swift_getWitnessTable(&unk_1009A6D24, &unk_100B632F8);
    atomic_store(result, (unint64_t *)&qword_100BE8C18);
  }
  return result;
}

uint64_t sub_1004DFC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BE8C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1004DFC8C(uint64_t *a1)
{
  sub_1004DFCFC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_1004DFCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a7);
    swift_bridgeObjectRetain(a9);
    swift_bridgeObjectRetain(a12);
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(a17);
    swift_bridgeObjectRetain(a19);
    swift_bridgeObjectRetain(a22);
    return swift_bridgeObjectRetain(a24);
  }
  return result;
}

uint64_t sub_1004DFDAC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[15]);
  swift_bridgeObjectRelease(v0[18]);
  swift_bridgeObjectRelease(v0[20]);
  swift_bridgeObjectRelease(v0[23]);
  swift_bridgeObjectRelease(v0[25]);
  return swift_deallocObject(v0, 210, 7);
}

unint64_t sub_1004DFE18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE8C30;
  if (!qword_100BE8C30)
  {
    v1 = sub_100075EB0(&qword_100BE8C28);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE8C30);
  }
  return result;
}

unint64_t sub_1004DFE5C()
{
  unint64_t result;

  result = qword_100BE8C38;
  if (!qword_100BE8C38)
  {
    result = swift_getWitnessTable(&unk_1009A6D4C, &unk_100B632F8);
    atomic_store(result, (unint64_t *)&qword_100BE8C38);
  }
  return result;
}

void sub_1004DFE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  void (*v29)(void);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t aBlock[5];
  uint64_t v74;
  char v75[32];

  v2 = sub_1000D9EB8();
  v67 = *(_QWORD *)(v2 - 8);
  v68 = v2;
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v66 = v4;
  v5 = sub_100099984();
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v63 = v7;
  v8 = sub_100098AA0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v70 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BCD780);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100099234();
  sub_1000BA294(&qword_100BCD680);
  sub_10009D98C();
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v59 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v59 - v21;
  v69 = Location.Identifier.intentIdentifier.getter(v20);
  v71 = v23;
  v62 = v0;
  sub_1000C55E8();
  v60 = v24;
  v24();
  sub_1000C4510((uint64_t)v22);
  v61 = v0;
  v25 = v0 + OBJC_IVAR____TtC7Weather26InteractionDonationManager_previousDonatedLocationIdentifier;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Weather26InteractionDonationManager_previousDonatedLocationIdentifier, v75, 0, 0);
  v26 = v1 + *(int *)(v11 + 48);
  sub_10006F614((uint64_t)v22, v1);
  sub_10006F614(v25, v26);
  sub_1000C4ABC(v1);
  if (!v27)
  {
    sub_10006F614(v1, (uint64_t)v19);
    sub_1000C4ABC(v26);
    if (!v27)
    {
      v59 = v10;
      v28 = v70;
      sub_1000C55E8();
      v29();
      sub_100086DA4((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
      v31 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v28, v8, v30);
      v32 = *(void (**)(char *, uint64_t))(v9 + 8);
      v33 = v28;
      v10 = v59;
      v32(v33, v8);
      sub_100021A14((uint64_t)v22, &qword_100BCD680);
      v32(v19, v8);
      sub_100021A14(v1, &qword_100BCD680);
      if ((v31 & 1) != 0)
        goto LABEL_11;
LABEL_15:
      sub_1000C55E8();
      v41 = v60;
      v60();
      sub_1000C4510((uint64_t)v16);
      swift_beginAccess(v25, aBlock, 33, 0);
      sub_10015A18C((uint64_t)v16, v25);
      swift_endAccess(aBlock);
      v42 = v70;
      sub_1000C55E8();
      v41();
      v43 = *(unsigned __int8 *)(v9 + 80);
      v44 = (v43 + 16) & ~v43;
      v45 = (v10 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
      v46 = swift_allocObject(&unk_100B78770, v45 + 16, v43 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v46 + v44, v42, v8);
      v47 = (_QWORD *)(v46 + v45);
      v48 = v71;
      *v47 = v69;
      v47[1] = v48;
      aBlock[4] = (uint64_t)sub_1004E1434;
      v74 = v46;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100088F7C;
      aBlock[3] = (uint64_t)&unk_100B78788;
      v49 = _Block_copy(aBlock);
      v50 = v63;
      static DispatchQoS.unspecified.getter(v51);
      v72 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v53 = v52;
      v54 = sub_1000BA294(&qword_100BD4F10);
      sub_100081288((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
      v55 = v66;
      v56 = v54;
      v57 = v68;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v72, v56, v58, v68, v53);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v50, v55, v49);
      _Block_release(v49);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v55, v57);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v50, v65);
      swift_release(v74);
      goto LABEL_17;
    }
    sub_100021A14((uint64_t)v22, &qword_100BCD680);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
LABEL_9:
    sub_100021A14(v1, &qword_100BCD780);
    goto LABEL_15;
  }
  sub_100021A14((uint64_t)v22, &qword_100BCD680);
  sub_1000C4ABC(v26);
  if (!v27)
    goto LABEL_9;
  sub_100021A14(v1, &qword_100BCD680);
LABEL_11:
  if (qword_100BC24C0 != -1)
    swift_once(&qword_100BC24C0, sub_1006F3960);
  v34 = type metadata accessor for Logger(0);
  sub_1000AECD4(v34, (uint64_t)qword_100CAF228);
  v35 = v71;
  swift_bridgeObjectRetain(v71);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc(22, -1);
    v40 = swift_slowAlloc(32, -1);
    *(_DWORD *)v39 = 141558275;
    v72 = 1752392040;
    aBlock[0] = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock);
    *(_WORD *)(v39 + 12) = 2081;
    swift_bridgeObjectRetain(v35);
    v72 = sub_1000CE1C8(v69, v35, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock);
    swift_bridgeObjectRelease_n(v35, 3);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "The interaction to donate matches the most recently donated interaction. Bailing to avoid donating a duplicate interaction. persistentIdentifier=%{private,mask.hash}s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy(v40, 1);
    sub_1000986F0(v40);
    sub_1000986F0(v39);

  }
  else
  {

    swift_bridgeObjectRelease_n(v35, 2);
  }
LABEL_17:
  sub_100098640();
}

void sub_1004E04BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WeatherIntent()), "init");
  v7 = sub_1004E062C(a1, a2, a3);
  objc_msgSend(v6, "setLocation:", v7);
  sub_1000A0794(0, &qword_100BE8D10, INInteraction_ptr);
  v8 = v6;
  v9 = sub_1004E06B8(v8, 0);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setIdentifier:", v10);

  v11 = swift_allocObject(&unk_100B787C0, 32, 7);
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v14[4] = sub_1004E1474;
  v15 = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1004E0B18;
  v14[3] = &unk_100B787D8;
  v12 = _Block_copy(v14);
  v13 = v15;
  swift_bridgeObjectRetain(a3);
  objc_msgSend(v9, "donateInteractionWithCompletion:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);

}

id sub_1004E062C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((Location.Identifier.kind.getter(a1) & 1) != 0)
    return 0;
  v5 = type metadata accessor for WeatherLocation();
  v6 = Location.Identifier.name.getter();
  v8 = v7;
  objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5));
  swift_bridgeObjectRetain(a3);
  return sub_1004E1330(a2, a3, v6, v8);
}

id sub_1004E06B8(void *a1, void *a2)
{
  uint64_t v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithIntent:response:", a1, a2);

  return v5;
}

void sub_1004E0710(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *oslog;
  uint64_t v22;
  uint64_t v23;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_100BC24C0 != -1)
      swift_once(&qword_100BC24C0, sub_1006F3960);
    v6 = type metadata accessor for Logger(0);
    sub_1000AECD4(v6, (uint64_t)qword_100CAF228);
    swift_bridgeObjectRetain(a3);
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(a3);
    v7 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(oslog, v8);
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc(32, -1);
      v11 = swift_slowAlloc(64, -1);
      *(_DWORD *)v10 = 141558531;
      v22 = 1752392040;
      v23 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      *(_WORD *)(v10 + 12) = 2081;
      swift_bridgeObjectRetain(a3);
      v22 = sub_1000CE1C8(a2, a3, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v10 + 22) = 2082;
      v22 = a1;
      swift_errorRetain(a1);
      sub_1000BA294(&qword_100BD7910);
      v12 = String.init<A>(describing:)(&v22);
      v14 = v13;
      v22 = sub_1000CE1C8(v12, v13, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Failed to donate location interaction. persistentIdentifier=%{private,mask.hash}s, error=%{public}s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy(v11, 2);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_bridgeObjectRelease_n(a3, 2);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_100BC24C0 != -1)
      swift_once(&qword_100BC24C0, sub_1006F3960);
    v15 = type metadata accessor for Logger(0);
    sub_1000AECD4(v15, (uint64_t)qword_100CAF228);
    v16 = swift_bridgeObjectRetain_n(a3, 2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v20 = swift_slowAlloc(32, -1);
      *(_DWORD *)v19 = 141558275;
      v22 = 1752392040;
      v23 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      *(_WORD *)(v19 + 12) = 2081;
      swift_bridgeObjectRetain(a3);
      v22 = sub_1000CE1C8(a2, a3, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Successfully donated location interaction. persistentIdentifier=%{private,mask.hash}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy(v20, 1);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
  }
}

void sub_1004E0B18(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

void sub_1004E0B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = sub_1000D9EB8();
  v18 = *(_QWORD *)(v1 - 8);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100099864();
  v3 = sub_100099984();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100098728();
  v7 = v6 - v5;
  v8 = Location.Identifier.intentIdentifier.getter();
  v10 = v9;
  v11 = swift_allocObject(&unk_100B78810, 32, 7);
  *(_QWORD *)(v11 + 16) = v8;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1004E147C;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100088F7C;
  aBlock[3] = &unk_100B78828;
  v12 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = v14;
  v16 = sub_1000BA294(&qword_100BD4F10);
  sub_100081288((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v16, v17, v1, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v0, v12);
  _Block_release(v12);
  sub_1000BD208(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  swift_release(v21);
  sub_100098640();
}

void sub_1004E0D20(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v4 = (void *)objc_opt_self(INInteraction);
  v5 = sub_1000BA294(&qword_100BC6A10);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v8 = swift_allocObject(&unk_100B78860, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v11[4] = sub_1004E14A8;
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1004E0B18;
  v11[3] = &unk_100B78878;
  v9 = _Block_copy(v11);
  v10 = v12;
  swift_bridgeObjectRetain(a2);
  swift_release(v10);
  objc_msgSend(v4, "deleteInteractionsWithIdentifiers:completion:", isa, v9);
  _Block_release(v9);

}

void sub_1004E0E4C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  NSObject *oslog;
  uint64_t v24;
  uint64_t v25;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_100BC24C0 != -1)
      swift_once(&qword_100BC24C0, sub_1006F3960);
    v6 = type metadata accessor for Logger(0);
    sub_1000AECD4(v6, (uint64_t)qword_100CAF228);
    swift_bridgeObjectRetain(a3);
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(a3);
    v7 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = swift_slowAlloc(32, -1);
      v10 = swift_slowAlloc(64, -1);
      *(_DWORD *)v9 = 141558531;
      v24 = 1752392040;
      v25 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      *(_WORD *)(v9 + 12) = 2081;
      swift_bridgeObjectRetain(a3);
      v24 = sub_1000CE1C8(a2, a3, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v9 + 22) = 2082;
      v24 = a1;
      swift_errorRetain(a1);
      sub_1000BA294(&qword_100BD7910);
      v11 = String.init<A>(describing:)(&v24);
      v13 = v12;
      v24 = sub_1000CE1C8(v11, v12, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Failed to delete donated location interaction. persistentIdentifier=%{private,mask.hash}s, error=%{public}s", (uint8_t *)v9, 0x20u);
      swift_arrayDestroy(v10, 2);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_bridgeObjectRelease_n(a3, 2);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_100BC24C0 != -1)
      swift_once(&qword_100BC24C0, sub_1006F3960);
    v14 = type metadata accessor for Logger(0);
    sub_1000AECD4(v14, (uint64_t)qword_100CAF228);
    v15 = swift_bridgeObjectRetain_n(a3, 2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(32, -1);
      v19 = swift_slowAlloc(64, -1);
      v25 = v19;
      *(_DWORD *)v18 = 136315651;
      swift_bridgeObjectRetain(a3);
      v24 = sub_1000CE1C8(a2, a3, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v18 + 12) = 2160;
      v24 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      *(_WORD *)(v18 + 22) = 2081;
      v24 = 0;
      sub_1000BA294(&qword_100BE8D18);
      v20 = String.init<A>(describing:)(&v24);
      v22 = v21;
      v24 = sub_1000CE1C8(v20, v21, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Successfully deleted donated location interaction. persistentIdentifier=%s, error=%{private,mask.hash}s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy(v19, 2);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
  }
}

void sub_1004E12B0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_100021A14(v0 + OBJC_IVAR____TtC7Weather26InteractionDonationManager_previousDonatedLocationIdentifier, &qword_100BCD680);

  sub_10004A298();
}

uint64_t sub_1004E1304()
{
  uint64_t v0;

  sub_1004E12B0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004E1328()
{
  return type metadata accessor for InteractionDonationManager(0);
}

id sub_1004E1330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  NSString v7;
  NSString v8;
  id v9;

  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v4, "initWithIdentifier:displayString:", v7, v8, swift_bridgeObjectRelease(a4).n128_f64[0]);

  return v9;
}

uint64_t sub_1004E13C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100098AA0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v6, v5);
}

void sub_1004E1434()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_100098AA0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1004E04BC(v0 + v2, *v3, v3[1]);
}

void sub_1004E1474(uint64_t a1)
{
  uint64_t v1;

  sub_1004E0710(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1004E147C()
{
  uint64_t v0;

  sub_1004E0D20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004E1484()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004E14A8(uint64_t a1)
{
  uint64_t v1;

  sub_1004E0E4C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1004E14D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  __n128 v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1000C5FBC();
  v55 = v2;
  v56 = v3;
  v5 = v4;
  v7 = v6;
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v60 = v9;
  v10 = type metadata accessor for Location(0);
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100C0B8D0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v61 = v15;
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100079FBC();
  v57 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v53 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v53 - v24;
  sub_1000D1898();
  v26 = v62;
  sub_100080C0C(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v25, type metadata accessor for LocationsState);
  swift_release(v26);
  sub_10009C514((uint64_t)v25, v1);
  sub_1000215BC((uint64_t)v25, type metadata accessor for LocationsState);
  v27 = type metadata accessor for CurrentLocation(0);
  v28 = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v27);
  sub_100021A14(v1, (uint64_t *)&unk_100C0D170);
  if (v28 != 1)
  {
    v29 = v59;
    v30 = v60;
    v53 = v13;
    v54 = v0;
    v31 = v58;
    sub_1000D1898();
    v32 = v62;
    sub_1000B326C(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v22);
    swift_release(v32);
    v33 = *(_QWORD *)&v22[*(int *)(v57 + 24)];
    swift_bridgeObjectRetain(v33);
    sub_1000BD95C((uint64_t)v22);
    v34 = v61;
    sub_1001209E8(v33, v61);
    swift_bridgeObjectRelease(v33);
    v35 = type metadata accessor for LocationModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35) == 1)
    {
      v36 = &qword_100C0B8D0;
      v37 = v34;
    }
    else
    {
      v38 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v38 + 88))(v34, v35) != enum case for LocationModel.current(_:))
      {
        sub_1000C1D6C(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
        goto LABEL_9;
      }
      sub_1000C1D6C(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 96));
      v39 = v34 + *(int *)(sub_1000BA294(&qword_100BC3488) + 48);
      sub_1000215BC(v34, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      sub_100021A14(v39, &qword_100BC3118);
      sub_1000D1898();
      v40 = v62;
      sub_100080C0C(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v19, type metadata accessor for LocationsState);
      swift_release(v40);
      sub_1006E97A4();
      sub_1000215BC((uint64_t)v19, type metadata accessor for LocationsState);
      v41 = v29;
      if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v29) != 1)
      {
        v42 = v53;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v53, v30, v29);
        v43 = v54[9];
        v44 = v54[10];
        v45 = sub_1000DB418(v54 + 6, v43);
        Location.name.getter(v45);
        v47 = v46;
        v49 = v48;
        v50 = Location.coordinate.getter(v46);
        dispatch thunk of LocationMatchHelperType.isSameLocation(first:second:)(v55, v56, v47, v49, v43, v44, v7, v5, v50, v51);
        v52 = swift_bridgeObjectRelease(v49);
        (*(void (**)(uint64_t, uint64_t, __n128))(v31 + 8))(v42, v41, v52);
        goto LABEL_9;
      }
      v36 = &qword_100BC35F8;
      v37 = v30;
    }
    sub_100021A14(v37, v36);
  }
LABEL_9:
  sub_10009990C();
}

void sub_1004E18B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v7 = v5;
  v52 = a1;
  v53 = a2;
  v11 = type metadata accessor for Location.Identifier(0);
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  __chkstk_darwin(v11);
  v12 = sub_10008909C();
  v13 = type metadata accessor for SavedLocation(v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_100098728();
  v17 = v16 - v15;
  v18 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v13;
  v45 = a3;
  v22 = _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v13);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v7 + 16))(&v54, v22);
  v23 = v54;
  sub_1000B326C(v54 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v21);
  swift_release(v23);
  v24 = *(_QWORD *)&v21[*(int *)(v18 + 20)];
  swift_bridgeObjectRetain(v24);
  sub_1000BD95C((uint64_t)v21);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v26 = sub_1004E1FE0();
    v49 = (_QWORD *)(v7 + 48);
    v27 = *(unsigned __int8 *)(v14 + 80);
    v43 = v24;
    v28 = v24 + ((v27 + 32) & ~v27);
    v29 = *(_QWORD *)(v14 + 72);
    v30 = INFINITY;
    v47 = v29;
    v48 = v26;
    v46 = v6;
    do
    {
      sub_100080C0C(v28, v17, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
      sub_1000D96A4();
      v31 = (void *)CLLocation.init(_:)(v6);
      v32 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", a4, a5);
      objc_msgSend(v31, "distanceFromLocation:", v32);
      v34 = v33;

      if (v34 >= v30)
      {
        sub_1000215BC(v17, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
        v34 = v30;
      }
      else
      {
        v35 = *(_QWORD *)(v7 + 72);
        v36 = *(_QWORD *)(v7 + 80);
        sub_1000DB418(v49, v35);
        v37 = sub_1000D96A4();
        v38 = Location.Identifier.name.getter(v37);
        v40 = v39;
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v6, v51);
        LOBYTE(v38) = dispatch thunk of LocationMatchHelperType.isSameLocation(firstName:secondName:distance:)(v52, v53, v38, v40, v35, v36, v34);
        swift_bridgeObjectRelease(v40);
        if ((v38 & 1) != 0)
        {
          v41 = v45;
          sub_100021A14(v45, &qword_100BC61F0);
          sub_10007802C(v17, v41, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
          _s7Weather24LocationCompositionStateOwst_0(v41, 0, 1, v44);
        }
        else
        {
          sub_1000215BC(v17, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
          v34 = v30;
        }
        v29 = v47;
        v6 = v46;
      }
      v28 += v29;
      v30 = v34;
      --v25;
    }
    while (v25);
    v42 = v43;
  }
  else
  {
    v42 = v24;
  }
  swift_bridgeObjectRelease(v42);
}

void sub_1004E1BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;

  sub_1000C5FBC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  v14 = sub_100089108();
  type metadata accessor for LocationPreviewViewState(v14);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100079FBC();
  if (v4)
  {
    v16 = v4;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v25);
    v16 = v25;
  }
  sub_100080C0C(v16 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v2, type metadata accessor for ModalViewState);
  if (sub_100098E1C())
  {
    swift_retain();
    swift_release(v16);
    sub_1000215BC(v2, type metadata accessor for ModalViewState);
  }
  else
  {
    sub_10007802C(v2, v1, type metadata accessor for LocationPreviewViewState);
    v18 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 80);
    sub_1000DB418((_QWORD *)(v0 + 48), v18);
    swift_retain();
    sub_10062FB68();
    v20 = v19;
    v22 = v21;
    sub_10062FD88();
    dispatch thunk of LocationMatchHelperType.isSameLocation(first:second:)(v8, v6, v20, v22, v18, v17, v12, v10, v23, v24);
    swift_release(v16);
    swift_bridgeObjectRelease(v22);
    sub_1000215BC(v1, type metadata accessor for LocationPreviewViewState);
  }
  sub_10009990C();
}

void sub_1004E1D44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1000C5FBC();
  v34 = v3;
  v35 = v4;
  v6 = v5;
  v8 = v7;
  type metadata accessor for LocationViewerActiveLocationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v10 = sub_10008909C();
  v11 = type metadata accessor for Location.Identifier(v10);
  v33 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  v16 = sub_100089108();
  v17 = type metadata accessor for ViewState(v16);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v36);
  sub_1000B326C(v36 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v21);
  swift_release();
  sub_100080C0C(v21 + *(int *)(v17 + 20), (uint64_t)v2, type metadata accessor for ViewState.SecondaryViewState);
  sub_1000BD95C(v21);
  if (sub_100098E1C() == 1)
  {
    v22 = type metadata accessor for ViewState.SecondaryViewState;
    v23 = (uint64_t)v2;
  }
  else
  {
    sub_100080C0C(*v2 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v1, type metadata accessor for LocationViewerActiveLocationState);
    if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v11) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v14, v1, v11);
      v24 = *(_QWORD *)(v0 + 72);
      v25 = *(_QWORD *)(v0 + 80);
      v26 = sub_1000DB418((_QWORD *)(v0 + 48), v24);
      v27 = Location.Identifier.name.getter(v26);
      v29 = v28;
      v30 = Location.Identifier.coordinate.getter(v27);
      dispatch thunk of LocationMatchHelperType.isSameLocation(first:second:)(v34, v35, v27, v29, v24, v25, v8, v6, v30, v31);
      swift_bridgeObjectRelease();
      v32 = swift_release();
      (*(void (**)(uint64_t, uint64_t, __n128))(v33 + 8))(v14, v11, v32);
      goto LABEL_7;
    }
    swift_release();
    v22 = type metadata accessor for LocationViewerActiveLocationState;
    v23 = v1;
  }
  sub_1000215BC(v23, v22);
LABEL_7:
  sub_10009990C();
}

void sub_1004E1F6C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 48));
  sub_10004A298();
}

uint64_t sub_1004E1FA0()
{
  uint64_t v0;

  sub_1004E1F6C();
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for LocationFinder()
{
  return objc_opt_self(_TtC7Weather14LocationFinder);
}

unint64_t sub_1004E1FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE8DC8;
  if (!qword_100BE8DC8)
  {
    v1 = objc_opt_self(CLLocation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100BE8DC8);
  }
  return result;
}

void sub_1004E201C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[48];

  sub_1000BA294(&qword_100BE8E60);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000B30E0();
  __chkstk_darwin(v2);
  sub_10009C838();
  sub_1000CFD94(OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___fetchSchedule);
  sub_1000EAFFC();
  v3 = sub_1000BA294(&qword_100BDEFC0);
  v4 = sub_100088FC8(v0, 1, v3);
  if (v6)
  {
    sub_1000B2628();
    sub_1000CE5C4();
    sub_1000BDD00(v7, v8, &qword_100BDEFC0);
    sub_1000D9EC4();
    sub_1000C1B04();
    swift_endAccess(v9);
  }
  else
  {
    sub_1000F4244(v4, v5, &qword_100BDEFC0);
  }
  sub_10009D300();
}

void sub_1004E20FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[48];

  sub_1000BA294(&qword_100BE8E58);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000B30E0();
  __chkstk_darwin(v2);
  sub_10009C838();
  sub_1000CFD94(OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___deliverySchedule);
  sub_1000EAFFC();
  v3 = sub_1000BA294(&qword_100BE8E40);
  v4 = sub_100088FC8(v0, 1, v3);
  if (v6)
  {
    sub_1000B2628();
    sub_1000CE5C4();
    sub_1000BDD00(v7, v8, &qword_100BE8E40);
    sub_1000D9EC4();
    sub_1000C1B04();
    swift_endAccess(v9);
  }
  else
  {
    sub_1000F4244(v4, v5, &qword_100BE8E40);
  }
  sub_10009D300();
}

void sub_1004E21DC()
{
  void (*v0)(void);
  void (*v1)(void);
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;

  sub_1000986AC();
  v1 = v0;
  sub_1000BA294(&qword_100BD35B8);
  sub_1000B42B0();
  v3 = __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Expression(0, v3);
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v1();
  sub_10009BF40();
  v10 = sub_10009880C();
  SubscriptionEntity.id.getter(v10);
  sub_1000DAA3C();
  sub_10009880C();
  if (v16)
  {
    v19 = &type metadata for String;
    v20 = &protocol witness table for String;
    v17 = v15;
    v18 = v16;
    sub_1000DCFF0();
    sub_1000C55F4();
    *v5 = v11;
    v5[1] = v12;
    v13 = enum case for OrderBy.descending(_:);
    v14 = sub_10009BD18();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v5, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v14);
    dispatch thunk of Query.first(_:orderBy:)(v9, v5);
    swift_release();
    sub_100021AA4((uint64_t)v5, &qword_100BD35B8);
    sub_1000CCE48();
    sub_100098640();
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E23A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter);
  if (!v2)
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    sub_100098E28((uint64_t)objc_msgSend(v3, "setDateStyle:", 1), "setTimeStyle:");
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  sub_100079F70();
}

id sub_1004E2428(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  objc_super v18;

  v5 = (uint64_t)&v2[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___fetchSchedule];
  v6 = sub_1000BA294(&qword_100BDEFC0);
  sub_10009D34C(v5, v7, v8, v6);
  v9 = (uint64_t)&v2[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___deliverySchedule];
  v10 = sub_1000BA294(&qword_100BE8E40);
  sub_10009D34C(v9, v11, v12, v10);
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController_notificationStore] = a1;
  v13 = &v2[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController_subscription];
  v14 = type metadata accessor for SubscriptionEntity(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a2, v14);
  v18.receiver = v2;
  v18.super_class = (Class)sub_1000F40F0();
  v16 = objc_msgSendSuper2(&v18, "initWithStyle:", 2);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
  return v16;
}

void sub_1004E2524()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___fetchSchedule];
  v2 = sub_1000BA294(&qword_100BDEFC0);
  sub_10009D34C(v1, v3, v4, v2);
  v5 = (uint64_t)&v0[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___deliverySchedule];
  v6 = sub_1000BA294(&qword_100BE8E40);
  sub_10009D34C(v5, v7, v8, v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x706F2D6F6ELL, 0xE500000000000000, "Weather/DebugNotificationSubscriptionViewController.swift", 57, 2);
  __break(1u);
}

void sub_1004E25E8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t ObjCClassFromMetadata;
  NSString v12;
  double v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v1 = v0;
  v2 = type metadata accessor for Location(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100079FBC();
  sub_1000BA294(&qword_100BDEFC8);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v21.receiver = v0;
  v21.super_class = (Class)sub_1000F40F0();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v8 = objc_msgSend(v0, "tableView");
  if (v8)
  {
    v9 = v8;
    v10 = sub_1003E9A38();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
    v12 = sub_1000B4550();
    objc_msgSend(v9, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v12);

    SubscriptionEntity.location.getter(v13);
    sub_1000FDB9C();
    sub_10009880C();
    v14 = sub_1000BA294(&qword_100BDEFD0);
    sub_100088FC8(v7, 1, v14);
    if (!v15)
    {
      JSON.value.getter(v14);
      v16 = sub_1000BE774(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8));
      Location.name.getter(v16);
      v18 = v17;
      v20 = v19;
      sub_1000BEA30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      sub_1001207F8(v18, v20, v1);
      sub_10009D300();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1004E279C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t ScheduleEntity;
  uint64_t v9;

  sub_1000BA294(&qword_100BE8E40);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100079F58();
  sub_1000BA294(&qword_100BDEFC0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079FBC();
  if (a2)
  {
    if (a2 == 2)
    {
      sub_1004E20FC();
      v9 = type metadata accessor for DeliveryScheduleEntity(0);
      _s7Weather24LocationCompositionStateOwet_0(v2, 1, v9);
      sub_100021AA4(v2, &qword_100BE8E40);
    }
    else if (a2 == 1)
    {
      sub_1004E201C();
      ScheduleEntity = type metadata accessor for FetchScheduleEntity(0, v7);
      _s7Weather24LocationCompositionStateOwet_0(v3, 1, ScheduleEntity);
      sub_100021AA4(v3, &qword_100BDEFC0);
    }
  }
  sub_100079F70();
}

unint64_t sub_1004E28F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 0x6353206863746546;
  v3 = 0x6E6F697461636F4CLL;
  if (a2)
    v3 = 0;
  if (a2 != 1)
    v2 = v3;
  if (a2 == 2)
    return 0xD000000000000012;
  else
    return v2;
}

id sub_1004E29AC(void *a1)
{
  NSString v2;
  Class isa;
  id v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;

  v2 = sub_1000B4550();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v2, isa);

  if (IndexPath.section.getter(v5))
  {
    if (IndexPath.section.getter(v6) == 1)
    {
      IndexPath.row.getter(v7);
      sub_10009DB3C();
      sub_1004E364C();
    }
    else if (IndexPath.section.getter(v7) == 2)
    {
      IndexPath.row.getter(v8);
      sub_10009DB3C();
      sub_1004E39B4();
    }
  }
  else
  {
    IndexPath.row.getter(v6);
    sub_10009DB3C();
    sub_1004E3110();
  }
  return v4;
}

void sub_1004E2B24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  __n128 v40;
  __n128 v41;
  void *v42;
  char v43;
  __n128 v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  void *v71;

  sub_1000986AC();
  v65 = v1;
  v5 = v4;
  sub_1000BA294(&qword_100BE8E40);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079FBC();
  v7 = type metadata accessor for DeliveryScheduleEntity(0);
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_1000B30E0();
  __chkstk_darwin(v9);
  v59 = (uint64_t)&v58 - v10;
  sub_1000BA294(&qword_100BD35B8);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  sub_1000D0024();
  v16 = type metadata accessor for Expression(0, v15);
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  sub_10009D98C();
  __chkstk_darwin(v17);
  v62 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - v20;
  v22 = type metadata accessor for IndexPath(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_100098728();
  v26 = v25 - v24;
  v28 = IndexPath.section.getter(v27);
  sub_100099B30(v26, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  if (v28 == 1)
  {
    v30 = IndexPath.row.getter(v29);
    sub_1000BE774(v26, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    if (v30 == 1)
    {
      v32 = v65;
      NotificationStore.fetchSchedules.getter(v31);
      sub_10009BF40();
      v33 = sub_10009880C();
      SubscriptionEntity.id.getter(v33);
      sub_1000DAA3C();
      sub_10009880C();
      if (v67)
      {
        v70 = &type metadata for String;
        v71 = &protocol witness table for String;
        v68 = v66;
        v69 = v67;
        sub_1000DCFF0();
        sub_1000C55F4();
        *v3 = v34;
        v3[1] = v35;
        v36 = sub_10009BD18();
        sub_1000ED444((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104));
        sub_1000C0AC0((uint64_t)v3);
        v37 = sub_1000CDCC4((uint64_t)v21, (uint64_t)v3);
        sub_10009925C();
        sub_100021AA4((uint64_t)v3, &qword_100BD35B8);
        sub_1000BCFAC();
        objc_allocWithZone((Class)type metadata accessor for DebugNotificationFetchSchedulesViewController());
        v38 = sub_1008DEC4C(v37);
        v39 = objc_msgSend(v32, "navigationController");
        goto LABEL_14;
      }
      __break(1u);
      goto LABEL_22;
    }
  }
  else
  {
    sub_1000BE774(v26, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  }
  if (IndexPath.section.getter(v31) != 2)
    goto LABEL_17;
  if (!IndexPath.row.getter(v40))
  {
    v42 = v65;
    sub_1004E20FC();
    sub_100088FC8(v2, 1, v61);
    if (!v43)
    {
      v55 = v59;
      v54 = v60;
      sub_100099B30(v59, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 32));
      sub_100099B30(v0, v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 16));
      objc_allocWithZone((Class)type metadata accessor for DebugNotificationDeliveryScheduleViewController(0));
      v38 = (void *)sub_1006E4F08();
      v56 = objc_msgSend(v42, "navigationController");
      if (v56)
      {
        v57 = v56;
        sub_1000C0130(v56, "pushViewController:animated:");

        sub_1000BE774(v55, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
        goto LABEL_17;
      }
      sub_1000BE774(v55, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
      goto LABEL_16;
    }
    sub_100021AA4(v2, &qword_100BE8E40);
  }
  if (IndexPath.row.getter(v41) != 1)
  {
LABEL_17:
    sub_100098640();
    return;
  }
  v45 = v65;
  NotificationStore.deliverySchedules.getter(v44);
  sub_10009BF40();
  v46 = sub_10009880C();
  SubscriptionEntity.id.getter(v46);
  sub_1000DAA3C();
  sub_10009880C();
  v47 = (uint64_t)v62;
  if (v67)
  {
    v70 = &type metadata for String;
    v71 = &protocol witness table for String;
    v68 = v66;
    v69 = v67;
    sub_1000DCFF0();
    sub_1000C55F4();
    *v13 = v48;
    v13[1] = v49;
    v50 = sub_10009BD18();
    sub_1000ED444((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104));
    sub_1000C0AC0((uint64_t)v13);
    v51 = sub_1000CDCC4(v47, (uint64_t)v13);
    sub_10009925C();
    sub_100021AA4((uint64_t)v13, &qword_100BD35B8);
    sub_1000F449C();
    objc_allocWithZone((Class)type metadata accessor for DebugNotificationDeliverySchedulesViewController());
    v38 = sub_1006BF0DC(v51);
    v39 = objc_msgSend(v45, "navigationController");
LABEL_14:
    v52 = v39;
    if (v52)
    {
      v53 = v52;
      sub_1000C0130(v52, "pushViewController:animated:");

    }
LABEL_16:

    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
  sub_10009925C();
  sub_100021AA4((uint64_t)v3, &qword_100BD35B8);
  sub_1000BCFAC();
  swift_unexpectedError(0, "Weather/DebugNotificationSubscriptionViewController.swift", 57, 1, 109);
  __break(1u);
}

void sub_1004E3110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  NSDate v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char v65;
  _QWORD v66[5];

  sub_1000986AC();
  v5 = v4;
  v64 = v6;
  v7 = type metadata accessor for NotificationSubscription.Kind(0);
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100098728();
  v54 = v10 - v9;
  v11 = type metadata accessor for TimeZone(0);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  sub_10009C838();
  v17 = type metadata accessor for UIListContentConfiguration(0);
  v62 = *(_QWORD *)(v17 - 8);
  v63 = v17;
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100079FBC();
  sub_1000BA294(&qword_100BDEFC8);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100098728();
  v22 = v21 - v20;
  v23 = type metadata accessor for Location(0);
  v60 = *(_QWORD *)(v23 - 8);
  v61 = v23;
  sub_10009D98C();
  __chkstk_darwin(v24);
  sub_100079F58();
  v59 = v1;
  SubscriptionEntity.location.getter(v25);
  sub_100110324();
  sub_10009880C();
  v26 = sub_1000BA294(&qword_100BDEFD0);
  sub_100088FC8(v22, 1, v26);
  if (v27)
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    JUMPOUT(0x1004E362CLL);
  }
  JSON.value.getter(v26);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v22, v26);
  v29 = static UIListContentConfiguration.valueCell()(v28);
  v30 = v0;
  switch(v5)
  {
    case 0:
      v31 = sub_1000BA734();
      Location.id.getter(v31);
      goto LABEL_15;
    case 1:
      v48 = sub_1000BA734();
      Location.name.getter(v48);
      goto LABEL_15;
    case 2:
      sub_1000BA734();
      sub_1004E23A0();
      v33 = v32;
      SubscriptionEntity.created.getter();
      sub_1000FDB9C();
      sub_10009880C();
      v34 = sub_100098778();
      sub_100088FC8(v3, 1, v34);
      if (v27)
        goto LABEL_18;
      v35.super.isa = Date._bridgeToObjectiveC()().super.isa;
      v36 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v3, v34);
      v37 = sub_100098A10(v36, "stringFromDate:");
      goto LABEL_8;
    case 3:
      sub_1000BA734();
      sub_1004E23A0();
      v33 = v38;
      SubscriptionEntity.modified.getter();
      dispatch thunk of Column.value.getter(v15);
      sub_10009880C();
      v39 = sub_100098778();
      sub_100088FC8((uint64_t)v15, 1, v39);
      if (v27)
        goto LABEL_19;
      v35.super.isa = Date._bridgeToObjectiveC()().super.isa;
      v40 = (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v15, v39);
      v37 = sub_100098A10(v40, "stringFromDate:");
LABEL_8:
      v41 = v37;

      static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
LABEL_15:
      sub_1000DB26C();
      goto LABEL_16;
    case 4:
      v42 = sub_1000BA734();
      Location.timeZone.getter(v42);
      TimeZone.identifier.getter(v43);
      sub_1000D0C30(v57);
      goto LABEL_15;
    case 5:
    case 6:
      sub_1000BA734();
      sub_1000DC728();
      Double.write<A>(to:)(v66, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      goto LABEL_15;
    case 7:
      SubscriptionEntity.precipitation.getter(v29);
      dispatch thunk of Column.value.getter(v66);
      v44 = sub_10009880C();
      v45 = LOBYTE(v66[0]);
      if (LOBYTE(v66[0]) == 3)
        goto LABEL_20;
      SubscriptionEntity.severe.getter(v44);
      sub_1000AE944();
      sub_10009880C();
      if (v65 == 3)
        goto LABEL_21;
      v46 = v54;
      NotificationSubscription.Kind.init(precipitation:severe:)(v45);
      v47 = sub_1000BA734();
      NotificationSubscription.Kind.description.getter(v47);
      sub_1000DB26C();
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v46, v56);
LABEL_16:
      v49 = v63;
      v66[3] = v63;
      v66[4] = &protocol witness table for UIListContentConfiguration;
      v50 = sub_10005F164(v66);
      v51 = v62;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v62 + 16))(v50, v2, v49);
      v52 = v64;
      UITableViewCell.contentConfiguration.setter(v66);
      objc_msgSend(v52, "setSelectionStyle:", 0);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v2, v49);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v30, v61);
      sub_100098640();
      return;
    default:
      goto LABEL_16;
  }
}

void sub_1004E364C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t ScheduleEntity;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Class isa;
  uint64_t v28;
  id v29;
  Class v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  sub_1000986AC();
  v5 = v4;
  v7 = v6;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_10009D680(v9, v34);
  __chkstk_darwin(v10);
  sub_10009E3CC();
  __chkstk_darwin(v11);
  sub_1000D0024();
  sub_1000BA294(&qword_100BDEFC0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v13 = sub_100099574();
  ScheduleEntity = type metadata accessor for FetchScheduleEntity(v13, v14);
  v36 = *(_QWORD *)(ScheduleEntity - 8);
  v37 = ScheduleEntity;
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_1000D1EBC();
  sub_10011DCA8();
  __chkstk_darwin(v17);
  sub_1000C46D0();
  if (v5 == 1)
  {
    v20 = sub_1000BA734();
    sub_100098E28(v20, "setAccessoryType:");
    v19 = 3;
    goto LABEL_18;
  }
  if (v5)
  {
LABEL_19:
    v33 = sub_100089130((uint64_t)&protocol witness table for UIListContentConfiguration);
    sub_1000DC93C((uint64_t)v33);
    sub_1000F3FA0();
    sub_1000BEA30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_100098640();
    return;
  }
  sub_1004E201C();
  sub_100088FC8(v3, 1, v37);
  if (v18)
  {
    sub_100021AA4(v3, &qword_100BDEFC0);
    sub_1000BA734();
    v19 = 0;
LABEL_18:
    objc_msgSend(v7, "setSelectionStyle:", v19);
    goto LABEL_19;
  }
  sub_1000D9074();
  sub_1000ECFA4();
  FetchScheduleEntity.valid.getter();
  sub_1000AE944();
  sub_10009880C();
  if (v38 == 2)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v38 & 1) != 0)
    v21 = 0x64696C6156;
  else
    v21 = 0x64696C61766E49;
  if ((v38 & 1) != 0)
    v22 = (void *)0xE500000000000000;
  else
    v22 = (void *)0xE700000000000000;
  v23 = v22;
  String.append(_:)(*(Swift::String *)&v21);
  swift_bridgeObjectRelease();
  sub_10011DB6C();
  sub_1000D01D0();
  sub_1000995AC();
  FetchScheduleEntity.date.getter();
  sub_100110324();
  sub_10009880C();
  v24 = sub_100098778();
  sub_100088FC8((uint64_t)v1, 1, v24);
  if (v18)
    goto LABEL_21;
  Date._bridgeToObjectiveC()();
  v25 = sub_1000C16C0();
  v26 = sub_100098A10(v25, "stringFromDate:");
  sub_1000C222C();

  sub_1000BEEA0();
  sub_1000BDA64();
  sub_1000C6B28();
  sub_1000ED2A8();
  sub_1000BA734();
  sub_1000E778C();
  swift_bridgeObjectRelease();
  sub_1000DBAF0();
  sub_1000995AC();
  FetchScheduleEntity.created.getter();
  sub_1000EF9D8();
  sub_10009880C();
  sub_100088FC8(v2, 1, v3);
  if (v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isa = Date._bridgeToObjectiveC()().super.isa;
  v28 = sub_1000CD7D4(v2);
  v29 = sub_100098A10(v28, "stringFromDate:");
  sub_1000C222C();

  sub_1000BEEA0();
  sub_1000DC1D4();
  sub_1000C0AB0();
  swift_bridgeObjectRelease();
  sub_1000D18A0();
  sub_1000D01D0();
  sub_1000995AC();
  FetchScheduleEntity.modified.getter();
  sub_1000C6E90();
  sub_10009880C();
  sub_100088FC8(v24, 1, v3);
  if (!v18)
  {
    v30 = Date._bridgeToObjectiveC()().super.isa;
    v31 = sub_1000CD7D4(v24);
    v32 = sub_100098A10(v31, "stringFromDate:");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    sub_1000BEAC8();
    sub_1001099BC();
    swift_bridgeObjectRelease();
    sub_1000DB26C();
    sub_1000D0C30(v36);
    v19 = 0;
    v7 = v35;
    goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

void sub_1004E39B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  Swift::String v21;
  void *object;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class isa;
  uint64_t v27;
  id v28;
  Class v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;

  sub_1000986AC();
  v5 = v4;
  v7 = v6;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_10009D680(v9, v34);
  __chkstk_darwin(v10);
  sub_10009E3CC();
  __chkstk_darwin(v11);
  sub_1000D0024();
  sub_1000BA294(&qword_100BE8E40);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v13 = sub_100099574();
  v14 = type metadata accessor for DeliveryScheduleEntity(v13);
  v36 = *(_QWORD *)(v14 - 8);
  v37 = v14;
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_1000D1EBC();
  sub_10011DCA8();
  __chkstk_darwin(v16);
  sub_1000C46D0();
  if (v5 == 1)
  {
    v18 = sub_1000BA734();
    sub_100098E28(v18, "setAccessoryType:");
    objc_msgSend(v7, "setSelectionStyle:", 3);
    goto LABEL_12;
  }
  if (v5)
  {
LABEL_12:
    v33 = sub_100089130((uint64_t)&protocol witness table for UIListContentConfiguration);
    sub_1000DC93C((uint64_t)v33);
    sub_1000F3FA0();
    sub_1000BEA30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_100098640();
    return;
  }
  sub_1004E20FC();
  sub_100088FC8(v3, 1, v37);
  if (v17)
  {
    sub_100021AA4(v3, &qword_100BE8E40);
    sub_1000BA734();
    objc_msgSend(v7, "setSelectionStyle:", 0);
    goto LABEL_12;
  }
  sub_1000D9074();
  sub_1000ECFA4();
  v19 = (void *)DeliveryScheduleEntity.state.getter();
  v20 = sub_1000BA294(&qword_100BE8E48);
  sub_1004E3F84();
  v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v20);
  object = v21._object;
  String.append(_:)(v21);
  sub_10009925C();
  swift_bridgeObjectRelease();
  sub_10011DB6C();
  sub_1000D01D0();
  sub_1000995AC();
  DeliveryScheduleEntity.date.getter();
  sub_100110324();
  sub_10009880C();
  v23 = sub_100098778();
  sub_100088FC8((uint64_t)v1, 1, v23);
  if (v17)
  {
    __break(1u);
    goto LABEL_14;
  }
  Date._bridgeToObjectiveC()();
  v24 = sub_1000C16C0();
  v25 = sub_100098A10(v24, "stringFromDate:");
  sub_1000C222C();

  sub_1000BEEA0();
  sub_1000BDA64();
  sub_1000C6B28();
  sub_1000ED2A8();
  sub_1000BA734();
  sub_1000E778C();
  swift_bridgeObjectRelease();
  sub_1000DBAF0();
  sub_1000995AC();
  DeliveryScheduleEntity.created.getter();
  sub_1000EF9D8();
  sub_10009880C();
  sub_100088FC8(v2, 1, (uint64_t)object);
  if (v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  isa = Date._bridgeToObjectiveC()().super.isa;
  v27 = sub_1000CD7D4(v2);
  v28 = sub_100098A10(v27, "stringFromDate:");
  sub_1000C222C();

  sub_1000BEEA0();
  sub_1000DC1D4();
  sub_1000C0AB0();
  swift_bridgeObjectRelease();
  sub_1000D18A0();
  sub_1000D01D0();
  sub_1000995AC();
  DeliveryScheduleEntity.modified.getter();
  sub_1000C6E90();
  sub_10009880C();
  sub_100088FC8(v23, 1, (uint64_t)object);
  if (!v17)
  {
    v29 = Date._bridgeToObjectiveC()().super.isa;
    v30 = sub_1000CD7D4(v23);
    v31 = sub_100098A10(v30, "stringFromDate:");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    sub_1000BEAC8();
    sub_1001099BC();
    swift_bridgeObjectRelease();
    v32 = sub_1000DB26C();
    sub_100098E28(v32, "setAccessoryType:");
    objc_msgSend(v35, "setSelectionStyle:", 3);
    sub_1000D0C30(v36);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
}

void sub_1004E3D2C()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugNotificationSubscriptionViewController", 51, "init(style:)", 12, 0);
  __break(1u);
}

void sub_1004E3D64()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugNotificationSubscriptionViewController", 51, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_1004E3DB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1000F40F0();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugNotificationSubscriptionViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE8E20;
  if (!qword_100BE8E20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugNotificationSubscriptionViewController);
  return result;
}

void sub_1004E3EAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2 = type metadata accessor for SubscriptionEntity(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001474A0(319, &qword_100BE8E30, &qword_100BDEFC0);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001474A0(319, &qword_100BE8E38, &qword_100BE8E40);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = "\b";
        swift_updateClassMetadata2(a1, 256, 5, v8, a1 + 80);
      }
    }
  }
}

unint64_t sub_1004E3F84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE8E50;
  if (!qword_100BE8E50)
  {
    v1 = sub_100075EB0(&qword_100BE8E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for Column<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE8E50);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OptInUserStatus(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1004E4018 + 4 * byte_1009A6ED0[v4]))();
}

uint64_t storeEnumTagSinglePayload for OptInUserStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1004E40C4 + 4 * byte_1009A6EDA[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004E40F8 + 4 * byte_1009A6ED5[v5]))();
}

uint64_t sub_1004E40F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E4100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004E4108);
  return result;
}

uint64_t sub_1004E4114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004E411CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1004E4120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E4128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E4134(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_1004E4150(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for OptInUserStatus()
{
  return &type metadata for OptInUserStatus;
}

uint64_t sub_1004E4178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_10009D98C();
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v44 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v44 - v9;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v45 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  sub_10009C514(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)&v44 - v9);
  v14 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
  HIDWORD(v46) = *(unsigned __int8 *)(v14 + *(int *)(type metadata accessor for NotificationsOptInState(0) + 56));
  sub_10009C514((uint64_t)v10, (uint64_t)v8);
  type metadata accessor for CurrentLocation(0);
  v15 = sub_1000B4560((uint64_t)v8);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  v16 = swift_bridgeObjectRetain(v13);
  if (v15 == 1)
  {
    sub_1003E3890((uint64_t)v8);
    v17 = 0;
  }
  else
  {
    CurrentLocation.id.getter(v16);
    v17 = v18;
    sub_1004E4F48((uint64_t)v8);
  }
  sub_1000E7108();
  sub_10009AD1C(v19, v20, v21, v22, v23, v24, v25, v26, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55);
  HIDWORD(v44) = v27;
  swift_bridgeObjectRelease(v17);
  sub_10009C514((uint64_t)v10, (uint64_t)v5);
  if (sub_1000B4560((uint64_t)v5) == 1)
  {
    sub_1003E3890((uint64_t)v5);
    v29 = 0;
  }
  else
  {
    CurrentLocation.id.getter(v28);
    v29 = v30;
    sub_1004E4F48((uint64_t)v5);
  }
  sub_1000E7108();
  sub_10066D12C(v31, v32, v33, v34, v35, v36, v37, v38, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55);
  v40 = v39;
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v29);
  v41 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, &v47, 0, 0);
  v42 = sub_10009AC0C(SBYTE4(v46), BYTE4(v44) & 1, v40 & 1, *(_BYTE *)(v41 + 1), *(_BYTE *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications));
  swift_release(a1);
  sub_1003E3890((uint64_t)v10);
  return v42;
}

uint64_t sub_1004E43EC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v10;

  if (a1 == 0x7265735577656ELL && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7265735577656ELL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E49646574706FLL && a2 == 0xE700000000000000)
  {
    v8 = 0xE700000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E49646574706FLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x64656E696C636564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 2;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64656E696C636564, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1004E4540(char a1)
{
  if (!a1)
    return 0x7265735577656ELL;
  if (a1 == 1)
    return 0x6E49646574706FLL;
  return 0x64656E696C636564;
}

uint64_t sub_1004E4598(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  if (a1 == 0x7265766F4377656ELL && a2 == 0xEB00000000656761)
  {
    swift_bridgeObjectRelease(0xEB00000000656761);
    v5 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265766F4377656ELL, 0xEB00000000656761, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_1004E4634()
{
  return 0x7265766F4377656ELL;
}

uint64_t sub_1004E4654(_QWORD *a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;

  v3 = a2;
  v4 = sub_1000BA294(&qword_100BE8EA8);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v26 = v6;
  v7 = sub_1000BA294(&qword_100BE8EB0);
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = sub_1000BA294(&qword_100BE8EB8);
  v23 = *(_QWORD *)(v12 - 8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  sub_1000BA294(&qword_100BE8EC0);
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_100098694();
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = sub_1004E4E58();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for OptInUserStatus.CodingKeys, &type metadata for OptInUserStatus.CodingKeys, v20, v18, v19);
  if (v3 == 2)
  {
    sub_1000C561C();
    sub_1000BA504((uint64_t)&type metadata for OptInUserStatus.OptedInCodingKeys, (uint64_t)&v30);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
    return sub_1000CCA58();
  }
  if (v3 == 3)
  {
    sub_1000DF6C8();
    sub_1000BA504((uint64_t)&type metadata for OptInUserStatus.DeclinedCodingKeys, (uint64_t)&v31);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    return sub_1000CCA58();
  }
  v29 = 0;
  sub_1004E4F0C();
  sub_1000BA504((uint64_t)&type metadata for OptInUserStatus.NewUserCodingKeys, (uint64_t)&v29);
  KeyedEncodingContainer.encode(_:forKey:)(v3 & 1, v22, v12);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v16, v12);
  return sub_1000CCA58();
}

uint64_t sub_1004E4868(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;

  v36 = sub_1000BA294(&qword_100BE8E68);
  v34 = *(_QWORD *)(v36 - 8);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100088FDC();
  v39 = v3;
  v35 = sub_1000BA294(&qword_100BE8E70);
  v33 = *(_QWORD *)(v35 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v37 = v5;
  v38 = sub_1000BA294(&qword_100BE8E78);
  __chkstk_darwin(v38);
  sub_100098694();
  v6 = sub_1000BA294(&qword_100BE8E80);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = a1[3];
  v12 = a1[4];
  v13 = (uint64_t)sub_1000DB418(a1, v11);
  v14 = sub_1004E4E58();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for OptInUserStatus.CodingKeys, &type metadata for OptInUserStatus.CodingKeys, v14, v11, v12);
  if (v40)
    goto LABEL_10;
  v32 = v7;
  v15 = KeyedDecodingContainer.allKeys.getter(v6);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = v6;
  if (!v16)
  {
    v13 = v10;
LABEL_9:
    v23 = type metadata accessor for DecodingError(0);
    swift_allocError(v23, &protocol witness table for DecodingError, 0, 0);
    v25 = v24;
    sub_1000BA294(&qword_100BC6CF8);
    *v25 = &type metadata for OptInUserStatus;
    v26 = KeyedDecodingContainer.codingPath.getter(v17);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v26, 0xD00000000000002BLL, 0x80000001009F2600, 0);
    v27 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, enum case for DecodingError.typeMismatch(_:), v23);
    swift_willThrow(v27, v28);
    sub_100099400();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v13, v17);
LABEL_10:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    return v13;
  }
  v18 = *(unsigned __int8 *)(v15 + 32);
  sub_10055FF58(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    v13 = v10;
    v17 = v6;
    goto LABEL_9;
  }
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1000C561C();
      sub_1000BAF6C((uint64_t)&type metadata for OptInUserStatus.OptedInCodingKeys, (uint64_t)&v42);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v35);
      sub_100099400();
      sub_1000B4AA0(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
      v13 = 2;
    }
    else
    {
      sub_1000DF6C8();
      sub_1000BAF6C((uint64_t)&type metadata for OptInUserStatus.DeclinedCodingKeys, (uint64_t)&v43);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v39, v36);
      sub_100099400();
      sub_1000B4AA0(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
      v13 = 3;
    }
  }
  else
  {
    v41 = 0;
    sub_1004E4F0C();
    v30 = sub_1000BAF6C((uint64_t)&type metadata for OptInUserStatus.NewUserCodingKeys, (uint64_t)&v41);
    v31 = KeyedDecodingContainer.decode(_:forKey:)(v30, v38);
    sub_1000DDC04();
    sub_100099400();
    sub_1000B4AA0(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    v13 = v31 & 1;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v13;
}

uint64_t sub_1004E4C74()
{
  char *v0;

  return sub_1004E4540(*v0);
}

uint64_t sub_1004E4C7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004E43EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E4CA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4E58();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E4CC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4E58();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E4CF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4E94();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E4D18(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4E94();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E4D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004E4598(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1004E4D6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4F0C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E4D94(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4F0C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E4DBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4ED0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E4DE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E4ED0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E4E0C(char *a1, char *a2)
{
  return sub_10009B654(*a1, *a2);
}

uint64_t sub_1004E4E18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1004E4868(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1004E4E40(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1004E4654(a1, *v1);
}

unint64_t sub_1004E4E58()
{
  unint64_t result;

  result = qword_100BE8E88;
  if (!qword_100BE8E88)
  {
    result = swift_getWitnessTable(&unk_1009A72F4, &type metadata for OptInUserStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8E88);
  }
  return result;
}

unint64_t sub_1004E4E94()
{
  unint64_t result;

  result = qword_100BE8E90;
  if (!qword_100BE8E90)
  {
    result = swift_getWitnessTable(&unk_1009A72A4, &type metadata for OptInUserStatus.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8E90);
  }
  return result;
}

unint64_t sub_1004E4ED0()
{
  unint64_t result;

  result = qword_100BE8E98;
  if (!qword_100BE8E98)
  {
    result = swift_getWitnessTable(&unk_1009A7254, &type metadata for OptInUserStatus.OptedInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8E98);
  }
  return result;
}

unint64_t sub_1004E4F0C()
{
  unint64_t result;

  result = qword_100BE8EA0;
  if (!qword_100BE8EA0)
  {
    result = swift_getWitnessTable(&unk_1009A7204, &type metadata for OptInUserStatus.NewUserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8EA0);
  }
  return result;
}

uint64_t sub_1004E4F48(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CurrentLocation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for OptInUserStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004E4FD0 + 4 * byte_1009A6EE8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004E5004 + 4 * byte_1009A6EE3[v4]))();
}

uint64_t sub_1004E5004(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E500C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004E5014);
  return result;
}

uint64_t sub_1004E5020(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004E5028);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004E502C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E5034(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OptInUserStatus.CodingKeys()
{
  return &type metadata for OptInUserStatus.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for OptInUserStatus.NewUserCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004E5090 + 4 * byte_1009A6EED[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004E50B0 + 4 * byte_1009A6EF2[v4]))();
}

_BYTE *sub_1004E5090(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004E50B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004E50B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004E50C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004E50C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004E50D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OptInUserStatus.NewUserCodingKeys()
{
  return &type metadata for OptInUserStatus.NewUserCodingKeys;
}

ValueMetadata *type metadata accessor for OptInUserStatus.OptedInCodingKeys()
{
  return &type metadata for OptInUserStatus.OptedInCodingKeys;
}

ValueMetadata *type metadata accessor for OptInUserStatus.DeclinedCodingKeys()
{
  return &type metadata for OptInUserStatus.DeclinedCodingKeys;
}

unint64_t sub_1004E5110()
{
  unint64_t result;

  result = qword_100BE8EC8;
  if (!qword_100BE8EC8)
  {
    result = swift_getWitnessTable(&unk_1009A7124, &type metadata for OptInUserStatus.NewUserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8EC8);
  }
  return result;
}

unint64_t sub_1004E5150()
{
  unint64_t result;

  result = qword_100BE8ED0;
  if (!qword_100BE8ED0)
  {
    result = swift_getWitnessTable(&unk_1009A71DC, &type metadata for OptInUserStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8ED0);
  }
  return result;
}

unint64_t sub_1004E5190()
{
  unint64_t result;

  result = qword_100BE8ED8;
  if (!qword_100BE8ED8)
  {
    result = swift_getWitnessTable(&unk_1009A7094, &type metadata for OptInUserStatus.NewUserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8ED8);
  }
  return result;
}

unint64_t sub_1004E51D0()
{
  unint64_t result;

  result = qword_100BE8EE0;
  if (!qword_100BE8EE0)
  {
    result = swift_getWitnessTable(&unk_1009A70BC, &type metadata for OptInUserStatus.NewUserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8EE0);
  }
  return result;
}

unint64_t sub_1004E5210()
{
  unint64_t result;

  result = qword_100BE8EE8;
  if (!qword_100BE8EE8)
  {
    result = swift_getWitnessTable(&unk_1009A7044, &type metadata for OptInUserStatus.OptedInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8EE8);
  }
  return result;
}

unint64_t sub_1004E5250()
{
  unint64_t result;

  result = qword_100BE8EF0;
  if (!qword_100BE8EF0)
  {
    result = swift_getWitnessTable(&unk_1009A706C, &type metadata for OptInUserStatus.OptedInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8EF0);
  }
  return result;
}

unint64_t sub_1004E5290()
{
  unint64_t result;

  result = qword_100BE8EF8;
  if (!qword_100BE8EF8)
  {
    result = swift_getWitnessTable(&unk_1009A6FF4, &type metadata for OptInUserStatus.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8EF8);
  }
  return result;
}

unint64_t sub_1004E52D0()
{
  unint64_t result;

  result = qword_100BE8F00;
  if (!qword_100BE8F00)
  {
    result = swift_getWitnessTable(&unk_1009A701C, &type metadata for OptInUserStatus.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8F00);
  }
  return result;
}

unint64_t sub_1004E5310()
{
  unint64_t result;

  result = qword_100BE8F08;
  if (!qword_100BE8F08)
  {
    result = swift_getWitnessTable(&unk_1009A714C, &type metadata for OptInUserStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8F08);
  }
  return result;
}

unint64_t sub_1004E5350()
{
  unint64_t result;

  result = qword_100BE8F10;
  if (!qword_100BE8F10)
  {
    result = swift_getWitnessTable(&unk_1009A7174, &type metadata for OptInUserStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8F10);
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonDetailTracker()
{
  return &type metadata for MoonDetailTracker;
}

BOOL static MKCoordinateRegion.== infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  _BOOL4 v8;

  v8 = a1 == a5;
  if (a2 != a6)
    v8 = 0;
  if (a4 != a8)
    v8 = 0;
  return a3 == a7 && v8;
}

BOOL sub_1004E53C0(double *a1, double *a2)
{
  return static MKCoordinateRegion.== infix(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

char *sub_1004E53D4(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArticleModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v8;
      v9 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v9;
      v10 = (int *)type metadata accessor for NewsArticle(0);
      v11 = v10[6];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = v7;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        v15 = sub_1000BA294(&qword_100BD4280);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
      v21 = v10[7];
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v25(&a1[v10[8]], &a2[v10[8]], v14);
      v26 = v10[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = *(_QWORD *)&a2[v26 + 8];
      *(_QWORD *)v27 = *(_QWORD *)&a2[v26];
      *((_QWORD *)v27 + 1) = v29;
      v30 = *(_QWORD *)&a2[v26 + 24];
      *((_QWORD *)v27 + 2) = *(_QWORD *)&a2[v26 + 16];
      *((_QWORD *)v27 + 3) = v30;
      v31 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v32 = &v27[v31];
      v33 = &v28[v31];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v14))
      {
        v34 = sub_1000BA294(&qword_100BD4280);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v25(v32, v33, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v14);
      }
      *(_QWORD *)&a1[v10[10]] = *(_QWORD *)&a2[v10[10]];
      *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
      *(_QWORD *)&a1[v10[12]] = *(_QWORD *)&a2[v10[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = a1;
      v19 = v36;
      v20 = 1;
    }
    else
    {
      v17 = type metadata accessor for Article(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      v18 = a1;
      v19 = v7;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  }
  return a1;
}

void sub_1004E5684(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for ArticleModel(0);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = (int *)type metadata accessor for NewsArticle(0);
    v3 = a1 + v2[6];
    v4 = type metadata accessor for URL(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    v5 = a1 + v2[7];
    v6 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v7(a1 + v2[8], v4);
    v8 = a1 + v2[9];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v8 + *(int *)(type metadata accessor for NewsChannel(0) + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v4))
      v7(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = type metadata accessor for Article(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  }
}

char *sub_1004E57F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;

  v6 = type metadata accessor for ArticleModel(0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v8;
    v9 = (int *)type metadata accessor for NewsArticle(0);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_1000BA294(&qword_100BD4280);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    v19 = v9[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v23(&a1[v9[8]], &a2[v9[8]], v13);
    v24 = v9[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *(_QWORD *)&a2[v24 + 8];
    *(_QWORD *)v25 = *(_QWORD *)&a2[v24];
    *((_QWORD *)v25 + 1) = v27;
    v28 = *(_QWORD *)&a2[v24 + 24];
    *((_QWORD *)v25 + 2) = *(_QWORD *)&a2[v24 + 16];
    *((_QWORD *)v25 + 3) = v28;
    v29 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v30 = &v25[v29];
    v31 = &v26[v29];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v13))
    {
      v32 = sub_1000BA294(&qword_100BD4280);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v23(v30, v31, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v13);
    }
    a3 = v34;
    *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
    *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
    *(_QWORD *)&a1[v9[12]] = *(_QWORD *)&a2[v9[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = a1;
    v17 = v6;
    v18 = 1;
  }
  else
  {
    v15 = type metadata accessor for Article(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
    v16 = a1;
    v17 = v6;
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v17, v18);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1004E5A7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for ArticleModel);
    v6 = type metadata accessor for ArticleModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      v7 = (int *)type metadata accessor for NewsArticle(0);
      v8 = v7[6];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      {
        v12 = sub_1000BA294(&qword_100BD4280);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      }
      v17 = v7[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v21(&a1[v7[8]], &a2[v7[8]], v11);
      v22 = v7[9];
      v23 = &a1[v22];
      v24 = &a2[v22];
      *(_QWORD *)v23 = *(_QWORD *)&a2[v22];
      *((_QWORD *)v23 + 1) = *(_QWORD *)&a2[v22 + 8];
      *((_QWORD *)v23 + 2) = *(_QWORD *)&a2[v22 + 16];
      *((_QWORD *)v23 + 3) = *(_QWORD *)&a2[v22 + 24];
      v25 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v26 = &v23[v25];
      v27 = &v24[v25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v11))
      {
        v28 = sub_1000BA294(&qword_100BD4280);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v21(v26, v27, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v11);
      }
      a3 = v30;
      *(_QWORD *)&a1[v7[10]] = *(_QWORD *)&a2[v7[10]];
      *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
      *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = v6;
      v16 = 1;
    }
    else
    {
      v13 = type metadata accessor for Article(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = a1;
      v15 = v6;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1004E5D3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = type metadata accessor for ArticleModel(0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
    v8 = (int *)type metadata accessor for NewsArticle(0);
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for URL(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_1000BA294(&qword_100BD4280);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v18 = v8[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
    v22(&a1[v8[8]], &a2[v8[8]], v12);
    v23 = v8[9];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *(_OWORD *)&a2[v23 + 16];
    *(_OWORD *)v24 = *(_OWORD *)&a2[v23];
    *((_OWORD *)v24 + 1) = v26;
    v27 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v28 = &v24[v27];
    v29 = &v25[v27];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v12))
    {
      v30 = sub_1000BA294(&qword_100BD4280);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v22(v28, v29, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v12);
    }
    *(_QWORD *)&a1[v8[10]] = *(_QWORD *)&a2[v8[10]];
    *(_QWORD *)&a1[v8[11]] = *(_QWORD *)&a2[v8[11]];
    *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
    v15 = a1;
    v16 = v6;
    v17 = 1;
  }
  else
  {
    v14 = type metadata accessor for Article(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
    v15 = a1;
    v16 = v6;
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v16, v17);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1004E5F70(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for ArticleModel);
    v6 = type metadata accessor for ArticleModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
      v8 = (int *)type metadata accessor for NewsArticle(0);
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_1000BA294(&qword_100BD4280);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      v18 = v8[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v22(&a1[v8[8]], &a2[v8[8]], v12);
      v23 = v8[9];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = *(_OWORD *)&a2[v23 + 16];
      *(_OWORD *)v24 = *(_OWORD *)&a2[v23];
      *((_OWORD *)v24 + 1) = v26;
      v27 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v28 = &v24[v27];
      v29 = &v25[v27];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v12))
      {
        v30 = sub_1000BA294(&qword_100BD4280);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v22(v28, v29, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v12);
      }
      *(_QWORD *)&a1[v8[10]] = *(_QWORD *)&a2[v8[10]];
      *(_QWORD *)&a1[v8[11]] = *(_QWORD *)&a2[v8[11]];
      *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
      v15 = a1;
      v16 = v6;
      v17 = 1;
    }
    else
    {
      v14 = type metadata accessor for Article(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = a1;
      v16 = v6;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1004E61BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004E61C8);
}

uint64_t sub_1004E61C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = type metadata accessor for ArticleModel(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1004E6250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004E625C);
}

uint64_t sub_1004E625C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for ArticleModel(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1004E62D0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x656C6369747261 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C6369747261, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100A083D0)
  {
    swift_bridgeObjectRelease(0x8000000100A083D0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100A083D0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1004E63BC(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0x656C6369747261;
}

uint64_t sub_1004E63F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BE8FC0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1004E6838();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NewsArticleComponent.CodingKeys, &type metadata for NewsArticleComponent.CodingKeys, v12, v10, v11);
  v18 = 0;
  v13 = type metadata accessor for ArticleModel(0);
  v14 = sub_1004E68FC(&qword_100BE8FC8, (uint64_t)&unk_1009A75CC);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v18, v5, v13, v14);
  if (!v2)
  {
    v15 = *(unsigned __int8 *)(v3 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20));
    v17 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v17, v5);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1004E6538@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v16 = type metadata accessor for ArticleModel(0);
  __chkstk_darwin(v16);
  sub_100098728();
  v17 = v5 - v4;
  v18 = sub_1000BA294(&qword_100BE8FA8);
  __chkstk_darwin(v18);
  sub_100098728();
  v6 = type metadata accessor for NewsArticleComponent(0);
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v11 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v11);
  v12 = sub_1004E6838();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NewsArticleComponent.CodingKeys, &type metadata for NewsArticleComponent.CodingKeys, v12, v11, v10);
  if (v2)
    return sub_1000998EC();
  v20 = 0;
  sub_1004E68FC(&qword_100BE8FB8, (uint64_t)&unk_1009A75F4);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v16, &v20, v18);
  sub_1004E6874(v17, v9);
  v19 = 1;
  v13 = KeyedDecodingContainer.decode(_:forKey:)(&v19, v18);
  sub_1000BC3F0();
  *(_BYTE *)(v9 + *(int *)(v6 + 20)) = v13 & 1;
  sub_1004E68B8(v9, a2);
  sub_1000998EC();
  return sub_10006BD20(v9, type metadata accessor for NewsArticleComponent);
}

uint64_t sub_1004E6738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  if ((sub_1004E7904(a1, a2) & 1) != 0)
  {
    v4 = type metadata accessor for NewsArticleComponent(0);
    v5 = *(_BYTE *)(a1 + *(int *)(v4 + 20)) ^ *(_BYTE *)(a2 + *(int *)(v4 + 20)) ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1004E6790()
{
  char *v0;

  return sub_1004E63BC(*v0);
}

uint64_t sub_1004E6798@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004E62D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E67BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E6838();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E67E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E6838();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E680C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004E6538(a1, a2);
}

uint64_t sub_1004E6820(_QWORD *a1)
{
  return sub_1004E63F8(a1);
}

unint64_t sub_1004E6838()
{
  unint64_t result;

  result = qword_100BE8FB0;
  if (!qword_100BE8FB0)
  {
    result = swift_getWitnessTable(&unk_1009A754C, &type metadata for NewsArticleComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8FB0);
  }
  return result;
}

uint64_t sub_1004E6874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E68B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsArticleComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E68FC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ArticleModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsArticleComponent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004E6988 + 4 * byte_1009A73D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004E69BC + 4 * byte_1009A73D0[v4]))();
}

uint64_t sub_1004E69BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E69C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004E69CCLL);
  return result;
}

uint64_t sub_1004E69D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004E69E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004E69E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E69EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleComponent.CodingKeys()
{
  return &type metadata for NewsArticleComponent.CodingKeys;
}

unint64_t sub_1004E6A0C()
{
  unint64_t result;

  result = qword_100BE8FD0;
  if (!qword_100BE8FD0)
  {
    result = swift_getWitnessTable(&unk_1009A7524, &type metadata for NewsArticleComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8FD0);
  }
  return result;
}

unint64_t sub_1004E6A4C()
{
  unint64_t result;

  result = qword_100BE8FD8;
  if (!qword_100BE8FD8)
  {
    result = swift_getWitnessTable(&unk_1009A7494, &type metadata for NewsArticleComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8FD8);
  }
  return result;
}

unint64_t sub_1004E6A8C()
{
  unint64_t result;

  result = qword_100BE8FE0;
  if (!qword_100BE8FE0)
  {
    result = swift_getWitnessTable(&unk_1009A74BC, &type metadata for NewsArticleComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE8FE0);
  }
  return result;
}

char *sub_1004E6AC8(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v7;
      v8 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v8;
      v9 = (int *)type metadata accessor for NewsArticle(0);
      v10 = v9[6];
      v11 = &a1[v10];
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        v14 = sub_1000BA294(&qword_100BD4280);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      v20 = v9[7];
      v21 = &a1[v20];
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v24(&a1[v9[8]], (char *)a2 + v9[8], v13);
      v25 = v9[9];
      v26 = &a1[v25];
      v27 = (char *)a2 + v25;
      v28 = *(uint64_t *)((char *)a2 + v25 + 8);
      *(_QWORD *)v26 = *(uint64_t *)((char *)a2 + v25);
      *((_QWORD *)v26 + 1) = v28;
      v29 = *(uint64_t *)((char *)a2 + v25 + 24);
      *((_QWORD *)v26 + 2) = *(uint64_t *)((char *)a2 + v25 + 16);
      *((_QWORD *)v26 + 3) = v29;
      v30 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v31 = &v26[v30];
      v32 = &v27[v30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v13))
      {
        v33 = sub_1000BA294(&qword_100BD4280);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v24(v31, v32, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v13);
      }
      *(_QWORD *)&a1[v9[10]] = *(uint64_t *)((char *)a2 + v9[10]);
      *(_QWORD *)&a1[v9[11]] = *(uint64_t *)((char *)a2 + v9[11]);
      *(_QWORD *)&a1[v9[12]] = *(uint64_t *)((char *)a2 + v9[12]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = a1;
      v18 = a3;
      v19 = 1;
    }
    else
    {
      v16 = type metadata accessor for Article(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = a1;
      v18 = a3;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return a1;
}

void sub_1004E6D54(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = (int *)type metadata accessor for NewsArticle(0);
    v3 = a1 + v2[6];
    v4 = type metadata accessor for URL(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    v5 = a1 + v2[7];
    v6 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v7(a1 + v2[8], v4);
    v8 = a1 + v2[9];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v8 + *(int *)(type metadata accessor for NewsChannel(0) + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v4))
      v7(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = type metadata accessor for Article(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  }
}

char *sub_1004E6EB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v6 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v6;
    v7 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v7;
    v8 = (int *)type metadata accessor for NewsArticle(0);
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_1000BA294(&qword_100BD4280);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v18 = v8[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v22(&a1[v8[8]], &a2[v8[8]], v12);
    v23 = v8[9];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *(_QWORD *)&a2[v23 + 8];
    *(_QWORD *)v24 = *(_QWORD *)&a2[v23];
    *((_QWORD *)v24 + 1) = v26;
    v27 = *(_QWORD *)&a2[v23 + 24];
    *((_QWORD *)v24 + 2) = *(_QWORD *)&a2[v23 + 16];
    *((_QWORD *)v24 + 3) = v27;
    v28 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v29 = &v24[v28];
    v30 = &v25[v28];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v12))
    {
      v31 = sub_1000BA294(&qword_100BD4280);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v22(v29, v30, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v12);
    }
    *(_QWORD *)&a1[v8[10]] = *(_QWORD *)&a2[v8[10]];
    *(_QWORD *)&a1[v8[11]] = *(_QWORD *)&a2[v8[11]];
    *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = a1;
    v16 = a3;
    v17 = 1;
  }
  else
  {
    v14 = type metadata accessor for Article(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    v15 = a1;
    v16 = a3;
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v16, v17);
  return a1;
}

char *sub_1004E7114(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for ArticleModel);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      v6 = (int *)type metadata accessor for NewsArticle(0);
      v7 = v6[6];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
        v11 = sub_1000BA294(&qword_100BD4280);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      }
      v16 = v6[7];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v20(&a1[v6[8]], &a2[v6[8]], v10);
      v21 = v6[9];
      v22 = &a1[v21];
      v23 = &a2[v21];
      *(_QWORD *)v22 = *(_QWORD *)&a2[v21];
      *((_QWORD *)v22 + 1) = *(_QWORD *)&a2[v21 + 8];
      *((_QWORD *)v22 + 2) = *(_QWORD *)&a2[v21 + 16];
      *((_QWORD *)v22 + 3) = *(_QWORD *)&a2[v21 + 24];
      v24 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v25 = &v22[v24];
      v26 = &v23[v24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v10))
      {
        v27 = sub_1000BA294(&qword_100BD4280);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v20(v25, v26, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v10);
      }
      *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
      *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
      *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = a1;
      v14 = a3;
      v15 = 1;
    }
    else
    {
      v12 = type metadata accessor for Article(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = a1;
      v14 = a3;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

char *sub_1004E73AC(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    v7 = (int *)type metadata accessor for NewsArticle(0);
    v8 = v7[6];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for URL(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BD4280);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v17 = v7[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
    v21(&a1[v7[8]], &a2[v7[8]], v11);
    v22 = v7[9];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = *(_OWORD *)&a2[v22 + 16];
    *(_OWORD *)v23 = *(_OWORD *)&a2[v22];
    *((_OWORD *)v23 + 1) = v25;
    v26 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v27 = &v23[v26];
    v28 = &v24[v26];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v11))
    {
      v29 = sub_1000BA294(&qword_100BD4280);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v21(v27, v28, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v11);
    }
    *(_QWORD *)&a1[v7[10]] = *(_QWORD *)&a2[v7[10]];
    *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
    *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
    v14 = a1;
    v15 = a3;
    v16 = 1;
  }
  else
  {
    v13 = type metadata accessor for Article(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    v14 = a1;
    v15 = a3;
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v15, v16);
  return a1;
}

char *sub_1004E75C0(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for ArticleModel);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v6 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v6;
      v7 = (int *)type metadata accessor for NewsArticle(0);
      v8 = v7[6];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      {
        v12 = sub_1000BA294(&qword_100BD4280);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      }
      v17 = v7[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
      v21(&a1[v7[8]], &a2[v7[8]], v11);
      v22 = v7[9];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = *(_OWORD *)&a2[v22 + 16];
      *(_OWORD *)v23 = *(_OWORD *)&a2[v22];
      *((_OWORD *)v23 + 1) = v25;
      v26 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v27 = &v23[v26];
      v28 = &v24[v26];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v11))
      {
        v29 = sub_1000BA294(&qword_100BD4280);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v21(v27, v28, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v11);
      }
      *(_QWORD *)&a1[v7[10]] = *(_QWORD *)&a2[v7[10]];
      *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
      *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
      v14 = a1;
      v15 = a3;
      v16 = 1;
    }
    else
    {
      v13 = type metadata accessor for Article(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = a1;
      v15 = a3;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_1004E77EC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676E6964616F6CLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x646564616F6CLL, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1004E78D0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x646564616F6CLL;
  else
    return 0x676E6964616F6CLL;
}

uint64_t sub_1004E7904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  type metadata accessor for NewsArticle(0);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = (_QWORD *)(v6 - v5);
  v8 = type metadata accessor for Article(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v12 = v11 - v10;
  type metadata accessor for ArticleModel(0);
  sub_10009D98C();
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v25 - v17;
  sub_1000BA294(&qword_100BE9090);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100079F58();
  v21 = v2 + *(int *)(v20 + 48);
  sub_1004E83A4(a1, v2);
  sub_1004E83A4(v26, v21);
  if (swift_getEnumCaseMultiPayload(v2) == 1)
  {
    sub_1004E83A4(v2, (uint64_t)v15);
    if (sub_1000D1798() == 1)
    {
      sub_1000A15B4(v21, (uint64_t)v7, type metadata accessor for NewsArticle);
      v22 = sub_1008243B4(v15, v7);
      sub_1000979AC((uint64_t)v7, type metadata accessor for NewsArticle);
      sub_1000979AC((uint64_t)v15, type metadata accessor for NewsArticle);
LABEL_9:
      sub_1000979AC(v2, type metadata accessor for ArticleModel);
      return v22 & 1;
    }
    sub_1000979AC((uint64_t)v15, type metadata accessor for NewsArticle);
  }
  else
  {
    sub_1004E83A4(v2, (uint64_t)v18);
    if (sub_1000D1798() != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v21, v8);
      v22 = static Article.== infix(_:_:)(v18, v12);
      v23 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v23(v12, v8);
      v23((uint64_t)v18, v8);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  }
  sub_1004E83E8(v2);
  v22 = 0;
  return v22 & 1;
}

void sub_1004E7B48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v4 = sub_1000BA294(&qword_100BE90D0);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v27 = v6;
  v23 = type metadata accessor for NewsArticle(0);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v26 = v8;
  v25 = sub_1000BA294(&qword_100BE90D8);
  v22 = *(_QWORD *)(v25 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100079F58();
  v24 = type metadata accessor for Article(0);
  v31 = *(_QWORD *)(v24 - 8);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_1000C2B30();
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v32 = sub_1000BA294(&qword_100BE90E0);
  __chkstk_darwin(v32);
  sub_100098728();
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1004E8428();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ArticleModel.CodingKeys, &type metadata for ArticleModel.CodingKeys, v17, v15, v16);
  sub_1004E83A4(v30, v14);
  if (swift_getEnumCaseMultiPayload(v14) == 1)
  {
    sub_1000A15B4(v14, v26, type metadata accessor for NewsArticle);
    sub_1000D18C0();
    sub_1000DBB18((uint64_t)&type metadata for ArticleModel.LoadedCodingKeys, (uint64_t)&v34);
    sub_100086DA4(&qword_100BDBCF0, type metadata accessor for NewsArticle, (uint64_t)&unk_1009D11E8);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v26, v19, v29, v23, v18);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    sub_1000979AC(v26, type metadata accessor for NewsArticle);
    sub_1000DD9F8();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v2, v14, v24);
    v33 = 0;
    sub_1004E84A0();
    sub_1000DBB18((uint64_t)&type metadata for ArticleModel.LoadingCodingKeys, (uint64_t)&v33);
    sub_100086DA4(&qword_100BE90E8, (uint64_t (*)(uint64_t))&type metadata accessor for Article, (uint64_t)&protocol conformance descriptor for Article);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v2, v21, v25, v24, v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v25);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v2, v24);
    sub_1000DD9F8();
  }
  sub_1000B44B0();
}

void sub_1004E7E30(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char v67;
  char v68;

  v57 = a2;
  v3 = sub_1000BA294(&qword_100BE9098);
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v63 = v5;
  v6 = sub_1000BA294(&qword_100BE90A0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v62 = v8;
  v9 = sub_1000BA294(&qword_100BE90A8);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  sub_10009D98C();
  __chkstk_darwin(v10);
  v11 = sub_1000C2B30();
  sub_10009D98C();
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v53 - v19;
  v21 = a1[3];
  v22 = a1[4];
  sub_1000DB418(a1, v21);
  v23 = sub_1004E8428();
  v24 = v66;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ArticleModel.CodingKeys, &type metadata for ArticleModel.CodingKeys, v23, v21, v22);
  if (v24)
    goto LABEL_8;
  v54 = v14;
  v55 = v17;
  v53 = v20;
  v56 = v11;
  v66 = a1;
  v25 = v65;
  v26 = KeyedDecodingContainer.allKeys.getter(v65);
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27
    || (v28 = *(_BYTE *)(v26 + 32),
        sub_10055FF58(1, v27, v26, v26 + 32, 0, (2 * v27) | 1),
        v30 = v29,
        v32 = v31,
        swift_bridgeObjectRelease(),
        v30 != v32 >> 1))
  {
    v37 = v64;
    v38 = v56;
    v39 = type metadata accessor for DecodingError(0);
    swift_allocError(v39, &protocol witness table for DecodingError, 0, 0);
    v41 = v40;
    sub_1000BA294(&qword_100BC6CF8);
    *v41 = v38;
    v42 = KeyedDecodingContainer.codingPath.getter(v25);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v42, 0xD00000000000002BLL, 0x80000001009F2600, 0);
    v43 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, enum case for DecodingError.typeMismatch(_:), v39);
    swift_willThrow(v43, v44);
    sub_100099400();
    sub_1000CCBCC(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
    a1 = v66;
LABEL_8:
    v48 = a1;
    goto LABEL_9;
  }
  if ((v28 & 1) != 0)
  {
    sub_1000D18C0();
    sub_1000DD010((uint64_t)&type metadata for ArticleModel.LoadedCodingKeys, (uint64_t)&v68);
    v33 = type metadata accessor for NewsArticle(0);
    sub_100086DA4(&qword_100BDBC98, type metadata accessor for NewsArticle, (uint64_t)&unk_1009D1210);
    v34 = (uint64_t)v54;
    sub_1000B4AAC(v33, v35);
    v36 = v64;
    sub_10009D6A0(v60);
    sub_100099400();
    sub_1000CCBCC(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    v49 = v34;
    v50 = v56;
    v51 = 1;
  }
  else
  {
    v67 = 0;
    sub_1004E84A0();
    sub_1000DD010((uint64_t)&type metadata for ArticleModel.LoadingCodingKeys, (uint64_t)&v67);
    v45 = type metadata accessor for Article(0);
    sub_100086DA4(&qword_100BE90C8, (uint64_t (*)(uint64_t))&type metadata accessor for Article, (uint64_t)&protocol conformance descriptor for Article);
    v34 = (uint64_t)v55;
    sub_1000B4AAC(v45, v46);
    v47 = v64;
    sub_10009D6A0(v58);
    sub_100099400();
    sub_1000CCBCC(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    v49 = v34;
    v50 = v56;
    v51 = 0;
  }
  swift_storeEnumTagMultiPayload(v49, v50, v51);
  v52 = (uint64_t)v53;
  sub_1000A15B4(v34, (uint64_t)v53, type metadata accessor for ArticleModel);
  sub_1000A15B4(v52, v57, type metadata accessor for ArticleModel);
  v48 = v66;
LABEL_9:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v48);
  sub_1000B44B0();
}

uint64_t sub_1004E825C()
{
  char *v0;

  return sub_1004E78D0(*v0);
}

uint64_t sub_1004E8264@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004E77EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E8288(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E8428();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E82B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E8428();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E82D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E8464();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E8300(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E8464();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E8328(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E84A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E8350(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E84A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1004E837C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004E7E30(a1, a2);
}

void sub_1004E8390(_QWORD *a1)
{
  sub_1004E7B48(a1);
}

uint64_t sub_1004E83A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E83E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE9090);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004E8428()
{
  unint64_t result;

  result = qword_100BE90B0;
  if (!qword_100BE90B0)
  {
    result = swift_getWitnessTable(&unk_1009A794C, &type metadata for ArticleModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE90B0);
  }
  return result;
}

unint64_t sub_1004E8464()
{
  unint64_t result;

  result = qword_100BE90B8;
  if (!qword_100BE90B8)
  {
    result = swift_getWitnessTable(&unk_1009A78FC, &type metadata for ArticleModel.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE90B8);
  }
  return result;
}

unint64_t sub_1004E84A0()
{
  unint64_t result;

  result = qword_100BE90C0;
  if (!qword_100BE90C0)
  {
    result = swift_getWitnessTable(&unk_1009A78AC, &type metadata for ArticleModel.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE90C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004E8528 + 4 * byte_1009A75A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004E855C + 4 * byte_1009A75A0[v4]))();
}

uint64_t sub_1004E855C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E8564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004E856CLL);
  return result;
}

uint64_t sub_1004E8578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004E8580);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004E8584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E858C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleModel.CodingKeys()
{
  return &type metadata for ArticleModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ArticleModel.LoadingCodingKeys()
{
  return &type metadata for ArticleModel.LoadingCodingKeys;
}

uint64_t _s7Weather12ArticleModelO17LoadingCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004E85FC + 4 * byte_1009A75AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004E861C + 4 * byte_1009A75AF[v4]))();
}

_BYTE *sub_1004E85FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004E861C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004E8624(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004E862C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004E8634(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004E863C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArticleModel.LoadedCodingKeys()
{
  return &type metadata for ArticleModel.LoadedCodingKeys;
}

unint64_t sub_1004E865C()
{
  unint64_t result;

  result = qword_100BE90F0;
  if (!qword_100BE90F0)
  {
    result = swift_getWitnessTable(&unk_1009A7714, &type metadata for ArticleModel.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE90F0);
  }
  return result;
}

unint64_t sub_1004E869C()
{
  unint64_t result;

  result = qword_100BE90F8;
  if (!qword_100BE90F8)
  {
    result = swift_getWitnessTable(&unk_1009A77CC, &type metadata for ArticleModel.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE90F8);
  }
  return result;
}

unint64_t sub_1004E86DC()
{
  unint64_t result;

  result = qword_100BE9100;
  if (!qword_100BE9100)
  {
    result = swift_getWitnessTable(&unk_1009A7884, &type metadata for ArticleModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9100);
  }
  return result;
}

unint64_t sub_1004E871C()
{
  unint64_t result;

  result = qword_100BE9108;
  if (!qword_100BE9108)
  {
    result = swift_getWitnessTable(&unk_1009A773C, &type metadata for ArticleModel.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9108);
  }
  return result;
}

unint64_t sub_1004E875C()
{
  unint64_t result;

  result = qword_100BE9110;
  if (!qword_100BE9110)
  {
    result = swift_getWitnessTable(&unk_1009A7764, &type metadata for ArticleModel.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9110);
  }
  return result;
}

unint64_t sub_1004E879C()
{
  unint64_t result;

  result = qword_100BE9118;
  if (!qword_100BE9118)
  {
    result = swift_getWitnessTable(&unk_1009A7684, &type metadata for ArticleModel.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9118);
  }
  return result;
}

unint64_t sub_1004E87DC()
{
  unint64_t result;

  result = qword_100BE9120;
  if (!qword_100BE9120)
  {
    result = swift_getWitnessTable(&unk_1009A76AC, &type metadata for ArticleModel.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9120);
  }
  return result;
}

unint64_t sub_1004E881C()
{
  unint64_t result;

  result = qword_100BE9128;
  if (!qword_100BE9128)
  {
    result = swift_getWitnessTable(&unk_1009A77F4, &type metadata for ArticleModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9128);
  }
  return result;
}

unint64_t sub_1004E885C()
{
  unint64_t result;

  result = qword_100BE9130;
  if (!qword_100BE9130)
  {
    result = swift_getWitnessTable(&unk_1009A781C, &type metadata for ArticleModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9130);
  }
  return result;
}

_QWORD *sub_1004E8898(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for EnvironmentAction);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 2u:
        v6 = type metadata accessor for Locale(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 2;
        goto LABEL_29;
      case 3u:
        v10 = type metadata accessor for ActivityAction(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for PreviewLocation(0);
          v21 = (char *)&loc_1004E8A94 + 4 * byte_1009A79D0[swift_getEnumCaseMultiPayload(a2)];
          __asm { BR              X10 }
        }
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        }
        else
        {
          v12 = type metadata accessor for SavedLocation(0);
          if (swift_getEnumCaseMultiPayload(a2) == 1)
          {
            v13 = type metadata accessor for SavedLocation.Placeholder(0);
            v14 = 1;
          }
          else
          {
            v13 = type metadata accessor for Location(0);
            v14 = 0;
          }
          (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v13 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload(a1, v12, v14);
          swift_storeEnumTagMultiPayload(a1, v10, 0);
        }
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_29;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_29;
      case 8u:
        if (a2[1] >= 2uLL)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        v7 = a1;
        v8 = a3;
        v9 = 8;
        goto LABEL_29;
      case 0xAu:
        v15 = type metadata accessor for ConfiguredUnitsAction(0);
        v16 = swift_getEnumCaseMultiPayload(a2);
        if (v16 == 1)
        {
          v22 = type metadata accessor for UnitConfiguration.Temperature(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v22))
          {
            v23 = sub_1000BA294(&qword_100BD7148);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v22);
          }
          v18 = a1;
          v19 = v15;
          v20 = 1;
        }
        else
        {
          if (v16)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            goto LABEL_27;
          }
          v17 = type metadata accessor for ConfiguredUnit(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
          v18 = a1;
          v19 = v15;
          v20 = 0;
        }
        swift_storeEnumTagMultiPayload(v18, v19, v20);
LABEL_27:
        v7 = a1;
        v8 = a3;
        v9 = 10;
LABEL_29:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_QWORD *sub_1004E8D80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 10:
      v11 = type metadata accessor for ConfiguredUnitsAction(0);
      v12 = swift_getEnumCaseMultiPayload(a2);
      if (v12 == 1)
      {
        v22 = type metadata accessor for UnitConfiguration.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v22))
        {
          v23 = sub_1000BA294(&qword_100BD7148);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v22);
        }
        v14 = a1;
        v15 = v11;
        v16 = 1;
      }
      else
      {
        if (v12)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_26:
          v8 = a1;
          v9 = a3;
          v10 = 10;
          goto LABEL_37;
        }
        v13 = type metadata accessor for ConfiguredUnit(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = a1;
        v15 = v11;
        v16 = 0;
      }
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      goto LABEL_26;
    case 3:
      v17 = type metadata accessor for ActivityAction(0);
      v18 = swift_getEnumCaseMultiPayload(a2);
      if (v18 != 1)
      {
        if (v18)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_36:
          v8 = a1;
          v9 = a3;
          v10 = 3;
          goto LABEL_37;
        }
        v19 = type metadata accessor for SavedLocation(0);
        if (swift_getEnumCaseMultiPayload(a2) == 1)
        {
          v20 = type metadata accessor for SavedLocation.Placeholder(0);
          v21 = 1;
        }
        else
        {
          v20 = type metadata accessor for Location(0);
          v21 = 0;
        }
        (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v20 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload(a1, v19, v21);
        v30 = a1;
        v31 = v17;
        v32 = 0;
LABEL_35:
        swift_storeEnumTagMultiPayload(v30, v31, v32);
        goto LABEL_36;
      }
      v24 = type metadata accessor for PreviewLocation(0);
      v25 = swift_getEnumCaseMultiPayload(a2);
      if (v25 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v33 = type metadata accessor for SearchLocation(0);
        v34 = *(int *)(v33 + 32);
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = type metadata accessor for Location(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
        {
          v38 = sub_1000BA294(&qword_100BC35F8);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
        }
        v40 = *(int *)(v33 + 36);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        *(_OWORD *)v41 = *(_OWORD *)v42;
        v41[16] = v42[16];
        v27 = a1;
        v28 = v24;
        v29 = 2;
      }
      else if (v25 == 1)
      {
        v39 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(a1, a2, v39);
        v27 = a1;
        v28 = v24;
        v29 = 1;
      }
      else
      {
        if (v25)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_34:
          v30 = a1;
          v31 = v17;
          v32 = 1;
          goto LABEL_35;
        }
        v26 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        v27 = a1;
        v28 = v24;
        v29 = 0;
      }
      swift_storeEnumTagMultiPayload(v27, v28, v29);
      goto LABEL_34;
    case 2:
      v7 = type metadata accessor for Locale(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 2;
LABEL_37:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1004E917C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;

  if (a1 == a2)
    return a1;
  sub_1000979AC((uint64_t)a1, type metadata accessor for EnvironmentAction);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  switch(EnumCaseMultiPayload)
  {
    case 10:
      v11 = type metadata accessor for ConfiguredUnitsAction(0);
      v12 = swift_getEnumCaseMultiPayload(a2);
      if (v12 == 1)
      {
        v22 = type metadata accessor for UnitConfiguration.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v22))
        {
          v23 = sub_1000BA294(&qword_100BD7148);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v22);
        }
        v14 = a1;
        v15 = v11;
        v16 = 1;
      }
      else
      {
        if (v12)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_27:
          v8 = a1;
          v9 = a3;
          v10 = 10;
          goto LABEL_38;
        }
        v13 = type metadata accessor for ConfiguredUnit(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = a1;
        v15 = v11;
        v16 = 0;
      }
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      goto LABEL_27;
    case 3:
      v17 = type metadata accessor for ActivityAction(0);
      v18 = swift_getEnumCaseMultiPayload(a2);
      if (v18 != 1)
      {
        if (v18)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_37:
          v8 = a1;
          v9 = a3;
          v10 = 3;
          goto LABEL_38;
        }
        v19 = type metadata accessor for SavedLocation(0);
        if (swift_getEnumCaseMultiPayload(a2) == 1)
        {
          v20 = type metadata accessor for SavedLocation.Placeholder(0);
          v21 = 1;
        }
        else
        {
          v20 = type metadata accessor for Location(0);
          v21 = 0;
        }
        (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v20 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload(a1, v19, v21);
        v30 = a1;
        v31 = v17;
        v32 = 0;
LABEL_36:
        swift_storeEnumTagMultiPayload(v30, v31, v32);
        goto LABEL_37;
      }
      v24 = type metadata accessor for PreviewLocation(0);
      v25 = swift_getEnumCaseMultiPayload(a2);
      if (v25 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v33 = type metadata accessor for SearchLocation(0);
        v34 = *(int *)(v33 + 32);
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = type metadata accessor for Location(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
        {
          v38 = sub_1000BA294(&qword_100BC35F8);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
        }
        v40 = *(int *)(v33 + 36);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        *(_OWORD *)v41 = *(_OWORD *)v42;
        v41[16] = v42[16];
        v27 = a1;
        v28 = v24;
        v29 = 2;
      }
      else if (v25 == 1)
      {
        v39 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(a1, a2, v39);
        v27 = a1;
        v28 = v24;
        v29 = 1;
      }
      else
      {
        if (v25)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_35:
          v30 = a1;
          v31 = v17;
          v32 = 1;
          goto LABEL_36;
        }
        v26 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        v27 = a1;
        v28 = v24;
        v29 = 0;
      }
      swift_storeEnumTagMultiPayload(v27, v28, v29);
      goto LABEL_35;
    case 2:
      v7 = type metadata accessor for Locale(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 2;
LABEL_38:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1004E9590(uint64_t a1)
{
  uint64_t v2;

  sub_100140634(&qword_100BE91E8, (uint64_t)&unk_1009A7AA8);
  return ShortDescribable.description.getter(a1, v2);
}

ValueMetadata *type metadata accessor for VisibilityComponentPreprocessedDataModel()
{
  return &type metadata for VisibilityComponentPreprocessedDataModel;
}

uint64_t sub_1004E95D8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v9;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    v8 = 0xEB000000006E6F69;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7470697263736564, 0xEB000000006E6F69, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x80000001009F8F60)
  {
    swift_bridgeObjectRelease(0x80000001009F8F60);
    return 2;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x80000001009F8F60, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1004E9734(char a1)
{
  if (!a1)
    return 0x656C746974;
  if (a1 == 1)
    return 0x7470697263736564;
  return 0xD000000000000018;
}

uint64_t sub_1004E9794(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BE9200);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1004E9B50();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys, &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v22 = 0;
  sub_1000BA804(v12, v13, (uint64_t)&v22);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v21 = 1;
    sub_1000BA804(v14, v15, (uint64_t)&v21);
    v16 = v3[4];
    v17 = v3[5];
    v20 = 2;
    sub_1000BA804(v16, v17, (uint64_t)&v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1004E98AC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v5 = sub_1000BA294(&qword_100BE91F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = sub_1004E9B50();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys, &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys, v9, v7, v8);
  if (v2)
  {
    sub_1000998EC();
  }
  else
  {
    v25 = 0;
    v10 = sub_1000C2B5C((uint64_t)&v25);
    v12 = v11;
    v22 = v10;
    v24 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_1000C2B5C((uint64_t)&v24);
    v15 = v14;
    v20 = v13;
    v23 = 2;
    swift_bridgeObjectRetain();
    v21 = v15;
    v16 = KeyedDecodingContainer.decode(_:forKey:)(&v23, v5);
    v18 = v17;
    v19 = v16;
    sub_1000BC400(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    swift_bridgeObjectRetain();
    sub_1000998EC();
    sub_1000986C4();
    swift_bridgeObjectRelease();
    sub_10009D2E0();
    *a2 = v22;
    a2[1] = v12;
    a2[2] = v20;
    a2[3] = v21;
    a2[4] = v19;
    a2[5] = v18;
  }
}

uint64_t sub_1004E9A80()
{
  char *v0;

  return sub_1004E9734(*v0);
}

uint64_t sub_1004E9A88@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004E95D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E9AAC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E9B50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E9AD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004E9B50();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1004E9AFC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1004E98AC(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1004E9B3C(_QWORD *a1)
{
  return sub_1004E9794(a1);
}

unint64_t sub_1004E9B50()
{
  unint64_t result;

  result = qword_100BE91F8;
  if (!qword_100BE91F8)
  {
    result = swift_getWitnessTable(&unk_1009A7C88, &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE91F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VisibilityComponentPreprocessedDataModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004E9BD8 + 4 * byte_1009A7AE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004E9C0C + 4 * byte_1009A7AE0[v4]))();
}

uint64_t sub_1004E9C0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E9C14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004E9C1CLL);
  return result;
}

uint64_t sub_1004E9C28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004E9C30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004E9C34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E9C3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_1004E9C5C()
{
  unint64_t result;

  result = qword_100BE9208;
  if (!qword_100BE9208)
  {
    result = swift_getWitnessTable(&unk_1009A7C60, &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9208);
  }
  return result;
}

unint64_t sub_1004E9C9C()
{
  unint64_t result;

  result = qword_100BE9210;
  if (!qword_100BE9210)
  {
    result = swift_getWitnessTable(&unk_1009A7BD0, &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE9210);
  }
  return result;
}

unint64_t sub_1004E9CDC()
{
  unint64_t result;

  result = qword_100BE9218[0];
  if (!qword_100BE9218[0])
  {
    result = swift_getWitnessTable(&unk_1009A7BF8, &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys);
    atomic_store(result, qword_100BE9218);
  }
  return result;
}

uint64_t type metadata accessor for SevereNewsContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SevereNewsContentView);
}

uint64_t sub_1004E9D24(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB7238, 1);
}

uint64_t sub_1004E9D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t (*v52)(_QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[4];
  _BYTE v67[520];
  _QWORD v68[66];

  v63 = a4;
  v56 = a3;
  v61 = a7;
  v68[0] = a5;
  v68[1] = a5;
  v68[2] = a5;
  v68[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v68[4] = a5;
  v68[5] = a5;
  v68[6] = a5;
  v68[7] = a5;
  v12 = sub_1000BA3E0(a1, a2, (uint64_t)v68);
  v54 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v54);
  v14 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  v58 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v60 = v15;
  __chkstk_darwin(v16);
  v59 = (char *)&v49 - v17;
  v68[0] = a5;
  v68[1] = a5;
  v68[2] = a5;
  v68[3] = type metadata accessor for Optional(255, a5);
  v68[4] = a5;
  v68[5] = a5;
  v68[6] = a5;
  v68[7] = a5;
  v19 = sub_1000BA3E0(v68[3], v18, (uint64_t)v68);
  v52 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v19);
  v55 = type metadata accessor for Group(0, v52);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  sub_1000986FC();
  v21 = v20;
  __chkstk_darwin(v22);
  v62 = (char *)&v49 - v23;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v24 = &qword_100BCC138;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v24 = &qword_100BCC548;
      goto LABEL_11;
    }
    v24 = &qword_100BCC340;
    goto LABEL_11;
  }
  if (v11)
    v24 = &qword_100BCBD28;
  else
    v24 = &qword_100BCBF30;
LABEL_11:
  memcpy(v68, v24, 0x208uLL);
  v25 = memcpy(v67, v68, sizeof(v67));
  v51 = &v49;
  __chkstk_darwin(v25);
  *(&v49 - 8) = a5;
  *(&v49 - 7) = a6;
  v49 = a1;
  *(&v49 - 6) = a1;
  *((_BYTE *)&v49 - 40) = v10;
  HIDWORD(v50) = v11 >> 8;
  *((_BYTE *)&v49 - 39) = BYTE1(v11);
  v26 = v63;
  *(&v49 - 4) = v56;
  *(&v49 - 3) = v26;
  *(&v49 - 2) = (uint64_t)v67;
  v27 = v52;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v52);
  Group<A>.init(content:)(sub_1004EAAAC, &v49 - 10, v27, WitnessTable);
  v66[3] = WitnessTable;
  v29 = v55;
  v51 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v55);
  sub_1000B2074(v21, v29, v51);
  v30 = v53;
  v52 = *(uint64_t (**)(_QWORD, _QWORD))(v53 + 8);
  v31 = v52(v21, v29);
  __chkstk_darwin(v31);
  *(&v49 - 8) = a5;
  *(&v49 - 7) = a6;
  *(&v49 - 6) = v49;
  *((_BYTE *)&v49 - 40) = v10;
  *((_BYTE *)&v49 - 39) = BYTE4(v50);
  v32 = v63;
  *(&v49 - 4) = v33;
  *(&v49 - 3) = v32;
  *(&v49 - 2) = (uint64_t)v67;
  v34 = v54;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v54);
  v36 = v60;
  Group<A>.init(content:)(sub_1001AB3A4, &v49 - 10, v34, v35);
  v66[2] = v35;
  v37 = v57;
  v38 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v57);
  v39 = (uint64_t)v59;
  sub_1000B2074(v36, v37, v38);
  v40 = v58;
  sub_1000C3530(v36);
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 16);
  v42 = v62;
  v41(v21, v62, v29);
  v66[0] = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v36, v39, v37);
  v66[1] = v36;
  v65[0] = v29;
  v65[1] = v37;
  v64[0] = v51;
  v64[1] = v38;
  sub_10052800C((uint64_t)v66, 2, (uint64_t)v65, (uint64_t)v64, v43, v44, v45, v46, v49, v50, (uint64_t)v51, (uint64_t)v52, v53, v54, v55, v56, v57, v58);
  sub_1000C3530(v39);
  v47 = v52;
  v52(v42, v29);
  sub_1000C3530(v36);
  return v47(v21, v29);
}

uint64_t sub_1004EA170@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD v119[8];
  _QWORD v120[8];
  _QWORD v121[8];
  _BYTE v122[24];
  _BYTE v123[40];
  _QWORD v124[4];
  char v125;

  v92 = a5;
  v98 = a6;
  v10 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v10);
  v94 = (uint64_t *)((char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v109 = type metadata accessor for Optional(0, a4);
  v103 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v116 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v113 = (uint64_t)&v91 - v14;
  v93 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v93);
  v91 = (uint64_t)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v91 - v17;
  v100 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v19);
  v97 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v96 = (char *)&v91 - v22;
  __chkstk_darwin(v23);
  v108 = (char *)&v91 - v24;
  __chkstk_darwin(v25);
  v107 = (char *)&v91 - v26;
  __chkstk_darwin(v27);
  v106 = (char *)&v91 - v28;
  __chkstk_darwin(v29);
  v105 = (char *)&v91 - v30;
  __chkstk_darwin(v31);
  v104 = (char *)&v91 - v32;
  __chkstk_darwin(v33);
  v95 = (uint64_t)&v91 - v34;
  __chkstk_darwin(v35);
  v102 = (char *)&v91 - v36;
  __chkstk_darwin(v37);
  v115 = (char *)&v91 - v38;
  __chkstk_darwin(v39);
  v112 = (char *)&v91 - v40;
  __chkstk_darwin(v41);
  v111 = (char *)&v91 - v42;
  __chkstk_darwin(v43);
  v45 = (char *)&v91 - v44;
  __chkstk_darwin(v46);
  v48 = (char *)&v91 - v47;
  v117 = a1;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_severeAlert, (uint64_t)v18);
  a2(v18, a3[45], a3[46], a3[47], a3[48]);
  sub_100080DF4((uint64_t)v18);
  v101 = v48;
  v49 = v92;
  sub_1000B2074(v45, a4, v92);
  v50 = *(void (**)(char *, uint64_t))(v100 + 8);
  v50(v45, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_newsArticle, (uint64_t)v18);
  a2(v18, a3[33], a3[34], a3[35], a3[36]);
  v51 = a2;
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v45, a4, v49);
  v50(v45, a4);
  v52 = v117;
  sub_100080E30(v117 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_airQuality, (uint64_t)v18);
  v53 = *a3;
  v54 = a3[1];
  v55 = a3[2];
  v56 = a3[3];
  v110 = v51;
  v51(v18, v53, v54, v55, v56);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v45, a4, v49);
  v114 = v45;
  v99 = (void (*)(uint64_t, uint64_t))v50;
  v50(v45, a4);
  v57 = v52 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_map;
  swift_beginAccess(v57, v122, 0, 0);
  v58 = v57;
  v59 = (void (*)(_QWORD, _QWORD))v94;
  sub_1001A1D04(v58, (uint64_t)v94);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v93) == 1)
  {
    sub_1001A1D4C((uint64_t)v59);
  }
  else
  {
    v60 = (uint64_t)v59;
    v61 = v91;
    sub_1001A1D8C(v60, v91);
    sub_1001A1DD0((uint64_t)(a3 + 24), (uint64_t)v123);
    sub_1001A1DD0((uint64_t)v123, (uint64_t)v124);
    if (v125 != 1)
    {
      v63 = v115;
      v110((char *)v61, v124[0], v124[1], v124[2], v124[3]);
      sub_100080DF4(v61);
      v64 = (uint64_t)v114;
      sub_1000B2074(v63, a4, v49);
      v65 = v99;
      v99((uint64_t)v63, a4);
      sub_1000B1100(v64, a4, v116);
      v65(v64, a4);
      v62 = 0;
      goto LABEL_7;
    }
    sub_100080DF4(v61);
  }
  v62 = 1;
LABEL_7:
  v66 = v116;
  _s7Weather24LocationCompositionStateOwst_0(v116, v62, 1, a4);
  sub_100158984(v66, a4, v113);
  v94 = *(uint64_t **)(v103 + 8);
  ((void (*)(uint64_t, uint64_t))v94)(v66, v109);
  v67 = v117;
  sub_100080E30(*(_QWORD *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v18);
  v68 = v115;
  v110(v18, a3[16], a3[17], a3[18], a3[19]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v68, a4, v49);
  v69 = (void (*)(char *, uint64_t))v99;
  v99((uint64_t)v68, a4);
  sub_100080E30(*(_QWORD *)(v67 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v18);
  v70 = v102;
  v71 = v110;
  v110(v18, a3[8], a3[9], a3[10], a3[11]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v70, a4, v49);
  v69(v70, a4);
  sub_100080E30(*(_QWORD *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v18);
  v72 = (void (*)(uint64_t, uint64_t))v69;
  v73 = v95;
  v71(v18, a3[53], a3[54], a3[55], a3[56]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v73, a4, v49);
  v72(v73, a4);
  sub_100080E30(*(_QWORD *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v18);
  v74 = v104;
  v71(v18, a3[49], a3[50], a3[51], a3[52]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v74, a4, v49);
  v72((uint64_t)v74, a4);
  v75 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v75(v74, v101, a4);
  v121[0] = v74;
  v76 = v105;
  v75(v105, v111, a4);
  v121[1] = v76;
  v77 = v106;
  v75(v106, v112, a4);
  v121[2] = v77;
  v78 = v116;
  v79 = v109;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v116, v113, v109);
  v121[3] = v78;
  v80 = v107;
  v75(v107, v114, a4);
  v121[4] = v80;
  v81 = v108;
  v75(v108, v115, a4);
  v121[5] = v81;
  v82 = (uint64_t)v96;
  v83 = v102;
  v75(v96, v102, a4);
  v121[6] = v82;
  v84 = (uint64_t)v97;
  v75(v97, (char *)v73, a4);
  v121[7] = v84;
  v120[0] = a4;
  v120[1] = a4;
  v120[2] = a4;
  v120[3] = v79;
  v120[4] = a4;
  v120[5] = a4;
  v120[6] = a4;
  v120[7] = a4;
  v119[0] = v49;
  v119[1] = v49;
  v119[2] = v49;
  v118 = v49;
  v119[3] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v79);
  v119[4] = v49;
  v119[5] = v49;
  v119[6] = v49;
  v119[7] = v49;
  sub_10052800C((uint64_t)v121, 8, (uint64_t)v120, (uint64_t)v119, v85, v86, v87, v88, v91, v92, v93, (uint64_t)v94, v95, (uint64_t)v96, (uint64_t)v97, v98, (uint64_t)v99, v100);
  v72(v73, a4);
  v72((uint64_t)v83, a4);
  v72((uint64_t)v115, a4);
  v72((uint64_t)v114, a4);
  v89 = (void (*)(uint64_t, uint64_t))v94;
  ((void (*)(uint64_t, uint64_t))v94)(v113, v79);
  v72((uint64_t)v112, a4);
  v72((uint64_t)v111, a4);
  v72((uint64_t)v101, a4);
  v72(v84, a4);
  v72(v82, a4);
  v72((uint64_t)v108, a4);
  v72((uint64_t)v107, a4);
  v89(v116, v79);
  v72((uint64_t)v106, a4);
  v72((uint64_t)v105, a4);
  return ((uint64_t (*)(char *, uint64_t))v72)(v104, a4);
}

uint64_t sub_1004EAA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_1004E9D58(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1004EAAAC()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004EA170);
}

uint64_t sub_1004EAAB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char v72;
  uint64_t v73;
  _QWORD v74[4];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD v99[4];

  v98 = a1;
  v4 = type metadata accessor for ViewState(0);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = type metadata accessor for Location.Identifier(0);
  v94 = *(_QWORD **)(v9 - 8);
  v95 = v9;
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_1000986FC();
  v93 = v11;
  __chkstk_darwin(v12);
  v14 = (char *)v74 - v13;
  v77 = type metadata accessor for LocationOfInterest(0);
  v15 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  sub_100098728();
  v18 = v17 - v16;
  v80 = type metadata accessor for ModalViewState(0);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v76 = v20;
  v21 = type metadata accessor for Date(0);
  v88 = *(_QWORD *)(v21 - 8);
  v89 = v21;
  sub_10009D98C();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v87 = v23;
  type metadata accessor for TimeState(0);
  sub_10009D98C();
  __chkstk_darwin(v24);
  sub_100088FDC();
  v74[3] = v25;
  v26 = type metadata accessor for Location(0);
  v96 = *(_QWORD *)(v26 - 8);
  v97 = v26;
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_100098728();
  v30 = v29 - v28;
  v31 = type metadata accessor for LocationModel(0);
  v81 = *(_QWORD *)(v31 - 8);
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_100088FDC();
  v86 = v33;
  sub_1000BA294(&qword_100BC3118);
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_1000986FC();
  v74[2] = v35;
  v37 = __chkstk_darwin(v36);
  v90 = (uint64_t)v74 - v38;
  v75 = v2;
  (*(void (**)(_QWORD *__return_ptr, __n128))(v2 + 16))(v99, v37);
  v39 = v99[0];
  v40 = v99[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v41 = type metadata accessor for LocationsState(0);
  v42 = *(int *)(v41 + 28);
  v74[1] = v40;
  v43 = *(_QWORD *)(v40 + v42);
  v44 = *(_QWORD *)(v43 + 16);
  v84 = v4;
  v85 = a2;
  v82 = v31;
  v83 = v8;
  v79 = v39;
  v78 = v41;
  if (v44)
  {
    v4 = v43 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 16);
    v91 = *(_QWORD *)(v15 + 72);
    v92 = v45;
    v74[0] = v43;
    v46 = swift_bridgeObjectRetain();
    v47 = v77;
    v48 = v15;
    while (1)
    {
      v49 = v92(v18, v4, v47, v46);
      v50 = LocationOfInterest.location.getter(v49);
      Location.identifier.getter(v50);
      v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v30, v97);
      v52 = v93;
      Location.identifier.getter(v51);
      v39 = static Location.Identifier.== infix(_:_:)(v14, v52);
      v53 = v47;
      v54 = (void (*)(uint64_t, uint64_t))v94[1];
      v55 = v52;
      v8 = v95;
      v54(v55, v95);
      v54((uint64_t)v14, v8);
      if ((v39 & 1) != 0)
        break;
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v18, v53);
      v4 += v91;
      --v44;
      v47 = v53;
      if (!v44)
      {
        sub_1000C2B6C();
        goto LABEL_8;
      }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v90, v18, v53);
    sub_1000C2B6C();
    v47 = v53;
LABEL_8:
    sub_1000C3BFC();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000C2B6C();
    v47 = v77;
    sub_1000C3BFC();
  }
  v57 = v90;
  _s7Weather24LocationCompositionStateOwst_0(v90, v56, 1, v47);
  v58 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD *, uint64_t, __n128))(v96 + 16))(v30, v98, v97, v58);
  sub_1004EB138(v57, (uint64_t)v14);
  LocationModel.init(location:locationOfInterest:)(v30, v14);
  v98 = sub_1000DB418((_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 72));
  v94 = *(_QWORD **)(v44 + *(int *)(v78 + 36));
  v59 = v79;
  sub_100084050(v79 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v8, type metadata accessor for TimeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v87, v8, v89);
  LODWORD(v97) = *(unsigned __int8 *)(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  v60 = *(_QWORD *)(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
  v96 = *(_QWORD *)(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v61 = *(_QWORD *)(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v62 = *(_QWORD *)(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  v63 = v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v99, 0, 0);
  LODWORD(v95) = *(unsigned __int8 *)(v63 + *(int *)(type metadata accessor for EnvironmentState(0) + 36));
  sub_100084050(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v39, type metadata accessor for ModalViewState);
  v64 = swift_getEnumCaseMultiPayload(v39) == 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000979AC(v39, type metadata accessor for ModalViewState);
  v65 = *(_BYTE *)(v63 + 2) == 4;
  v66 = v83;
  sub_100084050(v59 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v83, type metadata accessor for ViewState);
  v67 = *(_QWORD *)(v66 + *(int *)(v84 + 36) + 8);
  sub_1000979AC(v66, type metadata accessor for ViewState);
  v73 = v67;
  v72 = v64;
  v68 = v86;
  v69 = v87;
  sub_1004951CC(v86, v94, v87, v60, v61, v85, v62, v95, 0, 0, 1u, v72, v65, v73);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v70 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v88 + 8))(v69, v89, v70);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v68, v82);
  return sub_1004EB180(v90);
}

uint64_t type metadata accessor for LocationRowViewModelProvider()
{
  return objc_opt_self(_TtC7Weather28LocationRowViewModelProvider);
}

uint64_t sub_1004EB138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC3118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EB180(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC3118);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1004EB1C0()
{
  _BYTE *v0;

  if ((v0[8] & 1) == 0)
    return *(double *)v0;
  *(_QWORD *)v0 = 0x3FD3333333333333;
  v0[8] = 0;
  return 0.3;
}

double sub_1004EB1EC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return *(double *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0x4014000000000000;
  *(_BYTE *)(v0 + 24) = 0;
  return 5.0;
}

double sub_1004EB210()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
    return *(double *)(v0 + 32);
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 0;
  return 0.0;
}

double sub_1004EB230()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
    return *(double *)(v0 + 48);
  *(_QWORD *)(v0 + 48) = 0x4000000000000000;
  *(_BYTE *)(v0 + 56) = 0;
  return 2.0;
}

uint64_t sub_1004EB254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 56);
  sub_100043CA8(v1 + 16, (uint64_t)(a1 + 2));
  swift_retain();
  v4 = sub_1000BA294(&qword_100BC4890);
  v5 = sub_1004EB2D8();
  result = ObservedObject.init(wrappedValue:)(v3, v4, v5);
  *a1 = result;
  a1[1] = v7;
  return result;
}

uint64_t type metadata accessor for HomeAndWorkRefinementModule()
{
  return objc_opt_self(_TtC7Weather27HomeAndWorkRefinementModule);
}

unint64_t sub_1004EB2D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4898;
  if (!qword_100BC4898)
  {
    v1 = sub_100075EB0(&qword_100BC4890);
    result = swift_getWitnessTable(&unk_1009D9950, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4898);
  }
  return result;
}

double sub_1004EB31C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_1004EB378(a2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_1004EB378(void *a1)
{
  _QWORD *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v2 = objc_msgSend(a1, "rootViewController");
  if (v2)
  {
    v12 = v2;
    v3 = sub_1004EB478(v2);
    if (v3)
    {
      v4 = v3;
      v5 = v1[5];
      v6 = v1[6];
      sub_1000DB418(v1 + 2, v5);
      v7 = type metadata accessor for DebugNavigationController(0);
      v8 = (void *)dispatch thunk of ResolverType.resolve<A>(_:)(v7, v7, v5, v6);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "setModalPresentationStyle:", 2);
        objc_msgSend(v9, "setModalInPresentation:", 1);
        objc_msgSend(v4, "presentViewController:animated:completion:", v9, 1, 0);

        v10 = v4;
        v4 = v9;
      }
      else
      {
        v10 = v12;
      }

      v11 = v4;
    }
    else
    {
      v11 = v12;
    }

  }
}

void *sub_1004EB478(void *a1)
{
  uint64_t v2;
  unsigned __int8 v3;
  void *result;
  id v5;
  void *v6;
  id v7;

  v2 = type metadata accessor for DebugNavigationController(0);
  v3 = objc_msgSend(a1, "isKindOfClass:", swift_getObjCClassFromMetadata(v2));
  result = 0;
  if ((v3 & 1) == 0)
  {
    v5 = objc_msgSend(a1, "presentedViewController");
    if (v5)
    {
      v6 = v5;
      a1 = (void *)sub_1004EB478();

    }
    else
    {
      v7 = a1;
    }
    return a1;
  }
  return result;
}

uint64_t sub_1004EB4F8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004EB51C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1004EB548()
{
  uint64_t v0;

  return sub_1004EB31C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1004EB550(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B5A870, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_1004EB598(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004EB5CC + 4 * byte_1009A7E80[a1]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1004EB5CC()
{
  return 0x7261656C63;
}

uint64_t sub_1004EB5E0()
{
  return 0x7964756F6C63;
}

uint64_t sub_1004EB5F4()
{
  return 0x6C43796C74736F6DLL;
}

uint64_t sub_1004EB614()
{
  return 1852399986;
}

uint64_t sub_1004EB624()
{
  return 0x537265646E756874;
}

uint64_t sub_1004EB644()
{
  return 0x7453657265766573;
}

void sub_1004EB664(char *a1)
{
  sub_10068CB34(*a1);
}

void sub_1004EB670()
{
  unsigned __int8 *v0;

  sub_1004A74E0(*v0);
}

void sub_1004EB678(uint64_t a1)
{
  char *v1;

  sub_1001D97C4(a1, *v1);
}

void sub_1004EB680(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D98A8(a1, *v1);
}

unint64_t sub_1004EB688@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1004EB550(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004EB6B4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1004EB598(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1004EB6DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004039F0();
  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_1004EB71C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004039F0();
  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

uint64_t sub_1004EB764(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004039F0();
  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

void sub_1004EB7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v2 = type metadata accessor for Domain(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = sub_1000BD1E4();
  v5 = type metadata accessor for Access(v4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100099864();
  sub_1000BA294(&qword_100BE94D8);
  v18 = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, enum case for Access.protected(_:), v5);
  v7 = sub_1000BA294(&qword_100BE94E0);
  v8 = *(_QWORD *)(sub_1000BA294(&qword_100BE94E8) - 8);
  v9 = swift_allocObject(v7, ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))- *(_QWORD *)(v8 + 72)+ 8 * *(_QWORD *)(v8 + 72), *(unsigned __int8 *)(v8 + 80) | 7);
  *(_OWORD *)(v9 + 16) = xmmword_10098C750;
  v17 = 0;
  sub_1000BC40C(0x746C7561666544, 0xE700000000000000, (uint64_t)&v17);
  v16 = 1;
  sub_1000BC40C(0x7261656C43, 0xE500000000000000, (uint64_t)&v16);
  v15 = 2;
  sub_1000BC40C(0x7964756F6C43, 0xE600000000000000, (uint64_t)&v15);
  v14 = 3;
  sub_1000BC40C(0x4320796C74736F4DLL, 0xED00007964756F6CLL, (uint64_t)&v14);
  v13 = 4;
  sub_1000BC40C(1852399954, 0xE400000000000000, (uint64_t)&v13);
  v12 = 5;
  sub_1000BC40C(0x737265646E756854, 0xEC0000006D726F74, (uint64_t)&v12);
  v11 = 6;
  sub_1000BC40C(0x5320657265766553, 0xEC0000006D726F74, (uint64_t)&v11);
  sub_1000C5FEC(enum case for Domain.standard(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v10 = sub_1004EBB68();
  qword_100CAEC58 = Setting<>.init(_:defaultValue:domain:access:options:)(0xD000000000000030, 0x8000000100A08640, &v18, v0, v1, v9, v10);
  sub_100098640();
}

uint64_t sub_1004EBA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;

  v2 = type metadata accessor for Access(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = sub_1000BD1E4();
  v5 = type metadata accessor for Domain(v4);
  __chkstk_darwin(v5);
  sub_100099864();
  (*(void (**)(uint64_t, _QWORD))(v6 + 104))(v1, enum case for Domain.standard(_:));
  sub_1000C5FEC(enum case for Access.public(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v9 = 0;
  v7 = sub_1000BA294(&qword_100BD0228);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  result = Setting.init(_:defaultValue:domain:access:)(0xD00000000000002ALL, 0x8000000100A08750, &v9, v1, v0);
  qword_100CAEC60 = result;
  return result;
}

void sub_1004EBB18(uint64_t a1)
{
  sub_1000BAF84(a1, &enum case for FeatureState.enabled(_:), 45, 0x8000000100A08720, &qword_100CAEC68);
}

void sub_1004EBB40(uint64_t a1)
{
  sub_1000BAF84(a1, &enum case for FeatureState.enabled(_:), 48, 0x8000000100A086E0, &qword_100CAEC70);
}

unint64_t sub_1004EBB68()
{
  unint64_t result;

  result = qword_100BE94F0;
  if (!qword_100BE94F0)
  {
    result = swift_getWitnessTable(&unk_1009A7FAC, &_s15PerformanceTestV24StubWeatherDataConditionON);
    atomic_store(result, (unint64_t *)&qword_100BE94F0);
  }
  return result;
}

void sub_1004EBBA4(uint64_t a1)
{
  sub_1000BAF84(a1, (unsigned int *)&enum case for FeatureState.default(_:), 45, 0x8000000100A08680, &qword_100CAEC98);
}

ValueMetadata *_s15PerformanceTestVMa()
{
  return &_s15PerformanceTestVN;
}

uint64_t _s15PerformanceTestV24StubWeatherDataConditionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1004EBC28 + 4 * byte_1009A7E8C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1004EBC5C + 4 * byte_1009A7E87[v4]))();
}

uint64_t sub_1004EBC5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004EBC64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004EBC6CLL);
  return result;
}

uint64_t sub_1004EBC78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004EBC80);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1004EBC84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004EBC8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15PerformanceTestV24StubWeatherDataConditionOMa()
{
  return &_s15PerformanceTestV24StubWeatherDataConditionON;
}

unint64_t sub_1004EBCAC()
{
  unint64_t result;

  result = qword_100BE94F8;
  if (!qword_100BE94F8)
  {
    result = swift_getWitnessTable(&unk_1009A7F4C, &_s15PerformanceTestV24StubWeatherDataConditionON);
    atomic_store(result, (unint64_t *)&qword_100BE94F8);
  }
  return result;
}

void sub_1004EBCE8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90[32];

  v89 = a3;
  v6 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_1000986FC();
  v88 = v8;
  sub_10009D2A4();
  __chkstk_darwin(v9);
  v87 = (uint64_t)&v64 - v10;
  sub_10009D2A4();
  __chkstk_darwin(v11);
  v86 = (uint64_t)&v64 - v12;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_10007A130();
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - v18;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_1000986FC();
  v85 = v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  v24 = (char *)&v64 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v64 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v64 - v29;
  if (a1)
  {
    if (a1 == 1)
    {
      if ((a2 & 1) != 0)
      {
        v31 = &qword_100BE9950;
        goto LABEL_11;
      }
    }
    else if ((a2 & 1) != 0)
    {
      v31 = &qword_100BE9DA0;
      goto LABEL_11;
    }
    v31 = &qword_100BE9B78;
  }
  else if ((a2 & 1) != 0)
  {
    v31 = &qword_100BE9500;
  }
  else
  {
    v31 = &qword_100BE9728;
  }
LABEL_11:
  v32 = *((_BYTE *)v31 + 224);
  v72 = *v31;
  v71 = v31[1];
  v70 = v31[2];
  v69 = v31[3];
  v33 = v31[8];
  v75 = v31[9];
  v76 = v33;
  v34 = v31[10];
  v73 = v31[11];
  v74 = v34;
  v35 = v31[24];
  v68 = v31[25];
  v67 = v31[26];
  v66 = v31[27];
  v36 = v31[57];
  v79 = v31[58];
  v80 = v36;
  v37 = v31[59];
  v77 = v31[60];
  v78 = v37;
  v38 = v31[65];
  v83 = v31[66];
  v84 = v38;
  v82 = v31[67];
  v39 = v89 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  v81 = v31[68];
  sub_1000992EC(v89 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map, (uint64_t)v90);
  sub_10003773C(v39, v3, &qword_100BC4A98);
  v40 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v40) == 1)
  {
    sub_100021A14(v3, &qword_100BC4A98);
LABEL_16:
    v41 = 1;
    goto LABEL_17;
  }
  v65 = v35;
  sub_10009D3BC(v3 + *(int *)(v40 + 20), (uint64_t)v16);
  sub_1000215BC(v3, type metadata accessor for LocationComponentContainerViewModel);
  sub_10007C77C((uint64_t)v16, (uint64_t)v19, type metadata accessor for LocationComponentViewModel);
  if ((v32 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v19, type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10007C77C((uint64_t)v19, (uint64_t)v27, type metadata accessor for LocationComponentViewModel);
  v41 = 0;
  v42 = &v27[*(int *)(v6 + 20)];
  v43 = v68;
  *(_QWORD *)v42 = v65;
  *((_QWORD *)v42 + 1) = v43;
  v44 = v66;
  *((_QWORD *)v42 + 2) = v67;
  *((_QWORD *)v42 + 3) = v44;
LABEL_17:
  sub_1000988B8((uint64_t)v27, v41);
  sub_1002228F0((uint64_t)v27, (uint64_t)v30);
  sub_10009D3BC(v89 + *(int *)(v40 + 20) + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, (uint64_t)v24);
  v45 = &v24[*(int *)(v6 + 20)];
  v46 = v71;
  *(_QWORD *)v45 = v72;
  *((_QWORD *)v45 + 1) = v46;
  v47 = v69;
  *((_QWORD *)v45 + 2) = v70;
  *((_QWORD *)v45 + 3) = v47;
  sub_1000988B8((uint64_t)v24, 0);
  v48 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v49 = v86;
  sub_10009D3BC(v48, v86);
  v50 = (uint64_t *)(v49 + *(int *)(v6 + 20));
  v51 = v75;
  *v50 = v76;
  v50[1] = v51;
  v52 = v73;
  v50[2] = v74;
  v50[3] = v52;
  v53 = v85;
  sub_10003773C((uint64_t)v30, v85, &qword_100BCC760);
  v54 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v55 = v87;
  sub_10009D3BC(v54, v87);
  v56 = (uint64_t *)(v55 + *(int *)(v6 + 20));
  v57 = v79;
  *v56 = v80;
  v56[1] = v57;
  v58 = v77;
  v56[2] = v78;
  v56[3] = v58;
  v59 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v60 = v88;
  sub_10009D3BC(v59, v88);
  v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  v62 = v83;
  *v61 = v84;
  v61[1] = v62;
  v63 = v81;
  v61[2] = v82;
  v61[3] = v63;
  sub_10087CED0((uint64_t)v24, v49, v53, v55, v60);
  sub_100021A14((uint64_t)v30, &qword_100BCC760);
  sub_100098640();
}

void sub_1004EC1D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 *v19;
  __n128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 *v83;
  __n128 *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __n128 *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  _BYTE v146[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000878BC();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = a1;
  v12 = a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map, (uint64_t)v146);
  sub_10003773C(v12, v5, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6) == 1)
  {
    sub_100021A14(v5, &qword_100BC4A98);
    v13 = sub_1000BA294(&qword_100BCC750);
    v14 = swift_allocObject(v13, 296, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100989890;
    v15 = sub_1000BA294(&qword_100BCC758);
    v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v17 = *(_QWORD *)(v7 + 72);
    v18 = v15;
    v19 = (__n128 *)sub_1000C2514(v15, v16 + v17);
    v20 = sub_100099954(v19, (__n128)xmmword_10097CA50);
    v21 = v11;
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v20 + v16);
    *(_QWORD *)(v14 + 32) = sub_1000B4580();
    *(_QWORD *)(v14 + 40) = v22;
    *(_QWORD *)(v14 + 48) = v23;
    v24 = (__n128 *)sub_1000C3C18();
    sub_1000D1ED8(v24);
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation, v25);
    *(_QWORD *)(v14 + 56) = sub_1000B4580();
    *(_QWORD *)(v14 + 64) = v26;
    *(_QWORD *)(v14 + 72) = v27;
    v28 = (__n128 *)sub_1000C3C18();
    sub_1000D1ED8(v28);
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle, v29);
    *(_QWORD *)(v14 + 80) = sub_1000B4580();
    *(_QWORD *)(v14 + 88) = v30;
    *(_QWORD *)(v14 + 96) = v31;
    v32 = (__n128 *)sub_1000C3C18();
    sub_1000BD314(v32);
    sub_10009D3BC(v33 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v34);
    *(_QWORD *)(v14 + 104) = sub_1000B4580();
    *(_QWORD *)(v14 + 112) = v35;
    *(_QWORD *)(v14 + 120) = v36;
    v37 = (__n128 *)sub_1000C3C18();
    sub_1000BD314(v37);
    sub_10009D3BC(v38 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v39);
    *(_QWORD *)(v14 + 128) = sub_1000B4580();
    *(_QWORD *)(v14 + 136) = v40;
    *(_QWORD *)(v14 + 144) = v41;
    v42 = (__n128 *)sub_1000C3C18();
    sub_1000D1ED8(v42);
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, v43);
    *(_QWORD *)(v14 + 152) = sub_100080C44((uint64_t)v42);
    *(_QWORD *)(v14 + 160) = v44;
    *(_QWORD *)(v14 + 168) = v45;
    v46 = v17;
    v142 = v16 + 2 * v17;
    v47 = (__n128 *)sub_1000C2514(v18, v142);
    v48 = (char *)sub_100099954(v47, (__n128)xmmword_10097DA20) + v16;
    v49 = *(_QWORD *)(v11 + 16);
    v50 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1000C3608(v50, v51);
    sub_1000C3608(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v48[v46]);
    *(_QWORD *)(v14 + 176) = sub_1000B4580();
    *(_QWORD *)(v14 + 184) = v52;
    *(_QWORD *)(v14 + 192) = v53;
    v54 = (__n128 *)sub_1000C2514(v18, v142);
    sub_100098A24(v54);
    v141 = v21;
    v55 = *(_QWORD *)(v21 + 16);
    v56 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10008611C(v56, v57);
    sub_10008611C(v55 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v48[v46]);
    *(_QWORD *)(v14 + 200) = sub_1000B4580();
    *(_QWORD *)(v14 + 208) = v58;
    *(_QWORD *)(v14 + 216) = v59;
    v60 = (__n128 *)sub_1000C2514(v18, v142);
    sub_100098A24(v60);
    v61 = *(_QWORD *)(v21 + 16);
    v62 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1000C3608(v62, v63);
    sub_100095B78(v61 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v48[v46], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v14 + 224) = sub_1000B4580();
    *(_QWORD *)(v14 + 232) = v64;
    *(_QWORD *)(v14 + 240) = v65;
    v66 = (__n128 *)sub_1000C2514(v18, v142);
    sub_100098A24(v66);
    v67 = *(_QWORD *)(v21 + 16);
    v68 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_100098A1C(v68, v69);
    sub_100098A1C(v67 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v48[v46]);
    *(_QWORD *)(v14 + 248) = sub_1000B4580();
    *(_QWORD *)(v14 + 256) = v70;
    *(_QWORD *)(v14 + 264) = v71;
    v72 = sub_1000C2514(v18, v142);
    *(_OWORD *)(v72 + 16) = v145;
    v73 = *(_QWORD *)(v141 + 16);
    sub_100098A1C(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v72 + v16);
    sub_100098A1C(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v72 + v16 + v46);
    *(_QWORD *)(v14 + 272) = sub_100080C44(v72);
    *(_QWORD *)(v14 + 280) = v74;
    *(_QWORD *)(v14 + 288) = v75;
  }
  else
  {
    sub_10007C77C(v5, v10, type metadata accessor for LocationComponentContainerViewModel);
    v76 = sub_1000BA294(&qword_100BCC750);
    v77 = swift_allocObject(v76, 320, 7);
    *(_OWORD *)(v77 + 16) = xmmword_1009A7FD0;
    v78 = sub_1000BA294(&qword_100BCC758);
    v144 = *(_QWORD *)(v7 + 72);
    v79 = *(unsigned __int8 *)(v7 + 80);
    v80 = (v79 + 32) & ~v79;
    v81 = v79 | 7;
    v82 = v78;
    v83 = (__n128 *)sub_1000C3600(v78, v80 + v144);
    v84 = sub_100099954(v83, (__n128)xmmword_10097CA50);
    sub_1000E711C((uint64_t)v84 + v80, OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert);
    *(_QWORD *)(v77 + 32) = sub_1000B4588();
    *(_QWORD *)(v77 + 40) = v85;
    *(_QWORD *)(v77 + 48) = v86;
    v87 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v87);
    sub_1000E711C(v88, OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation);
    *(_QWORD *)(v77 + 56) = sub_1000B4588();
    *(_QWORD *)(v77 + 64) = v89;
    *(_QWORD *)(v77 + 72) = v90;
    v91 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v91);
    sub_1000E711C(v92, OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle);
    *(_QWORD *)(v77 + 80) = sub_1000B4588();
    *(_QWORD *)(v77 + 88) = v93;
    *(_QWORD *)(v77 + 96) = v94;
    v95 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v95);
    sub_1000B4590(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v97);
    *(_QWORD *)(v77 + 104) = sub_1000B4588();
    *(_QWORD *)(v77 + 112) = v98;
    *(_QWORD *)(v77 + 120) = v99;
    v100 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v100);
    sub_1000B4590(v101 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v102);
    *(_QWORD *)(v77 + 128) = sub_1000B4588();
    *(_QWORD *)(v77 + 136) = v103;
    *(_QWORD *)(v77 + 144) = v104;
    v105 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v105);
    sub_1000E711C(v106, OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality);
    *(_QWORD *)(v77 + 152) = sub_1000B4588();
    *(_QWORD *)(v77 + 160) = v107;
    *(_QWORD *)(v77 + 168) = v108;
    v109 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v109);
    sub_1000B4590(v10, v110);
    *(_QWORD *)(v77 + 176) = sub_1000B4580();
    *(_QWORD *)(v77 + 184) = v111;
    *(_QWORD *)(v77 + 192) = v112;
    v143 = v80 + 2 * v144;
    v113 = (__n128 *)swift_allocObject(v82, v143, v81);
    v114 = (char *)sub_100099954(v113, (__n128)xmmword_10097DA20) + v80;
    v115 = *(_QWORD *)(a1 + 16);
    v116 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1000C3608(v116, v117);
    sub_1000C3608(v115 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v114[v144]);
    *(_QWORD *)(v77 + 200) = sub_1000B4588();
    *(_QWORD *)(v77 + 208) = v118;
    *(_QWORD *)(v77 + 216) = v119;
    v120 = (__n128 *)sub_1000C3600(v82, v143);
    sub_1000C0D34(v120);
    v121 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_100098A1C(v121, v122);
    sub_100098A1C(v115 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v114[v144]);
    *(_QWORD *)(v77 + 224) = sub_1000B4588();
    *(_QWORD *)(v77 + 232) = v123;
    *(_QWORD *)(v77 + 240) = v124;
    v125 = (__n128 *)sub_1000C3600(v82, v143);
    sub_1000C0D34(v125);
    v126 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1000C3608(v126, v127);
    sub_1000C3608(v115 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v114[v144]);
    *(_QWORD *)(v77 + 248) = sub_1000B4588();
    *(_QWORD *)(v77 + 256) = v128;
    *(_QWORD *)(v77 + 264) = v129;
    v130 = sub_1000C3600(v82, v143);
    *(_OWORD *)(v130 + 16) = v145;
    v131 = v130 + v80;
    v132 = *(_QWORD *)(a1 + 16);
    v133 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10008611C(v133, v134);
    sub_10008611C(v132 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v131 + v144);
    *(_QWORD *)(v77 + 272) = sub_1000B4588();
    *(_QWORD *)(v77 + 280) = v135;
    *(_QWORD *)(v77 + 288) = v136;
    v137 = sub_1000C3600(v82, v143);
    *(_OWORD *)(v137 + 16) = v145;
    v138 = *(_QWORD *)(a1 + 16);
    sub_100095B78(v138 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v137 + v80, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v138 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v137 + v80 + v144, type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v77 + 296) = sub_100080C44(v137);
    *(_QWORD *)(v77 + 304) = v139;
    *(_QWORD *)(v77 + 312) = v140;
    sub_1000215BC(v10, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_1004EC9C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v3 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000986FC();
  v23 = v5;
  sub_10009D2A4();
  __chkstk_darwin(v6);
  v22 = (char *)&v20 - v7;
  sub_10009D2A4();
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v20 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v20 - v12;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_10007A130();
  v16 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v21 = v17;
  swift_release(v16);
  sub_1000C2B80(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map);
  sub_1000C16DC();
  sub_1000DBB38();
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v3);
  sub_1000C2B80(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality);
  sub_1000C16DC();
  sub_1000DBB38();
  sub_1000C2B80(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle);
  sub_1000C16DC();
  sub_1000DBB38();
  sub_1000C2B80(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  v18 = v22;
  sub_1000C16DC();
  sub_1000DBB38();
  sub_1000C2B80(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert);
  v19 = v23;
  sub_1000C16DC();
  sub_1000DBB38();
  sub_1001F27D8(v21, v1, v13, v11, v18, v19);
  sub_100098640();
}

uint64_t sub_1004ECBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v16[4];

  v6 = sub_1000B30B0();
  if (_s7Weather24LocationCompositionStateOwet_0(a1, 1, v6) == 1)
  {
    sub_100021AA4(a1, &qword_100BC30C8);
    v7 = 7168;
  }
  else
  {
    v8 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = v8 | 0x1C00;
  }
  v9 = *(_QWORD *)(a3 + 16);
  if (v9)
  {
    ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v9);
    v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
    v13 = v12;
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v14 = v16;
    v16[2] = v11;
    v16[3] = v13;
  }
  else
  {
    v14 = 0;
  }
  return swift_task_create(v7, v14, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t sub_1004ECCCC(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, _QWORD *a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v19;
  __n128 v20;

  v10 = v9;
  swift_defaultActor_initialize(v10);
  *(_BYTE *)(v10 + 208) = 0;
  *(_QWORD *)(v10 + 112) = a1;
  *(_QWORD *)(v10 + 120) = a2;
  sub_10003B59C((uint64_t)a3, v10 + 128);
  sub_10003B59C((uint64_t)a4, v10 + 168);
  *(_QWORD *)(v10 + 216) = a5;
  sub_10003B59C((uint64_t)a6, v10 + 224);
  sub_10003B59C((uint64_t)a7, v10 + 264);
  sub_10003B59C((uint64_t)a8, v10 + 304);
  sub_10003B59C((uint64_t)a9, v10 + 344);
  sub_1000DB418(a6, a6[3]);
  sub_10005329C(&qword_100BEA0F0, v19, (uint64_t (*)(uint64_t))type metadata accessor for LocationsOfInterestUpdater, (uint64_t)&unk_1009A807C);
  swift_retain();
  swift_retain();
  v20 = swift_retain();
  dispatch thunk of SavedLocationsManagerType.addObserver(_:)(v20);
  swift_release(a2);
  swift_release(a5);
  swift_release(v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a6);
  return v10;
}

double sub_1004ECE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  sub_1000BA294(&qword_100BC30C8);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100098728();
  v4 = v3 - v2;
  if ((static Settings.Features.homeAndWorkEnabled.getter(v5) & 1) != 0)
  {
    v7 = sub_1000B30B0();
    sub_10009D34C(v4, v8, v9, v7);
    v10 = (_QWORD *)sub_1000C4838((uint64_t)&unk_100B794E8);
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v0;
    swift_retain();
    v11 = sub_100966894(v4, (uint64_t)&unk_100BEA0E8, (uint64_t)v10);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004ECEDC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100BEA0C4);
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1004ECF24;
  return sub_1004ED144();
}

uint64_t sub_1004ECF24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1004ECF88, 0, 0);
  else
    return sub_1000950D8(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1004ECF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (qword_100BC2418 != -1)
    swift_once(&qword_100BC2418, sub_1006F3798);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = sub_100098720();
  sub_1000AECD4(v2, (uint64_t)qword_100CAF040);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v6 = static os_log_type_t.error.getter(v4, v5);
  v7 = os_log_type_enabled(v4, v6);
  v8 = *(_QWORD *)(v0 + 40);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = sub_1000C6004();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 16) = v8;
    swift_errorRetain(v8);
    sub_1000BA294(&qword_100BD7910);
    v11 = String.init<A>(describing:)(v0 + 16);
    *(_QWORD *)(v0 + 24) = sub_1000CE1C8(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    sub_1000B47A4();
    sub_1000B47A4();
    _os_log_impl((void *)&_mh_execute_header, v4, v6, "Can't get home and work location due to error:%{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1);
    sub_1000986F0(v10);
    sub_1000986F0((uint64_t)v9);

    sub_1000B47A4();
  }
  else
  {
    sub_1000B47A4();
    sub_1000B47A4();
    sub_1000B47A4();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004ED144()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1[14] = v0;
  v2 = type metadata accessor for Location(0);
  v1[15] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[16] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v4);
  v1[18] = swift_task_alloc(v4);
  v5 = type metadata accessor for LocationOfInterestType(0);
  v1[19] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[20] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v7);
  v1[22] = swift_task_alloc(v7);
  v8 = type metadata accessor for LocationOfInterest(0);
  v1[23] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[24] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[25] = swift_task_alloc(v10);
  v1[26] = swift_task_alloc(v10);
  return swift_task_switch(sub_1004ED224, v0, 0);
}

uint64_t sub_1004ED224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 112);
  if ((*(_BYTE *)(v1 + 208) & 1) != 0)
  {
    sub_100098E34();
    sub_1000B30A8();
    sub_1000992CC();
    sub_1000992D4();
    sub_1000CFFF0();
    sub_1000D0544();
    return sub_1000BC41C(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_BYTE *)(v1 + 208) = 1;
    v3 = *(_QWORD *)(v1 + 368);
    v4 = *(_QWORD *)(v1 + 376);
    sub_1000DB418((_QWORD *)(v1 + 344), v3);
    v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of LocationsOfInterestDataSourceType.locationsOfInterest()[1]);
    *(_QWORD *)(v0 + 216) = v5;
    *v5 = v0;
    v5[1] = sub_1004ED2D4;
    return dispatch thunk of LocationsOfInterestDataSourceType.locationsOfInterest()(v3, v4);
  }
}

uint64_t sub_1004ED2D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 216);
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  swift_task_dealloc(v4);
  return sub_1000BA5E8();
}

uint64_t sub_1004ED338()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  char v37;
  uint64_t v38;
  _BOOL8 v39;
  Swift::Int v40;
  unint64_t v41;
  char v42;
  Swift::Bool v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  _BOOL8 v67;
  unint64_t v68;
  char v69;
  Swift::Bool v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;

  v2 = (char *)(v0 + 112);
  v1 = *(_QWORD **)(v0 + 112);
  v3 = v0 + 40;
  sub_1000C5FF8((uint64_t)(v1 + 16), v0 + 16);
  v4 = v1[20];
  v85 = v1 + 16;
  v86 = (uint64_t)v1;
  sub_1000DB418(v1 + 16, v1[19]);
  v5 = sub_1000C0EE8();
  v84 = dispatch thunk of LocationsOfInterestManagerType.locations.getter(v5, v4);
  swift_endAccess(v0 + 16);
  if (qword_100BC2418 != -1)
    goto LABEL_37;
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 224);
    v7 = sub_100098720();
    sub_1000AECD4(v7, (uint64_t)qword_100CAF040);
    v8 = swift_bridgeObjectRetain_n(v6, 3);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 224);
    if (v11)
    {
      v89 = *(_QWORD *)(v0 + 184);
      v95 = v3;
      v13 = sub_1000C6004();
      v92 = sub_1000C6004();
      v98 = (_QWORD *)v92;
      *(_DWORD *)v13 = 134218499;
      *(_QWORD *)(v0 + 88) = *(_QWORD *)(v12 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 24, v2 - 16);
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2160;
      *(_QWORD *)(v0 + 96) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 16, v2 - 8);
      *(_WORD *)(v13 + 22) = 2081;
      swift_bridgeObjectRetain();
      v15 = Array.description.getter(v14, v89);
      v17 = v16;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 104) = sub_1000CE1C8(v15, v17, (uint64_t *)&v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 8, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v12, 2);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Massaged data contains %ld location of interest with content %{private,mask.hash}s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy(v92, 1);
      sub_1000986F0(v92);
      v18 = v13;
      v3 = v95;
      sub_1000986F0(v18);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 224), 3);
    }

    sub_1000C5FF8((uint64_t)v85, v3);
    v19 = *(_QWORD *)(v86 + 152);
    v20 = *(_QWORD *)(v86 + 160);
    sub_1000DB418(v85, v19);
    v21 = dispatch thunk of LocationsOfInterestManagerType.locations.getter(v19, v20);
    swift_endAccess(v3);
    v29 = *(_QWORD *)(v21 + 16);
    v87 = v21;
    if (v29)
    {
      v2 = *(char **)(v0 + 192);
      v3 = *(_QWORD *)(v0 + 160);
      v30 = v21 + ((v2[80] + 32) & ~(unint64_t)v2[80]);
      v90 = *((_QWORD *)v2 + 9);
      v93 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v2 + 2);
      v96 = *(_QWORD *)(v0 + 128);
      v31 = &_swiftEmptyDictionarySingleton;
      while (1)
      {
        v32 = sub_1000E7128(v22, v23, *(_QWORD *)(v0 + 184), v24, v25, v26, v27, v28, v83, v84, (uint64_t)v85, v86, v87, v90, v93);
        v33 = LocationOfInterest.type.getter(v32);
        v34 = LocationOfInterest.location.getter(v33);
        Location.coordinate.getter(v34);
        sub_1000DD028(*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8));
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
        v98 = v31;
        sub_10016C828();
        v38 = v31[2];
        v39 = (v37 & 1) == 0;
        v40 = v38 + v39;
        if (__OFADD__(v38, v39))
          break;
        v41 = v36;
        v42 = v37;
        sub_1000BA294(&qword_100BEA0C8);
        v43 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v40);
        v31 = v98;
        if (v43)
        {
          sub_10016C828();
          if ((v42 & 1) != (v45 & 1))
            return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(*(_QWORD *)(v0 + 152));
          v41 = v44;
        }
        if ((v42 & 1) != 0)
        {
          sub_1000D1314(v31[7]);
        }
        else
        {
          sub_1000D9090((uint64_t)&v31[v41 >> 6]);
          sub_1000C16E4(v31[6]);
          sub_1000D1314(v31[7]);
          v46 = v31[2];
          v47 = __OFADD__(v46, 1);
          v48 = v46 + 1;
          if (v47)
            goto LABEL_35;
          v31[2] = v48;
        }
        sub_100110330();
        sub_1000DD028(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
        v22 = sub_1000BD438(*((uint64_t (**)(uint64_t, uint64_t))v2 + 1));
        v30 += v90;
        if (!--v29)
          goto LABEL_18;
      }
      __break(1u);
      goto LABEL_34;
    }
    v31 = &_swiftEmptyDictionarySingleton;
LABEL_18:
    v49 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)(v49 + 16);
    if (!v50)
      break;
    v51 = *(_QWORD *)(v0 + 192);
    v3 = *(_QWORD *)(v0 + 160);
    v52 = *(_QWORD *)(v0 + 224)
        + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
    v88 = *(_QWORD *)(v51 + 72);
    v91 = v51;
    v94 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 16);
    v97 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRetain();
    v2 = (char *)&_swiftEmptyDictionarySingleton;
    while (1)
    {
      v60 = sub_1000E7128(v53, v54, *(_QWORD *)(v0 + 184), v55, v56, v57, v58, v59, v83, v84, (uint64_t)v85, v86, v88, v91, v94);
      v61 = LocationOfInterest.type.getter(v60);
      v62 = LocationOfInterest.location.getter(v61);
      Location.coordinate.getter(v62);
      sub_1000DD028(*(uint64_t (**)(uint64_t, uint64_t))(v97 + 8));
      v63 = swift_isUniquelyReferenced_nonNull_native(v2);
      v98 = v2;
      sub_10016C828();
      v66 = *((_QWORD *)v2 + 2);
      v67 = (v65 & 1) == 0;
      v2 = (char *)(v66 + v67);
      if (__OFADD__(v66, v67))
        break;
      v68 = v64;
      v69 = v65;
      sub_1000BA294(&qword_100BEA0C8);
      v70 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v63, (Swift::Int)v2);
      v2 = (char *)v98;
      if (v70)
      {
        sub_10016C828();
        if ((v69 & 1) != (v72 & 1))
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(*(_QWORD *)(v0 + 152));
        v68 = v71;
      }
      if ((v69 & 1) != 0)
      {
        sub_1000D1314(*((_QWORD *)v2 + 7));
      }
      else
      {
        sub_1000D9090((uint64_t)&v2[8 * (v68 >> 6)]);
        sub_1000C16E4(*((_QWORD *)v2 + 6));
        sub_1000D1314(*((_QWORD *)v2 + 7));
        v73 = *((_QWORD *)v2 + 2);
        v47 = __OFADD__(v73, 1);
        v74 = v73 + 1;
        if (v47)
          goto LABEL_36;
        *((_QWORD *)v2 + 2) = v74;
      }
      sub_100110330();
      sub_1000DD028(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      v53 = sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8));
      v52 += v88;
      if (!--v50)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once(&qword_100BC2418, sub_1006F3798);
  }
  v2 = (char *)&_swiftEmptyDictionarySingleton;
LABEL_32:
  v76 = *(_QWORD *)(v0 + 224);
  swift_beginAccess(v85, v0 + 64, 33, 0);
  sub_100068EB4((uint64_t)v85, *(_QWORD *)(v86 + 152));
  sub_1000C0EE8();
  v77 = swift_bridgeObjectRetain();
  dispatch thunk of LocationsOfInterestManagerType.locations.setter(v77);
  swift_endAccess(v0 + 64);
  sub_1004EDB5C();
  v78 = sub_1004EDC40((uint64_t)v31, (uint64_t)v2, v76, v84);
  v80 = v79;
  v82 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 240) = v78;
  *(_QWORD *)(v0 + 248) = v80;
  *(_BYTE *)(v0 + 264) = v82;
  return swift_task_switch(sub_1004ED9DC, 0, 0);
}

uint64_t sub_1004ED9DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 256) = static MainActor.shared.getter(v1);
  dispatch thunk of Actor.unownedExecutor.getter(v1);
  return sub_1000BA5E8();
}

uint64_t sub_1004EDA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_BYTE *)(v0 + 264);
  swift_release();
  sub_1004EDEDC(v3, v2, v1, v4);
  sub_1001639C8(v2, v1, v4);
  return swift_task_switch(sub_1004EDAB8, v3, 0);
}

uint64_t sub_1004EDAB8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 112) + 208) = 0;
  sub_100098E34();
  sub_1000B30A8();
  sub_1000992CC();
  sub_1000992D4();
  sub_1000CFFF0();
  sub_1000D0544();
  return sub_1000BC41C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1004EDB04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  *(_BYTE *)(*(_QWORD *)(v0 + 112) + 208) = 0;
  swift_task_dealloc(v1);
  sub_1000B30A8();
  sub_1000992CC();
  sub_1000992D4();
  sub_1000CFFF0();
  sub_1000D0544();
  return sub_1000BC41C(*(uint64_t (**)(void))(v0 + 8));
}

double sub_1004EDB5C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];

  v1 = v0;
  v2 = v0 + 16;
  sub_1000C5FF8((uint64_t)v2, (uint64_t)v11);
  v3 = v1[20];
  sub_1000DB418(v2, v1[19]);
  v4 = sub_1000C0EE8();
  v5 = dispatch thunk of LocationsOfInterestManagerType.locations.getter(v4, v3);
  swift_endAccess(v11);
  sub_1004EE1B4(v1, v5);
  sub_1000C0EE8();
  swift_bridgeObjectRelease();
  v6 = v2[2];
  if (v6)
  {
    v7 = *(_QWORD *)(type metadata accessor for LocationOfInterest(0) - 8);
    v8 = (uint64_t)v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v9 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1004EE5A4(v8, (uint64_t)v1);
      v8 += v9;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n(v2, 2);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_1004EDC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1001F4E94();
    if ((v6 & 1) == 0)
    {
      if (qword_100BC2418 != -1)
        swift_once(&qword_100BC2418, sub_1006F3798);
      v16 = type metadata accessor for Logger(0);
      v17 = sub_1000AECD4(v16, (uint64_t)qword_100CAF040);
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.default.getter(v18);
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Locations of interest updated", v20, 2u);
        swift_slowDealloc(v20, -1, -1);
      }

      swift_bridgeObjectRetain();
      a3 = a4;
      goto LABEL_19;
    }
    if (qword_100BC2418 != -1)
      swift_once(&qword_100BC2418, sub_1006F3798);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_1000AECD4(v7, (uint64_t)qword_100CAF040);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Locations of interest are same as before", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
  }
  else
  {
    if (!*(_QWORD *)(a2 + 16))
      return 0;
    if (qword_100BC2418 != -1)
      swift_once(&qword_100BC2418, sub_1006F3798);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_1000AECD4(v12, (uint64_t)qword_100CAF040);
    v9 = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v14, "Locations of interest newly added", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
  }

LABEL_19:
  swift_bridgeObjectRetain();
  return a3;
}

double sub_1004EDEDC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  double result;
  _OWORD v14[2];
  uint64_t v15;

  v8 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(uint64_t (**)(uint64_t))(a1 + 112);
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v10[16] = a4;
  v12 = type metadata accessor for LocationsAction(0);
  swift_storeEnumTagMultiPayload(v10, v12, 6);
  swift_storeEnumTagMultiPayload(v10, v8, 3);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  swift_retain();
  sub_100163980(a2, a3, a4);
  sub_1000A5EBC((uint64_t)v10, (uint64_t)v14, v11);
  sub_100021AA4((uint64_t)v14, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4((uint64_t)v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004EDFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v19[4];

  v1 = v0;
  sub_1000BA294(&qword_100BC30C8);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000B30B0();
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
  v7 = (_QWORD *)sub_1000C4838((uint64_t)&unk_100B79498);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v6);
  v10 = swift_retain();
  if (v9 == 1)
  {
    sub_100021AA4(v5, &qword_100BC30C8);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
      v12 = v17;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  if (v12 | v11)
  {
    v19[0] = 0;
    v19[1] = 0;
    v18 = v19;
    v19[2] = v11;
    v19[3] = v12;
  }
  else
  {
    v18 = 0;
  }
  swift_task_create(v13, v18, &type metadata for () + 1, &unk_100BEA0B8, v7);
  swift_release();
  sub_10004A2A0();
}

uint64_t sub_1004EE16C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100BEA0C4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100446958;
  return sub_1004ED144();
}

_QWORD *sub_1004EE1B4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  __n128 v46;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t (*v57)(char *, unint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;

  v58 = a2;
  v3 = sub_1000BA294(&qword_100BC3118);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocationOfInterest(0);
  v59 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v56 = (char *)&v48 - v10;
  v11 = type metadata accessor for LocationModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v18;
  v19 = type metadata accessor for WeatherCoalescedLocationResult(0, v16);
  v50 = *(_QWORD *)(v19 - 8);
  v51 = v19;
  __chkstk_darwin(v19);
  v52 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t (*)(char *, unint64_t, uint64_t))a1[25];
  v55 = (char *)a1[24];
  v57 = v21;
  v49 = sub_1000DB418(a1 + 21, (uint64_t)v55);
  v22 = type metadata accessor for CurrentLocation(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 1, 1, v22);
  v24 = a1[31];
  v23 = a1[32];
  sub_1000DB418(a1 + 28, v24);
  v25 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter(v24, v23);
  v26 = a1 + 38;
  v28 = a1[41];
  v27 = a1[42];
  sub_1000DB418(v26, v28);
  v29 = dispatch thunk of LocationDisplayContextManagerType.fetchDisplayContextByLocation()(v28, v27);
  v30 = (uint64_t)v48;
  dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)(v48, v25, v58, v29, v55, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100021AA4(v30, (uint64_t *)&unk_100C0D170);
  v32 = WeatherCoalescedLocationResult.coalescedLocations.getter(v31);
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v34 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v49 = (_QWORD *)v32;
    v35 = v32 + v34;
    v36 = *(_QWORD *)(v12 + 72);
    v57 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v12 + 16);
    v58 = v36;
    v37 = _swiftEmptyArrayStorage;
    v54 = v11;
    v55 = v8;
    v53 = v5;
    do
    {
      v38 = v57(v14, v35, v11);
      LocationModel.locationOfInterest.getter(v38);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
      {
        sub_100021AA4((uint64_t)v5, &qword_100BC3118);
      }
      else
      {
        v39 = v12;
        v40 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
        v41 = v56;
        v40(v56, v5, v6);
        v40(v8, v41, v6);
        if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
        {
          sub_1005FEB60();
          v37 = v44;
        }
        v42 = v37[2];
        if (v42 >= v37[3] >> 1)
        {
          sub_1005FEB60();
          v37 = v45;
        }
        v37[2] = v42 + 1;
        v43 = (unint64_t)v37
            + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
            + *(_QWORD *)(v59 + 72) * v42;
        v8 = v55;
        v40((char *)v43, v55, v6);
        v12 = v39;
        v5 = v53;
        v11 = v54;
      }
      v35 += v58;
      --v33;
    }
    while (v33);
    v46 = swift_bridgeObjectRelease();
  }
  else
  {
    v46 = swift_bridgeObjectRelease();
    v37 = _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v52, v51, v46);
  return v37;
}

uint64_t sub_1004EE5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = type metadata accessor for Location(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocationOfInterest(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100BC2418 != -1)
    swift_once(&qword_100BC2418, sub_1006F3798);
  v12 = type metadata accessor for Logger(0);
  sub_1000AECD4(v12, (uint64_t)qword_100CAF040);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  HIDWORD(v42) = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v40 = a2;
    v17 = v16;
    v39 = swift_slowAlloc(32, -1);
    v46 = v39;
    *(_DWORD *)v17 = 141558275;
    v44 = 1752392040;
    v37 = &v45;
    v18 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    *(_WORD *)(v17 + 12) = 2081;
    v36 = v17 + 14;
    v38 = v14;
    LocationOfInterest.location.getter(v18);
    sub_10005329C((unint64_t *)&qword_100BC5FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v4);
    v41 = a1;
    v20 = v5;
    v21 = v4;
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
    v44 = sub_1000CE1C8(v19, v23, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v37);
    v4 = v21;
    v5 = v20;
    v24 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v24);
    v25 = v38;
    _os_log_impl((void *)&_mh_execute_header, v38, BYTE4(v42), "Fetch weather for location of interest %{private,mask.hash}s", (uint8_t *)v17, 0x16u);
    v26 = v39;
    swift_arrayDestroy(v39, 1);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  }
  LocationOfInterest.location.getter(v27);
  sub_10080451C((uint64_t)v7, 0, v28, v29, v30, v31, v32, v33, v35, v36, (uint64_t)v37, (uint64_t)v38, v39, v40, v41, v42, v43, v44, v45,
    v46);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

_QWORD *sub_1004EE8A4()
{
  _QWORD *v0;

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 21);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 28);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 33);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 43);
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_1004EE900()
{
  uint64_t v0;

  sub_1004EE8A4();
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for LocationsOfInterestUpdater()
{
  return objc_opt_self(_TtC7Weather26LocationsOfInterestUpdater);
}

uint64_t sub_1004EE938()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1004EE944()
{
  return sub_1004EE938();
}

void sub_1004EE960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = v0;
  sub_1000BA294(&qword_100BC30C8);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  if (qword_100BC2418 != -1)
    swift_once(&qword_100BC2418, sub_1006F3798);
  v6 = sub_100098720();
  v7 = sub_1000AECD4(v6, (uint64_t)qword_100CAF040);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Fetch weather data for locations of interest due to savedLocations did update.", v10, 2u);
    sub_1000986F0((uint64_t)v10);
  }

  v11 = sub_1000B30B0();
  sub_10009D34C(v5, v12, v13, v11);
  v14 = (_QWORD *)sub_1000C4838((uint64_t)&unk_100B794C0);
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v1;
  swift_retain();
  sub_100966894(v5, (uint64_t)&unk_100BEA0D8, (uint64_t)v14);
  swift_release();
  sub_10004A2A0();
}

uint64_t sub_1004EEA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1004EEAAC, a4, 0);
}

uint64_t sub_1004EEAAC()
{
  uint64_t v0;

  sub_1004EDB5C();
  return sub_1000950D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1004EEADC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1000CD7E0();
  v1 = (_QWORD *)swift_task_alloc(dword_100BEA0B4);
  *(_QWORD *)(v0 + 16) = v1;
  sub_1000C3C28(v1);
  return sub_1004EE16C();
}

uint64_t sub_1004EEB30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000CD7E0();
  v1 = (_QWORD *)swift_task_alloc(dword_100BEA0D4);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1000C3C28(v1);
  return sub_1004EEA94(v2, v3, v4, v5);
}

uint64_t sub_1004EEB84()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1000CD7E0();
  v1 = (_QWORD *)swift_task_alloc(dword_100BEA0E4);
  *(_QWORD *)(v0 + 16) = v1;
  sub_1000C3C28(v1);
  return sub_1004ECEDC();
}

void sub_1004EEBD4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;

  type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  sub_1000BA294(&qword_100BD7148);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = sub_1000D1320();
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015A350(a1, v11);
  sub_1000B489C(v11);
  if (v16)
  {
    sub_100021AA4(v11, &qword_100BD7148);
    sub_1000C20AC(v7);
    sub_1004EEDEC();
    sub_1004F1358(v7);
  }
  else
  {
    sub_1000992E4((uint64_t)v15, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v30._object = (void *)0x8000000100A089F0;
    sub_1000D0134();
    v18._countAndFlagsBits = 0xD000000000000017;
    v30._countAndFlagsBits = 0x10000000000000A0;
    v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v17, v18, v30);

    v22 = sub_1000BA294(&qword_100BC3C38);
    v23 = swift_allocObject(v22, 72, 7);
    v24 = (_QWORD *)v23;
    *(_OWORD *)(v23 + 16) = xmmword_10097CA50;
    if ((a2 & 1) != 0)
      v25 = UnitConfiguration.Temperature.description.getter(v23);
    else
      v25 = UnitConfiguration.Temperature.symbol.getter();
    v27 = v25;
    v28 = v26;
    v24[7] = &type metadata for String;
    v24[8] = sub_1000B2E24();
    v24[4] = v27;
    v24[5] = v28;
    String.init(format:_:)(v21._countAndFlagsBits, v21._object, v24);
    swift_bridgeObjectRelease();
    sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }
  sub_10009D300();
}

void sub_1004EEDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String_optional v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;

  v1 = sub_1000D1320();
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_1000C2B90();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  sub_1004F1314(v0, v5 - v4);
  sub_1000B489C(v6);
  if (v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18._object = (void *)0x8000000100A088A0;
    sub_1000D0134();
    v9._countAndFlagsBits = 0xD000000000000012;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v8, v9, v18);

  }
  else
  {
    v12 = sub_1000992E4(v0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v13 = UnitConfiguration.Temperature.description.getter(v12);
    v15 = v14;
    v16 = UnitConfiguration.Temperature.symbol.getter();
    sub_1004F0E34(v13, v15, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_10009D300();
}

uint64_t sub_1004EEF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = sub_1000D1320();
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_1000C2B90();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - v7;
  sub_1004F1314(v0, (uint64_t)&v14 - v7);
  sub_1000B489C((uint64_t)v8);
  if (v9)
  {
    sub_1000C20AC((uint64_t)v5);
    sub_1004EEDEC();
    v12 = v10;
    sub_1004F1358((uint64_t)v5);
  }
  else
  {
    v11 = sub_1000992E4(v0, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v12 = UnitConfiguration.Temperature.description.getter(v11);
    sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  return v12;
}

uint64_t sub_1004EF054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_1000BA294(&qword_100BD7148);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  sub_1000BA294(&qword_100BD6FC0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  sub_1000BA294(&qword_100BD71F8);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  sub_10009D2A4();
  __chkstk_darwin(v7);
  sub_100079F7C();
  v71 = v8;
  sub_1000BA294(&qword_100BD71F0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000986FC();
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v70 = v11;
  sub_1000BA294(&qword_100BD71E8);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_1000986FC();
  sub_10009D2A4();
  __chkstk_darwin(v13);
  sub_100079F7C();
  v69 = v14;
  sub_1000BA294(&qword_100BD71E0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_1000986FC();
  sub_10009D2A4();
  __chkstk_darwin(v16);
  sub_100079F7C();
  v68 = v17;
  sub_1000BA294(&qword_100BD71D8);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_1000986FC();
  sub_10009D2A4();
  __chkstk_darwin(v19);
  sub_100079F7C();
  v67 = v20;
  v21 = *(_QWORD *)(a1 + 48);
  if (!*(_BYTE *)(a1 + 56))
    __asm { BR              X10 }
  if (*(_BYTE *)(a1 + 56) != 1)
  {
    sub_10009D6B0();
    v50 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
    sub_1004EFC64((uint64_t *)(a2 + v50[5]));
    sub_1004F00D4((uint64_t *)(a2 + v50[6]));
    sub_1004F0544((_QWORD *)(a2 + v50[7]));
    sub_1000BCF94();
    sub_1000B314C();
    sub_100098E44();
    UnitManager.systemWideTemperatureUnit.getter();
    sub_10009880C();
    v51 = sub_1004F09C4((uint64_t *)(a2 + v50[8]));
    static UnitManager.standard.getter(v51);
    v52 = UnitManager.hasPreferredUnits.getter();
    sub_10009880C();
    v53 = *(_BYTE *)(a1 + 57);
    *(_BYTE *)(a2 + v50[9]) = (v52 & 1) == 0;
    *(_BYTE *)(a2 + v50[10]) = v53;
    sub_1000C3C44();
    v54 = sub_1000DDC18();
    swift_storeEnumTagMultiPayload(v54, v55, 6);
    type metadata accessor for UnitsConfigurationViewModel(0);
    sub_100099444();
    return _s7Weather24LocationCompositionStateOwst_0(v56, v57, v58, v59);
  }
  sub_1000BA294(&qword_100BD7048);
  sub_1000C135C();
  _s7Weather24LocationCompositionStateOwst_0(v22, v23, v24, v25);
  sub_1000BA294(&qword_100BD7020);
  sub_1000C135C();
  _s7Weather24LocationCompositionStateOwst_0(v26, v27, v28, v29);
  sub_1000BA294(&qword_100BD7008);
  sub_1000C135C();
  _s7Weather24LocationCompositionStateOwst_0(v30, v31, v32, v33);
  type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  sub_1000C135C();
  _s7Weather24LocationCompositionStateOwst_0(v34, v35, v36, v37);
  sub_1000BA294(&qword_100BD6FB8);
  sub_1000C135C();
  _s7Weather24LocationCompositionStateOwst_0(v38, v39, v40, v41);
  v42 = 1 << *(_BYTE *)(v21 + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v43 & *(_QWORD *)(v21 + 56);
  v45 = (unint64_t)(v42 + 63) >> 6;
  swift_bridgeObjectRetain(v21);
  if (v44)
  {
    v46 = __clz(__rbit64(v44));
    goto LABEL_20;
  }
  if (v45 > 1)
  {
    v47 = *(_QWORD *)(v21 + 64);
    v48 = 1;
    if (v47)
      goto LABEL_19;
    v48 = 2;
    if (v45 > 2)
    {
      v47 = *(_QWORD *)(v21 + 72);
      if (v47)
        goto LABEL_19;
      v48 = 3;
      if (v45 > 3)
      {
        v47 = *(_QWORD *)(v21 + 80);
        if (!v47)
        {
          v49 = 4;
          if (v45 > 4)
          {
            v47 = *(_QWORD *)(v21 + 88);
            if (v47)
            {
              v48 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v48 = v49 + 1;
              if (__OFADD__(v49, 1))
              {
                __break(1u);
                JUMPOUT(0x1004EF7CCLL);
              }
              if (v48 >= v45)
                break;
              v47 = *(_QWORD *)(v21 + 56 + 8 * v48);
              ++v49;
              if (v47)
                goto LABEL_19;
            }
          }
          goto LABEL_23;
        }
LABEL_19:
        v46 = __clz(__rbit64(v47)) + (v48 << 6);
LABEL_20:
        __asm { BR              X9 }
      }
    }
  }
LABEL_23:
  swift_release(v21);
  sub_1004F1290(v67, a2, &qword_100BD71D8);
  v61 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  sub_1004F1290(v68, a2 + v61[5], &qword_100BD71E0);
  sub_1004F1290(v69, a2 + v61[6], &qword_100BD71E8);
  sub_1004F1290(v70, a2 + v61[7], &qword_100BD71F0);
  sub_1004F1290(v71, a2 + v61[8], &qword_100BD71F8);
  v62 = sub_1000C3C44();
  swift_storeEnumTagMultiPayload(a2, v62, 5);
  type metadata accessor for UnitsConfigurationViewModel(0);
  sub_100099444();
  return _s7Weather24LocationCompositionStateOwst_0(v63, v64, v65, v66);
}

uint64_t sub_1004EF7F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  char *v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a1;
  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v58 = v1;
  v59 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD7130);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v53 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v53 - v12;
  v14 = type metadata accessor for UnitConfiguration.Distance(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)v53 - v19;
  v21 = type metadata accessor for UnitManager(0);
  v22 = static UnitManager.standard.getter(v21);
  v60 = UnitManager.availableDistanceUnits.getter();
  swift_release(v22);
  v24 = static UnitManager.standard.getter(v23);
  UnitManager.preferredDistanceUnit.getter();
  swift_release(v24);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v46(v20, v13, v14);
LABEL_7:
    v48 = v60;
    v47 = v61;
    goto LABEL_13;
  }
  v57 = v15;
  v25 = v59;
  sub_100021AA4((uint64_t)v13, &qword_100BD7130);
  v27 = static UnitManager.standard.getter(v26);
  v28 = UnitManager.visibility.getter();
  v29 = swift_release(v27);
  UnitConfiguration.Distance.init(_:)(v28, v29);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v20, v11, v14);
    goto LABEL_7;
  }
  sub_100021AA4((uint64_t)v11, &qword_100BD7130);
  v30 = v4;
  v31 = static Logger.locale.getter();
  v32 = Logger.logObject.getter(v31);
  v34 = static os_log_type_t.error.getter(v32, v33);
  v35 = v34;
  v36 = v18;
  v37 = (uint64_t)v8;
  if (os_log_type_enabled(v32, v34))
  {
    v55 = v35;
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v63 = v39;
    v56 = v36;
    *(_DWORD *)v38 = 136315138;
    v53[1] = v38 + 4;
    v40 = static UnitManager.standard.getter(v39);
    v41 = (void *)UnitManager.visibility.getter();
    v42 = objc_msgSend(v41, "symbol", swift_release(v40).n128_f64[0]);

    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v54 = v30;
    v45 = v44;

    v62 = sub_1000CE1C8(v43, v45, &v63);
    v36 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v55, "Encountered unsupported selectable unit for distance. unit=%s", v38, 0xCu);
    swift_arrayDestroy(v39, 1);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v58);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v58);
  }
  v48 = v60;
  sub_1002F6F9C(v60, v37);
  v49 = _s7Weather24LocationCompositionStateOwet_0(v37, 1, v14);
  v47 = v61;
  v50 = v57;
  if (v49 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v36, enum case for UnitConfiguration.Distance.miles(_:), v14);
    sub_100021AA4(v37, &qword_100BD7130);
    v46 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v36, (char *)v37, v14);
  }
  v46(v20, v36, v14);
LABEL_13:
  *v47 = v48;
  v51 = sub_1000BA294(&qword_100BD7048);
  return ((uint64_t (*)(char *, char *, uint64_t))v46)((char *)v47 + *(int *)(v51 + 36), v20, v14);
}

uint64_t sub_1004EFC64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  char *v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a1;
  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v58 = v1;
  v59 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD7138);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v53 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v53 - v12;
  v14 = type metadata accessor for UnitConfiguration.Precipitation(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)v53 - v19;
  v21 = type metadata accessor for UnitManager(0);
  v22 = static UnitManager.standard.getter(v21);
  v60 = UnitManager.availablePrecipitationUnits.getter();
  swift_release(v22);
  v24 = static UnitManager.standard.getter(v23);
  UnitManager.preferredPrecipitationUnit.getter();
  swift_release(v24);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v46(v20, v13, v14);
LABEL_7:
    v48 = v60;
    v47 = v61;
    goto LABEL_13;
  }
  v57 = v15;
  v25 = v59;
  sub_100021AA4((uint64_t)v13, &qword_100BD7138);
  v27 = static UnitManager.standard.getter(v26);
  v28 = UnitManager.precipitationRainfall.getter();
  v29 = swift_release(v27);
  UnitConfiguration.Precipitation.init(_:)(v28, v29);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v20, v11, v14);
    goto LABEL_7;
  }
  sub_100021AA4((uint64_t)v11, &qword_100BD7138);
  v30 = v4;
  v31 = static Logger.locale.getter();
  v32 = Logger.logObject.getter(v31);
  v34 = static os_log_type_t.error.getter(v32, v33);
  v35 = v34;
  v36 = v18;
  v37 = (uint64_t)v8;
  if (os_log_type_enabled(v32, v34))
  {
    v55 = v35;
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v63 = v39;
    v56 = v36;
    *(_DWORD *)v38 = 136315138;
    v53[1] = v38 + 4;
    v40 = static UnitManager.standard.getter(v39);
    v41 = (void *)UnitManager.precipitationRainfall.getter();
    v42 = objc_msgSend(v41, "symbol", swift_release(v40).n128_f64[0]);

    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v54 = v30;
    v45 = v44;

    v62 = sub_1000CE1C8(v43, v45, &v63);
    v36 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v55, "Encountered unsupported selectable unit for precipitation. unit=%s", v38, 0xCu);
    swift_arrayDestroy(v39, 1);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v58);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v58);
  }
  v48 = v60;
  sub_1002F6FA8(v60, v37);
  v49 = _s7Weather24LocationCompositionStateOwet_0(v37, 1, v14);
  v47 = v61;
  v50 = v57;
  if (v49 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v36, enum case for UnitConfiguration.Precipitation.inches(_:), v14);
    sub_100021AA4(v37, &qword_100BD7138);
    v46 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v36, (char *)v37, v14);
  }
  v46(v20, v36, v14);
LABEL_13:
  *v47 = v48;
  v51 = sub_1000BA294(&qword_100BD7020);
  return ((uint64_t (*)(char *, char *, uint64_t))v46)((char *)v47 + *(int *)(v51 + 36), v20, v14);
}

uint64_t sub_1004F00D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  char *v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a1;
  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v58 = v1;
  v59 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD7140);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v53 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v53 - v12;
  v14 = type metadata accessor for UnitConfiguration.Pressure(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)v53 - v19;
  v21 = type metadata accessor for UnitManager(0);
  v22 = static UnitManager.standard.getter(v21);
  v60 = UnitManager.availablePressureUnits.getter();
  swift_release(v22);
  v24 = static UnitManager.standard.getter(v23);
  UnitManager.preferredPressureUnit.getter();
  swift_release(v24);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v46(v20, v13, v14);
LABEL_7:
    v48 = v60;
    v47 = v61;
    goto LABEL_13;
  }
  v57 = v15;
  v25 = v59;
  sub_100021AA4((uint64_t)v13, &qword_100BD7140);
  v27 = static UnitManager.standard.getter(v26);
  v28 = UnitManager.pressure.getter();
  v29 = swift_release(v27);
  UnitConfiguration.Pressure.init(_:)(v28, v29);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v20, v11, v14);
    goto LABEL_7;
  }
  sub_100021AA4((uint64_t)v11, &qword_100BD7140);
  v30 = v4;
  v31 = static Logger.locale.getter();
  v32 = Logger.logObject.getter(v31);
  v34 = static os_log_type_t.error.getter(v32, v33);
  v35 = v34;
  v36 = v18;
  v37 = (uint64_t)v8;
  if (os_log_type_enabled(v32, v34))
  {
    v55 = v35;
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v63 = v39;
    v56 = v36;
    *(_DWORD *)v38 = 136315138;
    v53[1] = v38 + 4;
    v40 = static UnitManager.standard.getter(v39);
    v41 = (void *)UnitManager.pressure.getter();
    v42 = objc_msgSend(v41, "symbol", swift_release(v40).n128_f64[0]);

    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v54 = v30;
    v45 = v44;

    v62 = sub_1000CE1C8(v43, v45, &v63);
    v36 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v55, "Encountered unsupported selectable unit for pressure. unit=%s", v38, 0xCu);
    swift_arrayDestroy(v39, 1);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v58);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v58);
  }
  v48 = v60;
  sub_1002F6FB4(v60, v37);
  v49 = _s7Weather24LocationCompositionStateOwet_0(v37, 1, v14);
  v47 = v61;
  v50 = v57;
  if (v49 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v36, enum case for UnitConfiguration.Pressure.millibars(_:), v14);
    sub_100021AA4(v37, &qword_100BD7140);
    v46 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v36, (char *)v37, v14);
  }
  v46(v20, v36, v14);
LABEL_13:
  *v47 = v48;
  v51 = sub_1000BA294(&qword_100BD7008);
  return ((uint64_t (*)(char *, char *, uint64_t))v46)((char *)v47 + *(int *)(v51 + 36), v20, v14);
}

uint64_t sub_1004F0544@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;

  v53 = a1;
  v1 = sub_1000BA294(&qword_100BD7148);
  v2 = __chkstk_darwin(v1);
  v51 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - v4;
  v6 = sub_1000BA294(&qword_100BEA1B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UnitConfiguration.Temperature(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v56 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  v12 = *(_QWORD *)(v50 - 8);
  v13 = __chkstk_darwin(v50);
  v52 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v45 - v15;
  v49 = type metadata accessor for UnitManager(0);
  v17 = static UnitManager.standard.getter(v49);
  v18 = UnitManager.availableTemperatureUnits.getter();
  swift_release(v17);
  v19 = *(_QWORD *)(v18 + 16);
  v57 = v10;
  if (v19)
  {
    v55 = v12;
    v47 = v5;
    v48 = v8;
    v58 = _swiftEmptyArrayStorage;
    sub_100605F04();
    v20 = *(unsigned __int8 *)(v10 + 80);
    v46 = v18;
    v21 = v18 + ((v20 + 32) & ~v20);
    v54 = *(_QWORD *)(v10 + 72);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    do
    {
      v23 = v56;
      v22(v56, v21, v9);
      v22(v16, (uint64_t)v23, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
      v24 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native(v58) & 1) == 0)
      {
        sub_100605F04();
        v24 = v58;
      }
      v25 = v24[2];
      if (v25 >= v24[3] >> 1)
      {
        sub_100605F04();
        v24 = v58;
      }
      v24[2] = v25 + 1;
      v26 = *(unsigned __int8 *)(v55 + 80);
      v27 = (v26 + 32) & ~v26;
      v28 = *(_QWORD *)(v55 + 72);
      sub_1004F12D0((uint64_t)v16, (uint64_t)v24 + v27 + v28 * v25);
      v21 += v54;
      --v19;
      v10 = v57;
    }
    while (v19);
    swift_bridgeObjectRelease(v46);
    v5 = v47;
    v8 = v48;
  }
  else
  {
    swift_bridgeObjectRelease(v18);
    v28 = *(_QWORD *)(v12 + 72);
    v26 = *(unsigned __int8 *)(v12 + 80);
    v27 = (v26 + 32) & ~v26;
    v24 = _swiftEmptyArrayStorage;
  }
  v29 = sub_1000BA294(&qword_100BEA1C0);
  v30 = swift_allocObject(v29, v27 + v28, v26 | 7);
  *(_OWORD *)(v30 + 16) = xmmword_10097CA50;
  v31 = 1;
  _s7Weather24LocationCompositionStateOwst_0(v30 + v27, 1, 1, v9);
  v58 = v24;
  sub_10025E274(v30);
  v32 = v58;
  v34 = static UnitManager.standard.getter(v33);
  UnitManager.preferredTemperatureUnit.getter();
  swift_release(v34);
  v35 = v51;
  sub_10015A350((uint64_t)v5, v51);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v9) != 1)
  {
    v37 = v56;
    v36 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v56, v35, v9);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v8, v37, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v9);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v9);
    v31 = 0;
  }
  v38 = v31;
  v39 = v50;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, v38, 1, v50);
  sub_100021AA4((uint64_t)v5, &qword_100BD7148);
  v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v39);
  v41 = v52;
  if (v40 == 1)
  {
    _s7Weather24LocationCompositionStateOwst_0(v52, 1, 1, v9);
    sub_100021AA4((uint64_t)v8, &qword_100BEA1B8);
  }
  else
  {
    sub_1004F12D0((uint64_t)v8, v52);
  }
  v42 = v53;
  *v53 = v32;
  v43 = sub_1000BA294(&qword_100BD6FC0);
  return sub_1004F12D0(v41, (uint64_t)v42 + *(int *)(v43 + 36));
}

uint64_t sub_1004F09C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  char *v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a1;
  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v58 = v1;
  v59 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(qword_100BD7150);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v53 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v53 - v12;
  v14 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)v53 - v19;
  v21 = type metadata accessor for UnitManager(0);
  v22 = static UnitManager.standard.getter(v21);
  v60 = UnitManager.availableWindSpeedUnits.getter();
  swift_release(v22);
  v24 = static UnitManager.standard.getter(v23);
  UnitManager.preferredWindUnit.getter();
  swift_release(v24);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v46(v20, v13, v14);
LABEL_7:
    v48 = v60;
    v47 = v61;
    goto LABEL_13;
  }
  v57 = v15;
  v25 = v59;
  sub_100021AA4((uint64_t)v13, qword_100BD7150);
  v27 = static UnitManager.standard.getter(v26);
  v28 = UnitManager.windSpeed.getter();
  v29 = swift_release(v27);
  UnitConfiguration.WindSpeed.init(_:)(v28, v29);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v20, v11, v14);
    goto LABEL_7;
  }
  sub_100021AA4((uint64_t)v11, qword_100BD7150);
  v30 = v4;
  v31 = static Logger.locale.getter();
  v32 = Logger.logObject.getter(v31);
  v34 = static os_log_type_t.error.getter(v32, v33);
  v35 = v34;
  v36 = v18;
  v37 = (uint64_t)v8;
  if (os_log_type_enabled(v32, v34))
  {
    v55 = v35;
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v63 = v39;
    v56 = v36;
    *(_DWORD *)v38 = 136315138;
    v53[1] = v38 + 4;
    v40 = static UnitManager.standard.getter(v39);
    v41 = (void *)UnitManager.windSpeed.getter();
    v42 = objc_msgSend(v41, "symbol", swift_release(v40).n128_f64[0]);

    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v54 = v30;
    v45 = v44;

    v62 = sub_1000CE1C8(v43, v45, &v63);
    v36 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v55, "Encountered unsupported selectable unit for wind. unit=%s", v38, 0xCu);
    swift_arrayDestroy(v39, 1);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v58);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v58);
  }
  v48 = v60;
  sub_1002F6FC0(v60, v37);
  v49 = _s7Weather24LocationCompositionStateOwet_0(v37, 1, v14);
  v47 = v61;
  v50 = v57;
  if (v49 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v36, enum case for UnitConfiguration.WindSpeed.milesPerHour(_:), v14);
    sub_100021AA4(v37, qword_100BD7150);
    v46 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v46(v36, (char *)v37, v14);
  }
  v46(v20, v36, v14);
LABEL_13:
  *v47 = v48;
  v51 = sub_1000BA294(&qword_100BD6FB8);
  return ((uint64_t (*)(char *, char *, uint64_t))v46)((char *)v47 + *(int *)(v51 + 36), v20, v14);
}

uint64_t sub_1004F0E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Swift::String v17;

  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17._countAndFlagsBits = 0xD000000000000065;
  v17._object = (void *)0x8000000100A08920;
  v9._object = (void *)0x8000000100A08900;
  v9._countAndFlagsBits = 0xD00000000000001CLL;
  v10._countAndFlagsBits = 0x29402528204025;
  v10._object = (void *)0xE700000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v17);

  v12 = sub_1000BA294(&qword_100BC3C38);
  v13 = swift_allocObject(v12, 112, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v13 + 56) = &type metadata for String;
  v14 = sub_1000B2E24();
  *(_QWORD *)(v13 + 32) = a1;
  *(_QWORD *)(v13 + 40) = a2;
  *(_QWORD *)(v13 + 96) = &type metadata for String;
  *(_QWORD *)(v13 + 104) = v14;
  *(_QWORD *)(v13 + 64) = v14;
  *(_QWORD *)(v13 + 72) = a3;
  *(_QWORD *)(v13 + 80) = a4;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  v15 = static String.localizedStringWithFormat(_:_:)(v11._countAndFlagsBits, v11._object, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1004F0F9C()
{
  return sub_1004F1154((uint64_t (*)(void))&UnitConfiguration.Distance.description.getter, (uint64_t (*)(void))&UnitConfiguration.Distance.symbol.getter);
}

void sub_1004F0FC4(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEA0F8, (uint64_t (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance, (uint64_t)&protocol conformance descriptor for UnitConfiguration.Distance);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1004F100C()
{
  return sub_1004F1154((uint64_t (*)(void))&UnitConfiguration.Precipitation.description.getter, (uint64_t (*)(void))&UnitConfiguration.Precipitation.symbol.getter);
}

void sub_1004F1034(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEA100, (uint64_t (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation, (uint64_t)&protocol conformance descriptor for UnitConfiguration.Precipitation);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1004F107C()
{
  return sub_1004F1154((uint64_t (*)(void))&UnitConfiguration.Pressure.description.getter, (uint64_t (*)(void))&UnitConfiguration.Pressure.symbol.getter);
}

void sub_1004F10A4(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEA108, (uint64_t (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure, (uint64_t)&protocol conformance descriptor for UnitConfiguration.Pressure);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1004F10EC()
{
  return sub_1004F1154((uint64_t (*)(void))&UnitConfiguration.Temperature.description.getter, (uint64_t (*)(void))&UnitConfiguration.Temperature.symbol.getter);
}

void sub_1004F1114(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEA110, (uint64_t (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature, (uint64_t)&protocol conformance descriptor for UnitConfiguration.Temperature);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1004F1154(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1();
  v5 = v4;
  v6 = a2();
  v8 = sub_1004F0E34(v3, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1004F11C8()
{
  return sub_1004F1154((uint64_t (*)(void))&UnitConfiguration.WindSpeed.description.getter, (uint64_t (*)(void))&UnitConfiguration.WindSpeed.symbol.getter);
}

void sub_1004F11F0(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEA118, (uint64_t (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed, (uint64_t)&protocol conformance descriptor for UnitConfiguration.WindSpeed);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for UnitsConfigurationViewModelFactory()
{
  return objc_opt_self(_TtC7Weather34UnitsConfigurationViewModelFactory);
}

void sub_1004F1254(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BD7748, type metadata accessor for UnitsConfigurationViewModel.Temperature, (uint64_t)&unk_1009BAF10);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1004F1290(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1000BA294(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_10004A298();
}

uint64_t sub_1004F12D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F1314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F1358(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004F1394(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B5A938, v2);
  sub_1000986E8();
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1004F13D8(unsigned __int8 a1)
{
  if (a1)
    return sub_1000D06A0(a1);
  else
    return 0x72656874616577;
}

void sub_1004F1414()
{
  sub_10068BEF8();
}

void sub_1004F1420()
{
  sub_1004A754C();
}

double sub_1004F1428(uint64_t a1)
{
  char *v1;

  return sub_1001D9198(a1, *v1);
}

void sub_1004F1430(uint64_t a1)
{
  sub_1001D9B38(a1);
}

unint64_t sub_1004F1438@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1004F1394(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004F1464@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1004F13D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1004F148C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _DWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v2;
  v8 = OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog__finished;
  v9 = *(void **)(v2 + OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog__finished);
  v10 = sub_100094EE4();
  Atomic.wrappedValue.getter(&v27, v10);
  sub_10009880C();
  if (v27 == 1)
  {
    v11 = sub_1000E77A0();
    Logger.logObject.getter(v11);
    v12 = sub_10009C0A4();
    if (sub_1000BDA70(v12))
    {
      v13 = (_DWORD *)sub_100098710(12);
      sub_1000C6004();
      sub_10011072C();
      *v13 = 136446210;
      v15 = *(_QWORD *)(v5 + 16);
      v14 = *(_QWORD *)(v5 + 24);
      swift_bridgeObjectRetain(v14);
      sub_1000CE1C8(v15, v14, &v27);
      sub_10009DF18();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v16, v17);
      sub_1000C6650();
      swift_bridgeObjectRelease(v14);
      sub_1000CE5D0((void *)&_mh_execute_header, v18, v19, "Unexpected failure call for WeatherData Update Request, already finished before. uuid=%{public}s");
      sub_1000BF1B8();
      sub_1000986F0(v4);
      sub_1000986F0((uint64_t)v13);
    }
    else
    {
      sub_1000C6650();
    }

  }
  v20 = *(NSObject **)(v5 + v8);
  LOBYTE(v27) = 1;
  sub_100094EE4();
  Atomic.wrappedValue.setter(&v27);
  sub_10009880C();
  sub_1000E77A0();
  v21 = swift_bridgeObjectRetain_n(a2, 2);
  Logger.logObject.getter(v21);
  v22 = sub_10009C0A4();
  if (sub_1000BDA70(v22))
  {
    v23 = sub_100098710(22);
    sub_100098710(64);
    sub_10011072C();
    *(_DWORD *)v23 = 136446466;
    swift_bridgeObjectRetain(a2);
    v26 = sub_1000CE1C8(a1, a2, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v23 + 12) = 2082;
    v24 = *(_QWORD *)(v5 + 16);
    v25 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain(v25);
    v26 = sub_1000CE1C8(v24, v25, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    sub_1000C6650();
    swift_bridgeObjectRelease(v25);
    sub_1000C0194((void *)&_mh_execute_header, v20, v3, "WeatherData Update Request failed. message=%{public}s, uuid=%{public}s", (uint8_t *)v23);
    sub_1000C6694(v4);
    sub_1000986F0(v4);
    sub_1000986F0(v23);
  }
  else
  {
    sub_1000C6650();
    swift_bridgeObjectRelease_n(a2, 2);
  }

  sub_10009DE9C();
}

uint64_t sub_1004F1704()
{
  return type metadata accessor for WeatherDataUpdateRequestLog(0);
}

uint64_t storeEnumTagSinglePayload for WeatherDataUpdateRequestLog.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004F1758 + 4 * byte_1009A825B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004F178C + 4 * byte_1009A8256[v4]))();
}

uint64_t sub_1004F178C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F1794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004F179CLL);
  return result;
}

uint64_t sub_1004F17A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004F17B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004F17B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F17BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataUpdateRequestLog.Kind()
{
  return &type metadata for WeatherDataUpdateRequestLog.Kind;
}

unint64_t sub_1004F17DC()
{
  unint64_t result;

  result = qword_100BEA2C8;
  if (!qword_100BEA2C8)
  {
    result = swift_getWitnessTable(&unk_1009A83B8, &type metadata for WeatherDataUpdateRequestLog.Kind);
    atomic_store(result, (unint64_t *)&qword_100BEA2C8);
  }
  return result;
}

uint64_t sub_1004F1818(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

uint64_t sub_1004F1848(uint64_t a1)
{
  _QWORD v2[3];
  _BYTE v3[8];

  swift_getErrorValue(a1, v3, v2);
  return Error.localizedDescription.getter(v2[1], v2[2]);
}

uint64_t sub_1004F18B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v0 = sub_10009DB58();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1004F18E8()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004F199C()
{
  return sub_1000EDEDC((uint64_t (*)(void))&Location.name.getter);
}

uint64_t sub_1004F19B0()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F19DC()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F19F8()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1A1C()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1A38()
{
  uint64_t v0;

  return sub_1004F1848(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004F1A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 24) != 1)
    swift_bridgeObjectRelease();
  v1 = sub_10009DB58();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1004F1AB0()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1ABC()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1AD0()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1B00()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1B14()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1B44()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

uint64_t sub_1004F1B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v0 = sub_10009DB58();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1004F1BA0()
{
  uint64_t v0;

  return sub_1004F1818(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

_QWORD *sub_1004F1BD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        v9 = a1;
        v10 = a3;
        v11 = 0;
        goto LABEL_20;
      case 2u:
        v13 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v9 = a1;
        v10 = a3;
        v11 = 2;
        goto LABEL_20;
      case 3u:
        v14 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = sub_1000BA294(&qword_100BEA2E8);
        *(_QWORD *)((char *)a1 + *(int *)(v15 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v15 + 48));
        v9 = a1;
        v10 = a3;
        v11 = 3;
        goto LABEL_20;
      case 4u:
        v16 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v17 = sub_1000BA294(&qword_100BEA2E0);
        *(_QWORD *)((char *)a1 + *(int *)(v17 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v17 + 48));
        *(_QWORD *)((char *)a1 + *(int *)(v17 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v17 + 64));
        v9 = a1;
        v10 = a3;
        v11 = 4;
        goto LABEL_20;
      case 5u:
        v31 = a2[1];
        if (v31 == 1)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          *a1 = *a2;
          a1[1] = v31;
          swift_bridgeObjectRetain();
        }
        v9 = a1;
        v10 = a3;
        v11 = 5;
        goto LABEL_20;
      case 6u:
        v18 = *a2;
        swift_errorRetain(v18);
        *a1 = v18;
        v9 = a1;
        v10 = a3;
        v11 = 6;
        goto LABEL_20;
      case 7u:
        v19 = *a2;
        swift_errorRetain(v19);
        *a1 = v19;
        v9 = a1;
        v10 = a3;
        v11 = 7;
        goto LABEL_20;
      case 0xAu:
        v20 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        v9 = a1;
        v10 = a3;
        v11 = 10;
        goto LABEL_20;
      case 0xCu:
        v32 = a2[1];
        *a1 = *a2;
        a1[1] = v32;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        swift_bridgeObjectRetain();
        v9 = a1;
        v10 = a3;
        v11 = 12;
        goto LABEL_20;
      case 0xEu:
        v33 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
        v9 = a1;
        v10 = a3;
        v11 = 14;
        goto LABEL_20;
      case 0xFu:
        v21 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = *(int *)(sub_1000BA294(&qword_100BEA2D0) + 48);
        v23 = (_QWORD *)((char *)a1 + v22);
        v24 = (_QWORD *)((char *)a2 + v22);
        v25 = v24[1];
        *v23 = *v24;
        v23[1] = v25;
        swift_bridgeObjectRetain();
        v9 = a1;
        v10 = a3;
        v11 = 15;
        goto LABEL_20;
      case 0x10u:
        v26 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        v27 = *(int *)(sub_1000BA294(&qword_100BEA2D0) + 48);
        v28 = (_QWORD *)((char *)a1 + v27);
        v29 = (_QWORD *)((char *)a2 + v27);
        v30 = v29[1];
        *v28 = *v29;
        v28[1] = v30;
        swift_bridgeObjectRetain();
        v9 = a1;
        v10 = a3;
        v11 = 16;
LABEL_20:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

_QWORD *sub_1004F1EF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1004F2230((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v6 = a1;
        v7 = a3;
        v8 = 0;
        goto LABEL_19;
      case 2u:
        v9 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v6 = a1;
        v7 = a3;
        v8 = 2;
        goto LABEL_19;
      case 3u:
        v10 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = sub_1000BA294(&qword_100BEA2E8);
        *(_QWORD *)((char *)a1 + *(int *)(v11 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 48));
        v6 = a1;
        v7 = a3;
        v8 = 3;
        goto LABEL_19;
      case 4u:
        v12 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = sub_1000BA294(&qword_100BEA2E0);
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 64));
        v6 = a1;
        v7 = a3;
        v8 = 4;
        goto LABEL_19;
      case 5u:
        if (a2[1] == 1)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        v6 = a1;
        v7 = a3;
        v8 = 5;
        goto LABEL_19;
      case 6u:
        v14 = *a2;
        swift_errorRetain(v14);
        *a1 = v14;
        v6 = a1;
        v7 = a3;
        v8 = 6;
        goto LABEL_19;
      case 7u:
        v15 = *a2;
        swift_errorRetain(v15);
        *a1 = v15;
        v6 = a1;
        v7 = a3;
        v8 = 7;
        goto LABEL_19;
      case 0xAu:
        v16 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v6 = a1;
        v7 = a3;
        v8 = 10;
        goto LABEL_19;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        swift_bridgeObjectRetain();
        v6 = a1;
        v7 = a3;
        v8 = 12;
        goto LABEL_19;
      case 0xEu:
        v25 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        v6 = a1;
        v7 = a3;
        v8 = 14;
        goto LABEL_19;
      case 0xFu:
        v17 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v18 = *(int *)(sub_1000BA294(&qword_100BEA2D0) + 48);
        v19 = (_QWORD *)((char *)a1 + v18);
        v20 = (_QWORD *)((char *)a2 + v18);
        *v19 = *v20;
        v19[1] = v20[1];
        swift_bridgeObjectRetain();
        v6 = a1;
        v7 = a3;
        v8 = 15;
        goto LABEL_19;
      case 0x10u:
        v21 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = *(int *)(sub_1000BA294(&qword_100BEA2D0) + 48);
        v23 = (_QWORD *)((char *)a1 + v22);
        v24 = (_QWORD *)((char *)a2 + v22);
        *v23 = *v24;
        v23[1] = v24[1];
        swift_bridgeObjectRetain();
        v6 = a1;
        v7 = a3;
        v8 = 16;
LABEL_19:
        swift_storeEnumTagMultiPayload(v6, v7, v8);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1004F2230(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

char *sub_1004F226C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  switch(swift_getEnumCaseMultiPayload(a2))
  {
    case 2u:
      v6 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 2;
      goto LABEL_10;
    case 3u:
      v10 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = sub_1000BA294(&qword_100BEA2E8);
      *(_QWORD *)&a1[*(int *)(v11 + 48)] = *(_QWORD *)&a2[*(int *)(v11 + 48)];
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_10;
    case 4u:
      v12 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = sub_1000BA294(&qword_100BEA2E0);
      *(_QWORD *)&a1[*(int *)(v13 + 48)] = *(_QWORD *)&a2[*(int *)(v13 + 48)];
      *(_QWORD *)&a1[*(int *)(v13 + 64)] = *(_QWORD *)&a2[*(int *)(v13 + 64)];
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_10;
    case 0xAu:
      v14 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v7 = a1;
      v8 = a3;
      v9 = 10;
      goto LABEL_10;
    case 0xEu:
      v19 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v7 = a1;
      v8 = a3;
      v9 = 14;
      goto LABEL_10;
    case 0xFu:
      v15 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      v16 = sub_1000BA294(&qword_100BEA2D0);
      *(_OWORD *)&a1[*(int *)(v16 + 48)] = *(_OWORD *)&a2[*(int *)(v16 + 48)];
      v7 = a1;
      v8 = a3;
      v9 = 15;
      goto LABEL_10;
    case 0x10u:
      v17 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = sub_1000BA294(&qword_100BEA2D0);
      *(_OWORD *)&a1[*(int *)(v18 + 48)] = *(_OWORD *)&a2[*(int *)(v18 + 48)];
      v7 = a1;
      v8 = a3;
      v9 = 16;
LABEL_10:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1004F24A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_1004F2230((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 2u:
        v6 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 2;
        goto LABEL_11;
      case 3u:
        v10 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = sub_1000BA294(&qword_100BEA2E8);
        *(_QWORD *)&a1[*(int *)(v11 + 48)] = *(_QWORD *)&a2[*(int *)(v11 + 48)];
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_11;
      case 4u:
        v12 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v13 = sub_1000BA294(&qword_100BEA2E0);
        *(_QWORD *)&a1[*(int *)(v13 + 48)] = *(_QWORD *)&a2[*(int *)(v13 + 48)];
        *(_QWORD *)&a1[*(int *)(v13 + 64)] = *(_QWORD *)&a2[*(int *)(v13 + 64)];
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_11;
      case 0xAu:
        v14 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v7 = a1;
        v8 = a3;
        v9 = 10;
        goto LABEL_11;
      case 0xEu:
        v15 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        v7 = a1;
        v8 = a3;
        v9 = 14;
        goto LABEL_11;
      case 0xFu:
        v16 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        v17 = sub_1000BA294(&qword_100BEA2D0);
        *(_OWORD *)&a1[*(int *)(v17 + 48)] = *(_OWORD *)&a2[*(int *)(v17 + 48)];
        v7 = a1;
        v8 = a3;
        v9 = 15;
        goto LABEL_11;
      case 0x10u:
        v18 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        v19 = sub_1000BA294(&qword_100BEA2D0);
        *(_OWORD *)&a1[*(int *)(v19 + 48)] = *(_OWORD *)&a2[*(int *)(v19 + 48)];
        v7 = a1;
        v8 = a3;
        v9 = 16;
LABEL_11:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1004F2938(uint64_t result)
{
  *(_BYTE *)(result + 16) = 112;
  return result;
}

uint64_t *sub_1004F2944(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for PreviewLocation(0);
      v13 = (char *)&loc_1004F2A1C + 4 * byte_1009A8448[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for SavedLocation(0);
      if (swift_getEnumCaseMultiPayload(a2) == 1)
      {
        v10 = type metadata accessor for SavedLocation.Placeholder(0);
        v11 = 1;
      }
      else
      {
        v10 = type metadata accessor for Location(0);
        v11 = 0;
      }
      (*(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(v10 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v9, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

double sub_1004F2C24(id *a1)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for PreviewLocation(0);
    switch(swift_getEnumCaseMultiPayload(a1))
    {
      case 0u:
        goto LABEL_6;
      case 1u:
        v4 = type metadata accessor for LocationOfInterest(0);
        goto LABEL_8;
      case 2u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
        v9 = type metadata accessor for Location(0);
        if (_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
          return result;
        v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
        v7 = v8;
        v5 = v9;
        break;
      case 3u:
        *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
        return result;
      default:
        return result;
    }
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for SavedLocation(0);
    if (swift_getEnumCaseMultiPayload(a1) == 1)
      v4 = type metadata accessor for SavedLocation.Placeholder(0);
    else
LABEL_6:
      v4 = type metadata accessor for Location(0);
LABEL_8:
    v5 = v4;
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v7 = (uint64_t)a1;
LABEL_9:
    v6(v7, v5);
  }
  return result;
}

void *sub_1004F2D54(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for PreviewLocation(0);
    v10 = (char *)&loc_1004F2E00 + 4 * byte_1009A8450[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for SavedLocation(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for SavedLocation.Placeholder(0);
      v9 = 1;
    }
    else
    {
      v8 = type metadata accessor for Location(0);
      v9 = 0;
    }
    (*(void (**)(void *, const void *))(*(_QWORD *)(v8 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, v7, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1004F300C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  if (a1 != a2)
  {
    sub_1001C8E48((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for PreviewLocation(0);
      v10 = (char *)&loc_1004F30C8 + 4 * byte_1009A8454[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for SavedLocation(0);
      if (swift_getEnumCaseMultiPayload(a2) == 1)
      {
        v8 = type metadata accessor for SavedLocation.Placeholder(0);
        v9 = 1;
      }
      else
      {
        v8 = type metadata accessor for Location(0);
        v9 = 0;
      }
      (*(void (**)(void *, const void *))(*(_QWORD *)(v8 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v7, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

char *sub_1004F32F4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for PreviewLocation(0);
    v11 = swift_getEnumCaseMultiPayload(a2);
    if (v11 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v19 = type metadata accessor for SearchLocation(0);
      v20 = *(int *)(v19 + 32);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
      {
        v24 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
      }
      v26 = *(int *)(v19 + 36);
      v27 = &a1[v26];
      v28 = &a2[v26];
      *(_OWORD *)v27 = *(_OWORD *)v28;
      v27[16] = v28[16];
      v13 = a1;
      v14 = v10;
      v15 = 2;
    }
    else if (v11 == 1)
    {
      v25 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
      v13 = a1;
      v14 = v10;
      v15 = 1;
    }
    else
    {
      if (v11)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_19:
        v16 = a1;
        v17 = a3;
        v18 = 1;
LABEL_20:
        swift_storeEnumTagMultiPayload(v16, v17, v18);
        return a1;
      }
      v12 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = a1;
      v14 = v10;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    goto LABEL_19;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for SavedLocation(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for SavedLocation.Placeholder(0);
      v9 = 1;
    }
    else
    {
      v8 = type metadata accessor for Location(0);
      v9 = 0;
    }
    (*(void (**)(char *, char *))(*(_QWORD *)(v8 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, v7, v9);
    v16 = a1;
    v17 = a3;
    v18 = 0;
    goto LABEL_20;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1004F3564(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  if (a1 == a2)
    return a1;
  sub_1001C8E48((uint64_t)a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for PreviewLocation(0);
    v11 = swift_getEnumCaseMultiPayload(a2);
    if (v11 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v19 = type metadata accessor for SearchLocation(0);
      v20 = *(int *)(v19 + 32);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
      {
        v24 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
      }
      v26 = *(int *)(v19 + 36);
      v27 = &a1[v26];
      v28 = &a2[v26];
      *(_OWORD *)v27 = *(_OWORD *)v28;
      v27[16] = v28[16];
      v13 = a1;
      v14 = v10;
      v15 = 2;
    }
    else if (v11 == 1)
    {
      v25 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
      v13 = a1;
      v14 = v10;
      v15 = 1;
    }
    else
    {
      if (v11)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_20:
        v16 = a1;
        v17 = a3;
        v18 = 1;
LABEL_21:
        swift_storeEnumTagMultiPayload(v16, v17, v18);
        return a1;
      }
      v12 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = a1;
      v14 = v10;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for SavedLocation(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for SavedLocation.Placeholder(0);
      v9 = 1;
    }
    else
    {
      v8 = type metadata accessor for Location(0);
      v9 = 0;
    }
    (*(void (**)(char *, char *))(*(_QWORD *)(v8 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, v7, v9);
    v16 = a1;
    v17 = a3;
    v18 = 0;
    goto LABEL_21;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

double sub_1004F37E4@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 48);
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 56);
  sub_10009D328(*(_QWORD *)a1, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = DeviceIsSlow(v14) ^ 1;
  v17 = static Color.primary.getter(v16);
  v18 = (_QWORD *)(a7 + *(int *)(type metadata accessor for TipView(0) + 32));
  *v18 = swift_getKeyPath(&unk_1009A84C0);
  v19 = sub_1000BA294(&qword_100BC2908);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  *(_QWORD *)(a7 + 32) = v8;
  *(_QWORD *)(a7 + 40) = v9;
  *(_BYTE *)(a7 + 48) = v10;
  *(_QWORD *)(a7 + 56) = v23;
  *(_QWORD *)(a7 + 64) = v11;
  *(_QWORD *)(a7 + 72) = v22;
  *(_QWORD *)(a7 + 80) = v12;
  *(_QWORD *)(a7 + 88) = v21;
  *(_QWORD *)(a7 + 96) = v13;
  *(_BYTE *)a7 = v15;
  *(_QWORD *)(a7 + 8) = 0x4040800000000000;
  *(_QWORD *)(a7 + 16) = v17;
  *(_BYTE *)(a7 + 24) = a2;
  *(_BYTE *)(a7 + 25) = 1;
  *(_QWORD *)(a7 + 104) = a3;
  *(_QWORD *)(a7 + 112) = a4;
  *(_QWORD *)(a7 + 120) = a5;
  *(_QWORD *)(a7 + 128) = a6;
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ReportWeatherTipViewFactory()
{
  return objc_opt_self(_TtC7Weather27ReportWeatherTipViewFactory);
}

_QWORD *sub_1004F3944(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v14 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
      v15 = *(int *)(v14 + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      *((_BYTE *)a1 + *(int *)(v14 + 64)) = *((_BYTE *)a2 + *(int *)(v14 + 64));
      v10 = a1;
      v11 = a3;
      v12 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v9 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_1004F3A64(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v1 = a1;
  result = swift_getEnumCaseMultiPayload(a1);
  if ((_DWORD)result == 2)
  {
    v1 += *(int *)(sub_1000BA294((uint64_t *)&unk_100BFFA70) + 48);
    v3 = type metadata accessor for WeatherMapOverlayKind(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = type metadata accessor for DetailCondition(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
}

_QWORD *sub_1004F3AD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v11 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
    v12 = *(int *)(v11 + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    *((_BYTE *)a1 + *(int *)(v11 + 64)) = *((_BYTE *)a2 + *(int *)(v11 + 64));
    v8 = a1;
    v9 = a3;
    v10 = 2;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for DetailCondition(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

_QWORD *sub_1004F3BCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for Navigate.Destination);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v11 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
      v12 = *(int *)(v11 + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      *((_BYTE *)a1 + *(int *)(v11 + 64)) = *((_BYTE *)a2 + *(int *)(v11 + 64));
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t type metadata accessor for Navigate.Destination(uint64_t a1)
{
  return sub_100098190(a1, qword_100BEA558, (uint64_t)&nominal type descriptor for Navigate.Destination);
}

_QWORD *sub_1004F3CF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v11 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
    v12 = *(int *)(v11 + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    *((_BYTE *)a1 + *(int *)(v11 + 64)) = *((_BYTE *)a2 + *(int *)(v11 + 64));
    v8 = a1;
    v9 = a3;
    v10 = 2;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for DetailCondition(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

_QWORD *sub_1004F3DE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for Navigate.Destination);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v11 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
      v12 = *(int *)(v11 + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      *((_BYTE *)a1 + *(int *)(v11 + 64)) = *((_BYTE *)a2 + *(int *)(v11 + 64));
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1004F3EF8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _BYTE v5[32];
  _QWORD v6[3];

  result = type metadata accessor for DetailCondition(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    result = type metadata accessor for WeatherMapOverlayKind(319);
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout3(v5, (char *)&value witness table for Builtin.Int64 + 64, *(_QWORD *)(result - 8) + 64, &unk_1009A8500);
      v6[2] = v5;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v6);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1004F3FA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for Navigate.Destination(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v14 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
      v15 = *(int *)(v14 + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      *((_BYTE *)a1 + *(int *)(v14 + 64)) = *((_BYTE *)a2 + *(int *)(v14 + 64));
      v10 = a1;
      v11 = v7;
      v12 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_9;
      }
      v9 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = a1;
      v11 = v7;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
LABEL_9:
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    return a1;
  }
  v13 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1004F40E8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for Navigate.Destination(0);
  result = swift_getEnumCaseMultiPayload(a1);
  if ((_DWORD)result == 2)
  {
    a1 += *(int *)(sub_1000BA294((uint64_t *)&unk_100BFFA70) + 48);
    v3 = type metadata accessor for WeatherMapOverlayKind(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = type metadata accessor for DetailCondition(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *sub_1004F4168(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for Navigate.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v12 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
    v13 = *(int *)(v12 + 48);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    *((_BYTE *)a1 + *(int *)(v12 + 64)) = *((_BYTE *)a2 + *(int *)(v12 + 64));
    v9 = a1;
    v10 = v6;
    v11 = 2;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_7;
    }
    v8 = type metadata accessor for DetailCondition(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1004F4280(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for Navigate.Destination);
    v6 = type metadata accessor for Navigate.Destination(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v12 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
      v13 = *(int *)(v12 + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      *((_BYTE *)a1 + *(int *)(v12 + 64)) = *((_BYTE *)a2 + *(int *)(v12 + 64));
      v9 = a1;
      v10 = v6;
      v11 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_8;
      }
      v8 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v6;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
LABEL_8:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1004F43B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for Navigate.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v12 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
    v13 = *(int *)(v12 + 48);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *((_BYTE *)a1 + *(int *)(v12 + 64)) = *((_BYTE *)a2 + *(int *)(v12 + 64));
    v9 = a1;
    v10 = v6;
    v11 = 2;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_7;
    }
    v8 = type metadata accessor for DetailCondition(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1004F44C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for Navigate.Destination);
    v6 = type metadata accessor for Navigate.Destination(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v12 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
      v13 = *(int *)(v12 + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      *((_BYTE *)a1 + *(int *)(v12 + 64)) = *((_BYTE *)a2 + *(int *)(v12 + 64));
      v9 = a1;
      v10 = v6;
      v11 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_8;
      }
      v8 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = a1;
      v10 = v6;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
LABEL_8:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004F45F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F4604);
}

uint64_t sub_1004F4604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = type metadata accessor for Navigate.Destination(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1004F468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F4698);
}

uint64_t sub_1004F4698(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for Navigate.Destination(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for Navigate(uint64_t a1)
{
  return sub_100098190(a1, qword_100BEA5E8, (uint64_t)&nominal type descriptor for Navigate);
}

uint64_t sub_1004F4720(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Navigate.Destination(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1009A8500;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004F4790(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for Navigate.Destination(0);
  v2[5] = v3;
  v2[6] = sub_1000BAF8C(v3);
  v4 = type metadata accessor for Navigate(0);
  v2[7] = v4;
  v2[8] = sub_1000BAF8C(v4);
  v5 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5);
  return swift_task_switch(sub_1004F4824, v6, v7);
}

uint64_t sub_1004F4824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  swift_release();
  if (qword_100BC24D8 != -1)
    swift_once(&qword_100BC24D8, sub_1006F39A0);
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = type metadata accessor for Logger(0);
  sub_1000AECD4(v3, (uint64_t)qword_100CAF270);
  v4 = sub_1000A6594(v2, v1, type metadata accessor for Navigate);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 64);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 48);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136446210;
    sub_1000A6594(v8, v9, type metadata accessor for Navigate.Destination);
    v12 = String.init<A>(describing:)(v9);
    *(_QWORD *)(v0 + 16) = sub_1000CE1C8(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease();
    sub_10006BD20(v8, type metadata accessor for Navigate);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Performing Navigate instruction: %{public}s", v10, 0xCu);
    swift_arrayDestroy(v11, 1);
    sub_1000986F0(v11);
    sub_1000986F0((uint64_t)v10);
  }
  else
  {
    sub_10006BD20(*(_QWORD *)(v0 + 64), type metadata accessor for Navigate);
  }

  v14 = *(_QWORD *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 32);
  if (*(_BYTE *)(v15 + *(int *)(*(_QWORD *)(v0 + 56) + 20)) == 1)
  {
    v16 = swift_task_alloc(32);
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = v14;
    v15 = static Animation.default.getter(v16);
    withAnimation<A>(_:_:)(v15, sub_1004F4E90, v16, &type metadata for () + 1);
    swift_release();
    swift_task_dealloc(v16);
  }
  else
  {
    sub_1004F4A9C();
  }
  sub_1000C2BAC();
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004F4A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[12];

  v1 = type metadata accessor for WeatherMapOverlayKind(0);
  v10[4] = *(_QWORD *)(v1 - 8);
  v10[5] = v1;
  __chkstk_darwin(v1);
  v10[3] = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DetailCondition(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for Navigate.Destination(0);
  __chkstk_darwin(v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A6594(v0, (uint64_t)v7, v8);
  v9 = (char *)sub_1004F4BE8 + 4 * byte_1009A84F0[swift_getEnumCaseMultiPayload(v7)];
  __asm { BR              X10 }
}

uint64_t sub_1004F4BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  __n128 v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v0, v4);
  v8 = *(uint64_t (**)(uint64_t))(v5 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v6, v4);
  v9 = type metadata accessor for PerformanceTestAction(0);
  swift_storeEnumTagMultiPayload(v1, v9, 0);
  swift_storeEnumTagMultiPayload(v1, v2, 17);
  *(_QWORD *)(v7 - 96) = 0;
  *(_OWORD *)(v7 - 128) = 0u;
  *(_OWORD *)(v7 - 112) = 0u;
  swift_retain();
  sub_1000A5EBC(v1, v7 - 128, v8);
  sub_100159C94(v7 - 128);
  sub_10006BD20(v1, type metadata accessor for MainAction);
  v10 = swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v6, v4, v10);
}

uint64_t sub_1004F4E44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_100BEA62C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10014E920;
  return sub_1004F4790(a1);
}

void sub_1004F4E90()
{
  sub_1004F4A9C();
}

uint64_t *sub_1004F4EB4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = type metadata accessor for UVIndexComponentViewModel(0);
    v9 = *(int *)(v8 + 28);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for WeatherDescription(0);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    v14 = swift_bridgeObjectRetain();
    v13(v10, v11, v12, v14);
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 32));
    v15 = a3[5];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v8) = v17[8];
    swift_bridgeObjectRetain();
    sub_10008D47C(v18, v8);
    *(_QWORD *)v16 = v18;
    v16[8] = v8;
    v19 = a3[6];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)v21;
    LOBYTE(v8) = v21[8];
    sub_10008D47C(*(_QWORD *)v21, v8);
    *(_QWORD *)v20 = v22;
    v20[8] = v8;
    v23 = a3[7];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(_QWORD *)v25;
    LOBYTE(v8) = v25[8];
    sub_10008D47C(*(_QWORD *)v25, v8);
    *(_QWORD *)v24 = v26;
    v24[8] = v8;
    v27 = a3[8];
    v28 = (uint64_t *)((char *)v4 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v29) == 1)
    {
      v31 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v30, v32);
    v34 = a3[9];
    v35 = (char *)v4 + v34;
    v36 = (char *)a2 + v34;
    v37 = sub_1000BA294(&qword_100BDD668);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  }
  return v4;
}

uint64_t sub_1004F50A8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for UVIndexComponentViewModel(0) + 28);
  v5 = type metadata accessor for WeatherDescription(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  sub_1000B15F8(*(_QWORD *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  v6 = a1 + a2[8];
  sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[9];
  v9 = sub_1000BA294(&qword_100BDD668);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t sub_1004F51C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = type metadata accessor for UVIndexComponentViewModel(0);
  v8 = *(int *)(v7 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for WeatherDescription(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
  v13 = swift_bridgeObjectRetain();
  v12(v9, v10, v11, v13);
  *(_QWORD *)(a1 + *(int *)(v7 + 32)) = *(_QWORD *)(a2 + *(int *)(v7 + 32));
  v14 = a3[5];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  LOBYTE(v7) = *(_BYTE *)(v16 + 8);
  swift_bridgeObjectRetain();
  sub_10008D47C(v17, v7);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v7;
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  LOBYTE(v7) = *(_BYTE *)(v20 + 8);
  sub_10008D47C(*(_QWORD *)v20, v7);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v7;
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)v24;
  LOBYTE(v7) = *(_BYTE *)(v24 + 8);
  sub_10008D47C(*(_QWORD *)v24, v7);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(v23 + 8) = v7;
  v26 = a3[8];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v28) == 1)
  {
    v30 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
    v31 = 1;
  }
  else
  {
    *v27 = *v28;
    swift_retain();
    v31 = 0;
  }
  swift_storeEnumTagMultiPayload(v27, v29, v31);
  v32 = a3[9];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

_QWORD *sub_1004F538C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for UVIndexComponentViewModel(0);
  v7 = *(int *)(v6 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherDescription(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v8) = v13[8];
  sub_10008D47C(*(_QWORD *)v13, (char)v8);
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v8;
  sub_1000B15F8(v15, v16);
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v8) = v19[8];
  sub_10008D47C(*(_QWORD *)v19, (char)v8);
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v8;
  sub_1000B15F8(v21, v22);
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)v25;
  LOBYTE(v8) = v25[8];
  sub_10008D47C(*(_QWORD *)v25, (char)v8);
  v27 = *(_QWORD *)v24;
  v28 = v24[8];
  *(_QWORD *)v24 = v26;
  v24[8] = (char)v8;
  sub_1000B15F8(v27, v28);
  if (a1 != a2)
  {
    v29 = a3[8];
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    sub_100021A14((uint64_t)a1 + v29, &qword_100BC37D8);
    v32 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v31) == 1)
    {
      v33 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
      v34 = 1;
    }
    else
    {
      *v30 = *v31;
      swift_retain();
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v32, v34);
  }
  v35 = a3[9];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

_OWORD *sub_1004F55A0(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = type metadata accessor for UVIndexComponentViewModel(0);
  v8 = *(int *)(v7 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for WeatherDescription(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
  v12 = a3[5];
  v13 = a3[6];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  v14[8] = v15[8];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  v16[8] = v17[8];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = (char *)a1 + v19;
  v23 = (char *)a2 + v19;
  v24 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v23) == 1)
  {
    v25 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload(v22, v24, 1);
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

_QWORD *sub_1004F5718(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for UVIndexComponentViewModel(0);
  v8 = *(int *)(v7 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for WeatherDescription(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
  swift_bridgeObjectRelease();
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = v14[8];
  v16 = *(_QWORD *)v13;
  v17 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = (char)v14;
  sub_1000B15F8(v16, v17);
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)v20;
  LOBYTE(v20) = v20[8];
  v22 = *(_QWORD *)v19;
  v23 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = (char)v20;
  sub_1000B15F8(v22, v23);
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  LOBYTE(v26) = v26[8];
  v28 = *(_QWORD *)v25;
  v29 = v25[8];
  *(_QWORD *)v25 = v27;
  v25[8] = (char)v26;
  sub_1000B15F8(v28, v29);
  if (a1 != a2)
  {
    v30 = a3[8];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    sub_100021A14((uint64_t)a1 + v30, &qword_100BC37D8);
    v33 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v32) == 1)
    {
      v34 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
      swift_storeEnumTagMultiPayload(v31, v33, 1);
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
  }
  v35 = a3[9];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t sub_1004F58F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F5900);
}

uint64_t sub_1004F5900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1000DD04C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  if ((_DWORD)v3 != 254)
  {
    v11 = sub_1000BA294((uint64_t *)&unk_100C09CA0);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v11;
      v12 = a3[8];
    }
    else
    {
      v7 = sub_1000BA294(&qword_100BDD668);
      v12 = a3[9];
    }
    v8 = v4 + v12;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  v9 = *(unsigned __int8 *)(v4 + a3[5] + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1004F59B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F59C4);
}

uint64_t sub_1004F59C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1000DD04C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(v5 + a4[5] + 8) = -(char)v4;
      return result;
    }
    v11 = sub_1000BA294((uint64_t *)&unk_100C09CA0);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[8];
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BDD668);
      v12 = a4[9];
    }
    v10 = v5 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t sub_1004F5A7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB7620, 1);
}

uint64_t sub_1004F5A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v37 = a1;
  v35 = type metadata accessor for Font.Leading(0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for WeatherDescription(0);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContentSizeCategory(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v14 = type metadata accessor for UVIndexComponentView(0);
  sub_100109D64();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ContentSizeCategory.extraExtraLarge(_:), v7);
  v15 = sub_1004F5D00((uint64_t)v13, (uint64_t)v10);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v16(v13, v7);
  v17 = v2 + *(int *)(v14 + 28);
  v18 = *(_QWORD *)v17;
  LOBYTE(v7) = *(_BYTE *)(v17 + 8);
  sub_10008D47C(*(_QWORD *)v17, v7);
  sub_100109B54();
  v20 = v19;
  v21 = sub_1000B15F8(v18, v7);
  if (!v15)
  {
    if ((v20 & 1) == 0)
    {
      v22 = static Font.subheadline.getter(v21);
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if ((v20 & 1) != 0)
  {
LABEL_5:
    v22 = static Font.footnote.getter(v21);
    goto LABEL_7;
  }
  v22 = static Font.caption2.getter(v21);
LABEL_7:
  v23 = v22;
  v24 = type metadata accessor for UVIndexComponentViewModel(0);
  v25 = v34;
  v26 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v6, v2 + *(int *)(v24 + 28), v36);
  v27 = v33;
  v28 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v4, enum case for Font.Leading.tight(_:), v35);
  v29 = Font.leading(_:)(v4, v23);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  WeatherDescription.formatted(font:color:)(v29, 0);
  swift_release();
  v30 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v25 + 8))(v6, v26, v30);
}

BOOL sub_1004F5D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v13)(char *, uint64_t);
  int v14;
  unint64_t v15;
  int v16;
  int v17;
  unint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v20 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)&v20 - v10, a2, v4, v9);
  v13 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v14 = v13(v11, v4);
  v15 = 0;
  v16 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v14 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v14 == enum case for ContentSizeCategory.small(_:))
    {
      v15 = 1;
      goto LABEL_24;
    }
    if (v14 == enum case for ContentSizeCategory.medium(_:))
    {
      v15 = 2;
      goto LABEL_24;
    }
    if (v14 == enum case for ContentSizeCategory.large(_:))
      goto LABEL_7;
    if (v14 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      v15 = 4;
    }
    else if (v14 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      v15 = 5;
    }
    else if (v14 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      v15 = 6;
    }
    else if (v14 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      v15 = 7;
    }
    else if (v14 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      v15 = 8;
    }
    else if (v14 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      v15 = 9;
    }
    else if (v14 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      v15 = 10;
    }
    else
    {
      if (v14 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        sub_100098820((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
LABEL_7:
        v15 = 3;
        goto LABEL_24;
      }
      v15 = 11;
    }
  }
LABEL_24:
  ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a1, v4);
  v17 = v13(v7, v4);
  if (v17 == v16)
  {
    v18 = 0;
  }
  else if (v17 == enum case for ContentSizeCategory.small(_:))
  {
    v18 = 1;
  }
  else if (v17 == enum case for ContentSizeCategory.medium(_:))
  {
    v18 = 2;
  }
  else
  {
    if (v17 != enum case for ContentSizeCategory.large(_:))
    {
      if (v17 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        v18 = 4;
        return v15 < v18;
      }
      if (v17 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        v18 = 5;
        return v15 < v18;
      }
      if (v17 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        v18 = 6;
        return v15 < v18;
      }
      if (v17 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        v18 = 7;
        return v15 < v18;
      }
      if (v17 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        v18 = 8;
        return v15 < v18;
      }
      if (v17 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        v18 = 9;
        return v15 < v18;
      }
      if (v17 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        v18 = 10;
        return v15 < v18;
      }
      if (v17 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v18 = 11;
        return v15 < v18;
      }
      sub_100098820((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    }
    v18 = 3;
  }
  return v15 < v18;
}

void sub_1004F6080(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t OpaqueTypeConformance2;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  char v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;

  v2 = v1;
  v76 = a1;
  v74 = type metadata accessor for AutomationInfo(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v75 = v4;
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v68 = sub_1000BA294(&qword_100BEA6D0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v69 = sub_1000BA294(&qword_100BEA6D8);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  sub_100098728();
  v15 = v14 - v13;
  v72 = sub_1000BA294(&qword_100BD9A48);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - v20;
  sub_1000BA294(&qword_100BD9A50);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v73 = v23;
  v77 = type metadata accessor for UVIndexComponentView(0);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100098728();
  v27 = v26 - v25;
  v28 = objc_msgSend((id)objc_opt_self(UIFont), "wu_systemUsesExuberatedLineHeight");
  v29 = (uint64_t *)v2;
  sub_10000AB54(v2, v27, type metadata accessor for UVIndexComponentView);
  if (v28)
  {
    v30 = v27 + *(int *)(v77 + 20);
    v31 = *(_QWORD *)v30;
    v32 = *(_BYTE *)(v30 + 8);
    sub_10008D47C(*(_QWORD *)v30, v32);
    sub_1007A5B80();
    v34 = v33;
    sub_1000B15F8(v31, v32);
    sub_1000215BC(v27, type metadata accessor for UVIndexComponentView);
    if (v34)
      v36 = 0.0;
    else
      v36 = -4.0;
    if (v34)
      v37 = 1.0;
    else
      v37 = 2.0;
  }
  else
  {
    sub_1000215BC(v27, type metadata accessor for UVIndexComponentView);
    v37 = 2.0;
    v36 = -4.0;
  }
  *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v35);
  *(_QWORD *)(v12 + 8) = 0;
  *(_BYTE *)(v12 + 16) = 0;
  v38 = sub_1000BA294(&qword_100BEA6E0);
  sub_1004F6534(v29, v12 + *(int *)(v38 + 44), v36, v37);
  static AccessibilityChildBehavior.ignore.getter(v39);
  v40 = sub_1004F772C();
  v41 = v68;
  View.accessibilityElement(children:)(v8, v68, v40);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v8, v71);
  sub_100021A14(v12, &qword_100BEA6D0);
  v78 = v41;
  v79 = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityRespondsToUserInteraction(_:)(1, v69, OpaqueTypeConformance2);
  sub_100098820(v15, *(uint64_t (**)(uint64_t, uint64_t))(v67 + 8));
  v78 = sub_1008ECF84();
  v79 = v43;
  v44 = sub_100114EF8();
  v45 = Text.init<A>(_:)(&v78, &type metadata for String, v44);
  v47 = v46;
  LOBYTE(v41) = v48 & 1;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_1000D31B4(v45, v47, v41);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v18, &qword_100BD9A48);
  v49 = type metadata accessor for AutomationCellInfo(0);
  v50 = v75;
  swift_storeEnumTagMultiPayload(v75, v49, 15);
  swift_storeEnumTagMultiPayload(v50, v74, 1);
  v51 = v73;
  sub_100335458();
  sub_1000215BC(v50, type metadata accessor for AutomationInfo);
  sub_100021A14((uint64_t)v21, &qword_100BD9A48);
  v53 = static Edge.Set.top.getter(v52);
  v54 = (char *)v29 + *(int *)(v77 + 28);
  v55 = *(_QWORD *)v54;
  LOBYTE(v50) = v54[8];
  sub_10008D47C(*(_QWORD *)v54, v50);
  sub_100109B54();
  LOBYTE(v40) = v56;
  sub_1000B15F8(v55, v50);
  v57 = 0.0;
  if ((v40 & 1) != 0)
    v57 = -5.0;
  v58 = EdgeInsets.init(_all:)(v57);
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v65 = v76;
  sub_10003773C(v51, v76, &qword_100BD9A50);
  v66 = v65 + *(int *)(sub_1000BA294(&qword_100BEA6F0) + 36);
  *(_BYTE *)v66 = v53;
  *(double *)(v66 + 8) = v58;
  *(_QWORD *)(v66 + 16) = v60;
  *(_QWORD *)(v66 + 24) = v62;
  *(_QWORD *)(v66 + 32) = v64;
  *(_BYTE *)(v66 + 40) = 0;
  sub_100021A14(v51, &qword_100BD9A50);
}

void sub_1004F6534(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  Swift::String v33;
  uint64_t *v34;
  Swift::String v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  __n128 v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  char *v92;
  unint64_t v93;
  char *v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char v119;
  char v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  int v129;
  int v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t, uint64_t);
  unsigned int v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t KeyPath;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  __int16 v185;
  char v186;
  double v187;
  char v188;
  double v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  _QWORD v195[6];
  __int128 v196;
  __int128 v197;
  __int128 v198;

  v170 = a2;
  v7 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v7);
  v140 = (uint64_t)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UVIndexComponentView(0);
  __chkstk_darwin(v9);
  v168 = (uint64_t)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = type metadata accessor for ContentSizeCategory(0);
  v166 = *(_QWORD *)(KeyPath - 8);
  __chkstk_darwin(KeyPath);
  v165 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v164 = (char *)&v139 - v13;
  v162 = type metadata accessor for HorizontalBarPointView(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_1000BA294(&qword_100BDAE70);
  __chkstk_darwin(v159);
  v175 = (uint64_t)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v163 = (uint64_t)&v139 - v17;
  v153 = type metadata accessor for FontWithSmallVariantModifier(0);
  __chkstk_darwin(v153);
  v152 = (uint64_t *)((char *)&v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v149 = type metadata accessor for Font.TextStyle(0);
  v148 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v147 = (char *)&v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1000BA294(&qword_100BEA6F8);
  __chkstk_darwin(v151);
  v150 = (char *)&v139 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_1000BA294(&qword_100BDB000);
  v176 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v178 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v154 = (char *)&v139 - v23;
  v174 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio(0);
  v146 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v173 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v25);
  v158 = (uint64_t)&v139 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v139 - v28;
  v30 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v30);
  v32 = (char *)&v139 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v33);
  v34 = a1;
  v172 = (uint64_t)a1;
  v179 = *a1;
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v179, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v35);
  v36 = LocalizedStringKey.init(stringInterpolation:)(v32);
  v156 = Text.init(_:tableName:bundle:comment:)(v36, v38, v37 & 1, v39, 0, 0, 0, 0);
  v155 = v40;
  v157 = v41;
  v43 = v42 & 1;
  v44 = static Font.largeTitle.getter(v156);
  v45 = static Font.title2.getter();
  v169 = v9;
  v145 = (char *)v34 + *(int *)(v9 + 28);
  v46 = *(_QWORD *)v145;
  v47 = v145[8];
  sub_10008D47C(*(_QWORD *)v145, v47);
  sub_100109B54();
  LOBYTE(v9) = v48;
  sub_1000B15F8(v46, v47);
  v49 = enum case for Font.Leading.tight(_:);
  v144 = enum case for Font.Leading.tight(_:);
  v50 = type metadata accessor for Font.Leading(0);
  v143 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104);
  v171 = v29;
  v142 = v50;
  v143(v29, v49, v50);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v50);
  v51 = v158;
  sub_10003773C((uint64_t)v29, v158, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v52 = sub_10040BDEC(v44, v45, v9 & 1, v51);
  v53 = v156;
  v54 = v155;
  v55 = Text.font(_:)(v52, v156, v155, v43, v157);
  v57 = v56;
  LOBYTE(v51) = v58;
  v141 = v59;
  swift_release();
  swift_release();
  swift_release();
  sub_1000D31B4(v53, v54, v43);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v171, &qword_100BCCDA8);
  v60 = v173;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter(v61);
  v157 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)(v60, 1, v55, v57, v51 & 1, v141);
  v156 = v62;
  LODWORD(v155) = v63;
  v158 = v64;
  sub_1000D31B4(v55, v57, v51 & 1);
  v65 = swift_bridgeObjectRelease();
  v146 = *(_QWORD *)(v146 + 8);
  ((void (*)(char *, uint64_t, __n128))v146)(v60, v174, v65);
  v66 = *(_QWORD *)(v172 + 24);
  v179 = *(_QWORD *)(v172 + 16);
  v180 = (char *)v66;
  v67 = sub_100114EF8();
  swift_bridgeObjectRetain();
  v68 = Text.init<A>(_:)(&v179, &type metadata for String, v67);
  v70 = v69;
  v72 = v71;
  LOBYTE(v67) = v73 & 1;
  v74 = v148;
  v75 = v147;
  v76 = v149;
  v77 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v148 + 104))(v147, enum case for Font.TextStyle.title3(_:), v149);
  static Font.Weight.semibold.getter(v77);
  v78 = static Font.system(_:weight:)(v75);
  v79 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v75, v76);
  v80 = static Font.headline.getter(v79);
  v81 = *(_QWORD *)v145;
  LOBYTE(v75) = v145[8];
  sub_10008D47C(*(_QWORD *)v145, (char)v75);
  sub_100109B54();
  LOBYTE(v49) = v82;
  sub_1000B15F8(v81, (char)v75);
  v83 = (uint64_t)v171;
  v84 = v142;
  v143(v171, v144, v142);
  _s7Weather24LocationCompositionStateOwst_0(v83, 0, 1, v84);
  v85 = v153;
  v86 = v152;
  sub_10003773C(v83, (uint64_t)v152 + *(int *)(v153 + 24), &qword_100BCCDA8);
  *v86 = v78;
  v86[1] = v80;
  *((_BYTE *)v86 + *(int *)(v85 + 28)) = v49 & 1;
  v87 = v151;
  v88 = (uint64_t)v150;
  sub_10000AB54((uint64_t)v86, (uint64_t)&v150[*(int *)(v151 + 36)], type metadata accessor for FontWithSmallVariantModifier);
  *(_QWORD *)v88 = v68;
  *(_QWORD *)(v88 + 8) = v70;
  *(_BYTE *)(v88 + 16) = v67;
  *(_QWORD *)(v88 + 24) = v72;
  *(_QWORD *)(v88 + 32) = 0;
  *(double *)(v88 + 40) = a3;
  sub_1000D55D4(v68, v70, v67);
  swift_bridgeObjectRetain();
  sub_1000215BC((uint64_t)v86, type metadata accessor for FontWithSmallVariantModifier);
  sub_100021A14(v83, &qword_100BCCDA8);
  v89 = v70;
  v90 = v172;
  sub_1000D31B4(v68, v89, v67);
  v91 = swift_bridgeObjectRelease();
  v92 = v173;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter(v91);
  v93 = sub_1004F7770();
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)(v92, 1, v87, v93);
  ((void (*)(char *, uint64_t))v146)(v92, v174);
  sub_100021A14(v88, &qword_100BEA6F8);
  v94 = v154;
  (*(void (**)(void))(v176 + 32))();
  v95 = *(double *)(v90 + 8) * 100.0;
  if (qword_100BC25E0 != -1)
    swift_once(&qword_100BC25E0, sub_1007B1860);
  v96 = qword_100CAF408;
  swift_bridgeObjectRetain();
  v98 = static Color.white.getter(v97);
  v99 = v160;
  HorizontalBarPointView.init(point:pointColor:gradient:)(*(_QWORD *)&v95, 0, v98, v96);
  v100 = v169;
  v101 = sub_1000BA294(&qword_100BDD668);
  v102 = ScaledValue.wrappedValue.getter(&v179, v101);
  v103 = v179;
  static Alignment.center.getter(v102);
  _FrameLayout.init(width:height:alignment:)(0, 1, v103, 0);
  v104 = v161;
  v105 = v175;
  v106 = v162;
  (*(void (**)(uint64_t, char *, uint64_t))(v161 + 16))(v175, v99, v162);
  v107 = (_OWORD *)(v105 + *(int *)(v159 + 36));
  v108 = v197;
  *v107 = v196;
  v107[1] = v108;
  v107[2] = v198;
  (*(void (**)(char *, uint64_t))(v104 + 8))(v99, v106);
  v109 = v163;
  sub_1004F77F4(v105, v163);
  v110 = (uint64_t)v164;
  sub_100109D64();
  v111 = v166;
  v112 = (uint64_t)v165;
  v113 = KeyPath;
  (*(void (**)(char *, _QWORD, uint64_t))(v166 + 104))(v165, enum case for ContentSizeCategory.extraExtraLarge(_:), KeyPath);
  LOBYTE(v106) = sub_1004F73A0(v110, v112);
  v114 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
  v114(v112, v113);
  v114(v110, v113);
  v115 = v168;
  sub_10000AB54(v90, v168, type metadata accessor for UVIndexComponentView);
  if ((v106 & 1) != 0)
  {
    sub_1000215BC(v115, type metadata accessor for UVIndexComponentView);
  }
  else
  {
    v116 = v115 + *(int *)(v100 + 24);
    v117 = *(_QWORD *)v116;
    v118 = *(_BYTE *)(v116 + 8);
    sub_10008D47C(*(_QWORD *)v116, v118);
    sub_10010BCB4();
    v120 = v119;
    sub_1000B15F8(v117, v118);
    sub_1000215BC(v115, type metadata accessor for UVIndexComponentView);
    if ((v120 & 1) != 0)
    {
      v174 = 0;
      v173 = 0;
      v168 = 0;
      v171 = 0;
      KeyPath = 0;
      v172 = 0;
      v130 = 0;
      goto LABEL_8;
    }
  }
  v121 = v140;
  sub_1004F5A8C(v140);
  v174 = Text.init(_:)(v121);
  v173 = v122;
  v171 = (char *)v123;
  v168 = v124 & 1;
  KeyPath = swift_getKeyPath(&unk_1009A85C0);
  v125 = v90 + *(int *)(v100 + 24);
  v126 = *(_QWORD *)v125;
  v127 = *(_BYTE *)(v125 + 8);
  sub_10008D47C(*(_QWORD *)v125, v127);
  sub_10010BCB4();
  v129 = v128 & 1;
  sub_1000B15F8(v126, v127);
  v130 = (v129 << 16) ^ 0x10000;
  v172 = 3;
LABEL_8:
  v131 = v155 & 1;
  v132 = v157;
  v133 = v156;
  v191 = v157;
  v192 = v156;
  v193 = v155 & 1;
  v194 = v158;
  v195[0] = &v191;
  v134 = v176;
  v135 = v178;
  v136 = v177;
  (*(void (**)(void))(v176 + 16))();
  v189 = a4;
  v190 = 0;
  v195[1] = v135;
  v195[2] = &v189;
  v137 = v175;
  sub_10003773C(v109, v175, &qword_100BDAE70);
  v187 = a4;
  v188 = 0;
  v195[3] = v137;
  v195[4] = &v187;
  v179 = v174;
  v180 = v173;
  v181 = v168;
  v182 = v171;
  v183 = KeyPath;
  v184 = v172;
  v186 = BYTE2(v130);
  v185 = v130;
  v195[5] = &v179;
  sub_10035E030((uint64_t)v195, v170);
  sub_1000D55D4(v132, v133, v131);
  swift_bridgeObjectRetain();
  sub_100021A14(v109, &qword_100BDAE70);
  v138 = *(void (**)(char *, uint64_t))(v134 + 8);
  v138(v94, v136);
  sub_1000D31B4(v132, v133, v131);
  swift_bridgeObjectRelease();
  sub_1004F783C(v179, (uint64_t)v180, v181, (uint64_t)v182);
  sub_100021A14(v137, &qword_100BDAE70);
  v138(v178, v136);
  sub_1000D31B4(v191, v192, v193);
  swift_bridgeObjectRelease();
}

BOOL sub_1004F73A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v19 - v9, a1, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v13 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v13 == enum case for ContentSizeCategory.small(_:))
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.medium(_:))
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.large(_:))
      goto LABEL_7;
    if (v13 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      v14 = 4;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      v14 = 5;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      v14 = 6;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      v14 = 7;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      v14 = 8;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      v14 = 9;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      v14 = 10;
    }
    else
    {
      if (v13 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a2, v4);
  v16 = v12(v8, v4);
  if (v16 == v15)
  {
    v17 = 0;
  }
  else if (v16 == enum case for ContentSizeCategory.small(_:))
  {
    v17 = 1;
  }
  else if (v16 == enum case for ContentSizeCategory.medium(_:))
  {
    v17 = 2;
  }
  else
  {
    if (v16 != enum case for ContentSizeCategory.large(_:))
    {
      if (v16 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        v17 = 4;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        v17 = 5;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        v17 = 6;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        v17 = 7;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        v17 = 8;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        v17 = 9;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        v17 = 10;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v17 = 11;
        return v14 < v17;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v17 = 3;
  }
  return v14 < v17;
}

unint64_t sub_1004F772C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEA6E8;
  if (!qword_100BEA6E8)
  {
    v1 = sub_100075EB0(&qword_100BEA6D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEA6E8);
  }
  return result;
}

unint64_t sub_1004F7770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEA700;
  if (!qword_100BEA700)
  {
    v1 = sub_100075EB0(&qword_100BEA6F8);
    sub_100157414();
    sub_100086DA4(&qword_100BDD7F8, type metadata accessor for FontWithSmallVariantModifier, (uint64_t)&unk_10099E348);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEA700);
  }
  return result;
}

uint64_t sub_1004F77F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BDAE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1004F783C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1000D31B4(a1, a2, a3 & 1);
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

unint64_t sub_1004F7884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEA708;
  if (!qword_100BEA708)
  {
    v1 = sub_100075EB0(&qword_100BEA6F0);
    sub_1004F78F0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEA708);
  }
  return result;
}

unint64_t sub_1004F78F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEA710;
  if (!qword_100BEA710)
  {
    v1 = sub_100075EB0(&qword_100BD9A50);
    sub_1004F7974();
    sub_100086DA4((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier, (uint64_t)&unk_10099E6AC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEA710);
  }
  return result;
}

unint64_t sub_1004F7974()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BEA718;
  if (!qword_100BEA718)
  {
    v1 = sub_100075EB0(&qword_100BD9A48);
    v2[0] = sub_100075EB0(&qword_100BEA6D0);
    v2[1] = sub_1004F772C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100086DA4((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEA718);
  }
  return result;
}

char *sub_1004F7A20(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        v8 = type metadata accessor for CodableError(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = a1;
        v10 = a3;
        v11 = 0;
        goto LABEL_15;
      case 1u:
        *(_QWORD *)a1 = *a2;
        swift_bridgeObjectRetain();
        v9 = a1;
        v10 = a3;
        v11 = 1;
        goto LABEL_15;
      case 2u:
        v13 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v13;
        swift_bridgeObjectRetain();
        v9 = a1;
        v10 = a3;
        v11 = 2;
        goto LABEL_15;
      case 3u:
        v14 = type metadata accessor for Location(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v9 = a1;
        v10 = a3;
        v11 = 3;
        goto LABEL_15;
      case 4u:
        v15 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v9 = a1;
        v10 = a3;
        v11 = 4;
        goto LABEL_15;
      case 5u:
        v17 = *a2;
        v16 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v16;
        v18 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v18;
        v19 = a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        *((_QWORD *)a1 + 5) = v19;
        *((_QWORD *)a1 + 6) = a2[6];
        v20 = type metadata accessor for SearchLocation(0);
        v21 = *(int *)(v20 + 32);
        __dst = &a1[v21];
        v22 = (char *)a2 + v21;
        v23 = type metadata accessor for Location(0);
        v24 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
        {
          v25 = sub_1000BA294(&qword_100BC35F8);
          memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(__dst, v22, v23);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v23);
        }
        v27 = *(int *)(v20 + 36);
        v28 = &a1[v27];
        v29 = (char *)a2 + v27;
        *(_OWORD *)v28 = *(_OWORD *)v29;
        v28[16] = v29[16];
        v9 = a1;
        v10 = a3;
        v11 = 5;
        goto LABEL_15;
      case 6u:
        v26 = type metadata accessor for Location(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        v9 = a1;
        v10 = a3;
        v11 = 6;
LABEL_15:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1004F7CD0(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
      v2 = type metadata accessor for CodableError(0);
      goto LABEL_6;
    case 1u:
    case 2u:
      swift_bridgeObjectRelease();
      return;
    case 3u:
    case 6u:
      v2 = type metadata accessor for Location(0);
      goto LABEL_6;
    case 4u:
      v2 = type metadata accessor for LocationOfInterest(0);
LABEL_6:
      v3 = v2;
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
      v5 = (uint64_t)a1;
      goto LABEL_7;
    case 5u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
      v7 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
        return;
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v5 = v6;
      v3 = v7;
LABEL_7:
      v4(v5, v3);
      return;
    default:
      return;
  }
}

_QWORD *sub_1004F7DCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *__dst;

  switch(swift_getEnumCaseMultiPayload(a2))
  {
    case 0u:
      v6 = type metadata accessor for CodableError(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 0;
      goto LABEL_13;
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_13;
    case 2u:
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 2;
      goto LABEL_13;
    case 3u:
      v11 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_13;
    case 4u:
      v12 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_13;
    case 5u:
      v14 = (void *)*a2;
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = a2[5];
      a1[4] = a2[4];
      a1[5] = v16;
      a1[6] = a2[6];
      v17 = type metadata accessor for SearchLocation(0);
      v18 = *(int *)(v17 + 32);
      __dst = (char *)a1 + v18;
      v19 = (char *)a2 + v18;
      v20 = type metadata accessor for Location(0);
      v21 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        v22 = sub_1000BA294(&qword_100BC35F8);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(__dst, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v20);
      }
      v24 = *(int *)(v17 + 36);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      *(_OWORD *)v25 = *(_OWORD *)v26;
      v25[16] = v26[16];
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_13;
    case 6u:
      v23 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
      v7 = a1;
      v8 = a3;
      v9 = 6;
LABEL_13:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1004F8054(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  char *__dst;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for SearchViewAction);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        v6 = type metadata accessor for CodableError(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 0;
        goto LABEL_14;
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_14;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v7 = a1;
        v8 = a3;
        v9 = 2;
        goto LABEL_14;
      case 3u:
        v10 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_14;
      case 4u:
        v11 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_14;
      case 5u:
        v12 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        v13 = type metadata accessor for SearchLocation(0);
        v14 = *(int *)(v13 + 32);
        __dst = (char *)a1 + v14;
        v15 = (char *)a2 + v14;
        v16 = type metadata accessor for Location(0);
        v17 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
        {
          v18 = sub_1000BA294(&qword_100BC35F8);
          memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(__dst, v15, v16);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v16);
        }
        v20 = *(int *)(v13 + 36);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = *(_OWORD *)v22;
        v21[16] = v22[16];
        *(_OWORD *)v21 = v23;
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_14;
      case 6u:
        v19 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v7 = a1;
        v8 = a3;
        v9 = 6;
LABEL_14:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1004F8314(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  switch(swift_getEnumCaseMultiPayload(a2))
  {
    case 0u:
      v6 = type metadata accessor for CodableError(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 0;
      goto LABEL_11;
    case 3u:
      v10 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_11;
    case 4u:
      v11 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_11;
    case 5u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v12 = type metadata accessor for SearchLocation(0);
      v13 = *(int *)(v12 + 32);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v19 = *(int *)(v12 + 36);
      v20 = &a1[v19];
      v21 = &a2[v19];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v20[16] = v21[16];
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_11;
    case 6u:
      v18 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      v7 = a1;
      v8 = a3;
      v9 = 6;
LABEL_11:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1004F8530(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for SearchViewAction);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        v6 = type metadata accessor for CodableError(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 0;
        goto LABEL_12;
      case 3u:
        v10 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_12;
      case 4u:
        v11 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_12;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v12 = type metadata accessor for SearchLocation(0);
        v13 = *(int *)(v12 + 32);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = type metadata accessor for Location(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
        {
          v17 = sub_1000BA294(&qword_100BC35F8);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
        }
        v19 = *(int *)(v12 + 36);
        v20 = &a1[v19];
        v21 = &a2[v19];
        *(_OWORD *)v20 = *(_OWORD *)v21;
        v20[16] = v21[16];
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_12;
      case 6u:
        v18 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        v7 = a1;
        v8 = a3;
        v9 = 6;
LABEL_12:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1004F8764(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v12;
  unint64_t v14;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;

  if (a1 == 0x5164657261656C63 && a2 == 0xEC00000079726575)
  {
    v5 = 0xEC00000079726575;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5164657261656C63, 0xEC00000079726575, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6465766965636572 && a2 == 0xED0000726F727245)
  {
    v8 = 0xED0000726F727245;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6465766965636572, 0xED0000726F727245, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6465766965636572 && a2 == 0xEF73746C75736552)
  {
    v10 = 0xEF73746C75736552;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6465766965636572, 0xEF73746C75736552, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x6465686372616573 && a2 == 0xE800000000000000)
  {
    v12 = 0xE800000000000000;
    goto LABEL_32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6465686372616573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3;
  }
  if (a1 == 0x6944646570706174 && a2 == 0xED0000776569566DLL)
  {
    v14 = 0xED0000776569566DLL;
    goto LABEL_40;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6944646570706174, 0xED0000776569566DLL, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_40:
    swift_bridgeObjectRelease(v14);
    return 4;
  }
  if (a1 == 0x6F4C646570706174 && a2 == 0xEE006E6F69746163)
  {
    v16 = 0xEE006E6F69746163;
    goto LABEL_48;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F4C646570706174, 0xEE006E6F69746163, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_48:
    swift_bridgeObjectRelease(v16);
    return 5;
  }
  if (a1 == 0xD000000000000018)
  {
    v17 = 0x8000000100A08C10;
    if (a2 == 0x8000000100A08C10)
      goto LABEL_53;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x8000000100A08C10, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
LABEL_53:
    swift_bridgeObjectRelease(v17);
    return 6;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x8000000100A08C30)
  {
    v18 = 0x8000000100A08C30;
LABEL_59:
    swift_bridgeObjectRelease(v18);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100A08C30, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
    goto LABEL_59;
  }
  if (a1 == 0x65536C65636E6163 && a2 == 0xEC00000068637261)
  {
    v20 = 0xEC00000068637261;
    goto LABEL_67;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65536C65636E6163, 0xEC00000068637261, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
LABEL_67:
    swift_bridgeObjectRelease(v20);
    return 8;
  }
  if (a1 == 0xD000000000000011)
  {
    v21 = 0x80000001009EFF90;
    if (a2 == 0x80000001009EFF90)
      goto LABEL_72;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001009EFF90, a1, a2, 0) & 1) != 0)
  {
    v21 = a2;
LABEL_72:
    swift_bridgeObjectRelease(v21);
    return 9;
  }
  if (a1 == 0xD000000000000010)
  {
    v22 = 0x8000000100A08BF0;
    if (a2 == 0x8000000100A08BF0)
      goto LABEL_77;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100A08BF0, a1, a2, 0) & 1) != 0)
  {
    v22 = a2;
LABEL_77:
    swift_bridgeObjectRelease(v22);
    return 10;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x8000000100A08BD0)
  {
    v23 = 0x8000000100A08BD0;
LABEL_83:
    swift_bridgeObjectRelease(v23);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100A08BD0, a1, a2, 0) & 1) != 0)
  {
    v23 = a2;
    goto LABEL_83;
  }
  if (a1 == 0xD00000000000001DLL && a2 == 0x8000000100A08BB0)
  {
    v24 = 0x8000000100A08BB0;
LABEL_89:
    swift_bridgeObjectRelease(v24);
    return 12;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001DLL, 0x8000000100A08BB0, a1, a2, 0) & 1) != 0)
  {
    v24 = a2;
    goto LABEL_89;
  }
  if (a1 == 0xD000000000000011)
  {
    v25 = 0x8000000100A08B90;
    if (a2 == 0x8000000100A08B90)
      goto LABEL_94;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100A08B90, a1, a2, 0) & 1) != 0)
  {
    v25 = a2;
LABEL_94:
    swift_bridgeObjectRelease(v25);
    return 13;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x8000000100A08B70)
  {
    v26 = 0x8000000100A08B70;
LABEL_100:
    swift_bridgeObjectRelease(v26);
    return 14;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A08B70, a1, a2, 0) & 1) != 0)
  {
    v26 = a2;
    goto LABEL_100;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100A08B50)
  {
    v27 = 0x8000000100A08B50;
LABEL_106:
    swift_bridgeObjectRelease(v27);
    return 15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A08B50, a1, a2, 0) & 1) != 0)
  {
    v27 = a2;
    goto LABEL_106;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100A08B30)
  {
    swift_bridgeObjectRelease(0x8000000100A08B30);
    return 16;
  }
  else
  {
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100A08B30, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v28 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t sub_1004F8E54()
{
  return 17;
}

uint64_t sub_1004F8E5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004F8E98 + 4 * byte_1009A861A[a1]))(0x5164657261656C63, 0xEC00000079726575);
}

uint64_t sub_1004F8E98()
{
  return 0x6465766965636572;
}

uint64_t sub_1004F8EE4()
{
  return 0x6944646570706174;
}

uint64_t sub_1004F8F08()
{
  return 0x6F4C646570706174;
}

unint64_t sub_1004F8F2C()
{
  return 0xD000000000000018;
}

uint64_t sub_1004F9044(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBB64();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F906C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBB64();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9094(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBA38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F90BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBA38();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F90E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB9C0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F910C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB9C0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9134(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBD44();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F915C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBD44();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9184()
{
  unsigned __int8 *v0;

  return sub_1004F8E5C(*v0);
}

uint64_t sub_1004F918C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004F8764(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004F91B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1004F8E54();
  *a1 = result;
  return result;
}

uint64_t sub_1004F91D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB948();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F91FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB948();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9224(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB984();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F924C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB984();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9274(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBAEC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F929C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBAEC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F92C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBB28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F92EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBB28();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9314(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBD08();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F933C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBD08();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9364(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBCCC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F938C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBCCC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F93B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBA74();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F93DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBA74();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9404(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB9FC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F942C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FB9FC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9454(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBC90();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F947C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBC90();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F94A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBC54();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F94CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBC54();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F94F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBC18();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F951C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBC18();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9544(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBBDC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F956C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBBDC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F9594(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBBA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F95BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBBA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F95E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBAB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F960C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FBAB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1004F9634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  type metadata accessor for Location(0);
  sub_10009D98C();
  __chkstk_darwin(v1);
  sub_100088FDC();
  type metadata accessor for LocationOfInterest(0);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100088FDC();
  type metadata accessor for SearchLocation(0);
  sub_10009D98C();
  __chkstk_darwin(v3);
  v4 = sub_100099574();
  v5 = type metadata accessor for CodableError(v4);
  __chkstk_darwin(v5);
  sub_100098728();
  type metadata accessor for SearchViewAction(0);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  sub_1000BA294(&qword_100BEA7D0);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100088FDC();
  sub_100080C0C(v0, v9, type metadata accessor for SearchViewAction);
  v11 = (char *)sub_1004F97A0 + 4 * word_1009A862C[swift_getEnumCaseMultiPayload(v9)];
  __asm { BR              X10 }
}

uint64_t sub_1004F97A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *inited;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  sub_10009C94C(v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  v6 = sub_1000BA294(&qword_100BC31F0);
  inited = (__n128 *)swift_initStackObject(v6, v0 + 11);
  v8 = sub_1000D0A28(inited, (__n128)xmmword_10097CA50);
  inited[2].n128_u64[0] = 0x726F727265;
  inited[2].n128_u64[1] = 0xE500000000000000;
  inited[4].n128_u64[1] = v3;
  sub_100077A84(v8);
  sub_10009C94C(v9, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_1000E77B0();
  v10 = sub_1000DA61C();
  sub_10009D514(v10, 0xED0000726F727245, v11);
  (*(void (**)(uint64_t, unint64_t))(v5 + 8))(v1, v3);
  v12 = (_QWORD *)v0[9];
  v12[3] = v0[8];
  v12[4] = sub_1004FB904();
  sub_100077A84(v12);
  return sub_100089084(v13, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[7] + 32));
}

void sub_1004F9E6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84[11];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[8];
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[8];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[5];
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[4];
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[8];
  uint64_t v103;
  uint64_t v104;

  v98 = sub_1000BA294(&qword_100BEA910);
  v96[4] = *(_QWORD *)(v98 - 8);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_10009D384(v3, v84[0]);
  v4 = sub_1000BA294(&qword_100BEA918);
  v95 = *(_QWORD *)(v4 - 8);
  v96[0] = v4;
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100099B38(v6, v84[0]);
  v97 = sub_1000BA294(&qword_100BEA920);
  v96[3] = *(_QWORD *)(v97 - 8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_10009BFB8(v8, v84[0]);
  v9 = sub_1000BA294(&qword_100BEA928);
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_1000C019C(v11, v84[0]);
  v12 = sub_1000BA294(&qword_100BEA930);
  v90 = *(_QWORD *)(v12 - 8);
  v91 = v12;
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_10009511C((uint64_t)v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_1000BA294(&qword_100BEA938);
  sub_1000B43A4(v15, (uint64_t)&v104);
  sub_1000BBFEC(v16);
  __chkstk_darwin(v17);
  sub_10009511C((uint64_t)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_1000BA294(&qword_100BEA940);
  sub_1000B43A4(v19, (uint64_t)&v103);
  sub_1000BBFEC(v20);
  __chkstk_darwin(v21);
  sub_100088FDC();
  sub_10009511C(v22);
  v88 = sub_1000BA294(&qword_100BEA948);
  sub_1000BBFEC(*(_QWORD *)(v88 - 8));
  __chkstk_darwin(v23);
  sub_100088FDC();
  sub_10009511C(v24);
  v87 = sub_1000BA294(&qword_100BEA950);
  sub_1000BBFEC(*(_QWORD *)(v87 - 8));
  __chkstk_darwin(v25);
  sub_100088FDC();
  sub_10009511C(v26);
  v27 = sub_1000BA294(&qword_100BEA958);
  sub_1000B43A4(v27, (uint64_t)v102);
  sub_1000BBFEC(v28);
  __chkstk_darwin(v29);
  sub_100088FDC();
  v31 = sub_1000987B4(v30);
  v32 = type metadata accessor for SearchLocation(v31);
  sub_1000B43A4(v32, (uint64_t)&v98);
  sub_10009D98C();
  __chkstk_darwin(v33);
  sub_100088FDC();
  sub_10009511C(v34);
  v35 = sub_1000BA294(&qword_100BEA960);
  sub_1000B43A4(v35, (uint64_t)v99);
  sub_1000BBFEC(v36);
  __chkstk_darwin(v37);
  sub_100088FDC();
  v39 = sub_1000987B4(v38);
  v40 = type metadata accessor for LocationOfInterest(v39);
  sub_1000B43A4(v40, (uint64_t)&v97);
  sub_1000BBFEC(v41);
  __chkstk_darwin(v42);
  sub_100088FDC();
  sub_10009511C(v43);
  v44 = sub_1000BA294(&qword_100BEA968);
  sub_1000B43A4(v44, (uint64_t)v96);
  sub_1000BBFEC(v45);
  __chkstk_darwin(v46);
  sub_100088FDC();
  v48 = sub_1000987B4(v47);
  v49 = type metadata accessor for Location(v48);
  v99[0] = *(_QWORD *)(v49 - 8);
  v99[1] = v49;
  sub_10009D98C();
  __chkstk_darwin(v50);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v51);
  sub_10009511C((uint64_t)v84 - v52);
  v53 = sub_1000BA294(&qword_100BEA970);
  sub_1000B43A4(v53, (uint64_t)v92);
  sub_1000BBFEC(v54);
  __chkstk_darwin(v55);
  sub_100088FDC();
  sub_10009511C(v56);
  v86 = sub_1000BA294(&qword_100BEA978);
  sub_1000BBFEC(*(_QWORD *)(v86 - 8));
  __chkstk_darwin(v57);
  sub_100088FDC();
  sub_10009511C(v58);
  v85 = sub_1000BA294(&qword_100BEA980);
  sub_1000BBFEC(*(_QWORD *)(v85 - 8));
  __chkstk_darwin(v59);
  sub_100088FDC();
  sub_10009511C(v60);
  v61 = sub_1000BA294(&qword_100BEA988);
  sub_1000B43A4(v61, (uint64_t)v89);
  sub_1000BBFEC(v62);
  __chkstk_darwin(v63);
  sub_100088FDC();
  v65 = sub_1000987B4(v64);
  v66 = type metadata accessor for CodableError(v65);
  sub_1000B43A4(v66, (uint64_t)&v88);
  sub_1000BBFEC(v67);
  __chkstk_darwin(v68);
  sub_100088FDC();
  sub_10009511C(v69);
  v70 = sub_1000BA294(&qword_100BEA990);
  __chkstk_darwin(v70);
  v71 = sub_100099574();
  type metadata accessor for SearchViewAction(v71);
  sub_10009D98C();
  __chkstk_darwin(v72);
  sub_100098728();
  v75 = v74 - v73;
  v100 = sub_1000BA294(&qword_100BEA998);
  v99[2] = *(_QWORD *)(v100 - 8);
  sub_10009D98C();
  __chkstk_darwin(v76);
  sub_100098728();
  v79 = v78 - v77;
  v80 = a1[3];
  v81 = a1[4];
  sub_1000DB418(a1, v80);
  v82 = sub_1004FB948();
  v99[3] = v79;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SearchViewAction.CodingKeys, &type metadata for SearchViewAction.CodingKeys, v82, v80, v81);
  sub_100080C0C(v101, v75, type metadata accessor for SearchViewAction);
  v83 = (char *)sub_1004FA394 + 4 * word_1009A864E[swift_getEnumCaseMultiPayload(v75)];
  __asm { BR              X10 }
}

void sub_1004FA394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 - 600);
  v6 = sub_1000CFDB8();
  sub_10009DECC(v6, v7, v8);
  sub_1000DB2CC();
  v9 = *(_QWORD *)(v4 - 592);
  sub_1000C5628((uint64_t)&type metadata for SearchViewAction.ReceivedErrorCodingKeys, v4 - 72);
  sub_100086DA4(&qword_100BD0408, (uint64_t (*)(uint64_t))&type metadata accessor for CodableError, (uint64_t)&protocol conformance descriptor for CodableError);
  v10 = sub_10009DB68();
  sub_10009D6BC(v10, v11, *(_QWORD *)(v4 - 568), v2, v12);
  sub_100098748(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 584) + 8));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 128) + 8))(v1, v0);
  sub_1000B44B0();
}

void sub_1004FA9F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105[23];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[3];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[3];
  uint64_t v116;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  char v125[8];
  uint64_t v126;

  v115[2] = a2;
  v118 = sub_1000BA294(&qword_100BEA7E8);
  v117[0] = *(_QWORD *)(v118 - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_10009BFB8(v4, v105[0]);
  v116 = sub_1000BA294(&qword_100BEA7F0);
  sub_1000BBFEC(*(_QWORD *)(v116 - 8));
  __chkstk_darwin(v5);
  sub_100088FDC();
  v114 = v6;
  v7 = sub_1000BA294(&qword_100BEA7F8);
  sub_1000B43A4(v7, (uint64_t)&v126);
  v117[1] = v8;
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_10009D384(v10, v105[0]);
  v109 = sub_1000BA294(&qword_100BEA800);
  sub_1000BBFEC(*(_QWORD *)(v109 - 8));
  __chkstk_darwin(v11);
  sub_100088FDC();
  v113 = v12;
  v13 = sub_1000BA294(&qword_100BEA808);
  sub_1000B43A4(v13, (uint64_t)v125);
  sub_1000BBFEC(v14);
  __chkstk_darwin(v15);
  sub_100099B38(v16, v105[0]);
  v17 = sub_1000BA294(&qword_100BEA810);
  sub_1000B43A4(v17, (uint64_t)&v123);
  sub_1000BBFEC(v18);
  __chkstk_darwin(v19);
  sub_100088FDC();
  v112 = v20;
  v108 = sub_1000BA294(&qword_100BEA818);
  sub_1000BBFEC(*(_QWORD *)(v108 - 8));
  __chkstk_darwin(v21);
  sub_100088FDC();
  v111[2] = v22;
  v23 = sub_1000BA294(&qword_100BEA820);
  sub_1000B43A4(v23, (uint64_t)&v119);
  sub_1000BBFEC(v24);
  __chkstk_darwin(v25);
  sub_1000C019C(v26, v105[0]);
  v27 = sub_1000BA294(&qword_100BEA828);
  sub_1000B43A4(v27, (uint64_t)&v116);
  sub_1000BBFEC(v28);
  __chkstk_darwin(v29);
  sub_100088FDC();
  v110 = v30;
  v107 = sub_1000BA294(&qword_100BEA830);
  sub_1000BBFEC(*(_QWORD *)(v107 - 8));
  __chkstk_darwin(v31);
  sub_10009511C((uint64_t)v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_1000BA294(&qword_100BEA838);
  sub_1000B43A4(v33, (uint64_t)v117);
  sub_1000BBFEC(v34);
  __chkstk_darwin(v35);
  sub_100088FDC();
  v111[0] = v36;
  v106 = sub_1000BA294(&qword_100BEA840);
  sub_1000BBFEC(*(_QWORD *)(v106 - 8));
  __chkstk_darwin(v37);
  sub_100088FDC();
  sub_10009511C(v38);
  v39 = sub_1000BA294(&qword_100BEA848);
  sub_1000B43A4(v39, (uint64_t)&v113);
  sub_1000BBFEC(v40);
  __chkstk_darwin(v41);
  sub_10009511C((uint64_t)v105 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_1000BA294(&qword_100BEA850);
  sub_1000B43A4(v43, (uint64_t)&v114);
  sub_1000BBFEC(v44);
  __chkstk_darwin(v45);
  sub_100088FDC();
  sub_10009511C(v46);
  v47 = sub_1000BA294(&qword_100BEA858);
  sub_1000B43A4(v47, (uint64_t)v115);
  sub_1000BBFEC(v48);
  __chkstk_darwin(v49);
  sub_100088FDC();
  v122 = v50;
  v51 = sub_1000BA294(&qword_100BEA860);
  sub_1000B43A4(v51, (uint64_t)&v112);
  sub_1000BBFEC(v52);
  __chkstk_darwin(v53);
  sub_100088FDC();
  sub_10009511C(v54);
  v55 = sub_1000BA294(&qword_100BEA868);
  sub_1000B43A4(v55, (uint64_t)v111);
  sub_1000BBFEC(v56);
  __chkstk_darwin(v57);
  sub_100088FDC();
  sub_10009511C(v58);
  v59 = sub_1000BA294(&qword_100BEA870);
  v120 = *(_QWORD *)(v59 - 8);
  v121 = v59;
  sub_10009D98C();
  __chkstk_darwin(v60);
  sub_100098728();
  v63 = v62 - v61;
  v119 = type metadata accessor for SearchViewAction(0);
  sub_10009D98C();
  __chkstk_darwin(v64);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v65);
  sub_1000BA30C();
  __chkstk_darwin(v66);
  sub_1000BA30C();
  __chkstk_darwin(v67);
  v69 = (char *)v105 - v68;
  __chkstk_darwin(v70);
  v72 = (char *)v105 - v71;
  __chkstk_darwin(v73);
  v75 = (char *)v105 - v74;
  __chkstk_darwin(v76);
  v78 = (char *)v105 - v77;
  __chkstk_darwin(v79);
  v81 = (char *)v105 - v80;
  v82 = a1[3];
  v83 = a1[4];
  v123 = a1;
  sub_1000DB418(a1, v82);
  v84 = sub_1004FB948();
  v85 = v124;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SearchViewAction.CodingKeys, &type metadata for SearchViewAction.CodingKeys, v84, v82, v83);
  if (!v85)
  {
    v105[2] = (uint64_t)v72;
    v105[4] = (uint64_t)v78;
    v105[3] = (uint64_t)v75;
    v105[5] = (uint64_t)v69;
    v105[6] = (uint64_t)v81;
    v86 = v121;
    v87 = v63;
    v88 = KeyedDecodingContainer.allKeys.getter(v121);
    v89 = *(_QWORD *)(v88 + 16);
    if (v89)
    {
      v124 = v63;
      v105[1] = 0;
      v90 = *(unsigned __int8 *)(v88 + 32);
      v91 = sub_10055FF58(1, v89, v88, v88 + 32, 0, (2 * v89) | 1);
      v93 = v92;
      v95 = v94;
      sub_1000986E8();
      if (v93 == v95 >> 1)
        __asm { BR              X9 }
      v96 = v91;
      v87 = v124;
    }
    else
    {
      v96 = v88;
    }
    v98 = v119;
    v97 = v120;
    v99 = type metadata accessor for DecodingError(0);
    swift_allocError(v99, &protocol witness table for DecodingError, 0, 0);
    v101 = v100;
    sub_1000BA294(&qword_100BC6CF8);
    *v101 = v98;
    v102 = KeyedDecodingContainer.codingPath.getter(v86);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v102, 0xD00000000000002BLL, 0x80000001009F2600, 0);
    v103 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v99 - 8) + 104))(v101, enum case for DecodingError.typeMismatch(_:), v99);
    swift_willThrow(v103, v104);
    swift_unknownObjectRelease(v96);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v87, v86);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v123);
  sub_1000B44B0();
}

uint64_t sub_1004FB870(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEA7E0, type metadata accessor for SearchViewAction, (uint64_t)&unk_1009A8758);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_1004FB8B0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004FA9F0(a1, a2);
}

void sub_1004FB8C4(_QWORD *a1)
{
  sub_1004F9E6C(a1);
}

void sub_1004FB8D8()
{
  sub_100086DA4(&qword_100BEA7C8, type metadata accessor for SearchViewAction, (uint64_t)&unk_1009A8730);
}

unint64_t sub_1004FB904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEA7D8;
  if (!qword_100BEA7D8)
  {
    v1 = sub_100075EB0(&qword_100BEA7D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEA7D8);
  }
  return result;
}

unint64_t sub_1004FB948()
{
  unint64_t result;

  result = qword_100BEA878;
  if (!qword_100BEA878)
  {
    result = swift_getWitnessTable(&unk_1009A981C, &type metadata for SearchViewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA878);
  }
  return result;
}

unint64_t sub_1004FB984()
{
  unint64_t result;

  result = qword_100BEA880;
  if (!qword_100BEA880)
  {
    result = swift_getWitnessTable(&unk_1009A97CC, &type metadata for SearchViewAction.EnterZeroKeywordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA880);
  }
  return result;
}

unint64_t sub_1004FB9C0()
{
  unint64_t result;

  result = qword_100BEA888;
  if (!qword_100BEA888)
  {
    result = swift_getWitnessTable(&unk_1009A977C, &type metadata for SearchViewAction.ClearLastAddedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA888);
  }
  return result;
}

unint64_t sub_1004FB9FC()
{
  unint64_t result;

  result = qword_100BEA890;
  if (!qword_100BEA890)
  {
    result = swift_getWitnessTable(&unk_1009A972C, &type metadata for SearchViewAction.SaveLastAddedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA890);
  }
  return result;
}

unint64_t sub_1004FBA38()
{
  unint64_t result;

  result = qword_100BEA898;
  if (!qword_100BEA898)
  {
    result = swift_getWitnessTable(&unk_1009A96DC, &type metadata for SearchViewAction.CannotAddLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA898);
  }
  return result;
}

unint64_t sub_1004FBA74()
{
  unint64_t result;

  result = qword_100BEA8A0;
  if (!qword_100BEA8A0)
  {
    result = swift_getWitnessTable(&unk_1009A968C, &type metadata for SearchViewAction.RemoveSearchFieldFocusRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8A0);
  }
  return result;
}

unint64_t sub_1004FBAB0()
{
  unint64_t result;

  result = qword_100BEA8A8;
  if (!qword_100BEA8A8)
  {
    result = swift_getWitnessTable(&unk_1009A963C, &type metadata for SearchViewAction.UnfocusSearchFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8A8);
  }
  return result;
}

unint64_t sub_1004FBAEC()
{
  unint64_t result;

  result = qword_100BEA8B0;
  if (!qword_100BEA8B0)
  {
    result = swift_getWitnessTable(&unk_1009A95EC, &type metadata for SearchViewAction.FocusSearchFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8B0);
  }
  return result;
}

unint64_t sub_1004FBB28()
{
  unint64_t result;

  result = qword_100BEA8B8;
  if (!qword_100BEA8B8)
  {
    result = swift_getWitnessTable(&unk_1009A959C, &type metadata for SearchViewAction.HideSearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8B8);
  }
  return result;
}

unint64_t sub_1004FBB64()
{
  unint64_t result;

  result = qword_100BEA8C0;
  if (!qword_100BEA8C0)
  {
    result = swift_getWitnessTable(&unk_1009A954C, &type metadata for SearchViewAction.CancelSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8C0);
  }
  return result;
}

unint64_t sub_1004FBBA0()
{
  unint64_t result;

  result = qword_100BEA8C8;
  if (!qword_100BEA8C8)
  {
    result = swift_getWitnessTable(&unk_1009A94FC, &type metadata for SearchViewAction.TappedSearchLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8C8);
  }
  return result;
}

unint64_t sub_1004FBBDC()
{
  unint64_t result;

  result = qword_100BEA8D0;
  if (!qword_100BEA8D0)
  {
    result = swift_getWitnessTable(&unk_1009A94AC, &type metadata for SearchViewAction.TappedLocationOfInterestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8D0);
  }
  return result;
}

unint64_t sub_1004FBC18()
{
  unint64_t result;

  result = qword_100BEA8E0;
  if (!qword_100BEA8E0)
  {
    result = swift_getWitnessTable(&unk_1009A945C, &type metadata for SearchViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8E0);
  }
  return result;
}

unint64_t sub_1004FBC54()
{
  unint64_t result;

  result = qword_100BEA8E8;
  if (!qword_100BEA8E8)
  {
    result = swift_getWitnessTable(&unk_1009A940C, &type metadata for SearchViewAction.TappedDimViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8E8);
  }
  return result;
}

unint64_t sub_1004FBC90()
{
  unint64_t result;

  result = qword_100BEA8F0;
  if (!qword_100BEA8F0)
  {
    result = swift_getWitnessTable(&unk_1009A93BC, &type metadata for SearchViewAction.SearchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8F0);
  }
  return result;
}

unint64_t sub_1004FBCCC()
{
  unint64_t result;

  result = qword_100BEA8F8;
  if (!qword_100BEA8F8)
  {
    result = swift_getWitnessTable(&unk_1009A936C, &type metadata for SearchViewAction.ReceivedResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA8F8);
  }
  return result;
}

unint64_t sub_1004FBD08()
{
  unint64_t result;

  result = qword_100BEA900;
  if (!qword_100BEA900)
  {
    result = swift_getWitnessTable(&unk_1009A931C, &type metadata for SearchViewAction.ReceivedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA900);
  }
  return result;
}

unint64_t sub_1004FBD44()
{
  unint64_t result;

  result = qword_100BEA908;
  if (!qword_100BEA908)
  {
    result = swift_getWitnessTable(&unk_1009A92CC, &type metadata for SearchViewAction.ClearedQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA908);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SearchViewAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 16) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v5 = v6 - 17;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchViewAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1004FBE54 + 4 * byte_1009A8697[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1004FBE88 + 4 * byte_1009A8692[v4]))();
}

uint64_t sub_1004FBE88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FBE90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004FBE98);
  return result;
}

uint64_t sub_1004FBEA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004FBEACLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1004FBEB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FBEB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchViewAction.CodingKeys()
{
  return &type metadata for SearchViewAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ClearedQueryCodingKeys()
{
  return &type metadata for SearchViewAction.ClearedQueryCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ReceivedErrorCodingKeys()
{
  return &type metadata for SearchViewAction.ReceivedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ReceivedResultsCodingKeys()
{
  return &type metadata for SearchViewAction.ReceivedResultsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.SearchedCodingKeys()
{
  return &type metadata for SearchViewAction.SearchedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedDimViewCodingKeys()
{
  return &type metadata for SearchViewAction.TappedDimViewCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedLocationCodingKeys()
{
  return &type metadata for SearchViewAction.TappedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedLocationOfInterestCodingKeys()
{
  return &type metadata for SearchViewAction.TappedLocationOfInterestCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedSearchLocationCodingKeys()
{
  return &type metadata for SearchViewAction.TappedSearchLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.CancelSearchCodingKeys()
{
  return &type metadata for SearchViewAction.CancelSearchCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.HideSearchResultsCodingKeys()
{
  return &type metadata for SearchViewAction.HideSearchResultsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.FocusSearchFieldCodingKeys()
{
  return &type metadata for SearchViewAction.FocusSearchFieldCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.UnfocusSearchFieldCodingKeys()
{
  return &type metadata for SearchViewAction.UnfocusSearchFieldCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.RemoveSearchFieldFocusRequestCodingKeys()
{
  return &type metadata for SearchViewAction.RemoveSearchFieldFocusRequestCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.CannotAddLocationCodingKeys()
{
  return &type metadata for SearchViewAction.CannotAddLocationCodingKeys;
}

uint64_t _s7Weather16SearchViewActionO23ReceivedErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004FBFF8 + 4 * byte_1009A869C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004FC018 + 4 * byte_1009A86A1[v4]))();
}

_BYTE *sub_1004FBFF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004FC018(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004FC020(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004FC028(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004FC030(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004FC038(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchViewAction.SaveLastAddedLocationCodingKeys()
{
  return &type metadata for SearchViewAction.SaveLastAddedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ClearLastAddedLocationCodingKeys()
{
  return &type metadata for SearchViewAction.ClearLastAddedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.EnterZeroKeywordCodingKeys()
{
  return &type metadata for SearchViewAction.EnterZeroKeywordCodingKeys;
}

unint64_t sub_1004FC078()
{
  unint64_t result;

  result = qword_100BEA9A8;
  if (!qword_100BEA9A8)
  {
    result = swift_getWitnessTable(&unk_1009A8B1C, &type metadata for SearchViewAction.SaveLastAddedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9A8);
  }
  return result;
}

unint64_t sub_1004FC0B8()
{
  unint64_t result;

  result = qword_100BEA9B0;
  if (!qword_100BEA9B0)
  {
    result = swift_getWitnessTable(&unk_1009A8DB4, &type metadata for SearchViewAction.TappedSearchLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9B0);
  }
  return result;
}

unint64_t sub_1004FC0F8()
{
  unint64_t result;

  result = qword_100BEA9B8;
  if (!qword_100BEA9B8)
  {
    result = swift_getWitnessTable(&unk_1009A8E6C, &type metadata for SearchViewAction.TappedLocationOfInterestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9B8);
  }
  return result;
}

unint64_t sub_1004FC138()
{
  unint64_t result;

  result = qword_100BEA9C0;
  if (!qword_100BEA9C0)
  {
    result = swift_getWitnessTable(&unk_1009A8F24, &type metadata for SearchViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9C0);
  }
  return result;
}

unint64_t sub_1004FC178()
{
  unint64_t result;

  result = qword_100BEA9C8;
  if (!qword_100BEA9C8)
  {
    result = swift_getWitnessTable(&unk_1009A902C, &type metadata for SearchViewAction.SearchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9C8);
  }
  return result;
}

unint64_t sub_1004FC1B8()
{
  unint64_t result;

  result = qword_100BEA9D0;
  if (!qword_100BEA9D0)
  {
    result = swift_getWitnessTable(&unk_1009A90E4, &type metadata for SearchViewAction.ReceivedResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9D0);
  }
  return result;
}

unint64_t sub_1004FC1F8()
{
  unint64_t result;

  result = qword_100BEA9D8;
  if (!qword_100BEA9D8)
  {
    result = swift_getWitnessTable(&unk_1009A919C, &type metadata for SearchViewAction.ReceivedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9D8);
  }
  return result;
}

unint64_t sub_1004FC238()
{
  unint64_t result;

  result = qword_100BEA9E0;
  if (!qword_100BEA9E0)
  {
    result = swift_getWitnessTable(&unk_1009A92A4, &type metadata for SearchViewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9E0);
  }
  return result;
}

unint64_t sub_1004FC278()
{
  unint64_t result;

  result = qword_100BEA9E8;
  if (!qword_100BEA9E8)
  {
    result = swift_getWitnessTable(&unk_1009A91C4, &type metadata for SearchViewAction.ClearedQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9E8);
  }
  return result;
}

unint64_t sub_1004FC2B8()
{
  unint64_t result;

  result = qword_100BEA9F0;
  if (!qword_100BEA9F0)
  {
    result = swift_getWitnessTable(&unk_1009A91EC, &type metadata for SearchViewAction.ClearedQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9F0);
  }
  return result;
}

unint64_t sub_1004FC2F8()
{
  unint64_t result;

  result = qword_100BEA9F8;
  if (!qword_100BEA9F8)
  {
    result = swift_getWitnessTable(&unk_1009A910C, &type metadata for SearchViewAction.ReceivedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEA9F8);
  }
  return result;
}

unint64_t sub_1004FC338()
{
  unint64_t result;

  result = qword_100BEAA00;
  if (!qword_100BEAA00)
  {
    result = swift_getWitnessTable(&unk_1009A9134, &type metadata for SearchViewAction.ReceivedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA00);
  }
  return result;
}

unint64_t sub_1004FC378()
{
  unint64_t result;

  result = qword_100BEAA08;
  if (!qword_100BEAA08)
  {
    result = swift_getWitnessTable(&unk_1009A9054, &type metadata for SearchViewAction.ReceivedResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA08);
  }
  return result;
}

unint64_t sub_1004FC3B8()
{
  unint64_t result;

  result = qword_100BEAA10;
  if (!qword_100BEAA10)
  {
    result = swift_getWitnessTable(&unk_1009A907C, &type metadata for SearchViewAction.ReceivedResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA10);
  }
  return result;
}

unint64_t sub_1004FC3F8()
{
  unint64_t result;

  result = qword_100BEAA18;
  if (!qword_100BEAA18)
  {
    result = swift_getWitnessTable(&unk_1009A8F9C, &type metadata for SearchViewAction.SearchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA18);
  }
  return result;
}

unint64_t sub_1004FC438()
{
  unint64_t result;

  result = qword_100BEAA20;
  if (!qword_100BEAA20)
  {
    result = swift_getWitnessTable(&unk_1009A8FC4, &type metadata for SearchViewAction.SearchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA20);
  }
  return result;
}

unint64_t sub_1004FC478()
{
  unint64_t result;

  result = qword_100BEAA28;
  if (!qword_100BEAA28)
  {
    result = swift_getWitnessTable(&unk_1009A8F4C, &type metadata for SearchViewAction.TappedDimViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA28);
  }
  return result;
}

unint64_t sub_1004FC4B8()
{
  unint64_t result;

  result = qword_100BEAA30;
  if (!qword_100BEAA30)
  {
    result = swift_getWitnessTable(&unk_1009A8F74, &type metadata for SearchViewAction.TappedDimViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA30);
  }
  return result;
}

unint64_t sub_1004FC4F8()
{
  unint64_t result;

  result = qword_100BEAA38;
  if (!qword_100BEAA38)
  {
    result = swift_getWitnessTable(&unk_1009A8E94, &type metadata for SearchViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA38);
  }
  return result;
}

unint64_t sub_1004FC538()
{
  unint64_t result;

  result = qword_100BEAA40;
  if (!qword_100BEAA40)
  {
    result = swift_getWitnessTable(&unk_1009A8EBC, &type metadata for SearchViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA40);
  }
  return result;
}

unint64_t sub_1004FC578()
{
  unint64_t result;

  result = qword_100BEAA48;
  if (!qword_100BEAA48)
  {
    result = swift_getWitnessTable(&unk_1009A8DDC, &type metadata for SearchViewAction.TappedLocationOfInterestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA48);
  }
  return result;
}

unint64_t sub_1004FC5B8()
{
  unint64_t result;

  result = qword_100BEAA50;
  if (!qword_100BEAA50)
  {
    result = swift_getWitnessTable(&unk_1009A8E04, &type metadata for SearchViewAction.TappedLocationOfInterestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA50);
  }
  return result;
}

unint64_t sub_1004FC5F8()
{
  unint64_t result;

  result = qword_100BEAA58;
  if (!qword_100BEAA58)
  {
    result = swift_getWitnessTable(&unk_1009A8D24, &type metadata for SearchViewAction.TappedSearchLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA58);
  }
  return result;
}

unint64_t sub_1004FC638()
{
  unint64_t result;

  result = qword_100BEAA60;
  if (!qword_100BEAA60)
  {
    result = swift_getWitnessTable(&unk_1009A8D4C, &type metadata for SearchViewAction.TappedSearchLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA60);
  }
  return result;
}

unint64_t sub_1004FC678()
{
  unint64_t result;

  result = qword_100BEAA68;
  if (!qword_100BEAA68)
  {
    result = swift_getWitnessTable(&unk_1009A8CD4, &type metadata for SearchViewAction.CancelSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA68);
  }
  return result;
}

unint64_t sub_1004FC6B8()
{
  unint64_t result;

  result = qword_100BEAA70;
  if (!qword_100BEAA70)
  {
    result = swift_getWitnessTable(&unk_1009A8CFC, &type metadata for SearchViewAction.CancelSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA70);
  }
  return result;
}

unint64_t sub_1004FC6F8()
{
  unint64_t result;

  result = qword_100BEAA78;
  if (!qword_100BEAA78)
  {
    result = swift_getWitnessTable(&unk_1009A8C84, &type metadata for SearchViewAction.HideSearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA78);
  }
  return result;
}

unint64_t sub_1004FC738()
{
  unint64_t result;

  result = qword_100BEAA80;
  if (!qword_100BEAA80)
  {
    result = swift_getWitnessTable(&unk_1009A8CAC, &type metadata for SearchViewAction.HideSearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA80);
  }
  return result;
}

unint64_t sub_1004FC778()
{
  unint64_t result;

  result = qword_100BEAA88;
  if (!qword_100BEAA88)
  {
    result = swift_getWitnessTable(&unk_1009A8C34, &type metadata for SearchViewAction.FocusSearchFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA88);
  }
  return result;
}

unint64_t sub_1004FC7B8()
{
  unint64_t result;

  result = qword_100BEAA90;
  if (!qword_100BEAA90)
  {
    result = swift_getWitnessTable(&unk_1009A8C5C, &type metadata for SearchViewAction.FocusSearchFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA90);
  }
  return result;
}

unint64_t sub_1004FC7F8()
{
  unint64_t result;

  result = qword_100BEAA98;
  if (!qword_100BEAA98)
  {
    result = swift_getWitnessTable(&unk_1009A8BE4, &type metadata for SearchViewAction.UnfocusSearchFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAA98);
  }
  return result;
}

unint64_t sub_1004FC838()
{
  unint64_t result;

  result = qword_100BEAAA0;
  if (!qword_100BEAAA0)
  {
    result = swift_getWitnessTable(&unk_1009A8C0C, &type metadata for SearchViewAction.UnfocusSearchFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAA0);
  }
  return result;
}

unint64_t sub_1004FC878()
{
  unint64_t result;

  result = qword_100BEAAA8;
  if (!qword_100BEAAA8)
  {
    result = swift_getWitnessTable(&unk_1009A8B94, &type metadata for SearchViewAction.RemoveSearchFieldFocusRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAA8);
  }
  return result;
}

unint64_t sub_1004FC8B8()
{
  unint64_t result;

  result = qword_100BEAAB0;
  if (!qword_100BEAAB0)
  {
    result = swift_getWitnessTable(&unk_1009A8BBC, &type metadata for SearchViewAction.RemoveSearchFieldFocusRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAB0);
  }
  return result;
}

unint64_t sub_1004FC8F8()
{
  unint64_t result;

  result = qword_100BEAAB8;
  if (!qword_100BEAAB8)
  {
    result = swift_getWitnessTable(&unk_1009A8B44, &type metadata for SearchViewAction.CannotAddLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAB8);
  }
  return result;
}

unint64_t sub_1004FC938()
{
  unint64_t result;

  result = qword_100BEAAC0;
  if (!qword_100BEAAC0)
  {
    result = swift_getWitnessTable(&unk_1009A8B6C, &type metadata for SearchViewAction.CannotAddLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAC0);
  }
  return result;
}

unint64_t sub_1004FC978()
{
  unint64_t result;

  result = qword_100BEAAC8;
  if (!qword_100BEAAC8)
  {
    result = swift_getWitnessTable(&unk_1009A8A8C, &type metadata for SearchViewAction.SaveLastAddedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAC8);
  }
  return result;
}

unint64_t sub_1004FC9B8()
{
  unint64_t result;

  result = qword_100BEAAD0;
  if (!qword_100BEAAD0)
  {
    result = swift_getWitnessTable(&unk_1009A8AB4, &type metadata for SearchViewAction.SaveLastAddedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAD0);
  }
  return result;
}

unint64_t sub_1004FC9F8()
{
  unint64_t result;

  result = qword_100BEAAD8;
  if (!qword_100BEAAD8)
  {
    result = swift_getWitnessTable(&unk_1009A8A3C, &type metadata for SearchViewAction.ClearLastAddedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAD8);
  }
  return result;
}

unint64_t sub_1004FCA38()
{
  unint64_t result;

  result = qword_100BEAAE0;
  if (!qword_100BEAAE0)
  {
    result = swift_getWitnessTable(&unk_1009A8A64, &type metadata for SearchViewAction.ClearLastAddedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAE0);
  }
  return result;
}

unint64_t sub_1004FCA78()
{
  unint64_t result;

  result = qword_100BEAAE8;
  if (!qword_100BEAAE8)
  {
    result = swift_getWitnessTable(&unk_1009A89EC, &type metadata for SearchViewAction.EnterZeroKeywordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAE8);
  }
  return result;
}

unint64_t sub_1004FCAB8()
{
  unint64_t result;

  result = qword_100BEAAF0;
  if (!qword_100BEAAF0)
  {
    result = swift_getWitnessTable(&unk_1009A8A14, &type metadata for SearchViewAction.EnterZeroKeywordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAF0);
  }
  return result;
}

unint64_t sub_1004FCAF8()
{
  unint64_t result;

  result = qword_100BEAAF8;
  if (!qword_100BEAAF8)
  {
    result = swift_getWitnessTable(&unk_1009A9214, &type metadata for SearchViewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEAAF8);
  }
  return result;
}

unint64_t sub_1004FCB38()
{
  unint64_t result;

  result = qword_100BEAB00[0];
  if (!qword_100BEAB00[0])
  {
    result = swift_getWitnessTable(&unk_1009A923C, &type metadata for SearchViewAction.CodingKeys);
    atomic_store(result, qword_100BEAB00);
  }
  return result;
}

ValueMetadata *type metadata accessor for Rotate()
{
  return &type metadata for Rotate;
}

uint64_t sub_1004FCB84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[15] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[16] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3);
  v2[17] = v4;
  v2[18] = v5;
  return swift_task_switch(sub_1004FCBF0, v4, v5);
}

uint64_t sub_1004FCBF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  if (qword_100BC24D8 != -1)
    swift_once(&qword_100BC24D8, sub_1006F39A0);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_1000AECD4(v1, (uint64_t)qword_100CAF270);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = v0[15];
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = UIInterfaceOrientation.description.getter(v5);
    v0[10] = sub_1000CE1C8(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Performing Rotate instruction: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1);
    sub_1000986F0(v7);
    sub_1000986F0((uint64_t)v6);
  }

  v10 = v0[15];
  v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v0[19] = v11;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_1004FCDF8;
  v0[14] = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1004FCE3C;
  v0[13] = &unk_100B7CBA0;
  objc_msgSend(v11, "rotateIfNeeded:completion:", v10, v0 + 10);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1004FCDF8()
{
  uint64_t v0;

  return swift_task_switch(sub_100249F60, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_1004FCE3C(uint64_t a1, char a2)
{
  return sub_1004FCE44(*(_QWORD *)(a1 + 32), a2);
}

uint64_t sub_1004FCE44(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1004FCE54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc(dword_100BEABB4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100223BE0;
  return sub_1004FCB84((uint64_t)v3, v2);
}

_QWORD *sub_1004FCEA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for NotificationsOptInComponentViewModel(0);
    *((_BYTE *)a1 + *(int *)(v8 + 20)) = *((_BYTE *)a2 + *(int *)(v8 + 20));
    v9 = *(int *)(a3 + 20);
    v10 = *(_OWORD *)((char *)a2 + v9);
    *(_OWORD *)((char *)a1 + v9) = v10;
    swift_unknownObjectRetain(v10);
  }
  return a1;
}

uint64_t sub_1004FCF44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

uint64_t sub_1004FCF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for NotificationsOptInComponentViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 20);
  v9 = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + v8) = v9;
  swift_unknownObjectRetain(v9);
  return a1;
}

uint64_t sub_1004FD000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for NotificationsOptInComponentViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = *v10;
  v12 = v10[1];
  v13 = *v9;
  *v9 = *v10;
  swift_unknownObjectRetain(v11);
  swift_unknownObjectRelease(v13);
  v9[1] = v12;
  return a1;
}

uint64_t sub_1004FD08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for NotificationsOptInComponentViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004FD0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for NotificationsOptInComponentViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = v10[1];
  v12 = *v9;
  *v9 = *v10;
  swift_unknownObjectRelease(v12);
  v9[1] = v11;
  return a1;
}

uint64_t sub_1004FD180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004FD18C);
}

uint64_t sub_1004FD18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1000BC458();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1004FD200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004FD20C);
}

uint64_t sub_1004FD20C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1000BC458();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1004FD27C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB799C, 1);
}

double sub_1004FD28C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v2 = v1;
  v32 = a1;
  v3 = sub_1000BAFA0();
  v31 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v31 + 64);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = sub_1000BC458();
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000A6594(v2, (uint64_t)v11, v12);
  v14 = Location.kind.getter(v13) & 1;
  v15 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v11, v15);
  v16 = Location.Identifier.Kind.rawValue.getter(v14);
  v18 = v17;
  v19 = Location.Identifier.Kind.rawValue.getter(1);
  v21 = v16 == v19 && v18 == v20;
  v22 = 1;
  if (!v21)
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = type metadata accessor for NotificationsOptInTipViewFactory();
  inited = swift_initStackObject(v23, v33);
  *(_BYTE *)(inited + 16) = v22 & 1;
  *(_BYTE *)(inited + 17) = 1;
  v25 = *(unsigned __int8 *)(v2 + *(int *)(v9 + 20));
  sub_1000A6594(v2, (uint64_t)v8, type metadata accessor for NotificationsOptInComponentView);
  v26 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v27 = sub_1000C2BB8((uint64_t)&unk_100B7CBD0);
  sub_1004FD5C0((uint64_t)v8, v27 + v26);
  sub_1000A6594(v2, (uint64_t)v5, type metadata accessor for NotificationsOptInComponentView);
  v28 = sub_1000C2BB8((uint64_t)&unk_100B7CBF8);
  sub_1004FD5C0((uint64_t)v5, v28 + v26);
  sub_100614BC0(v25, (uint64_t)sub_1004FD604, v27, (uint64_t)sub_1004FD614, v28, v32);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1004FD4D0(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for NotificationsOptInComponentView(0);
  v2 = type metadata accessor for NotificationsOptInComponentViewModel(0);
  return sub_1006BEBA4(*(_BYTE *)(a1 + *(int *)(v2 + 20)));
}

uint64_t sub_1004FD510(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for NotificationsOptInComponentViewModel(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NotificationsOptInComponentView(0);
  sub_1000A6594(a1, (uint64_t)v4, type metadata accessor for NotificationsOptInComponentViewModel);
  sub_1006BE4D4((uint64_t)v4);
  v5 = type metadata accessor for Location(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1004FD5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationsOptInComponentView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004FD604()
{
  return sub_1004FD620((uint64_t (*)(uint64_t))sub_1004FD4D0);
}

uint64_t sub_1004FD614()
{
  return sub_1004FD620(sub_1004FD510);
}

uint64_t sub_1004FD620(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BAFA0() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t storeEnumTagSinglePayload for ScrollDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1004FD6A4 + 4 * byte_1009A998D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004FD6D8 + 4 * byte_1009A9988[v4]))();
}

uint64_t sub_1004FD6D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FD6E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004FD6E8);
  return result;
}

uint64_t sub_1004FD6F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004FD6FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1004FD700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FD708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrollDirection()
{
  return &type metadata for ScrollDirection;
}

unint64_t sub_1004FD728()
{
  unint64_t result;

  result = qword_100BEAC48;
  if (!qword_100BEAC48)
  {
    result = swift_getWitnessTable(&unk_1009A99F4, &type metadata for ScrollDirection);
    atomic_store(result, (unint64_t *)&qword_100BEAC48);
  }
  return result;
}

void DynamicTypeSize.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v18 = a2;
  v5 = sub_1000BA294(&qword_100BEAC50);
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  __chkstk_darwin(v5);
  sub_10004A2E8();
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v11);
  v12 = sub_1004FD8DC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s10CodingKeysON, &_s10CodingKeysON, v12, v11, v10);
  if (!v2)
  {
    v13 = v9;
    v14 = v18;
    sub_1004FD918();
    v15 = v20;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&_s10CodingTypeON, v16, v20);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v13, *(unsigned int *)*(&off_100B7CE30 + v21), v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14, v13, v6);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  sub_1000B44B0();
}

unint64_t sub_1004FD8DC()
{
  unint64_t result;

  result = qword_100BEAC58;
  if (!qword_100BEAC58)
  {
    result = swift_getWitnessTable(&unk_1009A9C8C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100BEAC58);
  }
  return result;
}

unint64_t sub_1004FD918()
{
  unint64_t result;

  result = qword_100BEAC60;
  if (!qword_100BEAC60)
  {
    result = swift_getWitnessTable(&unk_1009A9C64, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_100BEAC60);
  }
  return result;
}

void DynamicTypeSize.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  _QWORD v20[2];
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_10004A2E8();
  v5 = sub_1000BA294(&qword_100BEAC68);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1004FD8DC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s10CodingKeysON, &_s10CodingKeysON, v11, v9, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v20[1], v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v3);
  if (v12 == enum case for DynamicTypeSize.xSmall(_:))
  {
    v21 = 0;
    v14 = sub_1004FDD18();
    v15 = &v21;
    v16 = v5;
LABEL_5:
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, v13, v16, &_s10CodingTypeON, v14);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_27:
    sub_1000B44B0();
    return;
  }
  if (v12 == enum case for DynamicTypeSize.small(_:))
  {
    v22 = 1;
    v14 = sub_1004FDD18();
    v15 = &v22;
    v16 = v5;
    goto LABEL_5;
  }
  if (v12 == enum case for DynamicTypeSize.medium(_:))
  {
    v23 = 2;
    v18 = sub_1004FDD18();
    v19 = &v23;
LABEL_26:
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, v17, v5, &_s10CodingTypeON, v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_27;
  }
  if (v12 == enum case for DynamicTypeSize.large(_:))
  {
    v24 = 3;
    v18 = sub_1004FDD18();
    v19 = &v24;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.xLarge(_:))
  {
    v25 = 4;
    v18 = sub_1004FDD18();
    v19 = &v25;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.xxLarge(_:))
  {
    v26 = 5;
    v18 = sub_1004FDD18();
    v19 = &v26;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    v27 = 6;
    v18 = sub_1004FDD18();
    v19 = &v27;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.accessibility1(_:))
  {
    v28 = 7;
    v18 = sub_1004FDD18();
    v19 = &v28;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.accessibility2(_:))
  {
    v29 = 8;
    v18 = sub_1004FDD18();
    v19 = &v29;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.accessibility3(_:))
  {
    v30 = 9;
    v18 = sub_1004FDD18();
    v19 = &v30;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.accessibility4(_:))
  {
    v31 = 10;
    v18 = sub_1004FDD18();
    v19 = &v31;
    goto LABEL_26;
  }
  if (v12 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    v32 = 11;
    v18 = sub_1004FDD18();
    v19 = &v32;
    goto LABEL_26;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v3, v3);
  __break(1u);
}

unint64_t sub_1004FDD18()
{
  unint64_t result;

  result = qword_100BEAC70;
  if (!qword_100BEAC70)
  {
    result = swift_getWitnessTable(&unk_1009A9C3C, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_100BEAC70);
  }
  return result;
}

BOOL sub_1004FDD54(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B5A9A0, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

BOOL sub_1004FDD98(Swift::String a1)
{
  return sub_1004FDD54(a1);
}

unint64_t sub_1004FDDB0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B5A9D8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xC)
    return 12;
  else
    return v3;
}

uint64_t sub_1004FDDF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004FDE28 + 4 * byte_1009A9A1C[a1]))(0x6C6C616D5378, 0xE600000000000000);
}

uint64_t sub_1004FDE28()
{
  return 0x6C6C616D73;
}

uint64_t sub_1004FDE3C()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1004FDE4C()
{
  return 0x656772616CLL;
}

uint64_t sub_1004FDE60()
{
  return 0x656772614C78;
}

uint64_t sub_1004FDE70()
{
  return 0x656772614C7878;
}

uint64_t sub_1004FDE88()
{
  return 0x656772614C787878;
}

uint64_t sub_1004FDEA0()
{
  return 0x6269737365636361;
}

BOOL sub_1004FDF04@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_1004FDD54(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004FDF34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10029FF44();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_1004FDF58@<W0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_1004FDD98(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004FDF80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FD8DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004FDFA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FD8DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1004FDFD0(char *a1)
{
  sub_10068C944(*a1);
}

void sub_1004FDFDC()
{
  unsigned __int8 *v0;

  sub_1004A74EC(*v0);
}

void sub_1004FDFE4(uint64_t a1)
{
  char *v1;

  sub_1001D96BC(a1, *v1);
}

void sub_1004FDFEC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D98B4(a1, *v1);
}

unint64_t sub_1004FDFF4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1004FDDB0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004FE020@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1004FDDF8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1004FE048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004FE380();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004FE0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004FE380();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1004FE0F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  DynamicTypeSize.init(from:)(a1, a2);
}

void sub_1004FE104(_QWORD *a1)
{
  DynamicTypeSize.encode(to:)(a1);
}

uint64_t _s10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1004FE164 + 4 * byte_1009A9A2D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1004FE198 + 4 * byte_1009A9A28[v4]))();
}

uint64_t sub_1004FE198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FE1A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004FE1A8);
  return result;
}

uint64_t sub_1004FE1B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004FE1BCLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1004FE1C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FE1C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingTypeOMa()
{
  return &_s10CodingTypeON;
}

uint64_t _s10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004FE224 + 4 * byte_1009A9A32[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004FE244 + 4 * byte_1009A9A37[v4]))();
}

_BYTE *sub_1004FE224(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004FE244(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004FE24C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004FE254(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004FE25C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004FE264(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_1004FE284()
{
  unint64_t result;

  result = qword_100BEAC78;
  if (!qword_100BEAC78)
  {
    result = swift_getWitnessTable(&unk_1009A9B74, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100BEAC78);
  }
  return result;
}

unint64_t sub_1004FE2C4()
{
  unint64_t result;

  result = qword_100BEAC80;
  if (!qword_100BEAC80)
  {
    result = swift_getWitnessTable(&unk_1009A9C14, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_100BEAC80);
  }
  return result;
}

unint64_t sub_1004FE304()
{
  unint64_t result;

  result = qword_100BEAC88;
  if (!qword_100BEAC88)
  {
    result = swift_getWitnessTable(&unk_1009A9AAC, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100BEAC88);
  }
  return result;
}

unint64_t sub_1004FE344()
{
  unint64_t result;

  result = qword_100BEAC90;
  if (!qword_100BEAC90)
  {
    result = swift_getWitnessTable(&unk_1009A9AD4, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100BEAC90);
  }
  return result;
}

unint64_t sub_1004FE380()
{
  unint64_t result;

  result = qword_100BEAC98;
  if (!qword_100BEAC98)
  {
    result = swift_getWitnessTable(&unk_1009A9B9C, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_100BEAC98);
  }
  return result;
}

void sub_1004FE3BC(char a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94[32];

  v93 = a3;
  v5 = type metadata accessor for TipPriorityQueue.GridEntry(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v92 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  v91 = (uint64_t)&v68 - v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  v90 = (uint64_t)&v68 - v11;
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v68 - v20;
  sub_1000BA294(&qword_100BCC760);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_1000986FC();
  v89 = v23;
  sub_10009D2A4();
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v68 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v68 - v31;
  if (a1)
  {
    if (a1 == 1)
    {
      if ((a2 & 1) != 0)
      {
        v33 = &qword_100BEB0B0;
        goto LABEL_11;
      }
    }
    else if ((a2 & 1) != 0)
    {
      v33 = &qword_100BEB4C0;
      goto LABEL_11;
    }
    v33 = &qword_100BEB2B8;
  }
  else if ((a2 & 1) != 0)
  {
    v33 = &qword_100BEACA0;
  }
  else
  {
    v33 = &qword_100BEAEA8;
  }
LABEL_11:
  v34 = *((_BYTE *)v33 + 224);
  v76 = *v33;
  v75 = v33[1];
  v74 = v33[2];
  v73 = v33[3];
  v35 = v33[8];
  v79 = v33[9];
  v80 = v35;
  v36 = v33[10];
  v77 = v33[11];
  v78 = v36;
  v37 = v33[24];
  v72 = v33[25];
  v71 = v33[26];
  v70 = v33[27];
  v38 = v33[53];
  v83 = v33[54];
  v84 = v38;
  v39 = v33[55];
  v81 = v33[56];
  v82 = v39;
  v40 = v33[61];
  v87 = v33[62];
  v88 = v40;
  v41 = v93 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map;
  v43 = v33[63];
  v42 = v33[64];
  v85 = v43;
  v86 = v42;
  sub_1000992EC(v93 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map, (uint64_t)v94);
  sub_10003773C(v41, v15, &qword_100BC4A98);
  v44 = sub_1000878BC();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v44) == 1)
  {
    sub_100021A14(v15, &qword_100BC4A98);
LABEL_16:
    v45 = 1;
    goto LABEL_17;
  }
  v69 = v37;
  sub_10009D3BC(v15 + *(int *)(v44 + 20), (uint64_t)v18);
  sub_1000215BC(v15, type metadata accessor for LocationComponentContainerViewModel);
  sub_10007C77C((uint64_t)v18, (uint64_t)v21, type metadata accessor for LocationComponentViewModel);
  if ((v34 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v21, type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10007C77C((uint64_t)v21, (uint64_t)v29, type metadata accessor for LocationComponentViewModel);
  v45 = 0;
  v46 = &v29[*(int *)(v5 + 20)];
  v47 = v72;
  *(_QWORD *)v46 = v69;
  *((_QWORD *)v46 + 1) = v47;
  v48 = v70;
  *((_QWORD *)v46 + 2) = v71;
  *((_QWORD *)v46 + 3) = v48;
LABEL_17:
  sub_1000988B8((uint64_t)v29, v45);
  sub_1002228F0((uint64_t)v29, (uint64_t)v32);
  sub_10009D3BC(v93 + *(int *)(v44 + 20) + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, (uint64_t)v26);
  v49 = &v26[*(int *)(v5 + 20)];
  v50 = v75;
  *(_QWORD *)v49 = v76;
  *((_QWORD *)v49 + 1) = v50;
  v51 = v73;
  *((_QWORD *)v49 + 2) = v74;
  *((_QWORD *)v49 + 3) = v51;
  sub_1000988B8((uint64_t)v26, 0);
  v52 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  v53 = v90;
  sub_10009D3BC(v52, v90);
  v54 = (uint64_t *)(v53 + *(int *)(v5 + 20));
  v55 = v79;
  *v54 = v80;
  v54[1] = v55;
  v56 = v77;
  v54[2] = v78;
  v54[3] = v56;
  v57 = v89;
  sub_10003773C((uint64_t)v32, v89, &qword_100BCC760);
  v58 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  v59 = v91;
  sub_10009D3BC(v58, v91);
  v60 = (uint64_t *)(v59 + *(int *)(v5 + 20));
  v61 = v83;
  *v60 = v84;
  v60[1] = v61;
  v62 = v81;
  v60[2] = v82;
  v60[3] = v62;
  v63 = sub_10009D3C4(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  v64 = v92;
  sub_10009D3BC(v63, v92);
  v65 = (uint64_t *)(v64 + *(int *)(v5 + 20));
  v66 = v87;
  *v65 = v88;
  v65[1] = v66;
  v67 = v86;
  v65[2] = v85;
  v65[3] = v67;
  sub_10087CED0((uint64_t)v26, v53, v57, v59, v64);
  sub_100021A14((uint64_t)v32, &qword_100BCC760);
  sub_100098640();
}

void sub_1004FE8AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 *v78;
  __n128 *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __n128 *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  _BYTE v137[24];

  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000878BC();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = a1;
  v12 = a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map;
  sub_1000992EC(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map, (uint64_t)v137);
  sub_10003773C(v12, v5, &qword_100BC4A98);
  if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6) == 1)
  {
    sub_100021A14(v5, &qword_100BC4A98);
    v13 = sub_1000BA294(&qword_100BCC750);
    v14 = swift_allocObject(v13, 272, 7);
    *(_OWORD *)(v14 + 16) = xmmword_10097FA60;
    v15 = sub_1000BA294(&qword_100BCC758);
    v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v17 = v16 + *(_QWORD *)(v7 + 72);
    v18 = *(_QWORD *)(v7 + 72);
    v19 = v15;
    v20 = (__n128 *)sub_1000C2514(v15, v17);
    v21 = sub_100099954(v20, (__n128)xmmword_10097CA50);
    v22 = v11;
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v21 + v16);
    *(_QWORD *)(v14 + 32) = sub_1000B4580();
    *(_QWORD *)(v14 + 40) = v23;
    *(_QWORD *)(v14 + 48) = v24;
    v25 = sub_1000C2514(v19, v17);
    *(_OWORD *)(v25 + 16) = v136;
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_newsArticle, v25 + v16);
    *(_QWORD *)(v14 + 56) = sub_1000B4580();
    *(_QWORD *)(v14 + 64) = v26;
    *(_QWORD *)(v14 + 72) = v27;
    v28 = (__n128 *)sub_1000C2514(v19, v17);
    sub_1000BD314(v28);
    sub_10009D3BC(v29 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v30);
    *(_QWORD *)(v14 + 80) = sub_1000B4580();
    *(_QWORD *)(v14 + 88) = v31;
    *(_QWORD *)(v14 + 96) = v32;
    v33 = (__n128 *)sub_1000C2514(v19, v17);
    sub_1000BD314(v33);
    sub_10009D3BC(v34 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v35);
    *(_QWORD *)(v14 + 104) = sub_1000B4580();
    *(_QWORD *)(v14 + 112) = v36;
    *(_QWORD *)(v14 + 120) = v37;
    v38 = sub_1000C2514(v19, v17);
    *(_OWORD *)(v38 + 16) = v136;
    sub_10009D3BC(v11 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, v38 + v16);
    *(_QWORD *)(v14 + 128) = sub_100080C44(v38);
    *(_QWORD *)(v14 + 136) = v39;
    *(_QWORD *)(v14 + 144) = v40;
    v41 = v18;
    v133 = v16 + 2 * v18;
    v42 = (__n128 *)sub_1000C2514(v19, v133);
    v43 = (char *)sub_100099954(v42, (__n128)xmmword_10097DA20) + v16;
    v44 = *(_QWORD *)(v11 + 16);
    v45 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1000C3608(v45, v46);
    sub_1000C3608(v44 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v43[v41]);
    *(_QWORD *)(v14 + 152) = sub_1000B4580();
    *(_QWORD *)(v14 + 160) = v47;
    *(_QWORD *)(v14 + 168) = v48;
    v49 = (__n128 *)sub_1000C2514(v19, v133);
    sub_100098A24(v49);
    v132 = v22;
    v50 = *(_QWORD *)(v22 + 16);
    v51 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10008611C(v51, v52);
    sub_10008611C(v50 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v43[v41]);
    *(_QWORD *)(v14 + 176) = sub_1000B4580();
    *(_QWORD *)(v14 + 184) = v53;
    *(_QWORD *)(v14 + 192) = v54;
    v55 = (__n128 *)sub_1000C2514(v19, v133);
    sub_100098A24(v55);
    v56 = *(_QWORD *)(v22 + 16);
    v57 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1000C3608(v57, v58);
    sub_100095B78(v56 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v43[v41], type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v14 + 200) = sub_1000B4580();
    *(_QWORD *)(v14 + 208) = v59;
    *(_QWORD *)(v14 + 216) = v60;
    v61 = (__n128 *)sub_1000C2514(v19, v133);
    sub_100098A24(v61);
    v62 = *(_QWORD *)(v22 + 16);
    v63 = sub_1000C1D24(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_100098A1C(v63, v64);
    sub_100098A1C(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)&v43[v41]);
    *(_QWORD *)(v14 + 224) = sub_1000B4580();
    *(_QWORD *)(v14 + 232) = v65;
    *(_QWORD *)(v14 + 240) = v66;
    v67 = sub_1000C2514(v19, v133);
    *(_OWORD *)(v67 + 16) = v136;
    v68 = *(_QWORD *)(v132 + 16);
    sub_100098A1C(v68 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v67 + v16);
    sub_100098A1C(v68 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v67 + v16 + v41);
    *(_QWORD *)(v14 + 248) = sub_100080C44(v67);
    *(_QWORD *)(v14 + 256) = v69;
    *(_QWORD *)(v14 + 264) = v70;
  }
  else
  {
    sub_10007C77C(v5, v10, type metadata accessor for LocationComponentContainerViewModel);
    v71 = sub_1000BA294(&qword_100BCC750);
    v72 = swift_allocObject(v71, 296, 7);
    *(_OWORD *)(v72 + 16) = xmmword_100989890;
    v73 = sub_1000BA294(&qword_100BCC758);
    v135 = *(_QWORD *)(v7 + 72);
    v74 = *(unsigned __int8 *)(v7 + 80);
    v75 = (v74 + 32) & ~v74;
    v76 = v74 | 7;
    v77 = v73;
    v78 = (__n128 *)sub_1000C3600(v73, v75 + v135);
    v79 = sub_100099954(v78, (__n128)xmmword_10097CA50);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v79 + v75);
    *(_QWORD *)(v72 + 32) = sub_1000B4588();
    *(_QWORD *)(v72 + 40) = v80;
    *(_QWORD *)(v72 + 48) = v81;
    v82 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v82);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_newsArticle, v83);
    *(_QWORD *)(v72 + 56) = sub_1000B4588();
    *(_QWORD *)(v72 + 64) = v84;
    *(_QWORD *)(v72 + 72) = v85;
    v86 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v86);
    sub_1000B4590(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v88);
    *(_QWORD *)(v72 + 80) = sub_1000B4588();
    *(_QWORD *)(v72 + 88) = v89;
    *(_QWORD *)(v72 + 96) = v90;
    v91 = (__n128 *)sub_1000BA5D8();
    sub_100098A48(v91);
    sub_1000B4590(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v93);
    *(_QWORD *)(v72 + 104) = sub_1000B4588();
    *(_QWORD *)(v72 + 112) = v94;
    *(_QWORD *)(v72 + 120) = v95;
    v96 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v96);
    sub_1000B4590(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, v97);
    *(_QWORD *)(v72 + 128) = sub_1000B4588();
    *(_QWORD *)(v72 + 136) = v98;
    *(_QWORD *)(v72 + 144) = v99;
    v100 = (__n128 *)sub_1000BA5D8();
    sub_100098A38(v100);
    sub_1000B4590(v10, v101);
    *(_QWORD *)(v72 + 152) = sub_1000B4580();
    *(_QWORD *)(v72 + 160) = v102;
    *(_QWORD *)(v72 + 168) = v103;
    v134 = v75 + 2 * v135;
    v104 = (__n128 *)swift_allocObject(v77, v134, v76);
    v105 = (char *)sub_100099954(v104, (__n128)xmmword_10097DA20) + v75;
    v106 = *(_QWORD *)(a1 + 16);
    v107 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1000C3608(v107, v108);
    sub_1000C3608(v106 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v105[v135]);
    *(_QWORD *)(v72 + 176) = sub_1000B4588();
    *(_QWORD *)(v72 + 184) = v109;
    *(_QWORD *)(v72 + 192) = v110;
    v111 = (__n128 *)sub_1000C3600(v77, v134);
    sub_1000C0D34(v111);
    v112 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_100098A1C(v112, v113);
    sub_100098A1C(v106 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)&v105[v135]);
    *(_QWORD *)(v72 + 200) = sub_1000B4588();
    *(_QWORD *)(v72 + 208) = v114;
    *(_QWORD *)(v72 + 216) = v115;
    v116 = (__n128 *)sub_1000C3600(v77, v134);
    sub_1000C0D34(v116);
    v117 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1000C3608(v117, v118);
    sub_1000C3608(v106 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)&v105[v135]);
    *(_QWORD *)(v72 + 224) = sub_1000B4588();
    *(_QWORD *)(v72 + 232) = v119;
    *(_QWORD *)(v72 + 240) = v120;
    v121 = sub_1000C3600(v77, v134);
    *(_OWORD *)(v121 + 16) = v136;
    v122 = v121 + v75;
    v123 = *(_QWORD *)(a1 + 16);
    v124 = sub_10009939C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10008611C(v124, v125);
    sub_10008611C(v123 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v122 + v135);
    *(_QWORD *)(v72 + 248) = sub_1000B4588();
    *(_QWORD *)(v72 + 256) = v126;
    *(_QWORD *)(v72 + 264) = v127;
    v128 = sub_1000C3600(v77, v134);
    *(_OWORD *)(v128 + 16) = v136;
    v129 = *(_QWORD *)(a1 + 16);
    sub_100095B78(v129 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v128 + v75, type metadata accessor for LocationComponentContainerViewModel);
    sub_100095B78(v129 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v128 + v75 + v135, type metadata accessor for LocationComponentContainerViewModel);
    *(_QWORD *)(v72 + 272) = sub_100080C44(v128);
    *(_QWORD *)(v72 + 280) = v130;
    *(_QWORD *)(v72 + 288) = v131;
    sub_1000215BC(v10, type metadata accessor for LocationComponentContainerViewModel);
  }
  sub_100098640();
}

void sub_1004FF084(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_1000986FC();
  v20 = v4;
  sub_10009D2A4();
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v19 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_100520630();
  v19 = v17;
  swift_release(v16);
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_map);
  sub_1000BD32C();
  sub_1000C5218();
  _s7Weather24LocationCompositionStateOwst_0(v15, 0, 1, v2);
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_airQuality);
  sub_1000BD32C();
  sub_1000C5218();
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_newsArticle);
  sub_1000BD32C();
  sub_1000C5218();
  sub_1000C44D4(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  v18 = v20;
  sub_1000BD32C();
  sub_1000C5218();
  sub_1001EBE0C(v19, v15, v10, v8, v18);
  sub_100098640();
}

uint64_t sub_1004FF22C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t sub_1004FF250()
{
  uint64_t v0;

  sub_1004FF22C();
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t *sub_1004FF270(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
    v7 = (char *)v4 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      v10 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
  }
  return v4;
}

uint64_t sub_1004FF358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = a1 + *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v2 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return result;
}

_QWORD *sub_1004FF3C4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1004FF480(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

_QWORD *sub_1004FF58C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1004FF648(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1004FF754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCB978);
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1004FF78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000BA294(&qword_100BCB978);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v6);
}

uint64_t type metadata accessor for ChartDateStep(uint64_t a1)
{
  uint64_t result;

  result = qword_100BEB7D0;
  if (!qword_100BEB7D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChartDateStep);
  return result;
}

void sub_1004FF80C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _DWORD v4[8];

  sub_10015BB24(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, (char *)&value witness table for Builtin.Int64 + 64, *(_QWORD *)(v2 - 8) + 64);
    swift_initEnumMetadataSingleCase(a1, 256, v4);
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4[5];
  }
}

BOOL sub_1004FF888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  char v43;
  char *v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for Date(0);
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v46 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v46 - v20;
  sub_1000BA294(&qword_100BEB7E0);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100098728();
  v25 = (uint64_t *)(v24 - v23);
  v27 = (uint64_t *)(v24 - v23 + *(int *)(v26 + 48));
  sub_1004FFBB0(a1, v24 - v23);
  sub_1004FFBB0(a2, (uint64_t)v27);
  v28 = *v25;
  v29 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v30 = *v27;
  v31 = (uint64_t)v27 + v29;
  sub_10016C5F4((uint64_t)v25 + v29, (uint64_t)v21);
  sub_10016C5F4(v31, (uint64_t)v19);
  if (v28 != v30)
  {
    sub_100021A68((uint64_t)v19, (uint64_t *)&unk_100BD35A0);
    v35 = (uint64_t)v21;
    v36 = (uint64_t *)&unk_100BD35A0;
LABEL_9:
    sub_100021A68(v35, v36);
    return 0;
  }
  v32 = v48;
  v33 = v12 + *(int *)(v8 + 48);
  sub_10007C714((uint64_t)v21, v12);
  sub_10007C714((uint64_t)v19, v33);
  v34 = v49;
  if (_s7Weather24LocationCompositionStateOwet_0(v12, 1, v49) == 1)
  {
    sub_1000BBB54((uint64_t)v19);
    sub_1000BBB54((uint64_t)v21);
    if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34) == 1)
    {
      sub_100021A68(v12, (uint64_t *)&unk_100BD35A0);
      return 1;
    }
    goto LABEL_8;
  }
  v37 = v16;
  sub_10007C714(v12, (uint64_t)v16);
  if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34) == 1)
  {
    sub_1000BBB54((uint64_t)v19);
    sub_1000BBB54((uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v34);
LABEL_8:
    v36 = &qword_100BC4978;
    v35 = v12;
    goto LABEL_9;
  }
  v39 = v32;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
  v47 = v12;
  v41 = v7;
  v40(v7, v33, v34);
  v42 = sub_1004FFBF4();
  v43 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v7, v34, v42);
  v44 = v37;
  v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
  v45(v41, v34);
  sub_1000C3C4C((uint64_t)v19);
  sub_1000C3C4C((uint64_t)v21);
  v45((uint64_t)v44, v34);
  sub_1000C3C4C(v47);
  return (v43 & 1) != 0;
}

uint64_t sub_1004FFBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChartDateStep(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004FFBF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC3590;
  if (!qword_100BC3590)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_100BC3590);
  }
  return result;
}

void sub_1004FFC34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v5 = (int *)type metadata accessor for NewsArticle(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  type metadata accessor for ArticleModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BDA950);
  sub_1000B42B0();
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v54 - v18;
  v60 = sub_1000C21E4();
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = (_QWORD *)(v22 - v21);
  v61 = a1;
  sub_1004E83A4(a1, v13);
  if (swift_getEnumCaseMultiPayload(v13) == 1)
  {
    sub_1000B4ADC(v13, v24, type metadata accessor for NewsArticle);
    v58 = *(_QWORD *)(v9 + 16);
    v54 = *(_QWORD *)(v9 + 24);
    v25 = v9 + v5[6];
    v26 = type metadata accessor for NewsArticleComponentContentViewModel(0);
    v59 = v19;
    v27 = (int *)v26;
    sub_100038D20(v25, (uint64_t)v23 + *(int *)(v26 + 20));
    v28 = v5[8];
    v29 = v9 + v5[9];
    v55 = *(_QWORD *)(v29 + 16);
    v30 = (uint64_t)v17;
    v31 = *(_QWORD *)(v29 + 24);
    v32 = v9 + v28;
    v57 = v9 + v28;
    v33 = (char *)v23 + v27[7];
    v56 = type metadata accessor for URL(0);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
    v34(v33, v32, v56);
    v35 = (uint64_t)v23 + v27[8];
    v36 = v54;
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v31);
    sub_1004FFF98(v9, v35);
    v37 = type metadata accessor for NewsArticleComponent(0);
    v38 = v60;
    v39 = *(_BYTE *)(v61 + *(int *)(v37 + 20));
    *v23 = v58;
    v23[1] = v36;
    v40 = (_QWORD *)((char *)v23 + v27[6]);
    *v40 = v55;
    v40[1] = v31;
    v41 = v27[9];
    v19 = v59;
    *((_BYTE *)v23 + v41) = v39;
    swift_storeEnumTagMultiPayload(v23, v38, 1);
    v42 = *(int *)(sub_1000BA294(&qword_100BC5FE8) + 48);
    v34((char *)v30, v57, v56);
    sub_10006BD20(v9, type metadata accessor for NewsArticle);
    *(_BYTE *)(v30 + v42) = 0;
    v43 = type metadata accessor for LocationComponentAction(0);
    sub_1000916FC(v30, v43);
    _s7Weather24LocationCompositionStateOwst_0(v30, 0, 1, v43);
    sub_1005004E0(v30, (uint64_t)v19);
  }
  else
  {
    v44 = type metadata accessor for NewsArticleComponent(0);
    v45 = v60;
    *(_BYTE *)v23 = *(_BYTE *)(v61 + *(int *)(v44 + 20));
    sub_1000916FC((uint64_t)v23, v45);
    v46 = type metadata accessor for LocationComponentAction(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v46);
    sub_10006BD20(v13, type metadata accessor for ArticleModel);
  }
  v47 = *(_QWORD *)(v2 + 16);
  v48 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)a2 = v47;
  *(_QWORD *)(a2 + 8) = v48;
  *(_QWORD *)(a2 + 16) = 1937204590;
  *(_QWORD *)(a2 + 24) = 0xE400000000000000;
  *(_BYTE *)(a2 + 32) = 0;
  v49 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  sub_1000916FC(a2, v49);
  v50 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v51 = a2 + v50[5];
  sub_1000B4ADC((uint64_t)v23, v52, type metadata accessor for NewsArticleComponentViewModel);
  v53 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v51, v53, 7);
  *(_WORD *)(a2 + v50[6]) = 256;
  sub_1005004E0((uint64_t)v19, a2 + v50[7]);
  swift_bridgeObjectRetain(v48);
  sub_100098640();
}

uint64_t sub_1004FFF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v5 = *v2;
  if (qword_100BC2390 != -1)
    swift_once(&qword_100BC2390, sub_100683DA4);
  v6 = qword_100CAEF50;
  v7 = sub_100500440();
  Configurable.setting<A>(_:)(v6, v5, v7);
  if (v12 == 1)
  {
    v8 = type metadata accessor for URL(0);
    return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v8);
  }
  else
  {
    v10 = a1 + *(int *)(type metadata accessor for NewsArticle(0) + 36);
    v11 = type metadata accessor for NewsChannel(0);
    return sub_100038D20(v10 + *(int *)(v11 + 24), a2);
  }
}

void sub_100500070(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v33 = a2;
  type metadata accessor for NewsArticle(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v32 = v5 - v4;
  sub_1000BA294(&qword_100BE4BD8);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = type metadata accessor for ArticleModel(0);
  sub_1000B42B0();
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v31 - v15;
  v17 = sub_1000BA294(&qword_100BE4BE8);
  v18 = type metadata accessor for ArticlePlacementLocation(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(v17, v21 + *(_QWORD *)(v19 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_10097CA50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v22 + v21, a1, v18);
  v23 = sub_100045F7C((_QWORD *)v22);
  swift_setDeallocating(v22);
  sub_1000F5474((uint64_t (*)(_QWORD))&type metadata accessor for ArticlePlacementLocation);
  sub_1002F6F54((uint64_t)v23, v9);
  swift_bridgeObjectRelease(v23);
  if (_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10) == 1)
  {
    sub_100500400(v9);
    v25 = sub_1000C21E4();
    v26 = (uint64_t)v33;
    v27 = 1;
  }
  else
  {
    v28 = v33;
    sub_1000B4ADC(v9, v24, type metadata accessor for ArticleModel);
    sub_1004E83A4((uint64_t)v16, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload(v14, v10) == 1)
    {
      v29 = v32;
      sub_100080BA8((uint64_t)v14, v32, type metadata accessor for NewsArticle);
      sub_1005002E8(v29, v28);
      sub_1000BC2F4(v29);
      sub_10006BD20((uint64_t)v16, type metadata accessor for ArticleModel);
      v25 = sub_1000C21E4();
      v26 = (uint64_t)v28;
      v27 = 0;
    }
    else
    {
      sub_1000BC2F4((uint64_t)v16);
      sub_1000BC2F4((uint64_t)v14);
      *(_BYTE *)v28 = 0;
      v30 = sub_1000C21E4();
      sub_1000916FC((uint64_t)v28, v30);
      v26 = (uint64_t)v28;
      v27 = 0;
      v25 = v30;
    }
  }
  _s7Weather24LocationCompositionStateOwst_0(v26, v27, 1, v25);
  sub_100098640();
}

double sub_1005002E8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = (int *)type metadata accessor for NewsArticle(0);
  v7 = a1 + v6[6];
  v8 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
  sub_100038D20(v7, (uint64_t)a2 + v8[5]);
  v9 = v6[8];
  v10 = a1 + v6[9];
  v12 = *(_QWORD *)(v10 + 16);
  v11 = *(_QWORD *)(v10 + 24);
  v13 = a1 + v9;
  v14 = (char *)a2 + v8[7];
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, v13, v15);
  v16 = (uint64_t)a2 + v8[8];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v11);
  sub_1004FFF98(a1, v16);
  *a2 = v5;
  a2[1] = v4;
  v17 = (_QWORD *)((char *)a2 + v8[6]);
  *v17 = v12;
  v17[1] = v11;
  *((_BYTE *)a2 + v8[9]) = 0;
  v18 = type metadata accessor for NewsArticleComponentViewModel(0);
  *(_QWORD *)&result = swift_storeEnumTagMultiPayload(a2, v18, 1).n128_u64[0];
  return result;
}

uint64_t sub_1005003E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v0 = sub_10009DB58();
  return swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100500400(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE4BD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100500440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEB888;
  if (!qword_100BEB888)
  {
    v1 = type metadata accessor for NewsArticleComponentViewModelFactory();
    result = swift_getWitnessTable(&unk_1009A9DE8, v1);
    atomic_store(result, (unint64_t *)&qword_100BEB888);
  }
  return result;
}

uint64_t sub_10050047C()
{
  return sub_1000F5474((uint64_t (*)(_QWORD))&type metadata accessor for Tips.Action);
}

uint64_t sub_100500488()
{
  return sub_1005004B8(&qword_100BCB0A0);
}

uint64_t sub_100500494()
{
  return sub_1005004B8(&qword_100BCC760);
}

uint64_t sub_1005004A0()
{
  return sub_1005004B8(&qword_100BC68B8);
}

uint64_t sub_1005004AC()
{
  return sub_1005004B8(&qword_100BD4B70);
}

uint64_t sub_1005004B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1000BA294(a1);
  sub_1000BC460(v1);
  v2 = sub_10009DB58();
  return swift_deallocClassInstance(v2, v3, v4);
}

uint64_t sub_1005004D4()
{
  return sub_100081440(&qword_100BD7C70);
}

uint64_t sub_1005004E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BDA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100500528()
{
  return sub_100081440(&qword_100BEB890);
}

uint64_t sub_100500534()
{
  return sub_1000F5474((uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_100500540(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t result;
  uint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  __n128 v52;
  char v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);

  v79 = type metadata accessor for NotificationSubscription(0);
  v5 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NotificationSubscription.Location(0);
  v90 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v76 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v84 = (char *)&v70 - v12;
  __chkstk_darwin(v11);
  v89 = (char *)&v70 - v13;
  v14 = type metadata accessor for Location(0);
  v81 = *(_QWORD *)(v14 - 8);
  v82 = v14;
  v15 = __chkstk_darwin(v14);
  v80 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v75 = (char *)&v70 - v18;
  __chkstk_darwin(v17);
  v74 = (char *)&v70 - v19;
  v88 = *(_QWORD *)(a1 + 16);
  if (!v88)
  {
    swift_bridgeObjectRelease(a2);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  v71 = a1;
  v72 = v2;
  v87 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v78 = v5;
  v86 = *(_QWORD *)(v5 + 72);
  v20 = swift_bridgeObjectRetain(a1);
  v21 = 0;
  v73 = a2 + 7;
  v85 = _swiftEmptyArrayStorage;
  v22 = a2;
  v77 = v7;
  v83 = v8;
  while (1)
  {
    v23 = v87 + v86 * v21;
    v24 = v89;
    v25 = NotificationSubscription.location.getter(v20);
    v26 = NotificationSubscription.Location.kind.getter(v25) & 1;
    v91 = *(void (**)(char *, uint64_t))(v90 + 8);
    v91(v24, v8);
    v27 = Location.Identifier.Kind.rawValue.getter(v26);
    v29 = v28;
    v30 = Location.Identifier.Kind.rawValue.getter(0);
    v32 = v27 == v30 && v29 == v31;
    if (v32)
    {
      v20 = swift_bridgeObjectRelease_n(v29, 2);
    }
    else
    {
      v33 = v31;
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v30, v31, 0);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v33);
      if ((v34 & 1) == 0)
        goto LABEL_36;
    }
    v35 = v84;
    v36 = NotificationSubscription.location.getter(v20);
    v37 = NotificationSubscription.Location.id.getter(v36);
    v39 = v38;
    v91(v35, v8);
    v40 = v22[2];
    if (v40)
    {
      v41 = v22[4];
      v42 = v22[5];
      v43 = v41 == v37 && v42 == v39;
      if (v43 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v37, v39, 0), (result & 1) != 0))
      {
        swift_bridgeObjectRelease(v39);
LABEL_17:
        v8 = v83;
        goto LABEL_36;
      }
      if (v40 != 1)
        break;
    }
LABEL_28:
    v52 = swift_bridgeObjectRelease(v39);
    v53 = NotificationSubscription.precipitationEnabled.getter(v52);
    v55 = v77;
    v54 = v78;
    v56 = v79;
    v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v23, v79);
    if ((v53 & 1) != 0)
    {
      v20 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v55, v56);
      v8 = v83;
LABEL_31:
      v59 = v76;
      v60 = NotificationSubscription.location.getter(v20);
      v61 = v75;
      NotificationSubscription.Location.location.getter(v60);
      v91(v59, v8);
      v62 = v82;
      v63 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
      v64 = v74;
      v63(v74, v61, v82);
      v63(v80, v64, v62);
      if ((swift_isUniquelyReferenced_nonNull_native(v85) & 1) != 0)
      {
        v65 = v85;
      }
      else
      {
        sub_10009ADAC();
        v65 = v68;
      }
      v66 = v65[2];
      if (v66 >= v65[3] >> 1)
      {
        sub_10009ADAC();
        v65 = v69;
      }
      v65[2] = v66 + 1;
      v67 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
      v85 = v65;
      v20 = ((uint64_t (*)(char *, char *, uint64_t))v63)((char *)v65 + v67 + *(_QWORD *)(v81 + 72) * v66, v80, v82);
      goto LABEL_36;
    }
    v58 = NotificationSubscription.severeEnabled.getter(v57);
    v20 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v55, v56);
    v8 = v83;
    if ((v58 & 1) != 0)
      goto LABEL_31;
LABEL_36:
    if (++v21 == v88)
    {
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v71);
      return (uint64_t)v85;
    }
  }
  v45 = v73;
  v46 = 1;
  while (1)
  {
    v47 = v22;
    v48 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    v49 = *(v45 - 1);
    v50 = *v45;
    v51 = v49 == v37 && v50 == v39;
    if (v51 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v50, v37, v39, 0), (result & 1) != 0))
    {
      swift_bridgeObjectRelease(v39);
      v22 = v47;
      goto LABEL_17;
    }
    v45 += 2;
    ++v46;
    v32 = v48 == v40;
    v22 = v47;
    if (v32)
      goto LABEL_28;
  }
  __break(1u);
  return result;
}

char *sub_100500A2C(uint64_t a1, uint64_t (*a2)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;

  v5 = sub_1000BA294(&qword_100BE4A48);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NotificationSubscription.Location(0);
  v29 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v28 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v27 = (char *)&v23 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(type metadata accessor for NotificationSubscription(0) - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    v24 = a1;
    swift_bridgeObjectRetain(a1);
    v16 = (char *)_swiftEmptyArrayStorage;
    v25 = v15;
    v26 = a2;
    while (1)
    {
      sub_100503040(v14, a2, (uint64_t)v7);
      if (v2)
        break;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
      {
        sub_100021A14((uint64_t)v7, &qword_100BE4A48);
      }
      else
      {
        v17 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v18 = v27;
        v17(v27, v7, v8);
        v17(v28, v18, v8);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        {
          sub_1005FF104();
          v16 = v20;
        }
        v19 = *((_QWORD *)v16 + 2);
        if (v19 >= *((_QWORD *)v16 + 3) >> 1)
        {
          sub_1005FF104();
          v16 = v21;
        }
        *((_QWORD *)v16 + 2) = v19 + 1;
        v17(&v16[((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v19], v28, v8);
        v15 = v25;
        a2 = v26;
      }
      v14 += v15;
      if (!--v12)
      {
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v24);
        return v16;
      }
    }
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    swift_bridgeObjectRelease(a2);
    return (char *)_swiftEmptyArrayStorage;
  }
  return v16;
}

_QWORD *sub_100500CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD v64[2];
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v75 = a2;
  v4 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v4);
  v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC3118);
  v8 = __chkstk_darwin(v7);
  v70 = (uint64_t)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v78 = (uint64_t)v64 - v10;
  v11 = sub_1000BA294(&qword_100BC35F8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v69 = (char *)v64 - v15;
  v79 = type metadata accessor for Location(0);
  v77 = *(_QWORD *)(v79 - 8);
  v16 = __chkstk_darwin(v79);
  v74 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v76 = (char *)v64 - v18;
  v19 = type metadata accessor for NotificationSubscription.Location(0);
  v72 = *(_QWORD *)(v19 - 8);
  v73 = v19;
  v20 = __chkstk_darwin(v19);
  v71 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v68 = (char *)v64 - v23;
  __chkstk_darwin(v22);
  v67 = (char *)v64 - v24;
  v25 = *(_QWORD *)(a1 + 16);
  if (v25)
  {
    v66 = v14;
    v64[1] = v2;
    v26 = *(_QWORD *)(type metadata accessor for SavedLocation(0) - 8);
    v27 = a1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v28 = *(_QWORD *)(v26 + 72);
    v64[0] = a1;
    v29 = swift_bridgeObjectRetain(a1);
    v30 = _swiftEmptyArrayStorage;
    v31 = (uint64_t)v69;
    v65 = v28;
    do
    {
      SavedLocation.location.getter(v29);
      v32 = v79;
      if (_s7Weather24LocationCompositionStateOwet_0(v31, 1, v79) == 1)
      {
        sub_100021A14(v31, &qword_100BC35F8);
      }
      else
      {
        v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 32))(v76, v31, v32);
        v34 = SavedLocation.id.getter(v33);
        v36 = v35;
        if (*(_QWORD *)(v75 + 16) && (v37 = sub_1000991C8(v34), (v38 & 1) != 0))
        {
          v39 = v37;
          v40 = v6;
          v41 = *(_QWORD *)(v75 + 56);
          v42 = type metadata accessor for LocationModel(0);
          v43 = *(_QWORD *)(v42 - 8);
          v44 = v41 + *(_QWORD *)(v43 + 72) * v39;
          v6 = v40;
          (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v40, v44, v42);
          v45 = (uint64_t)v40;
          v46 = 0;
        }
        else
        {
          v42 = type metadata accessor for LocationModel(0);
          v45 = (uint64_t)v6;
          v46 = 1;
        }
        _s7Weather24LocationCompositionStateOwst_0(v45, v46, 1, v42);
        swift_bridgeObjectRelease(v36);
        type metadata accessor for LocationModel(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v42) == 1)
        {
          sub_100021A14((uint64_t)v6, &qword_100C0B8D0);
          v47 = type metadata accessor for LocationOfInterest(0);
          _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v47);
        }
        else
        {
          LocationModel.locationOfInterest.getter();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v6, v42);
        }
        v48 = v79;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v76, v79);
        v49 = v70;
        sub_10003773C(v78, v70, &qword_100BC3118);
        v50 = type metadata accessor for LocationOfInterest(0);
        v51 = _s7Weather24LocationCompositionStateOwet_0(v49, 1, v50);
        v52 = v30;
        if (v51 == 1)
        {
          sub_100021A14(v70, &qword_100BC3118);
          v53 = 1;
          v54 = (uint64_t)v66;
        }
        else
        {
          v54 = (uint64_t)v66;
          v55 = v70;
          LocationOfInterest.location.getter();
          v48 = v79;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v55, v50);
          v53 = 0;
        }
        _s7Weather24LocationCompositionStateOwst_0(v54, v53, 1, v48);
        v56 = v68;
        NotificationSubscription.Location.init(location:locationOverride:)(v74, v54);
        sub_100021A14(v78, &qword_100BC3118);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v48);
        v57 = v73;
        v58 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
        v59 = v67;
        v58(v67, v56, v73);
        v58(v71, v59, v57);
        v30 = v52;
        if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
        {
          sub_1005FF104();
          v30 = v61;
        }
        v60 = v30[2];
        if (v60 >= v30[3] >> 1)
        {
          sub_1005FF104();
          v30 = v62;
        }
        v30[2] = v60 + 1;
        v29 = ((uint64_t (*)(char *, char *, uint64_t))v58)((char *)v30+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(_QWORD *)(v72 + 72) * v60, v71, v73);
        v31 = (uint64_t)v69;
        v28 = v65;
      }
      v27 += v28;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease(v75);
    swift_bridgeObjectRelease(v64[0]);
  }
  else
  {
    swift_bridgeObjectRelease(v75);
    return _swiftEmptyArrayStorage;
  }
  return v30;
}

_QWORD *sub_100501240()
{
  _QWORD *v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 12);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10050127C()
{
  uint64_t v0;

  sub_100501240();
  return swift_deallocClassInstance(v0, 152, 7);
}

void sub_1005012B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for WeatherDataAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_100501348 + 4 * byte_1009A9E6D[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

void sub_100501348()
{
  uint64_t v0;

  sub_1000215BC(v0, type metadata accessor for WeatherDataAction);
}

double sub_100501468(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  double result;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v2 = type metadata accessor for Location.Identifier(0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SavedLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NotificationSubscription.Kind(0);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  __chkstk_darwin(v9);
  v40 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100BC2440 != -1)
    swift_once(&qword_100BC2440, sub_1006F37F4);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_1000AECD4(v11, (uint64_t)qword_100CAF0B8);
  v13 = swift_bridgeObjectRetain_n(a1, 2);
  v39[1] = v12;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v39[0] = swift_slowAlloc(32, -1);
    v49 = (_QWORD *)v39[0];
    *(_DWORD *)v16 = 141558275;
    v47 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    *(_WORD *)(v16 + 12) = 2081;
    v17 = swift_bridgeObjectRetain(a1);
    v18 = Array.description.getter(v17, v5);
    v44 = v6;
    v20 = v19;
    swift_bridgeObjectRelease(a1);
    v47 = sub_1000CE1C8(v18, v20, (uint64_t *)&v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    swift_bridgeObjectRelease_n(a1, 2);
    v21 = v20;
    v6 = v44;
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Synchronizing notification subscriptions with locations: %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    v22 = v39[0];
    swift_arrayDestroy(v39[0], 1);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v23 = *(_QWORD *)(a1 + 16);
  v24 = _swiftEmptyArrayStorage;
  if (v23)
  {
    v49 = _swiftEmptyArrayStorage;
    sub_10009AAB0();
    v25 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v44 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_100095B78(v25, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
      v26 = SavedLocation.identifier.getter();
      v27 = Location.Identifier.id.getter(v26);
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v4, v46);
      sub_1000215BC((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
      v24 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
      {
        sub_10009AAB0();
        v24 = v49;
      }
      v30 = v24[2];
      if (v30 >= v24[3] >> 1)
      {
        sub_10009AAB0();
        v24 = v49;
      }
      v24[2] = v30 + 1;
      v31 = &v24[2 * v30];
      v31[4] = v27;
      v31[5] = v29;
      v25 += v44;
      --v23;
    }
    while (v23);
  }
  v32 = v43[5];
  v33 = v43[6];
  v34 = sub_1000DB418(v43 + 2, v32);
  v35 = v40;
  static NotificationSubscription.Kind.all.getter(v34);
  v36 = dispatch thunk of NotificationSubscriptionManagerType.subscriptions(of:)(v35, v32, v33);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
  swift_bridgeObjectRetain(v24);
  v37 = sub_100500540(v36, v24);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v36);
  if (*(_QWORD *)(v37 + 16))
    sub_100503894(v37);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v37).n128_u64[0];
  return result;
}

double sub_100501AC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void (*v24)(char *, uint64_t, uint64_t);

  v2 = type metadata accessor for NotificationSubscription.Location(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v9 = (char *)&v15 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v21 = *(_QWORD *)(v3 + 72);
    v22 = v23 + 2;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v16 = a1;
    v12 = swift_bridgeObjectRetain(a1);
    v12.n128_u64[0] = 141558787;
    v19 = v12;
    v17 = v6;
    v18 = (char *)&type metadata for Any + 8;
    v20 = v3;
    do
    {
      v24(v9, v11, v2);
      v13 = v23[5];
      v14 = v23[6];
      sub_1000DB418(v22, v13);
      dispatch thunk of NotificationSubscriptionManagerType.updateSubscription(for:)(v9, v13, v14);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      v11 += v21;
      --v10;
    }
    while (v10);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  return result;
}

double sub_100501ED0(uint64_t (*a1)(char *, uint64_t))
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  double result;
  uint64_t v13;

  v3 = type metadata accessor for NotificationSubscription.Kind(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[5];
  v8 = v1[6];
  v9 = sub_1000DB418(v1 + 2, v7);
  static NotificationSubscription.Kind.all.getter(v9);
  v10 = dispatch thunk of NotificationSubscriptionManagerType.subscriptions(of:)(v6, v7, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRetain(a1);
  v11 = sub_100500A2C(v10, a1);
  swift_bridgeObjectRelease(v10);
  if (*((_QWORD *)v11 + 2))
  {
    sub_100501AC0((uint64_t)v11);
    swift_bridgeObjectRelease(v11);
    sub_100502568();
    sub_1005025A4();
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  return result;
}

void sub_100502230(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD v20[7];

  v20[1] = a5;
  v20[2] = a6;
  v10 = a3(0);
  v20[5] = *(_QWORD *)(v10 - 8);
  v20[6] = v10;
  __chkstk_darwin(v10);
  v20[4] = (char *)v20 - v11;
  v12 = sub_10009876C();
  v13 = type metadata accessor for NotificationSubscription.Kind(v12);
  __chkstk_darwin(v13);
  sub_10007A130();
  v14 = v6[5];
  v15 = v6[6];
  sub_1000DB418(v6 + 2, v14);
  v20[3] = a1;
  v16 = a4(a2, a1, v14, v15);
  static NotificationSubscription.Kind.precipitation.getter(v16);
  v17 = sub_1000D1334();
  v18 = sub_1000CCE80();
  if ((v17 & 1) != 0)
    v18 = sub_100502568();
  static NotificationSubscription.Kind.severe.getter(v18);
  v19 = sub_1000D1334();
  sub_1000CCE80();
  if ((v19 & 1) != 0)
    sub_1005025A4();
  sub_100098640();
}

uint64_t sub_100502568()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_retain();
  Debouncer.execute(_:)(sub_100504800, v0, v1);
  return swift_release(v0);
}

uint64_t sub_1005025A4()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_retain();
  Debouncer.execute(_:)(sub_100504830, v0, v1);
  return swift_release(v0);
}

void sub_1005025E0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  char *v40;
  uint64_t v41;
  char v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  _QWORD v77[2];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[2];

  v6 = type metadata accessor for Location.Identifier(0);
  v82 = *(_QWORD *)(v6 - 8);
  v83 = v6;
  __chkstk_darwin(v6);
  v81 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BEB958);
  __chkstk_darwin(v8);
  v87 = (char *)v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NotificationSubscription(0);
  v85 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  __chkstk_darwin(v10);
  v84 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NotificationSubscription.Kind(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v90 = (char *)v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v89 = (uint64_t)v77 - v16;
  v17 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v17);
  v19 = (char *)v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocationModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v25 = *(_QWORD *)(v24 + *(int *)(type metadata accessor for LocationsState(0) + 40));
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(a2);
  v91 = a1;
  sub_1007D4D10(a1, a2, v25);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v25);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
    sub_100021A14((uint64_t)v19, &qword_100C0B8D0);
    if (qword_100BC2440 != -1)
      swift_once(&qword_100BC2440, sub_1006F37F4);
    v26 = type metadata accessor for Logger(0);
    sub_1000AECD4(v26, (uint64_t)qword_100CAF0B8);
    v27 = swift_bridgeObjectRetain_n(a2, 2);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc(22, -1);
      v31 = swift_slowAlloc(32, -1);
      *(_DWORD *)v30 = 141558275;
      v92 = 1752392040;
      v93[0] = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
      *(_WORD *)(v30 + 12) = 2081;
      swift_bridgeObjectRetain(a2);
      v92 = sub_1000CE1C8(v91, a2, v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to obtain a Location instance of a location for which next hour forecasts are not available. locationID=%{private,mask.hash}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy(v31, 1);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return;
  }
  v78 = v12;
  v79 = v20;
  v80 = v21;
  v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
  v33 = LocationModel.kind.getter(v32);
  v34 = Location.Identifier.Kind.rawValue.getter(v33 & 1);
  v36 = v35;
  v37 = Location.Identifier.Kind.rawValue.getter(1);
  v39 = v34 == v37 && v36 == v38;
  v40 = v23;
  if (v39)
  {
    swift_bridgeObjectRelease_n(v36, 2);
    goto LABEL_24;
  }
  v41 = v38;
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, v37, v38, 0);
  swift_bridgeObjectRelease(v36);
  v43 = swift_bridgeObjectRelease(v41);
  if ((v42 & 1) != 0)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v40, v79, v43);
    return;
  }
  v44 = v89;
  sub_100503DC4(a3, v91, a2, v89);
  v45 = v90;
  static NotificationSubscription.Kind.none.getter();
  sub_10005329C(&qword_100BEB968, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind, (uint64_t)&protocol conformance descriptor for NotificationSubscription.Kind);
  v46 = v78;
  v48 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v45, v78, v47);
  v49 = *(void (**)(char *, uint64_t))(v13 + 8);
  v49(v45, v46);
  if ((v48 & 1) != 0)
  {
    v50 = v44;
    v51 = v46;
LABEL_23:
    v49((char *)v50, v51);
    goto LABEL_24;
  }
  v52 = v88[5];
  v77[1] = v88[6];
  sub_1000DB418(v88 + 2, v52);
  v53 = LocationModel.id.getter();
  v55 = v54;
  v56 = (uint64_t)v87;
  dispatch thunk of NotificationSubscriptionManagerType.subscription(with:)(v53);
  swift_bridgeObjectRelease(v55);
  v57 = v86;
  if (_s7Weather24LocationCompositionStateOwet_0(v56, 1, v86) == 1)
  {
    v49((char *)v44, v78);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v40, v79);
    sub_100021A14(v56, &qword_100BEB958);
    return;
  }
  v58 = v85;
  v59 = v56;
  v60 = v84;
  v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 32))(v84, v59, v57);
  v62 = v90;
  NotificationSubscription.kind.getter(v61);
  v63 = NotificationSubscription.Kind.containsAny(_:)(v44);
  v64 = v62;
  v65 = v78;
  v49(v64, v78);
  if ((v63 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
    v50 = v44;
    v51 = v65;
    goto LABEL_23;
  }
  v66 = (void (*)(uint64_t, uint64_t))v49;
  if (qword_100BC2440 != -1)
    swift_once(&qword_100BC2440, sub_1006F37F4);
  v67 = type metadata accessor for Logger(0);
  sub_1000AECD4(v67, (uint64_t)qword_100CAF0B8);
  v68 = swift_bridgeObjectRetain_n(a2, 2);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc(22, -1);
    v72 = swift_slowAlloc(32, -1);
    *(_DWORD *)v71 = 141558275;
    v92 = 1752392040;
    v93[0] = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
    *(_WORD *)(v71 + 12) = 2081;
    swift_bridgeObjectRetain(a2);
    v92 = sub_1000CE1C8(v91, a2, v93);
    v65 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "A location was found for which the user had previously subscribed to recieve notifications, but which currently does not support this. Quitely unsubscribe on behalf of the user. locationID=%{private,mask.hash}s", (uint8_t *)v71, 0x16u);
    swift_arrayDestroy(v72, 1);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);

  }
  else
  {

    v73 = swift_bridgeObjectRelease_n(a2, 2);
  }
  v74 = v80;
  v75 = (uint64_t)v81;
  LocationModel.identifier.getter(v73);
  sub_100502230(v75, v44, (uint64_t (*)(_QWORD))&type metadata accessor for Location.Identifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of NotificationSubscriptionManagerType.unsubscribe(from:for:), (uint64_t)&Location.Identifier.id.getter, (uint64_t)"Failed to unsubscribe from notifications for location: %{private,mask.hash}s with error: %{public}s %@");
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v75, v83);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
  v66(v44, v65);
  (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v40, v79, v76);
}

uint64_t sub_100503040@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t);
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  double v88;
  double v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  double v94;
  double v95;
  double v96;
  void (*v97)(char *, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t (*v114)(char *, uint64_t, uint64_t);
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  uint64_t (*v130)(char *, uint64_t);
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;

  v133 = a3;
  v130 = a2;
  v4 = sub_1000BA294(&qword_100BC3118);
  __chkstk_darwin(v4);
  v121 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BC35F8);
  v7 = __chkstk_darwin(v6);
  v117 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v116 = (char *)&v112 - v10;
  v11 = __chkstk_darwin(v9);
  v123 = (char *)&v112 - v12;
  __chkstk_darwin(v11);
  v124 = (char *)&v112 - v13;
  v125 = type metadata accessor for Location(0);
  v127 = *(_QWORD *)(v125 - 8);
  v14 = __chkstk_darwin(v125);
  v118 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v119 = (char *)&v112 - v17;
  __chkstk_darwin(v16);
  v126 = (char *)&v112 - v18;
  v19 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v19);
  v129 = (void (*)(char *, uint64_t))((char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131 = type metadata accessor for LocationModel(0);
  v128 = *(_QWORD *)(v131 - 8);
  v21 = __chkstk_darwin(v131);
  v122 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v132 = (char *)&v112 - v23;
  v134 = type metadata accessor for NotificationSubscription.Location(0);
  v24 = *(_QWORD *)(v134 - 8);
  v25 = __chkstk_darwin(v134);
  v120 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v112 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v112 - v30;
  v32 = type metadata accessor for NotificationSubscription(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v115 = (char *)&v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v37 = (char *)&v112 - v36;
  v39 = NotificationSubscription.precipitationEnabled.getter(v38);
  v40 = a1;
  v114 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v41 = v114(v37, a1, v32);
  if ((v39 & 1) != 0)
  {
    v42 = *(uint64_t (**)(char *, uint64_t))(v33 + 8);
    v43 = v42(v37, v32);
  }
  else
  {
    v44 = NotificationSubscription.severeEnabled.getter(v41);
    v42 = *(uint64_t (**)(char *, uint64_t))(v33 + 8);
    v43 = v42(v37, v32);
    if ((v44 & 1) == 0)
    {
      v75 = 1;
      v76 = v133;
      v49 = v134;
      return _s7Weather24LocationCompositionStateOwst_0(v76, v75, 1, v49);
    }
  }
  v45 = v40;
  v46 = NotificationSubscription.location.getter(v43);
  v47 = NotificationSubscription.Location.kind.getter(v46) & 1;
  v48 = *(void (**)(char *, uint64_t))(v24 + 8);
  v49 = v134;
  v48(v31, v134);
  v50 = Location.Identifier.Kind.rawValue.getter(v47);
  v52 = v51;
  v53 = Location.Identifier.Kind.rawValue.getter(0);
  if (v50 == v53 && v52 == v54)
  {
    v58 = swift_bridgeObjectRelease_n(v52, 2);
  }
  else
  {
    v56 = v54;
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, v53, v54, 0);
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v56);
    if ((v57 & 1) == 0)
      goto LABEL_25;
  }
  v113 = v32;
  v59 = NotificationSubscription.location.getter(v58);
  v60 = NotificationSubscription.Location.id.getter(v59);
  v62 = v61;
  v48(v29, v49);
  v63 = (uint64_t)v129;
  sub_1007D4D10(v60, v62, (uint64_t)v130);
  swift_bridgeObjectRelease(v62);
  v64 = v131;
  if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v131) == 1)
  {
    v65 = &qword_100C0B8D0;
    v66 = v63;
LABEL_13:
    sub_100021A14(v66, v65);
LABEL_25:
    v75 = 1;
    v76 = v133;
    return _s7Weather24LocationCompositionStateOwst_0(v76, v75, 1, v49);
  }
  v130 = (uint64_t (*)(char *, uint64_t))v48;
  v112 = (void (*)(char *, uint64_t))v42;
  v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v128 + 32))(v132, v63, v64);
  v68 = (uint64_t)v121;
  LocationModel.locationOfInterest.getter(v67);
  v69 = type metadata accessor for LocationOfInterest(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v68, 1, v69) == 1)
  {
    sub_100021A14(v68, &qword_100BC3118);
    v70 = 1;
    v72 = (uint64_t)v124;
    v71 = v125;
    v73 = v127;
    v74 = (uint64_t)v123;
  }
  else
  {
    v74 = (uint64_t)v123;
    LocationOfInterest.location.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v68, v69);
    v70 = 0;
    v72 = (uint64_t)v124;
    v71 = v125;
    v73 = v127;
  }
  v77 = v122;
  _s7Weather24LocationCompositionStateOwst_0(v74, v70, 1, v71);
  v78 = v128;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v77, v132, v64);
  if (_s7Weather24LocationCompositionStateOwet_0(v74, 1, v71) == 1)
  {
    LocationModel.location.getter();
    v79 = *(void (**)(char *, uint64_t))(v78 + 8);
    v79(v77, v64);
    sub_100021A14(v74, &qword_100BC35F8);
    if (_s7Weather24LocationCompositionStateOwet_0(v72, 1, v71) == 1)
    {
      v79(v132, v64);
      v65 = &qword_100BC35F8;
      v66 = v72;
      goto LABEL_13;
    }
    v129 = v79;
    v82 = v73;
    v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
  }
  else
  {
    v129 = *(void (**)(char *, uint64_t))(v78 + 8);
    v129(v77, v64);
    v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
    v81 = v74;
    v82 = v73;
    v80(v72, v81, v71);
    _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v71);
  }
  v83 = v126;
  v84 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v126, v72, v71);
  v85 = ((uint64_t (*)(uint64_t))Location.coordinate.getter)(v84);
  v87 = v86;
  v89 = v88;
  v90 = v120;
  v91 = NotificationSubscription.location.getter(v85);
  v92 = v119;
  NotificationSubscription.Location.locationOverride.getter(v91);
  v93 = v130(v90, v49);
  v94 = Location.coordinate.getter(v93);
  v96 = v95;
  v97 = *(void (**)(char *, uint64_t))(v82 + 8);
  v97(v92, v71);
  if ((static CLLocationCoordinate2D.== infix(_:_:)(v87, v89, v94, v96) & 1) != 0)
  {
    v97(v83, v71);
    v129(v132, v131);
    goto LABEL_25;
  }
  v99 = (uint64_t)v116;
  LocationModel.location.getter();
  v100 = v115;
  v101 = v45;
  v102 = v99;
  v103 = v113;
  v114(v115, v101, v113);
  v104 = _s7Weather24LocationCompositionStateOwet_0(v99, 1, v71);
  if ((_DWORD)v104 == 1)
  {
    v105 = v120;
    v106 = NotificationSubscription.location.getter(v104);
    v107 = v118;
    NotificationSubscription.Location.location.getter(v106);
    v130(v105, v49);
    v108 = v100;
    v109 = v107;
    v112(v108, v103);
    sub_100021A14(v102, &qword_100BC35F8);
  }
  else
  {
    v112(v100, v103);
    v109 = v118;
    v80((uint64_t)v118, v99, v71);
  }
  v110 = v126;
  v111 = (uint64_t)v117;
  (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v117, v126, v71);
  _s7Weather24LocationCompositionStateOwst_0(v111, 0, 1, v71);
  v76 = v133;
  NotificationSubscription.Location.init(location:locationOverride:)(v109, v111);
  v97(v110, v71);
  v129(v132, v131);
  v75 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v76, v75, 1, v49);
}

uint64_t sub_100503894(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for Location.Identifier(0);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NotificationSubscription.Kind(0);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Location(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v22 = v12;
    v23 = a1;
    v26 = v1 + 2;
    v16 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v24 = *(_QWORD *)(v10 + 72);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain(a1);
    v27 = v10;
    v25 = v1;
    do
    {
      v33 = v15;
      v28(v14, v16, v9);
      v18 = v1[5];
      v17 = v1[6];
      v19 = sub_1000DB418(v26, v18);
      v20 = static NotificationSubscription.Kind.all.getter(v19);
      Location.identifier.getter(v20);
      dispatch thunk of NotificationSubscriptionManagerType.unsubscribe(from:for:)(v8, v5, v18, v17);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v32);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v9);
      v1 = v25;
      v16 += v24;
      v15 = v33 - 1;
    }
    while (v33 != 1);
    swift_bridgeObjectRelease(v23);
  }
  sub_100502568();
  return sub_1005025A4();
}

void sub_100503DC4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v8 = type metadata accessor for NotificationSubscription.Kind(0);
  v36 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BEB970);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = _swiftEmptyArrayStorage;
  sub_10005329C(&qword_100BE62F0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind, (uint64_t)&protocol conformance descriptor for NotificationSubscription.Kind);
  v15 = v14;
  v16 = sub_1000BA294(&qword_100BEB978);
  v17 = sub_100504860();
  v37 = a4;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v16, v17, v8, v15);
  v18 = (uint64_t *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v21 = v18[2];
  v22 = v18[3];
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  sub_10009AD1C(a2, a3, v19, v20, v21, v22, v23, v24, v35, v36, v37, (uint64_t)v38, v39, v40, v41, v42, v43, v44, v45,
    v46);
  LOBYTE(v19) = v25;
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v20);
  if ((v19 & 1) == 0)
  {
    static NotificationSubscription.Kind.precipitation.getter(v26);
    sub_100504034((uint64_t)v10, (uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
    sub_100021A14((uint64_t)v13, &qword_100BEB970);
  }
  v27 = *v18;
  v28 = v18[1];
  v29 = v18[2];
  v30 = v18[3];
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v30);
  sub_10066D12C(a2, a3, v27, v28, v29, v30, v31, v32, v35, v36, v37, (uint64_t)v38, v39, v40, v41, v42, v43, v44, v45,
    v46);
  LOBYTE(v27) = v33;
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v28);
  if ((v27 & 1) == 0)
  {
    static NotificationSubscription.Kind.severe.getter(v34);
    sub_100504034((uint64_t)v10, (uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
    sub_100021A14((uint64_t)v13, &qword_100BEB970);
  }
}

uint64_t sub_100504034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = type metadata accessor for NotificationSubscription.Kind(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v17 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v9, v2, v5);
  sub_10005329C(&qword_100BE62F0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind, (uint64_t)&protocol conformance descriptor for NotificationSubscription.Kind);
  v14 = v13;
  dispatch thunk of SetAlgebra.intersection(_:)(a1, v5, v13);
  v12(v9, a1, v5);
  dispatch thunk of SetAlgebra.formUnion(_:)(v9, v5, v14);
  if ((dispatch thunk of SetAlgebra.isEmpty.getter(v5, v14) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    v15 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v11, v5);
    v15 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(a2, v15, 1, v5);
}

uint64_t sub_10050419C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

void sub_1005041B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v3 = firstly<A>(closure:)(sub_100504808, a1, v2);
  v4 = (void *)zalgo.getter();
  v5 = Promise.then<A>(on:closure:)(v4, sub_100504264, 0, (char *)&type metadata for () + 8);
  swift_release(v3);

  v7 = (id)zalgo.getter();
  v6 = Promise.error(on:closure:)(v7, sub_100504458, 0);
  swift_release(v6);
  swift_release(v5);

}

void sub_100504264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100BC2440 != -1)
    swift_once(&qword_100BC2440, sub_1006F37F4);
  v5 = type metadata accessor for Logger(0);
  sub_1000AECD4(v5, (uint64_t)qword_100CAF0B8);
  sub_10003773C(a1, (uint64_t)v4, (uint64_t *)&unk_100BD35A0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v17 = v10;
    *(_DWORD *)v9 = 136446210;
    sub_100490648();
    v12 = v11;
    v15 = sub_1000CE1C8(v13, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    swift_bridgeObjectRelease(v12);
    sub_100021A14((uint64_t)v4, (uint64_t *)&unk_100BD35A0);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Next fetch attempt scheduled for: %{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_100021A14((uint64_t)v4, (uint64_t *)&unk_100BD35A0);
  }

}

void sub_100504458(uint64_t a1)
{
  sub_1005045E4(a1, "Failed to reschedule notification subscription fetching with error: %{public}s %@");
}

void sub_100504464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = firstly<A>(closure:)(sub_100504838, a1, (char *)&type metadata for () + 8);
  v3 = (id)zalgo.getter();
  v2 = Promise.error(on:closure:)(v3, sub_1005045D8, 0);
  swift_release(v2);
  swift_release(v1);

}

uint64_t sub_1005044CC(_QWORD *a1, const char *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_100BC2440 != -1)
    swift_once(&qword_100BC2440, sub_1006F37F4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_1000AECD4(v6, (uint64_t)qword_100CAF0B8);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a2, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = a1 + 7;
  v13 = a1[10];
  v12 = a1[11];
  sub_1000DB418(v11, v13);
  return a3(v13, v12);
}

void sub_1005045D8(uint64_t a1)
{
  sub_1005045E4(a1, "Failed to validate channel subscriptions with error: %{public}s %@");
}

void sub_1005045E4(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *oslog;
  uint64_t v14;
  _QWORD v15[3];
  _BYTE v16[8];
  uint64_t v17;

  if (qword_100BC2440 != -1)
    swift_once(&qword_100BC2440, sub_1006F37F4);
  v4 = type metadata accessor for Logger(0);
  sub_1000AECD4(v4, (uint64_t)qword_100CAF0B8);
  sub_1000B47AC();
  sub_1000B47AC();
  sub_1000B47AC();
  v5 = sub_1000B47AC();
  oslog = Logger.logObject.getter(v5);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = sub_100098710(22);
    v8 = (_QWORD *)sub_100098710(8);
    v9 = sub_100098710(32);
    v17 = v9;
    *(_DWORD *)v7 = 136446466;
    swift_getErrorValue(a1, v16, v15);
    v10 = Error.logSafeDescription.getter(v15[1], v15[2]);
    v14 = sub_1000CE1C8(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, v15);
    sub_1000986C4();
    sub_1000B47A4();
    sub_1000B47A4();
    *(_WORD *)(v7 + 12) = 2112;
    sub_1000B47AC();
    v12 = _swift_stdlib_bridgeErrorToNSError(a1);
    v14 = v12;
    sub_1000D90B8((uint64_t)&v14);
    *v8 = v12;
    sub_1000B47A4();
    sub_1000B47A4();
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, a2, (uint8_t *)v7, 0x16u);
    sub_1000BA294(&qword_100C0B820);
    sub_1000988D8((uint64_t)v8);
    sub_1000986F0((uint64_t)v8);
    sub_1000988D8(v9);
    sub_1000986F0(v9);
    sub_1000986F0(v7);

  }
  else
  {
    sub_1000B47A4();
    sub_1000B47A4();
    sub_1000B47A4();
    sub_1000B47A4();

  }
}

void sub_100504800()
{
  uint64_t v0;

  sub_1005041B4(v0);
}

uint64_t sub_100504808()
{
  _QWORD *v0;

  return sub_1005044CC(v0, "Requesting rescheduling of notification subscription fetching", (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of NotificationsManagerProxyType.schedule());
}

void sub_100504830()
{
  uint64_t v0;

  sub_100504464(v0);
}

uint64_t sub_100504838()
{
  _QWORD *v0;

  return sub_1005044CC(v0, "Requesting validation of channel subscriptions", (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of NotificationsManagerProxyType.validate());
}

unint64_t sub_100504860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEB980;
  if (!qword_100BEB980)
  {
    v1 = sub_100075EB0(&qword_100BEB978);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100BEB980);
  }
  return result;
}

uint64_t sub_1005048A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[4];
    v10 = *((_BYTE *)a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10008D47C(v9, v10);
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = v10;
    v11 = a2[6];
    LOBYTE(v9) = *((_BYTE *)a2 + 56);
    sub_10008D47C(v11, v9);
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = v9;
    v12 = a2[8];
    LOBYTE(v9) = *((_BYTE *)a2 + 72);
    sub_10008D47C(v12, v9);
    *(_QWORD *)(a1 + 64) = v12;
    *(_BYTE *)(a1 + 72) = v9;
    v13 = *(int *)(a3 + 32);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v15) == 1)
    {
      v17 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return a1;
}

double sub_1005049F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000B15F8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  sub_1000B15F8(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_1000B15F8(*(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  v4 = a1 + *(int *)(a2 + 32);
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100504A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10008D47C(v8, v9);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  LOBYTE(v8) = *(_BYTE *)(a2 + 56);
  sub_10008D47C(v10, v8);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v8;
  v11 = *(_QWORD *)(a2 + 64);
  LOBYTE(v8) = *(_BYTE *)(a2 + 72);
  sub_10008D47C(v11, v8);
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v8;
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v14) == 1)
  {
    v16 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  return a1;
}

uint64_t sub_100504BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  sub_10008D47C(v6, v7);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_10008D47C(v10, v11);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  sub_1000B15F8(v12, v13);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 72);
  sub_10008D47C(v14, v15);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v14;
  *(_BYTE *)(a1 + 72) = v15;
  sub_1000B15F8(v16, v17);
  if (a1 != a2)
  {
    v18 = *(int *)(a3 + 32);
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_100021AA4(a1 + v18, &qword_100BC68C8);
    v21 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v20) == 1)
    {
      v22 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  return a1;
}

uint64_t sub_100504D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(int *)(a3 + 32);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v6, v9);
    swift_storeEnumTagMultiPayload(v7, v8, 1);
  }
  else
  {
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100504E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1000B15F8(v9, v10);
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v11;
  sub_1000B15F8(v12, v13);
  v14 = *(_BYTE *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v14;
  sub_1000B15F8(v15, v16);
  if (a1 != a2)
  {
    v17 = *(int *)(a3 + 32);
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_100021AA4(a1 + v17, &qword_100BC68C8);
    v20 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v19) == 1)
    {
      v21 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100504F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100504F4C);
}

uint64_t sub_100504F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BCD380);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100504FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100504FD0);
}

uint64_t sub_100504FD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BCD380);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DetailComponentHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BEB9E0;
  if (!qword_100BEB9E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DetailComponentHeaderView);
  return result;
}

void sub_100505078(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = " ";
  v4[1] = &unk_1009A9F48;
  v4[2] = &unk_1009A9F48;
  v4[3] = &unk_1009A9F48;
  sub_100158B94(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1005050F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB7BB0, 1);
}

void sub_100505108(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_1000BA294(&qword_100BEBA28);
  sub_100505150(v2, a2 + *(int *)(v4 + 44));
}

void sub_100505150(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  char v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  char v104;
  char v105;
  _QWORD __src[18];

  v81 = a1;
  v101 = a2;
  v99 = type metadata accessor for BlendMode(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for DetailComponentHeaderView(0);
  __chkstk_darwin(v90);
  v100 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v85 = (char *)&v77 - v6;
  v88 = type metadata accessor for ColorSchemeContrast(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v84 = (char *)&v77 - v9;
  v10 = sub_1000BA294(&qword_100BC4F88);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1000BA294(&qword_100BC4F90);
  __chkstk_darwin(v13);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1000BA294(&qword_100BEBA30);
  __chkstk_darwin(v83);
  v82 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1000BA294(&qword_100BEBA38);
  __chkstk_darwin(v89);
  v91 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1000BA294(&qword_100BEBA40);
  __chkstk_darwin(v95);
  v93 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BEBA48);
  __chkstk_darwin(v19);
  v96 = (uint64_t)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v92 = (char *)&v77 - v22;
  __chkstk_darwin(v23);
  v94 = (uint64_t)&v77 - v24;
  v26 = static VerticalAlignment.center.getter(v25);
  sub_10050598C(a1, (uint64_t)__src);
  v27 = __src[0];
  v28 = __src[1];
  v29 = __src[2];
  v77 = __src[3];
  v30 = __src[4];
  v80 = LOBYTE(__src[5]);
  v79 = __src[6];
  v78 = __src[7];
  v31 = __src[8];
  v32 = __src[10];
  v33 = __src[11];
  v34 = __src[12];
  v35 = __src[13];
  v105 = 0;
  v104 = __src[5];
  v103 = __src[9];
  v102 = __src[14];
  __src[0] = v26;
  __src[1] = 0x4010000000000000;
  LOBYTE(__src[2]) = 0;
  __src[3] = v27;
  __src[4] = v28;
  __src[5] = v29;
  __src[6] = v77;
  __src[7] = v30;
  LOBYTE(__src[8]) = v104;
  __src[9] = v79;
  __src[10] = v78;
  __src[11] = v31;
  LOBYTE(__src[12]) = v103;
  __src[13] = v32;
  __src[14] = v33;
  LOBYTE(__src[15]) = v34;
  BYTE1(__src[15]) = BYTE1(__src[12]);
  __src[16] = v35;
  LOBYTE(__src[17]) = v102;
  v36 = enum case for Text.Case.uppercase(_:);
  v37 = type metadata accessor for Text.Case(0);
  v38 = v36;
  v39 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v15, v38, v37);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v37);
  KeyPath = swift_getKeyPath(&unk_1009A9FB0);
  sub_10007EBC8((uint64_t)v15, (uint64_t)v12 + *(int *)(v10 + 28), &qword_100BC4F90);
  *v12 = KeyPath;
  sub_10007EBC8((uint64_t)v12, (uint64_t)v39 + *(int *)(v83 + 36), &qword_100BC4F88);
  memcpy(v39, __src, 0x89uLL);
  sub_100505BB4((uint64_t)__src);
  sub_100021AA4((uint64_t)v12, &qword_100BC4F88);
  sub_100021AA4((uint64_t)v15, &qword_100BC4F90);
  swift_release();
  swift_release();
  v41 = (uint64_t)v81;
  swift_release();
  v42 = (uint64_t)v85;
  sub_1000D31B4(v77, v30, v80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v43 = v84;
  sub_100114A94();
  v44 = v87;
  v45 = v86;
  v46 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, enum case for ColorSchemeContrast.increased(_:), v88);
  v47 = v45;
  LOBYTE(v45) = static ColorSchemeContrast.== infix(_:_:)(v43, v45);
  v48 = *(void (**)(char *, uint64_t))(v44 + 8);
  v48(v47, v46);
  v48(v43, v46);
  sub_100505C48(v41, v42);
  if ((v45 & 1) != 0)
  {
    v49 = sub_100505C8C(v42);
LABEL_4:
    v54 = static HierarchicalShapeStyle.primary.getter(v49);
    goto LABEL_6;
  }
  v50 = *(_QWORD *)(v42 + 64);
  v51 = *(_BYTE *)(v42 + 72);
  sub_10008D47C(v50, v51);
  sub_100109B54();
  v53 = v52;
  sub_1000B15F8(v50, v51);
  v49 = sub_100505C8C(v42);
  if ((v53 & 1) != 0)
    goto LABEL_4;
  v54 = static HierarchicalShapeStyle.tertiary.getter(v49);
LABEL_6:
  v55 = v54;
  v56 = v95;
  v57 = (uint64_t)v93;
  v58 = v91;
  sub_10007EBC8((uint64_t)v39, v91, &qword_100BEBA30);
  *(_DWORD *)(v58 + *(int *)(v89 + 36)) = v55;
  sub_100021AA4((uint64_t)v39, &qword_100BEBA30);
  v59 = v98;
  v60 = v97;
  v61 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, enum case for BlendMode.plusLighter(_:), v99);
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v57 + *(int *)(v56 + 36), v60, v61);
  sub_10007EBC8(v58, v57, &qword_100BEBA38);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  sub_100021AA4(v58, &qword_100BEBA38);
  v62 = *(_QWORD *)(v41 + 32);
  LOBYTE(v61) = *(_BYTE *)(v41 + 40);
  sub_10008D47C(v62, v61);
  sub_100109B54();
  LOBYTE(v59) = v63;
  sub_1000B15F8(v62, v61);
  v64 = v41;
  v65 = v100;
  sub_100505C48(v64, v100);
  if ((v59 & 1) != 0)
  {
    v66 = 1;
  }
  else
  {
    v67 = *(_QWORD *)(v65 + 48);
    v68 = *(_BYTE *)(v65 + 56);
    sub_10008D47C(v67, v68);
    sub_100109B54();
    v66 = v69;
    sub_1000B15F8(v67, v68);
  }
  sub_100505C8C(v65);
  v70 = sub_100505CC8();
  v71 = v66 & 1;
  v72 = (uint64_t)v92;
  View.accessibilityHidden(_:)(v71, v56, v70);
  sub_100021AA4(v57, &qword_100BEBA40);
  v73 = v94;
  sub_100505E54(v72, v94);
  v74 = v96;
  sub_10007EBC8(v73, v96, &qword_100BEBA48);
  v75 = v101;
  sub_10007EBC8(v74, v101, &qword_100BEBA48);
  v76 = v75 + *(int *)(sub_1000BA294(&qword_100BEBA78) + 48);
  *(_QWORD *)v76 = 0;
  *(_BYTE *)(v76 + 8) = 0;
  sub_100021AA4(v73, &qword_100BEBA48);
  sub_100021AA4(v74, &qword_100BEBA48);
}

double sub_10050598C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v4 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  v30 = Image.init(_internalSystemName:)(v4, v5);
  v6 = static Font.footnote.getter(v30);
  static Font.Weight.medium.getter(v6);
  v29 = Font.weight(_:)(v6);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_1009A9FE0);
  v7 = *a1;
  v8 = a1[1];
  v31[0] = v7;
  v31[1] = v8;
  v9 = sub_100114EF8();
  swift_bridgeObjectRetain();
  v10 = Text.init<A>(_:)(v31, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = static Font.footnote.getter(v10);
  static Font.Weight.medium.getter(v17);
  v18 = Font.weight(_:)(v17);
  swift_release();
  v19 = Text.font(_:)(v18, v10, v12, v16, v14);
  v21 = v20;
  LOBYTE(v6) = v22;
  v24 = v23;
  swift_release();
  sub_1000D31B4(v10, v12, v16);
  swift_bridgeObjectRelease();
  v25 = swift_getKeyPath(&unk_1009AA010);
  v26 = swift_getKeyPath(&unk_1009AA040);
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v21;
  *(_BYTE *)(a2 + 40) = v6 & 1;
  *(_QWORD *)(a2 + 48) = v24;
  *(_QWORD *)(a2 + 56) = v25;
  *(_QWORD *)(a2 + 64) = 1;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v26;
  *(_QWORD *)(a2 + 88) = 0x3FE0000000000000;
  *(_WORD *)(a2 + 96) = 256;
  *(_QWORD *)(a2 + 104) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000D55D4(v19, v21, v6 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000D31B4(v19, v21, v6 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100505BB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000D55D4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100505C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailComponentHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100505C8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DetailComponentHeaderView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100505CC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEBA50;
  if (!qword_100BEBA50)
  {
    v1 = sub_100075EB0(&qword_100BEBA40);
    sub_100505D34();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEBA50);
  }
  return result;
}

unint64_t sub_100505D34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEBA58;
  if (!qword_100BEBA58)
  {
    v1 = sub_100075EB0(&qword_100BEBA38);
    sub_100505DB8();
    sub_10003D310(&qword_100BC3AE0, &qword_100BC3AE8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEBA58);
  }
  return result;
}

unint64_t sub_100505DB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BEBA60;
  if (!qword_100BEBA60)
  {
    v1 = sub_100075EB0(&qword_100BEBA30);
    sub_10003D310(&qword_100BEBA68, &qword_100BEBA70, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10003D310(&qword_100BC4F80, &qword_100BC4F88, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BEBA60);
  }
  return result;
}

uint64_t sub_100505E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BEBA48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100505EB4()
{
  sub_10003D310(&qword_100BEBA80, &qword_100BEBA88, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t *sub_100505EE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for LocationPreviewViewContentModel(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      type metadata accessor for PreviewLocation(0);
      v9 = (char *)&loc_100505F9C + 4 * byte_1009AA070[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for LocationPreviewViewContentModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BEBC10, (uint64_t)&nominal type descriptor for LocationPreviewViewContentModel);
}

uint64_t type metadata accessor for LocationPreviewModalViewModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BEBB80, (uint64_t)&nominal type descriptor for LocationPreviewModalViewModel);
}

double sub_100506430(id *a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;

  v2 = type metadata accessor for LocationPreviewViewContentModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v2))
  {
    type metadata accessor for PreviewLocation(0);
    switch(swift_getEnumCaseMultiPayload(a1))
    {
      case 0u:
        v4 = type metadata accessor for Location(0);
        goto LABEL_6;
      case 1u:
        v4 = type metadata accessor for LocationOfInterest(0);
LABEL_6:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
        break;
      case 2u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
        v6 = type metadata accessor for Location(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v7 = (char *)a1 + *(int *)(v2 + 32);
    v8 = type metadata accessor for WeatherConditionBackgroundModel(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = (char *)a1 + *(int *)(v2 + 36);
    type metadata accessor for LocationPreviewModalViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = (int *)type metadata accessor for NewsArticle(0);
      v13 = (uint64_t)&v9[v12[6]];
      v14 = type metadata accessor for URL(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      v15 = &v9[v12[7]];
      v16 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      v17 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
      v17(&v9[v12[8]], v14);
      v18 = &v9[v12[9]];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = (uint64_t)&v18[*(int *)(type metadata accessor for NewsChannel(0) + 24)];
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v14))
        v17((char *)v19, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
    else if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    }
  }
  return result;
}

void *sub_1005066D4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;

  v6 = type metadata accessor for LocationPreviewViewContentModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    type metadata accessor for PreviewLocation(0);
    v7 = (char *)&loc_10050676C + 4 * byte_1009AA078[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_100506BD8(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  char *v9;
  char *v10;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      type metadata accessor for PreviewLocation(0);
      v9 = (char *)&loc_100506C70 + 4 * byte_1009AA07C[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationPreviewViewContentModel);
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation(0);
    v10 = (char *)&loc_100506D18 + 4 * byte_1009AA080[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  a1[v6[5]] = a2[v6[5]];
  a1[v6[6]] = a2[v6[6]];
  a1[v6[7]] = a2[v6[7]];
  v12 = v6[8];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_100507604(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  v6 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = type metadata accessor for PreviewLocation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v13 = type metadata accessor for SearchLocation(0);
      v14 = *(int *)(v13 + 32);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v20 = *(int *)(v13 + 36);
      v21 = &a1[v20];
      v22 = &a2[v20];
      *(_OWORD *)v21 = *(_OWORD *)v22;
      v21[16] = v22[16];
      v10 = a1;
      v11 = v7;
      v12 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v19 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v10 = a1;
      v11 = v7;
      v12 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_14;
      }
      v9 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = a1;
      v11 = v7;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
LABEL_14:
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
    v23 = v6[8];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = type metadata accessor for WeatherConditionBackgroundModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    v27 = v6[9];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = type metadata accessor for LocationPreviewModalViewModel(0);
    v31 = swift_getEnumCaseMultiPayload(v29);
    if (v31 == 1)
    {
      v36 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v36;
      v37 = (int *)type metadata accessor for NewsArticle(0);
      v38 = v37[6];
      v39 = &v28[v38];
      v40 = &v29[v38];
      v41 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        v42 = sub_1000BA294(&qword_100BD4280);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      v43 = v37[7];
      v44 = &v28[v43];
      v45 = &v29[v43];
      v46 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
      v47(&v28[v37[8]], &v29[v37[8]], v41);
      v48 = v37[9];
      v49 = &v28[v48];
      v50 = &v29[v48];
      v51 = *(_OWORD *)&v29[v48 + 16];
      *(_OWORD *)v49 = *(_OWORD *)&v29[v48];
      *((_OWORD *)v49 + 1) = v51;
      v52 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v53 = &v49[v52];
      v54 = &v50[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v41))
      {
        v55 = sub_1000BA294(&qword_100BD4280);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v47(v53, v54, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v41);
      }
      *(_QWORD *)&v28[v37[10]] = *(_QWORD *)&v29[v37[10]];
      *(_QWORD *)&v28[v37[11]] = *(_QWORD *)&v29[v37[11]];
      *(_QWORD *)&v28[v37[12]] = *(_QWORD *)&v29[v37[12]];
      v33 = v28;
      v34 = v30;
      v35 = 1;
    }
    else
    {
      if (v31)
      {
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_26:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
        return a1;
      }
      v32 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v28, v29, v32);
      v33 = v28;
      v34 = v30;
      v35 = 0;
    }
    swift_storeEnumTagMultiPayload(v33, v34, v35);
    goto LABEL_26;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_100507A68(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  char *v102;
  char *v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;

  v6 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for PreviewLocation(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v23 = type metadata accessor for SearchLocation(0);
        v24 = *(int *)(v23 + 32);
        v25 = (void *)(a1 + v24);
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for Location(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
        {
          v28 = sub_1000BA294(&qword_100BC35F8);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
        }
        v37 = *(int *)(v23 + 36);
        v38 = a1 + v37;
        v39 = (char *)a2 + v37;
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *(_BYTE *)(v38 + 16) = v39[16];
        v12 = a1;
        v13 = v9;
        v14 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v29 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
        v12 = a1;
        v13 = v9;
        v14 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_27;
        }
        v11 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v12 = a1;
        v13 = v9;
        v14 = 0;
      }
      swift_storeEnumTagMultiPayload(v12, v13, v14);
LABEL_27:
      *(_BYTE *)(a1 + v6[5]) = *((_BYTE *)a2 + v6[5]);
      *(_BYTE *)(a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
      *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
      v40 = v6[8];
      v41 = a1 + v40;
      v42 = (char *)a2 + v40;
      v43 = type metadata accessor for WeatherConditionBackgroundModel(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      v44 = v6[9];
      v45 = (char *)(a1 + v44);
      v46 = (char *)a2 + v44;
      v47 = type metadata accessor for LocationPreviewModalViewModel(0);
      v48 = swift_getEnumCaseMultiPayload(v46);
      if (v48 == 1)
      {
        v53 = *((_OWORD *)v46 + 1);
        *(_OWORD *)v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v53;
        v54 = (int *)type metadata accessor for NewsArticle(0);
        v55 = v54[6];
        v56 = &v45[v55];
        v57 = &v46[v55];
        v58 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
        {
          v59 = sub_1000BA294(&qword_100BD4280);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
        }
        v60 = v54[7];
        v61 = &v45[v60];
        v62 = &v46[v60];
        v63 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32);
        v64(&v45[v54[8]], &v46[v54[8]], v58);
        v65 = v54[9];
        v66 = &v45[v65];
        v67 = &v46[v65];
        v68 = *(_OWORD *)&v46[v65 + 16];
        *(_OWORD *)v66 = *(_OWORD *)&v46[v65];
        *((_OWORD *)v66 + 1) = v68;
        v69 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
        v70 = &v66[v69];
        v71 = &v67[v69];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v58))
        {
          v72 = sub_1000BA294(&qword_100BD4280);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          v64(v70, v71, v58);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v58);
        }
        *(_QWORD *)&v45[v54[10]] = *(_QWORD *)&v46[v54[10]];
        *(_QWORD *)&v45[v54[11]] = *(_QWORD *)&v46[v54[11]];
        *(_QWORD *)&v45[v54[12]] = *(_QWORD *)&v46[v54[12]];
        v50 = v45;
        v51 = v47;
        v52 = 1;
      }
      else
      {
        if (v48)
        {
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
LABEL_39:
          _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, (uint64_t)v6);
          return a1;
        }
        v49 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v45, v46, v49);
        v50 = v45;
        v51 = v47;
        v52 = 0;
      }
      swift_storeEnumTagMultiPayload(v50, v51, v52);
      goto LABEL_39;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if ((_OWORD *)a1 == a2)
      goto LABEL_44;
    sub_1000215BC(a1, type metadata accessor for PreviewLocation);
    v17 = type metadata accessor for PreviewLocation(0);
    v18 = swift_getEnumCaseMultiPayload(a2);
    if (v18 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v30 = type metadata accessor for SearchLocation(0);
      v31 = *(int *)(v30 + 32);
      v32 = (void *)(a1 + v31);
      v33 = (char *)a2 + v31;
      v34 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
      {
        v35 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      }
      v74 = *(int *)(v30 + 36);
      v75 = a1 + v74;
      v76 = (char *)a2 + v74;
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *(_BYTE *)(v75 + 16) = v76[16];
      v20 = a1;
      v21 = v17;
      v22 = 2;
    }
    else if (v18 == 1)
    {
      v36 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(a1, a2, v36);
      v20 = a1;
      v21 = v17;
      v22 = 1;
    }
    else
    {
      if (v18)
      {
        memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        goto LABEL_44;
      }
      v19 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v20 = a1;
      v21 = v17;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
LABEL_44:
    *(_BYTE *)(a1 + v6[5]) = *((_BYTE *)a2 + v6[5]);
    *(_BYTE *)(a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    v77 = v6[8];
    v78 = a1 + v77;
    v79 = (char *)a2 + v77;
    v80 = type metadata accessor for WeatherConditionBackgroundModel(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
    if ((_OWORD *)a1 == a2)
      return a1;
    v81 = v6[9];
    v82 = (char *)(a1 + v81);
    a2 = (_OWORD *)((char *)a2 + v81);
    sub_1000215BC(a1 + v81, type metadata accessor for LocationPreviewModalViewModel);
    v83 = type metadata accessor for LocationPreviewModalViewModel(0);
    v84 = swift_getEnumCaseMultiPayload(a2);
    if (v84 == 1)
    {
      v89 = a2[1];
      *(_OWORD *)v82 = *a2;
      *((_OWORD *)v82 + 1) = v89;
      v90 = (int *)type metadata accessor for NewsArticle(0);
      v91 = v90[6];
      v92 = &v82[v91];
      v93 = (char *)a2 + v91;
      v94 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
      {
        v95 = sub_1000BA294(&qword_100BD4280);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
      }
      v96 = v90[7];
      v97 = &v82[v96];
      v98 = (char *)a2 + v96;
      v99 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
      v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32);
      v100(&v82[v90[8]], (char *)a2 + v90[8], v94);
      v101 = v90[9];
      v102 = &v82[v101];
      v103 = (char *)a2 + v101;
      v104 = *(_OWORD *)((char *)a2 + v101 + 16);
      *(_OWORD *)v102 = *(_OWORD *)((char *)a2 + v101);
      *((_OWORD *)v102 + 1) = v104;
      v105 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v106 = &v102[v105];
      v107 = &v103[v105];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v94))
      {
        v108 = sub_1000BA294(&qword_100BD4280);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        v100(v106, v107, v94);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v94);
      }
      *(_QWORD *)&v82[v90[10]] = *(_QWORD *)((char *)a2 + v90[10]);
      *(_QWORD *)&v82[v90[11]] = *(_QWORD *)((char *)a2 + v90[11]);
      *(_QWORD *)&v82[v90[12]] = *(_QWORD *)((char *)a2 + v90[12]);
      v86 = v82;
      v87 = v83;
      v88 = 1;
    }
    else
    {
      if (v84)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64);
        v16 = v82;
        goto LABEL_10;
      }
      v85 = type metadata accessor for URL(0);
      (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v82, a2, v85);
      v86 = v82;
      v87 = v83;
      v88 = 0;
    }
    swift_storeEnumTagMultiPayload(v86, v87, v88);
    return a1;
  }
  sub_1000215BC(a1, type metadata accessor for LocationPreviewViewContentModel);
LABEL_9:
  v15 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
  v16 = (void *)a1;
LABEL_10:
  memcpy(v16, a2, v15);
  return a1;
}

uint64_t sub_1005082F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100508300);
}

uint64_t sub_100508300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000CD7FC();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_100508340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050834C);
}

uint64_t sub_10050834C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1000CD7FC();
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_100508388(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationPreviewViewContentModel(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1005083B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationPreviewViewContentModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for LocationPreviewViewModel(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BEBB00, (uint64_t)&nominal type descriptor for LocationPreviewViewModel);
}

uint64_t sub_100508404(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for LocationPreviewViewContentModel(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

char *sub_100508458(char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v14;
      v15 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v15;
      v16 = (int *)type metadata accessor for NewsArticle(0);
      v17 = v16[6];
      v18 = &a1[v17];
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_1000BA294(&qword_100BD4280);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      v22 = v16[7];
      v23 = &a1[v22];
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v26(&a1[v16[8]], (char *)a2 + v16[8], v20);
      v27 = v16[9];
      v28 = &a1[v27];
      v29 = (char *)a2 + v27;
      v30 = *(uint64_t *)((char *)a2 + v27 + 8);
      *(_QWORD *)v28 = *(uint64_t *)((char *)a2 + v27);
      *((_QWORD *)v28 + 1) = v30;
      v31 = *(uint64_t *)((char *)a2 + v27 + 24);
      *((_QWORD *)v28 + 2) = *(uint64_t *)((char *)a2 + v27 + 16);
      *((_QWORD *)v28 + 3) = v31;
      v32 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v33 = &v28[v32];
      v34 = &v29[v32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v20))
      {
        v35 = sub_1000BA294(&qword_100BD4280);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v26(v33, v34, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v20);
      }
      *(_QWORD *)&a1[v16[10]] = *(uint64_t *)((char *)a2 + v16[10]);
      *(_QWORD *)&a1[v16[11]] = *(uint64_t *)((char *)a2 + v16[11]);
      *(_QWORD *)&a1[v16[12]] = *(uint64_t *)((char *)a2 + v16[12]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = a1;
      v11 = a3;
      v12 = 1;
      goto LABEL_14;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = a1;
      v11 = a3;
      v12 = 0;
LABEL_14:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

double sub_1005086FC(uint64_t a1)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (int *)type metadata accessor for NewsArticle(0);
    v6 = a1 + v5[6];
    v7 = type metadata accessor for URL(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v5[7];
    v9 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v10(a1 + v5[8], v7);
    v11 = a1 + v5[9];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v11 + *(int *)(type metadata accessor for NewsChannel(0) + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v7))
      v10(v12, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else if (!EnumCaseMultiPayload)
  {
    v4 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

char *sub_100508874(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v11;
    v12 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v12;
    v13 = (int *)type metadata accessor for NewsArticle(0);
    v14 = v13[6];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      v18 = sub_1000BA294(&qword_100BD4280);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
    v19 = v13[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v23(&a1[v13[8]], &a2[v13[8]], v17);
    v24 = v13[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *(_QWORD *)&a2[v24 + 8];
    *(_QWORD *)v25 = *(_QWORD *)&a2[v24];
    *((_QWORD *)v25 + 1) = v27;
    v28 = *(_QWORD *)&a2[v24 + 24];
    *((_QWORD *)v25 + 2) = *(_QWORD *)&a2[v24 + 16];
    *((_QWORD *)v25 + 3) = v28;
    v29 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v30 = &v25[v29];
    v31 = &v26[v29];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v17))
    {
      v32 = sub_1000BA294(&qword_100BD4280);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v23(v30, v31, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v17);
    }
    *(_QWORD *)&a1[v13[10]] = *(_QWORD *)&a2[v13[10]];
    *(_QWORD *)&a1[v13[11]] = *(_QWORD *)&a2[v13[11]];
    *(_QWORD *)&a1[v13[12]] = *(_QWORD *)&a2[v13[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = a1;
    v9 = a3;
    v10 = 1;
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
LABEL_12:
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_100508AF0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationPreviewModalViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      v11 = (int *)type metadata accessor for NewsArticle(0);
      v12 = v11[6];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        v16 = sub_1000BA294(&qword_100BD4280);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v21(&a1[v11[8]], &a2[v11[8]], v15);
      v22 = v11[9];
      v23 = &a1[v22];
      v24 = &a2[v22];
      *(_QWORD *)v23 = *(_QWORD *)&a2[v22];
      *((_QWORD *)v23 + 1) = *(_QWORD *)&a2[v22 + 8];
      *((_QWORD *)v23 + 2) = *(_QWORD *)&a2[v22 + 16];
      *((_QWORD *)v23 + 3) = *(_QWORD *)&a2[v22 + 24];
      v25 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v26 = &v23[v25];
      v27 = &v24[v25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v15))
      {
        v28 = sub_1000BA294(&qword_100BD4280);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v21(v26, v27, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v15);
      }
      *(_QWORD *)&a1[v11[10]] = *(_QWORD *)&a2[v11[10]];
      *(_QWORD *)&a1[v11[11]] = *(_QWORD *)&a2[v11[11]];
      *(_QWORD *)&a1[v11[12]] = *(_QWORD *)&a2[v11[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = a1;
      v9 = a3;
      v10 = 1;
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100508DA4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    v12 = (int *)type metadata accessor for NewsArticle(0);
    v13 = v12[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for URL(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BD4280);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v18 = v12[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
    v22(&a1[v12[8]], &a2[v12[8]], v16);
    v23 = v12[9];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *(_OWORD *)&a2[v23 + 16];
    *(_OWORD *)v24 = *(_OWORD *)&a2[v23];
    *((_OWORD *)v24 + 1) = v26;
    v27 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v28 = &v24[v27];
    v29 = &v25[v27];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v16))
    {
      v30 = sub_1000BA294(&qword_100BD4280);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v22(v28, v29, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v16);
    }
    *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
    *(_QWORD *)&a1[v12[11]] = *(_QWORD *)&a2[v12[11]];
    *(_QWORD *)&a1[v12[12]] = *(_QWORD *)&a2[v12[12]];
    v8 = a1;
    v9 = a3;
    v10 = 1;
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
LABEL_12:
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_100508FD4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationPreviewModalViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v11;
      v12 = (int *)type metadata accessor for NewsArticle(0);
      v13 = v12[6];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_1000BA294(&qword_100BD4280);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v18 = v12[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v22(&a1[v12[8]], &a2[v12[8]], v16);
      v23 = v12[9];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = *(_OWORD *)&a2[v23 + 16];
      *(_OWORD *)v24 = *(_OWORD *)&a2[v23];
      *((_OWORD *)v24 + 1) = v26;
      v27 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v28 = &v24[v27];
      v29 = &v25[v27];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v16))
      {
        v30 = sub_1000BA294(&qword_100BD4280);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v22(v28, v29, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v16);
      }
      *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
      *(_QWORD *)&a1[v12[11]] = *(_QWORD *)&a2[v12[11]];
      *(_QWORD *)&a1[v12[12]] = *(_QWORD *)&a2[v12[12]];
      v8 = a1;
      v9 = a3;
      v10 = 1;
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10050921C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for NewsArticle(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10050929C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for PreviewLocation(0);
    v6 = (char *)&loc_100509308 + 4 * byte_1009AA084[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v7 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v8;
}

double sub_100509764(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;

  type metadata accessor for PreviewLocation(0);
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
      v4 = type metadata accessor for Location(0);
      goto LABEL_4;
    case 1u:
      v4 = type metadata accessor for LocationOfInterest(0);
LABEL_4:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
      v6 = type metadata accessor for Location(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v7 = (char *)a1 + *(int *)(a2 + 32);
  v8 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (char *)a1 + *(int *)(a2 + 36);
  type metadata accessor for LocationPreviewModalViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = (int *)type metadata accessor for NewsArticle(0);
    v14 = (uint64_t)&v9[v13[6]];
    v15 = type metadata accessor for URL(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    v16 = &v9[v13[7]];
    v17 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    v18 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v18(&v9[v13[8]], v15);
    v19 = &v9[v13[9]];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = (uint64_t)&v19[*(int *)(type metadata accessor for NewsChannel(0) + 24)];
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v15))
      v18((char *)v20, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else if (!EnumCaseMultiPayload)
  {
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9, v12);
  }
  return result;
}

void sub_1005099EC(uint64_t a1, uint64_t a2)
{
  char *v3;

  type metadata accessor for PreviewLocation(0);
  v3 = (char *)sub_100509A4C + 4 * byte_1009AA08C[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

uint64_t sub_100509A4C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v63)(char *, char *, uint64_t);

  v26 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v22, v24, v26);
  swift_storeEnumTagMultiPayload(v22, v25, 0);
  v27 = v23[6];
  *(_BYTE *)(v22 + v23[5]) = *(_BYTE *)(v24 + v23[5]);
  *(_BYTE *)(v22 + v27) = *(_BYTE *)(v24 + v27);
  v28 = v23[8];
  *(_BYTE *)(v22 + v23[7]) = *(_BYTE *)(v24 + v23[7]);
  v29 = v22 + v28;
  v30 = v24 + v28;
  v31 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  v32 = v23[9];
  v33 = (char *)(v22 + v32);
  v34 = (char *)(v24 + v32);
  v35 = type metadata accessor for LocationPreviewModalViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v34);
  if (EnumCaseMultiPayload == 1)
  {
    v41 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v41;
    v42 = *((_QWORD *)v34 + 3);
    *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
    *((_QWORD *)v33 + 3) = v42;
    v43 = (int *)type metadata accessor for NewsArticle(0);
    v44 = v43[6];
    v45 = &v33[v44];
    v46 = &v34[v44];
    v47 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      v48 = sub_1000BA294(&qword_100BD4280);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    v49 = v43[7];
    v50 = &v33[v49];
    v51 = &v34[v49];
    v52 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
    v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
    v63(&v33[v43[8]], &v34[v43[8]], v47);
    v53 = v43[9];
    v54 = &v33[v53];
    v55 = &v34[v53];
    v56 = *(_QWORD *)&v34[v53 + 8];
    *(_QWORD *)v54 = *(_QWORD *)&v34[v53];
    *((_QWORD *)v54 + 1) = v56;
    v57 = *(_QWORD *)&v34[v53 + 24];
    *((_QWORD *)v54 + 2) = *(_QWORD *)&v34[v53 + 16];
    *((_QWORD *)v54 + 3) = v57;
    v58 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v59 = &v54[v58];
    v60 = &v55[v58];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v47))
    {
      v61 = sub_1000BA294(&qword_100BD4280);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v63(v59, v60, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v47);
    }
    *(_QWORD *)&v33[v43[10]] = *(_QWORD *)&v34[v43[10]];
    *(_QWORD *)&v33[v43[11]] = *(_QWORD *)&v34[v43[11]];
    *(_QWORD *)&v33[v43[12]] = *(_QWORD *)&v34[v43[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38 = v33;
    v39 = v35;
    v40 = 1;
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v37 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v33, v34, v37);
    v38 = v33;
    v39 = v35;
    v40 = 0;
LABEL_12:
    swift_storeEnumTagMultiPayload(v38, v39, v40);
    return v22;
  }
  memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  return v22;
}

uint64_t sub_100509E88(uint64_t a1, uint64_t a2, int *a3)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1000215BC(a1, type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation(0);
    v5 = (char *)&loc_100509F00 + 4 * byte_1009AA090[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

char *sub_10050A39C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  v6 = type metadata accessor for PreviewLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v12 = type metadata accessor for SearchLocation(0);
    v13 = *(int *)(v12 + 32);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v19 = *(int *)(v12 + 36);
    v20 = &a1[v19];
    v21 = &a2[v19];
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    v9 = a1;
    v10 = v6;
    v11 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v18 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
    v9 = a1;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_12;
    }
    v8 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
LABEL_12:
  v22 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v22] = a2[v22];
  v23 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[9];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for LocationPreviewModalViewModel(0);
  v31 = swift_getEnumCaseMultiPayload(v29);
  if (v31 == 1)
  {
    v36 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v36;
    v37 = (int *)type metadata accessor for NewsArticle(0);
    v38 = v37[6];
    v39 = &v28[v38];
    v40 = &v29[v38];
    v41 = type metadata accessor for URL(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = sub_1000BA294(&qword_100BD4280);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v43 = v37[7];
    v44 = &v28[v43];
    v45 = &v29[v43];
    v46 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
    v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
    v47(&v28[v37[8]], &v29[v37[8]], v41);
    v48 = v37[9];
    v49 = &v28[v48];
    v50 = &v29[v48];
    v51 = *(_OWORD *)&v29[v48 + 16];
    *(_OWORD *)v49 = *(_OWORD *)&v29[v48];
    *((_OWORD *)v49 + 1) = v51;
    v52 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v53 = &v49[v52];
    v54 = &v50[v52];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v41))
    {
      v55 = sub_1000BA294(&qword_100BD4280);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v47(v53, v54, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v41);
    }
    *(_QWORD *)&v28[v37[10]] = *(_QWORD *)&v29[v37[10]];
    *(_QWORD *)&v28[v37[11]] = *(_QWORD *)&v29[v37[11]];
    *(_QWORD *)&v28[v37[12]] = *(_QWORD *)&v29[v37[12]];
    v33 = v28;
    v34 = v30;
    v35 = 1;
    goto LABEL_23;
  }
  if (!v31)
  {
    v32 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v28, v29, v32);
    v33 = v28;
    v34 = v30;
    v35 = 0;
LABEL_23:
    swift_storeEnumTagMultiPayload(v33, v34, v35);
    return a1;
  }
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  return a1;
}

char *sub_10050A7AC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for PreviewLocation);
    v6 = type metadata accessor for PreviewLocation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v12 = type metadata accessor for SearchLocation(0);
      v13 = *(int *)(v12 + 32);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v19 = *(int *)(v12 + 36);
      v20 = &a1[v19];
      v21 = &a2[v19];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v20[16] = v21[16];
      v9 = a1;
      v10 = v6;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v18 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      v9 = a1;
      v10 = v6;
      v11 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_13;
      }
      v8 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = a1;
      v10 = v6;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
LABEL_13:
  v22 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v22] = a2[v22];
  v23 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  if (a1 != a2)
  {
    v27 = a3[9];
    v28 = &a1[v27];
    v29 = &a2[v27];
    sub_1000215BC((uint64_t)&a1[v27], type metadata accessor for LocationPreviewModalViewModel);
    v30 = type metadata accessor for LocationPreviewModalViewModel(0);
    v31 = swift_getEnumCaseMultiPayload(v29);
    if (v31 == 1)
    {
      v36 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v36;
      v37 = (int *)type metadata accessor for NewsArticle(0);
      v38 = v37[6];
      v39 = &v28[v38];
      v40 = &v29[v38];
      v41 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        v42 = sub_1000BA294(&qword_100BD4280);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      v43 = v37[7];
      v44 = &v28[v43];
      v45 = &v29[v43];
      v46 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
      v47(&v28[v37[8]], &v29[v37[8]], v41);
      v48 = v37[9];
      v49 = &v28[v48];
      v50 = &v29[v48];
      v51 = *(_OWORD *)&v29[v48 + 16];
      *(_OWORD *)v49 = *(_OWORD *)&v29[v48];
      *((_OWORD *)v49 + 1) = v51;
      v52 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v53 = &v49[v52];
      v54 = &v50[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v41))
      {
        v55 = sub_1000BA294(&qword_100BD4280);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v47(v53, v54, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v41);
      }
      *(_QWORD *)&v28[v37[10]] = *(_QWORD *)&v29[v37[10]];
      *(_QWORD *)&v28[v37[11]] = *(_QWORD *)&v29[v37[11]];
      *(_QWORD *)&v28[v37[12]] = *(_QWORD *)&v29[v37[12]];
      v33 = v28;
      v34 = v30;
      v35 = 1;
      goto LABEL_25;
    }
    if (!v31)
    {
      v32 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v28, v29, v32);
      v33 = v28;
      v34 = v30;
      v35 = 0;
LABEL_25:
      swift_storeEnumTagMultiPayload(v33, v34, v35);
      return a1;
    }
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10050ABEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10050ABF8);
}

void sub_10050ABF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_10007A020();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    if ((_DWORD)v3 == 254)
    {
      sub_100079F70();
      return;
    }
    v9 = sub_1000BE880();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 32);
    }
    else
    {
      v7 = sub_100098E6C();
      v10 = *(int *)(a3 + 36);
    }
    v8 = v4 + v10;
  }
  _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_10050ACA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050ACB4);
}

uint64_t sub_10050ACB4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_10007A020();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(v5 + a4[5]) = v4 + 1;
      return result;
    }
    v11 = sub_1000BE880();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[8];
    }
    else
    {
      v9 = sub_100098E6C();
      v12 = a4[9];
    }
    v10 = v5 + v12;
  }
  return sub_1000987C4(v10, v4, v4, v9);
}

uint64_t sub_10050AD50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  result = type metadata accessor for PreviewLocation(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    v6[1] = &unk_1009AA120;
    v6[2] = &unk_1009AA120;
    v6[3] = &unk_1009AA120;
    result = type metadata accessor for WeatherConditionBackgroundModel(319);
    if (v4 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for LocationPreviewModalViewModel(319);
      if (v5 <= 0x3F)
      {
        v6[5] = *(_QWORD *)(result - 8) + 64;
        swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10050ADFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  char *v11;
  uint64_t v13;

  type metadata accessor for LocationPreviewModalViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationPreviewViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000C2BC4(v9, v10, v13);
  if (_s7Weather24LocationCompositionStateOwet_0(v0, 1, v4) != 1)
  {
    sub_10007802C(v0, (uint64_t)v7, type metadata accessor for LocationPreviewViewContentModel);
    sub_100080C0C((uint64_t)&v7[*(int *)(v4 + 36)], (uint64_t)v3, type metadata accessor for LocationPreviewModalViewModel);
    v11 = (char *)&loc_10050AF08 + 4 * byte_1009AA094[sub_1000C6018()];
    __asm { BR              X10 }
  }
  return 0;
}

void sub_10050AF34(uint64_t a1)
{
  sub_10009BC18(a1, type metadata accessor for LocationPreviewModalViewModel);
  JUMPOUT(0x10050AF0CLL);
}

void sub_10050AF48(uint64_t a1)
{
  sub_10009BC18(a1, type metadata accessor for LocationPreviewModalViewModel);
  JUMPOUT(0x10050AF08);
}

uint64_t sub_10050AF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1000CD7FC();
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_1000DDC40();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BEBC70);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000B2634();
  v13 = v2 + v12;
  sub_100080C0C(a1, v2, type metadata accessor for LocationPreviewViewModel);
  sub_100080C0C(a2, v13, type metadata accessor for LocationPreviewViewModel);
  sub_1000BA594(v2);
  if (v16)
  {
    v14 = sub_1000BA594(v13);
    if (v16)
    {
LABEL_5:
      sub_100098AD4(v14, type metadata accessor for LocationPreviewViewModel);
      return 1;
    }
    goto LABEL_9;
  }
  sub_100080C0C(v2, (uint64_t)v10, type metadata accessor for LocationPreviewViewModel);
  sub_1000BA594(v13);
  if (v16)
  {
    sub_1000215BC((uint64_t)v10, type metadata accessor for LocationPreviewViewContentModel);
LABEL_9:
    sub_100021A14(v2, &qword_100BEBC70);
    return 0;
  }
  sub_10007802C(v13, v3, type metadata accessor for LocationPreviewViewContentModel);
  sub_10063001C((uint64_t)v10, v3);
  if ((v17 & 1) != 0)
  {
    sub_1000C16F4();
    if (v16)
    {
      sub_1000C16F4();
      if (v16)
      {
        sub_1000C16F4();
        if (v16)
        {
          if ((static WeatherConditionBackgroundModel.== infix(_:_:)(&v10[*(int *)(v6 + 32)], v3 + *(int *)(v6 + 32)) & 1) != 0)
          {
            sub_10050B1CC((uint64_t)&v10[*(int *)(v6 + 36)], v3 + *(int *)(v6 + 36));
            if ((v18 & 1) != 0)
            {
              sub_1000B3B44(v3);
              sub_1000B3B44((uint64_t)v10);
              goto LABEL_5;
            }
          }
        }
      }
    }
  }
  sub_1000B3B44(v3);
  sub_1000B3B44((uint64_t)v10);
  sub_100098AD4(v19, type metadata accessor for LocationPreviewViewModel);
  return 0;
}

void sub_10050B144(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_10063001C(a1, a2);
  if ((v4 & 1) != 0
    && (sub_1000CD7FC(), sub_1000BA538(), v6)
    && (v7 = v5, sub_1000BA538(), v6)
    && (sub_1000BA538(), v6)
    && (static WeatherConditionBackgroundModel.== infix(_:_:)(a1 + *(int *)(v7 + 32), a2 + *(int *)(v7 + 32)) & 1) != 0)
  {
    sub_10050B1CC(a1 + *(int *)(v7 + 36), a2 + *(int *)(v7 + 36));
  }
  else
  {
    sub_100079F70();
  }
}

void sub_10050B1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  type metadata accessor for NewsArticle(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  v14 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  __chkstk_darwin(v15);
  v7 = sub_1000DD05C();
  sub_1000B42B0();
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  sub_1000BA294(&qword_100BEBC78);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_1000B2634();
  v12 = v2 + v11;
  sub_100080C0C(a1, v2, type metadata accessor for LocationPreviewModalViewModel);
  sub_100080C0C(a2, v12, type metadata accessor for LocationPreviewModalViewModel);
  v13 = (char *)sub_10050B304 + 4 * byte_1009AA09E[swift_getEnumCaseMultiPayload(v2, v7)];
  __asm { BR              X10 }
}

uint64_t sub_10050B304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  sub_100080C0C(v0, v3, type metadata accessor for LocationPreviewModalViewModel);
  if (sub_1000BC480())
  {
    (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v3, *(_QWORD *)(v5 - 88));
    sub_100021A14(v0, &qword_100BEBC78);
    v6 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v5 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v4, v8);
    v6 = static URL.== infix(_:_:)(v3, v2);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    v9(v2, v8);
    v10 = v9(v3, v8);
    sub_100098AD4(v10, type metadata accessor for LocationPreviewModalViewModel);
  }
  return v6 & 1;
}

uint64_t sub_10050B4D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[10];

  v4 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_1000DDC40();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000C2BC4(v7, v8, v18[0]);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v4) == 1)
  {
    v9 = 0xED0000676E697765;
    v10 = 0x6976657250746F6ELL;
  }
  else
  {
    sub_10007802C(v2, v1, type metadata accessor for LocationPreviewViewContentModel);
    sub_100086DA4(&qword_100BEBC90, type metadata accessor for LocationPreviewViewContentModel, (uint64_t)&unk_1009AA1B8);
    v10 = ShortDescribable.description.getter(v4, v11);
    v9 = v12;
    sub_1000215BC(v1, type metadata accessor for LocationPreviewViewContentModel);
  }
  v13 = sub_1000BA294(&qword_100BC31F0);
  *(_OWORD *)(swift_initStackObject(v13, v18) + 16) = xmmword_10097CA50;
  sub_1000C0AA4();
  v14[4] = 0xD000000000000018;
  v14[5] = v15;
  v14[9] = &type metadata for String;
  v14[6] = v10;
  v14[7] = v9;
  Dictionary.init(dictionaryLiteral:)(v14);
  *(_QWORD *)(a1 + 24) = sub_1000BA294(&qword_100BEBC80);
  sub_10029E5F4(&qword_100BEBC88, &qword_100BEBC80);
  sub_1000C4B18(v16);
  return sub_1000C3C54((uint64_t)"LocationPreviewModalViewModel");
}

uint64_t sub_10050B67C(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEBC98, type metadata accessor for LocationPreviewViewModel, (uint64_t)&unk_1009AA210);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_10050B6BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v3, &v20);
  *(_OWORD *)(inited + 16) = xmmword_1009891E0;
  *(_QWORD *)(inited + 32) = 0x4C77656976657270;
  *(_QWORD *)(inited + 40) = 0xEF6E6F697461636FLL;
  *(_QWORD *)(inited + 72) = type metadata accessor for PreviewLocation(0);
  sub_100077A84((_QWORD *)(inited + 48));
  sub_100080C0C(v1, v5, type metadata accessor for PreviewLocation);
  sub_1000C0AA4();
  *(_QWORD *)(inited + 80) = 0xD000000000000019;
  *(_QWORD *)(inited + 88) = v6;
  v7 = type metadata accessor for LocationPreviewViewContentModel(0);
  *(_BYTE *)(inited + 96) = *(_BYTE *)(v1 + *(int *)(v7 + 20));
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_QWORD *)(inited + 128) = 0xD000000000000021;
  sub_1000C0AA4();
  *(_QWORD *)(inited + 136) = v8;
  *(_BYTE *)(inited + 144) = *(_BYTE *)(v1 + *(int *)(v9 + 28));
  *(_QWORD *)(inited + 168) = v10;
  *(_QWORD *)(inited + 176) = 0xD00000000000001ALL;
  sub_1000C0AA4();
  *(_QWORD *)(inited + 184) = v11;
  v12 = sub_1000BE880();
  *(_QWORD *)(inited + 216) = v12;
  sub_100077A84((_QWORD *)(inited + 192));
  (*(void (**)(void))(*(_QWORD *)(v12 - 8) + 16))();
  strcpy((char *)(inited + 224), "modalViewModel");
  *(_BYTE *)(inited + 239) = -18;
  v13 = sub_100098E6C();
  sub_100086DA4(&qword_100BEBCA0, type metadata accessor for LocationPreviewModalViewModel, (uint64_t)&unk_1009AA160);
  v15 = ShortDescribable.description.getter(v13, v14);
  *(_QWORD *)(inited + 264) = &type metadata for String;
  *(_QWORD *)(inited + 240) = v15;
  *(_QWORD *)(inited + 248) = v16;
  v17 = Dictionary.init(dictionaryLiteral:)(inited);
  *(_QWORD *)(a1 + 24) = sub_1000BA294(&qword_100BEBCA8);
  sub_10029E5F4(&qword_100BEBCB0, &qword_100BEBCA8);
  sub_1000C4B18(v18);
  return ShortDescription.init(name:_:)(0xD00000000000001FLL, 0x80000001009AA0E0, v17, v7);
}

uint64_t sub_10050B904(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEBC90, type metadata accessor for LocationPreviewViewContentModel, (uint64_t)&unk_1009AA1B8);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_10050B944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  __chkstk_darwin(v1);
  sub_1000DD05C();
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100080C0C(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_10050BA04 + 4 * byte_1009AA0A8[sub_1000C6018()];
  __asm { BR              X10 }
}

uint64_t sub_10050BA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v1, v2);
  *(_QWORD *)(v5 - 176) = 0;
  *(_QWORD *)(v5 - 168) = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)(v5 - 176), "callToAction(");
  *(_WORD *)(v5 - 162) = -4864;
  sub_100086DA4(&qword_100BCCFF8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2);
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v9 = *(_QWORD *)(v5 - 176);
  v8 = *(_QWORD *)(v5 - 168);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  v10 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v10, v5 - 160);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0x657669746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v8;
  Dictionary.init(dictionaryLiteral:)(inited);
  *(_QWORD *)(v0 + 24) = sub_1000BA294(&qword_100BEBCB8);
  sub_10029E5F4(&qword_100BEBCC0, &qword_100BEBCB8);
  sub_1000C4B18(v12);
  return sub_1000C3C54((uint64_t)"LocationPreviewModalViewModel");
}

uint64_t sub_10050BC50(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BEBCA0, type metadata accessor for LocationPreviewModalViewModel, (uint64_t)&unk_1009AA160);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_10050BC90()
{
  sub_100086DA4(&qword_100BEBC58, type metadata accessor for LocationPreviewModalViewModel, (uint64_t)&unk_1009AA138);
}

void sub_10050BCBC()
{
  sub_100086DA4(&qword_100BEBC60, type metadata accessor for LocationPreviewViewContentModel, (uint64_t)&unk_1009AA190);
}

void sub_10050BCE8()
{
  sub_100086DA4(&qword_100BEBC68, type metadata accessor for LocationPreviewViewModel, (uint64_t)&unk_1009AA1E8);
}

uint64_t sub_10050BD14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 56);
  sub_100043CA8(v1 + 16, (uint64_t)(a1 + 2));
  swift_retain();
  v4 = sub_1000BA294(&qword_100BC43A8);
  v5 = sub_10050BD98();
  result = ObservedObject.init(wrappedValue:)(v3, v4, v5);
  *a1 = result;
  a1[1] = v7;
  return result;
}

uint64_t type metadata accessor for AirQualityDetailModule()
{
  return objc_opt_self(_TtC7Weather22AirQualityDetailModule);
}

unint64_t sub_10050BD98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC43D8;
  if (!qword_100BC43D8)
  {
    v1 = sub_100075EB0(&qword_100BC43A8);
    result = swift_getWitnessTable(&unk_1009D9950, v1);
    atomic_store(result, (unint64_t *)&qword_100BC43D8);
  }
  return result;
}

uint64_t sub_10050BDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  BOOL v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  char v76;
  char v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v86 = sub_100098AA0();
  v83 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  sub_100098728();
  v82 = v6 - v5;
  v85 = sub_1000BA294(&qword_100BCD780);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_10009883C();
  v84 = v12 - v13;
  __chkstk_darwin(v14);
  v87 = (uint64_t)&v78 - v15;
  __chkstk_darwin(v16);
  v88 = (uint64_t)&v78 - v17;
  v18 = type metadata accessor for Location(0);
  v89 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_100099864();
  v19 = sub_1000BA294(&qword_100BCE968);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_10009883C();
  v27 = v25 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v78 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v78 - v32;
  sub_1000EF360();
  if ((v34 & 1) == 0)
    goto LABEL_22;
  v78 = v10;
  v35 = type metadata accessor for WeatherMenuInput(0);
  v36 = *(int *)(v35 + 20);
  v80 = a1;
  sub_1000DBB44(a1 + v36, (uint64_t)v33);
  v79 = (int *)v35;
  v37 = *(int *)(v35 + 20);
  v81 = a2;
  sub_1000DBB44(a2 + v37, (uint64_t)v30);
  v38 = v23 + *(int *)(v19 + 48);
  sub_1000DBB44((uint64_t)v33, v23);
  sub_1000DBB44((uint64_t)v30, v38);
  sub_100088FC8(v23, 1, v18);
  if (v39)
  {
    sub_10009E47C((uint64_t)v30);
    sub_10009E47C((uint64_t)v33);
    sub_100088FC8(v38, 1, v18);
    if (v39)
    {
      sub_100021A14(v23, &qword_100BC35F8);
      goto LABEL_12;
    }
LABEL_10:
    v40 = &qword_100BCE968;
    v41 = v23;
LABEL_21:
    sub_100021A14(v41, v40);
    goto LABEL_22;
  }
  sub_100037794(v23, v27, &qword_100BC35F8);
  sub_100088FC8(v38, 1, v18);
  if (v39)
  {
    sub_10009E47C((uint64_t)v30);
    sub_10009E47C((uint64_t)v33);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v27, v18);
    goto LABEL_10;
  }
  v42 = v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v2, v38, v18);
  sub_100086DA4((unint64_t *)&qword_100BC35B8, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  v44 = dispatch thunk of static Equatable.== infix(_:_:)(v27, v2, v18, v43);
  v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v45(v2, v18);
  sub_10009E47C((uint64_t)v30);
  sub_10009E47C((uint64_t)v33);
  v45(v27, v18);
  sub_10009E47C(v23);
  if ((v44 & 1) == 0)
    goto LABEL_22;
LABEL_12:
  v47 = v79;
  v46 = v80;
  v48 = v88;
  sub_1000E7164(v80 + v79[6], v88);
  v49 = v81;
  v50 = v87;
  sub_1000E7164(v81 + v47[6], v87);
  v51 = v78;
  v52 = v78 + *(int *)(v85 + 48);
  sub_1000E7164(v48, v78);
  sub_1000E7164(v50, v52);
  v53 = v86;
  sub_100088FC8(v51, 1, v86);
  if (v39)
  {
    sub_100099298(v50);
    sub_100099298(v48);
    sub_100088FC8(v52, 1, v53);
    if (v39)
    {
      sub_100021A14(v51, &qword_100BCD680);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  v54 = v84;
  sub_100037794(v51, v84, &qword_100BCD680);
  sub_100088FC8(v52, 1, v53);
  if (v55)
  {
    sub_100021A14(v50, &qword_100BCD680);
    sub_100021A14(v48, &qword_100BCD680);
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v54, v53);
LABEL_20:
    v40 = &qword_100BCD780;
    v41 = v51;
    goto LABEL_21;
  }
  v59 = v82;
  v58 = v83;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32))(v82, v52, v53);
  sub_100086DA4((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
  v61 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v59, v53, v60);
  v62 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v62(v59, v53);
  sub_100099298(v87);
  sub_100099298(v88);
  v62(v54, v53);
  sub_100099298(v51);
  if ((v61 & 1) == 0)
    goto LABEL_22;
LABEL_25:
  if ((sub_10011CD38(*(_BYTE *)(v46 + v47[7]), *(_BYTE *)(v49 + v47[7])) & 1) == 0
    || (static WeatherMapOverlayKind.== infix(_:_:)(v46 + v47[8], v49 + v47[8]) & 1) == 0)
  {
    goto LABEL_22;
  }
  v63 = v47[9];
  v64 = *(_QWORD *)(v46 + v63);
  v65 = *(_QWORD *)(v46 + v63 + 8);
  v66 = (_QWORD *)(v49 + v63);
  v67 = v64 == *v66 && v65 == v66[1];
  if (v67 || (v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, *v66), v56 = 0, (v68 & 1) != 0))
  {
    sub_10009E970();
    if ((v69 & 1) != 0)
    {
      sub_10009B6B0();
      if ((v70 & 1) != 0)
      {
        v71 = v47[10];
        v72 = *(void **)(v46 + v71);
        v73 = *(void **)(v49 + v71);
        if (v72)
        {
          if (v73)
          {
            sub_10009AA74();
            v74 = v73;
            v75 = v72;
            v76 = static NSObject.== infix(_:_:)(v75, v74);

            if ((v76 & 1) != 0)
            {
LABEL_39:
              sub_10094907C();
              if ((v77 & 1) != 0)
              {
                v56 = *(_BYTE *)(v46 + v47[12]) ^ *(_BYTE *)(v49 + v47[12]) ^ 1;
                return v56 & 1;
              }
            }
          }
        }
        else if (!v73)
        {
          goto LABEL_39;
        }
      }
    }
LABEL_22:
    v56 = 0;
  }
  return v56 & 1;
}

double sub_10050C420@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  double result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61[24];

  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100099864();
  v60 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  sub_1000BA294(&qword_100BD0F98);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_10009883C();
  v25 = v23 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v56 - v27;
  sub_1008C3EC4();
  v58 = v21;
  sub_10000AB54(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v21, type metadata accessor for ModalViewState);
  v29 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  sub_10000AB54(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v9, type metadata accessor for LocationsState);
  sub_100037794(v9, v13, (uint64_t *)&unk_100C0D170);
  sub_1000215BC(v9, type metadata accessor for LocationsState);
  v30 = type metadata accessor for CurrentLocation(0);
  v31 = sub_100088FC8(v13, 1, v30);
  if (v32)
  {
    sub_100021A14(v13, (uint64_t *)&unk_100C0D170);
    v33 = type metadata accessor for Location(0);
    _s7Weather24LocationCompositionStateOwst_0(v17, 1, 1, v33);
  }
  else
  {
    CurrentLocation.location.getter(v31);
    sub_1000215BC(v13, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  sub_1000F111C((uint64_t)v28, v25, &qword_100BD0F98);
  v34 = type metadata accessor for PresentedLocation(0);
  sub_100088FC8(v25, 1, v34);
  v59 = v17;
  v57 = v2;
  if (v32)
  {
    sub_100021A14(v25, &qword_100BD0F98);
    v38 = sub_100098AA0();
    v36 = v2;
    v37 = 1;
  }
  else
  {
    v35 = sub_100098AA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v2, v25, v35);
    sub_1000215BC(v25, type metadata accessor for PresentedLocation);
    v36 = v2;
    v37 = 0;
    v38 = v35;
  }
  _s7Weather24LocationCompositionStateOwst_0(v36, v37, 1, v38);
  v39 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  v40 = a1 + *(int *)(type metadata accessor for ViewState(0) + 40) + v39;
  v41 = *(_BYTE *)(v40 + 1);
  v42 = v40 + *(int *)(type metadata accessor for WeatherMapPresentationState(0) + 24);
  v43 = (int *)type metadata accessor for WeatherMenuInput(0);
  v44 = a2 + v43[8];
  v45 = sub_1000B4608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v44, v42, v45);
  v46 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v47 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v49 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v48 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  v50 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v50, v61, 0, 0);
  v51 = *(void **)(v50 + *(int *)(type metadata accessor for EnvironmentState(0) + 64) + 16);
  v52 = *(_QWORD *)(v29 + *(int *)(v60 + 28));
  LOBYTE(v50) = *(_BYTE *)(v50 + 2) == 4;
  sub_100516DAC(v58, a2);
  sub_1000F111C(v59, a2 + v43[5], &qword_100BC35F8);
  sub_1000F111C(v57, a2 + v43[6], &qword_100BCD680);
  *(_BYTE *)(a2 + v43[7]) = v41;
  v53 = (_QWORD *)(a2 + v43[9]);
  *v53 = v46;
  v53[1] = v47;
  v53[2] = v49;
  v53[3] = v48;
  *(_QWORD *)(a2 + v43[10]) = v51;
  *(_QWORD *)(a2 + v43[11]) = v52;
  *(_BYTE *)(a2 + v43[12]) = v50;
  _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, (uint64_t)v43);
  v54 = v51;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v49);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v48).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for WeatherMenuInputFactory()
{
  return objc_opt_self(_TtC7Weather23WeatherMenuInputFactory);
}

uint64_t *sub_10050C87C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t *result;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ModalViewState(0);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        type metadata accessor for PreviewLocation(0);
        v8 = (char *)&loc_10050C924
           + 4 * algn_1009AA347[swift_getEnumCaseMultiPayload(a2)];
        __asm { BR              X10 }
        return result;
      case 2u:
        *a1 = *a2;
        swift_retain();
        v10 = a1;
        v11 = v7;
        v12 = 2;
        goto LABEL_12;
      case 3u:
        *a1 = *a2;
        swift_retain();
        v10 = a1;
        v11 = v7;
        v12 = 3;
        goto LABEL_12;
      case 4u:
        v13 = type metadata accessor for ModalViewState.MapViewModal(0);
        if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v13))
        {
          type metadata accessor for PreviewLocation(0);
          v16 = (char *)&loc_10050CB1C + 4 * word_1009AA336[swift_getEnumCaseMultiPayload(a2)];
          __asm { BR              X10 }
        }
        v14 = sub_1000BA294(&qword_100BC5F58);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v10 = a1;
        v11 = v7;
        v12 = 4;
LABEL_12:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        break;
      case 5u:
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        v15 = (char *)&loc_10050CA3C + 4 * word_1009AA326[swift_getEnumCaseMultiPayload(a2)];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v17 = a3[5];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v22 = a3[6];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for Location.Identifier(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      v26 = sub_1000BA294(&qword_100BCD680);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    v27 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = type metadata accessor for WeatherMapOverlayKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    v31 = a3[9];
    v32 = a3[10];
    v33 = (uint64_t *)((char *)a1 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = v34[3];
    v33[2] = v34[2];
    v33[3] = v36;
    v37 = *(void **)((char *)a2 + v32);
    *(uint64_t *)((char *)a1 + v32) = (uint64_t)v37;
    v38 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = v37;
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_10050E790(id *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  __n128 v19;
  void (*v20)(uint64_t, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  double result;

  type metadata accessor for ModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
      type metadata accessor for PreviewLocation(0);
      switch(swift_getEnumCaseMultiPayload(a1))
      {
        case 0u:
          v4 = type metadata accessor for Location(0);
          goto LABEL_11;
        case 1u:
          v4 = type metadata accessor for LocationOfInterest(0);
LABEL_11:
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
          break;
        case 2u:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v8 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
          v9 = type metadata accessor for Location(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          break;
        case 3u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      v10 = (char *)a1 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
      type metadata accessor for LocationPreviewModalViewState(0);
      switch(swift_getEnumCaseMultiPayload(v10))
      {
        case 0u:
          goto LABEL_37;
        case 1u:
          goto LABEL_38;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_36;
        case 5u:
          goto LABEL_43;
        case 6u:
          goto LABEL_49;
        case 7u:
          goto LABEL_54;
        case 8u:
          goto LABEL_57;
        default:
          goto LABEL_60;
      }
    case 2u:
    case 3u:
      swift_release();
      break;
    case 4u:
      v5 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v5))
      {
        type metadata accessor for PreviewLocation(0);
        switch(swift_getEnumCaseMultiPayload(a1))
        {
          case 0u:
            v6 = type metadata accessor for Location(0);
            goto LABEL_30;
          case 1u:
            v6 = type metadata accessor for LocationOfInterest(0);
LABEL_30:
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
            break;
          case 2u:

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v32 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
            v33 = type metadata accessor for Location(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
            break;
          case 3u:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        v10 = (char *)a1 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload(v10))
        {
          case 0u:
LABEL_37:
            v34 = type metadata accessor for URL(0);
            goto LABEL_59;
          case 1u:
LABEL_38:
            v35 = type metadata accessor for DetailCondition(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v10, v35);
            v36 = (int *)type metadata accessor for ConditionDetailViewState(0);
            v37 = &v10[v36[5]];
            v38 = type metadata accessor for Location(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
            v39 = (uint64_t)&v10[v36[6]];
            v40 = type metadata accessor for Date(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
            v41 = (uint64_t)&v10[v36[8]];
            v42 = (int *)type metadata accessor for DetailChartSelection(0);
            if (_s7Weather24LocationCompositionStateOwet_0(v41, 1, (uint64_t)v42))
              goto LABEL_60;
            v43 = swift_bridgeObjectRelease();
            v20 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v40 - 8) + 8);
            v20(v41 + v42[5], v40, v43);
            ((void (*)(uint64_t, uint64_t))v20)(v41 + v42[6], v40);
            v21 = v41 + v42[7];
            v22 = v40;
            break;
          case 2u:
          case 3u:
          case 4u:
LABEL_36:
            v34 = type metadata accessor for Location(0);
            goto LABEL_59;
          case 5u:
LABEL_43:
            v44 = type metadata accessor for Location(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v10, v44);
            v45 = type metadata accessor for MoonDetailViewState(0);
            v46 = (uint64_t)&v10[*(int *)(v45 + 20)];
            v47 = type metadata accessor for MoonDetailSelectedDate(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47)
              && swift_getEnumCaseMultiPayload(v46) <= 2)
            {
              v48 = type metadata accessor for Date(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v46, v48);
            }
            v28 = (uint64_t)&v10[*(int *)(v45 + 24)];
            goto LABEL_47;
          case 6u:
LABEL_49:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v50 = (int *)type metadata accessor for NewsArticle(0);
            v51 = (uint64_t)&v10[v50[6]];
            v52 = type metadata accessor for URL(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v51, 1, v52))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
            v53 = &v10[v50[7]];
            v54 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
            v55 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v52 - 8) + 8);
            v55(&v10[v50[8]], v52);
            v56 = &v10[v50[9]];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v57 = (uint64_t)&v56[*(int *)(type metadata accessor for NewsChannel(0) + 24)];
            if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v52))
              v55((char *)v57, v52);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_60;
          case 7u:
LABEL_54:
            v58 = type metadata accessor for Location(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v10, v58);
            v30 = (uint64_t)&v10[*(int *)(type metadata accessor for AveragesDetailViewState(0) + 24)];
            goto LABEL_55;
          case 8u:
LABEL_57:
            v60 = type metadata accessor for Location(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v10, v60);
            v10 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState(0) + 20);
            goto LABEL_58;
          default:
            goto LABEL_60;
        }
LABEL_42:
        ((void (*)(uint64_t, uint64_t))v20)(v21, v22);
      }
      break;
    case 5u:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      switch(swift_getEnumCaseMultiPayload(a1))
      {
        case 0u:
          v11 = type metadata accessor for DetailCondition(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
          v12 = (int *)type metadata accessor for ConditionDetailViewState(0);
          v13 = (char *)a1 + v12[5];
          v14 = type metadata accessor for Location(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
          v15 = (uint64_t)a1 + v12[6];
          v16 = type metadata accessor for Date(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          v17 = (uint64_t)a1 + v12[8];
          v18 = (int *)type metadata accessor for DetailChartSelection(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, (uint64_t)v18))
          {
            v19 = swift_bridgeObjectRelease();
            v20 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 8);
            v20(v17 + v18[5], v16, v19);
            ((void (*)(uint64_t, uint64_t))v20)(v17 + v18[6], v16);
            v21 = v17 + v18[7];
            v22 = v16;
            goto LABEL_42;
          }
          goto LABEL_60;
        case 1u:
        case 2u:
        case 3u:
          v7 = type metadata accessor for Location(0);
          goto LABEL_27;
        case 4u:
          v23 = type metadata accessor for Location(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
          v24 = type metadata accessor for MoonDetailViewState(0);
          v25 = (uint64_t)a1 + *(int *)(v24 + 20);
          v26 = type metadata accessor for MoonDetailSelectedDate(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26)
            && swift_getEnumCaseMultiPayload(v25) <= 2)
          {
            v27 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
          }
          v28 = (uint64_t)a1 + *(int *)(v24 + 24);
LABEL_47:
          v49 = type metadata accessor for Date(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v49))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v28, v49);
          goto LABEL_60;
        case 5u:
          v29 = type metadata accessor for Location(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
          v30 = (uint64_t)a1 + *(int *)(type metadata accessor for AveragesDetailViewState(0) + 24);
LABEL_55:
          v59 = type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v59))
            goto LABEL_60;
          v10 = (char *)(v30 + *(int *)(v59 + 20));
          v34 = type metadata accessor for Date(0);
LABEL_59:
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v10, v34);
          break;
        case 6u:
          v7 = type metadata accessor for URL(0);
LABEL_27:
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          goto LABEL_60;
        case 7u:
          v31 = type metadata accessor for Location(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(a1, v31);
          v10 = (char *)a1 + *(int *)(type metadata accessor for HomeAndWorkRefinementViewState(0) + 20);
LABEL_58:
          v34 = type metadata accessor for LocationOfInterest(0);
          goto LABEL_59;
        default:
          goto LABEL_60;
      }
      break;
    default:
      break;
  }
LABEL_60:
  v61 = (uint64_t)a1 + a2[5];
  v62 = type metadata accessor for Location(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
  v63 = (uint64_t)a1 + a2[6];
  v64 = type metadata accessor for Location.Identifier(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v63, 1, v64))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
  v65 = (char *)a1 + a2[8];
  v66 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_10050F0D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  _QWORD *result;

  v6 = type metadata accessor for ModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(a2))
  {
    case 0u:
      type metadata accessor for PreviewLocation(0);
      v7 = (char *)&loc_10050F174 + 4 * byte_1009AA3A9[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
      return result;
    case 2u:
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 2;
      goto LABEL_10;
    case 3u:
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 3;
      goto LABEL_10;
    case 4u:
      v11 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v11))
      {
        type metadata accessor for PreviewLocation(0);
        v14 = (char *)&loc_10050F34C + 4 * word_1009AA398[swift_getEnumCaseMultiPayload(a2)];
        __asm { BR              X10 }
      }
      v12 = sub_1000BA294(&qword_100BC5F58);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v8 = a1;
      v9 = v6;
      v10 = 4;
LABEL_10:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    case 5u:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      v13 = (char *)&loc_10050F26C + 4 * word_1009AA388[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
      return result;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = a3[5];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Location(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v20 = a3[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for Location.Identifier(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_1000BA294(&qword_100BCD680);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  v25 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  v29 = a3[9];
  v30 = a3[10];
  v31 = (_QWORD *)((char *)a1 + v29);
  v32 = (_QWORD *)((char *)a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v32[3];
  v31[2] = v32[2];
  v31[3] = v34;
  v35 = *(void **)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v35;
  v36 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = v35;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_100510FC0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  _QWORD *result;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for ModalViewState);
    v6 = type metadata accessor for ModalViewState(0);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        type metadata accessor for PreviewLocation(0);
        v7 = (char *)&loc_100511074 + 4 * byte_1009AA3DD[swift_getEnumCaseMultiPayload(a2)];
        __asm { BR              X10 }
        return result;
      case 2u:
        *a1 = *a2;
        swift_retain();
        v8 = a1;
        v9 = v6;
        v10 = 2;
        goto LABEL_11;
      case 3u:
        *a1 = *a2;
        swift_retain();
        v8 = a1;
        v9 = v6;
        v10 = 3;
        goto LABEL_11;
      case 4u:
        v11 = type metadata accessor for ModalViewState.MapViewModal(0);
        if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v11))
        {
          type metadata accessor for PreviewLocation(0);
          v14 = (char *)&loc_10051124C + 4 * word_1009AA3CC[swift_getEnumCaseMultiPayload(a2)];
          __asm { BR              X10 }
        }
        v12 = sub_1000BA294(&qword_100BC5F58);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v8 = a1;
        v9 = v6;
        v10 = 4;
LABEL_11:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      case 5u:
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        v13 = (char *)&loc_10051116C + 4 * word_1009AA3BC[swift_getEnumCaseMultiPayload(a2)];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v15 = a3[5];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Location(0);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  v21 = *(_QWORD *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
LABEL_17:
    v22 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v16, v17, v18);
LABEL_18:
  v23 = a3[6];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = type metadata accessor for Location.Identifier(0);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (!v27)
  {
    v29 = *(_QWORD *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v24, v25, v26);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v26);
    goto LABEL_23;
  }
  if (v28)
  {
LABEL_23:
    v30 = sub_1000BA294(&qword_100BCD680);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
LABEL_24:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v31 = a3[8];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[9];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (char *)a2 + v35;
  *v36 = *(_QWORD *)((char *)a2 + v35);
  v36[1] = *(_QWORD *)((char *)a2 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36[2] = *((_QWORD *)v37 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36[3] = *((_QWORD *)v37 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[10];
  v39 = *(void **)((char *)a1 + v38);
  v40 = *(void **)((char *)a2 + v38);
  *(_QWORD *)((char *)a1 + v38) = v40;
  v41 = v40;

  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

_QWORD *sub_100513030(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD *v128;
  char *v129;
  __int128 v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  __int128 v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  _OWORD *v157;
  _OWORD *v158;
  uint64_t v159;
  uint64_t v160;
  _OWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  __int128 v219;
  uint64_t v220;
  char *v221;
  char *v222;
  __int128 v223;
  uint64_t v224;
  _OWORD *v225;
  _OWORD *v226;
  int *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  _OWORD *v240;
  char *v241;
  __int128 v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  __int128 v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  __int128 v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  __int128 v276;
  __int128 v277;
  _OWORD *v278;
  uint64_t v279;
  void (*v281)(char *, char *, uint64_t);
  char *v282;
  void (*v283)(char *, char *);
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unsigned int v288;
  char *v289;
  char *__dst;
  int *__dsta;
  int *__dstb;
  void (*__dstc)(char *, char *, uint64_t);
  char *__dsti;
  char *__dstd;
  int *__dste;
  int *__dstf;
  int *__dstg;
  int *__dsth;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;

  v6 = type metadata accessor for ModalViewState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 5)
  {
    type metadata accessor for ModalViewState.LocationDetailModal(0);
    v14 = (char *)&loc_100513118 + 4 * word_1009AA3EA[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  if (EnumCaseMultiPayload != 4)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_100;
    }
    v8 = type metadata accessor for PreviewLocation(0);
    v9 = swift_getEnumCaseMultiPayload(a2);
    if (v9 == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v23 = type metadata accessor for SearchLocation(0);
      v24 = *(int *)(v23 + 32);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
      {
        v28 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      }
      v37 = *(int *)(v23 + 36);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      *(_OWORD *)v38 = *(_OWORD *)v39;
      v38[16] = v39[16];
      v11 = a1;
      v12 = v8;
      v13 = 2;
    }
    else if (v9 == 1)
    {
      v29 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
      v11 = a1;
      v12 = v8;
      v13 = 1;
    }
    else
    {
      if (v9)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_27:
        v40 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        v41 = (_OWORD *)((char *)a1 + v40);
        v42 = (_OWORD *)((char *)a2 + v40);
        v43 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload(v42))
        {
          case 0u:
            v44 = type metadata accessor for URL(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
            v45 = v41;
            v46 = v43;
            v47 = 0;
            goto LABEL_59;
          case 1u:
            v48 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v41, v42, v48);
            v49 = (int *)type metadata accessor for ConditionDetailViewState(0);
            v50 = v49[5];
            v51 = (char *)v41 + v50;
            v52 = (char *)v42 + v50;
            v53 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
            v54 = v49[6];
            __dst = (char *)v41 + v54;
            v55 = (char *)v42 + v54;
            v56 = type metadata accessor for Date(0);
            v300 = v43;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
            {
              v57 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(__dst, v55, v56);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v56);
            }
            v106 = v49[7];
            v107 = (char *)v41 + v106;
            v108 = (char *)v42 + v106;
            v109 = *((_OWORD *)v108 + 1);
            *(_OWORD *)v107 = *(_OWORD *)v108;
            *((_OWORD *)v107 + 1) = v109;
            v107[32] = v108[32];
            __dstb = v49;
            v110 = v49[8];
            v111 = (_OWORD *)((char *)v41 + v110);
            v112 = (_OWORD *)((char *)v42 + v110);
            v113 = (int *)type metadata accessor for DetailChartSelection(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, (uint64_t)v113))
            {
              v114 = sub_1000BA294(&qword_100BD0B58);
              memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
            }
            else
            {
              *v111 = *v112;
              v141 = v56;
              v285 = v56;
              v142 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32);
              v142((char *)v111 + v113[5], (char *)v112 + v113[5], v141);
              v142((char *)v111 + v113[6], (char *)v112 + v113[6], v285);
              v142((char *)v111 + v113[7], (char *)v112 + v113[7], v285);
              *(_QWORD *)((char *)v111 + v113[8]) = *(_QWORD *)((char *)v112 + v113[8]);
              v143 = v113[9];
              v144 = (char *)v111 + v143;
              v145 = (char *)v112 + v143;
              v144[8] = v145[8];
              *(_QWORD *)v144 = *(_QWORD *)v145;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, (uint64_t)v113);
            }
            v46 = v300;
            *((_BYTE *)v41 + __dstb[9]) = *((_BYTE *)v42 + __dstb[9]);
            v45 = v41;
            v47 = 1;
            goto LABEL_59;
          case 2u:
            v58 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v41, v42, v58);
            v59 = type metadata accessor for AirQualityDetailViewState(0);
            *((_BYTE *)v41 + *(int *)(v59 + 20)) = *((_BYTE *)v42 + *(int *)(v59 + 20));
            v60 = *(int *)(v59 + 24);
            v61 = (char *)v41 + v60;
            v62 = (char *)v42 + v60;
            v61[32] = v62[32];
            v63 = *((_OWORD *)v62 + 1);
            *(_OWORD *)v61 = *(_OWORD *)v62;
            *((_OWORD *)v61 + 1) = v63;
            v45 = v41;
            v46 = v43;
            v47 = 2;
            goto LABEL_59;
          case 3u:
            v64 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v41, v42, v64);
            v65 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
            v66 = (char *)v41 + v65;
            v67 = (char *)v42 + v65;
            v68 = *((_OWORD *)v67 + 1);
            *(_OWORD *)v66 = *(_OWORD *)v67;
            *((_OWORD *)v66 + 1) = v68;
            v66[32] = v67[32];
            v45 = v41;
            v46 = v43;
            v47 = 3;
            goto LABEL_59;
          case 4u:
            v69 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v41, v42, v69);
            v70 = type metadata accessor for SunriseSunsetDetailViewState(0);
            v71 = *(int *)(v70 + 20);
            v72 = (char *)v41 + v71;
            v73 = (char *)v42 + v71;
            v74 = *((_OWORD *)v73 + 1);
            *(_OWORD *)v72 = *(_OWORD *)v73;
            *((_OWORD *)v72 + 1) = v74;
            v72[32] = v73[32];
            *((_BYTE *)v41 + *(int *)(v70 + 24)) = *((_BYTE *)v42 + *(int *)(v70 + 24));
            v45 = v41;
            v46 = v43;
            v47 = 4;
            goto LABEL_59;
          case 5u:
            v301 = v43;
            v75 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v41, v42, v75);
            v76 = type metadata accessor for MoonDetailViewState(0);
            v77 = *(int *)(v76 + 20);
            v78 = (char *)v41 + v77;
            v79 = (char *)v42 + v77;
            v80 = type metadata accessor for MoonDetailSelectedDate(0);
            __dsta = (int *)v76;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
            {
              v81 = sub_1000BA294(&qword_100BC6CB8);
              memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
            }
            else
            {
              v115 = swift_getEnumCaseMultiPayload(v79);
              v116 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v78, v79, v116);
              v117 = v115;
              v76 = (uint64_t)__dsta;
              swift_storeEnumTagMultiPayload(v78, v80, v117);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
            }
            v118 = *(int *)(v76 + 24);
            v119 = (char *)v41 + v118;
            v120 = (char *)v42 + v118;
            v121 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v121))
            {
              v122 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v121);
            }
            v146 = __dsta[7];
            v147 = (char *)v41 + v146;
            v148 = (char *)v42 + v146;
            v149 = *((_OWORD *)v148 + 1);
            *(_OWORD *)v147 = *(_OWORD *)v148;
            *((_OWORD *)v147 + 1) = v149;
            v147[32] = v148[32];
            *((_BYTE *)v41 + __dsta[8]) = *((_BYTE *)v42 + __dsta[8]);
            v45 = v41;
            v46 = v301;
            v47 = 5;
            goto LABEL_59;
          case 6u:
            v302 = v43;
            v82 = v42[1];
            *v41 = *v42;
            v41[1] = v82;
            v83 = (int *)type metadata accessor for NewsArticle(0);
            v84 = v83[6];
            v85 = (char *)v41 + v84;
            v86 = (char *)v42 + v84;
            v87 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
            {
              v88 = sub_1000BA294(&qword_100BD4280);
              memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
            }
            v123 = v83[7];
            v124 = (char *)v41 + v123;
            v125 = (char *)v42 + v123;
            v126 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v124, v125, v126);
            __dstc = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32);
            __dstc((char *)v41 + v83[8], (char *)v42 + v83[8], v87);
            v127 = v83[9];
            v128 = (_OWORD *)((char *)v41 + v127);
            v129 = (char *)v42 + v127;
            v130 = *(_OWORD *)((char *)v42 + v127 + 16);
            *v128 = *(_OWORD *)((char *)v42 + v127);
            v128[1] = v130;
            v131 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
            v132 = (char *)v128 + v131;
            v133 = &v129[v131];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v87))
            {
              v134 = sub_1000BA294(&qword_100BD4280);
              memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
            }
            else
            {
              __dstc(v132, v133, v87);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v87);
            }
            *(_QWORD *)((char *)v41 + v83[10]) = *(_QWORD *)((char *)v42 + v83[10]);
            *(_QWORD *)((char *)v41 + v83[11]) = *(_QWORD *)((char *)v42 + v83[11]);
            *(_QWORD *)((char *)v41 + v83[12]) = *(_QWORD *)((char *)v42 + v83[12]);
            v45 = v41;
            v46 = v302;
            v47 = 6;
            goto LABEL_59;
          case 7u:
            v303 = v43;
            v89 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v41, v42, v89);
            v90 = (int *)type metadata accessor for AveragesDetailViewState(0);
            *((_BYTE *)v41 + v90[5]) = *((_BYTE *)v42 + v90[5]);
            v91 = v90[6];
            v92 = (_QWORD *)((char *)v41 + v91);
            v93 = (_QWORD *)((char *)v42 + v91);
            v94 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, (uint64_t)v94))
            {
              v95 = sub_1000BA294(&qword_100BCB0D0);
              memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
            }
            else
            {
              *v92 = *v93;
              v135 = v94[5];
              v284 = (char *)v93 + v135;
              __dsti = (char *)v92 + v135;
              v136 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(__dsti, v284, v136);
              *(_QWORD *)((char *)v92 + v94[6]) = *(_QWORD *)((char *)v93 + v94[6]);
              *(_QWORD *)((char *)v92 + v94[7]) = *(_QWORD *)((char *)v93 + v94[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, (uint64_t)v94);
            }
            v137 = v90[7];
            v138 = (char *)v41 + v137;
            v139 = (char *)v42 + v137;
            v140 = *((_OWORD *)v139 + 1);
            *(_OWORD *)v138 = *(_OWORD *)v139;
            *((_OWORD *)v138 + 1) = v140;
            v138[32] = v139[32];
            v45 = v41;
            v46 = v303;
            v47 = 7;
            goto LABEL_59;
          case 8u:
            v96 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v41, v42, v96);
            v97 = type metadata accessor for HomeAndWorkRefinementViewState(0);
            v98 = *(int *)(v97 + 20);
            v99 = (char *)v41 + v98;
            v100 = (char *)v42 + v98;
            v101 = type metadata accessor for LocationOfInterest(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
            v102 = *(int *)(v97 + 24);
            v103 = (char *)v41 + v102;
            v104 = (char *)v42 + v102;
            v105 = *((_OWORD *)v104 + 1);
            *(_OWORD *)v103 = *(_OWORD *)v104;
            *((_OWORD *)v103 + 1) = v105;
            v103[32] = v104[32];
            v45 = v41;
            v46 = v43;
            v47 = 8;
LABEL_59:
            swift_storeEnumTagMultiPayload(v45, v46, v47);
            break;
          default:
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
            break;
        }
        v150 = a1;
        v151 = v6;
        v152 = 0;
        goto LABEL_99;
      }
      v10 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = a1;
      v12 = v8;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    goto LABEL_27;
  }
  v15 = type metadata accessor for ModalViewState.MapViewModal(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v15))
  {
    v17 = type metadata accessor for PreviewLocation(0);
    v18 = swift_getEnumCaseMultiPayload(a2);
    if (v18 == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v30 = type metadata accessor for SearchLocation(0);
      v31 = *(int *)(v30 + 32);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
      {
        v35 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      }
      v153 = *(int *)(v30 + 36);
      v154 = (char *)a1 + v153;
      v155 = (char *)a2 + v153;
      *(_OWORD *)v154 = *(_OWORD *)v155;
      v154[16] = v155[16];
      v20 = a1;
      v21 = v17;
      v22 = 2;
    }
    else if (v18 == 1)
    {
      v36 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(a1, a2, v36);
      v20 = a1;
      v21 = v17;
      v22 = 1;
    }
    else
    {
      if (v18)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_64:
        v156 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        v157 = (_OWORD *)((char *)a1 + v156);
        v158 = (_OWORD *)((char *)a2 + v156);
        v159 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload(v158))
        {
          case 0u:
            v160 = type metadata accessor for URL(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v157, v158, v160);
            v161 = v157;
            v162 = v159;
            v163 = 0;
            goto LABEL_96;
          case 1u:
            v304 = v159;
            v164 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v157, v158, v164);
            v165 = (int *)type metadata accessor for ConditionDetailViewState(0);
            v166 = v165[5];
            v167 = (char *)v157 + v166;
            v168 = (char *)v158 + v166;
            v169 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v167, v168, v169);
            v170 = v165[6];
            __dstd = (char *)v157 + v170;
            v171 = (char *)v158 + v170;
            v172 = type metadata accessor for Date(0);
            v286 = v172;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
            {
              v173 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(__dstd, v171, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(__dstd, v171, v172);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v172);
            }
            v220 = v165[7];
            v221 = (char *)v157 + v220;
            v222 = (char *)v158 + v220;
            v223 = *((_OWORD *)v222 + 1);
            *(_OWORD *)v221 = *(_OWORD *)v222;
            *((_OWORD *)v221 + 1) = v223;
            v221[32] = v222[32];
            __dsth = v165;
            v224 = v165[8];
            v225 = (_OWORD *)((char *)v157 + v224);
            v226 = (_OWORD *)((char *)v158 + v224);
            v227 = (int *)type metadata accessor for DetailChartSelection(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, (uint64_t)v227))
            {
              v228 = sub_1000BA294(&qword_100BD0B58);
              memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
            }
            else
            {
              *v225 = *v226;
              v283 = *(void (**)(char *, char *))(*(_QWORD *)(v286 - 8) + 32);
              v283((char *)v225 + v227[5], (char *)v226 + v227[5]);
              ((void (*)(char *, char *, uint64_t))v283)((char *)v225 + v227[6], (char *)v226 + v227[6], v286);
              ((void (*)(char *, char *, uint64_t))v283)((char *)v225 + v227[7], (char *)v226 + v227[7], v286);
              *(_QWORD *)((char *)v225 + v227[8]) = *(_QWORD *)((char *)v226 + v227[8]);
              v253 = v227[9];
              v254 = (char *)v225 + v253;
              v255 = (char *)v226 + v253;
              v254[8] = v255[8];
              *(_QWORD *)v254 = *(_QWORD *)v255;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, (uint64_t)v227);
            }
            v162 = v304;
            *((_BYTE *)v157 + __dsth[9]) = *((_BYTE *)v158 + __dsth[9]);
            v161 = v157;
            v163 = 1;
            goto LABEL_96;
          case 2u:
            v174 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v157, v158, v174);
            v175 = type metadata accessor for AirQualityDetailViewState(0);
            *((_BYTE *)v157 + *(int *)(v175 + 20)) = *((_BYTE *)v158 + *(int *)(v175 + 20));
            v176 = *(int *)(v175 + 24);
            v177 = (char *)v157 + v176;
            v178 = (char *)v158 + v176;
            v177[32] = v178[32];
            v179 = *((_OWORD *)v178 + 1);
            *(_OWORD *)v177 = *(_OWORD *)v178;
            *((_OWORD *)v177 + 1) = v179;
            v161 = v157;
            v162 = v159;
            v163 = 2;
            goto LABEL_96;
          case 3u:
            v180 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v157, v158, v180);
            v181 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
            v182 = (char *)v157 + v181;
            v183 = (char *)v158 + v181;
            v184 = *((_OWORD *)v183 + 1);
            *(_OWORD *)v182 = *(_OWORD *)v183;
            *((_OWORD *)v182 + 1) = v184;
            v182[32] = v183[32];
            v161 = v157;
            v162 = v159;
            v163 = 3;
            goto LABEL_96;
          case 4u:
            v185 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v157, v158, v185);
            v186 = type metadata accessor for SunriseSunsetDetailViewState(0);
            v187 = *(int *)(v186 + 20);
            v188 = (char *)v157 + v187;
            v189 = (char *)v158 + v187;
            v190 = *((_OWORD *)v189 + 1);
            *(_OWORD *)v188 = *(_OWORD *)v189;
            *((_OWORD *)v188 + 1) = v190;
            v188[32] = v189[32];
            *((_BYTE *)v157 + *(int *)(v186 + 24)) = *((_BYTE *)v158 + *(int *)(v186 + 24));
            v161 = v157;
            v162 = v159;
            v163 = 4;
            goto LABEL_96;
          case 5u:
            v305 = v159;
            v191 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v157, v158, v191);
            __dste = (int *)type metadata accessor for MoonDetailViewState(0);
            v192 = __dste[5];
            v193 = (char *)v157 + v192;
            v194 = (char *)v158 + v192;
            v195 = type metadata accessor for MoonDetailSelectedDate(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
            {
              v196 = sub_1000BA294(&qword_100BC6CB8);
              memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
            }
            else
            {
              v288 = swift_getEnumCaseMultiPayload(v194);
              v229 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v193, v194, v229);
              swift_storeEnumTagMultiPayload(v193, v195, v288);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
            }
            v230 = __dste[6];
            v231 = (char *)v157 + v230;
            v232 = (char *)v158 + v230;
            v233 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v233))
            {
              v234 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 32))(v231, v232, v233);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v233);
            }
            v162 = v305;
            v256 = __dste[7];
            v257 = (char *)v157 + v256;
            v258 = (char *)v158 + v256;
            v259 = *((_OWORD *)v258 + 1);
            *(_OWORD *)v257 = *(_OWORD *)v258;
            *((_OWORD *)v257 + 1) = v259;
            v257[32] = v258[32];
            *((_BYTE *)v157 + __dste[8]) = *((_BYTE *)v158 + __dste[8]);
            v161 = v157;
            v163 = 5;
            goto LABEL_96;
          case 6u:
            v287 = v15;
            v306 = v159;
            v197 = v158[1];
            *v157 = *v158;
            v157[1] = v197;
            __dstf = (int *)type metadata accessor for NewsArticle(0);
            v198 = __dstf[6];
            v199 = (char *)v157 + v198;
            v200 = (char *)v158 + v198;
            v201 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v200, 1, v201))
            {
              v202 = sub_1000BA294(&qword_100BD4280);
              memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v199, v200, v201);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v201);
            }
            v235 = __dstf[7];
            v236 = (char *)v157 + v235;
            v237 = (char *)v158 + v235;
            v238 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 32))(v236, v237, v238);
            v281 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32);
            v281((char *)v157 + __dstf[8], (char *)v158 + __dstf[8], v201);
            v239 = __dstf[9];
            v240 = (_OWORD *)((char *)v157 + v239);
            v241 = (char *)v158 + v239;
            v242 = *(_OWORD *)((char *)v158 + v239 + 16);
            *v240 = *(_OWORD *)((char *)v158 + v239);
            v240[1] = v242;
            v243 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
            v244 = (char *)v240 + v243;
            v245 = &v241[v243];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v243], 1, v201))
            {
              v246 = sub_1000BA294(&qword_100BD4280);
              memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
            }
            else
            {
              v281(v244, v245, v201);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v244, 0, 1, v201);
            }
            v15 = v287;
            *(_QWORD *)((char *)v157 + __dstf[10]) = *(_QWORD *)((char *)v158 + __dstf[10]);
            *(_QWORD *)((char *)v157 + __dstf[11]) = *(_QWORD *)((char *)v158 + __dstf[11]);
            *(_QWORD *)((char *)v157 + __dstf[12]) = *(_QWORD *)((char *)v158 + __dstf[12]);
            v161 = v157;
            v162 = v306;
            v163 = 6;
            goto LABEL_96;
          case 7u:
            v307 = v159;
            v203 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v157, v158, v203);
            v204 = type metadata accessor for AveragesDetailViewState(0);
            *((_BYTE *)v157 + *(int *)(v204 + 20)) = *((_BYTE *)v158 + *(int *)(v204 + 20));
            __dstg = (int *)v204;
            v205 = *(int *)(v204 + 24);
            v206 = (_QWORD *)((char *)v157 + v205);
            v207 = (_QWORD *)((char *)v158 + v205);
            v208 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, (uint64_t)v208))
            {
              v209 = sub_1000BA294(&qword_100BCB0D0);
              memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
            }
            else
            {
              *v206 = *v207;
              v247 = v208[5];
              v282 = (char *)v207 + v247;
              v289 = (char *)v206 + v247;
              v248 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(v289, v282, v248);
              *(_QWORD *)((char *)v206 + v208[6]) = *(_QWORD *)((char *)v207 + v208[6]);
              *(_QWORD *)((char *)v206 + v208[7]) = *(_QWORD *)((char *)v207 + v208[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, (uint64_t)v208);
            }
            v162 = v307;
            v249 = __dstg[7];
            v250 = (char *)v157 + v249;
            v251 = (char *)v158 + v249;
            v252 = *((_OWORD *)v251 + 1);
            *(_OWORD *)v250 = *(_OWORD *)v251;
            *((_OWORD *)v250 + 1) = v252;
            v250[32] = v251[32];
            v161 = v157;
            v163 = 7;
            goto LABEL_96;
          case 8u:
            v210 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v157, v158, v210);
            v308 = v159;
            v211 = type metadata accessor for HomeAndWorkRefinementViewState(0);
            v212 = *(int *)(v211 + 20);
            v213 = (char *)v157 + v212;
            v214 = (char *)v158 + v212;
            v215 = type metadata accessor for LocationOfInterest(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
            v216 = *(int *)(v211 + 24);
            v217 = (char *)v157 + v216;
            v218 = (char *)v158 + v216;
            v219 = *((_OWORD *)v218 + 1);
            *(_OWORD *)v217 = *(_OWORD *)v218;
            *((_OWORD *)v217 + 1) = v219;
            v217[32] = v218[32];
            v161 = v157;
            v162 = v308;
            v163 = 8;
LABEL_96:
            swift_storeEnumTagMultiPayload(v161, v162, v163);
            break;
          default:
            memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v15);
        goto LABEL_98;
      }
      v19 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v20 = a1;
      v21 = v17;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
    goto LABEL_64;
  }
  v16 = sub_1000BA294(&qword_100BC5F58);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_98:
  v150 = a1;
  v151 = v6;
  v152 = 4;
LABEL_99:
  swift_storeEnumTagMultiPayload(v150, v151, v152);
LABEL_100:
  v260 = a3[5];
  v261 = (char *)a1 + v260;
  v262 = (char *)a2 + v260;
  v263 = type metadata accessor for Location(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v262, 1, v263))
  {
    v264 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v261, v262, v263);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v261, 0, 1, v263);
  }
  v265 = a3[6];
  v266 = (char *)a1 + v265;
  v267 = (char *)a2 + v265;
  v268 = type metadata accessor for Location.Identifier(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v267, 1, v268))
  {
    v269 = sub_1000BA294(&qword_100BCD680);
    memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v266, v267, v268);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v266, 0, 1, v268);
  }
  v270 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v271 = (char *)a1 + v270;
  v272 = (char *)a2 + v270;
  v273 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v273 - 8) + 32))(v271, v272, v273);
  v274 = a3[9];
  v275 = a3[10];
  v276 = *(_OWORD *)((char *)a2 + v274);
  v277 = *(_OWORD *)((char *)a2 + v274 + 16);
  v278 = (_OWORD *)((char *)a1 + v274);
  *v278 = v276;
  v278[1] = v277;
  *(_QWORD *)((char *)a1 + v275) = *(_QWORD *)((char *)a2 + v275);
  v279 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *((_BYTE *)a1 + v279) = *((_BYTE *)a2 + v279);
  return a1;
}

_QWORD *sub_100514D08(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD *v128;
  char *v129;
  __int128 v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  __int128 v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  _OWORD *v157;
  _OWORD *v158;
  uint64_t v159;
  uint64_t v160;
  _OWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  __int128 v219;
  uint64_t v220;
  char *v221;
  char *v222;
  __int128 v223;
  uint64_t v224;
  _OWORD *v225;
  _OWORD *v226;
  int *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  _OWORD *v240;
  char *v241;
  __int128 v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  __int128 v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  __int128 v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  int v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  int v272;
  int v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  _QWORD *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  void (*v287)(char *, char *, uint64_t);
  char *v288;
  void (*v289)(char *, char *);
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unsigned int v294;
  char *v295;
  char *__dst;
  int *__dsta;
  int *__dstb;
  void (*__dstc)(char *, char *, uint64_t);
  char *__dsti;
  char *__dstd;
  int *__dste;
  int *__dstf;
  int *__dstg;
  int *__dsth;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for ModalViewState);
    v6 = type metadata accessor for ModalViewState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 5)
    {
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      v14 = (char *)&loc_100514E08 + 4 * word_1009AA40C[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload != 4)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_101;
      }
      v8 = type metadata accessor for PreviewLocation(0);
      v9 = swift_getEnumCaseMultiPayload(a2);
      if (v9 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v23 = type metadata accessor for SearchLocation(0);
        v24 = *(int *)(v23 + 32);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for Location(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
        {
          v28 = sub_1000BA294(&qword_100BC35F8);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
        }
        v37 = *(int *)(v23 + 36);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        *(_OWORD *)v38 = *(_OWORD *)v39;
        v38[16] = v39[16];
        v11 = a1;
        v12 = v8;
        v13 = 2;
      }
      else if (v9 == 1)
      {
        v29 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
        v11 = a1;
        v12 = v8;
        v13 = 1;
      }
      else
      {
        if (v9)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_28:
          v40 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
          v41 = (_OWORD *)((char *)a1 + v40);
          v42 = (_OWORD *)((char *)a2 + v40);
          v43 = type metadata accessor for LocationPreviewModalViewState(0);
          switch(swift_getEnumCaseMultiPayload(v42))
          {
            case 0u:
              v44 = type metadata accessor for URL(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
              v45 = v41;
              v46 = v43;
              v47 = 0;
              goto LABEL_60;
            case 1u:
              v48 = type metadata accessor for DetailCondition(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v41, v42, v48);
              v49 = (int *)type metadata accessor for ConditionDetailViewState(0);
              v50 = v49[5];
              v51 = (char *)v41 + v50;
              v52 = (char *)v42 + v50;
              v53 = type metadata accessor for Location(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
              v54 = v49[6];
              __dst = (char *)v41 + v54;
              v55 = (char *)v42 + v54;
              v56 = type metadata accessor for Date(0);
              v306 = v43;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
              {
                v57 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(__dst, v55, v56);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v56);
              }
              v106 = v49[7];
              v107 = (char *)v41 + v106;
              v108 = (char *)v42 + v106;
              v109 = *((_OWORD *)v108 + 1);
              *(_OWORD *)v107 = *(_OWORD *)v108;
              *((_OWORD *)v107 + 1) = v109;
              v107[32] = v108[32];
              __dstb = v49;
              v110 = v49[8];
              v111 = (_OWORD *)((char *)v41 + v110);
              v112 = (_OWORD *)((char *)v42 + v110);
              v113 = (int *)type metadata accessor for DetailChartSelection(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, (uint64_t)v113))
              {
                v114 = sub_1000BA294(&qword_100BD0B58);
                memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
              }
              else
              {
                *v111 = *v112;
                v141 = v56;
                v291 = v56;
                v142 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32);
                v142((char *)v111 + v113[5], (char *)v112 + v113[5], v141);
                v142((char *)v111 + v113[6], (char *)v112 + v113[6], v291);
                v142((char *)v111 + v113[7], (char *)v112 + v113[7], v291);
                *(_QWORD *)((char *)v111 + v113[8]) = *(_QWORD *)((char *)v112 + v113[8]);
                v143 = v113[9];
                v144 = (char *)v111 + v143;
                v145 = (char *)v112 + v143;
                v144[8] = v145[8];
                *(_QWORD *)v144 = *(_QWORD *)v145;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, (uint64_t)v113);
              }
              v46 = v306;
              *((_BYTE *)v41 + __dstb[9]) = *((_BYTE *)v42 + __dstb[9]);
              v45 = v41;
              v47 = 1;
              goto LABEL_60;
            case 2u:
              v58 = type metadata accessor for Location(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v41, v42, v58);
              v59 = type metadata accessor for AirQualityDetailViewState(0);
              *((_BYTE *)v41 + *(int *)(v59 + 20)) = *((_BYTE *)v42 + *(int *)(v59 + 20));
              v60 = *(int *)(v59 + 24);
              v61 = (char *)v41 + v60;
              v62 = (char *)v42 + v60;
              v61[32] = v62[32];
              v63 = *((_OWORD *)v62 + 1);
              *(_OWORD *)v61 = *(_OWORD *)v62;
              *((_OWORD *)v61 + 1) = v63;
              v45 = v41;
              v46 = v43;
              v47 = 2;
              goto LABEL_60;
            case 3u:
              v64 = type metadata accessor for Location(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v41, v42, v64);
              v65 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
              v66 = (char *)v41 + v65;
              v67 = (char *)v42 + v65;
              v68 = *((_OWORD *)v67 + 1);
              *(_OWORD *)v66 = *(_OWORD *)v67;
              *((_OWORD *)v66 + 1) = v68;
              v66[32] = v67[32];
              v45 = v41;
              v46 = v43;
              v47 = 3;
              goto LABEL_60;
            case 4u:
              v69 = type metadata accessor for Location(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v41, v42, v69);
              v70 = type metadata accessor for SunriseSunsetDetailViewState(0);
              v71 = *(int *)(v70 + 20);
              v72 = (char *)v41 + v71;
              v73 = (char *)v42 + v71;
              v74 = *((_OWORD *)v73 + 1);
              *(_OWORD *)v72 = *(_OWORD *)v73;
              *((_OWORD *)v72 + 1) = v74;
              v72[32] = v73[32];
              *((_BYTE *)v41 + *(int *)(v70 + 24)) = *((_BYTE *)v42 + *(int *)(v70 + 24));
              v45 = v41;
              v46 = v43;
              v47 = 4;
              goto LABEL_60;
            case 5u:
              v307 = v43;
              v75 = type metadata accessor for Location(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v41, v42, v75);
              v76 = type metadata accessor for MoonDetailViewState(0);
              v77 = *(int *)(v76 + 20);
              v78 = (char *)v41 + v77;
              v79 = (char *)v42 + v77;
              v80 = type metadata accessor for MoonDetailSelectedDate(0);
              __dsta = (int *)v76;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
              {
                v81 = sub_1000BA294(&qword_100BC6CB8);
                memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
              }
              else
              {
                v115 = swift_getEnumCaseMultiPayload(v79);
                v116 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v78, v79, v116);
                v117 = v115;
                v76 = (uint64_t)__dsta;
                swift_storeEnumTagMultiPayload(v78, v80, v117);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
              }
              v118 = *(int *)(v76 + 24);
              v119 = (char *)v41 + v118;
              v120 = (char *)v42 + v118;
              v121 = type metadata accessor for Date(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v121))
              {
                v122 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v121);
              }
              v146 = __dsta[7];
              v147 = (char *)v41 + v146;
              v148 = (char *)v42 + v146;
              v149 = *((_OWORD *)v148 + 1);
              *(_OWORD *)v147 = *(_OWORD *)v148;
              *((_OWORD *)v147 + 1) = v149;
              v147[32] = v148[32];
              *((_BYTE *)v41 + __dsta[8]) = *((_BYTE *)v42 + __dsta[8]);
              v45 = v41;
              v46 = v307;
              v47 = 5;
              goto LABEL_60;
            case 6u:
              v308 = v43;
              v82 = v42[1];
              *v41 = *v42;
              v41[1] = v82;
              v83 = (int *)type metadata accessor for NewsArticle(0);
              v84 = v83[6];
              v85 = (char *)v41 + v84;
              v86 = (char *)v42 + v84;
              v87 = type metadata accessor for URL(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
              {
                v88 = sub_1000BA294(&qword_100BD4280);
                memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
              }
              v123 = v83[7];
              v124 = (char *)v41 + v123;
              v125 = (char *)v42 + v123;
              v126 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v124, v125, v126);
              __dstc = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32);
              __dstc((char *)v41 + v83[8], (char *)v42 + v83[8], v87);
              v127 = v83[9];
              v128 = (_OWORD *)((char *)v41 + v127);
              v129 = (char *)v42 + v127;
              v130 = *(_OWORD *)((char *)v42 + v127 + 16);
              *v128 = *(_OWORD *)((char *)v42 + v127);
              v128[1] = v130;
              v131 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
              v132 = (char *)v128 + v131;
              v133 = &v129[v131];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v87))
              {
                v134 = sub_1000BA294(&qword_100BD4280);
                memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
              }
              else
              {
                __dstc(v132, v133, v87);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v87);
              }
              *(_QWORD *)((char *)v41 + v83[10]) = *(_QWORD *)((char *)v42 + v83[10]);
              *(_QWORD *)((char *)v41 + v83[11]) = *(_QWORD *)((char *)v42 + v83[11]);
              *(_QWORD *)((char *)v41 + v83[12]) = *(_QWORD *)((char *)v42 + v83[12]);
              v45 = v41;
              v46 = v308;
              v47 = 6;
              goto LABEL_60;
            case 7u:
              v309 = v43;
              v89 = type metadata accessor for Location(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v41, v42, v89);
              v90 = (int *)type metadata accessor for AveragesDetailViewState(0);
              *((_BYTE *)v41 + v90[5]) = *((_BYTE *)v42 + v90[5]);
              v91 = v90[6];
              v92 = (_QWORD *)((char *)v41 + v91);
              v93 = (_QWORD *)((char *)v42 + v91);
              v94 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, (uint64_t)v94))
              {
                v95 = sub_1000BA294(&qword_100BCB0D0);
                memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
              }
              else
              {
                *v92 = *v93;
                v135 = v94[5];
                v290 = (char *)v93 + v135;
                __dsti = (char *)v92 + v135;
                v136 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(__dsti, v290, v136);
                *(_QWORD *)((char *)v92 + v94[6]) = *(_QWORD *)((char *)v93 + v94[6]);
                *(_QWORD *)((char *)v92 + v94[7]) = *(_QWORD *)((char *)v93 + v94[7]);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, (uint64_t)v94);
              }
              v137 = v90[7];
              v138 = (char *)v41 + v137;
              v139 = (char *)v42 + v137;
              v140 = *((_OWORD *)v139 + 1);
              *(_OWORD *)v138 = *(_OWORD *)v139;
              *((_OWORD *)v138 + 1) = v140;
              v138[32] = v139[32];
              v45 = v41;
              v46 = v309;
              v47 = 7;
              goto LABEL_60;
            case 8u:
              v96 = type metadata accessor for Location(0);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v41, v42, v96);
              v97 = type metadata accessor for HomeAndWorkRefinementViewState(0);
              v98 = *(int *)(v97 + 20);
              v99 = (char *)v41 + v98;
              v100 = (char *)v42 + v98;
              v101 = type metadata accessor for LocationOfInterest(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
              v102 = *(int *)(v97 + 24);
              v103 = (char *)v41 + v102;
              v104 = (char *)v42 + v102;
              v105 = *((_OWORD *)v104 + 1);
              *(_OWORD *)v103 = *(_OWORD *)v104;
              *((_OWORD *)v103 + 1) = v105;
              v103[32] = v104[32];
              v45 = v41;
              v46 = v43;
              v47 = 8;
LABEL_60:
              swift_storeEnumTagMultiPayload(v45, v46, v47);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
              break;
          }
          v150 = a1;
          v151 = v6;
          v152 = 0;
          goto LABEL_100;
        }
        v10 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = a1;
        v12 = v8;
        v13 = 0;
      }
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      goto LABEL_28;
    }
    v15 = type metadata accessor for ModalViewState.MapViewModal(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v15))
    {
      v16 = sub_1000BA294(&qword_100BC5F58);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_99:
      v150 = a1;
      v151 = v6;
      v152 = 4;
LABEL_100:
      swift_storeEnumTagMultiPayload(v150, v151, v152);
      goto LABEL_101;
    }
    v17 = type metadata accessor for PreviewLocation(0);
    v18 = swift_getEnumCaseMultiPayload(a2);
    if (v18 == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v30 = type metadata accessor for SearchLocation(0);
      v31 = *(int *)(v30 + 32);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = type metadata accessor for Location(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
      {
        v35 = sub_1000BA294(&qword_100BC35F8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      }
      v153 = *(int *)(v30 + 36);
      v154 = (char *)a1 + v153;
      v155 = (char *)a2 + v153;
      *(_OWORD *)v154 = *(_OWORD *)v155;
      v154[16] = v155[16];
      v20 = a1;
      v21 = v17;
      v22 = 2;
    }
    else if (v18 == 1)
    {
      v36 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(a1, a2, v36);
      v20 = a1;
      v21 = v17;
      v22 = 1;
    }
    else
    {
      if (v18)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_65:
        v156 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        v157 = (_OWORD *)((char *)a1 + v156);
        v158 = (_OWORD *)((char *)a2 + v156);
        v159 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload(v158))
        {
          case 0u:
            v160 = type metadata accessor for URL(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v157, v158, v160);
            v161 = v157;
            v162 = v159;
            v163 = 0;
            goto LABEL_97;
          case 1u:
            v310 = v159;
            v164 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v157, v158, v164);
            v165 = (int *)type metadata accessor for ConditionDetailViewState(0);
            v166 = v165[5];
            v167 = (char *)v157 + v166;
            v168 = (char *)v158 + v166;
            v169 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v167, v168, v169);
            v170 = v165[6];
            __dstd = (char *)v157 + v170;
            v171 = (char *)v158 + v170;
            v172 = type metadata accessor for Date(0);
            v292 = v172;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
            {
              v173 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(__dstd, v171, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(__dstd, v171, v172);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v172);
            }
            v220 = v165[7];
            v221 = (char *)v157 + v220;
            v222 = (char *)v158 + v220;
            v223 = *((_OWORD *)v222 + 1);
            *(_OWORD *)v221 = *(_OWORD *)v222;
            *((_OWORD *)v221 + 1) = v223;
            v221[32] = v222[32];
            __dsth = v165;
            v224 = v165[8];
            v225 = (_OWORD *)((char *)v157 + v224);
            v226 = (_OWORD *)((char *)v158 + v224);
            v227 = (int *)type metadata accessor for DetailChartSelection(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, (uint64_t)v227))
            {
              v228 = sub_1000BA294(&qword_100BD0B58);
              memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
            }
            else
            {
              *v225 = *v226;
              v289 = *(void (**)(char *, char *))(*(_QWORD *)(v292 - 8) + 32);
              v289((char *)v225 + v227[5], (char *)v226 + v227[5]);
              ((void (*)(char *, char *, uint64_t))v289)((char *)v225 + v227[6], (char *)v226 + v227[6], v292);
              ((void (*)(char *, char *, uint64_t))v289)((char *)v225 + v227[7], (char *)v226 + v227[7], v292);
              *(_QWORD *)((char *)v225 + v227[8]) = *(_QWORD *)((char *)v226 + v227[8]);
              v253 = v227[9];
              v254 = (char *)v225 + v253;
              v255 = (char *)v226 + v253;
              v254[8] = v255[8];
              *(_QWORD *)v254 = *(_QWORD *)v255;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, (uint64_t)v227);
            }
            v162 = v310;
            *((_BYTE *)v157 + __dsth[9]) = *((_BYTE *)v158 + __dsth[9]);
            v161 = v157;
            v163 = 1;
            goto LABEL_97;
          case 2u:
            v174 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v157, v158, v174);
            v175 = type metadata accessor for AirQualityDetailViewState(0);
            *((_BYTE *)v157 + *(int *)(v175 + 20)) = *((_BYTE *)v158 + *(int *)(v175 + 20));
            v176 = *(int *)(v175 + 24);
            v177 = (char *)v157 + v176;
            v178 = (char *)v158 + v176;
            v177[32] = v178[32];
            v179 = *((_OWORD *)v178 + 1);
            *(_OWORD *)v177 = *(_OWORD *)v178;
            *((_OWORD *)v177 + 1) = v179;
            v161 = v157;
            v162 = v159;
            v163 = 2;
            goto LABEL_97;
          case 3u:
            v180 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v157, v158, v180);
            v181 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
            v182 = (char *)v157 + v181;
            v183 = (char *)v158 + v181;
            v184 = *((_OWORD *)v183 + 1);
            *(_OWORD *)v182 = *(_OWORD *)v183;
            *((_OWORD *)v182 + 1) = v184;
            v182[32] = v183[32];
            v161 = v157;
            v162 = v159;
            v163 = 3;
            goto LABEL_97;
          case 4u:
            v185 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v157, v158, v185);
            v186 = type metadata accessor for SunriseSunsetDetailViewState(0);
            v187 = *(int *)(v186 + 20);
            v188 = (char *)v157 + v187;
            v189 = (char *)v158 + v187;
            v190 = *((_OWORD *)v189 + 1);
            *(_OWORD *)v188 = *(_OWORD *)v189;
            *((_OWORD *)v188 + 1) = v190;
            v188[32] = v189[32];
            *((_BYTE *)v157 + *(int *)(v186 + 24)) = *((_BYTE *)v158 + *(int *)(v186 + 24));
            v161 = v157;
            v162 = v159;
            v163 = 4;
            goto LABEL_97;
          case 5u:
            v311 = v159;
            v191 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v157, v158, v191);
            __dste = (int *)type metadata accessor for MoonDetailViewState(0);
            v192 = __dste[5];
            v193 = (char *)v157 + v192;
            v194 = (char *)v158 + v192;
            v195 = type metadata accessor for MoonDetailSelectedDate(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
            {
              v196 = sub_1000BA294(&qword_100BC6CB8);
              memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
            }
            else
            {
              v294 = swift_getEnumCaseMultiPayload(v194);
              v229 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v193, v194, v229);
              swift_storeEnumTagMultiPayload(v193, v195, v294);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
            }
            v230 = __dste[6];
            v231 = (char *)v157 + v230;
            v232 = (char *)v158 + v230;
            v233 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v233))
            {
              v234 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 32))(v231, v232, v233);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v233);
            }
            v162 = v311;
            v256 = __dste[7];
            v257 = (char *)v157 + v256;
            v258 = (char *)v158 + v256;
            v259 = *((_OWORD *)v258 + 1);
            *(_OWORD *)v257 = *(_OWORD *)v258;
            *((_OWORD *)v257 + 1) = v259;
            v257[32] = v258[32];
            *((_BYTE *)v157 + __dste[8]) = *((_BYTE *)v158 + __dste[8]);
            v161 = v157;
            v163 = 5;
            goto LABEL_97;
          case 6u:
            v293 = v15;
            v312 = v159;
            v197 = v158[1];
            *v157 = *v158;
            v157[1] = v197;
            __dstf = (int *)type metadata accessor for NewsArticle(0);
            v198 = __dstf[6];
            v199 = (char *)v157 + v198;
            v200 = (char *)v158 + v198;
            v201 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v200, 1, v201))
            {
              v202 = sub_1000BA294(&qword_100BD4280);
              memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v199, v200, v201);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v201);
            }
            v235 = __dstf[7];
            v236 = (char *)v157 + v235;
            v237 = (char *)v158 + v235;
            v238 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 32))(v236, v237, v238);
            v287 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32);
            v287((char *)v157 + __dstf[8], (char *)v158 + __dstf[8], v201);
            v239 = __dstf[9];
            v240 = (_OWORD *)((char *)v157 + v239);
            v241 = (char *)v158 + v239;
            v242 = *(_OWORD *)((char *)v158 + v239 + 16);
            *v240 = *(_OWORD *)((char *)v158 + v239);
            v240[1] = v242;
            v243 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
            v244 = (char *)v240 + v243;
            v245 = &v241[v243];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v243], 1, v201))
            {
              v246 = sub_1000BA294(&qword_100BD4280);
              memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
            }
            else
            {
              v287(v244, v245, v201);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v244, 0, 1, v201);
            }
            v15 = v293;
            *(_QWORD *)((char *)v157 + __dstf[10]) = *(_QWORD *)((char *)v158 + __dstf[10]);
            *(_QWORD *)((char *)v157 + __dstf[11]) = *(_QWORD *)((char *)v158 + __dstf[11]);
            *(_QWORD *)((char *)v157 + __dstf[12]) = *(_QWORD *)((char *)v158 + __dstf[12]);
            v161 = v157;
            v162 = v312;
            v163 = 6;
            goto LABEL_97;
          case 7u:
            v313 = v159;
            v203 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v157, v158, v203);
            v204 = type metadata accessor for AveragesDetailViewState(0);
            *((_BYTE *)v157 + *(int *)(v204 + 20)) = *((_BYTE *)v158 + *(int *)(v204 + 20));
            __dstg = (int *)v204;
            v205 = *(int *)(v204 + 24);
            v206 = (_QWORD *)((char *)v157 + v205);
            v207 = (_QWORD *)((char *)v158 + v205);
            v208 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, (uint64_t)v208))
            {
              v209 = sub_1000BA294(&qword_100BCB0D0);
              memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
            }
            else
            {
              *v206 = *v207;
              v247 = v208[5];
              v288 = (char *)v207 + v247;
              v295 = (char *)v206 + v247;
              v248 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(v295, v288, v248);
              *(_QWORD *)((char *)v206 + v208[6]) = *(_QWORD *)((char *)v207 + v208[6]);
              *(_QWORD *)((char *)v206 + v208[7]) = *(_QWORD *)((char *)v207 + v208[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, (uint64_t)v208);
            }
            v162 = v313;
            v249 = __dstg[7];
            v250 = (char *)v157 + v249;
            v251 = (char *)v158 + v249;
            v252 = *((_OWORD *)v251 + 1);
            *(_OWORD *)v250 = *(_OWORD *)v251;
            *((_OWORD *)v250 + 1) = v252;
            v250[32] = v251[32];
            v161 = v157;
            v163 = 7;
            goto LABEL_97;
          case 8u:
            v210 = type metadata accessor for Location(0);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v157, v158, v210);
            v314 = v159;
            v211 = type metadata accessor for HomeAndWorkRefinementViewState(0);
            v212 = *(int *)(v211 + 20);
            v213 = (char *)v157 + v212;
            v214 = (char *)v158 + v212;
            v215 = type metadata accessor for LocationOfInterest(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
            v216 = *(int *)(v211 + 24);
            v217 = (char *)v157 + v216;
            v218 = (char *)v158 + v216;
            v219 = *((_OWORD *)v218 + 1);
            *(_OWORD *)v217 = *(_OWORD *)v218;
            *((_OWORD *)v217 + 1) = v219;
            v217[32] = v218[32];
            v161 = v157;
            v162 = v314;
            v163 = 8;
LABEL_97:
            swift_storeEnumTagMultiPayload(v161, v162, v163);
            break;
          default:
            memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v15);
        goto LABEL_99;
      }
      v19 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v20 = a1;
      v21 = v17;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
    goto LABEL_65;
  }
LABEL_101:
  v260 = a3[5];
  v261 = (char *)a1 + v260;
  v262 = (char *)a2 + v260;
  v263 = type metadata accessor for Location(0);
  v264 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v261, 1, v263);
  v265 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v262, 1, v263);
  if (v264)
  {
    if (!v265)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v261, v262, v263);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v261, 0, 1, v263);
      goto LABEL_107;
    }
    goto LABEL_106;
  }
  v266 = *(_QWORD *)(v263 - 8);
  if (v265)
  {
    (*(void (**)(char *, uint64_t))(v266 + 8))(v261, v263);
LABEL_106:
    v267 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
    goto LABEL_107;
  }
  (*(void (**)(char *, char *, uint64_t))(v266 + 40))(v261, v262, v263);
LABEL_107:
  v268 = a3[6];
  v269 = (char *)a1 + v268;
  v270 = (char *)a2 + v268;
  v271 = type metadata accessor for Location.Identifier(0);
  v272 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v269, 1, v271);
  v273 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v270, 1, v271);
  if (!v272)
  {
    v274 = *(_QWORD *)(v271 - 8);
    if (!v273)
    {
      (*(void (**)(char *, char *, uint64_t))(v274 + 40))(v269, v270, v271);
      goto LABEL_113;
    }
    (*(void (**)(char *, uint64_t))(v274 + 8))(v269, v271);
    goto LABEL_112;
  }
  if (v273)
  {
LABEL_112:
    v275 = sub_1000BA294(&qword_100BCD680);
    memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
    goto LABEL_113;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v269, v270, v271);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v269, 0, 1, v271);
LABEL_113:
  v276 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  v279 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 40))(v277, v278, v279);
  v280 = a3[9];
  v281 = (_QWORD *)((char *)a1 + v280);
  v282 = (char *)a2 + v280;
  v283 = *(_QWORD *)((char *)a2 + v280 + 8);
  *v281 = *(_QWORD *)((char *)a2 + v280);
  v281[1] = v283;
  swift_bridgeObjectRelease();
  v281[2] = *((_QWORD *)v282 + 2);
  swift_bridgeObjectRelease();
  v281[3] = *((_QWORD *)v282 + 3);
  swift_bridgeObjectRelease();
  v284 = a3[10];
  v285 = *(void **)((char *)a1 + v284);
  *(_QWORD *)((char *)a1 + v284) = *(_QWORD *)((char *)a2 + v284);

  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

uint64_t sub_100516AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100516AD4);
}

uint64_t sub_100516AD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v17;

  sub_1000DF6FC();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(&qword_100BC35F8);
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_13:
    v8 = v4 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(&qword_100BCD680);
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_13;
  }
  sub_1000B4608();
  sub_100088FF0();
  if (v14)
  {
    v7 = v15;
    v11 = a3[8];
    goto LABEL_13;
  }
  v17 = *(_QWORD *)(v4 + a3[9] + 8);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_100516B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100516BA4);
}

void sub_100516BA4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_1000DF6FC();
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1000BA294(&qword_100BC35F8);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1000BA294(&qword_100BCD680);
      sub_10009D2E8();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        sub_1000B4608();
        sub_10009D2E8();
        if (!v15)
        {
          *(_QWORD *)(v5 + a4[9] + 8) = (v4 - 1);
          return;
        }
        v8 = v16;
        v12 = a4[8];
      }
    }
    v9 = v5 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v9, v4, v4, v8);
}

uint64_t type metadata accessor for WeatherMenuInput(uint64_t a1)
{
  uint64_t result;

  result = qword_100BEBE60;
  if (!qword_100BEBE60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WeatherMenuInput);
  return result;
}

void sub_100516C9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[9];

  v2 = type metadata accessor for ModalViewState(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001345CC(319, (unint64_t *)&qword_100BCE908, (uint64_t (*)(uint64_t))&type metadata accessor for Location);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001345CC(319, (unint64_t *)&qword_100BCE540, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        v10[3] = &unk_1009AA488;
        v8 = type metadata accessor for WeatherMapOverlayKind(319);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          v10[5] = &unk_1009AA4A0;
          v10[6] = &unk_1009AA4B8;
          v10[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
          v10[8] = &unk_1009AA4D0;
          swift_initStructMetadata(a1, 256, 9, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_100516DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInteractor()
{
  return objc_opt_self(_TtC7Weather37NextHourPrecipitationDetailInteractor);
}

_QWORD *sub_100516E10(_QWORD *result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[8];

  v1 = result[2];
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v1 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 != 3)
  {
    v2 = result[4];
    v3 = result[6];
    v4 = result[7];
    v5[0] = result[5];
    v5[1] = v2;
    v5[2] = v5[0];
    v5[3] = v3;
    v5[4] = v4;
    v5[5] = v3;
    v5[6] = v4;
    v5[7] = v2;
    return objc_msgSend((id)objc_opt_self(MKPolygon), "polygonWithCoordinates:count:", v5, 4);
  }
LABEL_9:
  __break(1u);
  return result;
}

double destroy for ReportWeatherConditionsViewModel(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(a1[16]);
  swift_bridgeObjectRelease(a1[18]);
  swift_bridgeObjectRelease(a1[21]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[23]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ReportWeatherConditionsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  v10 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v10;
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t assignWithCopy for ReportWeatherConditionsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v16 = *(_QWORD *)(a2 + 128);
  v17 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v18 = *(_QWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v20 = *(_QWORD *)(a2 + 168);
  v21 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v22 = *(_QWORD *)(a2 + 184);
  v23 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  return a1;
}

void *initializeWithTake for ReportWeatherConditionsViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC2uLL);
}

uint64_t assignWithTake for ReportWeatherConditionsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  v16 = *(_QWORD *)(a2 + 128);
  v17 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v16;
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v18;
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  v20 = *(_QWORD *)(a2 + 168);
  v21 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 184);
  v23 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v22;
  swift_bridgeObjectRelease(v23);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportWeatherConditionsViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 194))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherConditionsViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 192) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 194) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 194) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherConditionsViewModel()
{
  return &type metadata for ReportWeatherConditionsViewModel;
}

uint64_t sub_1005173A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unsigned __int8 v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  v9 = v6 == *(_QWORD *)a2 && v7 == v8;
  if (v9 || (v2 = 0, (sub_100099264(v6, v7, *(_QWORD *)a2, v8) & 1) != 0))
  {
    v10 = *(_QWORD *)(a1 + 16);
    v11 = *(_QWORD *)(a1 + 24);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14 || (v2 = 0, (sub_100099264(v10, v11, v12, v13) & 1) != 0))
    {
      if (((*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32)) & 1) != 0)
      {
LABEL_35:
        LOBYTE(v2) = 0;
        return v2 & 1;
      }
      v15 = *(_QWORD *)(a1 + 40);
      v16 = *(_QWORD *)(a1 + 48);
      v17 = *(_QWORD *)(a2 + 40);
      v18 = *(_QWORD *)(a2 + 48);
      v19 = v15 == v17 && v16 == v18;
      if (v19 || (v2 = 0, (sub_100099264(v15, v16, v17, v18) & 1) != 0))
      {
        v20 = *(_QWORD *)(a1 + 56);
        v21 = *(_QWORD *)(a1 + 64);
        v22 = *(_QWORD *)(a2 + 56);
        v23 = *(_QWORD *)(a2 + 64);
        v24 = v20 == v22 && v21 == v23;
        if (v24 || (v2 = 0, (sub_100099264(v20, v21, v22, v23) & 1) != 0))
        {
          if (((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0)
            goto LABEL_35;
          sub_10068C854();
          if ((v25 & 1) == 0)
            goto LABEL_35;
          v26 = *(_QWORD *)(a1 + 80);
          v27 = *(_QWORD *)(a1 + 88);
          v28 = *(_QWORD *)(a2 + 80);
          v29 = *(_QWORD *)(a2 + 88);
          v30 = v26 == v28 && v27 == v29;
          if (v30 || (v2 = 0, (sub_100099264(v26, v27, v28, v29) & 1) != 0))
          {
            v31 = *(_QWORD *)(a1 + 96);
            v32 = *(_QWORD *)(a1 + 104);
            v33 = *(_QWORD *)(a2 + 96);
            v34 = *(_QWORD *)(a2 + 104);
            v35 = v31 == v33 && v32 == v34;
            if (v35 || (v2 = 0, (sub_100099264(v31, v32, v33, v34) & 1) != 0))
            {
              if (((*(unsigned __int8 *)(a1 + 112) ^ *(unsigned __int8 *)(a2 + 112)) & 1) != 0)
                goto LABEL_35;
              sub_1004A8828(*(_BYTE *)(a1 + 113));
              v37 = sub_1000D1340();
              if (v3 == v37 && v2 == v38)
              {
                sub_1000BC0C8();
              }
              else
              {
                v40 = v38;
                sub_100099264(v3, v2, v37, v38);
                sub_1000C5660();
                swift_bridgeObjectRelease(v40);
                v2 = 0;
                if ((v3 & 1) == 0)
                  return v2 & 1;
              }
              v41 = *(_QWORD *)(a1 + 120);
              v42 = *(_QWORD *)(a1 + 128);
              v43 = *(_QWORD *)(a2 + 120);
              v44 = *(_QWORD *)(a2 + 128);
              v45 = v41 == v43 && v42 == v44;
              if (v45 || (v2 = 0, (sub_100099264(v41, v42, v43, v44) & 1) != 0))
              {
                v46 = *(_QWORD *)(a1 + 136);
                v47 = *(_QWORD *)(a1 + 144);
                v48 = *(_QWORD *)(a2 + 136);
                v49 = *(_QWORD *)(a2 + 144);
                v50 = v46 == v48 && v47 == v49;
                if (v50 || (v2 = 0, (sub_100099264(v46, v47, v48, v49) & 1) != 0))
                {
                  if (((*(unsigned __int8 *)(a1 + 152) ^ *(unsigned __int8 *)(a2 + 152)) & 1) != 0)
                    goto LABEL_35;
                  sub_1004A8828(*(_BYTE *)(a1 + 153));
                  v51 = sub_1000D1340();
                  if (v3 == v51 && v2 == v52)
                  {
                    sub_1000BC0C8();
                  }
                  else
                  {
                    v54 = v52;
                    sub_100099264(v3, v2, v51, v52);
                    sub_1000C5660();
                    swift_bridgeObjectRelease(v54);
                    LOBYTE(v2) = 0;
                    if ((v3 & 1) == 0)
                      return v2 & 1;
                  }
                  v55 = *(_QWORD *)(a1 + 160);
                  v56 = *(_QWORD *)(a1 + 168);
                  v57 = *(_QWORD *)(a2 + 160);
                  v58 = *(_QWORD *)(a2 + 168);
                  v59 = v55 == v57 && v56 == v58;
                  if (v59 || (LOBYTE(v2) = 0, (sub_100099264(v55, v56, v57, v58) & 1) != 0))
                  {
                    v60 = *(_QWORD *)(a1 + 176);
                    v61 = *(_QWORD *)(a1 + 184);
                    v62 = *(_QWORD *)(a2 + 176);
                    v63 = *(_QWORD *)(a2 + 184);
                    v64 = v60 == v62 && v61 == v63;
                    if (v64 || (LOBYTE(v2) = 0, (sub_100099264(v60, v61, v62, v63) & 1) != 0))
                    {
                      if (((*(unsigned __int8 *)(a1 + 192) ^ *(unsigned __int8 *)(a2 + 192)) & 1) != 0)
                        goto LABEL_35;
                      v65 = *(_BYTE *)(a1 + 193);
                      v66 = *(_BYTE *)(a2 + 193);
                      v2 = sub_1004A8828(v65);
                      v68 = v67;
                      v69 = sub_1004A8828(v66);
                      if (v2 == v69 && v68 == v70)
                      {
                        LOBYTE(v2) = 1;
                        v72 = v68;
                      }
                      else
                      {
                        v72 = v70;
                        LOBYTE(v2) = sub_100099264(v2, v68, v69, v70);
                      }
                      swift_bridgeObjectRelease(v68);
                      swift_bridgeObjectRelease(v72);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v2 & 1;
}

uint64_t sub_100517680()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_100517688(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  if ((result & 1) == 0)
    *(_BYTE *)(v1 + 73) = 0;
  return result;
}

uint64_t sub_100517698(uint64_t a1)
{
  return sub_100517770(a1, &qword_100BC2100, &qword_100CAEBF0, &qword_100CAECA0, (uint64_t)sub_1004A83CC);
}

uint64_t sub_1005176BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_1005176C4(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 112) = result;
  if ((result & 1) == 0)
    *(_BYTE *)(v1 + 113) = 0;
  return result;
}

uint64_t sub_1005176D4(uint64_t a1)
{
  return sub_100517770(a1, &qword_100BC2108, &qword_100CAEBF8, &qword_100CAECA8, (uint64_t)sub_1004A87B8);
}

uint64_t sub_1005176F8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t sub_100517700(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  if ((result & 1) == 0)
    *(_BYTE *)(v1 + 153) = 0;
  return result;
}

uint64_t sub_100517710(uint64_t a1)
{
  return sub_100517770(a1, &qword_100BC2110, &qword_100CAEC00, &qword_100CAECB0, (uint64_t)sub_1004A87CC);
}

uint64_t sub_100517734()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 192);
}

uint64_t sub_10051773C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 192) = result;
  if ((result & 1) == 0)
    *(_BYTE *)(v1 + 193) = 0;
  return result;
}

uint64_t sub_10051774C(uint64_t a1)
{
  return sub_100517770(a1, &qword_100BC2118, &qword_100CAEC08, &qword_100CAECB8, (uint64_t)sub_1004A87E0);
}

uint64_t sub_100517770(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  *a4 = *a3;
  return swift_bridgeObjectRetain(v7);
}

uint64_t sub_1005177B4(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;

  if (a1 == 0xD000000000000013)
  {
    v4 = 0x8000000100A08E50;
    if (a2 == 0x8000000100A08E50)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A08E50, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000016)
  {
    v6 = 0x8000000100A08E70;
    if (a2 == 0x8000000100A08E70)
      goto LABEL_10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A08E70, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
LABEL_10:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if (a1 == 0xD000000000000015)
  {
    v7 = 0x8000000100A08E90;
    if (a2 == 0x8000000100A08E90)
      goto LABEL_15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A08E90, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_15:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if (a1 == 0xD000000000000013)
  {
    v8 = 0x8000000100A08EB0;
    if (a2 == 0x8000000100A08EB0)
      goto LABEL_20;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A08EB0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 3;
  }
  if (a1 == 0xD000000000000016)
  {
    v9 = 0x8000000100A08ED0;
    if (a2 == 0x8000000100A08ED0)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A08ED0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 4;
  }
  if (a1 == 0xD000000000000015)
  {
    v10 = 0x8000000100A08EF0;
    if (a2 == 0x8000000100A08EF0)
      goto LABEL_30;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A08EF0, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_30:
    swift_bridgeObjectRelease(v10);
    return 5;
  }
  if (a1 == 0xD000000000000016)
  {
    v11 = 0x8000000100A08F10;
    if (a2 == 0x8000000100A08F10)
      goto LABEL_35;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A08F10, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_35:
    swift_bridgeObjectRelease(v11);
    return 6;
  }
  if (a1 == 0xD000000000000012)
  {
    v12 = 0x8000000100A08F30;
    if (a2 == 0x8000000100A08F30)
      goto LABEL_40;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100A08F30, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_40:
    swift_bridgeObjectRelease(v12);
    return 7;
  }
  if (a1 == 0xD000000000000015)
  {
    v13 = 0x8000000100A08F50;
    if (a2 == 0x8000000100A08F50)
      goto LABEL_45;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A08F50, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_45:
    swift_bridgeObjectRelease(v13);
    return 8;
  }
  if (a1 == 0xD000000000000014)
  {
    v14 = 0x8000000100A08F70;
    if (a2 == 0x8000000100A08F70)
      goto LABEL_50;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100A08F70, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_50:
    swift_bridgeObjectRelease(v14);
    return 9;
  }
  if (a1 == 0xD000000000000015)
  {
    v15 = 0x8000000100A08F90;
    if (a2 == 0x8000000100A08F90)
      goto LABEL_55;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A08F90, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
LABEL_55:
    swift_bridgeObjectRelease(v15);
    return 10;
  }
  if (a1 == 0xD000000000000013)
  {
    v16 = 0x8000000100A08FB0;
    if (a2 == 0x8000000100A08FB0)
      goto LABEL_60;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A08FB0, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_60:
    swift_bridgeObjectRelease(v16);
    return 11;
  }
  if (a1 == 0xD000000000000016)
  {
    v17 = 0x8000000100A08FD0;
    if (a2 == 0x8000000100A08FD0)
      goto LABEL_65;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A08FD0, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
LABEL_65:
    swift_bridgeObjectRelease(v17);
    return 12;
  }
  if (a1 == 0xD000000000000015)
  {
    v18 = 0x8000000100A08FF0;
    if (a2 == 0x8000000100A08FF0)
      goto LABEL_70;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A08FF0, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_70:
    swift_bridgeObjectRelease(v18);
    return 13;
  }
  if (a1 == 0xD000000000000016)
  {
    v19 = 0x8000000100A09010;
    if (a2 == 0x8000000100A09010)
      goto LABEL_75;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A09010, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
LABEL_75:
    swift_bridgeObjectRelease(v19);
    return 14;
  }
  if (a1 == 0xD000000000000012)
  {
    v20 = 0x8000000100A09030;
    if (a2 == 0x8000000100A09030)
      goto LABEL_80;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100A09030, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
LABEL_80:
    swift_bridgeObjectRelease(v20);
    return 15;
  }
  if (a1 == 0xD000000000000015)
  {
    v21 = 0x8000000100A09050;
    if (a2 == 0x8000000100A09050)
      goto LABEL_85;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A09050, a1, a2, 0) & 1) != 0)
  {
    v21 = a2;
LABEL_85:
    swift_bridgeObjectRelease(v21);
    return 16;
  }
  if (a1 == 0xD000000000000014)
  {
    v22 = 0x8000000100A09070;
    if (a2 == 0x8000000100A09070)
      goto LABEL_90;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100A09070, a1, a2, 0) & 1) != 0)
  {
    v22 = a2;
LABEL_90:
    swift_bridgeObjectRelease(v22);
    return 17;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x8000000100A09090)
  {
    swift_bridgeObjectRelease(0x8000000100A09090);
    return 18;
  }
  else
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100A09090, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v23 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

uint64_t sub_100517E30()
{
  return 19;
}

uint64_t sub_100517E38(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100517E74 + 4 * byte_1009AA5B0[a1]))(0xD000000000000013, 0x8000000100A08E50);
}

uint64_t sub_100517E74()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_100517F88(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  char v27;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BEBF80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_100518CA8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ReportWeatherConditionsViewModel.CodingKeys, &type metadata for ReportWeatherConditionsViewModel.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v27 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v27, v5);
  if (!v2)
  {
    sub_1000BAFA8(v3[2], v3[3], 1);
    sub_1000C2BE4(*((unsigned __int8 *)v3 + 32), 2);
    sub_1000BAFA8(v3[5], v3[6], 3);
    sub_1000BAFA8(v3[7], v3[8], 4);
    sub_1000C2BE4(*((unsigned __int8 *)v3 + 72), 5);
    v27 = *((_BYTE *)v3 + 73);
    v26 = 6;
    v14 = sub_100518D5C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v27, &v26, v5, &unk_100B767F0, v14);
    sub_1000BAFA8(v3[10], v3[11], 7);
    sub_1000BAFA8(v3[12], v3[13], 8);
    sub_1000C2BE4(*((unsigned __int8 *)v3 + 112), 9);
    v27 = *((_BYTE *)v3 + 113);
    v26 = 10;
    v15 = sub_100518D98();
    sub_1000DDC5C(v15, v16, v17, (uint64_t)&unk_100B76760);
    sub_1000BAFA8(v3[15], v3[16], 11);
    sub_1000BAFA8(v3[17], v3[18], 12);
    v18 = sub_1000C2BE4(*((unsigned __int8 *)v3 + 152), 13);
    v27 = *((_BYTE *)v3 + 153);
    v26 = 14;
    sub_1000DDC5C(v18, v19, v20, (uint64_t)&unk_100B76760);
    sub_1000BAFA8(v3[20], v3[21], 15);
    sub_1000BAFA8(v3[22], v3[23], 16);
    v21 = sub_1000C2BE4(*((unsigned __int8 *)v3 + 192), 17);
    v27 = *((_BYTE *)v3 + 193);
    v26 = 18;
    sub_1000DDC5C(v21, v22, v23, (uint64_t)&unk_100B76760);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100518240(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  void (*v43)(_QWORD, _QWORD);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int v82;
  _QWORD v83[25];
  _QWORD v84[4];
  char v85;
  _BYTE v86[7];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  int v93;
  __int16 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  int v101;
  __int16 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  int v109;
  __int16 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  char v117;
  unsigned __int8 v118;
  int v119;
  __int16 v120;
  int v121;
  __int16 v122;
  int v123;
  __int16 v124;
  _DWORD v125[3];
  uint64_t v126;

  v5 = sub_1000BA294(&qword_100BEBF60);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v81 = a1;
  sub_1000DB418(a1, v9);
  v11 = sub_100518CA8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ReportWeatherConditionsViewModel.CodingKeys, &type metadata for ReportWeatherConditionsViewModel.CodingKeys, v11, v9, v10);
  if (v2)
  {
    v126 = v2;
    v13 = 0;
  }
  else
  {
    v12 = a2;
    LOBYTE(v84[0]) = 0;
    v14 = sub_1000C3C70();
    v16 = v15;
    sub_1000D90C4(v15, 1);
    v17 = sub_1000C3C70();
    v78 = v16;
    v19 = v18;
    v70 = v17;
    sub_1000D90C4(v18, 2);
    v20 = sub_1000DF70C();
    v77 = v19;
    v69 = v20;
    LOBYTE(v84[0]) = 3;
    v21 = sub_1000C3C70();
    v23 = v22;
    v68 = v21;
    sub_1000D90C4(v22, 4);
    v24 = sub_1000C3C70();
    v76 = v23;
    v67 = v24;
    LOBYTE(v84[0]) = 5;
    v75 = v25;
    swift_bridgeObjectRetain();
    v66 = sub_1000DF70C();
    LOBYTE(v83[0]) = 6;
    sub_100518CE4();
    sub_1000D96D4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v26, v27, v28);
    v65 = LOBYTE(v84[0]);
    LOBYTE(v84[0]) = 7;
    v64 = sub_1000C3C70();
    LOBYTE(v84[0]) = 8;
    v74 = v29;
    swift_bridgeObjectRetain();
    v63 = sub_1000C3C70();
    LOBYTE(v84[0]) = 9;
    v73 = v30;
    swift_bridgeObjectRetain();
    v62 = sub_1000DF70C();
    v126 = 0;
    LOBYTE(v83[0]) = 10;
    sub_100518D20();
    sub_1000D96D4();
    v31 = v126;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v32, v33, v34);
    v126 = v31;
    if (!v31)
    {
      v61 = LOBYTE(v84[0]);
      LOBYTE(v84[0]) = 11;
      v35 = sub_1000DD078();
      v80 = v36;
      v126 = 0;
      v37 = v35;
      LOBYTE(v84[0]) = 12;
      swift_bridgeObjectRetain();
      v60 = sub_1000DD078();
      v79 = v38;
      v126 = 0;
      LOBYTE(v84[0]) = 13;
      swift_bridgeObjectRetain();
      v59 = sub_1000CD804();
      v126 = 0;
      LOBYTE(v83[0]) = 14;
      sub_1000D9EFC((uint64_t)&unk_100B76760, (uint64_t)v83);
      v126 = 0;
      v58 = LOBYTE(v84[0]);
      LOBYTE(v84[0]) = 15;
      v57 = sub_1000DD078();
      v72 = v39;
      v82 = 1;
      v126 = 0;
      LOBYTE(v84[0]) = 16;
      swift_bridgeObjectRetain();
      v56 = sub_1000DD078();
      v71 = v40;
      v126 = 0;
      LOBYTE(v84[0]) = 17;
      swift_bridgeObjectRetain();
      v55 = sub_1000CD804();
      v126 = 0;
      v117 = 18;
      sub_1000D9EFC((uint64_t)&unk_100B76760, (uint64_t)&v117);
      v126 = 0;
      v41 = v69 & 1;
      v42 = v66 & 1;
      v52 = v69 & 1;
      v53 = v66 & 1;
      v69 = v62 & 1;
      v82 = v59 & 1;
      v43 = *(void (**)(_QWORD, _QWORD))(v6 + 8);
      v44 = v55 & 1;
      v66 = v55 & 1;
      v43(v8, v5);
      v62 = v118;
      v83[0] = v14;
      v83[1] = v78;
      v83[2] = v70;
      v83[3] = v77;
      LOBYTE(v83[4]) = v41;
      v83[5] = v68;
      v83[6] = v76;
      v83[7] = v67;
      v83[8] = v75;
      LOBYTE(v83[9]) = v42;
      BYTE1(v83[9]) = v65;
      v83[10] = v64;
      v83[11] = v74;
      v83[12] = v63;
      v83[13] = v73;
      LOBYTE(v83[14]) = v69;
      BYTE1(v83[14]) = v61;
      v54 = v37;
      v83[15] = v37;
      v83[16] = v80;
      v83[17] = v60;
      v83[18] = v79;
      LOBYTE(v83[19]) = v82;
      BYTE1(v83[19]) = v58;
      v83[20] = v57;
      v83[21] = v72;
      v83[22] = v56;
      v83[23] = v71;
      LOBYTE(v83[24]) = v44;
      BYTE1(v83[24]) = v118;
      sub_1001F5330(v83);
      v45 = v78;
      swift_bridgeObjectRelease();
      v46 = v77;
      sub_100098738();
      sub_1000C5650();
      v47 = v75;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v73;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = v79;
      swift_bridgeObjectRelease();
      sub_10009895C();
      v50 = v71;
      sub_10009895C();
      sub_1000BD538();
      v84[0] = v14;
      v84[1] = v45;
      v84[2] = v70;
      v84[3] = v46;
      v85 = v52;
      *(_DWORD *)v86 = v125[0];
      *(_DWORD *)&v86[3] = *(_DWORD *)((char *)v125 + 3);
      v87 = v68;
      v88 = v76;
      v89 = v67;
      v90 = v47;
      v91 = v53;
      v92 = v65;
      v93 = v123;
      v94 = v124;
      v95 = v64;
      v96 = v74;
      v97 = v63;
      v98 = v48;
      v99 = v69;
      v100 = v61;
      v101 = v121;
      v102 = v122;
      v103 = v54;
      v104 = v80;
      v105 = v60;
      v106 = v49;
      v107 = v82;
      v108 = v58;
      v110 = v120;
      v109 = v119;
      v111 = v57;
      v112 = v72;
      v113 = v56;
      v114 = v50;
      v115 = v66;
      v116 = v62;
      sub_1001F53E4(v84);
      memcpy(v12, v83, 0xC2uLL);
      return;
    }
    sub_1000BC48C();
    sub_1000CCE8C();
    sub_1000CCE94();
    sub_1000C5650();
    sub_1000B4AE4();
    sub_1000C6024();
    sub_1000C5658();
    v13 = 411;
  }
  sub_1000BD538();
  if ((v13 & 1) != 0)
  {
    v82 = 0;
    sub_1000CCE8C();
    if (((v13 >> 1) & 1) == 0)
    {
LABEL_6:
      if (((v13 >> 3) & 1) != 0)
        goto LABEL_7;
      goto LABEL_16;
    }
  }
  else
  {
    v82 = 0;
    if ((v13 & 2) == 0)
      goto LABEL_6;
  }
  sub_1000CCE94();
  if (((v13 >> 3) & 1) != 0)
  {
LABEL_7:
    sub_1000C5650();
    if (((v13 >> 4) & 1) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  if (((v13 >> 4) & 1) == 0)
  {
LABEL_8:
    if (((v13 >> 7) & 1) != 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  sub_1000B4AE4();
  if (((v13 >> 7) & 1) != 0)
  {
LABEL_9:
    sub_1000C6024();
    if (((v13 >> 8) & 1) == 0)
      goto LABEL_10;
LABEL_19:
    sub_1000C5658();
    if (((v13 >> 11) & 1) != 0)
      goto LABEL_11;
    goto LABEL_12;
  }
LABEL_18:
  if (((v13 >> 8) & 1) != 0)
    goto LABEL_19;
LABEL_10:
  if (((v13 >> 11) & 1) != 0)
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
  if (v82)
    swift_bridgeObjectRelease();
}

uint64_t sub_100518B10()
{
  unsigned __int8 *v0;

  return sub_100517E38(*v0);
}

uint64_t sub_100518B18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005177B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100518B3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100517E30();
  *a1 = result;
  return result;
}

uint64_t sub_100518B60(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100518CA8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100518B88(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100518CA8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100518BB4(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE __src[200];

  sub_100518240(a1, __src);
  if (!v2)
    memcpy(a2, __src, 0xC2uLL);
}

uint64_t sub_100518BFC(_QWORD *a1)
{
  return sub_100517F88(a1);
}

void sub_100518C10(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE __src[200];

  sub_100695A8C(a1, (uint64_t)__src);
  if (!v2)
    memcpy(a2, __src, 0xC2uLL);
}

void sub_100518C58(uint64_t a1)
{
  const void *v1;
  _BYTE __dst[194];

  memcpy(__dst, v1, sizeof(__dst));
  sub_100695E5C(a1);
}

unint64_t sub_100518CA8()
{
  unint64_t result;

  result = qword_100BEBF68;
  if (!qword_100BEBF68)
  {
    result = swift_getWitnessTable(&unk_1009AA780, &type metadata for ReportWeatherConditionsViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEBF68);
  }
  return result;
}

unint64_t sub_100518CE4()
{
  unint64_t result;

  result = qword_100BEBF70;
  if (!qword_100BEBF70)
  {
    result = swift_getWitnessTable(&unk_1009A3B68, &unk_100B767F0);
    atomic_store(result, (unint64_t *)&qword_100BEBF70);
  }
  return result;
}

unint64_t sub_100518D20()
{
  unint64_t result;

  result = qword_100BEBF78;
  if (!qword_100BEBF78)
  {
    result = swift_getWitnessTable(&unk_1009A3B18, &unk_100B76760);
    atomic_store(result, (unint64_t *)&qword_100BEBF78);
  }
  return result;
}

unint64_t sub_100518D5C()
{
  unint64_t result;

  result = qword_100BEBF88;
  if (!qword_100BEBF88)
  {
    result = swift_getWitnessTable(&unk_1009A3B40, &unk_100B767F0);
    atomic_store(result, (unint64_t *)&qword_100BEBF88);
  }
  return result;
}

unint64_t sub_100518D98()
{
  unint64_t result;

  result = qword_100BEBF90;
  if (!qword_100BEBF90)
  {
    result = swift_getWitnessTable(&unk_1009A3AF0, &unk_100B76760);
    atomic_store(result, (unint64_t *)&qword_100BEBF90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReportWeatherConditionsViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 18) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v5 = v6 - 19;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherConditionsViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_100518EA8 + 4 * byte_1009AA5C8[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_100518EDC + 4 * byte_1009AA5C3[v4]))();
}

uint64_t sub_100518EDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100518EE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100518EECLL);
  return result;
}

uint64_t sub_100518EF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100518F00);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_100518F04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100518F0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherConditionsViewModel.CodingKeys()
{
  return &type metadata for ReportWeatherConditionsViewModel.CodingKeys;
}

unint64_t sub_100518F2C()
{
  unint64_t result;

  result = qword_100BEBF98;
  if (!qword_100BEBF98)
  {
    result = swift_getWitnessTable(&unk_1009AA758, &type metadata for ReportWeatherConditionsViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEBF98);
  }
  return result;
}

unint64_t sub_100518F6C()
{
  unint64_t result;

  result = qword_100BEBFA0;
  if (!qword_100BEBFA0)
  {
    result = swift_getWitnessTable(&unk_1009AA6C8, &type metadata for ReportWeatherConditionsViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEBFA0);
  }
  return result;
}

unint64_t sub_100518FAC()
{
  unint64_t result;

  result = qword_100BEBFA8;
  if (!qword_100BEBFA8)
  {
    result = swift_getWitnessTable(&unk_1009AA6F0, &type metadata for ReportWeatherConditionsViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEBFA8);
  }
  return result;
}

uint64_t *sub_100518FE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    v9 = *(int *)(a3 + 32);
    v10 = (char *)a2 + v9;
    v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    v13(v11, v10, v12, v14);
    v15 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
    v16 = *(int *)(v15 + 20);
    v17 = &v11[v16];
    v18 = &v10[v16];
    v19 = type metadata accessor for Elevation(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      v20 = sub_1000BA294(&qword_100BC3370);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    v22 = *(int *)(v15 + 24);
    v23 = &v11[v22];
    v24 = &v10[v22];
    v25 = type metadata accessor for BackgroundMoonData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      v26 = sub_1000BA294(&qword_100BC3378);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
  }
  return v3;
}

uint64_t sub_1005191C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  v7 = v4 + *(int *)(v6 + 20);
  v8 = type metadata accessor for Elevation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  v10 = type metadata accessor for BackgroundMoonData(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return result;
}

_QWORD *sub_1005192C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a2 + v8;
  v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = swift_bridgeObjectRetain();
  v12(v10, v9, v11, v13);
  v14 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  v15 = *(int *)(v14 + 20);
  v16 = &v10[v15];
  v17 = &v9[v15];
  v18 = type metadata accessor for Elevation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BC3370);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v20 = *(int *)(v14 + 24);
  v21 = &v10[v20];
  v22 = &v9[v20];
  v23 = type metadata accessor for BackgroundMoonData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_1000BA294(&qword_100BC3378);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  return a1;
}

_QWORD *sub_100519478(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  v11 = *(int *)(v10 + 20);
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = type metadata accessor for Elevation(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = sub_1000BA294(&qword_100BC3370);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  v19 = *(int *)(v10 + 24);
  v20 = &v7[v19];
  v21 = &v8[v19];
  v22 = type metadata accessor for BackgroundMoonData(0);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22);
  v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    v25 = *(_QWORD *)(v22 - 8);
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v26 = sub_1000BA294(&qword_100BC3378);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  return a1;
}

_OWORD *sub_1005196F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  v11 = *(int *)(v10 + 20);
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = type metadata accessor for Elevation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_1000BA294(&qword_100BC3370);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = *(int *)(v10 + 24);
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = type metadata accessor for BackgroundMoonData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_1000BA294(&qword_100BC3378);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
  }
  return a1;
}

_QWORD *sub_100519870(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  v15 = *(int *)(v14 + 20);
  v16 = &v11[v15];
  v17 = &v12[v15];
  v18 = type metadata accessor for Elevation(0);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v21 = *(_QWORD *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    v22 = sub_1000BA294(&qword_100BC3370);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  v23 = *(int *)(v14 + 24);
  v24 = &v11[v23];
  v25 = &v12[v23];
  v26 = type metadata accessor for BackgroundMoonData(0);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (!v27)
  {
    v29 = *(_QWORD *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    v30 = sub_1000BA294(&qword_100BC3378);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  return a1;
}

uint64_t sub_100519AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100519ABC);
}

uint64_t sub_100519ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel(0);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100519B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100519B3C);
}

uint64_t sub_100519B3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100519BA8(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v8;
  unint64_t v10;
  char v11;

  if (a1 == 0xD000000000000012)
  {
    v4 = 0x8000000100A090B0;
    if (a2 == 0x8000000100A090B0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100A090B0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100A090D0)
  {
    v6 = 0x8000000100A090D0;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100A090D0, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0x706D655468676968 && a2 == 0xEF65727574617265)
  {
    v8 = 0xEF65727574617265;
    goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x706D655468676968, 0xEF65727574617265, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0x65706D6554776F6CLL && a2 == 0xEE00657275746172)
  {
    v10 = 0xEE00657275746172;
    goto LABEL_27;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65706D6554776F6CLL, 0xEE00657275746172, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_27:
    swift_bridgeObjectRelease(v10);
    return 3;
  }
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100A08D80)
  {
    swift_bridgeObjectRelease(0x8000000100A08D80);
    return 4;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x8000000100A08D80, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_100519DF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100519E28 + 4 * byte_1009AA7D0[a1]))(0xD000000000000012, 0x8000000100A090B0);
}

uint64_t sub_100519E28(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_100519E98(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BEC068);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_10051A3B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ListPreprocessedDataModel.CodingKeys, &type metadata for ListPreprocessedDataModel.CodingKeys, v12, v10, v11);
  v13 = *v3;
  v14 = v3[1];
  v29 = 0;
  sub_1000BC254(v13, v14, (uint64_t)&v29);
  if (!v2)
  {
    v15 = v3[2];
    v16 = v3[3];
    v28 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, v16, &v28, v5);
    v17 = v3[4];
    v18 = v3[5];
    v27 = 2;
    sub_1000BC254(v17, v18, (uint64_t)&v27);
    v19 = v3[6];
    v20 = v3[7];
    v26 = 3;
    sub_1000BC254(v19, v20, (uint64_t)&v26);
    v21 = (char *)v3 + *(int *)(type metadata accessor for ListPreprocessedDataModel(0) + 32);
    v25 = 4;
    v22 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel(0);
    v23 = sub_10051A4B0(&qword_100BEC070, (uint64_t)&unk_1009AC678);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v25, v5, v22, v23);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

void sub_10051A030(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v17 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel(0);
  __chkstk_darwin(v17);
  sub_100098728();
  v18 = v4 - v3;
  v19 = sub_1000BA294(&qword_100BEC050);
  __chkstk_darwin(v19);
  sub_100098728();
  v5 = type metadata accessor for ListPreprocessedDataModel(0);
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = (_QWORD *)(v7 - v6);
  v10 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v10);
  v11 = sub_10051A3B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ListPreprocessedDataModel.CodingKeys, &type metadata for ListPreprocessedDataModel.CodingKeys, v11, v10, v9);
  if (v20)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    v25 = 0;
    *v8 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v19);
    v8[1] = v12;
    v24 = 1;
    v8[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v24, v19);
    v8[3] = v13;
    v23 = 2;
    v8[4] = KeyedDecodingContainer.decode(_:forKey:)(&v23, v19);
    v8[5] = v14;
    v22 = 3;
    v8[6] = KeyedDecodingContainer.decode(_:forKey:)(&v22, v19);
    v8[7] = v15;
    v21 = 4;
    sub_10051A4B0(&qword_100BEC060, (uint64_t)&unk_1009AC6A0);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v17, &v21, v19);
    sub_10009DD6C();
    sub_10051A3EC(v18, (uint64_t)v8 + *(int *)(v5 + 32));
    sub_10051A430((uint64_t)v8, a2);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    sub_10051A474((uint64_t)v8);
  }
}

uint64_t sub_10051A308()
{
  unsigned __int8 *v0;

  return sub_100519DF0(*v0);
}

uint64_t sub_10051A310@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100519BA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10051A334(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10051A3B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10051A35C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10051A3B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10051A384(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10051A030(a1, a2);
}

uint64_t sub_10051A398(_QWORD *a1)
{
  return sub_100519E98(a1);
}

unint64_t sub_10051A3B0()
{
  unint64_t result;

  result = qword_100BEC058;
  if (!qword_100BEC058)
  {
    result = swift_getWitnessTable(&unk_1009AA98C, &type metadata for ListPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEC058);
  }
  return result;
}

uint64_t sub_10051A3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051A430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ListPreprocessedDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051A474(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ListPreprocessedDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10051A4B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ListPreprocessedDataModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10051A53C + 4 * byte_1009AA7DA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10051A570 + 4 * byte_1009AA7D5[v4]))();
}

uint64_t sub_10051A570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10051A578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10051A580);
  return result;
}

uint64_t sub_10051A58C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10051A594);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10051A598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10051A5A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListPreprocessedDataModel.CodingKeys()
{
  return &type metadata for ListPreprocessedDataModel.CodingKeys;
}

unint64_t sub_10051A5C0()
{
  unint64_t result;

  result = qword_100BEC078;
  if (!qword_100BEC078)
  {
    result = swift_getWitnessTable(&unk_1009AA964, &type metadata for ListPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEC078);
  }
  return result;
}

unint64_t sub_10051A600()
{
  unint64_t result;

  result = qword_100BEC080;
  if (!qword_100BEC080)
  {
    result = swift_getWitnessTable(&unk_1009AA8D4, &type metadata for ListPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEC080);
  }
  return result;
}

unint64_t sub_10051A640()
{
  unint64_t result;

  result = qword_100BEC088;
  if (!qword_100BEC088)
  {
    result = swift_getWitnessTable(&unk_1009AA8FC, &type metadata for ListPreprocessedDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BEC088);
  }
  return result;
}

uint64_t sub_10051A67C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 64));
  return v0;
}

uint64_t sub_10051A6BC()
{
  uint64_t v0;

  sub_10051A67C();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for ToolbarAddButtonInteractor()
{
  return objc_opt_self(_TtC7Weather26ToolbarAddButtonInteractor);
}

void sub_10051A6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  v4 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100079F58();
  v6 = *(uint64_t (**)(uint64_t))(v2 + 16);
  type metadata accessor for LocationModel(0);
  v7 = sub_1000D18D4();
  v8(v7, a1);
  v9 = sub_1000D96E8();
  sub_1000C566C(v9);
  v10 = sub_1000E716C();
  sub_1000C3C94(v10);
  sub_1000BA4FC(v1, v4);
  sub_1000BA5F4();
  v11 = sub_1000B49C8(v1, (uint64_t)v12, v6);
  sub_1000D1350(v11, (uint64_t *)&unk_100BFFA10);
  sub_1000D0D60();
  sub_10009880C();
  sub_10004A2A0();
}

void sub_10051A79C()
{
  sub_10051A7AC(5);
}

void sub_10051A7A4()
{
  sub_10051A7AC(6);
}

void sub_10051A7AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[48];

  v3 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(uint64_t (**)(uint64_t))(v1 + 16);
  v8 = sub_1000D96E8();
  swift_storeEnumTagMultiPayload(v6, v8, a1);
  v9 = sub_1000E716C();
  swift_storeEnumTagMultiPayload(v6, v9, 1);
  sub_1000BA4FC((uint64_t)v6, v3);
  sub_1000BA5F4();
  v10 = sub_1000B49C8((uint64_t)v6, (uint64_t)v11, v7);
  sub_1000D1350(v10, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4((uint64_t)v6);
  sub_10009880C();
  sub_10004A2A0();
}

void sub_10051A864()
{
  sub_10051AB70(type metadata accessor for ViewAction, 8, 6);
}

double sub_10051A878()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  _BYTE v14[40];
  uint64_t v15;
  char v16;
  _OWORD v17[2];
  uint64_t v18;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  v2 = sub_1000BA294(&qword_100BD3370);
  v3 = sub_100099ACC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + 2 * v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10097DA20;
  v9 = v8 + v7;
  v10 = type metadata accessor for SearchViewAction(0);
  swift_storeEnumTagMultiPayload(v8 + v7, v10, 9);
  v11 = sub_1000E716C();
  swift_storeEnumTagMultiPayload(v9, v11, 3);
  sub_1000BA4FC(v9, v3);
  v12 = v9 + v5;
  swift_storeEnumTagMultiPayload(v12, v11, 9);
  sub_1000BA4FC(v12, v3);
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_1000AD04C((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_100BFFA10);
  v15 = v8;
  v16 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10009FF10((uint64_t)v14, v1);
  sub_100021A68((uint64_t)v14, &qword_100BD3378);
  swift_bridgeObjectRelease();
  sub_100021A68((uint64_t)v17, (uint64_t *)&unk_100BFFA10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10051A9D8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  v4 = a1;
  v5 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079F58();
  if (v4)
  {
    sub_10082FB80(a1);
    if ((v7 & 1) != 0)
    {
      v8 = *(uint64_t (**)(uint64_t))(v2 + 16);
      v9 = sub_1000D96E8();
      swift_storeEnumTagMultiPayload(v1, v9, 3);
      v10 = sub_1000E716C();
      sub_1000C3C94(v10);
      sub_1000BA4FC(v1, v5);
      sub_1000BA5F4();
      v11 = sub_1000B49C8(v1, (uint64_t)v12, v8);
      sub_1000D1350(v11, (uint64_t *)&unk_100BFFA10);
      sub_1000D0D60();
      sub_10009880C();
    }
  }
  sub_10004A2A0();
}

void sub_10051AA84()
{
  sub_10051A7AC(7);
}

void sub_10051AA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  _QWORD *v11;
  uint64_t v12;
  _BYTE v13[48];

  v8 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100079F58();
  v10 = *(uint64_t (**)(uint64_t))(v4 + 16);
  v11 = (_QWORD *)(v3 + *(int *)(sub_1000BA294(&qword_100BD0A98) + 48));
  sub_1000AD04C(a1, v3, &qword_100BC3660);
  *v11 = a2;
  v11[1] = a3;
  v12 = type metadata accessor for DebugAction(0);
  sub_1000C566C(v12);
  swift_storeEnumTagMultiPayload(v3, v8, 10);
  sub_1000C3C80();
  swift_bridgeObjectRetain(a3);
  sub_1000B49C8(v3, (uint64_t)v13, v10);
  sub_100021A68((uint64_t)v13, (uint64_t *)&unk_100BFFA10);
  sub_1000D0D60();
  sub_10009880C();
  sub_10009D300();
}

void sub_10051AB5C()
{
  sub_10051AB70(type metadata accessor for DebugAction, 2, 10);
}

void sub_10051AB70(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  _BYTE v13[48];

  v7 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(uint64_t (**)(uint64_t))(v3 + 16);
  v12 = a1(0);
  swift_storeEnumTagMultiPayload(v10, v12, a2);
  swift_storeEnumTagMultiPayload(v10, v7, a3);
  sub_1000C3C80();
  sub_1000B49C8((uint64_t)v10, (uint64_t)v13, v11);
  sub_100021A68((uint64_t)v13, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4((uint64_t)v10);
  sub_10009880C();
  sub_10009D300();
}

void sub_10051AC2C()
{
  sub_10051A7AC(8);
}

uint64_t sub_10051AC34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB800C, 1);
}

void sub_10051AC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v24 = a3;
  v25 = a4;
  v7 = type metadata accessor for ConditionDetailLegend(0);
  v23 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v10)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  v21 = v4;
  v27 = _swiftEmptyArrayStorage;
  sub_100606154();
  v11 = v27;
  v22 = (id)objc_opt_self(UIColor);
  if (a2 >= a1 && (v10 & 0x8000000000000000) == 0)
  {
    v12 = v25;
    while (a2 != a1)
    {
      v26 = a1;
      v13 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
      v15 = v14;
      v16 = (uint64_t *)((char *)v9 + *(int *)(v7 + 24));
      v17 = objc_msgSend(v22, "quaternaryLabelColor", swift_bridgeObjectRetain().n128_f64[0]);
      *v16 = Color.init(uiColor:)(v17);
      v18 = type metadata accessor for ConditionDetailLegendForeground(0);
      swift_storeEnumTagMultiPayload(v16, v18, 0);
      *v9 = v13;
      v9[1] = v15;
      v9[2] = v24;
      v9[3] = v12;
      v19 = (uint64_t *)((char *)v9 + *(int *)(v7 + 28));
      *v19 = 0;
      v19[1] = 0xE000000000000000;
      v27 = v11;
      v20 = v11[2];
      if (v20 >= v11[3] >> 1)
      {
        sub_100606154();
        v11 = v27;
      }
      v11[2] = v20 + 1;
      sub_10007802C((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v20, type metadata accessor for ConditionDetailLegend);
      if (a2 == ++a1)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_10051AE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  sub_10051BB28(v0, (uint64_t)&v10);
  v1 = type metadata accessor for MainActor(0);
  v2 = static MainActor.shared.getter(v1);
  v3 = swift_allocObject(&unk_100B7D690, 88, 7);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = &protocol witness table for MainActor;
  v4 = v11;
  *(_OWORD *)(v3 + 32) = v10;
  *(_OWORD *)(v3 + 48) = v4;
  *(_OWORD *)(v3 + 64) = v12;
  *(_QWORD *)(v3 + 80) = v13;
  v5 = sub_10051BB28(v0, (uint64_t)&v10);
  v6 = static MainActor.shared.getter(v5);
  v7 = swift_allocObject(&unk_100B7D6B8, 88, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = &protocol witness table for MainActor;
  v8 = v11;
  *(_OWORD *)(v7 + 32) = v10;
  *(_OWORD *)(v7 + 48) = v8;
  *(_OWORD *)(v7 + 64) = v12;
  *(_QWORD *)(v7 + 80) = v13;
  Binding.init(get:set:)(&v10, sub_10051E168, v3, sub_10051E1AC, v7, &type metadata for AveragesKind);
  return v10;
}

void sub_10051AF68(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  char v6;
  uint64_t v7;

  v2 = type metadata accessor for AveragesDetailViewModel(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_10017BA58();
  swift_release();
  sub_100487504();
  v6 = v5 & 1;
  sub_1000215BC((uint64_t)v4, type metadata accessor for AveragesDetailViewModel);
  *a1 = v6;
}

