double sub_1004036E0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  unint64_t v5;
  char v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;

  ObjectType = swift_getObjectType(a1);
  if (qword_100BC2218 != -1)
    swift_once(&qword_100BC2218, sub_10001075C);
  dispatch thunk of Configurable.setting<A>(_:)(&v19, qword_100CAED98, &type metadata for String, &protocol witness table for String, ObjectType, *(_QWORD *)(a2 + 8));
  v4 = v19;
  v5 = v20;
  if (v19 == 0x343230326C6C6166 && v20 == 0xE800000000000000)
    v7 = 0;
  else
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x343230326C6C6166, 0xE800000000000000, v19, v20, 0) ^ 1;
  v8 = type metadata accessor for LocalPreset(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  sub_1005DDA98(v4, v5);
  v11 = v10;
  if ((v7 & 1) == 0)
  {
    v12 = _s5DemosO8Fall2024CMa(0);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    sub_1005C5F14();
    v14 = v13;
    sub_1005C5CD0();
    v16 = v15;
    v9 = swift_release(v14);
    if (v16)
      goto LABEL_13;
  }
  if (v11)
  {
    sub_1005DD7CC();
    v16 = v17;
    if (!v17)
    {
LABEL_14:
      v9.n128_u64[0] = swift_release(v11).n128_u64[0];
      return v9.n128_f64[0];
    }
LABEL_13:
    dispatch thunk of Updatable.apply(preset:)(v16, ObjectType, a2, v9);
    swift_release(v16);
    goto LABEL_14;
  }
  return v9.n128_f64[0];
}

uint64_t sub_100403864@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1000BA294(&qword_100BDFD20);
  v5 = type metadata accessor for Group(0);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_10097CA50;
  v7 = sub_1000BA294(&qword_100BDFD28);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10097CA50;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1000BA294(&qword_100BDFD18);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (v15)
  {
    v13 = type metadata accessor for ResetItem(0);
    swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    v14 = ((uint64_t (*)())ResetItem.init(layout:))();
    *(_QWORD *)(v8 + 56) = v13;
    *(_QWORD *)(v8 + 64) = &protocol witness table for ResetItem;
    *(_QWORD *)(v8 + 32) = v14;
    result = Group.init(title:footer:_:)(0, 0, 0, 0, v8);
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1004039B4()
{
  unint64_t result;

  result = qword_100BDFDF0;
  if (!qword_100BDFDF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentEnvironment, &type metadata for ContentEnvironment);
    atomic_store(result, (unint64_t *)&qword_100BDFDF0);
  }
  return result;
}

unint64_t sub_1004039F0()
{
  unint64_t result;

  result = qword_100BDFF78;
  if (!qword_100BDFF78)
  {
    result = swift_getWitnessTable(&unk_1009A7F74, &_s15PerformanceTestV24StubWeatherDataConditionON);
    atomic_store(result, (unint64_t *)&qword_100BDFF78);
  }
  return result;
}

uint64_t sub_100403A2C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100075EB0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for Item<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100403A6C()
{
  char v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1000C5E60();
  sub_1000B4930();
  __chkstk_darwin(v3);
  sub_1000BBB38();
  __chkstk_darwin(v4);
  sub_1000C0E4C();
  __chkstk_darwin(v5);
  sub_10009C838();
  if (qword_100BC22C0 != -1)
    swift_once(&qword_100BC22C0, sub_10015A550);
  sub_1000C294C();
  if (v2 == 1)
  {
    v6 = *(_QWORD *)(v1 + 8);
    sub_1000CCD2C();
    sub_1000BAC3C();
    if (v6 != 1)
    {
      v7 = sub_1000DB9AC();
      sub_1000DDA68();
      if ((v7 & 1) != 0)
        goto LABEL_9;
      sub_100403C6C();
      sub_1000C3A44();
      if ((v0 & 1) == 0)
        sub_100403B64();
    }
  }
  else
  {
    sub_1000CCD2C();
    sub_1000BAC3C();
  }
  sub_1000DDA68();
LABEL_9:
  sub_10004A2A0();
}

void sub_100403B64()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1000C5E60();
  sub_1000B4930();
  __chkstk_darwin(v2);
  sub_1000BBB38();
  __chkstk_darwin(v3);
  sub_1000C0E4C();
  __chkstk_darwin(v4);
  sub_10009C838();
  if (qword_100BC22C0 != -1)
    swift_once(&qword_100BC22C0, sub_10015A550);
  sub_1000C294C();
  if (v1 == 1)
  {
    v5 = *(_QWORD *)(v0 + 8);
    sub_1000CCD2C();
    sub_1000BAC3C();
    if (v5 != 1)
    {
      v6 = sub_1000DB9AC();
      sub_1000DDA68();
      if ((v6 & 1) != 0)
        goto LABEL_9;
      sub_100403C6C();
      sub_1000C3A44();
    }
  }
  else
  {
    sub_1000CCD2C();
    sub_1000BAC3C();
  }
  sub_1000DDA68();
LABEL_9:
  sub_10004A2A0();
}

void sub_100403C6C()
{
  uint64_t *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1000C5E60();
  sub_1000B4930();
  __chkstk_darwin(v3);
  sub_1000BBB38();
  __chkstk_darwin(v4);
  sub_1000C0E4C();
  __chkstk_darwin(v5);
  sub_10009C838();
  if (qword_100BC22C0 != -1)
    swift_once(&qword_100BC22C0, sub_10015A550);
  sub_1000C294C();
  if (v2 == 1)
  {
    v6 = *(_QWORD *)(v1 + 8);
    sub_1000CCD2C();
    sub_1000BAC3C();
    if (v6 != 1)
    {
      v7 = sub_1000DB9AC();
      sub_1000DDA68();
      if ((v7 & 1) != 0)
        goto LABEL_9;
      sub_100403D5C(*v0);
      sub_1000C3A44();
    }
  }
  else
  {
    sub_1000CCD2C();
    sub_1000BAC3C();
  }
  sub_1000DDA68();
LABEL_9:
  sub_10004A2A0();
}

BOOL sub_100403D5C(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_100403D6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for LoggingEventProcessorFormat(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1000BA294(&qword_100BE00E0);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10097DA20;
  type metadata accessor for LoggingEventProcessor(0);
  *v5 = 11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LoggingEventProcessorFormat.json(_:), v2);
  *(_QWORD *)(v7 + 32) = LoggingEventProcessor.__allocating_init(logFormat:)(v5);
  *(_QWORD *)(v7 + 40) = &protocol witness table for LoggingEventProcessor;
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = type metadata accessor for Client(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v12 = result;
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = sub_1000BA294(&qword_100BD1418);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v16 = result;
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = type metadata accessor for UploadBatchEventConfig(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (result)
  {
    v20 = result;
    type metadata accessor for UploadBatchEventProcessor(0);
    *(_QWORD *)(v7 + 48) = UploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)(v12, v16, 0, v20);
    *(_QWORD *)(v7 + 56) = &protocol witness table for UploadBatchEventProcessor;
    return v7;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100403F2C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a2[3];
  v4 = a2[4];
  sub_1000DB418(a2, v3);
  v5 = type metadata accessor for SessionEventsAndDataCoordinator(0);
  v6 = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v6)
  {
    v7 = v6;
    v13 = v6;
    v8 = sub_100051B90(&qword_100BD64F0, type metadata accessor for SessionEventsAndDataCoordinator, (uint64_t)&protocol conformance descriptor for SessionEventsAndDataCoordinator);
    URLHandlerManager.add<A>(processor:)(&v13, v5, v8);
    swift_release(v7);
    v9 = a2[3];
    v10 = a2[4];
    sub_1000DB418(a2, v9);
    v11 = dispatch thunk of ResolverType.resolve<A>(_:name:)(v5, 0xD000000000000011, 0x80000001009F7050, v5, v9, v10);
    if (v11)
    {
      v12 = v11;
      v13 = v11;
      URLHandlerManager.add<A>(processor:)(&v13, v5, v8);
      swift_release(v12);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100404054()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100404078()
{
  uint64_t v0;

  return sub_100403D6C((_QWORD *)(v0 + 16));
}

double sub_100404080()
{
  return sub_100404264(6);
}

double sub_100404088()
{
  return sub_100404264(5);
}

double sub_100404090()
{
  return sub_100404264(7);
}

double sub_100404098()
{
  return sub_1004040B0(&enum case for UnitConfiguration.Temperature.celsius(_:));
}

double sub_1004040A4()
{
  return sub_1004040B0(&enum case for UnitConfiguration.Temperature.fahrenheit(_:));
}

double sub_1004040B0(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  double result;
  _OWORD v18[2];
  uint64_t v19;

  v4 = type metadata accessor for ConfiguredUnit(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100079FBC();
  v6 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(uint64_t))(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v11 = *a1;
  v12 = type metadata accessor for UnitConfiguration.Temperature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v2, v11, v12);
  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v2, enum case for ConfiguredUnit.temperature(_:), v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  v13 = type metadata accessor for ConfiguredUnitsAction(0);
  swift_storeEnumTagMultiPayload(v8, v13, 0);
  v14 = type metadata accessor for EnvironmentAction(0);
  swift_storeEnumTagMultiPayload(v8, v14, 10);
  v15 = *(void (**)(uint64_t, uint64_t, __n128))(v5 + 8);
  v16 = swift_retain();
  v15(v2, v4, v16);
  swift_storeEnumTagMultiPayload(v8, v6, 2);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_1000A5EBC((uint64_t)v8, (uint64_t)v18, v10);
  sub_100159C94((uint64_t)v18);
  sub_1000A0AA4((uint64_t)v8);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

double sub_100404254()
{
  return sub_100404264(10);
}

double sub_10040425C()
{
  return sub_100404264(9);
}

double sub_100404264(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  double result;
  _OWORD v10[2];
  uint64_t v11;

  v4 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v4);
  sub_100079FBC();
  v6 = *(uint64_t (**)(uint64_t))(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = type metadata accessor for ListViewAction(0);
  swift_storeEnumTagMultiPayload(v2, v7, a1);
  v8 = type metadata accessor for ViewAction(0);
  swift_storeEnumTagMultiPayload(v2, v8, 0);
  swift_storeEnumTagMultiPayload(v2, v4, 6);
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  swift_retain();
  sub_1000A5EBC(v2, (uint64_t)v10, v6);
  sub_100159C94((uint64_t)v10);
  sub_1000A0AA4(v2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ListMenuInteractor()
{
  return objc_opt_self(_TtC7Weather18ListMenuInteractor);
}

double sub_100404364()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 80) & 1) == 0)
    return *(double *)(v0 + 72);
  *(_QWORD *)(v0 + 72) = 0x4014000000000000;
  *(_BYTE *)(v0 + 80) = 0;
  return 5.0;
}

double sub_100404388()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return *(double *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0x406E000000000000;
  *(_BYTE *)(v0 + 24) = 0;
  return 240.0;
}

double sub_1004043AC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 136) & 1) == 0)
    return *(double *)(v0 + 128);
  *(_QWORD *)(v0 + 128) = 0x4010000000000000;
  *(_BYTE *)(v0 + 136) = 0;
  return 4.0;
}

double sub_1004043D0()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 424) & 1) == 0)
    return *(double *)(v0 + 416);
  *(_QWORD *)(v0 + 416) = 0x4020000000000000;
  *(_BYTE *)(v0 + 424) = 0;
  return 8.0;
}

double sub_1004043F8()
{
  _BYTE *v0;

  if ((v0[8] & 1) == 0)
    return *(double *)v0;
  *(_QWORD *)v0 = 0x4073000000000000;
  v0[8] = 0;
  return 304.0;
}

void sub_10040441C()
{
  uint64_t v0;
  id v1;

  if (!*(_QWORD *)(v0 + 64))
  {
    v1 = objc_msgSend((id)objc_opt_self(UIColor), "quaternaryLabelColor");
    *(_QWORD *)(v0 + 64) = Color.init(_:)(v1);
    swift_retain();
  }
  swift_retain();
  sub_10004A298();
}

void sub_10040447C()
{
  uint64_t v0;
  double v1;
  double v2;
  _BYTE v3[24];

  if ((*(_BYTE *)(v0 + 464) & 1) != 0)
  {
    swift_beginAccess(&unk_100BDE048, v3, 1, 0);
    v1 = sub_1003BD550() + 6.0;
    v2 = sub_1003BD550();
    *(_QWORD *)(v0 + 432) = 0x4024000000000000;
    *(double *)(v0 + 440) = v1;
    *(_QWORD *)(v0 + 448) = 0;
    *(double *)(v0 + 456) = v2 + 6.0;
    *(_BYTE *)(v0 + 464) = 0;
  }
}

double sub_10040451C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;

  if ((a1 & 1) != 0)
  {
    v3 = sub_1000BA294(&qword_100BCB968);
    a1 = sub_1000989D4(v3);
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(a1 + 16) = xmmword_10097DA20;
    *(_OWORD *)(a1 + 32) = _Q1;
  }
  sub_1000BAC48(a1);
  result = v12;
  *(_QWORD *)a2 = v10;
  *((_QWORD *)a2 + 1) = v11;
  a2[2] = v12;
  *((_QWORD *)a2 + 3) = v13;
  *((_QWORD *)a2 + 4) = v14;
  return result;
}

uint64_t sub_10040459C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for Font.TextStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 48);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v7 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Font.TextStyle.caption(_:), v1);
    static Font.Weight.semibold.getter(v7);
    v6 = static Font.system(_:weight:)(v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v8 = *(_QWORD *)(v0 + 48);
    swift_retain(v6);
    swift_release(v8);
    v5 = 0;
    *(_QWORD *)(v0 + 48) = v6;
  }
  swift_retain(v5);
  return v6;
}

void sub_100404670()
{
  uint64_t v0;
  id v1;

  if (!*(_QWORD *)(v0 + 56))
  {
    v1 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    *(_QWORD *)(v0 + 56) = Color.init(_:)(v1);
    swift_retain();
  }
  swift_retain();
  sub_10004A298();
}

void sub_1004046D0()
{
  uint64_t v0;
  id v1;

  if (!*(_QWORD *)(v0 + 88))
  {
    v1 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    *(_QWORD *)(v0 + 88) = Color.init(_:)(v1);
    swift_retain();
  }
  swift_retain();
  sub_10004A298();
}

double sub_100404730()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 104) & 1) == 0)
    return *(double *)(v0 + 96);
  *(_QWORD *)(v0 + 96) = 0x4028000000000000;
  *(_BYTE *)(v0 + 104) = 0;
  return 12.0;
}

double sub_100404754()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 120) & 1) == 0)
    return *(double *)(v0 + 112);
  *(_QWORD *)(v0 + 112) = 0x405E400000000000;
  *(_BYTE *)(v0 + 120) = 0;
  return 121.0;
}

void sub_100404780()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];

  if (!v0[21])
  {
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v6, 0, 0, 1.0, 10.0, 0.0);
    sub_1000C297C();
    v0[18] = v4;
    v0[19] = v5;
    v0[20] = v2;
    v0[21] = v1;
    v0[22] = v3;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1000C3A74();
  sub_1000BC158();
}

void sub_100404818()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  if (!v0[33])
  {
    v5 = sub_1000BA294(&qword_100BCB968);
    v6 = sub_1000989D4(v5);
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(v6 + 16) = xmmword_10097DA20;
    *(_OWORD *)(v6 + 32) = _Q1;
    sub_1000BAC48(v6);
    sub_1000C297C();
    v0[30] = v4;
    v0[31] = v12;
    v0[32] = v2;
    v0[33] = v1;
    v0[34] = v3;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1000C3A74();
  sub_1000BC158();
}

double sub_1004048B8()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 328) & 1) == 0)
    return *(double *)(v0 + 320);
  *(_QWORD *)(v0 + 320) = 0x3FE0000000000000;
  *(_BYTE *)(v0 + 328) = 0;
  return 0.5;
}

double sub_1004048E0()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 344) & 1) == 0)
    return *(double *)(v0 + 336);
  *(_QWORD *)(v0 + 336) = 0x4000000000000000;
  *(_BYTE *)(v0 + 344) = 0;
  return 2.0;
}

double sub_100404908()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 360) & 1) == 0)
    return *(double *)(v0 + 352);
  *(_QWORD *)(v0 + 352) = 0x4008000000000000;
  *(_BYTE *)(v0 + 360) = 0;
  return 3.0;
}

double sub_100404930()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 376) & 1) == 0)
    return *(double *)(v0 + 368);
  *(_QWORD *)(v0 + 368) = 0x4018000000000000;
  *(_BYTE *)(v0 + 376) = 0;
  return 6.0;
}

double sub_100404958()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 392) & 1) == 0)
    return *(double *)(v0 + 384);
  *(_QWORD *)(v0 + 384) = 0xC039000000000000;
  *(_BYTE *)(v0 + 392) = 0;
  return -25.0;
}

uint64_t sub_100404980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 408);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 408);
  }
  else
  {
    v3 = static Color.black.getter();
    v2 = Color.opacity(_:)(0.2);
    swift_release(v3);
    *(_QWORD *)(v0 + 408) = v2;
    swift_retain(v2);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

double sub_1004049E8()
{
  double result;

  qword_100CAE968 = 0;
  byte_100CAE970 = 1;
  qword_100CAE978 = 0;
  byte_100CAE980 = 1;
  xmmword_100CAE998 = 0u;
  unk_100CAE9A8 = 0u;
  xmmword_100CAE988 = xmmword_10099DC10;
  byte_100CAE9B8 = 1;
  qword_100CAE9C0 = 0;
  unk_100CAE9C8 = 0;
  byte_100CAE9D0 = 1;
  qword_100CAE9D8 = 0;
  byte_100CAE9E0 = 1;
  qword_100CAE9E8 = 0;
  byte_100CAE9F0 = 1;
  xmmword_100CAEA08 = 0u;
  unk_100CAEA18 = 0u;
  xmmword_100CAE9F8 = 0u;
  byte_100CAEA28 = 1;
  qword_100CAEA30 = 0;
  byte_100CAEA38 = 1;
  qword_100CAEA40 = 0;
  unk_100CAEA48 = 0;
  byte_100CAEA50 = 1;
  qword_100CAEAA8 = 0;
  xmmword_100CAEA88 = 0u;
  unk_100CAEA98 = 0u;
  xmmword_100CAEA68 = 0u;
  unk_100CAEA78 = 0u;
  xmmword_100CAEA58 = 0u;
  byte_100CAEAB0 = 1;
  qword_100CAEAB8 = 0;
  byte_100CAEAC0 = 1;
  qword_100CAEAC8 = 0;
  byte_100CAEAD0 = 1;
  qword_100CAEAD8 = 0;
  byte_100CAEAE0 = 1;
  qword_100CAEAE8 = 0;
  byte_100CAEAF0 = 1;
  qword_100CAEAF8 = 0;
  unk_100CAEB00 = 0;
  qword_100CAEB08 = 0;
  byte_100CAEB10 = 1;
  xmmword_100CAEB18 = 0u;
  unk_100CAEB28 = 0u;
  byte_100CAEB38 = 1;
  result = 6.0;
  xmmword_100CAEB40 = xmmword_10099DC20;
  qword_100CAEB50 = 0x4018000000000000;
  return result;
}

uint64_t storeEnumTagSinglePayload for WireframeInterestLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100404B80 + 4 * byte_10099DC45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100404BB4 + 4 * byte_10099DC40[v4]))();
}

uint64_t sub_100404BB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100404BBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100404BC4);
  return result;
}

uint64_t sub_100404BD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100404BD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100404BDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100404BE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_100404BF4()
{
  unint64_t result;

  result = qword_100BE01A0[0];
  if (!qword_100BE01A0[0])
  {
    result = swift_getWitnessTable(&unk_10099DCA8, &type metadata for WireframeInterestLevel);
    atomic_store(result, qword_100BE01A0);
  }
  return result;
}

uint64_t sub_100404C30(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[4]);
  return swift_release(a1[6]);
}

uint64_t sub_100404C68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  v5 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v6 = a2[6];
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *sub_100404CD4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
  v8 = a2[4];
  v9 = a1[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v9);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  v10 = a1[6];
  v11 = a2[6];
  a1[6] = v11;
  swift_retain(v11);
  swift_release(v10);
  return a1;
}

uint64_t sub_100404D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v6);
  return a1;
}

uint64_t type metadata accessor for PresentationWithoutInitialAnimation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PresentationWithoutInitialAnimation);
}

uint64_t sub_100404DF8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB3FEC, 1);
}

uint64_t sub_100404E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, __n128);
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a6;
  v25 = a8;
  v26 = a4;
  v13 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for _ValueTransactionModifier(0, v16, v17);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v25 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a5);
  _ValueTransactionModifier.init(value:transform:)(v15, a2, a3, a5, a7);
  View.modifier<A>(_:)(v21, v26, v18, v27);
  v22 = *(uint64_t (**)(char *, uint64_t, __n128))(v19 + 8);
  v23 = swift_retain(a3);
  return v22(v21, v18, v23);
}

uint64_t sub_100404F4C()
{
  uint64_t v0;
  unsigned __int8 v2;

  v0 = sub_1000BA294((uint64_t *)&unk_100BD4270);
  Binding.wrappedValue.getter(v0);
  return v2;
}

uint64_t sub_100404F98()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1000BA294((uint64_t *)&unk_100BD4270);
  Binding.projectedValue.getter(v0);
  return v2;
}

uint64_t sub_100404FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __int128 v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[16];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = v3;
  v45 = a1;
  v52 = a3;
  WitnessTable = swift_getWitnessTable(&unk_10099DD20, a2);
  v7 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v7);
  v10 = *(_QWORD *)(a2 + 24);
  v62 = v7;
  v63 = v8;
  v64 = v9;
  v65 = v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v62, &opaque type descriptor for <<opaque return type of View.transaction<A>(_:body:)>>, 0);
  v48 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v44 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v13 = (char *)&v43 - v12;
  v14 = sub_100075EB0(&qword_100BE0228);
  v15 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v46 = v15;
  v50 = v16;
  __chkstk_darwin(v15);
  v43 = (uint64_t)&v43 - v17;
  v19 = type metadata accessor for ModifiedContent(0, v18, &type metadata for _AppearanceActionModifier);
  v51 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v47 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v49 = (char *)&v43 - v22;
  v23 = swift_allocObject(&unk_100B729D8, 88, 7);
  *(_QWORD *)(v23 + 16) = v8;
  *(_QWORD *)(v23 + 24) = v10;
  v24 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v23 + 48) = v24;
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v4 + 32);
  *(_QWORD *)(v23 + 80) = *(_QWORD *)(v4 + 48);
  v54 = v8;
  v55 = v10;
  v56 = v4;
  sub_100405808((uint64_t *)v4);
  v25 = swift_checkMetadataState(0, v7);
  View.transaction<A>(_:body:)(sub_1004057F0, v23, sub_1004057FC, v53, v25, v8, v9, v10);
  swift_release(v23);
  v61 = sub_100404F4C() & 1;
  v26 = swift_allocObject(&unk_100B72A00, 88, 7);
  *(_QWORD *)(v26 + 16) = v8;
  *(_QWORD *)(v26 + 24) = v10;
  v27 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v26 + 48) = v27;
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v4 + 32);
  *(_QWORD *)(v26 + 80) = *(_QWORD *)(v4 + 48);
  sub_100405808((uint64_t *)v4);
  v62 = v25;
  v63 = v8;
  v64 = v9;
  v65 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.transaction<A>(_:body:)>>, 1);
  v29 = v43;
  v30 = v44;
  sub_100404E2C((uint64_t)&v61, (uint64_t)sub_10040585C, v26, v44, (uint64_t)&type metadata for Bool, OpaqueTypeConformance2, (uint64_t)&protocol witness table for Bool, v43);
  v31 = swift_release(v26);
  (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v13, v30, v31);
  v32 = swift_allocObject(&unk_100B72A28, 88, 7);
  *(_QWORD *)(v32 + 16) = v8;
  *(_QWORD *)(v32 + 24) = v10;
  v33 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v32 + 48) = v33;
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v4 + 32);
  *(_QWORD *)(v32 + 80) = *(_QWORD *)(v4 + 48);
  sub_100405808((uint64_t *)v4);
  v34 = sub_100405878();
  v59 = OpaqueTypeConformance2;
  v60 = v34;
  v35 = v46;
  v36 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
  v37 = v47;
  View.onAppear(perform:)(sub_10040586C, v32, v35, v36);
  v38 = swift_release(v32);
  (*(void (**)(uint64_t, uint64_t, __n128))(v50 + 8))(v29, v35, v38);
  v57 = v36;
  v58 = &protocol witness table for _AppearanceActionModifier;
  v39 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v40 = (uint64_t)v49;
  sub_1000B2074(v37, v19, v39);
  v41 = *(void (**)(char *, uint64_t))(v51 + 8);
  v41(v37, v19);
  sub_1000B1100(v40, v19, v52);
  return ((uint64_t (*)(uint64_t, uint64_t))v41)(v40, v19);
}

uint64_t sub_10040540C(_QWORD *a1)
{
  char v1;
  uint64_t v2;
  uint64_t v4;

  if ((Transaction.disablesAnimations.getter(*a1) & 1) != 0)
  {
    v1 = 1;
  }
  else
  {
    v2 = sub_1000BA294(&qword_100BC5608);
    State.wrappedValue.getter(&v4, v2);
    v1 = v4 ^ 1;
  }
  return Transaction.disablesAnimations.setter(v1 & 1);
}

uint64_t sub_10040547C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v37;
  uint64_t v38;

  v38 = a5;
  v9 = type metadata accessor for PresentationWithoutInitialAnimation(255, a3, a4, a4);
  WitnessTable = swift_getWitnessTable(&unk_10099DD20, v9);
  v11 = type metadata accessor for _ViewModifier_Content(255, v9, WitnessTable);
  v12 = type metadata accessor for PlaceholderContentView(0, v11);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  v37 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v35 - v20;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t))(a2 + 24);
  v35 = *(_QWORD *)(a2 + 32);
  v36 = v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16))(v14, a1, v12, v19);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for PlaceholderContentView<A>, v12);
  v26 = AnyView.init<A>(_:)(v14, v12, v24, v25);
  v27 = sub_100404F98();
  v29 = v28;
  LOBYTE(v12) = v30;
  v31 = swift_allocObject(&unk_100B72A50, 88, 7);
  *(_QWORD *)(v31 + 16) = a3;
  *(_QWORD *)(v31 + 24) = a4;
  v32 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v31 + 48) = v32;
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(v31 + 80) = *(_QWORD *)(a2 + 48);
  sub_100405808((uint64_t *)a2);
  v36(v26, v27, v29, v12 & 1, sub_1004058C0, v31);
  swift_release(v26);
  swift_release(v29);
  swift_release(v31);
  swift_release(v27);
  sub_1000B2074(v17, a3, a4);
  v33 = *(void (**)(char *, uint64_t))(v37 + 8);
  v33(v17, a3);
  sub_1000B1100((uint64_t)v21, a3, v38);
  return ((uint64_t (*)(char *, uint64_t))v33)(v21, a3);
}

uint64_t sub_1004056AC(uint64_t a1)
{
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 40);
  v3 = 1;
  v1 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(&v3, v1);
}

_QWORD *sub_1004056F8(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(a2 + 17) & 1) != 0)
  {
    v2 = *result;
    if ((Transaction.disablesAnimations.getter(*result) & 1) != 0 || (v3 = Transaction.animation.getter(v2)) == 0)
    {
      v4 = 1;
    }
    else
    {
      swift_release(v3);
      v4 = 0;
    }
    return (_QWORD *)Transaction.disablesAnimations.setter(v4);
  }
  return result;
}

uint64_t sub_10040574C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  char v7;
  __int128 v8;

  type metadata accessor for PresentationWithoutInitialAnimation(0, a2, a3, a4);
  result = sub_100404F4C();
  if ((result & 1) == 0)
  {
    v8 = *(_OWORD *)(a1 + 40);
    v7 = 1;
    v6 = sub_1000BA294(&qword_100BC5608);
    return State.wrappedValue.setter(&v7, v6);
  }
  return result;
}

uint64_t sub_1004057AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100404FE8(a1, a2, a3);
}

uint64_t sub_1004057F0(_QWORD *a1)
{
  return sub_10040540C(a1);
}

uint64_t sub_1004057FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10040547C(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t *sub_100405808(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[4];
  swift_retain(a1[6]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *sub_10040585C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1004056F8(a1, v1 + 32);
}

uint64_t sub_10040586C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10040574C(v4 + 32, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

unint64_t sub_100405878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0230;
  if (!qword_100BE0230)
  {
    v1 = sub_100075EB0(&qword_100BE0228);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ValueTransactionModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0230);
  }
  return result;
}

uint64_t sub_1004058C0()
{
  uint64_t v0;

  return sub_1004056AC(v0 + 32);
}

uint64_t sub_1004058CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *a1;
  v4 = a1[1];
  v6 = type metadata accessor for PresentationWithoutInitialAnimation(255, *a1, v4, a4);
  WitnessTable = swift_getWitnessTable(&unk_10099DD20, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  v16 = v8;
  v17 = v5;
  v18 = v9;
  v19 = v4;
  swift_getOpaqueTypeMetadata2(255, &v16, &opaque type descriptor for <<opaque return type of View.transaction<A>(_:body:)>>, 0);
  v10 = sub_100075EB0(&qword_100BE0228);
  v12 = sub_1000BAC64(v10, v11, v10);
  v14 = sub_1000BAC64(v12, v13, (uint64_t)&type metadata for _AppearanceActionModifier);
  v16 = v8;
  v17 = v5;
  v18 = v9;
  v19 = v4;
  swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.transaction<A>(_:body:)>>, 1);
  sub_100405878();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
}

_QWORD *sub_1004059FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v12);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(a3 + 36);
    v8 = (uint64_t)a2 + v7;
    v9 = a1 + v7;
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v10 = type metadata accessor for MoonPhase.Hemisphere(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t sub_100405AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for MoonPhase.Hemisphere(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100405B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 36);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v9 = type metadata accessor for MoonPhase.Hemisphere(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v10(v8, v7, v9);
  return a1;
}

uint64_t sub_100405BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_100405C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100405CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_100405D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100405D68);
}

uint64_t sub_100405D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MoonPhase.Hemisphere(0);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_100405DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100405DE8);
}

uint64_t sub_100405DE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MoonPhase.Hemisphere(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CalendarDayViewModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE0290, (uint64_t)&nominal type descriptor for CalendarDayViewModel);
}

uint64_t sub_100405E68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_10099DD98;
  v4[1] = &unk_10099DD98;
  v4[2] = &unk_10099DDB0;
  v4[3] = &unk_10099DDB0;
  v4[4] = &unk_10099DDC8;
  result = type metadata accessor for MoonPhase.Hemisphere(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100405EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v23;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (!v7 && (sub_100099264(v4, v5, *(_QWORD *)a2, v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = v8 == v10 && v9 == v11;
  if (!v12 && (sub_100099264(v8, v9, v10, v11) & 1) == 0
    || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)
    || *(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33))
  {
    return 0;
  }
  v13 = *(unsigned __int8 *)(a1 + 34);
  v14 = *(unsigned __int8 *)(a2 + 34);
  if ((_DWORD)v13 == 8)
  {
    if ((_DWORD)v14 == 8)
      goto LABEL_24;
    return 0;
  }
  if ((_DWORD)v14 == 8)
    return 0;
  v15 = MoonPhase.rawValue.getter(v13);
  v17 = v16;
  v18 = MoonPhase.rawValue.getter(v14);
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n(v17, 2);
  }
  else
  {
    v21 = sub_100099264(v15, v17, v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return 0;
  }
LABEL_24:
  v23 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  return static MoonPhase.Hemisphere.== infix(_:_:)(a1 + v23, a2 + v23);
}

uint64_t sub_100406030(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;

  v4 = type metadata accessor for CalendarDayViewModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v8 = *(int *)(v4 + 36);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for MoonPhase.Hemisphere(0);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v6);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11, v13);
  }
  return a1;
}

uint64_t sub_100406100(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v3 = type metadata accessor for MoonPhase.Hemisphere(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_100406154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v6 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for MoonPhase.Hemisphere(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v11 = swift_bridgeObjectRetain(v5);
  v10(v7, v8, v9, v11);
  return a1;
}

uint64_t sub_1004061F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v6 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1004062B0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v5 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100406328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v6 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1004063C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004063CC);
}

uint64_t sub_1004063CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000C2998();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_1004063F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100406400);
}

uint64_t sub_100406400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000C2998();
  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t type metadata accessor for CalendarDayView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE0330, (uint64_t)&nominal type descriptor for CalendarDayView);
}

uint64_t sub_100406440(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CalendarDayViewModel(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004064A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4070, 1);
}

uint64_t sub_1004064B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = v0;
  v27 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  sub_100098728();
  v5 = v4 - v3;
  sub_1000BA294(&qword_100BE0368);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = sub_1000BA294(&qword_100BE0370);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = sub_1000BA294(&qword_100BE0378);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v20);
  *(_QWORD *)(v9 + 8) = 0x4000000000000000;
  *(_BYTE *)(v9 + 16) = 0;
  v21 = sub_1000BA294(&qword_100BE0380);
  sub_1004066B4(v1, (uint64_t *)(v9 + *(int *)(v21 + 44)));
  sub_10007EC08(v9, v14, &qword_100BE0368);
  *(_WORD *)(v14 + *(int *)(v10 + 36)) = 1;
  v22 = sub_100021A68(v9, &qword_100BE0368);
  LOBYTE(v9) = static Edge.Set.all.getter(v22);
  sub_10007EC08(v14, v19, &qword_100BE0370);
  v23 = v19 + *(int *)(v15 + 36);
  *(_BYTE *)v23 = v9;
  *(_OWORD *)(v23 + 8) = xmmword_10099DD70;
  *(_OWORD *)(v23 + 24) = xmmword_10099DD70;
  *(_BYTE *)(v23 + 40) = 0;
  v24 = sub_100021A68(v14, &qword_100BE0370);
  static AccessibilityChildBehavior.combine.getter(v24);
  v25 = sub_100372A3C(&qword_100BE0388, &qword_100BE0378, (void (*)(void))sub_100406A80);
  View.accessibilityElement(children:)(v5, v15, v25);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v27);
  return sub_100021A68(v19, &qword_100BE0378);
}

double sub_1004066B4@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  double result;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;

  v72 = a2;
  v3 = type metadata accessor for MoonPhase.Hemisphere(0);
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  __chkstk_darwin(v3);
  v67 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for CalendarDayMoonPhase(0);
  __chkstk_darwin(v66);
  v71 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v70 = (char *)&v64 - v7;
  v8 = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[1];
  v73 = *a1;
  v74 = v12;
  v13 = sub_100114EF8();
  swift_bridgeObjectRetain(v12);
  v65 = v13;
  v14 = Text.init<A>(_:)(&v73, &type metadata for String, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Font.TextStyle.caption2(_:), v8);
  if (*((_BYTE *)a1 + 32) == 1)
    static Font.Weight.semibold.getter(v21);
  else
    static Font.Weight.medium.getter(v21);
  v22 = static Font.system(_:weight:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v23 = v18 & 1;
  v24 = Text.font(_:)(v22, v14, v16, v18 & 1, v20);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_release(v22);
  sub_1000D31B4(v14, v16, v23);
  v32 = swift_bridgeObjectRelease();
  if (*((_BYTE *)a1 + 32) == 1)
  {
    v33 = static Color.cyan.getter(v31);
  }
  else if (*((_BYTE *)a1 + 33) == 1)
  {
    v33 = static Color.secondary.getter(v32);
  }
  else
  {
    v33 = static Color.primary.getter(v32);
  }
  v34 = v33;
  v35 = v28 & 1;
  v36 = Text.foregroundColor(_:)(v33, v24, v26, v28 & 1, v30);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  swift_release(v34);
  LOBYTE(v34) = v40 & 1;
  sub_1000D31B4(v24, v26, v35);
  swift_bridgeObjectRelease();
  v43 = a1[3];
  v73 = a1[2];
  v74 = v43;
  v44 = swift_bridgeObjectRetain(v43);
  v45 = Text.accessibilityLabel<A>(_:)(&v73, v36, v38, v40 & 1, v42, &type metadata for String, v65, v44);
  v47 = v46;
  v49 = v48;
  v51 = v50 & 1;
  sub_1000D31B4(v36, v38, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = *((unsigned __int8 *)a1 + 34);
  v53 = type metadata accessor for CalendarDayViewModel(0);
  v55 = v67;
  v54 = v68;
  v56 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, (uint64_t)a1 + *(int *)(v53 + 36), v69);
  if (v52 == 8)
    v57 = 0;
  else
    v57 = v52;
  v58 = (uint64_t)v70;
  *v70 = v57;
  *(_BYTE *)(v58 + 1) = v52 != 8;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v58 + *(int *)(v66 + 24), v55, v56);
  v59 = v71;
  sub_100406AE8(v58, v71);
  v60 = v72;
  *v72 = v45;
  v60[1] = v47;
  *((_BYTE *)v60 + 16) = v51;
  v60[3] = v49;
  v61 = sub_1000BA294(&qword_100BE03A0);
  sub_100406AE8(v59, (uint64_t)v60 + *(int *)(v61 + 48));
  v62 = (char *)v60 + *(int *)(v61 + 64);
  *(_QWORD *)v62 = 0;
  v62[8] = 0;
  sub_1000D55D4(v45, v47, v51);
  swift_bridgeObjectRetain(v49);
  sub_100406B2C(v58);
  sub_100406B2C(v59);
  sub_1000D31B4(v45, v47, v51);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100406A80()
{
  return sub_100372A3C(&qword_100BE0390, &qword_100BE0370, (void (*)(void))sub_100406AA4);
}

unint64_t sub_100406AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0398;
  if (!qword_100BE0398)
  {
    v1 = sub_100075EB0(&qword_100BE0368);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0398);
  }
  return result;
}

uint64_t sub_100406AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CalendarDayMoonPhase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100406B2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CalendarDayMoonPhase(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100406B68()
{
  _QWORD v1[2];

  v1[0] = sub_100075EB0(&qword_100BE0378);
  v1[1] = sub_100372A3C(&qword_100BE0388, &qword_100BE0378, (void (*)(void))sub_100406A80);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_100406BD8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[176];

  v3 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v3, v18);
  *(_OWORD *)(inited + 16) = xmmword_10098B610;
  *(_QWORD *)(inited + 32) = 0x726564616568;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v5 = v1[4];
  v6 = (void *)v1[5];
  sub_1000C29A8(v1[1]);
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x65746F6F46706F74;
  *(_QWORD *)(inited + 88) = 0xE900000000000072;
  v8 = v1[14];
  v9 = (void *)v1[15];
  sub_1000C29A8(v1[11]);
  v10._countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  *(_QWORD *)(inited + 96) = v16;
  *(_QWORD *)(inited + 104) = v17;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  strcpy((char *)(inited + 128), "bottomFooter");
  *(_BYTE *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  v12 = v1[22];
  v11 = (void *)v1[23];
  sub_1000C29A8(v1[19]);
  v13._countAndFlagsBits = v12;
  v13._object = v11;
  String.append(_:)(v13);
  *(_QWORD *)(inited + 168) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v16;
  *(_QWORD *)(inited + 152) = v17;
  v14 = Dictionary.init(dictionaryLiteral:)(inited);
  a1[3] = sub_1000BA294(&qword_100BE03B0);
  a1[4] = sub_100406DE8();
  sub_10005F164(a1);
  return ShortDescription.init(name:_:)(0xD00000000000001ALL, 0x800000010099DED0, v14, &type metadata for AveragesComponentViewModel);
}

uint64_t sub_100406D80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100406E2C();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_100406DAC()
{
  unint64_t result;

  result = qword_100BE03A8;
  if (!qword_100BE03A8)
  {
    result = swift_getWitnessTable(&unk_10099DE70, &type metadata for AveragesComponentViewModel);
    atomic_store(result, (unint64_t *)&qword_100BE03A8);
  }
  return result;
}

unint64_t sub_100406DE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE03B8;
  if (!qword_100BE03B8)
  {
    v1 = sub_100075EB0(&qword_100BE03B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE03B8);
  }
  return result;
}

unint64_t sub_100406E2C()
{
  unint64_t result;

  result = qword_100BE03C0;
  if (!qword_100BE03C0)
  {
    result = swift_getWitnessTable(&unk_10099DE98, &type metadata for AveragesComponentViewModel);
    atomic_store(result, (unint64_t *)&qword_100BE03C0);
  }
  return result;
}

double destroy for AveragesComponentViewModel(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(a1[17]);
  swift_bridgeObjectRelease(a1[19]);
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(a1[23]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[25]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for AveragesComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v16 = a2[21];
  a1[20] = a2[20];
  a1[21] = v16;
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  v14 = a2[25];
  a1[24] = a2[24];
  a1[25] = v14;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v14);
  return a1;
}

_QWORD *assignWithCopy for AveragesComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[10] = a2[10];
  v14 = a2[11];
  v15 = a1[11];
  a1[11] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  a1[12] = a2[12];
  v16 = a2[13];
  v17 = a1[13];
  a1[13] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  a1[14] = a2[14];
  v18 = a2[15];
  v19 = a1[15];
  a1[15] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  a1[16] = a2[16];
  v20 = a2[17];
  v21 = a1[17];
  a1[17] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  a1[18] = a2[18];
  v22 = a2[19];
  v23 = a1[19];
  a1[19] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  a1[20] = a2[20];
  v24 = a2[21];
  v25 = a1[21];
  a1[21] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  a1[22] = a2[22];
  v26 = a2[23];
  v27 = a1[23];
  a1[23] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  a1[24] = a2[24];
  v28 = a2[25];
  v29 = a1[25];
  a1[25] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  return a1;
}

void *initializeWithTake for AveragesComponentViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD0uLL);
}

_QWORD *assignWithTake for AveragesComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[11];
  v15 = a1[11];
  a1[10] = a2[10];
  a1[11] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[13];
  v17 = a1[13];
  a1[12] = a2[12];
  a1[13] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = a2[15];
  v19 = a1[15];
  a1[14] = a2[14];
  a1[15] = v18;
  swift_bridgeObjectRelease(v19);
  v20 = a2[17];
  v21 = a1[17];
  a1[16] = a2[16];
  a1[17] = v20;
  swift_bridgeObjectRelease(v21);
  v22 = a2[19];
  v23 = a1[19];
  a1[18] = a2[18];
  a1[19] = v22;
  swift_bridgeObjectRelease(v23);
  v24 = a2[21];
  v25 = a1[21];
  a1[20] = a2[20];
  a1[21] = v24;
  swift_bridgeObjectRelease(v25);
  v26 = a2[23];
  v27 = a1[23];
  a1[22] = a2[22];
  a1[23] = v26;
  swift_bridgeObjectRelease(v27);
  v28 = a2[25];
  v29 = a1[25];
  a1[24] = a2[24];
  a1[25] = v28;
  swift_bridgeObjectRelease(v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for AveragesComponentViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 208))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AveragesComponentViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesComponentViewModel()
{
  return &type metadata for AveragesComponentViewModel;
}

void sub_100407394()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *v0;
  v2 = type metadata accessor for AppConfiguration(0);
  v3 = firstly<A>(closure:)(sub_1004076D8, v0, v2);
  v5 = (id)zalgo.getter(v3);
  v4 = Promise.then<A, B>(on:disposeOn:closure:)(v5, v0, sub_100407470, 0, &type metadata for () + 1, v1);
  swift_release(v4);
  swift_release(v3);

}

uint64_t sub_100407420(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[5];
  v2 = a1[6];
  sub_1000DB418(a1 + 2, v1);
  return AppConfigurationManagerType.fetchAppConfig()(v1, v2);
}

uint64_t sub_100407470(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for PrivacyConfiguration(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1004075EC();
  v8 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = AppConfiguration.privacy.getter(result);
    v10 = PrivacyConfiguration.reportWeatherEventSubmissionDrivenIdentifierResetCount.getter(v9);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v8 >= v10)
    {
      v11 = a2[10];
      v12 = a2[11];
      sub_1000DB418(a2 + 7, v11);
      dispatch thunk of IdentityRotationManagerType.rotateReportWeatherIdentifier()(v11, v12);
      v8 = 0;
    }
    return sub_100407560(v8);
  }
  return result;
}

uint64_t sub_100407560(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = *v1;
  if (qword_100BC2700 != -1)
    swift_once(&qword_100BC2700, sub_100824C30);
  v4 = qword_100CAF568;
  v7 = a1;
  v5 = sub_1004076F0(&qword_100BE0478, (uint64_t)&unk_10099DFB0);
  return Updatable.save<A>(setting:value:)(v4, &v7, v3, v5);
}

uint64_t sub_1004075EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  if (qword_100BC2700 != -1)
    swift_once(&qword_100BC2700, sub_100824C30);
  v2 = qword_100CAF568;
  v3 = sub_1004076F0(&qword_100BE0470, (uint64_t)&unk_10099DF70);
  Configurable.setting<A>(_:)(v2, v1, v3);
  return v5;
}

uint64_t type metadata accessor for ReportWeatherSubmissionTracker()
{
  return objc_opt_self(_TtC7Weather30ReportWeatherSubmissionTracker);
}

void sub_100407694()
{
  sub_100407394();
}

uint64_t sub_1004076B4()
{
  return sub_1004076F0(&qword_100BE0470, (uint64_t)&unk_10099DF70);
}

uint64_t sub_1004076D8()
{
  _QWORD *v0;

  return sub_100407420(v0);
}

uint64_t sub_1004076F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ReportWeatherSubmissionTracker();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10040772C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  v1 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  sub_10003BC44(v1);

  v2 = type metadata accessor for OSSignpostID(0);
  sub_10003BC44(v2);
  sub_10004A298();
}

uint64_t sub_10040779C()
{
  uint64_t v0;

  sub_10040772C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004077C0()
{
  return type metadata accessor for WeatherDataDebounceMiddleware(0);
}

uint64_t sub_1004077C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void _s7Weather13LocaleMonitorC29applicationDidEnterBackgroundyyF_0()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:name:object:", v0, NSCurrentLocaleDidChangeNotification, 0);

}

uint64_t LocaleMonitor.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_100021AA4(v0 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastLocale, &qword_100BC3340);
  sub_100021AA4(v0 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastTemperatureUnit, &qword_100BD7148);
  return v0;
}

uint64_t LocaleMonitor.__deallocating_deinit()
{
  uint64_t v0;

  LocaleMonitor.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004078EC()
{
  return type metadata accessor for LocaleMonitor(0);
}

uint64_t type metadata accessor for ElevatedAqiNewsContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ElevatedAqiNewsContentView);
}

uint64_t sub_100407900(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB41DC, 1);
}

uint64_t sub_100407934@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[4];
  _BYTE v66[488];
  _QWORD v67[62];

  v62 = a4;
  v55 = a3;
  v60 = a7;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = a5;
  v67[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v67[7] = a5;
  v12 = sub_1000BBB64(255, 8, (uint64_t)v67);
  v53 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v53);
  v14 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v57 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v59 = v15;
  __chkstk_darwin(v16);
  v58 = (char *)&v48 - v17;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = type metadata accessor for Optional(255, a5);
  v67[3] = a5;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v18 = sub_1000BBB64(255, 7, (uint64_t)v67);
  v51 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v18);
  v54 = type metadata accessor for Group(0, v51);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_1000986FC();
  v20 = v19;
  __chkstk_darwin(v21);
  v61 = (char *)&v48 - v22;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v23 = &qword_100C02640;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v23 = &qword_100C02A10;
      goto LABEL_11;
    }
    v23 = &qword_100C02828;
    goto LABEL_11;
  }
  if (v11)
    v23 = &qword_100C02270;
  else
    v23 = &qword_100C02458;
LABEL_11:
  memcpy(v67, v23, 0x1E8uLL);
  v24 = memcpy(v66, v67, sizeof(v66));
  v50 = &v48;
  __chkstk_darwin(v24);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  v48 = a1;
  *(&v48 - 6) = a1;
  *((_BYTE *)&v48 - 40) = v10;
  HIDWORD(v49) = v11 >> 8;
  *((_BYTE *)&v48 - 39) = BYTE1(v11);
  v25 = v62;
  *(&v48 - 4) = v55;
  *(&v48 - 3) = v25;
  *(&v48 - 2) = (uint64_t)v66;
  v26 = v51;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v51);
  Group<A>.init(content:)(sub_1004085C4, &v48 - 10, v26, WitnessTable);
  v65[3] = WitnessTable;
  v28 = v54;
  v50 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v54);
  sub_1000B2074(v20, v28, v50);
  v29 = v52;
  v51 = *(uint64_t (**)(_QWORD, _QWORD))(v52 + 8);
  v30 = v51(v20, v28);
  __chkstk_darwin(v30);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  *(&v48 - 6) = v48;
  *((_BYTE *)&v48 - 40) = v10;
  *((_BYTE *)&v48 - 39) = BYTE4(v49);
  v31 = v62;
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v31;
  *(&v48 - 2) = (uint64_t)v66;
  v33 = v53;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v53);
  v35 = v59;
  Group<A>.init(content:)(sub_100262688, &v48 - 10, v33, v34);
  v65[2] = v34;
  v36 = v56;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v56);
  v38 = (uint64_t)v58;
  sub_1000B2074(v35, v36, v37);
  v39 = v57;
  sub_1000C3530(v35);
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
  v41 = v61;
  v40(v20, v61, v28);
  v65[0] = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v35, v38, v36);
  v65[1] = v35;
  v64[0] = v28;
  v64[1] = v36;
  v63[0] = v50;
  v63[1] = v37;
  sub_10052800C((uint64_t)v65, 2, (uint64_t)v64, (uint64_t)v63, v42, v43, v44, v45, v48, v49, (uint64_t)v50, (uint64_t)v51, v52, v53, v54, v55, v56, v57);
  sub_1000C3530(v38);
  v46 = v51;
  v51(v41, v28);
  sub_1000C3530(v35);
  return v46(v20, v28);
}

uint64_t sub_100407D58@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[7];
  _QWORD v110[7];
  _QWORD v111[7];
  _BYTE v112[24];
  _BYTE v113[40];
  _QWORD v114[4];
  char v115;

  v103 = a5;
  v106 = a2;
  v90 = a6;
  v10 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v10);
  v85 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for Optional(0, a4);
  v95 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v107 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v82 - v14;
  v86 = (void (*)(uint64_t, uint64_t))type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v86);
  v83 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v82 - v17;
  v19 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v20);
  v89 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v88 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  v99 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  v97 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  v98 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  v96 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  v93 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  v92 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  v105 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  v101 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v82 - v44;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality, (uint64_t)v18);
  a2(v18, *a3, a3[1], a3[2], a3[3]);
  sub_100080DF4((uint64_t)v18);
  v91 = v45;
  v46 = v103;
  sub_1000B2074(v42, a4, v103);
  v87 = v19;
  v47 = *(void (**)(char *, uint64_t))(v19 + 8);
  v48 = v85;
  v47(v42, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_newsArticle, (uint64_t)v18);
  v106(v18, a3[33], a3[34], a3[35], a3[36]);
  v84 = v18;
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v42, a4, v46);
  v104 = v42;
  v47(v42, a4);
  v94 = a1;
  v49 = a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map, v112, 0, 0);
  sub_1001A1D04(v49, v48);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, (uint64_t)v86) == 1)
  {
    sub_1001A1D4C(v48);
    v50 = 1;
    v51 = a3;
  }
  else
  {
    v52 = v83;
    sub_1001A1D8C(v48, v83);
    sub_1001A1DD0((uint64_t)(a3 + 24), (uint64_t)v113);
    sub_1001A1DD0((uint64_t)v113, (uint64_t)v114);
    v51 = a3;
    if (v115 == 1)
    {
      sub_100080DF4(v52);
      v50 = 1;
    }
    else
    {
      v53 = v105;
      v106((char *)v52, v114[0], v114[1], v114[2], v114[3]);
      sub_100080DF4(v52);
      v54 = (uint64_t)v104;
      sub_1000B2074(v53, a4, v103);
      v47(v53, a4);
      sub_1000B1100(v54, a4, v107);
      v47((char *)v54, a4);
      v50 = 0;
    }
  }
  v55 = v107;
  _s7Weather24LocationCompositionStateOwst_0(v107, v50, 1, a4);
  v56 = v103;
  sub_100158984(v55, a4, v102);
  v86 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
  v86(v55, v100);
  v57 = v94;
  v58 = (uint64_t)v84;
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v84);
  v59 = v105;
  v106((char *)v58, v51[16], v51[17], v51[18], v51[19]);
  sub_100080DF4(v58);
  sub_1000B2074(v59, a4, v56);
  v47(v59, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v58);
  v60 = v92;
  v61 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))v106;
  v106((char *)v58, v51[8], v51[9], v51[10], v51[11]);
  sub_100080DF4(v58);
  v62 = v103;
  sub_1000B2074(v60, a4, v103);
  v47(v60, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v58);
  v63 = v93;
  v61(v58, v51[49], v51[50], v51[51], v51[52]);
  sub_100080DF4(v58);
  sub_1000B2074(v63, a4, v62);
  v47(v63, a4);
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v58);
  v64 = v96;
  v61(v58, v51[45], v51[46], v51[47], v51[48]);
  sub_100080DF4(v58);
  v65 = v62;
  sub_1000B2074(v64, a4, v62);
  v47(v64, a4);
  v66 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v66(v64, v91, a4);
  v111[0] = v64;
  v67 = v98;
  v66(v98, v101, a4);
  v111[1] = v67;
  v68 = v107;
  v69 = v100;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v107, v102, v100);
  v111[2] = v68;
  v70 = v97;
  v66(v97, v104, a4);
  v111[3] = v70;
  v71 = v99;
  v66(v99, v105, a4);
  v111[4] = v71;
  v72 = (uint64_t)v88;
  v73 = v92;
  v66(v88, v92, a4);
  v111[5] = v72;
  v74 = (uint64_t)v89;
  v75 = v93;
  v66(v89, v93, a4);
  v111[6] = v74;
  v110[0] = a4;
  v110[1] = a4;
  v110[2] = v69;
  v110[3] = a4;
  v110[4] = a4;
  v110[5] = a4;
  v110[6] = a4;
  v109[0] = v65;
  v109[1] = v65;
  v108 = v65;
  v109[2] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v69);
  v109[3] = v65;
  v109[4] = v65;
  v109[5] = v65;
  v109[6] = v65;
  sub_10052800C((uint64_t)v111, 7, (uint64_t)v110, (uint64_t)v109, v76, v77, v78, v79, v82, v83, (uint64_t)v84, v85, (uint64_t)v86, v87, (uint64_t)v88, (uint64_t)v89, v90, (uint64_t)v91);
  v47(v75, a4);
  v47(v73, a4);
  v47(v105, a4);
  v47(v104, a4);
  v80 = v86;
  v86(v102, v69);
  v47(v101, a4);
  v47(v91, a4);
  v47((char *)v74, a4);
  v47((char *)v72, a4);
  v47(v99, a4);
  v47(v97, a4);
  v80(v107, v69);
  v47(v98, a4);
  return ((uint64_t (*)(char *, uint64_t))v47)(v96, a4);
}

uint64_t sub_100408598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_100407934(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1004085C4()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100407D58);
}

_QWORD *sub_1004085D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v26 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v26;
    v12 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v12;
    v25 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v25;
    v24 = a2[17];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = v24;
    v23 = a2[19];
    *(_QWORD *)(a1 + 144) = a2[18];
    *(_QWORD *)(a1 + 152) = v23;
    v13 = a2[21];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = v13;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    v21 = a2[24];
    v22 = v13;
    v14 = *(int *)(a3 + 68);
    v27 = (uint64_t)a2 + v14;
    v28 = a1 + v14;
    *(_QWORD *)(a1 + 192) = v21;
    v15 = type metadata accessor for WindComponentCompassViewModel(0);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v21);
    v20(v28, v27, v15);
    v16 = *(int *)(a3 + 72);
    v17 = *(uint64_t *)((char *)a2 + v16);
    *(_QWORD *)((char *)v4 + v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  return v4;
}

double sub_100408770(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(a1[17]);
  swift_bridgeObjectRelease(a1[19]);
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(a1[24]);
  v4 = (char *)a1 + *(int *)(a2 + 68);
  v5 = type metadata accessor for WindComponentCompassViewModel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 72))).n128_u64[0];
  return result;
}

uint64_t sub_100408824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  v23 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v23;
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  v22 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v22;
  v21 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v21;
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  v19 = *(_QWORD *)(a2 + 192);
  v20 = v12;
  v13 = *(int *)(a3 + 68);
  v24 = a2 + v13;
  v25 = a1 + v13;
  *(_QWORD *)(a1 + 192) = v19;
  v14 = type metadata accessor for WindComponentCompassViewModel(0);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v19);
  v18(v25, v24, v14);
  v15 = *(int *)(a3 + 72);
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

_QWORD *sub_100408998(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[8] = a2[8];
  v14 = a2[9];
  v15 = a1[9];
  a1[9] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  a1[10] = a2[10];
  v16 = a2[11];
  v17 = a1[11];
  a1[11] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  a1[12] = a2[12];
  v18 = a2[13];
  v19 = a1[13];
  a1[13] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  a1[14] = a2[14];
  v20 = a2[15];
  v21 = a1[15];
  a1[15] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  a1[16] = a2[16];
  v22 = a2[17];
  v23 = a1[17];
  a1[17] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  a1[18] = a2[18];
  v24 = a2[19];
  v25 = a1[19];
  a1[19] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  a1[20] = a2[20];
  v26 = a2[21];
  v27 = a1[21];
  a1[21] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  a1[22] = a2[22];
  a1[23] = a2[23];
  v28 = a2[24];
  v29 = a1[24];
  a1[24] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  v30 = *(int *)(a3 + 68);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for WindComponentCompassViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = *(int *)(a3 + 72);
  v35 = *(_QWORD *)((char *)a2 + v34);
  v36 = *(_QWORD *)((char *)a1 + v34);
  *(_QWORD *)((char *)a1 + v34) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  return a1;
}

uint64_t sub_100408BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v11 = *(int *)(a3 + 68);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  v14 = type metadata accessor for WindComponentCompassViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + *(int *)(a3 + 72)) = *(_QWORD *)(a2 + *(int *)(a3 + 72));
  return a1;
}

_QWORD *sub_100408C50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[11];
  v17 = a1[11];
  a1[10] = a2[10];
  a1[11] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = a2[13];
  v19 = a1[13];
  a1[12] = a2[12];
  a1[13] = v18;
  swift_bridgeObjectRelease(v19);
  v20 = a2[15];
  v21 = a1[15];
  a1[14] = a2[14];
  a1[15] = v20;
  swift_bridgeObjectRelease(v21);
  v22 = a2[17];
  v23 = a1[17];
  a1[16] = a2[16];
  a1[17] = v22;
  swift_bridgeObjectRelease(v23);
  v24 = a2[19];
  v25 = a1[19];
  a1[18] = a2[18];
  a1[19] = v24;
  swift_bridgeObjectRelease(v25);
  v26 = a2[21];
  v27 = a1[21];
  a1[20] = a2[20];
  a1[21] = v26;
  swift_bridgeObjectRelease(v27);
  a1[22] = a2[22];
  v28 = a2[24];
  v29 = a1[24];
  a1[23] = a2[23];
  a1[24] = v28;
  swift_bridgeObjectRelease(v29);
  v30 = *(int *)(a3 + 68);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for WindComponentCompassViewModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  v34 = *(int *)(a3 + 72);
  v35 = *(_QWORD *)((char *)a1 + v34);
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  swift_bridgeObjectRelease(v35);
  return a1;
}

uint64_t sub_100408D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100408D9C);
}

void sub_100408D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_100079F70();
  }
  else
  {
    v6 = type metadata accessor for WindComponentCompassViewModel(0);
    _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 68), a2, v6);
  }
}

uint64_t sub_100408E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100408E14);
}

uint64_t sub_100408E14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for WindComponentCompassViewModel(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 68), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WindComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE07C0;
  if (!qword_100BE07C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WindComponentViewModel);
  return result;
}

uint64_t sub_100408EB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = &unk_10099E178;
  v4[1] = &unk_10099E178;
  v4[2] = &unk_10099E178;
  v4[3] = &unk_10099E178;
  v4[4] = &unk_10099E178;
  v4[5] = &unk_10099E178;
  v4[6] = &unk_10099E178;
  v4[7] = &unk_10099E178;
  v4[8] = &unk_10099E178;
  v4[9] = &unk_10099E178;
  v4[10] = &unk_10099E178;
  v4[11] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[12] = &unk_10099E178;
  result = type metadata accessor for WindComponentCompassViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[13] = *(_QWORD *)(result - 8) + 64;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 15, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_100408F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  BOOL v13;

  v12 = a1 == a5 && a2 == a6;
  if ((v12 || (sub_100099264(a1, a2, a5, a6) & 1) != 0) && (a3 == a7 ? (v13 = a4 == a8) : (v13 = 0), !v13))
    _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7);
  else
    sub_100079F70();
}

void sub_100408FE0(uint64_t *a1, uint64_t *a2)
{
  sub_100408F5C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

_QWORD *initializeWithCopy for WindComponentRowViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithTake for WindComponentRowViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

ValueMetadata *type metadata accessor for WindComponentRowViewModel()
{
  return &type metadata for WindComponentRowViewModel;
}

double sub_10040908C()
{
  uint64_t v0;
  double result;
  _BYTE v2[24];

  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
    return *(double *)(v0 + 32);
  swift_beginAccess(&unk_100BDE048, v2, 1, 0);
  result = sub_1003BD550();
  *(double *)(v0 + 32) = result;
  *(_BYTE *)(v0 + 40) = 0;
  return result;
}

void sub_1004090E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Font.TextStyle(0);
  sub_100098CE0();
  __chkstk_darwin(v3);
  sub_100099864();
  if (!*(_QWORD *)(v0 + 8))
  {
    v4 = sub_1000BC184(0, enum case for Font.TextStyle.subheadline(_:));
    static Font.Weight.semibold.getter(v4);
    static Font.system(_:weight:)(v1);
    sub_1000BAC84();
    v5 = *(_QWORD *)(v0 + 8);
    swift_retain();
    swift_release(v5);
    *(_QWORD *)(v0 + 8) = v2;
  }
  swift_retain();
  sub_10004A2A0();
}

void sub_100409178()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Font.TextStyle(0);
  sub_100098CE0();
  __chkstk_darwin(v3);
  sub_100099864();
  if (!*v0)
  {
    v4 = sub_1000BC184(0, enum case for Font.TextStyle.title3(_:));
    static Font.Weight.semibold.getter(v4);
    static Font.system(_:weight:)(v1);
    sub_1000BAC84();
    v5 = *v0;
    swift_retain();
    swift_release(v5);
    *v0 = v2;
  }
  swift_retain();
  sub_10004A2A0();
}

double sub_100409208()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 192) & 1) == 0)
    return *(double *)(v0 + 184);
  *(_QWORD *)(v0 + 184) = 0x4000000000000000;
  *(_BYTE *)(v0 + 192) = 0;
  return 2.0;
}

double sub_10040922C()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 96) & 1) == 0)
    return *(double *)(v0 + 64);
  result = sub_1004092CC();
  *(double *)(v0 + 64) = result;
  *(_OWORD *)(v0 + 72) = xmmword_10099E210;
  *(_QWORD *)(v0 + 88) = 0x4033000000000000;
  *(_BYTE *)(v0 + 96) = 0;
  return result;
}

double sub_10040927C()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 176) & 1) == 0)
    return *(double *)(v0 + 144);
  result = sub_1004092CC();
  *(double *)(v0 + 144) = result;
  *(_OWORD *)(v0 + 152) = xmmword_10099E210;
  *(_QWORD *)(v0 + 168) = 0x4033000000000000;
  *(_BYTE *)(v0 + 176) = 0;
  return result;
}

double sub_1004092CC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
    return *(double *)(v0 + 48);
  *(_QWORD *)(v0 + 48) = 0x4033000000000000;
  *(_BYTE *)(v0 + 56) = 0;
  return 19.0;
}

double sub_1004092F0()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 232) & 1) == 0)
    return *(double *)(v0 + 200);
  *(_OWORD *)(v0 + 200) = xmmword_10099E220;
  *(_OWORD *)(v0 + 216) = xmmword_10099E220;
  *(_BYTE *)(v0 + 232) = 0;
  return 13.0;
}

double sub_10040932C()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 248) & 1) == 0)
    return *(double *)(v0 + 240);
  *(_QWORD *)(v0 + 240) = 0x4020000000000000;
  *(_BYTE *)(v0 + 248) = 0;
  return 8.0;
}

double sub_100409350()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 264) & 1) == 0)
    return *(double *)(v0 + 256);
  *(_QWORD *)(v0 + 256) = 0x4020000000000000;
  *(_BYTE *)(v0 + 264) = 0;
  return 8.0;
}

uint64_t sub_100409378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 272);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 272);
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
    v2 = Color.init(_:)(v3);
    *(_QWORD *)(v0 + 272) = v2;
    swift_retain(v2);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_1004093DC@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  _BYTE v17[9];
  uint64_t v18;

  v10 = sub_1000BA294(&qword_100BC4718);
  sub_10003D2DC(&qword_100BC4720, &qword_100BC4718);
  *a5 = ObservedObject.init(wrappedValue:)(a1, v10, v11);
  a5[1] = v12;
  sub_10003C800(a2, (uint64_t)(a5 + 2));
  v13 = sub_1000DCE80();
  sub_1000787D4(a3, (uint64_t)a5 + *(int *)(v13 + 24), (uint64_t *)&unk_100C09CB0);
  v14 = (char *)a5 + *(int *)(v13 + 28);
  v17[0] = a4;
  result = State.init(wrappedValue:)(v17, &type metadata for Bool);
  v16 = v18;
  *v14 = v17[1];
  *((_QWORD *)v14 + 1) = v16;
  return result;
}

uint64_t sub_1004094C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
    v11 = swift_retain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v14) == 1)
    {
      v16 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v16))
      {
        v17 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        v18 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
        v18 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v16);
      }
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v18);
    v20 = *(int *)(a3 + 28);
    v21 = a1 + v20;
    v22 = (uint64_t)a2 + v20;
    *(_BYTE *)v21 = *(_BYTE *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  }
  swift_retain();
  return a1;
}

double sub_100409650(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 16));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release(*v4);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1004096FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  v11 = swift_retain();
  v10(a1 + 16, v7, v9, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v14) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      v18 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v18 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v16);
    }
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v18);
  v19 = *(int *)(a3 + 28);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  swift_retain();
  return a1;
}

_QWORD *sub_100409860(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v6);
  sub_100094D04(a1 + 2, a2 + 2);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_100021A14((uint64_t)a1 + v7, (uint64_t *)&unk_100C09CD0);
    v10 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v9) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11))
      {
        v12 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
        v13 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v11);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v13);
  }
  v14 = *(int *)(a3 + 28);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *v16;
  v17 = *((_QWORD *)v15 + 1);
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release(v17);
  return a1;
}

uint64_t sub_1004099DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100409B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 16));
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_100021A14(a1 + v9, (uint64_t *)&unk_100C09CD0);
    v12 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      v13 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13))
      {
        v14 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  swift_release(v18);
  return a1;
}

uint64_t sub_100409C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100409C80);
}

uint64_t sub_100409C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100409CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100409D04);
}

uint64_t sub_100409D04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100409D74(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB427C, 1);
}

void sub_100409D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD98E0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = static Alignment.center.getter(v8);
  v7[1] = v9;
  v10 = sub_1000BA294(&qword_100BE09E0);
  sub_100409EB0(v1, (uint64_t)v7 + *(int *)(v10 + 44));
  v11 = type metadata accessor for AutomationViewInfo(0);
  swift_storeEnumTagMultiPayload(v4, v11, 5);
  swift_storeEnumTagMultiPayload(v4, v2, 0);
  sub_100335384();
  sub_1000215BC((uint64_t)v4, type metadata accessor for AutomationInfo);
  sub_100021A14((uint64_t)v7, &qword_100BD98E0);
}

void sub_100409EB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[12];
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _BYTE v68[272];

  v67 = a2;
  v46 = sub_1000BA294(&qword_100BE09E8);
  __chkstk_darwin(v46);
  v37[10] = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v37[11] = (char *)v37 - v5;
  v43 = sub_1000BA294(&qword_100BE09F0);
  __chkstk_darwin(v43);
  v45 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1000BA294(&qword_100BE09F8);
  __chkstk_darwin(v44);
  v37[6] = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BE0A00);
  __chkstk_darwin(v8);
  v37[4] = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v37[5] = (char *)v37 - v11;
  v63 = type metadata accessor for SearchView(0);
  v37[1] = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v37[2] = v12;
  v37[3] = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1000BA294(&qword_100BE0A08);
  __chkstk_darwin(v55);
  v47 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1000BA294(&qword_100BE0A10);
  __chkstk_darwin(v53);
  v54 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1000BA294(&qword_100BE0A18);
  __chkstk_darwin(v62);
  v56 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1000BA294(&qword_100BE0A20);
  __chkstk_darwin(v52);
  v42 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for LegacySearchResultsView(0);
  __chkstk_darwin(v41);
  v37[8] = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v37[9] = (char *)v37 - v19;
  v38 = sub_1000BA294(&qword_100BE0A28);
  __chkstk_darwin(v38);
  v39 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for SearchResultsView(0);
  __chkstk_darwin(v48);
  v37[7] = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BE0A30);
  __chkstk_darwin(v22);
  v40 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v57 = (char *)v37 - v25;
  v64 = sub_1000BA294(&qword_100BE0A38);
  __chkstk_darwin(v64);
  v66 = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1000BA294(&qword_100BE0A40);
  __chkstk_darwin(v58);
  v60 = (char *)v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1000BA294(&qword_100BE0A48);
  __chkstk_darwin(v49);
  v50 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1000BA294(&qword_100BE0A50);
  __chkstk_darwin(v59);
  v51 = (char *)v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1000BA294(&qword_100BE0A58);
  __chkstk_darwin(v65);
  v61 = (char *)v37 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v31);
  __chkstk_darwin(v32);
  __chkstk_darwin(v33);
  __chkstk_darwin(v34);
  __chkstk_darwin(v35);
  v36 = *(_QWORD *)(a1 + 8);
  swift_retain();
  sub_10017B894((uint64_t)v68);
  swift_release(v36);
  __asm { BR              X10 }
}

void sub_10040A4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  *(_QWORD *)(v6 + 160) = v5;
  *(_QWORD *)(v6 + 168) = v3;
  v10 = v4;
  v11 = v2;
  *(_QWORD *)(v6 + 176) = v1;
  *(_QWORD *)(v6 + 88) = v7;
  sub_10011AA68(a1);
  v12 = type metadata accessor for UserInterfaceSizeClass(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v8, 1, v12) == 1)
  {
    sub_100021A14(v8, &qword_100BC5A68);
    v14 = *(_QWORD *)(v6 + 256);
  }
  else
  {
    v15 = *(_QWORD *)(v12 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v8, v12);
    v17 = enum case for UserInterfaceSizeClass.regular(_:);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v8, v12);
    v14 = *(_QWORD *)(v6 + 256);
    if (v16 == v17)
    {
      v18 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
      v19 = Color.init(_:)(v18);
      goto LABEL_6;
    }
  }
  v19 = static Color.black.getter(v13);
LABEL_6:
  v20 = v19;
  v21 = static SafeAreaRegions.all.getter(v19);
  *(_QWORD *)(v6 + 304) = v21;
  v22 = static Edge.Set.all.getter(v21);
  v23 = v22;
  if ((static Settings.Features.homeAndWorkEnabled.getter(v22) & 1) != 0)
  {
    sub_10003B59C(v9 + 16, v6 + 448);
    v24 = *(_QWORD *)(v6 + 184);
    v25 = *(_QWORD **)(v6 + 56);
    v26 = (_QWORD *)((char *)v25 + *(int *)(v24 + 36));
    *v26 = swift_getKeyPath(&unk_10099E2D8);
    v27 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    swift_storeEnumTagMultiPayload(v26, v27, 0);
    sub_10003C800((__int128 *)(v6 + 448), (uint64_t)v25);
    v28 = *(_QWORD *)(v6 + 176);
    v25[5] = v11;
    v25[6] = v28;
    v29 = *(_QWORD *)(v6 + 168);
    v25[7] = *(_QWORD *)(v6 + 88);
    v25[8] = v29;
    v25[9] = *(_QWORD *)(v6 + 160);
    v25[10] = v10;
    v30 = type metadata accessor for SearchResultsView;
    v31 = *(_QWORD *)(v6 + 104);
    sub_100080C0C((uint64_t)v25, v31, type metadata accessor for SearchResultsView);
    swift_storeEnumTagMultiPayload(v31, *(_QWORD *)(v6 + 96), 0);
    sub_10000F1C8(&qword_100BE0AD8, type metadata accessor for SearchResultsView);
    v33 = v32;
    sub_10000F1C8(&qword_100BE0AE0, type metadata accessor for LegacySearchResultsView);
    _ConditionalContent<>.init(storage:)(v31, v24, *(_QWORD *)(v6 + 120), v33, v34);
    v35 = (uint64_t)v25;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10003B59C(v9 + 16, v6 + 448);
    v36 = *(_QWORD *)(v6 + 120);
    v37 = *(_QWORD **)(v6 + 64);
    v38 = (_QWORD *)((char *)v37 + *(int *)(v36 + 28));
    *v38 = swift_getKeyPath(&unk_10099E2D8);
    v39 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    swift_storeEnumTagMultiPayload(v38, v39, 0);
    sub_10003C800((__int128 *)(v6 + 448), (uint64_t)v37);
    v40 = *(_QWORD *)(v6 + 88);
    v37[5] = *(_QWORD *)(v6 + 176);
    v37[6] = v40;
    v37[7] = *(_QWORD *)(v6 + 168);
    v30 = type metadata accessor for LegacySearchResultsView;
    v41 = *(_QWORD *)(v6 + 72);
    sub_10007802C((uint64_t)v37, v41, type metadata accessor for LegacySearchResultsView);
    v42 = *(_QWORD *)(v6 + 104);
    sub_100080C0C(v41, v42, type metadata accessor for LegacySearchResultsView);
    swift_storeEnumTagMultiPayload(v42, *(_QWORD *)(v6 + 96), 1);
    sub_10000F1C8(&qword_100BE0AD8, type metadata accessor for SearchResultsView);
    v44 = v43;
    sub_10000F1C8(&qword_100BE0AE0, type metadata accessor for LegacySearchResultsView);
    _ConditionalContent<>.init(storage:)(v42, *(_QWORD *)(v6 + 184), v36, v44, v45);
    v35 = v41;
  }
  sub_1000215BC(v35, v30);
  v46 = *(_QWORD *)(v6 + 112);
  sub_100037768(v14, v46, &qword_100BE0A30);
  v47 = *(_QWORD *)(v6 + 128);
  *(_QWORD *)v47 = v20;
  *(_BYTE *)(v47 + 8) = 1;
  *(_QWORD *)(v47 + 16) = *(_QWORD *)(v6 + 304);
  *(_BYTE *)(v47 + 24) = v23;
  v48 = sub_1000BA294(&qword_100BE0AE8);
  sub_100037768(v46, v47 + *(int *)(v48 + 48), &qword_100BE0A30);
  swift_retain_n(v20, 2);
  sub_100021A14(v46, &qword_100BE0A30);
  swift_release(v20);
  v49 = *(_QWORD *)(v6 + 200);
  sub_100037768(v47, v49, &qword_100BE0A20);
  swift_storeEnumTagMultiPayload(v49, *(_QWORD *)(v6 + 192), 1);
  v50 = sub_1000BA294(&qword_100BE0A60);
  v51 = sub_10040B8F8();
  sub_10003D2DC(&qword_100BE0A90, &qword_100BE0A20);
  v52 = *(_QWORD *)(v6 + 208);
  _ConditionalContent<>.init(storage:)(v49, v50, *(_QWORD *)(v6 + 216), v51, v53);
  sub_100021A14(v47, &qword_100BE0A20);
  v54 = *(_QWORD *)(v6 + 280);
  sub_100037768(v52, v54, &qword_100BE0A50);
  swift_storeEnumTagMultiPayload(v54, *(_QWORD *)(v6 + 264), 0);
  v55 = sub_10040B874();
  v56 = sub_10040B9D0();
  v57 = *(_QWORD *)(v6 + 288);
  _ConditionalContent<>.init(storage:)(v54, *(_QWORD *)(v6 + 272), *(_QWORD *)(v6 + 296), v55, v56);
  sub_100021A14(v52, &qword_100BE0A50);
  v58 = *(_QWORD *)(v6 + 328);
  sub_100037768(v57, v58, &qword_100BE0A58);
  swift_storeEnumTagMultiPayload(v58, *(_QWORD *)(v6 + 312), 0);
  v59 = sub_10040B808();
  _ConditionalContent<>.init(storage:)(v58, *(_QWORD *)(v6 + 320), v50, v59, v51);
  sub_100021A14(v57, &qword_100BE0A58);
  sub_100021A14(*(_QWORD *)(v6 + 256), &qword_100BE0A30);
  swift_release(v20);
}

_QWORD *sub_10040B6EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;

  v5 = sub_1000DB418(a1, a1[3]);
  sub_10003B59C(*v5 + 16, a3);
  memcpy((void *)(a3 + 40), a2, 0x60uLL);
  return sub_1001CD8F0(a2);
}

double sub_10040B738(uint64_t a1)
{
  uint64_t v1;
  double result;
  _QWORD v3[4];

  v3[2] = a1;
  v1 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v1, sub_10040BD34, v3, &type metadata for () + 1);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_10040B794(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for SearchView(0) + 28));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(v6, v4);
}

unint64_t sub_10040B808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0A68;
  if (!qword_100BE0A68)
  {
    v1 = sub_100075EB0(&qword_100BE0A58);
    sub_10040B874();
    sub_10040B9D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0A68);
  }
  return result;
}

unint64_t sub_10040B874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0A70;
  if (!qword_100BE0A70)
  {
    v1 = sub_100075EB0(&qword_100BE0A50);
    sub_10040B8F8();
    sub_10003D2DC(&qword_100BE0A90, &qword_100BE0A20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0A70);
  }
  return result;
}

unint64_t sub_10040B8F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0A78;
  if (!qword_100BE0A78)
  {
    v1 = sub_100075EB0(&qword_100BE0A60);
    sub_10040B964();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0A78);
  }
  return result;
}

unint64_t sub_10040B964()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0A80;
  if (!qword_100BE0A80)
  {
    v1 = sub_100075EB0(&qword_100BE0A88);
    sub_1001CDA94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0A80);
  }
  return result;
}

unint64_t sub_10040B9D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0A98;
  if (!qword_100BE0A98)
  {
    v1 = sub_100075EB0(&qword_100BE0A18);
    sub_10003D2DC(&qword_100BE0AA0, &qword_100BE0AA8);
    sub_10040BA54();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0A98);
  }
  return result;
}

unint64_t sub_10040BA54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0AB0;
  if (!qword_100BE0AB0)
  {
    v1 = sub_100075EB0(&qword_100BE0A08);
    sub_10003D2DC(&qword_100BE0AB8, &qword_100BE09F8);
    sub_10040BAD8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0AB0);
  }
  return result;
}

unint64_t sub_10040BAD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0AC0;
  if (!qword_100BE0AC0)
  {
    v1 = sub_100075EB0(&qword_100BE09E8);
    sub_10040BB5C();
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0AC0);
  }
  return result;
}

unint64_t sub_10040BB5C()
{
  unint64_t result;

  result = qword_100BE0AC8;
  if (!qword_100BE0AC8)
  {
    result = swift_getWitnessTable(&unk_10098D338, &type metadata for SearchZeroKeywordView);
    atomic_store(result, (unint64_t *)&qword_100BE0AC8);
  }
  return result;
}

_QWORD *sub_10040BB98(_QWORD *a1)
{
  destroy for UVIDescriptorViewModelFactory(a1);
  return a1;
}

uint64_t sub_10040BBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = sub_1000DCE80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v4 + 16));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_10040BCB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000DCE80() - 8) + 80);
  return sub_10040B738(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_10040BCE8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

_QWORD *sub_10040BD2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10040B6EC(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10040BD34()
{
  uint64_t v0;

  return sub_10040B794(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10040BD50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0AF0;
  if (!qword_100BE0AF0)
  {
    v1 = sub_100075EB0(&qword_100BD98E8);
    sub_10003D2DC(&qword_100BE0AF8, &qword_100BD98E0);
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0AF0);
  }
  return result;
}

uint64_t sub_10040BDEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v8 = sub_1000BA294(&qword_100BCCDA8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v23 - v12;
  v14 = type metadata accessor for Font.Leading(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v23 - v19;
  if ((a3 & 1) != 0)
  {
    sub_10010B0C4(a4, (uint64_t)v13);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v20, enum case for Font.Leading.standard(_:), v14);
      sub_10040BFF4((uint64_t)v13);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    }
    v21 = Font.leading(_:)(v20, a2);
  }
  else
  {
    sub_10010B0C4(a4, (uint64_t)v11);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for Font.Leading.standard(_:), v14);
      sub_10040BFF4((uint64_t)v11);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v11, v14);
    }
    v21 = Font.leading(_:)(v18, a1);
    v20 = v18;
  }
  swift_release(a1);
  swift_release(a2);
  sub_10040BFF4(a4);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  return v21;
}

uint64_t sub_10040BFF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BCCDA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_10040C034(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Font.Leading(0);
    swift_retain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BCCDA8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    *((_BYTE *)v7 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v7;
}

_OWORD *sub_10040C144(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Font.Leading(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_1000BA294(&qword_100BCCDA8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_10040C20C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Font.Leading(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_1000BA294(&qword_100BCCDA8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10040C33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040C348);
}

uint64_t sub_10040C348(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BCCDA8);
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_10040C3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040C3CC);
}

_QWORD *sub_10040C3CC(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BCCDA8);
    return (_QWORD *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

double sub_10040C43C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  double result;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v3 = v2;
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(_BYTE *)(v3 + 40);
  sub_10008D47C(v6, v7);
  sub_100109B54();
  v9 = v8;
  sub_10040C760(v3);
  v10 = 16;
  if ((v9 & 1) == 0)
    v10 = 0;
  v11 = *(_QWORD *)(v3 + v10);
  sub_10008D47C(v6, v7);
  sub_100109B54();
  v13 = v12;
  v14 = sub_10040C760(v3);
  if ((v13 & 1) != 0)
    v15 = v3 + 16;
  else
    v15 = v3;
  v16 = *(_QWORD *)(v15 + 8);
  static Alignment.center.getter(v14);
  _FrameLayout.init(width:height:alignment:)(v11, 0, v16, 0);
  v17 = sub_1000BA294(&qword_100BE0BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a2, a1, v17);
  v18 = (_OWORD *)(a2 + *(int *)(sub_1000BA294(&qword_100BE0BC8) + 36));
  *v18 = v20;
  v18[1] = v21;
  result = *(double *)&v22;
  v18[2] = v22;
  return result;
}

double sub_10040C55C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10040C43C(a1, a2);
}

uint64_t destroy for SizeWithSmallVariantModifier(uint64_t a1)
{
  return sub_1000B15F8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for SizeWithSmallVariantModifier(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  char v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  sub_10008D47C(v4, v5);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for SizeWithSmallVariantModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  sub_10008D47C(v3, v4);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  sub_1000B15F8(v5, v6);
  return a1;
}

uint64_t assignWithTake for SizeWithSmallVariantModifier(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  sub_1000B15F8(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SizeWithSmallVariantModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SizeWithSmallVariantModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SizeWithSmallVariantModifier()
{
  return &type metadata for SizeWithSmallVariantModifier;
}

uint64_t sub_10040C750(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4320, 1);
}

uint64_t sub_10040C760(uint64_t a1)
{
  sub_1000B15F8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

unint64_t sub_10040C790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0BD0;
  if (!qword_100BE0BD0)
  {
    v1 = sub_100075EB0(&qword_100BE0BC8);
    sub_10005F124(&qword_100BE0BD8, &qword_100BE0BC0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0BD0);
  }
  return result;
}

unint64_t sub_10040C814(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned __int8 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int *v83;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v27 + ((v5 + 16) & ~(unint64_t)v5);
    goto LABEL_29;
  }
  v6 = a3;
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_BYTE *)(a2 + 17);
  v10 = *(_BYTE *)(a2 + 16);
  sub_10040CD30(*(_QWORD *)a2, v8, v10, v9);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 17) = v9;
  v11 = *(int *)(v6 + 20);
  v12 = (_QWORD *)(a1 + v11);
  v81 = a2;
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = type metadata accessor for ConditionDetailMapViewModel(0);
  v16 = *(int *)(v15 + 20);
  v17 = (char *)v12 + v16;
  v18 = (char *)v13 + v16;
  v19 = type metadata accessor for Location(0);
  v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
  v21 = swift_bridgeObjectRetain(v14);
  v20(v17, v18, v19, v21);
  v83 = (int *)v15;
  v22 = *(int *)(v15 + 24);
  v23 = (_QWORD *)((char *)v12 + v22);
  v82 = v13;
  v24 = (_QWORD *)((char *)v13 + v22);
  v25 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v25))
  {
    v80 = v6;
    v28 = v24[1];
    *v23 = *v24;
    v23[1] = v28;
    v29 = v25[5];
    v30 = (char *)v23 + v29;
    v31 = (char *)v24 + v29;
    v32 = type metadata accessor for Locale(0);
    swift_bridgeObjectRetain(v28);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
    {
      v33 = sub_1000BA294(&qword_100BC3340);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
    }
    v34 = v25[6];
    v35 = (char *)v23 + v34;
    v36 = (char *)v24 + v34;
    v37 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    v38 = v25[7];
    v39 = (char *)v23 + v38;
    v40 = (char *)v24 + v38;
    v41 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v43 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v39, v40, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v44 = v25[8];
    v45 = (_QWORD *)((char *)v23 + v44);
    v46 = (_QWORD *)((char *)v24 + v44);
    v47 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v46);
    if (EnumCaseMultiPayload == 1)
    {
      v53 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v45, v46, v53);
      v50 = v45;
      v51 = v47;
      v52 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        goto LABEL_17;
      }
      v49 = v46[1];
      *v45 = *v46;
      v45[1] = v49;
      swift_bridgeObjectRetain(v49);
      v50 = v45;
      v51 = v47;
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v50, v51, v52);
LABEL_17:
    v6 = v80;
    v54 = v25[9];
    v55 = (char *)v23 + v54;
    v56 = (char *)v24 + v54;
    v57 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
    {
      v58 = sub_1000BA294(&qword_100BC3350);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v59 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v59))
      {
        v60 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v55, v56, v59);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v59);
      }
      v61 = *(int *)(v57 + 20);
      v62 = &v55[v61];
      v63 = &v56[v61];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v59))
      {
        v64 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v62, v63, v59);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v59);
      }
      v6 = v80;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
    goto LABEL_27;
  }
  v26 = sub_1000BA294(&qword_100BC3460);
  memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_27:
  v65 = v83[7];
  v66 = (_QWORD *)((char *)v12 + v65);
  v67 = (_QWORD *)((char *)v82 + v65);
  v68 = v67[1];
  *v66 = *v67;
  v66[1] = v68;
  v69 = v83[8];
  v70 = (char *)v12 + v69;
  v71 = (char *)v82 + v69;
  v72 = type metadata accessor for WeatherMapOverlayKind(0);
  v73 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v72 - 8) + 16);
  v74 = swift_bridgeObjectRetain(v68);
  v73(v70, v71, v72, v74);
  *((_BYTE *)v12 + v83[9]) = *((_BYTE *)v82 + v83[9]);
  v75 = *(int *)(v6 + 24);
  v76 = a1 + v75;
  v77 = v81 + v75;
  if (!*(_QWORD *)v77)
  {
    *(_OWORD *)v76 = *(_OWORD *)v77;
    return a1;
  }
  v78 = *(_QWORD *)(v77 + 8);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *(_QWORD *)(v76 + 8) = v78;
LABEL_29:
  swift_retain();
  return a1;
}

double sub_10040CD30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  double result;

  if ((a4 & 1) == 0)
    *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

double sub_10040CD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _QWORD *v27;

  sub_10040CFD8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v6 = v4 + v5[5];
  v7 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[6];
  v9 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, (uint64_t)v9))
  {
    swift_bridgeObjectRelease();
    v10 = v8 + v9[5];
    v11 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v8 + v9[6];
    v13 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = v8 + v9[7];
    v15 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
    {
      v16 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
    }
    v17 = v8 + v9[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17);
    if (EnumCaseMultiPayload == 1)
    {
      v19 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    v20 = v8 + v9[9];
    v21 = type metadata accessor for WeatherDataOverrides(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
    {
      v22 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v22))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
      v23 = v20 + *(int *)(v21 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v22))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v23, v22);
    }
  }
  swift_bridgeObjectRelease();
  v24 = v4 + v5[8];
  v25 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  v27 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  if (*v27)
    *(_QWORD *)&result = swift_release(v27[1]).n128_u64[0];
  return result;
}

uint64_t sub_10040CFD8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_10040CFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, __n128);
  __n128 v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 17);
  v9 = *(unsigned __int8 *)(a2 + 16);
  sub_10040CD30(*(_QWORD *)a2, v7, v9, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 17) = v8;
  v10 = *(int *)(a3 + 20);
  v80 = a1;
  v11 = (_QWORD *)(a1 + v10);
  v12 = v4 + v10;
  v13 = *(_QWORD *)(v4 + v10 + 8);
  *v11 = *(_QWORD *)(v4 + v10);
  v11[1] = v13;
  v14 = type metadata accessor for ConditionDetailMapViewModel(0);
  v15 = *(int *)(v14 + 20);
  v16 = (char *)v11 + v15;
  v17 = v12 + v15;
  v18 = type metadata accessor for Location(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
  v20 = swift_bridgeObjectRetain(v13);
  v19(v16, v17, v18, v20);
  v81 = (int *)v14;
  v21 = *(int *)(v14 + 24);
  v22 = (_QWORD *)((char *)v11 + v21);
  v23 = (_QWORD *)(v12 + v21);
  v24 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v24))
  {
    v25 = sub_1000BA294(&qword_100BC3460);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_25;
  }
  v78 = v4;
  v79 = a3;
  v26 = v23[1];
  *v22 = *v23;
  v22[1] = v26;
  v27 = v24[5];
  v28 = (char *)v22 + v27;
  v29 = (char *)v23 + v27;
  v30 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v26);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = sub_1000BA294(&qword_100BC3340);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  v32 = v24[6];
  v33 = (char *)v22 + v32;
  v34 = (char *)v23 + v32;
  v35 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  v36 = v24[7];
  v37 = (char *)v22 + v36;
  v38 = (char *)v23 + v36;
  v39 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    v40 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v41 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v37, v38, v41);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  v42 = v24[8];
  v43 = (_QWORD *)((char *)v22 + v42);
  v44 = (_QWORD *)((char *)v23 + v42);
  v45 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v44);
  if (EnumCaseMultiPayload == 1)
  {
    v51 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v43, v44, v51);
    v48 = v43;
    v49 = v45;
    v50 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      goto LABEL_15;
    }
    v47 = v44[1];
    *v43 = *v44;
    v43[1] = v47;
    swift_bridgeObjectRetain(v47);
    v48 = v43;
    v49 = v45;
    v50 = 0;
  }
  swift_storeEnumTagMultiPayload(v48, v49, v50);
LABEL_15:
  a3 = v79;
  v52 = v24[9];
  v53 = (char *)v22 + v52;
  v54 = (char *)v23 + v52;
  v55 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
  {
    v56 = sub_1000BA294(&qword_100BC3350);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v57 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v57))
    {
      v58 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v53, v54, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v57);
    }
    v59 = *(int *)(v55 + 20);
    v60 = &v53[v59];
    v61 = &v54[v59];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v57))
    {
      v62 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v60, v61, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v57);
    }
    a3 = v79;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
  }
  v4 = v78;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
LABEL_25:
  v63 = v81[7];
  v64 = (_QWORD *)((char *)v11 + v63);
  v65 = (_QWORD *)(v12 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = v81[8];
  v68 = (char *)v11 + v67;
  v69 = v12 + v67;
  v70 = type metadata accessor for WeatherMapOverlayKind(0);
  v71 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v70 - 8) + 16);
  v72 = swift_bridgeObjectRetain(v66);
  v71(v68, v69, v70, v72);
  *((_BYTE *)v11 + v81[9]) = *(_BYTE *)(v12 + v81[9]);
  v73 = *(int *)(a3 + 24);
  v74 = (_QWORD *)(v80 + v73);
  v75 = (_QWORD *)(v4 + v73);
  if (*v75)
  {
    v76 = v75[1];
    *v74 = *v75;
    v74[1] = v76;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v74 = *(_OWORD *)v75;
  }
  return v80;
}

uint64_t sub_10040D4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  int EnumCaseMultiPayload;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  int v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  int *v142;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 17);
  v9 = *(unsigned __int8 *)(a2 + 16);
  sub_10040CD30(*(_QWORD *)a2, v7, v9, v8);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_BYTE *)(a1 + 17);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v13 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 17) = v8;
  sub_10040CFD8(v10, v11, v13, v12);
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)(a1 + v14);
  v16 = v4 + v14;
  *v15 = *(_QWORD *)(v4 + v14);
  v17 = *(_QWORD *)(v4 + v14 + 8);
  v15[1] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease();
  v18 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v19 = v18[5];
  v20 = (char *)v15 + v19;
  v21 = v16 + v19;
  v22 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = v18[6];
  v24 = (_QWORD *)((char *)v15 + v23);
  v25 = (_QWORD *)(v16 + v23);
  v26 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v20) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v26);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, (uint64_t)v26);
  if (!(_DWORD)v20)
  {
    if (v27)
    {
      sub_1000215BC((uint64_t)v24, type metadata accessor for WeatherData);
      goto LABEL_7;
    }
    v140 = a3;
    v142 = v18;
    v138 = v4;
    *v24 = *v25;
    v36 = v25[1];
    v24[1] = v36;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRelease();
    v37 = v26[5];
    v38 = (char *)v24 + v37;
    v39 = (char *)v25 + v37;
    v40 = type metadata accessor for Locale(0);
    v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
    v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
        goto LABEL_29;
      }
    }
    else
    {
      v70 = *(_QWORD *)(v40 - 8);
      if (!v42)
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 24))(v38, v39, v40);
LABEL_29:
        v72 = v26[6];
        v73 = (char *)v24 + v72;
        v74 = (char *)v25 + v72;
        v75 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
        v76 = v26[7];
        v77 = (char *)v24 + v76;
        v78 = (char *)v25 + v76;
        v79 = sub_1000BA294(&qword_100BC3348);
        LODWORD(v73) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v79);
        v80 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79);
        if ((_DWORD)v73)
        {
          if (!v80)
          {
            v81 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v77, v78, v81);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
            goto LABEL_35;
          }
        }
        else
        {
          if (!v80)
          {
            v120 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 24))(v77, v78, v120);
LABEL_35:
            v4 = v138;
            a3 = v140;
            v18 = v142;
            if (a1 == v138)
              goto LABEL_57;
            v83 = v26[8];
            v84 = (_QWORD *)((char *)v24 + v83);
            v85 = (_QWORD *)((char *)v25 + v83);
            sub_1000215BC((uint64_t)v24 + v83, type metadata accessor for WeatherData.WeatherStatisticsState);
            v86 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v85);
            if (EnumCaseMultiPayload == 1)
            {
              v113 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v84, v85, v113);
              v89 = v84;
              v90 = v86;
              v91 = 1;
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
                goto LABEL_56;
              }
              *v84 = *v85;
              v88 = v85[1];
              v84[1] = v88;
              swift_bridgeObjectRetain(v88);
              v89 = v84;
              v90 = v86;
              v91 = 0;
            }
            swift_storeEnumTagMultiPayload(v89, v90, v91);
LABEL_56:
            v4 = v138;
            a3 = v140;
            v18 = v142;
LABEL_57:
            v114 = v26[9];
            v24 = (_QWORD *)((char *)v24 + v114);
            v25 = (_QWORD *)((char *)v25 + v114);
            v115 = type metadata accessor for WeatherDataOverrides(0);
            v116 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v115);
            v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v115);
            if (v116)
            {
              if (!v117)
              {
                v118 = type metadata accessor for Date(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v118))
                {
                  v119 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
                }
                else
                {
                  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v24, v25, v118);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v118);
                }
                v124 = *(int *)(v115 + 20);
                v125 = (char *)v24 + v124;
                v126 = (char *)v25 + v124;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25 + v124, 1, v118))
                {
                  v127 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v125, v126, v118);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v118);
                }
                a3 = v140;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v115);
                v4 = v138;
                goto LABEL_45;
              }
              goto LABEL_63;
            }
            if (v117)
            {
              sub_1000215BC((uint64_t)v24, type metadata accessor for WeatherDataOverrides);
LABEL_63:
              v34 = &qword_100BC3350;
              goto LABEL_8;
            }
            v121 = type metadata accessor for Date(0);
            v122 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v121);
            v123 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v121);
            if (v122)
            {
              if (!v123)
              {
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v24, v25, v121);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v121);
                goto LABEL_77;
              }
            }
            else
            {
              v128 = *(_QWORD *)(v121 - 8);
              if (!v123)
              {
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v128 + 24))(v24, v25, v121);
LABEL_77:
                v130 = *(int *)(v115 + 20);
                v131 = (char *)v24 + v130;
                v132 = (char *)v25 + v130;
                v133 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v121);
                v134 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v121);
                if (v133)
                {
                  if (!v134)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v131, v132, v121);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v121);
LABEL_83:
                    a3 = v140;
                    goto LABEL_45;
                  }
                }
                else
                {
                  v135 = *(_QWORD *)(v121 - 8);
                  if (!v134)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v135 + 24))(v131, v132, v121);
                    goto LABEL_83;
                  }
                  (*(void (**)(char *, uint64_t))(v135 + 8))(v131, v121);
                }
                v136 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
                goto LABEL_83;
              }
              (*(void (**)(_QWORD *, uint64_t))(v128 + 8))(v24, v121);
            }
            v129 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
            goto LABEL_77;
          }
          sub_100021A14((uint64_t)v77, &qword_100BC3348);
        }
        v82 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v40);
    }
    v71 = sub_1000BA294(&qword_100BC3340);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_29;
  }
  if (v27)
  {
LABEL_7:
    v34 = &qword_100BC3460;
LABEL_8:
    v35 = sub_1000BA294(v34);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_45;
  }
  v139 = a3;
  v141 = v18;
  v137 = v4;
  *v24 = *v25;
  v28 = v25[1];
  v24[1] = v28;
  v29 = v26[5];
  v30 = (char *)v24 + v29;
  v31 = (char *)v25 + v29;
  v32 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v28);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    v33 = sub_1000BA294(&qword_100BC3340);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  v43 = v26[6];
  v44 = (char *)v24 + v43;
  v45 = (char *)v25 + v43;
  v46 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = v26[7];
  v48 = (char *)v24 + v47;
  v49 = (char *)v25 + v47;
  v50 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
  {
    v51 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v48, v49, v52);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
  }
  v53 = v26[8];
  v54 = (_QWORD *)((char *)v24 + v53);
  v55 = (_QWORD *)((char *)v25 + v53);
  v56 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v57 = swift_getEnumCaseMultiPayload(v55);
  if (v57 == 1)
  {
    v62 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v54, v55, v62);
    v59 = v54;
    v60 = v56;
    v61 = 1;
  }
  else
  {
    if (v57)
    {
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      goto LABEL_22;
    }
    *v54 = *v55;
    v58 = v55[1];
    v54[1] = v58;
    swift_bridgeObjectRetain(v58);
    v59 = v54;
    v60 = v56;
    v61 = 0;
  }
  swift_storeEnumTagMultiPayload(v59, v60, v61);
LABEL_22:
  v18 = v141;
  v63 = v26[9];
  v64 = (char *)v24 + v63;
  v65 = (char *)v25 + v63;
  v66 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
  {
    v67 = sub_1000BA294(&qword_100BC3350);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v68 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v68))
    {
      v69 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v64, v65, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v68);
    }
    v92 = *(int *)(v66 + 20);
    v93 = &v64[v92];
    v94 = &v65[v92];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v68))
    {
      v95 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v93, v94, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v68);
    }
    v18 = v141;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
  }
  v4 = v137;
  a3 = v139;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, (uint64_t)v26);
LABEL_45:
  v96 = v18[7];
  v97 = (_QWORD *)((char *)v15 + v96);
  v98 = (_QWORD *)(v16 + v96);
  *v97 = *v98;
  v99 = v98[1];
  v97[1] = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease();
  v100 = v18[8];
  v101 = (char *)v15 + v100;
  v102 = v16 + v100;
  v103 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 24))(v101, v102, v103);
  *((_BYTE *)v15 + v18[9]) = *(_BYTE *)(v16 + v18[9]);
  v104 = *(int *)(a3 + 24);
  v105 = (_QWORD *)(a1 + v104);
  v106 = v4 + v104;
  v107 = *(_QWORD *)(a1 + v104);
  v108 = *(_QWORD *)(v4 + v104);
  if (!v107)
  {
    if (v108)
    {
      v111 = *(_QWORD *)(v106 + 8);
      *v105 = v108;
      v105[1] = v111;
      swift_retain();
      return a1;
    }
LABEL_51:
    *(_OWORD *)v105 = *(_OWORD *)v106;
    return a1;
  }
  if (!v108)
  {
    swift_release(v105[1]);
    goto LABEL_51;
  }
  v109 = *(_QWORD *)(v106 + 8);
  v110 = v105[1];
  *v105 = v108;
  v105[1] = v109;
  swift_retain();
  swift_release(v110);
  return a1;
}

uint64_t sub_10040DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  char *__dst;
  uint64_t v60;
  uint64_t v61;

  v3 = a3;
  v4 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = (_OWORD *)(v7 + v14);
  v16 = (_OWORD *)(v8 + v14);
  v17 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    v18 = sub_1000BA294(&qword_100BC3460);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v60 = v3;
    v61 = v4;
    *v15 = *v16;
    v19 = v17[5];
    v20 = (char *)v15 + v19;
    v21 = (char *)v16 + v19;
    v22 = type metadata accessor for Locale(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_1000BA294(&qword_100BC3340);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v24 = v17[6];
    v25 = (char *)v15 + v24;
    v26 = (char *)v16 + v24;
    v27 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    v28 = v17[7];
    v29 = (char *)v15 + v28;
    v30 = (char *)v16 + v28;
    v31 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      v32 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v29, v30, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    v34 = v17[8];
    v35 = (char *)v15 + v34;
    v36 = (char *)v16 + v34;
    v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v36) == 1)
    {
      v38 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
      swift_storeEnumTagMultiPayload(v35, v37, 1);
    }
    else
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    v39 = v17[9];
    v40 = (char *)v15 + v39;
    v41 = (char *)v16 + v39;
    v42 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
    {
      v43 = sub_1000BA294(&qword_100BC3350);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
      {
        v45 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v40, v41, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
      }
      v46 = *(int *)(v42 + 20);
      __dst = &v40[v46];
      v47 = &v41[v46];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v44))
      {
        v48 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(__dst, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(__dst, v47, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v44);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
    }
    v3 = v60;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
    v4 = v61;
  }
  *(_OWORD *)(v7 + v9[7]) = *(_OWORD *)(v8 + v9[7]);
  v49 = v9[8];
  v50 = v7 + v49;
  v51 = v8 + v49;
  v52 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v8 + v9[9]);
  v53 = *(int *)(v3 + 24);
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(v4 + v53);
  v56 = *v55;
  if (*v55)
  {
    v57 = v55[1];
    *v54 = v56;
    v54[1] = v57;
  }
  else
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
  }
  return a1;
}

uint64_t sub_10040E450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v4;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  int *v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  _OWORD *v126;
  uint64_t v127;
  uint64_t v128;
  int *v129;
  int *v130;

  v4 = (_OWORD *)a2;
  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 17);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 17);
  *(_OWORD *)a1 = *v4;
  v11 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v7;
  sub_10040CFD8(v8, v9, v11, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (char *)v4 + v12;
  v15 = *(_QWORD *)((char *)v4 + v12 + 8);
  *v13 = *(_QWORD *)((char *)v4 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  v17 = v16[5];
  v18 = (char *)v13 + v17;
  v19 = &v14[v17];
  v20 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = v16[6];
  v22 = (_QWORD *)((char *)v13 + v21);
  v23 = &v14[v21];
  v24 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v24);
  v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v24);
  if ((_DWORD)v18)
  {
    if (!v25)
    {
      v127 = a3;
      v129 = v16;
      *(_OWORD *)v22 = *(_OWORD *)v23;
      v26 = v24[5];
      v27 = (char *)v22 + v26;
      v28 = &v23[v26];
      v29 = type metadata accessor for Locale(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
      {
        v30 = sub_1000BA294(&qword_100BC3340);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      }
      v40 = v24[6];
      v41 = (char *)v22 + v40;
      v42 = &v23[v40];
      v43 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      v44 = v24[7];
      v45 = (char *)v22 + v44;
      v46 = &v23[v44];
      v47 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
      {
        v48 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v49 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
      }
      v50 = v24[8];
      v51 = (char *)v22 + v50;
      v52 = &v23[v50];
      v53 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v52) == 1)
      {
        v54 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v51, v52, v54);
        swift_storeEnumTagMultiPayload(v51, v53, 1);
      }
      else
      {
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      v55 = v24[9];
      v56 = (char *)v22 + v55;
      v57 = &v23[v55];
      v58 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
      {
        v59 = sub_1000BA294(&qword_100BC3350);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        v126 = v4;
        v60 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v60))
        {
          v61 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v56, v57, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v60);
        }
        v86 = *(int *)(v58 + 20);
        v87 = &v56[v86];
        v88 = &v57[v86];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v60))
        {
          v89 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v87, v88, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v60);
        }
        v4 = v126;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
      }
      a3 = v127;
      v16 = v129;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (v25)
  {
    sub_1000215BC((uint64_t)v22, type metadata accessor for WeatherData);
LABEL_7:
    v31 = &qword_100BC3460;
LABEL_8:
    v32 = sub_1000BA294(v31);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_50;
  }
  v128 = a3;
  v130 = v16;
  v125 = v4;
  v33 = *((_QWORD *)v23 + 1);
  *v22 = *(_QWORD *)v23;
  v22[1] = v33;
  swift_bridgeObjectRelease();
  v34 = v24[5];
  v35 = (char *)v22 + v34;
  v36 = &v23[v34];
  v37 = type metadata accessor for Locale(0);
  v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37);
  v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  v62 = *(_QWORD *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v37);
LABEL_25:
    v63 = sub_1000BA294(&qword_100BC3340);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v35, v36, v37);
LABEL_26:
  v64 = v24[6];
  v65 = (char *)v22 + v64;
  v66 = &v23[v64];
  v67 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  v68 = v24[7];
  v69 = (char *)v22 + v68;
  v70 = &v23[v68];
  v71 = sub_1000BA294(&qword_100BC3348);
  LODWORD(v65) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v71);
  v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71);
  if ((_DWORD)v65)
  {
    if (!v72)
    {
      v73 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v69, v70, v73);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v72)
  {
    sub_100021A14((uint64_t)v69, &qword_100BC3348);
LABEL_31:
    v74 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_32;
  }
  v108 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 40))(v69, v70, v108);
LABEL_32:
  v4 = v125;
  a3 = v128;
  v16 = v130;
  if ((_OWORD *)a1 != v125)
  {
    v75 = v24[8];
    v76 = (char *)v22 + v75;
    v77 = &v23[v75];
    sub_1000215BC((uint64_t)v22 + v75, type metadata accessor for WeatherData.WeatherStatisticsState);
    v78 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v77) == 1)
    {
      v79 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v76, v77, v79);
      swift_storeEnumTagMultiPayload(v76, v78, 1);
    }
    else
    {
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    a3 = v128;
    v16 = v130;
  }
  v80 = v24[9];
  v22 = (_QWORD *)((char *)v22 + v80);
  v23 += v80;
  v81 = type metadata accessor for WeatherDataOverrides(0);
  v82 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v81);
  v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v81);
  if (!v82)
  {
    if (v83)
    {
      sub_1000215BC((uint64_t)v22, type metadata accessor for WeatherDataOverrides);
      goto LABEL_43;
    }
    v109 = type metadata accessor for Date(0);
    v110 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v109);
    v111 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v109);
    if (v110)
    {
      if (!v111)
      {
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v22, v23, v109);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v109);
        goto LABEL_71;
      }
    }
    else
    {
      v116 = *(_QWORD *)(v109 - 8);
      if (!v111)
      {
        (*(void (**)(_QWORD *, char *, uint64_t))(v116 + 40))(v22, v23, v109);
LABEL_71:
        v118 = *(int *)(v81 + 20);
        v119 = (char *)v22 + v118;
        v120 = &v23[v118];
        v121 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v109);
        v122 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v109);
        if (v121)
        {
          if (!v122)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v119, v120, v109);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v109);
LABEL_77:
            v16 = v130;
            goto LABEL_50;
          }
        }
        else
        {
          v123 = *(_QWORD *)(v109 - 8);
          if (!v122)
          {
            (*(void (**)(char *, char *, uint64_t))(v123 + 40))(v119, v120, v109);
            goto LABEL_77;
          }
          (*(void (**)(char *, uint64_t))(v123 + 8))(v119, v109);
        }
        v124 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        goto LABEL_77;
      }
      (*(void (**)(_QWORD *, uint64_t))(v116 + 8))(v22, v109);
    }
    v117 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    goto LABEL_71;
  }
  if (v83)
  {
LABEL_43:
    v31 = &qword_100BC3350;
    goto LABEL_8;
  }
  v84 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v84))
  {
    v85 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v22, v23, v84);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v84);
  }
  v112 = *(int *)(v81 + 20);
  v113 = (char *)v22 + v112;
  v114 = &v23[v112];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v23[v112], 1, v84))
  {
    v115 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v113, v114, v84);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v84);
  }
  v16 = v130;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v81);
  a3 = v128;
LABEL_50:
  v90 = v16[7];
  v91 = (_QWORD *)((char *)v13 + v90);
  v92 = &v14[v90];
  v94 = *(_QWORD *)v92;
  v93 = *((_QWORD *)v92 + 1);
  *v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  v95 = v16[8];
  v96 = (char *)v13 + v95;
  v97 = &v14[v95];
  v98 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 40))(v96, v97, v98);
  *((_BYTE *)v13 + v16[9]) = v14[v16[9]];
  v99 = *(int *)(a3 + 24);
  v100 = (_QWORD *)(a1 + v99);
  v101 = (char *)v4 + v99;
  v102 = *(_QWORD *)(a1 + v99);
  v103 = *(_QWORD *)((char *)v4 + v99);
  if (!v102)
  {
    if (v103)
    {
      v106 = *((_QWORD *)v101 + 1);
      *v100 = v103;
      v100[1] = v106;
      return a1;
    }
LABEL_56:
    *(_OWORD *)v100 = *(_OWORD *)v101;
    return a1;
  }
  if (!v103)
  {
    swift_release(v100[1]);
    goto LABEL_56;
  }
  v104 = *((_QWORD *)v101 + 1);
  v105 = v100[1];
  *v100 = v103;
  v100[1] = v104;
  swift_release(v105);
  return a1;
}

uint64_t sub_10040EEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040EEAC);
}

uint64_t sub_10040EEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_1000DCE88();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
    return _s7Weather24LocationCompositionStateOwet_0(v4 + *(int *)(a3 + 20), v3, v6);
  v8 = *(_QWORD *)(v4 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_10040EF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040EF34);
}

void sub_10040EF34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v8 = sub_1000DCE88();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 20), v4, v4, v8);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 24)) = v4;
    sub_100079F70();
  }
}

uint64_t type metadata accessor for ConditionDetailMapView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE0C38;
  if (!qword_100BE0C38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ConditionDetailMapView);
  return result;
}

uint64_t sub_10040EFD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10099E458;
  result = type metadata accessor for ConditionDetailMapViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10099E470;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10040F04C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4370, 1);
}

uint64_t sub_10040F05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;

  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098694();
  sub_1000BA294(&qword_100BD11F8);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = type metadata accessor for WeatherDataModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100098728();
  v11 = v10 - v9;
  v12 = v0 + *(int *)(type metadata accessor for ConditionDetailMapView(0) + 20);
  v13 = type metadata accessor for ConditionDetailMapViewModel(0);
  sub_100037768(v12 + *(int *)(v13 + 24), v1, &qword_100BC3460);
  v14 = type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v14) == 1)
  {
    sub_100021A14(v1, &qword_100BC3460);
    sub_1000BA9D4(v6, 1);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v15(v6, v1 + *(int *)(v14 + 24), v7);
    sub_1000215BC(v1, type metadata accessor for WeatherData);
    sub_1000BA9D4(v6, 0);
    if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v6, v7);
      v17 = sub_1000BA294(&qword_100BE0D18);
      v18 = sub_1000BA294(&qword_100BE0D20);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(_QWORD *)(v19 + 72);
      v21 = *(unsigned __int8 *)(v19 + 80);
      v22 = (v21 + 32) & ~v21;
      v23 = swift_allocObject(v17, v22 + v20, v21 | 7);
      *(_OWORD *)(v23 + 16) = xmmword_10097CA50;
      v24 = (_QWORD *)(v23 + v22);
      v25 = (char *)v24 + *(int *)(v18 + 48);
      *v24 = Location.id.getter(v23);
      v24[1] = v26;
      v15((uint64_t)v25, v11, v7);
      v16 = Dictionary.init(dictionaryLiteral:)(v23);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
      return v16;
    }
  }
  sub_100021A14(v6, &qword_100BD11F8);
  return Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
}

void sub_10040F2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000BA294(&qword_100BE0C78);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100098728();
  v4 = v3 - v2;
  *(_QWORD *)v4 = static HorizontalAlignment.leading.getter(v5);
  *(_QWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 16) = 0;
  v6 = sub_1000BA294(&qword_100BE0C80);
  v7 = sub_10040F3A4(v0, v4 + *(int *)(v6 + 44));
  static Alignment.center.getter(v7);
  sub_1009461F8();
  sub_100021A14(v4, &qword_100BE0C78);
  sub_100079F70();
}

uint64_t sub_10040F3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char v77[24];
  _BYTE v78[189];
  _BYTE v79[192];
  _BYTE v80[145];
  _BYTE v81[7];
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  _QWORD v87[25];

  v76 = a2;
  v3 = sub_1000BA294(&qword_100BE0C88);
  __chkstk_darwin(v3);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1000BA294(&qword_100BE0C90);
  __chkstk_darwin(v73);
  v75 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v72 = (char *)&v69 - v8;
  __chkstk_darwin(v9);
  v74 = (char *)&v69 - v10;
  v11 = (_QWORD *)(a1 + *(int *)(type metadata accessor for ConditionDetailMapView(0) + 20));
  v12 = v11[1];
  v71 = v11;
  if (v12)
  {
    v87[0] = *v11;
    v87[1] = v12;
    v13 = sub_100114EF8();
    swift_bridgeObjectRetain(v12);
    v14 = Text.init<A>(_:)(v87, &type metadata for String, v13);
    v69 = a1;
    v16 = v15;
    v18 = v17;
    v20 = v19 & 1;
    swift_beginAccess(&unk_100BE0830, v87, 33, 0);
    sub_100409178();
    v22 = v21;
    swift_endAccess(v87);
    v23 = Text.font(_:)(v22, v14, v16, v20, v18);
    v70 = v5;
    v25 = v24;
    v27 = v26;
    v29 = v28;
    swift_release(v22);
    v30 = v16;
    a1 = v69;
    sub_1000D31B4(v14, v30, v20);
    swift_bridgeObjectRelease();
    v32 = static Alignment.leading.getter(v31);
    LOBYTE(v68) = 1;
    LOBYTE(v67) = 1;
    sub_100945D8C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v67, 0, v68, v32, v33, v23, v25, v27 & 1, v29);
    v34 = v25;
    v5 = v70;
    sub_1000D31B4(v23, v34, v27 & 1);
    swift_bridgeObjectRelease();
    memcpy(v79, v87, 0x90uLL);
    v35 = sub_10040922C();
    v37 = v36;
    v39 = v38;
    v41 = v40;
    LOBYTE(v29) = static Edge.Set.all.getter(v42);
    v77[0] = 0;
    memcpy(v80, v79, 0x90uLL);
    v80[144] = v29;
    *(_DWORD *)v81 = *(_DWORD *)v78;
    *(_DWORD *)&v81[3] = *(_DWORD *)&v78[3];
    v82 = v35;
    v83 = v37;
    v84 = v39;
    v85 = v41;
    v86 = 0;
    LocationSearchEntityFromStringResolver.init()();
  }
  else
  {
    sub_100410124(v80);
  }
  sub_1000787D4((uint64_t)v80, (uint64_t)v87, &qword_100BE0C98);
  sub_10040F87C(a1, (uint64_t)v5);
  v44 = static Edge.Set.leading.getter(v43);
  v45 = static Edge.Set.trailing.getter();
  v46 = Edge.Set.init(rawValue:)(0);
  v47 = Edge.Set.init(rawValue:)(v46);
  if (Edge.Set.init(rawValue:)(v47 & v44) != v44)
    v46 = Edge.Set.init(rawValue:)(v46 | v44);
  v48 = Edge.Set.init(rawValue:)(v46);
  if (Edge.Set.init(rawValue:)(v48 & v45) != v45)
    LOBYTE(v46) = Edge.Set.init(rawValue:)(v46 | v45);
  v50 = (uint64_t)v75;
  v49 = v76;
  v52 = v73;
  v51 = (uint64_t)v74;
  v53 = v71;
  v54 = (uint64_t)v72;
  v55 = type metadata accessor for ConditionDetailMapViewModel(0);
  v56 = 0.0;
  if ((*((_BYTE *)v53 + *(int *)(v55 + 36)) & 1) != 0)
  {
    swift_beginAccess(&unk_100BE0830, v77, 1, 0);
    v56 = sub_10040908C();
  }
  v57 = EdgeInsets.init(_all:)(v56);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  sub_100037768((uint64_t)v5, v54, &qword_100BE0C88);
  v64 = v54 + *(int *)(v52 + 36);
  *(_BYTE *)v64 = v46;
  *(double *)(v64 + 8) = v57;
  *(_QWORD *)(v64 + 16) = v59;
  *(_QWORD *)(v64 + 24) = v61;
  *(_QWORD *)(v64 + 32) = v63;
  *(_BYTE *)(v64 + 40) = 0;
  sub_100021A14((uint64_t)v5, &qword_100BE0C88);
  sub_1000787D4(v54, v51, &qword_100BE0C90);
  sub_1000787D4((uint64_t)v87, (uint64_t)v78, &qword_100BE0C98);
  sub_100037768(v51, v50, &qword_100BE0C90);
  sub_1000787D4((uint64_t)v78, (uint64_t)v79, &qword_100BE0C98);
  sub_1000787D4((uint64_t)v79, v49, &qword_100BE0C98);
  v65 = sub_1000BA294(&qword_100BE0CA0);
  sub_100037768(v50, v49 + *(int *)(v65 + 48), &qword_100BE0C90);
  sub_10041012C((uint64_t)v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10010F980);
  sub_100021A14(v51, &qword_100BE0C90);
  sub_100021A14(v50, &qword_100BE0C90);
  sub_1000787D4((uint64_t)v78, (uint64_t)v80, &qword_100BE0C98);
  return sub_10041012C((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10010F9B0);
}

void sub_10040F87C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = sub_1000BA294(&qword_100BE0CA8);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1000BA294(&qword_100BE0CB0);
  v51 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v50 = (char *)&v44 - v10;
  v52 = sub_1000BA294(&qword_100BE0CB8);
  __chkstk_darwin(v52);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1000BA294(&qword_100BE0CC0);
  __chkstk_darwin(v53);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - v16;
  v18 = type metadata accessor for ConditionDetailMapView(0);
  v19 = (uint64_t *)(a1 + *(int *)(v18 + 24));
  v20 = *v19;
  if (*v19)
  {
    v21 = v18;
    v48 = a2;
    v46 = v19[1];
    swift_retain();
    *v6 = static Alignment.bottom.getter(v22);
    v6[1] = v23;
    v24 = *(int *)(sub_1000BA294(&qword_100BE0CF0) + 44);
    v47 = v4;
    v25 = (uint64_t)v6 + v24;
    sub_10040FCCC((uint64_t)v17);
    v26 = a1 + *(int *)(v21 + 20);
    v27 = (uint64_t *)(v26 + *(int *)(type metadata accessor for ConditionDetailMapViewModel(0) + 28));
    v29 = *v27;
    v28 = v27[1];
    sub_100037768((uint64_t)v17, (uint64_t)v14, &qword_100BE0CC0);
    sub_100037768((uint64_t)v14, v25, &qword_100BE0CC0);
    v30 = (_QWORD *)(v25 + *(int *)(sub_1000BA294(&qword_100BE0CF8) + 48));
    *v30 = v29;
    v30[1] = v28;
    swift_bridgeObjectRetain_n(v28, 2);
    sub_100021A14((uint64_t)v17, &qword_100BE0CC0);
    swift_bridgeObjectRelease();
    sub_100021A14((uint64_t)v14, &qword_100BE0CC0);
    v31 = swift_allocObject(&unk_100B72F18, 32, 7);
    v32 = v46;
    *(_QWORD *)(v31 + 16) = v20;
    *(_QWORD *)(v31 + 24) = v32;
    sub_10003D310(&qword_100BE0CC8, &qword_100BE0CA8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v34 = v33;
    swift_retain();
    v35 = v49;
    v45 = v20;
    v36 = v47;
    View.onTapGesture(count:perform:)(1, sub_100410228, v31, v47, v34);
    swift_release(v31);
    sub_100021A14((uint64_t)v6, &qword_100BE0CA8);
    v38 = v50;
    v37 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v50, v35, v7);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v12, v38, v7);
    swift_storeEnumTagMultiPayload(v12, v52, 0);
    v54 = v36;
    v55 = v34;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v40 = sub_100372A3C(&qword_100BE0CD0, &qword_100BE0CC0, (void (*)(void))sub_1004101A0);
    _ConditionalContent<>.init(storage:)(v12, v7, v53, OpaqueTypeConformance2, v40);
    sub_1000BF8D0(v45, v32);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v7);
  }
  else
  {
    sub_10040FCCC((uint64_t)v17);
    sub_100037768((uint64_t)v17, (uint64_t)v12, &qword_100BE0CC0);
    swift_storeEnumTagMultiPayload(v12, v52, 1);
    sub_10003D310(&qword_100BE0CC8, &qword_100BE0CA8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v54 = v4;
    v55 = v41;
    v42 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v43 = sub_100372A3C(&qword_100BE0CD0, &qword_100BE0CC0, (void (*)(void))sub_1004101A0);
    _ConditionalContent<>.init(storage:)(v12, v7, v53, v42, v43);
    sub_100021A14((uint64_t)v17, &qword_100BE0CC0);
  }
}

void sub_10040FCCC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v69[4];
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v3 = v1;
  sub_1000BA294(&qword_100BE0D00);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = type metadata accessor for WeatherMapDisplayMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098694();
  v10 = type metadata accessor for WeatherMap(0);
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  __chkstk_darwin(v10);
  sub_100088FDC();
  v64 = v11;
  v63 = sub_1000BA294(&qword_100BE0CE0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v67 = v13;
  v14 = *(int *)(sub_1000BA294(&qword_100BE0D08) + 48);
  v15 = enum case for WeatherMapDisplayMode.SnapshotSizingBehavior.autoSizing(_:);
  v16 = type metadata accessor for WeatherMapDisplayMode.SnapshotSizingBehavior(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v2, v15, v16);
  if (qword_100BC20C8 != -1)
    swift_once(&qword_100BC20C8, sub_1004174C8);
  *(_QWORD *)(v2 + v14) = qword_100CAEB58;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v2, enum case for WeatherMapDisplayMode.snapshot(_:), v8);
  v17 = sub_1000DB9C4();
  sub_10040CD30(v17, v18, v19, v20);
  sub_1007A5E04();
  v62 = v21;
  v61 = v22;
  v60 = v23 & 1;
  v24 = sub_1000DB9C4();
  sub_10040CFD8(v24, v25, v26, v27);
  v28 = sub_1000BA294(&qword_100BE0D10);
  v29 = type metadata accessor for Location(0);
  v59 = v2;
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject(v28, v32 + *(_QWORD *)(v30 + 72), v31 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_10097CA50;
  v34 = v3 + *(int *)(type metadata accessor for ConditionDetailMapView(0) + 20);
  v35 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v33 + v32, v34 + v35[5], v29);
  v36 = v34 + v35[8];
  v37 = type metadata accessor for WeatherMapOverlayKind(0);
  v38 = static Binding.constant(_:)(v36, v37);
  v69[0] = Location.id.getter(v38);
  v69[1] = v39;
  v40 = sub_1000BA294(&qword_100BC5AA8);
  static Binding.constant(_:)(v69, v40);
  swift_bridgeObjectRelease();
  v41 = v70;
  v42 = v71;
  v43 = sub_10040F05C();
  v44 = WeatherMap.init(displayMode:preferredMapSize:locations:overlayKind:selectedLocationId:weatherData:options:cacheIdentifier:isPreferredForCachedInstance:debugIdentifier:)(v59, v62, v61, v60, v33, v7, v41, *((_QWORD *)&v41 + 1), v42, *((_QWORD *)&v42 + 1), v43, _swiftEmptyArrayStorage, 0, 0, 1, 0xD000000000000016, 0x800000010099E420);
  v45 = static Edge.Set.top.getter(v44);
  v46 = 0.0;
  if (*(_BYTE *)(v34 + v35[9]))
    v46 = 4.0;
  v47 = EdgeInsets.init(_all:)(v46);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v67, v64, v66);
  v54 = v67 + *(int *)(v63 + 36);
  *(_BYTE *)v54 = v45;
  *(double *)(v54 + 8) = v47;
  *(_QWORD *)(v54 + 16) = v49;
  *(_QWORD *)(v54 + 24) = v51;
  *(_QWORD *)(v54 + 32) = v53;
  *(_BYTE *)(v54 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
  swift_beginAccess(&unk_100C10858, v69, 1, 0);
  v55 = sub_1008B93B0();
  static Alignment.center.getter(v56);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v55, 0);
  sub_100037768(v67, a1, &qword_100BE0CE0);
  v57 = (_OWORD *)(a1 + *(int *)(sub_1000BA294(&qword_100BE0CC0) + 36));
  v58 = v71;
  *v57 = v70;
  v57[1] = v58;
  v57[2] = v72;
  sub_100021A14(v67, &qword_100BE0CE0);
}

void sub_100410124(void *a1)
{
  bzero(a1, 0xB9uLL);
}

uint64_t sub_10041012C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 184);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    v4);
  return a1;
}

uint64_t sub_1004101A0()
{
  return sub_100372A3C(&qword_100BE0CD8, &qword_100BE0CE0, (void (*)(void))sub_1004101C4);
}

unint64_t sub_1004101C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0CE8;
  if (!qword_100BE0CE8)
  {
    v1 = type metadata accessor for WeatherMap(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WeatherMap, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0CE8);
  }
  return result;
}

uint64_t sub_100410204()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100410228()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_10041024C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0D28;
  if (!qword_100BE0D28)
  {
    v1 = sub_100075EB0(&qword_100BE0D30);
    sub_10003D310(&qword_100BE0D38, &qword_100BE0C78, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE0D28);
  }
  return result;
}

uint64_t sub_1004102D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  sub_1000BA294(&qword_100BE0DD8);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  type metadata accessor for ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = type metadata accessor for VFXTestViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  sub_100410440(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v11);
  sub_10076B4A8(v7);
  sub_100410484(v11);
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v12) == 1)
  {
    sub_1004104C0(v7);
    v17 = enum case for WeatherCondition.clear(_:);
    v18 = type metadata accessor for WeatherCondition(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a2, v17, v18);
  }
  else
  {
    sub_100410500(v7, v16);
    v20 = type metadata accessor for WeatherCondition(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a2, v16, v20);
  }
}

uint64_t type metadata accessor for VFXTestViewModelFactory()
{
  return objc_opt_self(_TtC7Weather23VFXTestViewModelFactory);
}

uint64_t sub_100410440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100410484(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ViewState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004104C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE0DD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100410500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VFXTestViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100410544(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __n128 v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC68E8);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for Locale(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = a3[5];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Date(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v18 = a3[6];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for Calendar(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v17((char *)a1 + a3[7], (char *)a2 + a3[7], v16);
    v17((char *)a1 + a3[8], (char *)a2 + a3[8], v16);
    v22 = a3[9];
    v23 = a3[10];
    v24 = *(uint64_t *)((char *)a2 + v22);
    *(uint64_t *)((char *)a1 + v22) = v24;
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    v27 = swift_bridgeObjectRetain(v24);
    ((void (*)(char *, char *, uint64_t, __n128))v17)(v25, v26, v16, v27);
  }
  return a1;
}

uint64_t sub_1004106CC(char *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  void (*v11)(char *, uint64_t);

  sub_1000BA294(&qword_100BC68E8);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    v4 = type metadata accessor for Locale(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release(*(_QWORD *)a1);
  }
  v5 = &a1[a2[5]];
  v6 = type metadata accessor for Date(0);
  v11 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v11(v5, v6);
  v7 = &a1[a2[6]];
  v8 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v11(&a1[a2[7]], v6);
  v11(&a1[a2[8]], v6);
  v9 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t, __n128))v11)(&a1[a2[10]], v6, v9);
}

_QWORD *sub_1004107DC(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;

  v6 = sub_1000BA294(&qword_100BC68E8);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for Locale(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *(_QWORD *)a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = &a2[v11];
  v14 = type metadata accessor for Date(0);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = &a2[v16];
  v19 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v15((char *)a1 + a3[7], &a2[a3[7]], v14);
  v15((char *)a1 + a3[8], &a2[a3[8]], v14);
  v20 = a3[9];
  v21 = a3[10];
  v22 = *(_QWORD *)&a2[v20];
  *(_QWORD *)((char *)a1 + v20) = v22;
  v23 = (char *)a1 + v21;
  v24 = &a2[v21];
  v25 = swift_bridgeObjectRetain(v22);
  ((void (*)(char *, char *, uint64_t, __n128))v15)(v23, v24, v14, v25);
  return a1;
}

char *sub_100410938(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;

  if (a1 != a2)
  {
    sub_100410AAC((uint64_t)a1);
    v6 = sub_1000BA294(&qword_100BC68E8);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for Locale(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for Date(0);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  v15(&a1[a3[8]], &a2[a3[8]], v14);
  v20 = a3[9];
  v21 = *(_QWORD *)&a2[v20];
  *(_QWORD *)&a1[v20] = v21;
  swift_bridgeObjectRetain(v21);
  v22 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v15)(&a1[a3[10]], &a2[a3[10]], v14, v22);
  return a1;
}

uint64_t sub_100410AAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC68E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100410AEC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1000BA294(&qword_100BC68E8);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  v17 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v12(&a1[v17], &a2[v17], v11);
  return a1;
}

char *sub_100410C38(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __n128 v17;

  if (a1 != a2)
  {
    sub_100410AAC((uint64_t)a1);
    v6 = sub_1000BA294(&qword_100BC68E8);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for Locale(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v17 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v12)(&a1[a3[10]], &a2[a3[10]], v11, v17);
  return a1;
}

uint64_t sub_100410DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100410DAC);
}

uint64_t sub_100410DAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v15;

  sub_1000BA294(&qword_100BE0DE0);
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  sub_100098778();
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_10:
    v8 = a1 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  sub_1000D95F0();
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_10;
  }
  v15 = *(_QWORD *)(a1 + a3[9]);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t sub_100410E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100410E60);
}

void sub_100410E60(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000BA294(&qword_100BE0DE0);
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_100098778();
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1000D95F0();
      sub_10009D2E8();
      if (!v13)
      {
        *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = a1 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v9, a2, a2, v8);
}

uint64_t _s13CalendarStateVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE0E40;
  if (!qword_100BE0E40)
    return swift_getSingletonMetadata(a1, &_s13CalendarStateVMn);
  return result;
}

void sub_100410F3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[7];

  sub_100410FF0(319);
  if (v3 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Date(319);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v9[1] = v6;
      v7 = type metadata accessor for Calendar(319);
      if (v8 <= 0x3F)
      {
        v9[2] = *(_QWORD *)(v7 - 8) + 64;
        v9[3] = v6;
        v9[4] = v6;
        v9[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v9[6] = v6;
        swift_initStructMetadata(a1, 256, 7, v9, a1 + 16);
      }
    }
  }
}

void sub_100410FF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BE0E50)
  {
    v2 = type metadata accessor for Locale(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BE0E50);
  }
}

uint64_t sub_100411044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, _QWORD *);
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  __n128 v58;
  uint64_t result;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  char v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  unsigned int v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, _QWORD *);
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;

  v153 = (_QWORD *)type metadata accessor for Calendar.Component(0);
  v1 = *(v153 - 1);
  __chkstk_darwin(v153);
  sub_100088FDC();
  v151 = v2;
  sub_1000BA294(&qword_100BCCC50);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v144 = v4;
  sub_1000BA294(&qword_100BDCCB0);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v143 = v6;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_1000986FC();
  v125 = v8;
  sub_10009D2A4();
  __chkstk_darwin(v9);
  sub_1000860D0();
  v126 = v10;
  sub_10009D2A4();
  __chkstk_darwin(v11);
  sub_1000860D0();
  v149 = v12;
  sub_10009D2A4();
  __chkstk_darwin(v13);
  sub_1000860D0();
  v134 = v14;
  sub_10009D2A4();
  __chkstk_darwin(v15);
  sub_1000860D0();
  v135 = v16;
  sub_10009D2A4();
  __chkstk_darwin(v17);
  v148 = (char *)&v122 - v18;
  v19 = sub_100098778();
  v155 = *(_QWORD *)(v19 - 8);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_1000986FC();
  v157 = v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  v24 = (char *)&v122 - v23;
  __chkstk_darwin(v25);
  sub_1000860D0();
  v139 = v26;
  sub_10009D2A4();
  __chkstk_darwin(v27);
  sub_1000860D0();
  v152 = v28;
  sub_10009D2A4();
  __chkstk_darwin(v29);
  v146 = (uint64_t)&v122 - v30;
  v142 = type metadata accessor for DateComponents(0);
  v147 = *(_QWORD *)(v142 - 8);
  sub_10009D98C();
  __chkstk_darwin(v31);
  sub_1000986FC();
  v140 = v32;
  sub_10009D2A4();
  __chkstk_darwin(v33);
  sub_1000860D0();
  v141 = v34;
  sub_10009D2A4();
  __chkstk_darwin(v35);
  v37 = (char *)&v122 - v36;
  v38 = type metadata accessor for Locale(0);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v41 = (char *)&v122 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007A5F70();
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43 = (uint64_t)v37;
  v42(v41, v38);
  v44 = _s13CalendarStateVMa(0);
  v156 = v0 + *(int *)(v44 + 24);
  v45 = v0;
  v46 = sub_1000BA294(&qword_100BC4E50);
  v47 = *(_QWORD *)(v1 + 72);
  v48 = *(unsigned __int8 *)(v1 + 80);
  v49 = (v48 + 32) & ~v48;
  v131 = v46;
  v130 = v49 + 2 * v47;
  v129 = v48 | 7;
  v50 = swift_allocObject(v46, v130, v48 | 7);
  v128 = xmmword_10097DA20;
  *(_OWORD *)(v50 + 16) = xmmword_10097DA20;
  v132 = v49;
  v51 = v50 + v49;
  v136 = v1;
  v52 = *(void (**)(uint64_t, uint64_t, _QWORD *))(v1 + 104);
  v53 = v153;
  v52(v51, enum case for Calendar.Component.year(_:), v153);
  v133 = v47;
  v54 = v51 + v47;
  v55 = v44;
  v56 = enum case for Calendar.Component.month(_:);
  v150 = v52;
  v52(v54, enum case for Calendar.Component.month(_:), v53);
  v57 = sub_1000A8278(v50);
  Calendar.dateComponents(_:from:)(v57, v45 + *(int *)(v55 + 20));
  v58 = swift_bridgeObjectRelease();
  result = DateComponents.year.getter(v58);
  if ((v60 & 1) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v61 = result;
  v127 = v56;
  v123 = v43;
  result = DateComponents.month.getter();
  if ((v62 & 1) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v63 = result;
  v145 = v45;
  v64 = sub_1000D95F0();
  v65 = v143;
  v138 = v64;
  _s7Weather24LocationCompositionStateOwst_0(v143, 1, 1, v64);
  v66 = type metadata accessor for TimeZone(0);
  v67 = v144;
  v137 = v66;
  _s7Weather24LocationCompositionStateOwst_0(v144, 1, 1, v66);
  v68 = v65;
  v69 = v141;
  sub_1000D9DC8(v68, v67, 0, 1, v61, 0, v63);
  v70 = (uint64_t)v148;
  Calendar.date(from:)(v69, v71);
  v124 = *(void (**)(uint64_t, uint64_t))(v147 + 8);
  v124(v69, v142);
  result = sub_1000B4744(v70);
  if (v72)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v154 = v55;
  v73 = v155;
  v74 = v146;
  sub_1000B4950(v146, v70);
  v75 = v151;
  v76 = v153;
  sub_100098CF4(v151, v127);
  v77 = v135;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v75, 1, v74, 0);
  v78 = v77;
  v148 = *(char **)(v136 + 8);
  ((void (*)(uint64_t, _QWORD *))v148)(v75, v76);
  result = sub_1000B4744(v77);
  if (v72)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v79 = v152;
  sub_1000B4950(v152, v78);
  v80 = swift_allocObject(v131, v130, v129);
  *(_OWORD *)(v80 + 16) = v128;
  v81 = v80 + v132;
  sub_100098CF4(v80 + v132, enum case for Calendar.Component.weekOfYear(_:));
  sub_100098CF4(v81 + v133, enum case for Calendar.Component.yearForWeekOfYear(_:));
  v82 = sub_1000A8278(v80);
  v83 = v140;
  Calendar.dateComponents(_:from:)(v82, v74);
  *(_QWORD *)&v84 = swift_bridgeObjectRelease().n128_u64[0];
  v85 = v134;
  Calendar.date(from:)(v83, v84);
  result = sub_1000B4744(v85);
  if (v72)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v86 = v139;
  sub_1000B4950(v139, v85);
  v147 = *(_QWORD *)(v73 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v147)(v24, v86, v19);
  v87 = static Date.< infix(_:_:)(v24, v79);
  v88 = v154;
  if ((v87 & 1) != 0)
  {
    v89 = enum case for Calendar.Component.day(_:);
    v90 = _swiftEmptyArrayStorage;
    v73 = v155;
    v91 = v151;
    v92 = v149;
    while (1)
    {
      ((void (*)(uint64_t, char *, uint64_t))v147)(v157, v24, v19);
      if ((swift_isUniquelyReferenced_nonNull_native(v90) & 1) == 0)
      {
        sub_1000CD750();
        v90 = v96;
      }
      v93 = v90[2];
      if (v93 >= v90[3] >> 1)
      {
        sub_1000CD750();
        v90 = v97;
      }
      v90[2] = v93 + 1;
      sub_1000B4950((uint64_t)v90+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(_QWORD *)(v73 + 72) * v93, v157);
      v94 = v153;
      v150(v91, v89, v153);
      Calendar.date(byAdding:value:to:wrappingComponents:)(v91, 1, v24, 0);
      ((void (*)(uint64_t, _QWORD *))v148)(v91, v94);
      result = sub_1000B4744(v92);
      if (v72)
        break;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v24, v19);
      sub_1000B4950((uint64_t)v24, v92);
      v95 = static Date.< infix(_:_:)(v24, v152);
      v88 = v154;
      if ((v95 & 1) == 0)
        goto LABEL_16;
    }
    __break(1u);
    goto LABEL_20;
  }
  v90 = _swiftEmptyArrayStorage;
LABEL_16:
  v158 = v90;
  v98 = sub_1000BA294(&qword_100BC69E0);
  v99 = sub_100411A08();
  v100 = Collection<>.chunk(by:)(7, v98, v99);
  v101 = *(int *)(v88 + 36);
  v102 = v145;
  v103 = swift_bridgeObjectRelease();
  *(_QWORD *)(v102 + v101) = v100;
  v104 = v102 + *(int *)(v88 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v73 + 24))(v104, v146, v19, v103);
  sub_1000CCD40();
  v105 = v144;
  _s7Weather24LocationCompositionStateOwst_0(v144, 1, 1, v137);
  sub_1000BAC98();
  LOBYTE(v123) = 1;
  v122 = 0;
  v106 = v141;
  v107 = sub_1000C3A98();
  sub_1000D9DC8(v107, v108, v109, v110, v111, v112, 1);
  v113 = v126;
  v157 = v104;
  Calendar.date(byAdding:to:wrappingComponents:)(v106, v104, 0);
  v124(v106, v142);
  result = sub_1000B4744(v113);
  if (v72)
    goto LABEL_25;
  v114 = v145 + *(int *)(v154 + 28);
  v153 = *(_QWORD **)(v155 + 40);
  ((void (*)(uint64_t, uint64_t, uint64_t))v153)(v114, v113, v19);
  sub_1000CCD40();
  _s7Weather24LocationCompositionStateOwst_0(v105, 1, 1, v137);
  sub_1000BAC98();
  LOBYTE(v143) = 1;
  v142 = 0;
  v115 = sub_1000C3A98();
  sub_1000D9DC8(v115, v116, v117, v118, v119, v120, -1);
  v121 = v125;
  Calendar.date(byAdding:to:wrappingComponents:)(v106, v157, 0);
  sub_1000C54D0(v106);
  result = sub_1000B4744(v121);
  if (!v72)
  {
    sub_1000DB9D8((uint64_t)v24);
    swift_bridgeObjectRelease();
    sub_1000DB9D8(v139);
    sub_1000C54D0(v140);
    sub_1000DB9D8(v152);
    sub_1000DB9D8(v146);
    sub_1000C54D0(v123);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v153)(v145 + *(int *)(v154 + 32), v121, v19);
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_100411A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE0E98;
  if (!qword_100BE0E98)
  {
    v1 = sub_100075EB0(&qword_100BC69E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100BE0E98);
  }
  return result;
}

void sub_100411A4C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  __asm { BR              X10 }
}

uint64_t sub_100411BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v8 = sub_1000C08E4();
  v9 = sub_1000BA4D8(v8);
  v10 = sub_1000BC194(v9);
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, v10);
  v11 = sub_1000DCE98(v3, 1);
  v12 = sub_1000C29B0(v11);
  sub_1000DF61C(v12);
  type metadata accessor for ModalViewState(0);
  v13 = sub_1000C54D8();
  swift_storeEnumTagMultiPayload(v13, v14, v15);
  v16 = sub_1000D17A4();
  _s7Weather24LocationCompositionStateOwst_0(v16, v17, v18, v19);
  v20 = sub_1000DEBAC(0, 3, v6, v5, v4, 0, 0, 0, v3, v2, v1, v0, 0, 0, 0, 0, 0, 0, 0,
          *(_QWORD *)(v7 - 88));
  sub_100021A68(v0, &qword_100BC5F60);
  sub_100021A68(v1, &qword_100BC5F88);
  sub_100021A68(v2, &qword_100BC5F90);
  sub_100021A68(v3, &qword_100BC5F98);
  sub_100021A68(v4, &qword_100BC5FA0);
  sub_100021A68(v5, &qword_100BC5FA8);
  sub_100021A68(v6, &qword_100BC5FB0);
  return v20;
}

_QWORD *sub_100411F40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = sub_1000BA294(&qword_100BC5FE8);
    *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
  }
  return a1;
}

uint64_t sub_100411FC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100411FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = sub_1000BA294(&qword_100BC5FE8);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100412058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = sub_1000BA294(&qword_100BC5FE8);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_1004120B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = sub_1000BA294(&qword_100BC5FE8);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100412110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = sub_1000BA294(&qword_100BC5FE8);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_10041216C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5FE8);
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1004121A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000BA294(&qword_100BC5FE8);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v6);
}

uint64_t type metadata accessor for DetailComponentAction(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE0FA8;
  if (!qword_100BE0FA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DetailComponentAction);
  return result;
}

uint64_t sub_100412224(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _DWORD v4[8];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_10099E608);
    swift_initEnumMetadataSingleCase(a1, 256, v4);
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4[5];
  }
  return result;
}

uint64_t sub_10041229C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BE0FB8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1004123D8(a1, (uint64_t)v11);
  sub_1004123D8(a2, v12);
  v13 = *(int *)(sub_1000BA294(&qword_100BC5FE8) + 48);
  LODWORD(a1) = v11[v13];
  v14 = *(unsigned __int8 *)(v12 + v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  LODWORD(a2) = static URL.== infix(_:_:)(v7, v12);
  v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(v12, v4);
  v15((uint64_t)v7, v4);
  return a2 & ~(a1 ^ v14) & 1;
}

uint64_t sub_1004123D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailComponentAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10041241C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = type metadata accessor for AutomationInfoProperty(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = *((_BYTE *)a2 + 24);
    swift_bridgeObjectRetain(v7);
    sub_10008D47C(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (uint64_t *)(a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = type metadata accessor for AutomationInfo(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
    if (EnumCaseMultiPayload == 2)
    {
      v21 = *v12;
      v22 = v12[1];
      v23 = *((_BYTE *)v12 + 16);
      sub_1000B2044(v21, v22, v23);
      *v11 = v21;
      v11[1] = v22;
      *((_BYTE *)v11 + 16) = v23;
      v24 = v11;
      v25 = v13;
      v26 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload(v12))
      {
        case 0u:
          v16 = v12[1];
          *v11 = *v12;
          v11[1] = v16;
          swift_bridgeObjectRetain(v16);
          v17 = v11;
          v18 = v15;
          v19 = 0;
          goto LABEL_27;
        case 1u:
          v35 = v12[1];
          *v11 = *v12;
          v11[1] = v35;
          swift_bridgeObjectRetain(v35);
          v17 = v11;
          v18 = v15;
          v19 = 1;
          goto LABEL_27;
        case 2u:
          v36 = v12[1];
          *v11 = *v12;
          v11[1] = v36;
          swift_bridgeObjectRetain(v36);
          v17 = v11;
          v18 = v15;
          v19 = 2;
          goto LABEL_27;
        case 3u:
          v37 = v12[1];
          *v11 = *v12;
          v11[1] = v37;
          swift_bridgeObjectRetain(v37);
          v17 = v11;
          v18 = v15;
          v19 = 3;
          goto LABEL_27;
        case 4u:
          v38 = v12[1];
          *v11 = *v12;
          v11[1] = v38;
          swift_bridgeObjectRetain(v38);
          v17 = v11;
          v18 = v15;
          v19 = 4;
          goto LABEL_27;
        case 5u:
          v39 = v12[1];
          *v11 = *v12;
          v11[1] = v39;
          swift_bridgeObjectRetain(v39);
          v17 = v11;
          v18 = v15;
          v19 = 5;
          goto LABEL_27;
        case 6u:
          v40 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v11, v12, v40);
          v17 = v11;
          v18 = v15;
          v19 = 6;
          goto LABEL_27;
        case 7u:
          v41 = v12[1];
          *v11 = *v12;
          v11[1] = v41;
          swift_bridgeObjectRetain(v41);
          v17 = v11;
          v18 = v15;
          v19 = 7;
          goto LABEL_27;
        case 8u:
          v42 = v12[1];
          *v11 = *v12;
          v11[1] = v42;
          v43 = v12[3];
          v11[2] = v12[2];
          v11[3] = v43;
          v44 = v12[4];
          v45 = v12[5];
          v11[4] = v44;
          v11[5] = v45;
          swift_bridgeObjectRetain(v42);
          swift_bridgeObjectRetain(v43);
          swift_bridgeObjectRetain(v45);
          v17 = v11;
          v18 = v15;
          v19 = 8;
          goto LABEL_27;
        case 9u:
          v46 = v12[1];
          *v11 = *v12;
          v11[1] = v46;
          v47 = v12[2];
          v48 = v12[3];
          v11[2] = v47;
          v11[3] = v48;
          swift_bridgeObjectRetain(v46);
          swift_bridgeObjectRetain(v48);
          v17 = v11;
          v18 = v15;
          v19 = 9;
          goto LABEL_27;
        case 0xAu:
          v49 = v12[1];
          *v11 = *v12;
          v11[1] = v49;
          swift_bridgeObjectRetain(v49);
          v17 = v11;
          v18 = v15;
          v19 = 10;
          goto LABEL_27;
        case 0xBu:
          v50 = v12[1];
          *v11 = *v12;
          v11[1] = v50;
          v51 = v12[2];
          v52 = v12[3];
          v11[2] = v51;
          v11[3] = v52;
          swift_bridgeObjectRetain(v50);
          swift_bridgeObjectRetain(v52);
          v17 = v11;
          v18 = v15;
          v19 = 11;
LABEL_27:
          swift_storeEnumTagMultiPayload(v17, v18, v19);
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      v24 = v11;
      v25 = v13;
      v26 = 1;
    }
    else
    {
      v27 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload(v12))
      {
        case 0u:
          v28 = v12[1];
          *v11 = *v12;
          v11[1] = v28;
          swift_bridgeObjectRetain(v28);
          v29 = v11;
          v30 = v27;
          v31 = 0;
          goto LABEL_14;
        case 1u:
          v32 = v12[1];
          *v11 = *v12;
          v11[1] = v32;
          swift_bridgeObjectRetain(v32);
          v29 = v11;
          v30 = v27;
          v31 = 1;
          goto LABEL_14;
        case 2u:
          v33 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v11, v12, v33);
          v29 = v11;
          v30 = v27;
          v31 = 2;
          goto LABEL_14;
        case 3u:
          v34 = v12[1];
          *v11 = *v12;
          v11[1] = v34;
          swift_bridgeObjectRetain(v34);
          v29 = v11;
          v30 = v27;
          v31 = 3;
LABEL_14:
          swift_storeEnumTagMultiPayload(v29, v30, v31);
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          break;
      }
      v24 = v11;
      v25 = v13;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
  }
  return a1;
}

uint64_t sub_100412804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(type metadata accessor for AutomationInfoProperty(0) + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for AutomationInfo(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = type metadata accessor for AutomationCellInfo(0);
    if (swift_getEnumCaseMultiPayload(v6) == 6)
    {
      v12 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
      swift_storeEnumTagMultiPayload(v5, v11, 6);
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = v5;
    v14 = v7;
    v15 = 1;
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = type metadata accessor for AutomationViewInfo(0);
    if (swift_getEnumCaseMultiPayload(v6) == 2)
    {
      v10 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload(v5, v9, 2);
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v13 = v5;
    v14 = v7;
    v15 = 0;
LABEL_12:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

uint64_t sub_100412990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1000B15F8(v6, v7);
  v8 = type metadata accessor for AutomationInfoProperty(0);
  if (a1 != a2)
  {
    v9 = *(int *)(v8 + 24);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_10006BD20(a1 + v9, type metadata accessor for AutomationInfo);
    v12 = type metadata accessor for AutomationInfo(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for AutomationCellInfo(0);
      if (swift_getEnumCaseMultiPayload(v11) == 6)
      {
        v17 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
        swift_storeEnumTagMultiPayload(v10, v16, 6);
      }
      else
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      v18 = v10;
      v19 = v12;
      v20 = 1;
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v14 = type metadata accessor for AutomationViewInfo(0);
      if (swift_getEnumCaseMultiPayload(v11) == 2)
      {
        v15 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
        swift_storeEnumTagMultiPayload(v10, v14, 2);
      }
      else
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      v18 = v10;
      v19 = v12;
      v20 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v18, v19, v20);
      return a1;
    }
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100412B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100412B54);
}

uint64_t sub_100412B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BACF0();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_100412B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100412B88);
}

uint64_t sub_100412B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BACF0();
  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t sub_100412BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v6 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - v10;
  v12 = type metadata accessor for AutomationInfoViewModifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100412D6C(a1, (uint64_t)v11);
  sub_100412DB0((uint64_t)v11, (uint64_t)v8);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0xE000000000000000;
  *((_QWORD *)v14 + 2) = swift_getKeyPath(&unk_10099E700);
  v14[24] = 0;
  v15 = type metadata accessor for AutomationInfoProperty(0);
  sub_100412DB0((uint64_t)v8, (uint64_t)&v14[*(int *)(v15 + 24)]);
  View.modifier<A>(_:)(v14, a2, v12, a3);
  return sub_10006BD20((uint64_t)v14, type metadata accessor for AutomationInfoViewModifier);
}

uint64_t sub_100412D00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *v0;
  v1 = v0[1];
  v3 = sub_1000BA294(&qword_100BE1050);
  v4 = sub_100154840();
  return View.accessibilityIdentifier(_:)(v2, v1, v3, v4);
}

uint64_t sub_100412D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AutomationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100412DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AutomationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100412DFC()
{
  uint64_t v0;
  double result;

  v0 = sub_100094EE4();
  SettingProperty.wrappedValue.getter(v0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100412E2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  uint64_t v9;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  sub_100094EE4();
  SettingProperty.wrappedValue.setter(v6);
  v7 = swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 8))(a1, v2, v7);
}

double sub_100412ED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  if (qword_100BC23E8 != -1)
    swift_once(&qword_100BC23E8, sub_1006F3764);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000AECD4(v2, (uint64_t)qword_100CAEFB0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "We received a request to show the app store review prompt", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = swift_allocObject(&unk_100B73040, 24, 7);
  swift_weakInit(v7 + 16);
  v8 = swift_allocObject(&unk_100B73068, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a1;
  sub_100094EE4();
  asyncMain(block:)(sub_100414210, v8);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10041300C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v27[24];

  v4 = type metadata accessor for Date(0);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v27, 0, 0);
  if (swift_weakLoadStrong(a1))
  {
    if ((sub_100413310(a2) & 1) != 0)
    {
      sub_100414218();
      v7 = static UIWindowScene.activeScene.getter();
      if (v7)
      {
        v8 = (void *)v7;
        if (qword_100BC23E8 != -1)
          swift_once(&qword_100BC23E8, sub_1006F3764);
        v9 = type metadata accessor for Logger(0);
        v10 = sub_1000AECD4(v9, (uint64_t)qword_100CAEFB0);
        v11 = Logger.logObject.getter(v10);
        v12 = static os_log_type_t.default.getter(v11);
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "Requesting review prompt", v13, 2u);
          swift_slowDealloc(v13, -1, -1);
        }

        v14 = objc_msgSend((id)objc_opt_self(SKStoreReviewController), "requestReviewInScene:", v8);
        static Date.now.getter(v14);
        sub_100412E2C((uint64_t)v6);

      }
      else
      {
        if (qword_100BC23E8 != -1)
          swift_once(&qword_100BC23E8, sub_1006F3764);
        v21 = type metadata accessor for Logger(0);
        v22 = sub_1000AECD4(v21, (uint64_t)qword_100CAEFB0);
        v23 = Logger.logObject.getter(v22);
        v24 = static os_log_type_t.default.getter(v23);
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "No active window scene! Skipping app store review prompt", v25, 2u);
          swift_slowDealloc(v25, -1, -1);
        }

      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    if (qword_100BC23E8 != -1)
      swift_once(&qword_100BC23E8, sub_1006F3764);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_1000AECD4(v15, (uint64_t)qword_100CAEFB0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "We were deallocated! Skipping app store review prompt", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  return result;
}

uint64_t sub_100413310(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _BOOL8 v26;
  BOOL v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint8_t *v37;
  os_log_type_t v38;
  const char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = type metadata accessor for AppStoreReviewConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_10041376C())
  {
    v43 = a1;
    v44 = v9;
    if (qword_100BC23E8 != -1)
      swift_once(&qword_100BC23E8, sub_1006F3764);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_1000AECD4(v13, (uint64_t)qword_100CAEFB0);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Checking if the review prompt feature is enabled", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v18 = v2[5];
    v19 = v2[6];
    sub_1000DB418(v2 + 2, v18);
    v20 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v18, v19);
    v21 = AppConfiguration.appStoreReview.getter(v20);
    v22 = AppStoreReviewConfiguration.appReviewEnabled.getter(v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v23 = type metadata accessor for SettingReader(0);
    static SettingReader.shared.getter(v23);
    if (qword_100BC2628 != -1)
      swift_once(&qword_100BC2628, sub_100818F98);
    v24 = SettingReader.isEnabled(_:with:)(qword_100CAF488, v22 & 1);
    swift_release();
    if ((v24 & 1) != 0)
    {
      sub_1000DB418(v2 + 7, v2[10]);
      v26 = sub_100243804();
      v27 = v26;
      v28 = Logger.logObject.getter(v26);
      v29 = static os_log_type_t.default.getter(v28);
      v30 = os_log_type_enabled(v28, v29);
      if (v27)
      {
        if (v30)
        {
          v31 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "The review prompt featured is enabled and this user is in the chosen random sample", v31, 2u);
          swift_slowDealloc(v31, -1, -1);
        }

        v32 = v43;
        v33 = sub_100413B94((uint64_t)v11, v43, v2);
        v28 = Logger.logObject.getter(v33);
        v34 = static os_log_type_t.default.getter(v28);
        v35 = os_log_type_enabled(v28, v34);
        if (v33 >= v32)
        {
          v36 = v44;
          if (!v35)
          {
            v12 = 0;
            goto LABEL_23;
          }
          v37 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v37 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v34, "We are not past the location count threshold. Showing the review prompt is disallowed", v37, 2u);
          v12 = 0;
        }
        else
        {
          v36 = v44;
          if (!v35)
          {
            v12 = 1;
            goto LABEL_23;
          }
          v37 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v37 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v34, "We are past the location count threshold. Showing the review prompt is allowed", v37, 2u);
          v12 = 1;
        }
        goto LABEL_21;
      }
      if (v30)
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        v41 = v29;
        v39 = "The review prompt featured is enabled but this user is not in the chosen random sample";
        v40 = v28;
        goto LABEL_20;
      }
    }
    else
    {
      v28 = Logger.logObject.getter(v25);
      v38 = static os_log_type_t.default.getter(v28);
      if (os_log_type_enabled(v28, v38))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        v39 = "The review prompt featured is disabled";
        v40 = v28;
        v41 = v38;
LABEL_20:
        _os_log_impl((void *)&_mh_execute_header, v40, v41, v39, v37, 2u);
        v12 = 0;
        v36 = v44;
LABEL_21:
        swift_slowDealloc(v37, -1, -1);
LABEL_23:

        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
        return v12;
      }
    }
    v12 = 0;
    v36 = v44;
    goto LABEL_23;
  }
  return 0;
}

BOOL sub_10041376C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  double v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _BOOL8 v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  if (qword_100BC23E8 != -1)
    swift_once(&qword_100BC23E8, sub_1006F3764);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_1000AECD4(v9, (uint64_t)qword_100CAEFB0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Checking if the prompt was shown recently ...", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = sub_100412DFC();
  static Date.distantPast.getter(v14);
  v15 = sub_1000ABD74((unint64_t *)&qword_100BC3590, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v5, v2, v15);
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  v18 = ((uint64_t (*)(char *, uint64_t))v17)(v8, v2);
  if ((v16 & 1) != 0)
  {
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "promptLastShownDate == .distantPast .. concluding that the prompt was NOT shown recently", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    return 0;
  }
  else
  {
    v23 = sub_100413E88(v1);
    static Date.now.getter(v24);
    sub_100412DFC();
    v25 = Date.timeIntervalSince(_:)(v5);
    v17(v5, v2);
    v17(v8, v2);
    v22 = v25 < v23;
    v26 = swift_retain_n(v1, 2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(18, -1);
      v36 = swift_slowAlloc(32, -1);
      v38 = v36;
      *(_DWORD *)v29 = 67109378;
      LODWORD(v37) = v25 < v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 4);
      *(_WORD *)(v29 + 8) = 2080;
      v35 = v29 + 10;
      sub_100412DFC();
      sub_1000ABD74((unint64_t *)&qword_100BC52F0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v30 = dispatch thunk of CustomStringConvertible.description.getter(v2);
      v32 = v31;
      v17(v8, v2);
      v37 = sub_1000CE1C8(v30, v32, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_release_n(v1, 2);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Just finished checking if the prompt was shown recently. promptWasRecentlyShown=%{BOOL}d, promptLastShownDate=%s", (uint8_t *)v29, 0x12u);
      v33 = v36;
      swift_arrayDestroy(v36, 1);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2);
    }
  }
  return v22;
}

uint64_t sub_100413B94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *a3;
  v5 = type metadata accessor for AppStoreReviewConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = AppConfiguration.appStoreReview.getter(v9);
  v11 = AppStoreReviewConfiguration.savedLocationsCountThreshold.getter(v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (qword_100BC23E8 != -1)
    swift_once(&qword_100BC23E8, sub_1006F3764);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_1000AECD4(v12, (uint64_t)qword_100CAEFB0);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    *(_DWORD *)v16 = 134218240;
    v26 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    *(_WORD *)(v16 + 12) = 2048;
    v26 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, " ... now checking if we pass our location count threshold. locationCount=%ld, (app config)locationCountThreshold=%ld", (uint8_t *)v16, 0x16u);
    swift_slowDealloc(v16, -1, -1);
  }

  if (qword_100BC2640 != -1)
    swift_once(&qword_100BC2640, sub_1008190B8);
  v18 = qword_100CAF4A0;
  v19 = sub_1000ABD74(&qword_100BE1128, v17, (uint64_t (*)(uint64_t))type metadata accessor for AppStoreReviewManager, (uint64_t)&unk_10099E788);
  Configurable.setting<A>(_:)(v18, v4, v19);
  if (v26 == 1)
  {
    if (qword_100BC2648 != -1)
      swift_once(&qword_100BC2648, sub_1008191C0);
    v20 = Configurable.setting<A>(_:)(qword_100CAF4A8, v4, v19);
    v11 = v26;
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v23 = 134217984;
      v26 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "We have a local setting override. locationCountThresholdOverrideEnabled=true. (local override)locationsCountThreshold=%ld", v23, 0xCu);
      swift_slowDealloc(v23, -1, -1);
    }

  }
  return v11;
}

double sub_100413E88(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint32_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v32;
  uint64_t v33;
  double v34;
  _BYTE v35[8];

  v33 = *a1;
  v2 = type metadata accessor for AppStoreReviewConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AppConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[5];
  v11 = a1[6];
  sub_1000DB418(a1 + 2, v10);
  v12 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v10, v11);
  AppConfiguration.appStoreReview.getter(v12);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = AppStoreReviewConfiguration.timeIntervalBetweenPrompts.getter(v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_100BC2638 != -1)
    swift_once(&qword_100BC2638, sub_100819098);
  v16 = qword_100CAF498;
  v17 = sub_1000ABD74(&qword_100BE1128, v15, (uint64_t (*)(uint64_t))type metadata accessor for AppStoreReviewManager, (uint64_t)&unk_10099E788);
  Configurable.setting<A>(_:)(v16, v33, v17);
  if ((v35[7] & 1) != 0)
  {
    if (qword_100BC23E8 != -1)
      swift_once(&qword_100BC23E8, sub_1006F3764);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_1000AECD4(v18, (uint64_t)qword_100CAEFB0);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    v14 = 0.0;
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      v23 = "We have a local setting override. ignoreRepromptTimeInterval=true ... returning zero for timeIntervalBetweenPrompts";
      v24 = v20;
      v25 = v21;
      v26 = v22;
      v27 = 2;
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v24, v25, v23, v26, v27);
      swift_slowDealloc(v22, -1, -1);
    }
  }
  else
  {
    if (qword_100BC23E8 != -1)
      swift_once(&qword_100BC23E8, sub_1006F3764);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_1000AECD4(v28, (uint64_t)qword_100CAEFB0);
    v20 = Logger.logObject.getter(v29);
    v30 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v30))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v22 = 134217984;
      v34 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
      v23 = "Returning the app config timeIntervalBetweenPrompts. value=%f";
      v24 = v20;
      v25 = v30;
      v26 = v22;
      v27 = 12;
      goto LABEL_12;
    }
  }

  return v14;
}

_QWORD *sub_10041417C()
{
  _QWORD *v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 7);
  swift_release(v0[12]);
  return v0;
}

uint64_t sub_1004141A8()
{
  uint64_t v0;

  sub_10041417C();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t sub_1004141C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004141EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100414210()
{
  uint64_t v0;

  return sub_10041300C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100414218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1120;
  if (!qword_100BE1120)
  {
    v1 = objc_opt_self(UIWindowScene);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100BE1120);
  }
  return result;
}

uint64_t sub_100414254(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_100B59148, a1, a2, &unk_100BC2878);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x1C)
    return 28;
  else
    return v3;
}

uint64_t sub_1004142A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004142E4 + 4 * byte_10099E7D8[a1]))(0x776569567473694CLL, 0xEE006C6C6F726353);
}

unint64_t sub_1004142E4()
{
  return 0xD000000000000017;
}

uint64_t getEnumTagSinglePayload for PerformanceTest.Name(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE5)
  {
    if (a2 + 27 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 27) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 28;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1C;
  v5 = v6 - 28;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PerformanceTest.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 27 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 27) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE4)
    return ((uint64_t (*)(void))((char *)&loc_100414640 + 4 * byte_10099E7F9[v4]))();
  *a1 = a2 + 27;
  return ((uint64_t (*)(void))((char *)sub_100414674 + 4 * byte_10099E7F4[v4]))();
}

uint64_t sub_100414674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10041467C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100414684);
  return result;
}

uint64_t sub_100414690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100414698);
  *(_BYTE *)result = a2 + 27;
  return result;
}

uint64_t sub_10041469C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004146A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformanceTest.Name()
{
  return &type metadata for PerformanceTest.Name;
}

void sub_1004146C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_10068B7E8(*a1, *a2);
}

void sub_1004146CC()
{
  unsigned __int8 *v0;

  sub_1004A7604(*v0);
}

double sub_1004146D4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D8D7C(a1, *v1);
}

void sub_1004146DC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001D9DB0(a1, *v1);
}

uint64_t sub_1004146E4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100414254(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100414710@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1004142A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10041473C()
{
  unint64_t result;

  result = qword_100BE1130;
  if (!qword_100BE1130)
  {
    result = swift_getWitnessTable(&unk_10099E88C, &type metadata for PerformanceTest.Name);
    atomic_store(result, (unint64_t *)&qword_100BE1130);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DebugState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for DebugState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for DebugState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for PerformanceTest()
{
  return &type metadata for PerformanceTest;
}

void sub_100414838(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  double v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52[2];

  v2 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActivityAction(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  sub_1002CA830();
  if (v9 == 2)
  {
    v10 = sub_100414D84();
    sub_10009D46C((uint64_t)&type metadata for WeatherUserActivityHandler.Error, v10);
    v11 = sub_1000BAD00();
    *a1 = 0;
LABEL_19:
    *((_QWORD *)v8 + 1) = v11;
    v8[40] = 0;
    swift_willThrow();
    if (qword_100BC24B0 != -1)
      swift_once(&qword_100BC24B0, sub_1006F391C);
    v41 = type metadata accessor for Logger(0);
    sub_1000AECD4(v41, (uint64_t)qword_100CAF1F8);
    sub_1000B47AC();
    v42 = sub_1000B47AC();
    v50 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.error.getter(v50, v43);
    if (os_log_type_enabled(v50, v44))
    {
      v45 = (uint8_t *)sub_100098710(12);
      v46 = sub_100098710(32);
      v51 = (uint64_t)v4;
      v52[0] = v46;
      *(_DWORD *)v45 = 136446210;
      sub_1000B47AC();
      sub_1000BA294(&qword_100BD7910);
      v47 = String.init<A>(describing:)(&v51);
      v49 = v48;
      v51 = sub_1000CE1C8(v47, v48, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52);
      swift_bridgeObjectRelease(v49);
      sub_1000B47A4();
      sub_1000B47A4();
      _os_log_impl((void *)&_mh_execute_header, v50, v44, "WeatherUserActivityHandler failed to handle user activity; error=%{public}s",
        v45,
        0xCu);
      swift_arrayDestroy(v46, 1);
      sub_1000986F0(v46);
      sub_1000986F0((uint64_t)v45);

      sub_1000B47A4();
    }
    else
    {
      sub_1000B47A4();
      sub_1000B47A4();
      sub_1000B47A4();

    }
    return;
  }
  if ((v9 & 1) == 0)
  {
    v12 = sub_1000BAD10();
    v14 = 3;
LABEL_8:
    swift_storeEnumTagMultiPayload(v12, v13, v14);
    v19 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    v20 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_10026563C((uint64_t)v7, v19 & 1, v20 & 1);
    sub_1001C8E48((uint64_t)v7);
    return;
  }
  v15 = sub_1002CA8E0();
  if (v16)
  {
    v17 = v15;
    v18 = v16;
    type metadata accessor for WeatherLocation();
    LOBYTE(v17) = sub_1005DC0B0(v17, v18);
    swift_bridgeObjectRelease(v18);
    if ((v17 & 1) != 0)
    {
      v12 = sub_1000BAD10();
      v14 = 4;
      goto LABEL_8;
    }
  }
  v8 = a1;
  v21 = sub_1002CA9DC();
  if ((v22 & 1) != 0)
  {
    v38 = sub_100414D84();
    sub_10009D46C((uint64_t)&type metadata for WeatherUserActivityHandler.Error, v38);
    v11 = sub_1000BAD00();
    v39 = 3;
LABEL_18:
    *v8 = v39;
    goto LABEL_19;
  }
  v23 = *(double *)&v21;
  v8 = a1;
  v24 = sub_1002CA9EC();
  if ((v25 & 1) != 0)
  {
    v40 = sub_100414D84();
    sub_10009D46C((uint64_t)&type metadata for WeatherUserActivityHandler.Error, v40);
    v11 = sub_1000BAD00();
    v39 = 4;
    goto LABEL_18;
  }
  v26 = v24;
  v27 = *(double *)&v24;
  v28 = sub_1002CA8FC();
  v30 = v29;
  if (qword_100BC24B0 != -1)
    swift_once(&qword_100BC24B0, sub_1006F391C);
  v31 = type metadata accessor for Logger(0);
  v32 = sub_1000AECD4(v31, (uint64_t)qword_100CAF1F8);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = sub_100098710(42);
    *(_DWORD *)v35 = 141558787;
    v52[0] = 1752392040;
    sub_1000BC1B8();
    *(_WORD *)(v35 + 12) = 2049;
    *(double *)v52 = v23;
    sub_1000BC1B8();
    *(_WORD *)(v35 + 22) = 2160;
    v52[0] = 1752392040;
    sub_1000BC1B8();
    *(_WORD *)(v35 + 32) = 2049;
    v52[0] = v26;
    sub_1000BC1B8();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "WeatherUserActivityHandler got user activity with latitude and longitude; latitude=%{private,mask.hash}f, longitud"
      "e=%{private,mask.hash}f",
      (uint8_t *)v35,
      0x2Au);
    sub_1000986F0(v35);
  }

  v36 = type metadata accessor for Date(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v36);
  sub_1001C6D68();
  v37 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  sub_1001C6064(v28, v30, 16, (uint64_t)v4, v37, v23, v27);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v30);
  sub_1001C8EF4((uint64_t)v4);
}

uint64_t type metadata accessor for WeatherUserActivityHandler()
{
  return objc_opt_self(_TtC7Weather26WeatherUserActivityHandler);
}

unint64_t sub_100414D84()
{
  unint64_t result;

  result = qword_100BE11E0;
  if (!qword_100BE11E0)
  {
    result = swift_getWitnessTable(&unk_10099E8F4, &type metadata for WeatherUserActivityHandler.Error);
    atomic_store(result, (unint64_t *)&qword_100BE11E0);
  }
  return result;
}

double destroy for WeatherUserActivityHandler.Error(uint64_t a1)
{
  unsigned int v1;
  double result;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3)
    v1 = *(_DWORD *)a1 + 3;
  if (v1 == 2)
  {

  }
  else if (v1 == 1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for WeatherUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    v5 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 2;
    v6 = v5;
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (v3 == 1)
    {
      v4 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v7 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 40) = 0;
      swift_bridgeObjectRetain(v7);
    }
  }
  return a1;
}

uint64_t assignWithCopy for WeatherUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __n128 v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

    }
    else if (v4 == 1)
    {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
    }
    else
    {
      v5 = swift_bridgeObjectRelease();
    }
    v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 == 2)
    {
      v8 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 2;
      v9 = v8;
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v6 == 1)
      {
        v7 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v7;
        (**(void (***)(uint64_t, uint64_t, __n128))(v7 - 8))(a1 + 8, a2 + 8, v5);
        *(_BYTE *)(a1 + 40) = 1;
      }
      else
      {
        v10 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 8) = v10;
        *(_BYTE *)(a1 + 40) = 0;
        swift_bridgeObjectRetain(v10);
      }
    }
  }
  return a1;
}

uint64_t assignWithTake for WeatherUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

    }
    else if (v4 == 1)
    {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = 2;
    }
    else if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherUserActivityHandler.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WeatherUserActivityHandler.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_100415104(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_100415120(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WeatherUserActivityHandler.Error()
{
  return &type metadata for WeatherUserActivityHandler.Error;
}

uint64_t sub_100415158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  char v28;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100079FBC();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_1000C0CD0();
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v30 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v30 - v18;
  if ((static Date.== infix(_:_:)(a1, a2) & 1) == 0)
    goto LABEL_14;
  v31 = v7;
  v20 = type metadata accessor for DayPickerInput(0);
  sub_10094A284();
  if ((v21 & 1) == 0)
    goto LABEL_14;
  sub_10007C714(a1 + *(int *)(v20 + 24), (uint64_t)v19);
  v30 = v20;
  sub_10007C714(a2 + *(int *)(v20 + 24), (uint64_t)v17);
  v22 = v2 + *(int *)(v11 + 48);
  sub_10007C714((uint64_t)v19, v2);
  sub_10007C714((uint64_t)v17, v22);
  sub_100098750(v2);
  if (!v23)
  {
    sub_10007C714(v2, v3);
    sub_100098750(v22);
    if (!v23)
    {
      v24 = v31;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v10, v22, v6);
      sub_100086DA4((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v3, v10, v6, v25);
      v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v27(v10, v6);
      sub_1000987A0((uint64_t)v17);
      sub_1000987A0((uint64_t)v19);
      v27(v3, v6);
      sub_1000987A0(v2);
      if ((v26 & 1) != 0)
        goto LABEL_13;
LABEL_14:
      v28 = 0;
      return v28 & 1;
    }
    sub_100021A14((uint64_t)v17, (uint64_t *)&unk_100BD35A0);
    sub_100021A14((uint64_t)v19, (uint64_t *)&unk_100BD35A0);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v3, v6);
LABEL_11:
    sub_100021A14(v2, &qword_100BC4978);
    goto LABEL_14;
  }
  sub_1000987A0((uint64_t)v17);
  sub_1000987A0((uint64_t)v19);
  sub_100098750(v22);
  if (!v23)
    goto LABEL_11;
  sub_100021A14(v2, (uint64_t *)&unk_100BD35A0);
LABEL_13:
  v28 = static TimeZone.== infix(_:_:)(a1 + *(int *)(v30 + 28), a2 + *(int *)(v30 + 28));
  return v28 & 1;
}

uint64_t sub_100415414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD, _QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD, _QWORD);
  uint64_t v81;
  NSObject *v82;
  uint64_t v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int EnumCaseMultiPayload;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(_QWORD, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t result;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  uint64_t v129;
  os_log_type_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t (*v142)(char *, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  NSObject *v153;
  uint64_t v154;
  os_log_type_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  void (*v210)(_QWORD, _QWORD);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t (*v214)(char *, uint64_t);
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t (*v220)(_QWORD, _QWORD);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;

  v223 = a2;
  v224 = a1;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v197 = v5;
  v6 = sub_10009876C();
  v196 = type metadata accessor for DayWeather(v6);
  v195 = *(_QWORD *)(v196 - 8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v193 = v8;
  sub_1000BA294(&qword_100BCB130);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v208 = v10;
  v11 = sub_10009876C();
  v200 = type metadata accessor for Calendar(v11);
  v199 = *(_QWORD *)(v200 - 8);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v219 = v13;
  v14 = sub_10009876C();
  v15 = type metadata accessor for TimeZone(v14);
  v213 = *(_QWORD *)(v15 - 8);
  v214 = (uint64_t (*)(char *, uint64_t))v15;
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v212 = v17;
  v18 = sub_10009876C();
  v207 = type metadata accessor for CurrentWeather(v18);
  v206 = *(_QWORD *)(v207 - 8);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v204 = v20;
  v21 = sub_10009876C();
  v22 = type metadata accessor for Date(v21);
  v211 = *(_QWORD *)(v22 - 8);
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v24);
  sub_1000860D0();
  v216 = v25;
  __chkstk_darwin(v26);
  sub_1000860D0();
  v210 = v27;
  __chkstk_darwin(v28);
  v217 = (char *)&v191 - v29;
  v30 = sub_10009876C();
  v202 = type metadata accessor for WeatherData(v30);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100088FDC();
  v218 = v32;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_100098728();
  v36 = v35 - v34;
  v37 = type metadata accessor for LocationWeatherDataState(0);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_1000C0CD0();
  __chkstk_darwin(v39);
  v221 = (uint64_t)&v191 - v40;
  sub_1000BA294(&qword_100BD0D78);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_100098728();
  v44 = v43 - v42;
  v45 = type metadata accessor for ConditionDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v46);
  sub_1000986FC();
  v220 = v47;
  v49 = __chkstk_darwin(v48);
  v51 = (char *)&v191 - v50;
  __chkstk_darwin(v49);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v52);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v53);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v54);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v55);
  v57 = (char *)&v191 - v56;
  v58 = type metadata accessor for DayPickerInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v59);
  sub_100079FBC();
  Date.init()(v60);
  v61 = v2 + *(int *)(v58 + 24);
  v209 = v22;
  v62 = _s7Weather24LocationCompositionStateOwst_0(v61, 1, 1, v22);
  static TimeZone.current.getter(v62);
  v222 = v58;
  v63 = *(int *)(v58 + 20);
  v64 = v45;
  v65 = v224;
  *(_QWORD *)(v2 + v63) = _swiftEmptyArrayStorage;
  sub_100276450(v65, v44);
  if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v64) == 1)
  {
    sub_100021A14(v44, &qword_100BD0D78);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v66 = sub_100098720();
    v67 = sub_1000AECD4(v66, (uint64_t)qword_100CAF0E8);
    v68 = Logger.logObject.getter(v67);
    v70 = static os_log_type_t.error.getter(v68, v69);
    if (os_log_type_enabled(v68, v70))
    {
      v71 = (uint8_t *)sub_100098710(2);
      *(_WORD *)v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v70, "Failed to create DayPickerInput due to missing conditionDetailViewState.", v71, 2u);
      sub_1000986F0((uint64_t)v71);
    }

LABEL_21:
    v146 = v2;
LABEL_22:
    v147 = v223;
    sub_10007802C(v146, v223, type metadata accessor for DayPickerInput);
    v148 = v222;
    return _s7Weather24LocationCompositionStateOwst_0(v147, 0, 1, v148);
  }
  sub_10007802C(v44, (uint64_t)v57, type metadata accessor for ConditionDetailViewState);
  v72 = *(_QWORD *)(v65 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v73 = *(int *)(v64 + 20);
  v215 = v57;
  v74 = &v57[v73];
  swift_bridgeObjectRetain(v72);
  v76 = Location.id.getter(v75);
  sub_1000EED10(v76, v77, v72);
  sub_1000986C4();
  swift_bridgeObjectRelease(v72);
  if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v37) == 1)
  {
    v224 = v64;
    sub_100021A14(v36, &qword_100BC3380);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v78 = sub_100098720();
    sub_1000AECD4(v78, (uint64_t)qword_100CAF0E8);
    v79 = (uint64_t)v215;
    sub_100099904((uint64_t)v215, (uint64_t)v51);
    v80 = v220;
    sub_100099904(v79, (uint64_t)v220);
    v82 = Logger.logObject.getter(v81);
    v84 = static os_log_type_t.error.getter(v82, v83);
    if (os_log_type_enabled(v82, v84))
    {
      v85 = sub_100098710(22);
      v192 = v2;
      v86 = v85;
      v87 = sub_100098710(64);
      v226 = v87;
      *(_DWORD *)v86 = 136315394;
      v88 = sub_1000D9588();
      sub_100086DA4(&qword_100BD0D80, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition, (uint64_t)&protocol conformance descriptor for DetailCondition);
      v89 = dispatch thunk of CustomStringConvertible.description.getter(v88);
      v225 = sub_100098CFC(v89, v90);
      sub_1000C5E90();
      sub_1000986C4();
      sub_10009DA28((uint64_t)v51);
      *(_WORD *)(v86 + 12) = 2080;
      sub_1000992C4();
      sub_100086DA4((unint64_t *)&qword_100BC5FE0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
      v91 = sub_1000C0A58();
      v93 = sub_100098CFC(v91, v92);
      sub_1000D95F8(v93);
      sub_1000986C4();
      sub_10009DA28((uint64_t)v80);
      _os_log_impl((void *)&_mh_execute_header, v82, v84, "Failed to create DayPickerInput due to missing weather data for location; condition=%s, location=%s",
        (uint8_t *)v86,
        0x16u);
      sub_1000C6694(v87);
      sub_1000986F0(v87);
      v94 = v86;
      v2 = v192;
      sub_1000986F0(v94);

      v95 = (uint64_t)v215;
    }
    else
    {

      sub_10009EFA8((uint64_t)v80);
      sub_10009EFA8((uint64_t)v51);
      v95 = v79;
    }
    sub_1000215BC(v95, type metadata accessor for ConditionDetailViewState);
    goto LABEL_21;
  }
  v96 = v221;
  sub_10007802C(v36, v221, type metadata accessor for LocationWeatherDataState);
  sub_1000BCF30(v96, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3);
  v192 = v2;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1000215BC(v3, type metadata accessor for LocationWeatherDataState);
    v106 = (uint64_t)v215;
    if (qword_100BC2450 == -1)
    {
LABEL_25:
      v149 = sub_100098720();
      sub_1000AECD4(v149, (uint64_t)qword_100CAF0E8);
      v150 = v203;
      sub_1000BCF30(v106, v203);
      v151 = v205;
      sub_1000BCF30(v106, v205);
      v153 = Logger.logObject.getter(v152);
      v155 = static os_log_type_t.error.getter(v153, v154);
      if (os_log_type_enabled(v153, v155))
      {
        v156 = sub_100098710(22);
        v224 = v64;
        v157 = v156;
        v158 = sub_100098710(64);
        v226 = v158;
        *(_DWORD *)v157 = 136315394;
        v159 = sub_1000D9588();
        sub_100086DA4(&qword_100BD0D80, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition, (uint64_t)&protocol conformance descriptor for DetailCondition);
        v160 = dispatch thunk of CustomStringConvertible.description.getter(v159);
        v225 = sub_100098CFC(v160, v161);
        v162 = sub_1000DB9E0();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v162, v163);
        sub_1000986C4();
        sub_1000215BC(v150, type metadata accessor for ConditionDetailViewState);
        *(_WORD *)(v157 + 12) = 2080;
        v164 = v96;
        v165 = sub_1000992C4();
        sub_100086DA4((unint64_t *)&qword_100BC5FE0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
        v166 = dispatch thunk of CustomStringConvertible.description.getter(v165);
        v225 = sub_100098CFC(v166, v167);
        sub_1000C5E90();
        sub_1000986C4();
        sub_10009EFA8(v151);
        _os_log_impl((void *)&_mh_execute_header, v153, v155, "Failed to create DayPickerInput due to missing weather data; condition=%s, location=%s",
          (uint8_t *)v157,
          0x16u);
        sub_1000C6694(v158);
        sub_1000986F0(v158);
        sub_1000986F0(v157);

        sub_1000215BC(v164, type metadata accessor for LocationWeatherDataState);
        v168 = (uint64_t)v215;
      }
      else
      {

        sub_1000215BC(v151, type metadata accessor for ConditionDetailViewState);
        sub_1000215BC(v150, type metadata accessor for ConditionDetailViewState);
        sub_1000998D4(v169, type metadata accessor for LocationWeatherDataState);
        v168 = v106;
      }
      sub_1000215BC(v168, type metadata accessor for ConditionDetailViewState);
      v148 = v222;
      v147 = v223;
      sub_10007802C(v192, v223, type metadata accessor for DayPickerInput);
      return _s7Weather24LocationCompositionStateOwst_0(v147, 0, 1, v148);
    }
LABEL_39:
    swift_once(&qword_100BC2450, sub_1006F3844);
    goto LABEL_25;
  }
  v224 = v64;
  v98 = sub_1000BA294(&qword_100BC3358);
  v99 = v3 + *(int *)(v98 + 48);
  v100 = v3 + *(int *)(v98 + 64);
  sub_10007802C(v3, v218, type metadata accessor for WeatherData);
  sub_1000215BC(v100, type metadata accessor for NewsDataModel);
  sub_1000215BC(v99, type metadata accessor for PreprocessedWeatherData);
  v101 = v204;
  v103 = WeatherDataModel.currentWeather.getter(v102);
  v104 = v210;
  CurrentWeather.date.getter(v103);
  v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v206 + 8))(v101, v207);
  v106 = (uint64_t)v74;
  v107 = v212;
  Location.timeZone.getter(v105);
  Date.startOfDay(timeZone:)(v107);
  sub_1000D0CFC();
  v108 = v209;
  v220 = *(uint64_t (**)(_QWORD, _QWORD))(v211 + 8);
  v109 = v220(v104, v209);
  v207 = v106;
  Location.timeZone.getter(v109);
  v110 = v219;
  static Calendar.currentCalendar(with:)(v107);
  sub_1000D0CFC();
  v111 = v216;
  v112 = Date.wc_addDays(_:calendar:)(-1, v110);
  v113 = WeatherDataModel.dailyForecast.getter(v112);
  __chkstk_darwin(v113);
  *(&v191 - 2) = v111;
  v64 = 0;
  sub_1000A855C((uint64_t)sub_100280CD0, (uint64_t)(&v191 - 4));
  result = sub_1000A8EAC(11, v114);
  v119 = (v118 >> 1) - v117;
  v120 = (uint64_t)v215;
  if (__OFSUB__(v118 >> 1, v117))
  {
    __break(1u);
    goto LABEL_39;
  }
  v121 = result;
  v122 = v201;
  if (v119 < 7)
  {
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v123 = sub_100098720();
    sub_1000AECD4(v123, (uint64_t)qword_100CAF0E8);
    sub_100099904(v120, v122);
    v124 = v120;
    v125 = v120;
    v126 = v198;
    sub_100099904(v124, v198);
    v127 = swift_unknownObjectRetain(v121);
    v128 = Logger.logObject.getter(v127);
    v130 = static os_log_type_t.error.getter(v128, v129);
    v131 = v130;
    if (os_log_type_enabled(v128, v130))
    {
      v132 = sub_100098710(32);
      LODWORD(v213) = v131;
      v133 = v132;
      v214 = (uint64_t (*)(char *, uint64_t))sub_100098710(64);
      v225 = v119;
      v226 = (uint64_t)v214;
      *(_DWORD *)v133 = 134218498;
      v134 = sub_1000DB9E0();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v134, v135);
      swift_unknownObjectRelease(v121);
      *(_WORD *)(v133 + 12) = 2080;
      v136 = sub_1000D9588();
      sub_100086DA4(&qword_100BD0D80, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition, (uint64_t)&protocol conformance descriptor for DetailCondition);
      v137 = dispatch thunk of CustomStringConvertible.description.getter(v136);
      v225 = sub_100098CFC(v137, v138);
      sub_1000C5E90();
      sub_1000986C4();
      sub_10009DA28(v122);
      *(_WORD *)(v133 + 22) = 2080;
      sub_1000992C4();
      sub_100086DA4((unint64_t *)&qword_100BC5FE0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
      v139 = sub_1000C0A58();
      v141 = sub_100098CFC(v139, v140);
      sub_1000D95F8(v141);
      sub_1000986C4();
      sub_10009DA28(v126);
      _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v213, "Failed to create DayPickerInput due to missing daily data; dayCount=%ld, condition=%s, location=%s",
        (uint8_t *)v133,
        0x20u);
      v142 = v214;
      sub_1000C6694((uint64_t)v214);
      sub_1000986F0((uint64_t)v142);
      sub_1000986F0(v133);
      swift_unknownObjectRelease(v121);

      v143 = v209;
      sub_1000DA578();
      sub_1000C4980();
      v144 = v142(v217, v143);
      sub_1000DA98C(v144, type metadata accessor for WeatherData);
      sub_1000215BC(v221, type metadata accessor for LocationWeatherDataState);
      v145 = (uint64_t)v215;
    }
    else
    {

      sub_10009EFA8(v126);
      sub_10009EFA8(v122);
      swift_unknownObjectRelease_n(v121, 2);
      sub_1000DA578();
      sub_1000C4980();
      v189 = sub_1000C1E50();
      sub_1000DA98C(v189, type metadata accessor for WeatherData);
      sub_1000998D4(v190, type metadata accessor for LocationWeatherDataState);
      v145 = v125;
    }
    sub_1000215BC(v145, type metadata accessor for ConditionDetailViewState);
    v146 = v192;
    goto LABEL_22;
  }
  v170 = v117;
  v171 = v117 + 1;
  if (__OFADD__(v117, 1))
  {
    __break(1u);
  }
  else if (v171 >= v117 && v171 < (uint64_t)(v118 >> 1))
  {
    v173 = v116;
    v174 = v118;
    v175 = (uint64_t)v215;
    v176 = v195;
    v177 = v193;
    v178 = v196;
    v179 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v195 + 16))(v193, v116 + *(_QWORD *)(v195 + 72) * v171, v196);
    v180 = v210;
    DayWeather.date.getter(v179);
    (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v177, v178);
    v181 = v211;
    v182 = v194;
    (*(void (**)(uint64_t, void (*)(uint64_t, uint64_t), uint64_t))(v211 + 16))(v194, v180, v108);
    v183 = swift_unknownObjectRetain(v121);
    v208 = sub_1002154A4(v183, v173, v170, v174);
    v184 = v197;
    v185 = sub_10007C714(v175 + *(int *)(v224 + 24), v197);
    v186 = v212;
    Location.timeZone.getter(v185);
    swift_unknownObjectRelease(v121);
    sub_1000DA578();
    v180(v216, v108);
    sub_1000C4980();
    v187 = sub_1000C1E50();
    sub_1000DA98C(v187, type metadata accessor for WeatherData);
    sub_1000215BC(v221, type metadata accessor for LocationWeatherDataState);
    sub_1000998D4(v188, type metadata accessor for ConditionDetailViewState);
    sub_1000215BC(v192, type metadata accessor for DayPickerInput);
    v147 = v223;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 32))(v223, v182, v108);
    v148 = v222;
    *(_QWORD *)(v147 + *(int *)(v222 + 20)) = v208;
    sub_10016C5F4(v184, v147 + *(int *)(v148 + 24));
    (*(void (**)(uint64_t, uint64_t, uint64_t (*)(char *, uint64_t)))(v213 + 32))(v147 + *(int *)(v148 + 28), v186, v214);
    return _s7Weather24LocationCompositionStateOwst_0(v147, 0, 1, v148);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DayPickerInputFactory()
{
  return objc_opt_self(_TtC7Weather21DayPickerInputFactory);
}

uint64_t *sub_100416414(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    v12 = (char *)a1 + v10;
    v13 = (char *)a2 + v10;
    swift_bridgeObjectRetain(v11);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v7))
    {
      v14 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v12, (uint64_t *)v13, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v7);
    }
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t sub_100416544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v4))
    v5(v6, v4);
  v7 = a1 + *(int *)(a2 + 28);
  v8 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

char *sub_1004165E8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = *(_QWORD *)&a2[v8];
  *(_QWORD *)&a1[v8] = v10;
  v11 = &a1[v9];
  v12 = &a2[v9];
  swift_bridgeObjectRetain(v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v6))
  {
    v13 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7(v11, v12, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v6);
  }
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

char *sub_1004166EC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = *(_QWORD *)&a2[v9];
  *(_QWORD *)&a1[v9] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v11], 1, v6);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    if (!v15)
    {
      v8(v12, v13, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v13, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v6);
LABEL_7:
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

char *sub_10041684C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

char *sub_10041694C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_100416AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100416AB0);
}

uint64_t sub_100416AB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_100098A00();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v11;
      v12 = a3[6];
    }
    else
    {
      v7 = type metadata accessor for TimeZone(0);
      v12 = a3[7];
    }
    v8 = v4 + v12;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + a3[5]);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100416B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100416B74);
}

uint64_t sub_100416B74(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_100098A00();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + a4[5]) = (v4 - 1);
      return result;
    }
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[6];
    }
    else
    {
      v9 = type metadata accessor for TimeZone(0);
      v12 = a4[7];
    }
    v10 = v5 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t type metadata accessor for DayPickerInput(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE12D8;
  if (!qword_100BE12D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DayPickerInput);
  return result;
}

void sub_100416C60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_10015BB24(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for TimeZone(319);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

ValueMetadata *type metadata accessor for AutomationState()
{
  return &type metadata for AutomationState;
}

uint64_t sub_100416D20(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001009FBDC0)
  {
    swift_bridgeObjectRelease(0x80000001009FBDC0);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x80000001009FBDC0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

unint64_t sub_100416DA4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_100416DC0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1000BA294(&qword_100BE1340);
  sub_1000BA514();
  __chkstk_darwin(v5);
  sub_100094EC4();
  v6 = a1[3];
  v7 = a1[4];
  sub_1000DB418(a1, v6);
  v8 = sub_100417250();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for AutomationState.CodingKeys, &type metadata for AutomationState.CodingKeys, v8, v6, v7);
  v13 = a2;
  v9 = sub_1000BA294(&qword_100BE1330);
  v10 = sub_10041728C(&qword_100BE1348, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v13, v11, v2, v9, v10);
  return sub_1000BA528();
}

_QWORD *sub_100416EB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;

  sub_1000BA294(&qword_100BE1320);
  sub_1000BA514();
  __chkstk_darwin(v4);
  sub_100094EC4();
  v5 = a1[3];
  v6 = a1[4];
  v7 = sub_1000DB418(a1, v5);
  v8 = sub_100417250();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for AutomationState.CodingKeys, &type metadata for AutomationState.CodingKeys, v8, v5, v6);
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    v9 = sub_1000BA294(&qword_100BE1330);
    sub_10041728C(&qword_100BE1338, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v9, v10, v2);
    sub_1000BA528();
    v7 = v12;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  return v7;
}

uint64_t sub_100416FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100416D20(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100416FFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100417250();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100417024(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100417250();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10041704C(_QWORD *a1, _QWORD *a2)
{
  return sub_100416D1C(*a1, *a2);
}

_QWORD *sub_100417058@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_100416EB4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_100417080(_QWORD *a1)
{
  uint64_t *v1;

  return sub_100416DC0(a1, *v1);
}

uint64_t sub_100417098@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v8;

  v4 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v4, &v8);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 40) = 0x80000001009FBDC0;
  *(_QWORD *)(inited + 72) = sub_1000BA294(&qword_100BE1330);
  *(_QWORD *)(inited + 48) = a1;
  swift_bridgeObjectRetain(a1);
  v6 = Dictionary.init(dictionaryLiteral:)(inited);
  a2[3] = sub_1000BA294(&qword_100BE1350);
  a2[4] = sub_1004172EC();
  sub_10005F164(a2);
  return ShortDescription.init(name:_:)(0x6974616D6F747541, 0xEF65746174536E6FLL, v6, &type metadata for AutomationState);
}

uint64_t sub_1004171A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_100417098(*v1, a1);
}

uint64_t sub_1004171A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100417330();
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_1004171D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1006954E4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1004171F8(uint64_t a1)
{
  uint64_t *v1;

  return sub_100695518(a1, *v1);
}

unint64_t sub_100417214()
{
  unint64_t result;

  result = qword_100BE1318;
  if (!qword_100BE1318)
  {
    result = swift_getWitnessTable(&unk_10099EA6C, &type metadata for AutomationState);
    atomic_store(result, (unint64_t *)&qword_100BE1318);
  }
  return result;
}

unint64_t sub_100417250()
{
  unint64_t result;

  result = qword_100BE1328;
  if (!qword_100BE1328)
  {
    result = swift_getWitnessTable(&unk_10099EC00, &type metadata for AutomationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE1328);
  }
  return result;
}

uint64_t sub_10041728C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100075EB0(&qword_100BE1330);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004172EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1358;
  if (!qword_100BE1358)
  {
    v1 = sub_100075EB0(&qword_100BE1350);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1358);
  }
  return result;
}

unint64_t sub_100417330()
{
  unint64_t result;

  result = qword_100BE1360;
  if (!qword_100BE1360)
  {
    result = swift_getWitnessTable(&unk_10099EA94, &type metadata for AutomationState);
    atomic_store(result, (unint64_t *)&qword_100BE1360);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AutomationState.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004173AC + 4 * byte_10099EA00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004173CC + 4 * byte_10099EA05[v4]))();
}

_BYTE *sub_1004173AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004173CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004173D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004173DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004173E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004173EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AutomationState.CodingKeys()
{
  return &type metadata for AutomationState.CodingKeys;
}

unint64_t sub_10041740C()
{
  unint64_t result;

  result = qword_100BE1368;
  if (!qword_100BE1368)
  {
    result = swift_getWitnessTable(&unk_10099EBD8, &type metadata for AutomationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE1368);
  }
  return result;
}

unint64_t sub_10041744C()
{
  unint64_t result;

  result = qword_100BE1370;
  if (!qword_100BE1370)
  {
    result = swift_getWitnessTable(&unk_10099EB48, &type metadata for AutomationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE1370);
  }
  return result;
}

unint64_t sub_10041748C()
{
  unint64_t result;

  result = qword_100BE1378;
  if (!qword_100BE1378)
  {
    result = swift_getWitnessTable(&unk_10099EB70, &type metadata for AutomationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE1378);
  }
  return result;
}

void sub_1004174C8()
{
  qword_100CAEB58 = 0x4018000000000000;
}

void sub_1004174D8()
{
  qword_100CAEB60 = 0x4030000000000000;
}

void sub_1004174E8()
{
  qword_100CAEB68 = 0;
}

void sub_1004174F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  char v58[24];

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v48 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v48 - v12;
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  swift_beginAccess(&xmmword_100CAE588, v58, 0, 0);
  sub_100417998((uint64_t)&xmmword_100CAE588, (uint64_t)v55);
  v14 = v56;
  if (v56)
  {
    v51 = v1;
    v52 = v0;
    v53 = v5;
    v54 = v4;
    v15 = v57;
    sub_1000DB418(v55, v56);
    v16 = sub_1000BA294(&qword_100BE1380);
    v17 = dispatch thunk of ResolverType.resolve<A>(_:)(v16, v16, v14, v15);
    if (v17)
    {
      v18 = v17;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v55);
      v19 = type metadata accessor for JSONEncoder(0);
      swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
      v20 = JSONEncoder.init()();
      v50 = v18;
      v21 = sub_100081FF8();
      v22 = *(_QWORD *)(v21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
      v23 = *(_QWORD *)(v21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
      v25 = *(_QWORD *)(v21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
      v24 = *(_QWORD *)(v21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v24);
      swift_release(v21);
      v55[0] = v22;
      v55[1] = v23;
      v55[2] = v25;
      v56 = v24;
      v26 = sub_1001F57A4();
      v27 = dispatch thunk of JSONEncoder.encode<A>(_:)(v55, &type metadata for WeatherDataState, v26);
      v48 = v28;
      v49 = v27;
      swift_release(v20);
      sub_1000986E8();
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v23);
      v29 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      v30 = objc_msgSend(v29, "temporaryDirectory");

      static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v55[0] = 0;
      v55[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease(v55[1]);
      v55[0] = 0xD000000000000013;
      v55[1] = 0x8000000100A02B60;
      v32 = UUID.init()(v31);
      v33 = UUID.uuidString.getter(v32);
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v3, v52);
      v36._countAndFlagsBits = v33;
      v36._object = v35;
      String.append(_:)(v36);
      swift_bridgeObjectRelease(v35);
      URL.appendingPathComponent(_:)(v55[0], v55[1]);
      sub_1000986E8();
      sub_100099A8C((uint64_t)v8);
      URL.appendingPathExtension(_:)(1852797802, 0xE400000000000000);
      sub_100099A8C((uint64_t)v11);
      v38 = v48;
      v37 = v49;
      Data.write(to:options:)(v13, 0, v49, v48);
      v39 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
      v40 = URL.path.getter(v39);
      sub_100417BD4(v40, v41, v39);

      v42 = sub_1000BA294(&qword_100BE1388);
      v43 = swift_allocObject(v42, 64, 7);
      *(_OWORD *)(v43 + 16) = xmmword_10097CA50;
      v55[0] = 0;
      v55[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(v55[1]);
      strcpy((char *)v55, "File saved to ");
      HIBYTE(v55[1]) = -18;
      v44 = URL.path(percentEncoded:)(1);
      String.append(_:)(v44);
      v45 = sub_1000986E8();
      v46 = v55[0];
      v47 = v55[1];
      *(_QWORD *)(v43 + 56) = &type metadata for String;
      *(_QWORD *)(v43 + 32) = v46;
      *(_QWORD *)(v43 + 40) = v47;
      print(_:separator:terminator:)(v43, 32, 0xE100000000000000, 10, 0xE100000000000000, v45);
      swift_bridgeObjectRelease(v43);
      sub_10021D04C(v37, v38);
      swift_release(v50);
      sub_100099A8C((uint64_t)v13);
      sub_100098640();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  swift_unexpectedError(v14, "Weather/DemoPresetSaveWeatherMainStateButton.swift", 50, 1, 24);
  __break(1u);
}

uint64_t sub_100417998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCED50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004179E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for SettingCellStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100417A24@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10099EC50);
  v5 = swift_getKeyPath(&unk_10099EC88);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

void sub_100417AC4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, __n128);
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  _QWORD v19[8];

  v5 = *(_QWORD *)(a4 + a3 - 24);
  v6 = *(_QWORD *)(a4 + a3 - 16);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v8 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v19 - v13;
  v15 = *(void (**)(char *, __n128))(v8 + 16);
  v15((char *)v19 - v13, v12);
  v16 = *a2;
  v19[4] = v5;
  v19[5] = v6;
  v19[6] = v7;
  KeyPath = swift_getKeyPath(&unk_10099EC50);
  v19[0] = v5;
  v19[1] = v6;
  v19[2] = v7;
  v18 = swift_getKeyPath(&unk_10099EC88);
  ((void (*)(char *, char *, uint64_t))v15)(v10, v14, v5);
  swift_retain();
  static Published.subscript.setter(v10, v16, KeyPath, v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v5);
  sub_100098640();
}

void sub_100417BD4(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5;

  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "setString:", v5, swift_bridgeObjectRelease(a2).n128_f64[0]);

}

uint64_t sub_100417C2C()
{
  return 24;
}

__n128 sub_100417C38(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

_QWORD *sub_100417C4C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = type metadata accessor for SettingCellStyle(0);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_100417CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for SettingCellStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100417D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for SettingCellStyle(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_100417DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for SettingCellStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_100417E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for SettingCellStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100417E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for SettingCellStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100417F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100417F18);
}

uint64_t sub_100417F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SettingCellStyle(0);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100417F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100417F98);
}

uint64_t sub_100417F98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SettingCellStyle(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DemoPresetSaveWeatherMainStateButton(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE13F0;
  if (!qword_100BE13F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DemoPresetSaveWeatherMainStateButton);
  return result;
}

uint64_t sub_10041803C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10099ECD8;
  v4[1] = &unk_10099ECF0;
  result = type metadata accessor for SettingCellStyle(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t MKPlacemark.safeTitle.getter()
{
  return sub_1004180D0((SEL *)&selRef_title);
}

uint64_t MKPlacemark.safeSubtitle.getter()
{
  return sub_1004180D0((SEL *)&selRef_subtitle);
}

uint64_t sub_1004180D0(SEL *a1)
{
  void *v1;

  if (objc_msgSend(v1, "respondsToSelector:", *a1))
    return sub_10041811C(v1, a1);
  else
    return 0;
}

uint64_t sub_10041811C(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v4;
}

_QWORD *sub_100418178(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_100418220(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for LocationOfInterest(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100418264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *sub_1004182D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_100094D04(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100418338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_10041839C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10041840C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100418418);
}

uint64_t sub_100418418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000AE824();
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100418488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100418494);
}

uint64_t sub_100418494(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000AE824();
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SuggestedSearchResultRowView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE1488;
  if (!qword_100BE1488)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SuggestedSearchResultRowView);
  return result;
}

uint64_t sub_100418534(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "(";
  result = type metadata accessor for LocationOfInterest(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004185A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB46F8, 1);
}

void sub_1004185B8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t OpaqueTypeConformance2;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[16];
  uint64_t v90;
  _QWORD v91[6];

  v87 = a1;
  v86 = type metadata accessor for AutomationInfo(0);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = (_QWORD *)(v4 - v3);
  v6 = type metadata accessor for LocationOfInterestType(0);
  v82 = *(_QWORD *)(v6 - 8);
  v83 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v81 = v8;
  type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v78 = type metadata accessor for SearchResultButtonStyle(0);
  sub_10009D98C();
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v75 - v17;
  v79 = sub_1000DCEB4();
  v19 = *(_QWORD *)(v79 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v79);
  v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1000BA294(&qword_100BE14C0);
  v77 = *(_QWORD *)(v88 - 8);
  sub_10009D98C();
  __chkstk_darwin(v22);
  sub_100098728();
  v25 = v24 - v23;
  v26 = sub_1000BA294(&qword_100BE14C8);
  v27 = *(_QWORD *)(v26 - 8);
  v84 = v26;
  v85 = v27;
  sub_10009D98C();
  __chkstk_darwin(v28);
  sub_100098728();
  v76 = v30 - v29;
  sub_1000BA294(&qword_100BD9B38);
  sub_10009D98C();
  __chkstk_darwin(v31);
  sub_100088FDC();
  v80 = v32;
  v75 = v1;
  sub_10041906C(v1, (uint64_t)v21);
  v33 = *(unsigned __int8 *)(v19 + 80);
  v34 = (v33 + 16) & ~v33;
  v35 = swift_allocObject(&unk_100B734F0, v34 + v20, v33 | 7);
  sub_1000DB674((uint64_t)v21, v35 + v34, type metadata accessor for SuggestedSearchResultRowView);
  v90 = v1;
  v36 = sub_1000BA294(&qword_100BE14D0);
  sub_10003D2DC(&qword_100BE14D8, &qword_100BE14D0);
  Button.init(action:label:)(sub_100419124, v35, sub_10041914C, v89, v36, v37);
  *v15 = swift_getKeyPath(&unk_10099EDD8);
  v38 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v15, v38, 0);
  sub_1000DB674((uint64_t)v15, (uint64_t)v18, type metadata accessor for SearchResultButtonStyle);
  sub_10003D2DC(&qword_100BE14E0, &qword_100BE14C0);
  v40 = v39;
  sub_10000F1C8(&qword_100BCD8B8, type metadata accessor for SearchResultButtonStyle);
  v42 = v41;
  v43 = v88;
  v44 = v78;
  View.buttonStyle<A>(_:)(v18, v88, v78, v40, v41);
  sub_1000215BC((uint64_t)v18, type metadata accessor for SearchResultButtonStyle);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v25, v43);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(2, 2);
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v45);
  v46 = v81;
  v48 = LocationOfInterest.type.getter(v47);
  v49 = LocationOfInterestType.title.getter(v48);
  v51 = v50;
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v46, v83);
  v52._countAndFlagsBits = v49;
  v52._object = v51;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v52);
  swift_bridgeObjectRelease();
  v53._countAndFlagsBits = 8236;
  v53._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v53);
  v54._countAndFlagsBits = ((uint64_t (*)(void))LocationOfInterest.searchDisplayAddress.getter)();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v54);
  swift_bridgeObjectRelease();
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v55);
  v56 = LocalizedStringKey.init(stringInterpolation:)(v12);
  v60 = Text.init(_:tableName:bundle:comment:)(v56, v58, v57 & 1, v59, 0, 0, 0, 0);
  v62 = v61;
  v64 = v63;
  v91[0] = v88;
  v91[1] = v44;
  v66 = v65 & 1;
  v91[2] = v40;
  v91[3] = v42;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v91, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v68 = v80;
  v69 = v84;
  v70 = v76;
  View.accessibilityLabel(_:)(v60, v62, v66, v64, v84, OpaqueTypeConformance2);
  sub_1000D31B4(v60, v62, v66);
  v71 = swift_bridgeObjectRelease();
  v72 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v85 + 8))(v70, v69, v71);
  *v5 = LocationOfInterest.searchDisplayAddress.getter(v72);
  v5[1] = v73;
  v74 = type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload(v5, v74, 0);
  swift_storeEnumTagMultiPayload(v5, v86, 1);
  sub_1003353A0();
  sub_1000215BC((uint64_t)v5, type metadata accessor for AutomationInfo);
  sub_100021A14(v68, &qword_100BD9B38);
}

uint64_t sub_100418AD8(_QWORD *a1)
{
  uint64_t v2;

  sub_1000DB418(a1, a1[3]);
  v2 = type metadata accessor for SuggestedSearchResultRowView(0);
  return sub_1005A1578((uint64_t)a1 + *(int *)(v2 + 20));
}

void sub_100418B18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4008000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v3 = sub_1000BA294(&qword_100BE14E8);
  sub_100418B64(a2 + *(int *)(v3 + 44));
}

void sub_100418B64(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t KeyPath;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD v27[2];

  v26 = a1;
  v1 = sub_1000BA294(&qword_100BE14F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - v5;
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v7);
  *((_QWORD *)v6 + 1) = 0x4008000000000000;
  v6[16] = 0;
  v8 = sub_1000BA294(&qword_100BE14F8);
  sub_100418D6C((uint64_t)&v6[*(int *)(v8 + 44)]);
  type metadata accessor for SuggestedSearchResultRowView(0);
  v27[0] = LocationOfInterest.searchDisplayAddress.getter();
  v27[1] = v9;
  v10 = sub_100114EF8();
  v11 = Text.init<A>(_:)(v27, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  KeyPath = swift_getKeyPath(&unk_10099EE08);
  v20 = static Color.secondary.getter(v19);
  v21 = swift_getKeyPath(&unk_10099EE38);
  v25 = v3;
  sub_100033A34((uint64_t)v6, (uint64_t)v3, &qword_100BE14F0);
  v22 = (uint64_t)v3;
  v23 = v26;
  sub_100033A34(v22, v26, &qword_100BE14F0);
  v24 = v23 + *(int *)(sub_1000BA294(&qword_100BE1500) + 48);
  *(_QWORD *)v24 = v11;
  *(_QWORD *)(v24 + 8) = v13;
  *(_BYTE *)(v24 + 16) = v17;
  *(_QWORD *)(v24 + 24) = v15;
  *(_QWORD *)(v24 + 32) = KeyPath;
  *(_QWORD *)(v24 + 40) = 1;
  *(_BYTE *)(v24 + 48) = 0;
  *(_QWORD *)(v24 + 56) = v21;
  *(_QWORD *)(v24 + 64) = v20;
  sub_1000D55D4(v11, v13, v17);
  swift_bridgeObjectRetain(v15);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100021A14((uint64_t)v6, &qword_100BE14F0);
  sub_1000D31B4(v11, v13, v17);
  swift_release(v20);
  swift_release(v21);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v25, &qword_100BE14F0);
}

void sub_100418D6C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v40 = a1;
  v1 = type metadata accessor for LocationOfInterestType(0);
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1000BA294(&qword_100BCF148);
  __chkstk_darwin(v37);
  v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Image.Scale(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BCF140);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v35 - v14;
  v15 = type metadata accessor for SuggestedSearchResultRowView(0);
  v16 = LocationOfInterest.imageName.getter(v15);
  v18 = Image.init(systemName:)(v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.small(_:), v6);
  KeyPath = swift_getKeyPath(&unk_10099EE68);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v37 + 28), v9, v6);
  *v5 = KeyPath;
  sub_100033A34((uint64_t)v5, (uint64_t)v12 + *(int *)(v10 + 36), &qword_100BCF148);
  *v12 = v18;
  swift_retain();
  sub_100021A14((uint64_t)v5, &qword_100BCF148);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release(v18);
  v20 = v36;
  v21 = sub_100419174((uint64_t)v12, v36);
  v22 = LocationOfInterest.type.getter(v21);
  v23 = LocationOfInterestType.title.getter(v22);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v3, v39);
  v41[0] = v23;
  v41[1] = v25;
  v26 = sub_100114EF8();
  v27 = Text.init<A>(_:)(v41, &type metadata for String, v26);
  v29 = v28;
  v31 = v30;
  LOBYTE(v18) = v32 & 1;
  sub_100033A34(v20, (uint64_t)v12, &qword_100BCF140);
  v33 = v40;
  sub_100033A34((uint64_t)v12, v40, &qword_100BCF140);
  v34 = v33 + *(int *)(sub_1000BA294(&qword_100BE1508) + 48);
  *(_QWORD *)v34 = v27;
  *(_QWORD *)(v34 + 8) = v29;
  *(_BYTE *)(v34 + 16) = v18;
  *(_QWORD *)(v34 + 24) = v31;
  sub_1000D55D4(v27, v29, v18);
  swift_bridgeObjectRetain(v31);
  sub_100021A14(v20, &qword_100BCF140);
  sub_1000D31B4(v27, v29, v18);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v12, &qword_100BCF140);
}

uint64_t sub_10041906C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SuggestedSearchResultRowView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004190B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_1000DCEB4() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v3));
  v6 = sub_1000AE824();
  sub_10003BC44(v6);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100419124()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000DCEB4() - 8) + 80);
  return sub_100418AD8((_QWORD *)(v0 + ((v1 + 16) & ~v1)));
}

void sub_10041914C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100418B18(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100419174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCF140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004191C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1510;
  if (!qword_100BE1510)
  {
    v1 = sub_100075EB0(&qword_100BD9B40);
    sub_100419244();
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1510);
  }
  return result;
}

unint64_t sub_100419244()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  result = qword_100BE1518;
  if (!qword_100BE1518)
  {
    v1 = sub_100075EB0(&qword_100BD9B38);
    v2 = sub_100075EB0(&qword_100BE14C0);
    v3 = type metadata accessor for SearchResultButtonStyle(255);
    sub_10003D2DC(&qword_100BE14E0, &qword_100BE14C0);
    v5 = v4;
    sub_10000F1C8(&qword_100BCD8B8, type metadata accessor for SearchResultButtonStyle);
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v5;
    v7[3] = v6;
    swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1518);
  }
  return result;
}

void sub_10041934C(uint64_t *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 == (id)1)
    sub_10041958C(*a1);
  sub_100079F70();
}

void sub_10041941C(uint64_t *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 == (id)1)
    sub_10041958C(*a1);
  sub_100079F70();
}

double sub_100419520()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  result = 0.0;
  if (!v1)
    result = 12.0;
  if (v1 == (id)5)
    return 20.0;
  return result;
}

BOOL sub_10041958C(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

double destroy for NotificationsState(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

_QWORD *_s7Weather26AirPollutantTableViewModelVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for WindCategoryTableViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for WindCategoryTableViewModel(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for AirPollutantTableViewModel()
{
  return &type metadata for AirPollutantTableViewModel;
}

unint64_t sub_1004196C0()
{
  unint64_t result;

  result = qword_100BE1520;
  if (!qword_100BE1520)
  {
    result = swift_getWitnessTable(&unk_10099EF4C, &type metadata for AirPollutantTableViewModel);
    atomic_store(result, (unint64_t *)&qword_100BE1520);
  }
  return result;
}

uint64_t sub_1004196FC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = a1[1];
  v6 = v4 == *a2 && v5 == a2[1];
  if (v6 || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2), result = 0, (v7 & 1) != 0))
  {
    sub_10008596C();
    if ((static NSObject.== infix(_:_:)(a1[2], a2[2]) & 1) != 0)
    {
      v9 = a1[3];
      v10 = a1[4];
      v11 = a2[3];
      if (v9 == v11 && v10 == a2[4])
        return 1;
      else
        return _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v11);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

double sub_1004197A0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = (id)v2[2];
  NSObject.hash(into:)(a1);

  v7 = v2[4];
  sub_10009EF94();
  sub_1000BAD50(a1);
  return sub_1000BAD38(v7);
}

void sub_100419814(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _BYTE v6[72];

  v2 = v1;
  sub_1000C4480(a1);
  v3 = *v1;
  v4 = v2[1];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  v5 = (id)v2[2];
  NSObject.hash(into:)(v6);

  sub_10009EF94();
  sub_1000BAD50((uint64_t)v6);
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  sub_1000BC1C4();
}

uint64_t sub_100419898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v8;

  v8 = a1 == a4 && a2 == a5;
  if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4) & 1) != 0)
    return sub_100947CA8(a3, a6);
  else
    return 0;
}

double sub_1004198F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a3);
  sub_1000BAD44(a1);
  swift_bridgeObjectRelease();
  sub_10009EF94();
  sub_10054A270();
  return sub_1000BAD38(a4);
}

void sub_100419944(uint64_t a1, uint64_t a2)
{
  _BYTE v3[72];

  sub_1000C4480(a1);
  swift_bridgeObjectRetain(a2);
  sub_1000BAD44((uint64_t)v3);
  swift_bridgeObjectRelease();
  sub_10009EF94();
  sub_10054A270();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  sub_1000BC1C4();
}

Swift::Int sub_1004199B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = v0[1];
  v4 = (void *)v0[2];
  v3 = v0[3];
  v5 = v0[4];
  Hasher.init(_seed:)(v8);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  v6 = v4;
  NSObject.hash(into:)(v8);

  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v8, v3, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100419A54(uint64_t *a1, uint64_t *a2)
{
  return sub_100419898(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

void sub_100419A70()
{
  uint64_t *v0;

  sub_100419944(*v0, v0[1]);
}

double sub_100419A7C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1004198F0(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_100419A88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  Hasher.init(_seed:)(v5);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v5, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(v3);
  sub_10054A270();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double destroy for AirPollutantTableViewModel.Row(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for AirPollutantTableViewModel.Row(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  v6 = a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v3);
  v7 = v5;
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithCopy for AirPollutantTableViewModel.Row(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  a1[3] = a2[3];
  v9 = a2[4];
  v10 = a1[4];
  a1[4] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

_QWORD *assignWithTake for AirPollutantTableViewModel.Row(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = (void *)a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 32);
  v6 = a1[4];
  a1[3] = *(_QWORD *)(a2 + 24);
  a1[4] = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for AirPollutantTableViewModel.Row()
{
  return &type metadata for AirPollutantTableViewModel.Row;
}

unint64_t sub_100419C6C()
{
  unint64_t result;

  result = qword_100BE1528;
  if (!qword_100BE1528)
  {
    result = swift_getWitnessTable(&unk_10099EFB8, &type metadata for AirPollutantTableViewModel.Row);
    atomic_store(result, (unint64_t *)&qword_100BE1528);
  }
  return result;
}

double destroy for ConditionDetailView(_QWORD *a1)
{
  double result;

  swift_release(a1[1]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 2);
  *(_QWORD *)&result = swift_release(a1[7]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ConditionDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v6 - 8);
  v9 = swift_retain(v4);
  v8(a1 + 16, v5, v7, v9);
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain(v10);
  return a1;
}

_QWORD *assignWithCopy for ConditionDetailView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v4);
  sub_100094D04(a1 + 2, a2 + 2);
  v5 = a2[7];
  v6 = a1[7];
  a1[7] = v5;
  swift_retain();
  swift_release(v6);
  return a1;
}

uint64_t assignWithTake for ConditionDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 16));
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_release(v8);
  return a1;
}

uint64_t sub_100419E14(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB47A4, 1);
}

void sub_100419E24()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  _BYTE v32[24];

  v1 = v0;
  v2 = (int *)sub_1000E7C34();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = sub_100099508();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = sub_1000BA294(&qword_100BE1530);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  type metadata accessor for ConditionDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100098728();
  v20 = v19 - v18;
  v21 = *(_QWORD *)(v0 + 8);
  swift_retain();
  sub_10017B3A8();
  swift_release(v21);
  if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v7) == 1)
  {
    swift_storeEnumTagMultiPayload(v16, v12, 0);
    sub_10000F1C8(&qword_100BE1538, type metadata accessor for ConditionDetailInnerView);
    sub_1000CC80C(v22, (uint64_t)&type metadata for EmptyView, v23, (uint64_t)&protocol witness table for EmptyView, v22);
  }
  else
  {
    sub_10007802C(v20, v11, type metadata accessor for ConditionDetailViewModel.Model);
    sub_100080C0C(v11, v6 + v2[7], type metadata accessor for ConditionDetailViewModel.Model);
    sub_10003B59C(v1 + 16, v6);
    v24 = *(_QWORD *)(v1 + 56);
    swift_beginAccess(&unk_100BE0830, v32, 1, 0);
    sub_10040922C();
    *(_QWORD *)(v6 + 40) = v25;
    v26 = (_QWORD *)(v6 + v2[8]);
    v31[0] = 0;
    swift_retain();
    State.init(wrappedValue:)(v31, &type metadata for CGFloat);
    v27 = v31[2];
    *v26 = v31[1];
    v26[1] = v27;
    v28 = v2[9];
    sub_100120350();
    *(_QWORD *)(v6 + v28) = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0xD000000000000013, 0x800000010099EFE0);
    *(_QWORD *)(v6 + 48) = v24;
    sub_100080C0C(v6, v16, type metadata accessor for ConditionDetailInnerView);
    swift_storeEnumTagMultiPayload(v16, v12, 1);
    sub_10000F1C8(&qword_100BE1538, type metadata accessor for ConditionDetailInnerView);
    sub_1000CC80C(v29, (uint64_t)&type metadata for EmptyView, v30, (uint64_t)&protocol witness table for EmptyView, v29);
    sub_1000215BC(v6, type metadata accessor for ConditionDetailInnerView);
    sub_1000215BC(v11, type metadata accessor for ConditionDetailViewModel.Model);
  }
}

uint64_t type metadata accessor for ConditionDetailInnerView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE1598, (uint64_t)&nominal type descriptor for ConditionDetailInnerView);
}

_QWORD *sub_10041A0EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int *v53;
  void (*v54)(char *, char *, uint64_t, __n128);
  __n128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v71 = a3;
    v72 = a2;
    v9 = *(int *)(a3 + 28);
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[2];
    v10[2] = v13;
    v14 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
    v15 = v14[6];
    v69 = (char *)v10 + v15;
    v16 = (char *)v11 + v15;
    v17 = type metadata accessor for Date(0);
    v18 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain(v12);
    v19 = swift_bridgeObjectRetain(v13);
    v68 = v17;
    v18(v69, v16, v17, v19);
    v20 = v14[7];
    v21 = (_QWORD *)((char *)v10 + v20);
    v22 = (_QWORD *)((char *)v11 + v20);
    v23 = (int *)type metadata accessor for DetailChartSelection(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v23))
    {
      v24 = sub_1000BA294(&qword_100BD0B58);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v26 = v22[1];
      *v21 = *v22;
      v21[1] = v26;
      v27 = v23[5];
      v28 = (char *)v21 + v27;
      v29 = (char *)v22 + v27;
      v30 = swift_bridgeObjectRetain(v26);
      v18(v28, v29, v68, v30);
      ((void (*)(char *, char *, uint64_t))v18)((char *)v21 + v23[6], (char *)v22 + v23[6], v68);
      ((void (*)(char *, char *, uint64_t))v18)((char *)v21 + v23[7], (char *)v22 + v23[7], v68);
      *(_QWORD *)((char *)v21 + v23[8]) = *(_QWORD *)((char *)v22 + v23[8]);
      v31 = v23[9];
      v32 = (char *)v21 + v31;
      v33 = (char *)v22 + v31;
      v32[8] = v33[8];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
    }
    v34 = v14[8];
    v35 = *(_QWORD *)((char *)v11 + v34);
    *(_QWORD *)((char *)v10 + v34) = v35;
    v36 = v14[9];
    v37 = (char *)v10 + v36;
    v38 = (char *)v11 + v36;
    v39 = type metadata accessor for DetailCondition(0);
    v40 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v39 - 8) + 16);
    v41 = swift_bridgeObjectRetain(v35);
    v40(v37, v38, v39, v41);
    v42 = v14[10];
    v43 = *(_QWORD *)((char *)v11 + v42);
    *(_QWORD *)((char *)v10 + v42) = v43;
    v44 = v14[11];
    v45 = (char *)v10 + v44;
    v46 = (char *)v11 + v44;
    v48 = *(_QWORD *)v46;
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v49 = *((_QWORD *)v46 + 2);
    *((_QWORD *)v45 + 2) = v49;
    v45[24] = v46[24];
    v50 = v14[12];
    v70 = (char *)v10 + v50;
    v51 = (char *)v11 + v50;
    v52 = type metadata accessor for Location(0);
    v53 = v14;
    v54 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v52 - 8) + 16);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v48);
    v55 = swift_bridgeObjectRetain(v49);
    v54(v70, v51, v52, v55);
    v56 = v53[13];
    v57 = (char *)v10 + v56;
    v58 = (char *)v11 + v56;
    v59 = type metadata accessor for LocationDetailEntity(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = *(int *)(v71 + 32);
    v61 = *(int *)(v71 + 36);
    v62 = (_QWORD *)((char *)v4 + v60);
    v63 = (uint64_t *)((char *)v72 + v60);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = *(void **)((char *)v72 + v61);
    *(_QWORD *)((char *)v4 + v61) = v65;
    swift_retain();
    v66 = v65;
  }
  return v4;
}

void sub_10041A404(_QWORD *a1, int *a2)
{
  char *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  int *v10;
  __n128 v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_release(a1[6]);
  v4 = (char *)a1 + a2[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  v6 = &v4[v5[6]];
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (uint64_t)&v4[v5[7]];
  v10 = (int *)type metadata accessor for DetailChartSelection(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, (uint64_t)v10))
  {
    v11 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v8)(v9 + v10[5], v7, v11);
    v8((char *)(v9 + v10[6]), v7);
    v8((char *)(v9 + v10[7]), v7);
  }
  swift_bridgeObjectRelease();
  v12 = &v4[v5[9]];
  v13 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = &v4[v5[12]];
  v15 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = &v4[v5[13]];
  v17 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  swift_release(*(_QWORD *)((char *)a1 + a2[8] + 8));

}

uint64_t sub_10041A5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t, __n128);
  __n128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v67 = a3;
  v68 = a2;
  v8 = *(int *)(a3 + 28);
  v69 = a1;
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[2];
  v9[2] = v12;
  v13 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  v14 = v13[6];
  v15 = (char *)v9 + v14;
  v16 = (char *)v10 + v14;
  v17 = type metadata accessor for Date(0);
  v18 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain(v11);
  v19 = swift_bridgeObjectRetain(v12);
  v18(v15, v16, v17, v19);
  v20 = v13[7];
  v21 = (_QWORD *)((char *)v9 + v20);
  v22 = (_QWORD *)((char *)v10 + v20);
  v23 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    v24 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v22[1];
    *v21 = *v22;
    v21[1] = v25;
    v26 = v23[5];
    v27 = (char *)v21 + v26;
    v28 = (char *)v22 + v26;
    v29 = swift_bridgeObjectRetain(v25);
    v18(v27, v28, v17, v29);
    ((void (*)(char *, char *, uint64_t))v18)((char *)v21 + v23[6], (char *)v22 + v23[6], v17);
    ((void (*)(char *, char *, uint64_t))v18)((char *)v21 + v23[7], (char *)v22 + v23[7], v17);
    *(_QWORD *)((char *)v21 + v23[8]) = *(_QWORD *)((char *)v22 + v23[8]);
    v30 = v23[9];
    v31 = (char *)v21 + v30;
    v32 = (char *)v22 + v30;
    v31[8] = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
  }
  v33 = v13[8];
  v34 = *(_QWORD *)((char *)v10 + v33);
  *(_QWORD *)((char *)v9 + v33) = v34;
  v35 = v13[9];
  v36 = (char *)v9 + v35;
  v37 = (char *)v10 + v35;
  v38 = type metadata accessor for DetailCondition(0);
  v39 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v38 - 8) + 16);
  v40 = swift_bridgeObjectRetain(v34);
  v39(v36, v37, v38, v40);
  v41 = v13[10];
  v42 = *(_QWORD *)((char *)v10 + v41);
  *(_QWORD *)((char *)v9 + v41) = v42;
  v43 = v13[11];
  v44 = (char *)v9 + v43;
  v45 = (char *)v10 + v43;
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *((_QWORD *)v44 + 1) = v46;
  v48 = *((_QWORD *)v45 + 2);
  *((_QWORD *)v44 + 2) = v48;
  v44[24] = v45[24];
  v49 = v13[12];
  v50 = (char *)v9 + v49;
  v51 = (char *)v10 + v49;
  v52 = type metadata accessor for Location(0);
  v53 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v52 - 8) + 16);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v47);
  v54 = swift_bridgeObjectRetain(v48);
  v53(v50, v51, v52, v54);
  v55 = v13[13];
  v56 = (char *)v9 + v55;
  v57 = (char *)v10 + v55;
  v58 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = *(int *)(v67 + 32);
  v60 = *(int *)(v67 + 36);
  v61 = (_QWORD *)(v69 + v59);
  v62 = (_QWORD *)(v68 + v59);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  v64 = *(void **)(v68 + v60);
  *(_QWORD *)(v69 + v60) = v64;
  swift_retain();
  v65 = v64;
  return v69;
}

_QWORD *sub_10041A880(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;

  sub_100094D04(a1, a2);
  a1[5] = a2[5];
  v6 = a1[6];
  a1[6] = a2[6];
  swift_retain();
  swift_release(v6);
  v72 = a1;
  v73 = a3;
  v7 = *(int *)(a3 + 28);
  v8 = (_QWORD *)((char *)a1 + v7);
  v74 = a2;
  v9 = (char *)a2 + v7;
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v9 + 2);
  v8[2] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  v13 = v12[6];
  v14 = (char *)v8 + v13;
  v15 = &v9[v13];
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(char *, char *, uint64_t))(v17 + 24);
  v18(v14, v15, v16);
  v19 = v12[7];
  v20 = (char *)v8 + v19;
  v21 = &v9[v19];
  v22 = (int *)type metadata accessor for DetailChartSelection(0);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, (uint64_t)v22);
  v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, (uint64_t)v22);
  if (!v23)
  {
    if (!v24)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v66 = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 1) = v66;
      swift_bridgeObjectRetain(v66);
      v67 = swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t, __n128))v18)(&v20[v22[5]], &v21[v22[5]], v16, v67);
      v18(&v20[v22[6]], &v21[v22[6]], v16);
      v18(&v20[v22[7]], &v21[v22[7]], v16);
      *(_QWORD *)&v20[v22[8]] = *(_QWORD *)&v21[v22[8]];
      v68 = v22[9];
      v69 = &v20[v68];
      v70 = &v21[v68];
      v71 = v70[8];
      *(_QWORD *)v69 = *(_QWORD *)v70;
      v69[8] = v71;
      goto LABEL_7;
    }
    sub_1000215BC((uint64_t)v20, type metadata accessor for DetailChartSelection);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v35 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v25 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v20 + 1) = v25;
  v26 = v22[5];
  v27 = &v20[v26];
  v28 = &v21[v26];
  v29 = *(void (**)(char *, char *, uint64_t, __n128))(v17 + 16);
  v30 = swift_bridgeObjectRetain(v25);
  v29(v27, v28, v16, v30);
  ((void (*)(char *, char *, uint64_t))v29)(&v20[v22[6]], &v21[v22[6]], v16);
  ((void (*)(char *, char *, uint64_t))v29)(&v20[v22[7]], &v21[v22[7]], v16);
  *(_QWORD *)&v20[v22[8]] = *(_QWORD *)&v21[v22[8]];
  v31 = v22[9];
  v32 = &v20[v31];
  v33 = &v21[v31];
  v34 = v33[8];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v34;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
LABEL_7:
  v36 = v12[8];
  v37 = *(_QWORD *)&v9[v36];
  *(_QWORD *)((char *)v8 + v36) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease();
  v38 = v12[9];
  v39 = (char *)v8 + v38;
  v40 = &v9[v38];
  v41 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  v42 = v12[10];
  v43 = *(_QWORD *)&v9[v42];
  *(_QWORD *)((char *)v8 + v42) = v43;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRelease();
  v44 = v12[11];
  v45 = (char *)v8 + v44;
  v46 = &v9[v44];
  v47 = *(_QWORD *)&v9[v44];
  *(_QWORD *)((char *)v8 + v44) = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease();
  *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
  v48 = *((_QWORD *)v46 + 2);
  *((_QWORD *)v45 + 2) = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease();
  v45[24] = v46[24];
  v49 = v12[12];
  v50 = (char *)v8 + v49;
  v51 = &v9[v49];
  v52 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
  v53 = v12[13];
  v54 = (char *)v8 + v53;
  v55 = &v9[v53];
  v56 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
  v57 = *(int *)(v73 + 32);
  v58 = (_QWORD *)((char *)v72 + v57);
  v59 = (_QWORD *)((char *)v74 + v57);
  *v58 = *v59;
  v60 = v58[1];
  v58[1] = v59[1];
  swift_retain();
  swift_release(v60);
  v61 = *(int *)(v73 + 36);
  v62 = *(void **)((char *)v74 + v61);
  v63 = *(void **)((char *)v72 + v61);
  *(_QWORD *)((char *)v72 + v61) = v62;
  v64 = v62;

  return v72;
}

uint64_t sub_10041AC6C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)(a2 + v6);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(a2 + v6 + 16);
  v9 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  v10 = v9[6];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v15 = v9[7];
  v16 = (_OWORD *)(v7 + v15);
  v17 = (_OWORD *)(v8 + v15);
  v18 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, (uint64_t)v18))
  {
    v19 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v14((uint64_t)v16 + v18[5], (uint64_t)v17 + v18[5], v13);
    v14((uint64_t)v16 + v18[6], (uint64_t)v17 + v18[6], v13);
    v14((uint64_t)v16 + v18[7], (uint64_t)v17 + v18[7], v13);
    *(_QWORD *)((char *)v16 + v18[8]) = *(_QWORD *)((char *)v17 + v18[8]);
    v20 = v18[9];
    v21 = (char *)v16 + v20;
    v22 = (char *)v17 + v20;
    v21[8] = v22[8];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
  }
  *(_QWORD *)(v7 + v9[8]) = *(_QWORD *)(v8 + v9[8]);
  v23 = v9[9];
  v24 = v7 + v23;
  v25 = v8 + v23;
  v26 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  *(_QWORD *)(v7 + v9[10]) = *(_QWORD *)(v8 + v9[10]);
  v27 = v9[11];
  v28 = (_OWORD *)(v7 + v27);
  v29 = (_OWORD *)(v8 + v27);
  *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v29 + 9);
  *v28 = *v29;
  v30 = v9[12];
  v31 = v7 + v30;
  v32 = v8 + v30;
  v33 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  v34 = v9[13];
  v35 = v7 + v34;
  v36 = v8 + v34;
  v37 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  v38 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  return a1;
}

uint64_t sub_10041AECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  int *v21;
  int v22;
  int v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v7);
  v58 = a3;
  v59 = a2;
  v8 = *(int *)(a3 + 28);
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v9[2] = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  v13 = v12[6];
  v14 = (char *)v9 + v13;
  v15 = v10 + v13;
  v16 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v16 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 40);
  v17(v14, v15, v16);
  v18 = v12[7];
  v19 = (char *)v9 + v18;
  v20 = (_QWORD *)(v10 + v18);
  v21 = (int *)type metadata accessor for DetailChartSelection(0);
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, (uint64_t)v21);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, (uint64_t)v21);
  if (!v22)
  {
    if (!v23)
    {
      v52 = v20[1];
      *(_QWORD *)v19 = *v20;
      *((_QWORD *)v19 + 1) = v52;
      v53 = swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t, __n128))v17)(&v19[v21[5]], (char *)v20 + v21[5], v16, v53);
      v17(&v19[v21[6]], (uint64_t)v20 + v21[6], v16);
      v17(&v19[v21[7]], (uint64_t)v20 + v21[7], v16);
      *(_QWORD *)&v19[v21[8]] = *(_QWORD *)((char *)v20 + v21[8]);
      v54 = v21[9];
      v55 = &v19[v54];
      v56 = (char *)v20 + v54;
      v55[8] = v56[8];
      *(_QWORD *)v55 = *(_QWORD *)v56;
      goto LABEL_7;
    }
    sub_1000215BC((uint64_t)v19, type metadata accessor for DetailChartSelection);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v28 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v24 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
  v24(&v19[v21[5]], (char *)v20 + v21[5], v16);
  v24(&v19[v21[6]], (char *)v20 + v21[6], v16);
  v24(&v19[v21[7]], (char *)v20 + v21[7], v16);
  *(_QWORD *)&v19[v21[8]] = *(_QWORD *)((char *)v20 + v21[8]);
  v25 = v21[9];
  v26 = &v19[v25];
  v27 = (char *)v20 + v25;
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, (uint64_t)v21);
LABEL_7:
  *(_QWORD *)((char *)v9 + v12[8]) = *(_QWORD *)(v10 + v12[8]);
  swift_bridgeObjectRelease();
  v29 = v12[9];
  v30 = (char *)v9 + v29;
  v31 = v10 + v29;
  v32 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  *(_QWORD *)((char *)v9 + v12[10]) = *(_QWORD *)(v10 + v12[10]);
  swift_bridgeObjectRelease();
  v33 = v12[11];
  v34 = (char *)v9 + v33;
  v35 = v10 + v33;
  *(_QWORD *)((char *)v9 + v33) = *(_QWORD *)(v10 + v33);
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v35 + 16);
  *((_QWORD *)v34 + 1) = *(_QWORD *)(v35 + 8);
  *((_QWORD *)v34 + 2) = v36;
  swift_bridgeObjectRelease();
  v34[24] = *(_BYTE *)(v35 + 24);
  v37 = v12[12];
  v38 = (char *)v9 + v37;
  v39 = v10 + v37;
  v40 = type metadata accessor for Location(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = v12[13];
  v42 = (char *)v9 + v41;
  v43 = v10 + v41;
  v44 = type metadata accessor for LocationDetailEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = *(int *)(v58 + 32);
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(v59 + v45);
  *v46 = *v47;
  v48 = v46[1];
  v46[1] = v47[1];
  swift_release(v48);
  v49 = *(int *)(v58 + 36);
  v50 = *(void **)(a1 + v49);
  *(_QWORD *)(a1 + v49) = *(_QWORD *)(v59 + v49);

  return a1;
}

uint64_t sub_10041B250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041B25C);
}

void sub_10041B25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 24));
    sub_100079F70();
  }
  else
  {
    v6 = sub_100099508();
    sub_1000B250C(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t sub_10041B2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041B2BC);
}

void sub_10041B2BC()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000993A8();
  if (v2)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_100079F70();
  }
  else
  {
    sub_100099508();
    sub_100098D08();
    sub_1000987C4(v3, v4, v5, v6);
  }
}

uint64_t sub_10041B304(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for ConditionDetailViewModel.Model(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_10099F0A8;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10041B3B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE15E0;
  if (!qword_100BE15E0)
  {
    v1 = sub_100075EB0(&qword_100BE15E8);
    sub_10000F1C8(&qword_100BE1538, type metadata accessor for ConditionDetailInnerView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE15E0);
  }
  return result;
}

uint64_t sub_10041B434(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4820, 1);
}

_QWORD *sub_10041B444@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;

  v19 = a1;
  v2 = type metadata accessor for ConditionDetailInnerView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v1, (uint64_t)v5, type metadata accessor for ConditionDetailInnerView);
  v6 = type metadata accessor for MainActor(0);
  v7 = static MainActor.shared.getter(v6);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + v4;
  v11 = v8 | 7;
  v12 = swift_allocObject(&unk_100B73878, v10, v8 | 7);
  *(_QWORD *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v5, v12 + v9, type metadata accessor for ConditionDetailInnerView);
  sub_100080C0C(v1, (uint64_t)v5, type metadata accessor for ConditionDetailInnerView);
  v14 = static MainActor.shared.getter(v13);
  v15 = swift_allocObject(&unk_100B738A0, v10, v11);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v5, v15 + v9, type metadata accessor for ConditionDetailInnerView);
  v16 = type metadata accessor for DetailCondition(0);
  return Binding.init(get:set:)(v19, sub_100423870, v12, sub_1004238B8, v15, v16);
}

uint64_t sub_10041B5A4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1 + *(int *)(type metadata accessor for ConditionDetailInnerView(0) + 28);
  v4 = v3 + *(int *)(type metadata accessor for ConditionDetailViewModel.Model(0) + 36);
  v5 = type metadata accessor for DetailCondition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

double sub_10041B600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  double result;
  _QWORD v6[6];

  v6[2] = a4;
  v6[3] = a1;
  v4 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v4, sub_1004238FC, v6, &type metadata for () + 1);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

_QWORD *sub_10041B65C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;

  v19 = a1;
  v2 = type metadata accessor for ConditionDetailInnerView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v1, (uint64_t)v5, type metadata accessor for ConditionDetailInnerView);
  v6 = type metadata accessor for MainActor(0);
  v7 = static MainActor.shared.getter(v6);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + v4;
  v11 = v8 | 7;
  v12 = swift_allocObject(&unk_100B73828, v10, v8 | 7);
  *(_QWORD *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v5, v12 + v9, type metadata accessor for ConditionDetailInnerView);
  sub_100080C0C(v1, (uint64_t)v5, type metadata accessor for ConditionDetailInnerView);
  v14 = static MainActor.shared.getter(v13);
  v15 = swift_allocObject(&unk_100B73850, v10, v11);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v5, v15 + v9, type metadata accessor for ConditionDetailInnerView);
  v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  return Binding.init(get:set:)(v19, sub_10042374C, v12, sub_100423840, v15, v16);
}

uint64_t sub_10041B7C0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1 + *(int *)(type metadata accessor for ConditionDetailInnerView(0) + 28);
  v4 = v3 + *(int *)(type metadata accessor for ConditionDetailViewModel.Model(0) + 24);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v5);
}

void sub_10041B83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _BYTE v17[16];

  v6 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100037768(a1, (uint64_t)v8, (uint64_t *)&unk_100BD35A0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    v13 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    __chkstk_darwin(v13);
    *(_QWORD *)&v17[-16] = a4;
    *(_QWORD *)&v17[-8] = v12;
    v15 = static Animation.default.getter(v14);
    withAnimation<A>(_:_:)(v15, sub_10042384C, &v17[-32], &type metadata for () + 1);
    v16 = swift_release(v15);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v16);
  }
}

uint64_t sub_10041B9A8(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_1000DB418(a1, a1[3]);
  return a3(a2);
}

void sub_10041B9EC(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t (**v68)@<X0>(double *@<X8>);
  uint64_t v69;
  uint64_t v70;
  uint64_t (**v71)();
  int *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[6];

  v2 = v1;
  v86 = a1;
  v3 = type metadata accessor for DetailCondition(0);
  v84 = *(_QWORD *)(v3 - 8);
  v85 = v3;
  __chkstk_darwin(v3);
  v82 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BE15F0);
  __chkstk_darwin(v5);
  v77 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ConditionDetailInnerView(0);
  v87 = *(_QWORD *)(v7 - 8);
  v79 = *(_QWORD *)(v87 + 64);
  __chkstk_darwin(v7);
  v74 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConditionDetailViewModel.Model(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DetailViewVisibilityTrackerModel(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)sub_1000BA294(&qword_100BE15F8);
  __chkstk_darwin(v15);
  v17 = (int **)((char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v75 = (uint64_t)&v72 - v19;
  v83 = sub_1000BA294(&qword_100BE1600);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v76 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1000BA294(&qword_100BE1608);
  __chkstk_darwin(v80);
  v78 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (_QWORD *)((char *)v1 + *(int *)(v7 + 28));
  sub_100080C0C((uint64_t)v22, (uint64_t)v11, type metadata accessor for ConditionDetailViewModel.Model);
  sub_10086672C((uint64_t)v11, (uint64_t)v14);
  v24 = v1[3];
  v23 = v1[4];
  v73 = v1;
  v25 = sub_1000DB418(v1, v24);
  v88[3] = v24;
  v88[4] = *(_QWORD *)(v23 + 8);
  v26 = sub_10005F164(v88);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v26, v25, v24);
  v27 = *v22;
  v28 = v22[1];
  v29 = (char *)v22 + *(int *)(v9 + 36);
  v30 = swift_bridgeObjectRetain(v28);
  v31 = DetailCondition.filledSymbolName.getter(v30);
  v33 = v32;
  LOBYTE(v9) = DetailCondition.usesCustomSymbol.getter();
  v34 = (uint64_t)v2;
  v35 = v74;
  sub_100080C0C(v34, v74, type metadata accessor for ConditionDetailInnerView);
  *v17 = swift_getKeyPath(&unk_10099F110);
  v36 = sub_1000BA294(&qword_100BC4F28);
  swift_storeEnumTagMultiPayload(v17, v36, 0);
  sub_100080C0C((uint64_t)v14, (uint64_t)v17 + v15[9], type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_10003B59C((uint64_t)v88, (uint64_t)v17 + v15[10]);
  v37 = (_QWORD *)((char *)v17 + v15[11]);
  *v37 = v27;
  v37[1] = v28;
  v38 = (_QWORD *)((char *)v17 + v15[12]);
  *v38 = v31;
  v38[1] = v33;
  *((_BYTE *)v17 + v15[13]) = v9 & 1;
  v39 = (_QWORD *)((char *)v17 + v15[14]);
  *v39 = 0;
  v39[1] = 0;
  v40 = v15[15];
  v41 = v15;
  v72 = v15;
  *((_BYTE *)v17 + v40) = 1;
  v42 = v77;
  v43 = v35;
  sub_10041C038(v35, v77);
  sub_1000215BC(v35, type metadata accessor for ConditionDetailInnerView);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v88);
  sub_1000215BC((uint64_t)v14, type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_1000787D4(v42, (uint64_t)v17 + v41[16], &qword_100BE15F0);
  v44 = v75;
  sub_1000787D4((uint64_t)v17, v75, &qword_100BE15F8);
  v46 = v84;
  v45 = v85;
  v47 = v82;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v82, v29, v85);
  v48 = (uint64_t)v73;
  sub_100080C0C((uint64_t)v73, v43, type metadata accessor for ConditionDetailInnerView);
  v49 = *(unsigned __int8 *)(v87 + 80);
  v79 += (v49 + 16) & ~v49;
  v50 = (v49 + 16) & ~v49;
  v87 = v50;
  v77 = v49 | 7;
  v51 = swift_allocObject(&unk_100B73738, v79, v49 | 7);
  v52 = v51 + v50;
  v53 = v43;
  sub_10007802C(v43, v52, type metadata accessor for ConditionDetailInnerView);
  sub_10003D2DC(&qword_100BE1610, &qword_100BE15F8);
  v55 = v54;
  sub_10000F1C8(&qword_100BCE760, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
  v56 = v76;
  View.onChange<A>(of:initial:_:)(v47, 0, sub_100423448, v51, v72, v45, v55, v57);
  v58 = swift_release(v51);
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v47, v45, v58);
  sub_100021A14(v44, &qword_100BE15F8);
  v59 = v53;
  sub_100080C0C(v48, v53, type metadata accessor for ConditionDetailInnerView);
  v60 = v79;
  v61 = v77;
  v62 = swift_allocObject(&unk_100B73760, v79, v77);
  sub_10007802C(v59, v62 + v87, type metadata accessor for ConditionDetailInnerView);
  v63 = v81;
  v64 = (uint64_t)v78;
  v65 = v56;
  v66 = v56;
  v67 = v83;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v66, v83);
  v68 = (uint64_t (**)@<X0>(double *@<X8>))(v64 + *(int *)(v80 + 36));
  *v68 = sub_10041D11C;
  v68[1] = 0;
  v68[2] = (uint64_t (*)@<X0>(double *@<X8>))sub_100423458;
  v68[3] = (uint64_t (*)@<X0>(double *@<X8>))v62;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v67);
  sub_100080C0C(v48, v59, type metadata accessor for ConditionDetailInnerView);
  v69 = swift_allocObject(&unk_100B73788, v60, v61);
  sub_10007802C(v59, v69 + v87, type metadata accessor for ConditionDetailInnerView);
  v70 = v86;
  sub_100037768(v64, v86, &qword_100BE1608);
  v71 = (uint64_t (**)())(v70 + *(int *)(sub_1000BA294(&qword_100BE1618) + 36));
  *v71 = sub_100423488;
  v71[1] = (uint64_t (*)())v69;
  v71[2] = 0;
  v71[3] = 0;
  sub_100021A14(v64, &qword_100BE1608);
}

void sub_10041C038(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int v35;
  __n128 v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  int v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (**v58)();
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  _QWORD v66[2];
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89[2];

  v86 = a2;
  v85 = sub_1000BA294(&qword_100BE1620);
  __chkstk_darwin(v85);
  v83 = (_QWORD *)((char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v81);
  v80 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for ScrollIndicatorVisibility(0);
  v79 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v76 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE1628);
  v77 = *(_QWORD *)(v6 - 8);
  v78 = v6;
  __chkstk_darwin(v6);
  v82 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BE1630);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD9B28);
  __chkstk_darwin(v12);
  v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BD9B30);
  __chkstk_darwin(v15);
  v17 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)v66 - v19;
  v21 = type metadata accessor for ConditionDetailInnerView(0);
  v22 = *(int *)(v21 + 32);
  v84 = a1;
  v23 = (uint64_t *)(a1 + v22);
  v24 = *v23;
  v25 = v23[1];
  v87 = v24;
  v88 = v25;
  v26 = sub_1000BA294(&qword_100BC40A8);
  v27 = State.wrappedValue.getter(v89, v26);
  if (v89[0] <= 0.0)
  {
    v63 = static Color.clear.getter(v27);
    v64 = v83;
    *v83 = v63;
    swift_storeEnumTagMultiPayload(v64, v85, 1);
    v65 = sub_1004234E0();
    _ConditionalContent<>.init(storage:)(v64, v15, &type metadata for Color, v65, &protocol witness table for Color);
  }
  else
  {
    v66[1] = v21;
    v67 = v12;
    v68 = v11;
    v69 = v9;
    v70 = v8;
    v28 = v75;
    v71 = v14;
    v72 = v17;
    v73 = v20;
    v74 = v15;
    v29 = static Axis.Set.vertical.getter(v27);
    __chkstk_darwin(v29);
    v66[-2] = v84;
    v30 = sub_1000BA294(&qword_100BE1650);
    v31 = sub_100423620();
    v32 = ScrollView.init(_:showsIndicators:content:)(v29, 1, sub_100423618, &v66[-4], v30, v31);
    v33 = v76;
    v34 = static ScrollIndicatorVisibility.never.getter(v32);
    v35 = static Axis.Set.vertical.getter(v34);
    v37 = static Axis.Set.horizontal.getter(v36);
    v38 = Axis.Set.init(rawValue:)(0);
    v39 = Axis.Set.init(rawValue:)(v38);
    if (Axis.Set.init(rawValue:)(v39 & v35) != v35)
      v38 = Axis.Set.init(rawValue:)(v38 | v35);
    v40 = Axis.Set.init(rawValue:)(v38);
    v41 = Axis.Set.init(rawValue:)(v40 & v37);
    v42 = (uint64_t)v83;
    v43 = (uint64_t)v72;
    v44 = (uint64_t)v73;
    v45 = (uint64_t)v71;
    v46 = v28;
    v47 = v80;
    if (v41 != v37)
      v38 = Axis.Set.init(rawValue:)(v38 | v37);
    sub_10003D2DC(&qword_100BE1648, &qword_100BE1628);
    v49 = v48;
    v50 = v68;
    v51 = v33;
    v52 = v33;
    v53 = v38;
    v54 = v78;
    v55 = v82;
    View.scrollIndicators(_:axes:)(v52, v53, v78, v49);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v46);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v54);
    v57 = v69;
    v56 = v70;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v45, v50, v70);
    v58 = (uint64_t (**)())(v45 + *(int *)(v67 + 36));
    *v58 = sub_10041D0B8;
    v58[1] = 0;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v50, v56);
    type metadata accessor for ConditionDetailViewModel.Model(0);
    *v47 = DetailCondition.rawValue.getter(v59);
    v47[1] = v60;
    v61 = type metadata accessor for AutomationViewInfo(0);
    swift_storeEnumTagMultiPayload(v47, v61, 3);
    swift_storeEnumTagMultiPayload(v47, v81, 0);
    sub_1003353BC();
    sub_1000215BC((uint64_t)v47, type metadata accessor for AutomationInfo);
    sub_100021A14(v45, &qword_100BD9B28);
    sub_1000787D4(v43, v44, &qword_100BD9B30);
    sub_100037768(v44, v42, &qword_100BD9B30);
    swift_storeEnumTagMultiPayload(v42, v85, 0);
    v62 = sub_1004234E0();
    _ConditionalContent<>.init(storage:)(v42, v74, &type metadata for Color, v62, &protocol witness table for Color);
    sub_100021A14(v44, &qword_100BD9B30);
  }
}

void sub_10041C5A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];

  v4 = sub_1000BA294(&qword_100BE1668);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v7);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v8 = sub_1000BA294(&qword_100BE1670);
  sub_10041C6C8(a1, (uint64_t)&v6[*(int *)(v8 + 44)]);
  v10 = static Edge.Set.bottom.getter(v9);
  swift_beginAccess(&unk_100BE0830, v21, 1, 0);
  v11 = sub_1004092CC();
  v12 = EdgeInsets.init(_all:)(v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_100037768((uint64_t)v6, a2, &qword_100BE1668);
  v19 = a2 + *(int *)(sub_1000BA294(&qword_100BE1650) + 36);
  *(_BYTE *)v19 = v10;
  *(double *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  sub_100021A14((uint64_t)v6, &qword_100BE1668);
}

void sub_10041C6C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  Swift::String v91;
  Swift::String v92;
  uint64_t v93;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE v116[72];
  uint64_t v117[9];
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[13];
  __int128 v121[10];

  v102 = type metadata accessor for ConditionDetailLegendView(0);
  __chkstk_darwin(v102);
  v104 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1000BA294(&qword_100BDCA78);
  __chkstk_darwin(v107);
  v103 = (uint64_t)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE1678);
  __chkstk_darwin(v6);
  v113 = (uint64_t)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v108 = (uint64_t)&v101 - v9;
  v10 = (int *)type metadata accessor for PagingChartsView(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v110 = sub_1000BA294(&qword_100BE1680);
  __chkstk_darwin(v110);
  v112 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1000BA294(&qword_100BE1688);
  __chkstk_darwin(v111);
  v115 = (uint64_t)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v114 = (uint64_t)&v101 - v16;
  v17 = type metadata accessor for ConditionDetailInnerView(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v20, type metadata accessor for ConditionDetailInnerView);
  v21 = *(unsigned __int8 *)(v18 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_100B73800, v22 + v19, v21 | 7);
  sub_10007802C((uint64_t)v20, v23 + v22, type metadata accessor for ConditionDetailInnerView);
  v24 = sub_1000BA294(&qword_100BD2B60);
  v120[10] = sub_1006796A4;
  v120[11] = 0;
  LOBYTE(v120[12]) = 0;
  v120[0] = v24;
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  v109 = a2;
  swift_beginAccess(&xmmword_100CAE588, &v119, 0, 0);
  sub_100037768((uint64_t)&xmmword_100CAE588, (uint64_t)v121, &qword_100BCED50);
  if (*((_QWORD *)&v121[1] + 1))
  {
    sub_10003C800(v121, (uint64_t)&v120[3]);
    v120[1] = sub_1004236BC;
    v120[2] = v23;
    v25 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    v120[8] = _swiftEmptyArrayStorage;
    v120[9] = v25;
    memcpy(v121, v120, 0x61uLL);
    v26 = a1 + *(int *)(v17 + 28);
    v27 = type metadata accessor for ConditionDetailViewModel.Model(0);
    v29 = *(int *)(v27 + 28);
    v28 = *(int *)(v27 + 32);
    v30 = v27;
    v31 = v26;
    v105 = v26;
    v32 = *(_QWORD *)(v26 + v28);
    v33 = *(_QWORD *)(v31 + 16);
    sub_100037768(v31 + v29, (uint64_t)v12 + v10[6], &qword_100BD0B58);
    sub_10003B59C(a1, (uint64_t)v12 + v10[7]);
    v34 = *(_QWORD *)(a1 + 40);
    v35 = (_QWORD *)(a1 + *(int *)(v17 + 32));
    v37 = v35[1];
    v120[0] = *v35;
    v36 = v120[0];
    v120[1] = v37;
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
    v38 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(v117, v38);
    v39 = v117[0];
    sub_10041B444((_QWORD *)((char *)v12 + v10[10]));
    v40 = (_QWORD *)((char *)v12 + v10[11]);
    v106 = a1;
    sub_10041B65C(v40);
    *v12 = v32;
    v12[1] = v33;
    *(_QWORD *)((char *)v12 + v10[8]) = v34;
    *(_QWORD *)((char *)v12 + v10[9]) = v39;
    v41 = (char *)v12 + v10[12];
    LOBYTE(v117[0]) = 0;
    State.init(wrappedValue:)(v117, &type metadata for Bool);
    v42 = v120[1];
    *v41 = v120[0];
    *((_QWORD *)v41 + 1) = v42;
    v43 = (char *)v12 + v10[13];
    LOBYTE(v117[0]) = 0;
    State.init(wrappedValue:)(v117, &type metadata for Bool);
    v44 = v120[1];
    *v43 = v120[0];
    *((_QWORD *)v43 + 1) = v44;
    v120[0] = v36;
    v120[1] = v37;
    v45 = State.wrappedValue.getter(v117, v38);
    v46 = v117[0];
    static Alignment.center.getter(v45);
    v47 = 1;
    _FrameLayout.init(width:height:alignment:)(v46, 0, 0, 1);
    v48 = v112;
    sub_100080C0C((uint64_t)v12, v112, type metadata accessor for PagingChartsView);
    v49 = (_OWORD *)(v48 + *(int *)(v110 + 36));
    v50 = *(__int128 *)((char *)&v121[7] + 8);
    *v49 = *(__int128 *)((char *)&v121[6] + 8);
    v49[1] = v50;
    v49[2] = *(__int128 *)((char *)&v121[8] + 8);
    sub_1000215BC((uint64_t)v12, type metadata accessor for PagingChartsView);
    v120[0] = 0;
    v120[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(26);
    v51 = swift_bridgeObjectRelease();
    v120[0] = 0xD000000000000018;
    v120[1] = 0x8000000100A02BA0;
    v52 = v30;
    v53 = *(int *)(v30 + 36);
    v54 = v105;
    v55 = v105 + v53;
    v57._countAndFlagsBits = DetailCondition.title.getter(v56, v51);
    String.append(_:)(v57);
    swift_bridgeObjectRelease();
    v58 = v120[0];
    v59 = v120[1];
    v60 = v115;
    sub_100037768(v48, v115, &qword_100BE1680);
    v61 = (_QWORD *)(v60 + *(int *)(v111 + 52));
    *v61 = v58;
    v61[1] = v59;
    sub_100021A14(v48, &qword_100BE1680);
    sub_1000787D4(v60, v114, &qword_100BE1688);
    v62 = (char *)(v54 + *(int *)(v52 + 44));
    v63 = *(_QWORD *)v62;
    v64 = *(_QWORD *)(*(_QWORD *)v62 + 16);
    v110 = v55;
    if (v64)
    {
      v66 = *((_QWORD *)v62 + 1);
      v65 = *((_QWORD *)v62 + 2);
      v67 = v62[24];
      v68 = v104;
      swift_bridgeObjectRetain(v63);
      v69 = swift_bridgeObjectRetain(v65);
      Text.Measurements.init()(v69);
      *(_QWORD *)v68 = v63;
      *((_QWORD *)v68 + 1) = v66;
      v70 = (uint64_t)v68;
      *((_QWORD *)v68 + 2) = v65;
      v68[24] = v67;
      v71 = v107;
      if (qword_100BC20C0 != -1)
        swift_once(&qword_100BC20C0, sub_1004049E8);
      swift_beginAccess(&qword_100CAE968, &v118, 1, 0);
      sub_10040447C();
      v73 = v72;
      v75 = v74;
      v77 = v76;
      v79 = v78;
      v81 = static Edge.Set.all.getter(v80);
      v82 = v103;
      sub_100080C0C(v70, v103, type metadata accessor for ConditionDetailLegendView);
      v83 = v82 + *(int *)(v71 + 36);
      *(_BYTE *)v83 = v81;
      *(_QWORD *)(v83 + 8) = v73;
      *(_QWORD *)(v83 + 16) = v75;
      *(_QWORD *)(v83 + 24) = v77;
      *(_QWORD *)(v83 + 32) = v79;
      *(_BYTE *)(v83 + 40) = 0;
      sub_1000215BC(v70, type metadata accessor for ConditionDetailLegendView);
      v84 = v108;
      sub_1000787D4(v82, v108, &qword_100BDCA78);
      v47 = 0;
      v85 = v109;
    }
    else
    {
      v84 = v108;
      v85 = v109;
      v71 = v107;
    }
    _s7Weather24LocationCompositionStateOwst_0(v84, v47, 1, v71);
    v86 = *(_QWORD *)(v54 + *(int *)(v52 + 40));
    v87 = v106;
    sub_10003B59C(v106, (uint64_t)&v117[1]);
    v88 = *(_QWORD *)(v87 + 48);
    v117[0] = v86;
    v117[6] = v88;
    v120[0] = 0;
    v120[1] = 0xE000000000000000;
    swift_bridgeObjectRetain(v86);
    swift_retain();
    _StringGuts.grow(_:)(31);
    v89 = swift_bridgeObjectRelease();
    v120[0] = 0xD00000000000001ALL;
    v120[1] = 0x8000000100A02BC0;
    v91._countAndFlagsBits = DetailCondition.title.getter(v90, v89);
    String.append(_:)(v91);
    swift_bridgeObjectRelease();
    v92._countAndFlagsBits = 45;
    v92._object = (void *)0xE100000000000000;
    String.append(_:)(v92);
    v93 = type metadata accessor for Date(0);
    sub_10000F1C8((unint64_t *)&qword_100BC52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    v94._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v93);
    String.append(_:)(v94);
    swift_bridgeObjectRelease();
    v95 = v120[0];
    v96 = v120[1];
    sub_1004236E8(v117, (uint64_t)v120);
    v120[7] = v95;
    v120[8] = v96;
    sub_10042371C((uint64_t)v117);
    memcpy(v117, v120, sizeof(v117));
    sub_100037768((uint64_t)v121, (uint64_t)v120, &qword_100BE1690);
    v98 = v114;
    v97 = v115;
    sub_100037768(v114, v115, &qword_100BE1688);
    v99 = v113;
    sub_100037768(v84, v113, &qword_100BE1678);
    sub_100037768((uint64_t)v117, (uint64_t)v116, &qword_100BE1698);
    sub_100037768((uint64_t)v120, v85, &qword_100BE1690);
    v100 = (int *)sub_1000BA294(&qword_100BE16A0);
    sub_100037768(v97, v85 + v100[12], &qword_100BE1688);
    sub_100037768(v99, v85 + v100[16], &qword_100BE1678);
    sub_100037768((uint64_t)v116, v85 + v100[20], &qword_100BE1698);
    sub_100021A14((uint64_t)v117, &qword_100BE1698);
    sub_100021A14(v84, &qword_100BE1678);
    sub_100021A14(v98, &qword_100BE1688);
    sub_100021A14((uint64_t)v121, &qword_100BE1690);
    sub_100021A14((uint64_t)v116, &qword_100BE1698);
    sub_100021A14(v99, &qword_100BE1678);
    sub_100021A14(v97, &qword_100BE1688);
    sub_100021A14((uint64_t)v120, &qword_100BE1690);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10041D034@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double v5;

  sub_1000DB418(a1, a1[3]);
  type metadata accessor for ConditionDetailInnerView(0);
  v3 = sub_1000BA294(&qword_100BC40A8);
  State.wrappedValue.getter(&v5, v3);
  return sub_10045E200(a2, v5);
}

uint64_t sub_10041D0B8()
{
  return Transaction.disablesPageScrollAnimations.setter(0);
}

uint64_t sub_10041D0DC(_QWORD *a1)
{
  uint64_t v2;

  sub_1000DB418(a1, a1[3]);
  v2 = type metadata accessor for ConditionDetailInnerView(0);
  return sub_100223E38((uint64_t)a1 + *(int *)(v2 + 28));
}

uint64_t sub_10041D11C@<X0>(double *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v2 = type metadata accessor for LocalCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter(v4);
  v7 = GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for LocalCoordinateSpace);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v7;
  *((_QWORD *)a1 + 1) = v9;
  *((_QWORD *)a1 + 2) = v11;
  *((_QWORD *)a1 + 3) = v13;
  return result;
}

uint64_t sub_10041D1DC(CGFloat *a1, uint64_t a2)
{
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  uint64_t result;
  CGFloat Width;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v16.origin.x = 0.0;
  v16.origin.y = 0.0;
  v16.size.width = 0.0;
  v16.size.height = 0.0;
  v14.origin.x = *a1;
  v14.origin.y = v4;
  v14.size.width = v5;
  v14.size.height = v6;
  result = CGRectEqualToRect(v14, v16);
  if ((result & 1) == 0)
  {
    v15.origin.x = v3;
    v15.origin.y = v4;
    v15.size.width = v5;
    v15.size.height = v6;
    Width = CGRectGetWidth(v15);
    v9 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ConditionDetailInnerView(0) + 32));
    v10 = *v9;
    v11 = v9[1];
    *(CGFloat *)v13 = Width;
    v13[1] = v10;
    v13[2] = v11;
    v12 = sub_1000BA294(&qword_100BC40A8);
    return State.wrappedValue.setter(v13, v12);
  }
  return result;
}

void sub_10041D294(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v2 = type metadata accessor for ConditionDetailInnerView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (void *)objc_opt_self(CATransaction);
  sub_100080C0C(a1, (uint64_t)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ConditionDetailInnerView);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_100B737B0, v7 + v4, v6 | 7);
  sub_10007802C((uint64_t)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for ConditionDetailInnerView);
  aBlock[4] = sub_1004234D4;
  v11 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100121D84;
  aBlock[3] = &unk_100B737C8;
  v9 = _Block_copy(aBlock);
  objc_msgSend(v5, "setCompletionBlock:", v9, swift_release(v11).n128_f64[0]);
  _Block_release(v9);
}

void sub_10041D3C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v2 = type metadata accessor for OSSignpostID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static os_signpost_type_t.event.getter(v6);
  v8 = *(id *)((char *)a1 + *(int *)(type metadata accessor for ConditionDetailInnerView(0) + 36));
  OSSignpostID.init(log:)(v8);
  os_signpost(_:dso:log:name:signpostID:)(v7, &_mh_execute_header, v8, "Weather:loadLazyContent", 23, 2, v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000DB418(a1, a1[3]);
  sub_100223FB8();
}

uint64_t sub_10041D4A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v14 = *v0;
  v1 = v14;
  sub_1004236E8(v0, (uint64_t)v12);
  v2 = swift_allocObject(&unk_100B73950, 72, 7);
  v3 = v12[1];
  *(_OWORD *)(v2 + 16) = v12[0];
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v12[2];
  *(_QWORD *)(v2 + 64) = v13;
  swift_bridgeObjectRetain(v1);
  v4 = sub_1000BA294(&qword_100BE1798);
  v5 = sub_1000BA294(&qword_100BE17A0);
  sub_10003D2DC(&qword_100BE17A8, &qword_100BE1798);
  v7 = v6;
  sub_10003D2DC(&qword_100BE17B0, &qword_100BE17A0);
  v9 = v8;
  sub_10000F1C8(&qword_100BE17B8, type metadata accessor for ConditionDetailPlatterViewModel);
  return ForEach<>.init(_:content:)(&v14, sub_10042506C, v2, v4, &type metadata for ConditionDetailPlatterViewModel.PlatterIdentifier, v5, v7, v9, v10);
}

void sub_10041D5D0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;
  int *v16;
  void (**v17)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v18;
  _BYTE v20[24];
  _OWORD v21[3];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100080C0C(a1, (uint64_t)v8, type metadata accessor for ConditionDetailPlatterViewModel);
  v9 = v8[*(int *)(v6 + 40)];
  sub_1000215BC((uint64_t)v8, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100080C0C(a1, (uint64_t)v8, type metadata accessor for ConditionDetailPlatterViewModel);
  v10 = a2[4];
  v11 = a2[5];
  v12 = sub_1000DB418(a2 + 1, v10);
  v24 = v10;
  v25 = *(_QWORD *)(v11 + 8);
  v13 = sub_10005F164(&v23);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v13, v12, v10);
  sub_1004236E8(a2, (uint64_t)v21);
  v14 = swift_allocObject(&unk_100B73978, 72, 7);
  v15 = v21[1];
  *(_OWORD *)(v14 + 16) = v21[0];
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = v21[2];
  *(_QWORD *)(v14 + 64) = v22;
  sub_10007802C((uint64_t)v8, a3, type metadata accessor for ConditionDetailPlatterViewModel);
  v16 = (int *)sub_1000BA294(&qword_100BE17A0);
  *(_BYTE *)(a3 + v16[9]) = v9;
  sub_10003C800(&v23, a3 + v16[10]);
  v17 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))(a3 + v16[11]);
  *v17 = sub_1004250A8;
  v17[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v14;
  v18 = v16[12];
  swift_beginAccess(&unk_100BE0830, v20, 1, 0);
  *(double *)(a3 + v18) = sub_10040908C();
}

void sub_10041D774(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10082C9CC(a1, a2);
}

uint64_t sub_10041D798@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  void *v37;
  void *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101[16];
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;

  v78 = a1;
  v77 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v77);
  v97 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BD0B58);
  __chkstk_darwin(v3);
  v100 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ScrollIndicatorVisibility(0);
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  __chkstk_darwin(v5);
  v94 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1000BA294(&qword_100BE16B0);
  __chkstk_darwin(v86);
  v84 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PagingScrollTargetBehavior(0);
  v82 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BE17C0);
  v80 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE17C8);
  v85 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BE17D0);
  v18 = *(_QWORD *)(v17 - 8);
  v88 = v17;
  v89 = v18;
  __chkstk_darwin(v17);
  v81 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100BE17D8);
  v21 = *(_QWORD *)(v20 - 8);
  v92 = v20;
  v93 = v21;
  __chkstk_darwin(v20);
  v83 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000BA294(&qword_100BE17E0);
  v95 = *(_QWORD *)(v23 - 8);
  v96 = v23;
  __chkstk_darwin(v23);
  v90 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1000BA294(&qword_100BE17E8);
  __chkstk_darwin(v87);
  v91 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1000BA294(&qword_100BE17F0);
  v75 = *(_QWORD *)(v76 - 8);
  v26 = __chkstk_darwin(v76);
  v74 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = static Axis.Set.horizontal.getter(v26);
  v79 = v1;
  v102 = v1;
  v29 = sub_1004250B8();
  v30 = ScrollView.init(_:showsIndicators:content:)(v28, 1, sub_1004250B0, v101, &type metadata for PagingChartsView.HorizontalChartPages, v29);
  PagingScrollTargetBehavior.init()(v30);
  sub_10003D2DC(&qword_100BE1800, &qword_100BE17C0);
  v32 = v31;
  View.scrollTargetBehavior<A>(_:)(v10, v11, v8, v31, &protocol witness table for PagingScrollTargetBehavior);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v13, v11);
  v33 = type metadata accessor for PagingChartsView(0);
  v34 = (uint64_t)v84;
  Binding.projectedValue.getter(v86);
  v35 = type metadata accessor for Date(0);
  v103 = v11;
  v104 = v8;
  v105 = v32;
  v106 = &protocol witness table for PagingScrollTargetBehavior;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.scrollTargetBehavior<A>(_:)>>, 1);
  sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  v38 = v37;
  v39 = v81;
  View.scrollPosition<A>(id:anchor:)(v34, 0, 0, 1, v14, v35, OpaqueTypeConformance2, v37);
  sub_100021A14(v34, &qword_100BE16B0);
  v40 = v16;
  v41 = (uint64_t)v97;
  v42 = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v40, v14);
  v43 = v94;
  static ScrollIndicatorVisibility.never.getter(v42);
  v45 = static Axis.Set.horizontal.getter(v44);
  v103 = v14;
  v104 = v35;
  v105 = OpaqueTypeConformance2;
  v106 = v38;
  v46 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.scrollPosition<A>(id:anchor:)>>, 1);
  v47 = v83;
  v48 = v88;
  View.scrollIndicators(_:axes:)(v43, v45, v88, v46);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v43, v99);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v39, v48);
  v49 = v79;
  v50 = v100;
  sub_100037768((uint64_t)v79 + *(int *)(v33 + 24), v100, &qword_100BD0B58);
  v51 = type metadata accessor for DetailChartSelection(0);
  v52 = _s7Weather24LocationCompositionStateOwet_0(v50, 1, v51) != 1;
  v53 = v50;
  v54 = v87;
  sub_100021A14(v53, &qword_100BD0B58);
  v103 = v48;
  v104 = v46;
  v55 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v56 = v90;
  v57 = v92;
  View.scrollDisabled(_:)(v52, v92, v55);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v47, v57);
  v59 = static Alignment.topLeading.getter(v58);
  v61 = v60;
  v62 = (uint64_t)&v91[*(int *)(v54 + 36)];
  v63 = v49;
  v64 = (uint64_t)v91;
  sub_10041DFD4(v63, v62);
  v65 = (uint64_t *)(v62 + *(int *)(sub_1000BA294(&qword_100BE1808) + 36));
  *v65 = v59;
  v65[1] = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v64, v56, v96);
  v66 = enum case for DynamicTypeSize.accessibility1(_:);
  v67 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v41, v66, v67);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v41, v41, v67, v68);
  if ((result & 1) != 0)
  {
    v70 = sub_1004250F4();
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v71 = v74;
    View.dynamicTypeSize<A>(_:)(v41, v54, v77, v70, v72);
    sub_100021A14(v41, (uint64_t *)&unk_100C0A510);
    sub_100021A14(v64, &qword_100BE17E8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v75 + 32))(v78, v71, v76);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10041DF20(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = type metadata accessor for PagingChartsView(0);
  v6 = a1 + *(int *)(v5 + 28);
  swift_bridgeObjectRetain(v4);
  v7 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v10, v7);
  v8 = v10;
  v9 = *(_QWORD *)(a1 + *(int *)(v5 + 36));
  *(_QWORD *)a2 = v4;
  sub_10003B59C(v6, a2 + 8);
  *(_BYTE *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v9;
}

void sub_10041DFD4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[2];
  uint64_t v26;

  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v23 = a1[1];
  v8 = v23;
  v10 = (int *)type metadata accessor for PagingChartsView(0);
  v24 = (char *)a1 + v10[7];
  v11 = (char *)a1 + v10[13];
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 1);
  LOBYTE(v25[0]) = v12;
  v25[1] = v13;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v8);
  v14 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v26, v14);
  HIDWORD(v22) = v26;
  v15 = *(uint64_t *)((char *)a1 + v10[8]);
  v16 = (int *)type metadata accessor for StickyChartHeadersView(0);
  v17 = sub_1000BA294(&qword_100BE16B0);
  Binding.wrappedValue.getter(v17);
  sub_100037768((uint64_t)a1 + v10[10], a2 + v16[11], &qword_100BE16A8);
  v25[0] = 0x3FF0000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.caption(_:), v4);
  v18 = sub_10010D1D0();
  ScaledMetric.init(wrappedValue:relativeTo:)(v25, v7, &type metadata for Double, v18);
  *(_QWORD *)(a2 + v16[5]) = v9;
  v19 = (uint64_t)v24;
  *(_QWORD *)(a2 + v16[6]) = v23;
  sub_10003B59C(v19, a2 + v16[7]);
  *(_BYTE *)(a2 + v16[8]) = BYTE4(v22);
  *(_QWORD *)(a2 + v16[9]) = v15;
  v20 = (_QWORD *)(a2 + v16[12]);
  *v20 = swift_getKeyPath(&unk_10099F218);
  v21 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
}

uint64_t sub_10041E1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  int v17;

  v1 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v1);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1000BA294(&qword_100BE18E0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = v0;
  v9 = static VerticalAlignment.center.getter(v8);
  v17 = 0;
  sub_10000F1C8(&qword_100BE18E8, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(&v17, v1, v10);
  v11 = sub_1000BA294(&qword_100BE18F0);
  v12 = sub_100426668();
  LazyHStack.init(alignment:spacing:pinnedViews:content:)(v9, 0, 0, v3, sub_100426660, v15, v11, v12);
  sub_10003D2DC(&qword_100BE1908, &qword_100BE18E0);
  View.scrollTargetLayout(isEnabled:)(1, v4, v13);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10041E348(uint64_t *a1)
{
  uint64_t v2;
  uint64_t KeyPath;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[4];
  uint64_t v16;

  v16 = *a1;
  v2 = v16;
  KeyPath = swift_getKeyPath(&unk_10099F328);
  sub_1004266F8(a1, (uint64_t)v15);
  v4 = (_OWORD *)swift_allocObject(&unk_100B73A28, 80, 7);
  v5 = v15[1];
  v4[1] = v15[0];
  v4[2] = v5;
  v6 = v15[3];
  v4[3] = v15[2];
  v4[4] = v6;
  swift_bridgeObjectRetain(v2);
  v7 = sub_1000BA294(&qword_100BE1910);
  v8 = type metadata accessor for PagingChartsView.ChartPage(0);
  sub_10003D2DC(&qword_100BE1918, &qword_100BE1910);
  v10 = v9;
  sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  v12 = v11;
  sub_10000F1C8(&qword_100BE1900, type metadata accessor for PagingChartsView.ChartPage);
  return ForEach<>.init(_:id:content:)(&v16, KeyPath, sub_100426754, v4, v7, v8, v10, v12, v13);
}

uint64_t sub_10041E490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[9];
  uint64_t v12;

  sub_100080C0C(a1, a3, type metadata accessor for DetailChartsViewModel);
  v5 = *(_BYTE *)(a2 + 48);
  v6 = (int *)type metadata accessor for PagingChartsView.ChartPage(0);
  sub_10003B59C(a2 + 8, a3 + v6[6]);
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a3 + v6[5]) = v5;
  *(_QWORD *)(a3 + v6[7]) = v7;
  v8 = a3 + v6[8];
  v11[0] = 0;
  result = State.init(wrappedValue:)(v11, &type metadata for Bool);
  v10 = v12;
  *(_BYTE *)v8 = v11[1];
  *(_QWORD *)(v8 + 8) = v10;
  return result;
}

uint64_t sub_10041E544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t OpaqueTypeConformance2;
  char *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD v93[4];

  v89 = a1;
  v2 = type metadata accessor for AccessibilityChildBehavior(0);
  v87 = *(_QWORD *)(v2 - 8);
  v88 = v2;
  __chkstk_darwin(v2);
  v85 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for PagingChartsView.ChartPage(0);
  v4 = *(_QWORD *)(v86 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v86);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE1CC8);
  __chkstk_darwin(v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1000BA294(&qword_100BE1CD0);
  __chkstk_darwin(v75);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BE1CD8);
  v13 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  v80 = v13;
  __chkstk_darwin(v12);
  v76 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BE1CE0);
  v16 = *(_QWORD *)(v15 - 8);
  v81 = v15;
  v82 = v16;
  __chkstk_darwin(v15);
  v77 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BE1CE8);
  v19 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  v84 = v19;
  __chkstk_darwin(v18);
  v78 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v21);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  sub_1000BA294(&qword_100BE1CF0);
  v22 = *(int *)(type metadata accessor for DetailChartsViewModel(0) + 20);
  v74 = v1;
  v93[0] = *(_QWORD *)(v1 + v22);
  v23 = v93[0];
  sub_100080C0C(v1, (uint64_t)v6, type metadata accessor for PagingChartsView.ChartPage);
  v24 = *(unsigned __int8 *)(v4 + 80);
  v25 = (v24 + 16) & ~v24;
  v73 = v25 + v5;
  v72 = v24 | 7;
  v26 = swift_allocObject(&unk_100B73B58, v25 + v5, v24 | 7);
  sub_10007802C((uint64_t)v6, v26 + v25, type metadata accessor for PagingChartsView.ChartPage);
  swift_bridgeObjectRetain(v23);
  v27 = sub_1000BA294(&qword_100BE1938);
  v28 = type metadata accessor for PagingChartsView.ChartWrapperView(0);
  sub_10003D2DC(&qword_100BE1948, &qword_100BE1938);
  v30 = v29;
  sub_10000F1C8(&qword_100BE1CF8, type metadata accessor for PagingChartsView.ChartWrapperView);
  v32 = v31;
  sub_10000F1C8(&qword_100BE1D00, type metadata accessor for DetailChartViewModel);
  v34 = ForEach<>.init(_:content:)(v93, sub_100427CA4, v26, v27, &type metadata for Int, v28, v30, v32, v33);
  v35 = static Edge.Set.horizontal.getter(v34);
  swift_beginAccess(&unk_100BDE048, v93, 1, 0);
  v36 = sub_1003BD550();
  v37 = EdgeInsets.init(_all:)(v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_100037768((uint64_t)v9, (uint64_t)v11, &qword_100BE1CC8);
  v44 = v75;
  v45 = &v11[*(int *)(v75 + 36)];
  *v45 = v35;
  *((double *)v45 + 1) = v37;
  *((_QWORD *)v45 + 2) = v39;
  *((_QWORD *)v45 + 3) = v41;
  *((_QWORD *)v45 + 4) = v43;
  v45[40] = 0;
  sub_100021A14((uint64_t)v9, &qword_100BE1CC8);
  v47 = static Axis.Set.horizontal.getter(v46);
  v48 = static Alignment.center.getter(v47);
  v50 = v49;
  v51 = sub_100427D10();
  v52 = v76;
  View.containerRelativeFrame(_:alignment:)(v47, v48, v50, v44, v51);
  sub_100021A14((uint64_t)v11, &qword_100BE1CD0);
  v53 = v74;
  sub_100080C0C(v74, (uint64_t)v6, type metadata accessor for PagingChartsView.ChartPage);
  v54 = swift_allocObject(&unk_100B73B80, v73, v72);
  sub_10007802C((uint64_t)v6, v54 + v25, type metadata accessor for PagingChartsView.ChartPage);
  v91 = v44;
  v92 = v51;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v91, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
  v56 = v77;
  v57 = v79;
  View.onScrollVisibilityChange(threshold:_:)(sub_100427E3C, v54, v79, OpaqueTypeConformance2, 0.01);
  v58 = swift_release(v54);
  v59 = (*(uint64_t (**)(char *, uint64_t, __n128))(v80 + 8))(v52, v57, v58);
  v60 = v85;
  static AccessibilityChildBehavior.contain.getter(v59);
  v91 = v57;
  v92 = OpaqueTypeConformance2;
  v61 = swift_getOpaqueTypeConformance2(&v91, &opaque type descriptor for <<opaque return type of View.onScrollVisibilityChange(threshold:_:)>>, 1);
  v62 = v78;
  v63 = v81;
  View.accessibilityElement(children:)(v60, v81, v61);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v60, v88);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v56, v63);
  v64 = v53 + *(int *)(v86 + 32);
  v65 = *(_BYTE *)v64;
  v66 = *(_QWORD *)(v64 + 8);
  LOBYTE(v91) = v65;
  v92 = v66;
  v67 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v90, v67);
  LOBYTE(v60) = v90;
  v91 = v63;
  v92 = v61;
  v68 = swift_getOpaqueTypeConformance2(&v91, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v69 = v83;
  View.accessibility(hidden:)((v60 & 1) == 0, v83, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v62, v69);
}

void sub_10041EB2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int *v16;
  char v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int *v27;
  _QWORD v28[2];
  _QWORD v29[3];

  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BE19B8);
  __chkstk_darwin(v10);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DetailChartViewModel(0);
  sub_100037768(a1 + *(int *)(v13 + 24), (uint64_t)v12, &qword_100BE19B8);
  v14 = type metadata accessor for LollipopViewModel(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14) == 1;
  sub_100021A14((uint64_t)v12, &qword_100BE19B8);
  v16 = (int *)type metadata accessor for PagingChartsView.ChartPage(0);
  v17 = *(_BYTE *)(a2 + v16[5]) | v15;
  v18 = a2 + v16[6];
  v19 = *(double *)(a2 + v16[7]);
  swift_beginAccess(&unk_100BDE048, (char *)v29 + 1, 1, 0);
  v20 = sub_1003BD550();
  v21 = v19 - (v20 + v20);
  v22 = (char *)(a2 + v16[8]);
  v23 = *v22;
  v24 = *((_QWORD *)v22 + 1);
  LOBYTE(v28[0]) = v23;
  v28[1] = v24;
  v25 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(v29, v25);
  LOBYTE(a2) = v29[0];
  v28[0] = 0x3FF0000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.caption(_:), v6);
  v26 = sub_10010D1D0();
  ScaledMetric.init(wrappedValue:relativeTo:)(v28, v9, &type metadata for Double, v26);
  v27 = (int *)type metadata accessor for PagingChartsView.ChartWrapperView(0);
  sub_100080C0C(a1, a3 + v27[5], type metadata accessor for DetailChartViewModel);
  sub_10003B59C(v18, a3 + v27[6]);
  *(_BYTE *)(a3 + v27[7]) = v17 & 1;
  *(double *)(a3 + v27[8]) = v21;
  *(_BYTE *)(a3 + v27[9]) = a2;
}

uint64_t sub_10041ED54(char a1, uint64_t a2)
{
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[9];
  uint64_t v9;

  v3 = (char *)(a2 + *(int *)(type metadata accessor for PagingChartsView.ChartPage(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v8[1] = v4;
  v9 = v5;
  v8[0] = a1;
  v6 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(v8, v6);
}

void sub_10041EDC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  BOOL v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::Int v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[4];
  int v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  int v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  double __src[10];
  unsigned __int8 v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE __dst[72];

  v99 = type metadata accessor for ConditionDetailChartFooterView(0);
  __chkstk_darwin(v99);
  v100 = &v89[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = sub_1000BA294(&qword_100BE1E80);
  __chkstk_darwin(v117);
  v98 = &v89[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1000BA294(&qword_100BE1968);
  __chkstk_darwin(v6);
  v114 = &v89[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v113 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  __chkstk_darwin(v113);
  v97 = &v89[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1000BA294(&qword_100BE1E88);
  __chkstk_darwin(v9);
  v116 = &v89[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v115 = &v89[-v12];
  v110 = sub_1000BA294(&qword_100BE1E90);
  __chkstk_darwin(v110);
  v14 = &v89[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v94 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v94);
  v93 = &v89[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v89[-v17];
  v111 = type metadata accessor for DetailChartViewModel(0);
  __chkstk_darwin(v111);
  v92 = &v89[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = (int *)type metadata accessor for DetailChart(0);
  __chkstk_darwin(v20);
  v22 = &v89[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v103 = sub_1000BA294(&qword_100BE1E98);
  __chkstk_darwin(v103);
  v95 = &v89[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v96 = &v89[-v25];
  v26 = sub_1000BA294(&qword_100BE1EA0);
  __chkstk_darwin(v26);
  v112 = &v89[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  v102 = &v89[-v29];
  v30 = type metadata accessor for PagingChartsView.ChartWrapperView(0);
  v31 = a1 + *(int *)(v30 + 20);
  v32 = *(int *)(type metadata accessor for ConditionDetailChartHeaderViewModel(0) + 20);
  v118 = v31;
  sub_100882E78(*(_BYTE *)(v31 + v32));
  v34 = *(_QWORD *)&__dst[24];
  v33 = *(_QWORD *)&__dst[32];
  sub_1000DB418(__dst, *(uint64_t *)&__dst[24]);
  v35 = dispatch thunk of ConditionDetailChartHeaderStyleType.preferredHeight.getter(v34, v33);
  v36 = sub_1000BA294(&qword_100BC37F8);
  ScaledMetric.wrappedValue.getter(__src, v36);
  v37 = v35 * fmax(__src[0], 1.0);
  v38 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(__dst);
  static Alignment.center.getter(v38);
  v39 = (int *)v30;
  v40 = _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v37, 0);
  v109 = __src[9];
  v108 = v120;
  v107 = v121;
  v106 = v122;
  v105 = v123;
  v104 = v124;
  v41 = *(_BYTE *)(a1 + *(int *)(v30 + 36)) == 1;
  v101 = a1;
  v91 = v30;
  if (v41)
  {
    v42 = v92;
    sub_100080C0C(v118, (uint64_t)v92, type metadata accessor for DetailChartViewModel);
    v43 = v39[6];
    v90 = *(unsigned __int8 *)(a1 + v39[7]);
    sub_10003B59C(a1 + v43, (uint64_t)__dst);
    v44 = *(_QWORD *)(a1 + v39[8]);
    *v22 = swift_getKeyPath(&unk_10099F668);
    v45 = sub_1000BA294(&qword_100BC2908);
    swift_storeEnumTagMultiPayload(v22, v45, 0);
    v46 = (_QWORD *)((char *)v22 + v20[5]);
    *v46 = swift_getKeyPath(&unk_10099F698);
    v47 = sub_1000BA294(&qword_100BC68C8);
    swift_storeEnumTagMultiPayload(v46, v47, 0);
    v48 = (char *)v22 + v20[6];
    *(_QWORD *)v48 = swift_getKeyPath(&unk_10099F6C8);
    v48[8] = 0;
    v49 = type metadata accessor for Date(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 1, 1, v49);
    v50 = v93;
    sub_100037768((uint64_t)v18, (uint64_t)v93, (uint64_t *)&unk_100BD35A0);
    State.init(wrappedValue:)(v50, v94);
    sub_100021A14((uint64_t)v18, (uint64_t *)&unk_100BD35A0);
    sub_10007802C((uint64_t)v42, (uint64_t)v22 + v20[7], type metadata accessor for DetailChartViewModel);
    *((_BYTE *)v22 + v20[8]) = v90;
    v51 = sub_10003C800((__int128 *)__dst, (uint64_t)v22 + v20[10]);
    *(_QWORD *)((char *)v22 + v20[11]) = v44;
    Hasher.init()(__src, v51);
    v65 = v111;
    v52 = (uint64_t *)(v118 + *(int *)(v111 + 20));
    v53 = *v52;
    v54 = v52[1];
    swift_bridgeObjectRetain(v54);
    String.hash(into:)(__src, v53, v54);
    swift_bridgeObjectRelease();
    type metadata accessor for ChartViewModel(0);
    sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)(__src, v49, v55);
    memcpy(__dst, __src, sizeof(__dst));
    v56 = Hasher.finalize()();
    v57 = v95;
    sub_100080C0C((uint64_t)v22, (uint64_t)v95, type metadata accessor for DetailChart);
    v58 = v103;
    *(_QWORD *)&v57[*(int *)(v103 + 52)] = v56;
    sub_1000215BC((uint64_t)v22, type metadata accessor for DetailChart);
    v59 = v96;
    sub_1000787D4((uint64_t)v57, (uint64_t)v96, &qword_100BE1E98);
    sub_100037768((uint64_t)v59, (uint64_t)v14, &qword_100BE1E98);
    swift_storeEnumTagMultiPayload(v14, v110, 0);
    v60 = sub_1000BA294(&qword_100BDD178);
    sub_10003D2DC(&qword_100BE1EA8, &qword_100BE1E98);
    v62 = v61;
    v63 = sub_10042BF7C();
    v77 = (uint64_t)v102;
    _ConditionalContent<>.init(storage:)(v14, v58, v60, v62, v63);
    sub_100021A14((uint64_t)v59, &qword_100BE1E98);
  }
  else
  {
    v64 = static Color.clear.getter(v40);
    v65 = v111;
    v66 = v118 + *(int *)(v111 + 20);
    v67 = type metadata accessor for ChartViewModel(0);
    v68 = *(_QWORD *)(v66 + *(int *)(v67 + 60));
    static Alignment.center.getter(v67);
    _FrameLayout.init(width:height:alignment:)(0, 1, v68, 0);
    v69 = *(_QWORD *)__dst;
    v70 = __dst[8];
    v71 = *(_QWORD *)&__dst[16];
    v72 = __dst[24];
    *(_QWORD *)v14 = v64;
    *((_WORD *)v14 + 4) = 256;
    *((_QWORD *)v14 + 2) = v69;
    v14[24] = v70;
    *((_QWORD *)v14 + 4) = v71;
    v14[40] = v72;
    *((_OWORD *)v14 + 3) = *(_OWORD *)&__dst[32];
    swift_storeEnumTagMultiPayload(v14, v110, 1);
    v73 = sub_1000BA294(&qword_100BDD178);
    sub_10003D2DC(&qword_100BE1EA8, &qword_100BE1E98);
    v75 = v74;
    v76 = sub_10042BF7C();
    v77 = (uint64_t)v102;
    _ConditionalContent<>.init(storage:)(v14, v103, v73, v75, v76);
  }
  v78 = v114;
  sub_100037768(v118 + *(int *)(v65 + 28), (uint64_t)v114, &qword_100BE1968);
  v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v113);
  v80 = (uint64_t)v115;
  if (v79 == 1)
  {
    sub_100021A14((uint64_t)v78, &qword_100BE1968);
    v81 = 1;
  }
  else
  {
    v82 = v97;
    sub_10007802C((uint64_t)v78, (uint64_t)v97, type metadata accessor for ConditionDetailChartFooterViewModel);
    v83 = v100;
    sub_100080C0C((uint64_t)v82, (uint64_t)v100, type metadata accessor for ConditionDetailChartFooterViewModel);
    sub_10003B59C(v101 + *(int *)(v91 + 24), (uint64_t)&v83[*(int *)(v99 + 20)]);
    v84 = v98;
    sub_100080C0C((uint64_t)v83, (uint64_t)v98, type metadata accessor for ConditionDetailChartFooterView);
    sub_1000215BC((uint64_t)v83, type metadata accessor for ConditionDetailChartFooterView);
    sub_1000215BC((uint64_t)v82, type metadata accessor for ConditionDetailChartFooterViewModel);
    sub_1000787D4((uint64_t)v84, v80, &qword_100BE1E80);
    v81 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v80, v81, 1, v117);
  v85 = v112;
  sub_100037768(v77, (uint64_t)v112, &qword_100BE1EA0);
  v86 = v116;
  sub_100037768(v80, (uint64_t)v116, &qword_100BE1E88);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(double *)(a2 + 16) = v109;
  *(_BYTE *)(a2 + 24) = v108;
  *(_QWORD *)(a2 + 32) = v107;
  *(_BYTE *)(a2 + 40) = v106;
  v87 = v104;
  *(_QWORD *)(a2 + 48) = v105;
  *(_QWORD *)(a2 + 56) = v87;
  v88 = sub_1000BA294(&qword_100BE1EB0);
  sub_100037768((uint64_t)v85, a2 + *(int *)(v88 + 48), &qword_100BE1EA0);
  sub_100037768((uint64_t)v86, a2 + *(int *)(v88 + 64), &qword_100BE1E88);
  sub_100021A14(v80, &qword_100BE1E88);
  sub_100021A14(v77, &qword_100BE1EA0);
  sub_100021A14((uint64_t)v86, &qword_100BE1E88);
  sub_100021A14((uint64_t)v85, &qword_100BE1EA0);
}

void sub_10041F898(uint64_t a1@<X8>)
{
  sub_1004201BC(&qword_100BE1E78, (void (*)(uint64_t))sub_10041EDC0, a1);
}

uint64_t sub_10041F8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for StickyChartHeadersView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v0, (uint64_t)v4, type metadata accessor for StickyChartHeadersView);
  v5 = type metadata accessor for MainActor(0);
  v6 = static MainActor.shared.getter(v5);
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = v8 + v3;
  v10 = v7 | 7;
  v11 = swift_allocObject(&unk_100B73A78, v9, v7 | 7);
  *(_QWORD *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v4, v11 + v8, type metadata accessor for StickyChartHeadersView);
  sub_100080C0C(v0, (uint64_t)v4, type metadata accessor for StickyChartHeadersView);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_100B73AA0, v9, v10);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v4, v14 + v8, type metadata accessor for StickyChartHeadersView);
  Binding.init(get:set:)(&v17, sub_100426B7C, v11, sub_100426CAC, v14, &type metadata for PickerDetailCondition);
  return v17;
}

uint64_t sub_10041FA20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = type metadata accessor for DetailCondition(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StickyChartHeadersView(0);
  v5 = sub_1000BA294(&qword_100BE16A8);
  Binding.wrappedValue.getter(v5);
  result = sub_10041FAB0((uint64_t)v4);
  *a1 = result;
  return result;
}

uint64_t sub_10041FAB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for DetailCondition(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for DetailCondition.conditions(_:))
    goto LABEL_2;
  if (v7 == enum case for DetailCondition.humidity(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 0;
  }
  else if (v7 == enum case for DetailCondition.pressure(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 1;
  }
  else if (v7 == enum case for DetailCondition.precipitationTotal(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 2;
  }
  else if (v7 == enum case for DetailCondition.uvIndex(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 4;
  }
  else if (v7 == enum case for DetailCondition.visibility(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 5;
  }
  else
  {
    if (v7 != enum case for DetailCondition.wind(_:))
    {
      v10 = sub_1000BA294(&qword_100BC3C38);
      v11 = swift_allocObject(v10, 72, 7);
      *(_OWORD *)(v11 + 16) = xmmword_10097CA50;
      v12 = DetailCondition.description.getter();
      v14 = v13;
      *(_QWORD *)(v11 + 56) = &type metadata for String;
      *(_QWORD *)(v11 + 64) = sub_1000B2E24();
      *(_QWORD *)(v11 + 32) = v12;
      *(_QWORD *)(v11 + 40) = v14;
      simulateCrash(_:_:)("Encountered an unrecognized DetailCondition: %@", 47, 2, v11);
      swift_bridgeObjectRelease();
LABEL_2:
      v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v8(a1, v2);
      v8((uint64_t)v6, v2);
      return 3;
    }
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 6;
  }
}

void sub_10041FCF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for DetailCondition(0);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __asm { BR              X11 }
}

uint64_t sub_10041FD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for DetailCondition.pressure(_:), v0);
  type metadata accessor for StickyChartHeadersView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v0);
  v4 = sub_1000BA294(&qword_100BE16A8);
  Binding.wrappedValue.setter(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
}

double sub_10041FE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v23[24];

  v0 = type metadata accessor for UserInterfaceSizeClass(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v23[-v11 - 8];
  __chkstk_darwin(v13);
  v15 = &v23[-v14 - 8];
  v16 = type metadata accessor for StickyChartHeadersView(0);
  sub_10011AA68(v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v0);
  v17 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100037768((uint64_t)v15, (uint64_t)v6, &qword_100BC5A68);
  sub_100037768((uint64_t)v12, v17, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v0) == 1)
  {
    sub_100021A14((uint64_t)v12, &qword_100BC5A68);
    sub_100021A14((uint64_t)v15, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
    {
      sub_100021A14((uint64_t)v6, &qword_100BC5A68);
LABEL_8:
      swift_beginAccess(&unk_100BDE048, v23, 1, 0);
      return sub_1003BD550();
    }
    goto LABEL_6;
  }
  sub_100037768((uint64_t)v6, (uint64_t)v9, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
  {
    sub_100021A14((uint64_t)v12, &qword_100BC5A68);
    sub_100021A14((uint64_t)v15, &qword_100BC5A68);
    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v9, v0);
LABEL_6:
    sub_100021A14((uint64_t)v6, &qword_100BC5E60);
    goto LABEL_9;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
  sub_10000F1C8(&qword_100BC5AB8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v3, v0, v18);
  v20 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v20(v3, v0);
  sub_100021A14((uint64_t)v12, &qword_100BC5A68);
  sub_100021A14((uint64_t)v15, &qword_100BC5A68);
  v20(v9, v0);
  sub_100021A14((uint64_t)v6, &qword_100BC5A68);
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  swift_beginAccess(&unk_100BDE048, v23, 1, 0);
  return sub_1003BD550() + 4.0;
}

void sub_1004201BC(uint64_t *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a3 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  sub_1000BA294(a1);
  a2(v3);
  sub_100079F70();
}

uint64_t sub_100420204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  int v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;

  v4 = type metadata accessor for StickyChartHeadersView(0);
  v60 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v61 = v5;
  v62 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1000BA294(&qword_100BE1928);
  v64 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v63 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v68 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1000BA294(&qword_100BC4978);
  __chkstk_darwin(v74);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v12);
  v70 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - v18;
  v20 = sub_1000BA294(&qword_100BE1930);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DetailChartsViewModel(0);
  __chkstk_darwin(v65);
  v71 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = *(_QWORD *)(a1 + *(int *)(v4 + 24));
  v26 = *(_QWORD *)(v25 + 16);
  v59 = (uint64_t)&v56 - v27;
  if (!v26)
  {
    swift_bridgeObjectRetain(v25);
    v36 = 1;
    v38 = v65;
    v37 = v66;
    goto LABEL_15;
  }
  v57 = a1;
  v58 = a2;
  v28 = v25 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  v73 = a1 + *(int *)(v4 + 40);
  v72 = *(_QWORD *)(v24 + 72);
  v56 = v25;
  swift_bridgeObjectRetain(v25);
  v29 = (uint64_t)v71;
  v75 = v19;
  while (1)
  {
    sub_100080C0C(v28, v29, type metadata accessor for DetailChartsViewModel);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v19, v29, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v7);
    sub_100037768(v73, (uint64_t)v16, (uint64_t *)&unk_100BD35A0);
    v30 = (uint64_t)&v11[*(int *)(v74 + 48)];
    sub_100037768((uint64_t)v19, (uint64_t)v11, (uint64_t *)&unk_100BD35A0);
    sub_100037768((uint64_t)v16, v30, (uint64_t *)&unk_100BD35A0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v7) == 1)
      break;
    v31 = v70;
    sub_100037768((uint64_t)v11, v70, (uint64_t *)&unk_100BD35A0);
    if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v7) == 1)
    {
      sub_100021A14((uint64_t)v16, (uint64_t *)&unk_100BD35A0);
      sub_100021A14((uint64_t)v75, (uint64_t *)&unk_100BD35A0);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v31, v7);
      v29 = (uint64_t)v71;
      goto LABEL_8;
    }
    v32 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v68, v30, v7);
    sub_10000F1C8((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    v69 = dispatch thunk of static Equatable.== infix(_:_:)(v31, v32, v7, v33);
    v34 = v8;
    v35 = *(void (**)(char *, uint64_t))(v8 + 8);
    v35(v32, v7);
    sub_100021A14((uint64_t)v16, (uint64_t *)&unk_100BD35A0);
    sub_100021A14((uint64_t)v75, (uint64_t *)&unk_100BD35A0);
    v35((char *)v31, v7);
    v8 = v34;
    sub_100021A14((uint64_t)v11, (uint64_t *)&unk_100BD35A0);
    v29 = (uint64_t)v71;
    if ((v69 & 1) != 0)
      goto LABEL_13;
LABEL_10:
    sub_1000215BC(v29, type metadata accessor for DetailChartsViewModel);
    v28 += v72;
    --v26;
    v19 = v75;
    if (!v26)
    {
      v36 = 1;
      a1 = v57;
      a2 = v58;
      v37 = v66;
      goto LABEL_14;
    }
  }
  sub_100021A14((uint64_t)v16, (uint64_t *)&unk_100BD35A0);
  sub_100021A14((uint64_t)v19, (uint64_t *)&unk_100BD35A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v7) != 1)
  {
LABEL_8:
    sub_100021A14((uint64_t)v11, &qword_100BC4978);
    goto LABEL_10;
  }
  sub_100021A14((uint64_t)v11, (uint64_t *)&unk_100BD35A0);
LABEL_13:
  v37 = v66;
  sub_10007802C(v29, v66, type metadata accessor for DetailChartsViewModel);
  v36 = 0;
  a1 = v57;
  a2 = v58;
LABEL_14:
  v38 = v65;
LABEL_15:
  _s7Weather24LocationCompositionStateOwst_0(v37, v36, 1, v38);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v38) == 1)
  {
    sub_100021A14(v37, &qword_100BE1930);
    v39 = 1;
    v40 = v67;
  }
  else
  {
    v41 = v59;
    sub_10007802C(v37, v59, type metadata accessor for DetailChartsViewModel);
    v42 = *(_QWORD *)(v41 + *(int *)(v38 + 20));
    v76 = v42;
    KeyPath = swift_getKeyPath(&unk_10099F348);
    v44 = v62;
    sub_100080C0C(a1, v62, type metadata accessor for StickyChartHeadersView);
    v45 = *(unsigned __int8 *)(v60 + 80);
    v46 = (v45 + 16) & ~v45;
    v47 = swift_allocObject(&unk_100B73A50, v46 + v61, v45 | 7);
    sub_10007802C(v44, v47 + v46, type metadata accessor for StickyChartHeadersView);
    swift_bridgeObjectRetain(v42);
    v48 = sub_1000BA294(&qword_100BE1938);
    v49 = sub_1000BA294(&qword_100BE1940);
    sub_10003D2DC(&qword_100BE1948, &qword_100BE1938);
    v51 = v50;
    v52 = sub_10042686C();
    sub_10003D2DC(&qword_100BE1958, &qword_100BE1940);
    v53 = v63;
    ForEach<>.init(_:id:content:)(&v76, KeyPath, sub_100426858, v47, v48, v49, v51, v52, v54);
    sub_1000215BC(v41, type metadata accessor for DetailChartsViewModel);
    v40 = v67;
    (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(a2, v53, v67);
    v39 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(a2, v39, 1, v40);
}

void sub_1004208B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[24];
  _OWORD v84[3];
  uint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v82 = a3;
  v70 = type metadata accessor for ConditionDetailChartFooterView(0);
  __chkstk_darwin(v70);
  v72 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1000BA294(&qword_100BE1960);
  __chkstk_darwin(v80);
  v71 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE1968);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  __chkstk_darwin(v77);
  v69 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BE1970);
  __chkstk_darwin(v11);
  v81 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v78 = (uint64_t)&v69 - v14;
  v15 = sub_1000BA294(&qword_100BE1978);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_1000BA294(&qword_100BE1980);
  __chkstk_darwin(v18);
  v79 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v69 - v24;
  *v17 = static Alignment.topLeading.getter(v26);
  v17[1] = v27;
  v28 = sub_1000BA294(&qword_100BE1988);
  sub_100420F28(a2, a1, (uint64_t)v17 + *(int *)(v28 + 44));
  v29 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  sub_100882E78(*(_BYTE *)(a1 + *(int *)(v29 + 20)));
  v30 = v88;
  v31 = v89;
  sub_1000DB418(&v85, v88);
  v32 = dispatch thunk of ConditionDetailChartHeaderStyleType.preferredHeight.getter(v30, v31);
  v33 = sub_1000BA294(&qword_100BC37F8);
  ScaledMetric.wrappedValue.getter(v84, v33);
  v34 = v32 * fmax(*(double *)v84, 1.0);
  v35 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v85);
  static Alignment.center.getter(v35);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v34, 0);
  sub_100037768((uint64_t)v17, (uint64_t)v22, &qword_100BE1978);
  v36 = &v22[*(int *)(v18 + 36)];
  v37 = v84[1];
  *(_OWORD *)v36 = v84[0];
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v84[2];
  sub_100021A14((uint64_t)v17, &qword_100BE1978);
  sub_1000787D4((uint64_t)v22, (uint64_t)v25, &qword_100BE1980);
  v38 = type metadata accessor for DetailChartViewModel(0);
  v39 = a1 + *(int *)(v38 + 20);
  v40 = type metadata accessor for ChartViewModel(0);
  v41 = *(_QWORD *)(v39 + *(int *)(v40 + 60));
  static Alignment.center.getter(v40);
  _FrameLayout.init(width:height:alignment:)(0, 1, v41, 0);
  v76 = v85;
  v75 = v86;
  v42 = v87;
  v43 = v88;
  v74 = v89;
  v73 = v90;
  sub_100037768(a1 + *(int *)(v38 + 28), (uint64_t)v9, &qword_100BE1968);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v77) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BE1968);
    v44 = 1;
    v45 = v80;
    v46 = v78;
  }
  else
  {
    v47 = v69;
    sub_10007802C((uint64_t)v9, v69, type metadata accessor for ConditionDetailChartFooterViewModel);
    v48 = v72;
    sub_100080C0C(v47, v72, type metadata accessor for ConditionDetailChartFooterViewModel);
    v49 = type metadata accessor for StickyChartHeadersView(0);
    sub_10003B59C(a2 + *(int *)(v49 + 28), v48 + *(int *)(v70 + 20));
    v51 = static Edge.Set.horizontal.getter(v50);
    swift_beginAccess(&unk_100BDE048, v83, 1, 0);
    v52 = sub_1003BD550();
    v53 = EdgeInsets.init(_all:)(v52);
    v55 = v54;
    v57 = v56;
    v59 = v58;
    v60 = v71;
    sub_100080C0C(v48, v71, type metadata accessor for ConditionDetailChartFooterView);
    v61 = v80;
    v62 = v60 + *(int *)(v80 + 36);
    *(_BYTE *)v62 = v51;
    *(double *)(v62 + 8) = v53;
    *(_QWORD *)(v62 + 16) = v55;
    *(_QWORD *)(v62 + 24) = v57;
    *(_QWORD *)(v62 + 32) = v59;
    *(_BYTE *)(v62 + 40) = 0;
    sub_1000215BC(v48, type metadata accessor for ConditionDetailChartFooterView);
    sub_1000215BC(v47, type metadata accessor for ConditionDetailChartFooterViewModel);
    v46 = v78;
    sub_1000787D4(v60, v78, &qword_100BE1960);
    v44 = 0;
    v45 = v61;
  }
  _s7Weather24LocationCompositionStateOwst_0(v46, v44, 1, v45);
  v63 = v79;
  sub_100037768((uint64_t)v25, v79, &qword_100BE1980);
  v64 = v81;
  sub_100037768(v46, v81, &qword_100BE1970);
  v65 = v82;
  sub_100037768(v63, v82, &qword_100BE1980);
  v66 = sub_1000BA294(&qword_100BE1990);
  v67 = v65 + *(int *)(v66 + 48);
  *(_QWORD *)v67 = 0;
  *(_BYTE *)(v67 + 8) = 1;
  *(_QWORD *)(v67 + 16) = v76;
  *(_BYTE *)(v67 + 24) = v75;
  *(_QWORD *)(v67 + 32) = v42;
  *(_BYTE *)(v67 + 40) = v43;
  v68 = v73;
  *(_QWORD *)(v67 + 48) = v74;
  *(_QWORD *)(v67 + 56) = v68;
  sub_100037768(v64, v65 + *(int *)(v66 + 64), &qword_100BE1970);
  sub_100021A14(v46, &qword_100BE1970);
  sub_100021A14((uint64_t)v25, &qword_100BE1980);
  sub_100021A14(v64, &qword_100BE1970);
  sub_100021A14(v63, &qword_100BE1980);
}

void sub_100420F28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  double v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v83 = a2;
  v81 = a3;
  v82 = sub_1000BA294(&qword_100BE1998);
  v4 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE19A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for LollipopDetailView(0);
  __chkstk_darwin(v74);
  v72 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BDD938);
  v76 = *(_QWORD *)(v11 - 8);
  v77 = v11;
  __chkstk_darwin(v11);
  v75 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1000BA294(&qword_100BE19A8);
  __chkstk_darwin(v73);
  v79 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE19B0);
  __chkstk_darwin(v14);
  v78 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v80 = (uint64_t)&v69 - v17;
  v18 = sub_1000BA294(&qword_100BE19B8);
  __chkstk_darwin(v18);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LollipopViewModel(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for StickyChartHeadersView(0);
  v25 = a1;
  if ((*(_BYTE *)(a1 + *(int *)(v24 + 32)) & 1) != 0)
    goto LABEL_4;
  v26 = v24;
  v69 = v25;
  v70 = v7;
  v71 = v14;
  v27 = type metadata accessor for DetailChartViewModel(0);
  sub_100037768(v83 + *(int *)(v27 + 24), (uint64_t)v20, &qword_100BE19B8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) == 1)
  {
    sub_100021A14((uint64_t)v20, &qword_100BE19B8);
    v14 = v71;
    v7 = v70;
LABEL_4:
    sub_100421610(v83, (uint64_t)v6);
    v28 = v4;
    v29 = v82;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v82);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v30 = sub_100372A3C(&qword_100BE19C0, &qword_100BE19B0, (void (*)(void))sub_1004268A8);
    v31 = sub_100075EB0(&qword_100BE19D0);
    v32 = sub_100075EB0((uint64_t *)&unk_100C0A510);
    sub_10003D2DC(&qword_100BE19D8, &qword_100BE19D0);
    v34 = v33;
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v85 = v31;
    v86 = v32;
    v87 = v34;
    v88 = v35;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v85, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v14, v29, v30, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
    return;
  }
  v37 = (uint64_t)v23;
  sub_10007802C((uint64_t)v20, (uint64_t)v23, type metadata accessor for LollipopViewModel);
  v38 = v72;
  sub_100080C0C((uint64_t)&v23[*(int *)(v21 + 28)], v72, type metadata accessor for LollipopDetailViewModel);
  v39 = *(double *)&v23[*(int *)(v21 + 24)];
  sub_10000F1C8((unint64_t *)&qword_100BDD980, type metadata accessor for LollipopDetailView);
  v40 = v75;
  View.offsetXWithinBounds(_:)(v74, v41, v39);
  sub_1000215BC(v38, type metadata accessor for LollipopDetailView);
  v43 = static Edge.Set.horizontal.getter(v42);
  v44 = EdgeInsets.init(_all:)(*(double *)(v69 + *(int *)(v26 + 36)));
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v76;
  v51 = v77;
  v53 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v79, v40, v77);
  v54 = v53 + *(int *)(v73 + 36);
  *(_BYTE *)v54 = v43;
  *(double *)(v54 + 8) = v44;
  *(_QWORD *)(v54 + 16) = v46;
  *(_QWORD *)(v54 + 24) = v48;
  *(_QWORD *)(v54 + 32) = v50;
  *(_BYTE *)(v54 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v51);
  v55 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  sub_100882E78(*(_BYTE *)(v83 + *(int *)(v55 + 20)));
  v56 = v88;
  v57 = v89;
  sub_1000DB418(&v85, v88);
  dispatch thunk of ConditionDetailChartHeaderStyleType.preferredHeight.getter(v56, v57);
  v58 = sub_1000BA294(&qword_100BC37F8);
  ScaledMetric.wrappedValue.getter(&v84, v58);
  v59 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v85);
  static Alignment.center.getter(v59);
  v60 = (uint64_t)v78;
  sub_100946228();
  sub_100021A14(v53, &qword_100BE19A8);
  v61 = v80;
  sub_1000787D4(v60, v80, &qword_100BE19B0);
  sub_100037768(v61, (uint64_t)v9, &qword_100BE19B0);
  swift_storeEnumTagMultiPayload(v9, v70, 0);
  v62 = sub_100372A3C(&qword_100BE19C0, &qword_100BE19B0, (void (*)(void))sub_1004268A8);
  v63 = sub_100075EB0(&qword_100BE19D0);
  v64 = sub_100075EB0((uint64_t *)&unk_100C0A510);
  sub_10003D2DC(&qword_100BE19D8, &qword_100BE19D0);
  v66 = v65;
  sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
  v85 = v63;
  v86 = v64;
  v87 = v66;
  v88 = v67;
  v68 = swift_getOpaqueTypeConformance2(&v85, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  _ConditionalContent<>.init(storage:)(v9, v71, v82, v62, v68);
  sub_100021A14(v61, &qword_100BE19B0);
  sub_1000215BC(v37, type metadata accessor for LollipopViewModel);
}

void sub_100421610(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];

  v44[1] = a2;
  v44[0] = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v44[0]);
  v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE19E0);
  __chkstk_darwin(v6);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BE19E8);
  __chkstk_darwin(v9);
  v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BE19D0);
  __chkstk_darwin(v12);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = static HorizontalAlignment.center.getter(v15);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v16 = sub_1000BA294(&qword_100BE19F0);
  v17 = (uint64_t)&v14[*(int *)(v16 + 44)];
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v18 = sub_1000BA294(&qword_100BE19F8);
  sub_100421954(a1, v2, (uint64_t)&v8[*(int *)(v18 + 44)]);
  LOBYTE(a1) = static Edge.Set.leading.getter(v19);
  v20 = type metadata accessor for StickyChartHeadersView(0);
  v21 = EdgeInsets.init(_all:)(*(double *)(v2 + *(int *)(v20 + 36)));
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_100037768((uint64_t)v8, (uint64_t)v11, &qword_100BE19E0);
  v28 = &v11[*(int *)(v9 + 36)];
  *v28 = a1;
  *((double *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  sub_100021A14((uint64_t)v8, &qword_100BE19E0);
  LOBYTE(a1) = static Edge.Set.trailing.getter();
  v29 = sub_10041FE6C();
  v30 = EdgeInsets.init(_all:)(v29);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_100037768((uint64_t)v11, v17, &qword_100BE19E8);
  v37 = v17 + *(int *)(sub_1000BA294(&qword_100BE1A00) + 36);
  *(_BYTE *)v37 = a1;
  *(double *)(v37 + 8) = v30;
  *(_QWORD *)(v37 + 16) = v32;
  *(_QWORD *)(v37 + 24) = v34;
  *(_QWORD *)(v37 + 32) = v36;
  *(_BYTE *)(v37 + 40) = 0;
  sub_100021A14((uint64_t)v11, &qword_100BE19E8);
  v38 = enum case for DynamicTypeSize.accessibility1(_:);
  v39 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v5, v38, v39);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v5, v5, v39, v40) & 1) != 0)
  {
    sub_10003D2DC(&qword_100BE19D8, &qword_100BE19D0);
    v42 = v41;
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    View.dynamicTypeSize<A>(_:)(v5, v12, v44[0], v42, v43);
    sub_100021A14((uint64_t)v5, (uint64_t *)&unk_100C0A510);
    sub_100021A14((uint64_t)v14, &qword_100BE19D0);
  }
  else
  {
    __break(1u);
  }
}

void sub_100421954(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t OpaqueTypeConformance2;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  char *v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  char *v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int16 v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;

  v116 = a3;
  v5 = type metadata accessor for DetailCondition(0);
  v110 = *(_QWORD *)(v5 - 8);
  v111 = v5;
  v6 = __chkstk_darwin(v5);
  v109 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for BorderlessButtonMenuStyle(0, v6);
  v99 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v98 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1000BA294(&qword_100BE1A08);
  v97 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v96 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1000BA294(&qword_100BE1A10);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v101 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1000BA294(&qword_100BE1A18);
  __chkstk_darwin(v105);
  v106 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v108 = (char *)&v95 - v13;
  __chkstk_darwin(v14);
  v107 = (uint64_t)&v95 - v15;
  v16 = sub_1000BA294(&qword_100BE1A20);
  __chkstk_darwin(v16);
  v112 = (uint64_t *)((char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v115 = (uint64_t)&v95 - v19;
  v20 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ConditionDetailChartHeaderView(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1000BA294(&qword_100BE1A28);
  __chkstk_darwin(v26);
  v114 = (uint64_t)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v95 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v95 - v32;
  sub_100080C0C(a1, (uint64_t)v22, type metadata accessor for ConditionDetailChartHeaderViewModel);
  v34 = sub_1000BA294(&qword_100BC37F8);
  v95 = a2;
  v35 = ScaledMetric.wrappedValue.getter(&v117, v34);
  v36 = fmax(v117, 1.0);
  v37 = static HorizontalAlignment.leading.getter(v35);
  sub_10007802C((uint64_t)v22, (uint64_t)v25, type metadata accessor for ConditionDetailChartHeaderViewModel);
  *(double *)&v25[*(int *)(v23 + 24)] = v36;
  *(_QWORD *)&v25[*(int *)(v23 + 20)] = v37;
  sub_100080C0C((uint64_t)v25, (uint64_t)v30, type metadata accessor for ConditionDetailChartHeaderView);
  v30[*(int *)(v26 + 36)] = 0;
  sub_1000215BC((uint64_t)v25, type metadata accessor for ConditionDetailChartHeaderView);
  v113 = v33;
  sub_1000787D4((uint64_t)v30, (uint64_t)v33, &qword_100BE1A28);
  if (*(_BYTE *)(a1 + *(int *)(v20 + 24)) == 1)
  {
    __chkstk_darwin(v38);
    v39 = v95;
    __chkstk_darwin(v40);
    v93 = v39;
    v41 = type metadata accessor for ChartHeaderMenuLabel(0);
    v42 = sub_1000BA294(&qword_100BE1A40);
    sub_10000F1C8(&qword_100BE1A48, type metadata accessor for ChartHeaderMenuLabel);
    v44 = v43;
    *(double *)&v45 = COERCE_DOUBLE(sub_100075EB0(&qword_100BE1A50));
    v46 = type metadata accessor for InlinePickerStyle(255);
    sub_10003D2DC(&qword_100BE1A58, &qword_100BE1A50);
    v117 = *(double *)&v45;
    v118 = v46;
    v119 = v47;
    v120 = &protocol witness table for InlinePickerStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v117, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
    v49 = v96;
    v50 = Menu.init(content:label:)(sub_100426950, &v95 - 4, sub_100426958, &v95 - 4, v41, v42, v44, OpaqueTypeConformance2);
    v51 = v98;
    BorderlessButtonMenuStyle.init()(v50);
    sub_10003D2DC(&qword_100BE1A60, &qword_100BE1A08);
    v53 = v52;
    sub_10000F1C8(&qword_100BE1A68, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonMenuStyle);
    v55 = v54;
    v56 = v101;
    v57 = *(double *)&v100;
    v58 = v103;
    View.menuStyle<A>(_:)(v51, v100, v103, v53, v54);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v51, v58);
    (*(void (**)(char *, double))(v97 + 8))(v49, COERCE_DOUBLE(*(_QWORD *)&v57));
    v59 = LocalizedStringKey.init(stringLiteral:)(0x6F43207472616843, 0xEF6E6F697469646ELL);
    v94 = 2;
    v93 = 89;
    v63 = Text.init(_:tableName:bundle:comment:)(v59, v61, v60 & 1, v62, 0, 0, 0, "Accessibility label for the popup button that presents the weather chart condition picker");
    v65 = v64;
    v67 = v66;
    v117 = v57;
    v118 = v58;
    v69 = v68 & 1;
    v119 = v53;
    v120 = v55;
    v70 = swift_getOpaqueTypeConformance2(&v117, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v71 = (uint64_t)v106;
    v72 = v104;
    View.accessibilityLabel(_:)(v63, v65, v69, v67, v104, v70);
    sub_1000D31B4(v63, v65, v69);
    v73 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v102 + 8))(v56, v72, v73);
    type metadata accessor for StickyChartHeadersView(0);
    v74 = sub_1000BA294(&qword_100BE16A8);
    v75 = v109;
    v76 = Binding.wrappedValue.getter(v74);
    *(double *)&v78 = COERCE_DOUBLE(DetailCondition.title.getter(v77, v76));
    v80 = v79;
    (*(void (**)(char *, uint64_t))(v110 + 8))(v75, v111);
    v117 = *(double *)&v78;
    v118 = v80;
    v81 = sub_100114EF8();
    v82 = (uint64_t)v108;
    ModifiedContent<>.accessibilityValue<A>(_:)(&v117, v105, &type metadata for String, v81);
    swift_bridgeObjectRelease();
    sub_100021A14(v71, &qword_100BE1A18);
    v83 = v107;
    sub_1000787D4(v82, v107, &qword_100BE1A18);
    sub_100037768(v83, v82, &qword_100BE1A18);
    v84 = (uint64_t)v112;
    *v112 = 0x4024000000000000;
    *(_BYTE *)(v84 + 8) = 0;
    v85 = sub_1000BA294(&qword_100BE1A70);
    sub_100037768(v82, v84 + *(int *)(v85 + 48), &qword_100BE1A18);
    sub_100021A14(v83, &qword_100BE1A18);
    sub_100021A14(v82, &qword_100BE1A18);
    v86 = sub_1000BA294(&qword_100BE1A30);
    _s7Weather24LocationCompositionStateOwst_0(v84, 0, 1, v86);
    v87 = v115;
    sub_1000787D4(v84, v115, &qword_100BE1A20);
  }
  else
  {
    v88 = sub_1000BA294(&qword_100BE1A30);
    v87 = v115;
    _s7Weather24LocationCompositionStateOwst_0(v115, 1, 1, v88);
    v84 = (uint64_t)v112;
  }
  v89 = (uint64_t)v113;
  v90 = v114;
  sub_100037768((uint64_t)v113, v114, &qword_100BE1A28);
  sub_100037768(v87, v84, &qword_100BE1A20);
  v91 = v116;
  sub_100037768(v90, v116, &qword_100BE1A28);
  v92 = sub_1000BA294(&qword_100BE1A38);
  sub_100037768(v84, v91 + *(int *)(v92 + 48), &qword_100BE1A20);
  sub_100021A14(v87, &qword_100BE1A20);
  sub_100021A14(v89, &qword_100BE1A28);
  sub_100021A14(v84, &qword_100BE1A20);
  sub_100021A14(v90, &qword_100BE1A28);
}

uint64_t sub_1004221F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[16];
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  _QWORD v30[2];
  char v31;

  v2 = type metadata accessor for InlinePickerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1000BA294(&qword_100BE1A50);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30[0] = sub_10041F8C0();
  v30[1] = v10;
  v31 = v11;
  v12 = LocalizedStringKey.init(stringLiteral:)(0x6F697469646E6F43, 0xE90000000000006ELL);
  v27[0] = Text.init(_:tableName:bundle:comment:)(v12, v14, v13 & 1, v15, 0, 0, 0, "Label for the condition picker of the weather chart");
  v27[1] = v16;
  v28 = v17 & 1;
  v29 = v18;
  v26 = a1;
  v19 = sub_1000BA294(&qword_100BE1A78);
  v20 = sub_10042697C();
  v21 = sub_1004269B8();
  v22 = Picker.init(selection:label:content:)(v30, v27, sub_100426974, v25, &type metadata for Text, &type metadata for PickerDetailCondition, v19, &protocol witness table for Text, v20, v21);
  InlinePickerStyle.init()(v22);
  sub_10003D2DC(&qword_100BE1A58, &qword_100BE1A50);
  View.pickerStyle<A>(_:)(v5, v6, v2, v23, &protocol witness table for InlinePickerStyle);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1004223E8(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v9 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StickyChartHeadersView(0) + 20));
  KeyPath = swift_getKeyPath(&unk_10099F370);
  swift_bridgeObjectRetain(v9);
  v2 = sub_1000BA294(&qword_100BE1AD8);
  v3 = sub_1000BA294(&qword_100BE1A98);
  sub_10003D2DC(&qword_100BE1AE0, &qword_100BE1AD8);
  v5 = v4;
  v6 = sub_10042697C();
  v7 = sub_100426A1C();
  return ForEach<>.init(_:id:content:)(&v9, KeyPath, sub_100422534, 0, v2, v3, v5, v6, v7);
}

uint64_t sub_1004224C8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v1 = type metadata accessor for DetailCondition(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))(v4, v0, v2);
  return sub_10041FAB0((uint64_t)v4);
}

void sub_100422534(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v4 = sub_1000BA294(&qword_100BE1AA8);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DetailCondition(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConditionPickerLabel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(int *)(type metadata accessor for DetailChartConditionInfo(0) + 20);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v13, v14, v7);
  v15(v10, v14, v7);
  LOBYTE(v14) = sub_10041FAB0((uint64_t)v10);
  sub_100080C0C((uint64_t)v13, (uint64_t)v6, type metadata accessor for ConditionPickerLabel);
  v6[*(int *)(v4 + 36)] = v14;
  sub_100037768((uint64_t)v6, a2, &qword_100BE1AA8);
  *(_BYTE *)(a2 + *(int *)(sub_1000BA294(&qword_100BE1A98) + 36)) = v14;
  sub_100021A14((uint64_t)v6, &qword_100BE1AA8);
  sub_1000215BC((uint64_t)v13, type metadata accessor for ConditionPickerLabel);
}

uint64_t sub_1004226C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for DetailCondition(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StickyChartHeadersView(0);
  v5 = sub_1000BA294(&qword_100BE16A8);
  Binding.wrappedValue.getter(v5);
  return sub_100422760((uint64_t)v4, a1, 64.0, 34.0);
}

uint64_t sub_100422760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  double v21;

  v8 = type metadata accessor for Font.TextStyle(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3;
  v12 = enum case for Font.TextStyle.body(_:);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  ((void (*)(char *, _QWORD, uint64_t, __n128))v14)(v11, enum case for Font.TextStyle.body(_:), v8, v9);
  v15 = sub_10010FE84();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v21, v11, &type metadata for CGFloat, v15);
  v16 = type metadata accessor for ChartHeaderMenuLabel(0);
  v21 = a4;
  v14(v11, v12, v8);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v21, v11, &type metadata for CGFloat, v15);
  v17 = a2 + *(int *)(v16 + 24);
  v18 = type metadata accessor for DetailCondition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a1, v18);
}

void sub_1004228A4(uint64_t a1@<X8>)
{
  sub_1004201BC(&qword_100BE1920, (void (*)(uint64_t))sub_100420204, a1);
}

void sub_1004228C8(uint64_t a1@<X8>)
{
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  id v20;
  uint64_t v21;
  char *v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  _OWORD v34[3];

  v32 = a1;
  v31 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v31);
  v2 = (double *)((char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1000BA294(&qword_100BE1D18);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE1D20);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BE1D28);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v5 + 1) = 0x4010000000000000;
  v5[16] = 0;
  v13 = sub_1000BA294(&qword_100BE1D30);
  sub_100422BF4((uint64_t)&v5[*(int *)(v13 + 44)]);
  v14 = sub_1000BA294(&qword_100BD3380);
  ScaledMetric.wrappedValue.getter(v34, v14);
  v15 = *(_QWORD *)&v34[0];
  type metadata accessor for ChartHeaderMenuLabel(0);
  v16 = ScaledMetric.wrappedValue.getter(v34, v14);
  v17 = *(_QWORD *)&v34[0];
  static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(v15, 0, v17, 0);
  sub_100037768((uint64_t)v5, (uint64_t)v8, &qword_100BE1D18);
  v18 = &v8[*(int *)(v6 + 36)];
  v19 = v34[1];
  *(_OWORD *)v18 = v34[0];
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v34[2];
  sub_100021A14((uint64_t)v5, &qword_100BE1D18);
  v20 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
  v21 = Color.init(_:)(v20);
  LOBYTE(v5) = static Edge.Set.all.getter(v21);
  sub_100037768((uint64_t)v8, (uint64_t)v11, &qword_100BE1D20);
  v22 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v22 = v21;
  v22[8] = (char)v5;
  sub_100021A14((uint64_t)v8, &qword_100BE1D20);
  ScaledMetric.wrappedValue.getter(&v33, v14);
  v23 = v33 * 0.5;
  v24 = (char *)v2 + *(int *)(v31 + 20);
  v25 = enum case for RoundedCornerStyle.continuous(_:);
  v26 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  *v2 = v23;
  v2[1] = v23;
  v27 = sub_1000BA294(&qword_100BE1D38);
  v28 = v32;
  v29 = v32 + *(int *)(v27 + 36);
  sub_100080C0C((uint64_t)v2, v29, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v29 + *(int *)(sub_1000BA294(&qword_100BD3DA8) + 36)) = 256;
  sub_100037768((uint64_t)v11, v28, &qword_100BE1D28);
  sub_1000215BC((uint64_t)v2, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100021A14((uint64_t)v11, &qword_100BE1D28);
}

uint64_t sub_100422BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v2 = type metadata accessor for Font.TextStyle(0);
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  __chkstk_darwin(v2);
  v55 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1000BA294(&qword_100BCF148);
  __chkstk_darwin(v51);
  v5 = (uint64_t *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1000BA294(&qword_100BCF140);
  __chkstk_darwin(v50);
  v10 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_1000BA294(&qword_100BD63E0);
  __chkstk_darwin(v53);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v54 = (uint64_t)&v46 - v14;
  type metadata accessor for ChartHeaderMenuLabel(0);
  v15 = DetailCondition.usesCustomSymbol.getter();
  v17 = DetailCondition.filledSymbolName.getter(v16);
  if ((v15 & 1) != 0)
  {
    v19 = Image.init(_:bundle:)(v17, v18, 0);
    v20 = static Font.body.getter(v19);
    KeyPath = swift_getKeyPath(&unk_10099F598);
    swift_retain();
    swift_retain();
    v22 = sub_100527C9C(v19, KeyPath, v20);
  }
  else
  {
    v19 = Image.init(systemName:)(v17, v18);
    v20 = static Font.body.getter(v19);
    KeyPath = swift_getKeyPath(&unk_10099F598);
    swift_retain();
    swift_retain();
    v22 = sub_100527DD0(v19, KeyPath, v20);
  }
  v48 = v23;
  v49 = v22;
  v47 = v24;
  v26 = v25;
  swift_release(v20);
  swift_release_n(KeyPath, 2);
  swift_release_n(v19, 2);
  v27 = v26 & 1;
  v28 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEC0000006E776F64);
  v29 = v52;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v52);
  v30 = swift_getKeyPath(&unk_10099F5C8);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v5 + *(int *)(v51 + 28), v8, v29);
  *v5 = v30;
  sub_100037768((uint64_t)v5, (uint64_t)v10 + *(int *)(v50 + 36), &qword_100BCF148);
  *v10 = v28;
  swift_retain();
  sub_100021A14((uint64_t)v5, &qword_100BCF148);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  v31 = swift_release(v28);
  v33 = v55;
  v32 = v56;
  v34 = v57;
  v35 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v56 + 104))(v55, enum case for Font.TextStyle.body(_:), v57, v31);
  static Font.Weight.bold.getter(v35);
  v36 = static Font.system(_:weight:)(v33);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  v37 = swift_getKeyPath(&unk_10099F598);
  sub_100037768((uint64_t)v10, (uint64_t)v12, &qword_100BCF140);
  v38 = (uint64_t *)&v12[*(int *)(v53 + 36)];
  *v38 = v37;
  v38[1] = v36;
  sub_100021A14((uint64_t)v10, &qword_100BCF140);
  v39 = v54;
  sub_1000787D4((uint64_t)v12, v54, &qword_100BD63E0);
  sub_100037768(v39, (uint64_t)v12, &qword_100BD63E0);
  *(_QWORD *)a1 = 0x4028000000000000;
  *(_BYTE *)(a1 + 8) = 0;
  v41 = v48;
  v40 = v49;
  *(_QWORD *)(a1 + 16) = v49;
  *(_QWORD *)(a1 + 24) = v41;
  v42 = v47;
  *(_QWORD *)(a1 + 32) = v47;
  *(_BYTE *)(a1 + 40) = v27;
  v43 = sub_1000BA294(&qword_100BE1D40);
  sub_100037768((uint64_t)v12, a1 + *(int *)(v43 + 64), &qword_100BD63E0);
  v44 = a1 + *(int *)(v43 + 80);
  *(_QWORD *)v44 = 0x4028000000000000;
  *(_BYTE *)(v44 + 8) = 0;
  sub_100427E78(v40, v41, v42);
  sub_100021A14(v39, &qword_100BD63E0);
  sub_100021A14((uint64_t)v12, &qword_100BD63E0);
  return sub_100427EAC(v40, v41, v42);
}

uint64_t sub_10042306C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  _BYTE v17[16];
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  _QWORD v21[2];

  v1 = sub_1000BA294(&qword_100BE1D48);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = v0;
  v18 = v0;
  v5 = sub_1000BA294(&qword_100BE1D50);
  v6 = sub_1000BA294(&qword_100BE1D58);
  sub_10003D2DC(&qword_100BE1D60, &qword_100BE1D50);
  v8 = v7;
  v9 = sub_100427EEC();
  v10 = Label.init(title:icon:)(sub_100427EDC, v19, sub_100427EE4, v17, v5, v6, v8, v9);
  v21[0] = DetailCondition.accessibilityLabel.getter(v10);
  v21[1] = v11;
  sub_10003D2DC(&qword_100BE1D70, &qword_100BE1D48);
  v13 = v12;
  v14 = sub_100114EF8();
  View.accessibilityLabel<A>(_:)(v21, v1, &type metadata for String, v13, v14);
  v15 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v2 + 8))(v4, v1, v15);
}

uint64_t sub_1004231D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v4[2] = a1;
  v1 = sub_1000BA294(&qword_100BE1D78);
  sub_10003D2DC(&qword_100BE1D80, &qword_100BE1D78);
  return LabelGroup.init(content:)(sub_100427F48, v4, v1, v2);
}

double sub_10042324C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  double result;
  uint64_t v24;
  uint64_t v25;

  v24 = DetailCondition.title.getter(a1, a3);
  v25 = v4;
  v5 = sub_100114EF8();
  v6 = Text.init<A>(_:)(&v24, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = DetailCondition.subtitle.getter(v6, v7);
  if (v14)
  {
    v24 = v13;
    v25 = v14;
    v15 = Text.init<A>(_:)(&v24, &type metadata for String, v5);
    v17 = v16;
    v19 = v18;
    v21 = v20 & 1;
  }
  else
  {
    v15 = 0;
    v17 = 0;
    v21 = 0;
    v19 = 0;
  }
  v22 = v10 & 1;
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 56) = v19;
  sub_1000D55D4(v6, v8, v22);
  swift_bridgeObjectRetain(v12);
  sub_10010F980(v15, v17, v21, v19);
  sub_10010F9B0(v15, v17, v21, v19);
  sub_1000D31B4(v6, v8, v22);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10042337C@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = DetailCondition.usesCustomSymbol.getter();
  v3 = DetailCondition.symbolName.getter();
  if ((v2 & 1) != 0)
  {
    v7 = Image.init(_:bundle:)(v3, v4, 0);
    v8 = 0;
  }
  else
  {
    v7 = Image.init(systemName:)(v3, v4);
    v8 = 1;
  }
  result = _ConditionalContent<>.init(storage:)(&v7, &type metadata for Image, &type metadata for Image, &protocol witness table for Image, &protocol witness table for Image);
  v6 = v10;
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

void sub_100423418(_BYTE *a1@<X8>)
{
  char v2;

  LocationSearchEntityFromStringResolver.init()();
  *a1 = v2;
}

uint64_t sub_100423448()
{
  return sub_100423494((uint64_t (*)(uint64_t))sub_10041D0DC);
}

uint64_t sub_100423458(CGFloat *a1)
{
  uint64_t v2;

  type metadata accessor for ConditionDetailInnerView(0);
  sub_1000987F4();
  return sub_10041D1DC(a1, v2);
}

uint64_t sub_100423488()
{
  return sub_100423494((uint64_t (*)(uint64_t))sub_10041D294);
}

uint64_t sub_100423494(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ConditionDetailInnerView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1004234D4()
{
  return sub_100423494((uint64_t (*)(uint64_t))sub_10041D3C0);
}

unint64_t sub_1004234E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1638;
  if (!qword_100BE1638)
  {
    v1 = sub_100075EB0(&qword_100BD9B30);
    sub_100423564();
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1638);
  }
  return result;
}

unint64_t sub_100423564()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_100BE1640;
  if (!qword_100BE1640)
  {
    v1 = sub_100075EB0(&qword_100BD9B28);
    v2 = sub_100075EB0(&qword_100BE1628);
    sub_10003D2DC(&qword_100BE1648, &qword_100BE1628);
    v4[0] = v2;
    v4[1] = v3;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1640);
  }
  return result;
}

void sub_100423618(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10041C5A0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100423620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1658;
  if (!qword_100BE1658)
  {
    v1 = sub_100075EB0(&qword_100BE1650);
    sub_10003D2DC(&qword_100BE1660, &qword_100BE1668);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1658);
  }
  return result;
}

uint64_t type metadata accessor for PagingChartsView(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BE1710, (uint64_t)&nominal type descriptor for PagingChartsView);
}

uint64_t sub_1004236BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1000E7C34();
  v0 = (_QWORD *)sub_1000C130C();
  return sub_10041D034(v0, v1);
}

uint64_t sub_1004236E8(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for ConditionDetailPlatterViews(a2, a1);
  return a2;
}

uint64_t sub_10042371C(uint64_t a1)
{
  destroy for ConditionDetailPlatterViews(a1);
  return a1;
}

uint64_t sub_10042374C()
{
  return sub_10042387C((uint64_t (*)(uint64_t))sub_10041B7C0);
}

uint64_t sub_10042375C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for ConditionDetailInnerView(0);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1000EAFB0();
  sub_1000C21CC();
  swift_bridgeObjectRelease();
  sub_100099508();
  v4 = sub_10009D59C();
  sub_1000D17B8(v4);
  v5 = sub_100099A94();
  if (!sub_1000BBDB0(v5))
  {
    swift_bridgeObjectRelease();
    sub_1000B4968(v3[5]);
    sub_1000B4968(v3[6]);
    sub_1000B4968(v3[7]);
  }
  sub_1000BD450();
  v6 = sub_1000D9588();
  sub_10009BF1C(v6);
  sub_1000F4444();
  sub_1000D09DC();
  sub_1000C1AB4();
  v7 = sub_1000D05FC();
  sub_10009BF1C(v7);
  v8 = sub_1000CF854();
  sub_1000B2568(v8);
  sub_1000C5EBC();
  sub_1000BEE68();
  return sub_1000C5EA0(v0, v2, v1);
}

uint64_t sub_100423840(uint64_t a1)
{
  return sub_1004238C4(a1, (uint64_t (*)(uint64_t))sub_10041B83C);
}

uint64_t sub_10042384C()
{
  uint64_t v0;

  return sub_10041B9A8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), sub_100223C90);
}

uint64_t sub_100423870()
{
  return sub_10042387C((uint64_t (*)(uint64_t))sub_10041B5A4);
}

uint64_t sub_10042387C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;

  type metadata accessor for ConditionDetailInnerView(0);
  v1 = sub_1000D8F94();
  return a1(v1);
}

uint64_t sub_1004238B8(uint64_t a1)
{
  return sub_1004238C4(a1, (uint64_t (*)(uint64_t))sub_10041B600);
}

uint64_t sub_1004238C4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  type metadata accessor for ConditionDetailInnerView(0);
  v2 = sub_1000D1290();
  return a2(v2);
}

uint64_t sub_1004238FC()
{
  uint64_t v0;

  return sub_10041B9A8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), sub_100223CA0);
}

double destroy for ConditionDetailPlatterViews(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 48)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ConditionDetailPlatterViews(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);
  uint64_t v9;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain(v4);
  v8(a1 + 8, v5, v7);
  v9 = a2[6];
  *(_QWORD *)(a1 + 48) = v9;
  swift_retain(v9);
  return a1;
}

uint64_t *assignWithCopy for ConditionDetailPlatterViews(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  sub_100094D04(a1 + 1, a2 + 1);
  v5 = a2[6];
  v6 = a1[6];
  a1[6] = v5;
  swift_retain();
  swift_release(v6);
  return a1;
}

uint64_t assignWithTake for ConditionDetailPlatterViews(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for ConditionDetailPlatterViews()
{
  return &type metadata for ConditionDetailPlatterViews;
}

uint64_t *sub_100423A98(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v50;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    a1[1] = v8;
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for DetailChartSelection(0);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, (uint64_t)v12))
    {
      v13 = sub_1000BA294(&qword_100BD0B58);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = v11[1];
      *v10 = *v11;
      v10[1] = v14;
      v15 = v12[5];
      v50 = (char *)v10 + v15;
      v16 = (char *)v11 + v15;
      v17 = type metadata accessor for Date(0);
      v18 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
      v19 = swift_bridgeObjectRetain(v14);
      v18(v50, v16, v17, v19);
      ((void (*)(char *, char *, uint64_t))v18)((char *)v10 + v12[6], (char *)v11 + v12[6], v17);
      ((void (*)(char *, char *, uint64_t))v18)((char *)v10 + v12[7], (char *)v11 + v12[7], v17);
      *(_QWORD *)((char *)v10 + v12[8]) = *(_QWORD *)((char *)v11 + v12[8]);
      v20 = v12[9];
      v21 = (char *)v10 + v20;
      v22 = (char *)v11 + v20;
      v21[8] = v22[8];
      *(_QWORD *)v21 = *(_QWORD *)v22;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, (uint64_t)v12);
    }
    v23 = a3[7];
    v24 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)((char *)v7 + v23 + 24) = v24;
    (**(void (***)(void))(v24 - 8))();
    v25 = a3[9];
    *(uint64_t *)((char *)v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v7 + v25) = *(uint64_t *)((char *)a2 + v25);
    v26 = a3[10];
    v27 = (uint64_t *)((char *)v7 + v26);
    v28 = (char *)a2 + v26;
    v29 = *(uint64_t *)((char *)a2 + v26 + 8);
    *v27 = *(uint64_t *)((char *)a2 + v26);
    v27[1] = v29;
    swift_retain();
    swift_retain();
    v30 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
    v31 = (char *)v27 + v30;
    v32 = &v28[v30];
    v33 = type metadata accessor for DetailCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    v34 = a3[11];
    v35 = (uint64_t *)((char *)v7 + v34);
    v36 = (char *)a2 + v34;
    v37 = *(uint64_t *)((char *)a2 + v34 + 8);
    *v35 = *(uint64_t *)((char *)a2 + v34);
    v35[1] = v37;
    swift_retain();
    swift_retain();
    v38 = *(int *)(sub_1000BA294(&qword_100BE16B0) + 32);
    v39 = (char *)v35 + v38;
    v40 = &v36[v38];
    v41 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v43 = a3[12];
    v44 = a3[13];
    v45 = (char *)v7 + v43;
    v46 = (char *)a2 + v43;
    *v45 = *v46;
    *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
    v47 = (char *)v7 + v44;
    v48 = (char *)a2 + v44;
    *v47 = *v48;
    *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
    swift_retain();
  }
  swift_retain();
  return v7;
}

double sub_100423D98(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = (int *)type metadata accessor for DetailChartSelection(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, (uint64_t)v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + v5[5];
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v8(v4 + v5[6], v7);
    v8(v4 + v5[7], v7);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + a2[7]));
  v9 = (_QWORD *)(a1 + a2[10]);
  swift_release(*v9);
  swift_release(v9[1]);
  v10 = (char *)v9 + *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v11 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = (_QWORD *)(a1 + a2[11]);
  swift_release(*v12);
  swift_release(v12[1]);
  v13 = (uint64_t)v12 + *(int *)(sub_1000BA294(&qword_100BE16B0) + 32);
  v14 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_release(*(_QWORD *)(a1 + a2[12] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[13] + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_100423F28(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v49;

  v6 = *a2;
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a3[6];
  v9 = (uint64_t *)((char *)a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for DetailChartSelection(0);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, (uint64_t)v11))
  {
    v12 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = v11[5];
    v49 = (char *)v9 + v14;
    v15 = (char *)v10 + v14;
    v16 = type metadata accessor for Date(0);
    v17 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
    v18 = swift_bridgeObjectRetain(v13);
    v17(v49, v15, v16, v18);
    ((void (*)(char *, char *, uint64_t))v17)((char *)v9 + v11[6], (char *)v10 + v11[6], v16);
    ((void (*)(char *, char *, uint64_t))v17)((char *)v9 + v11[7], (char *)v10 + v11[7], v16);
    *(_QWORD *)((char *)v9 + v11[8]) = *(_QWORD *)((char *)v10 + v11[8]);
    v19 = v11[9];
    v20 = (char *)v9 + v19;
    v21 = (char *)v10 + v19;
    v20[8] = v21[8];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  v22 = a3[7];
  v23 = *(_OWORD *)((char *)a2 + v22 + 24);
  *(_OWORD *)((char *)a1 + v22 + 24) = v23;
  (**(void (***)(void))(v23 - 8))();
  v24 = a3[9];
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
  v25 = a3[10];
  v26 = (uint64_t *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(uint64_t *)((char *)a2 + v25 + 8);
  *v26 = *(uint64_t *)((char *)a2 + v25);
  v26[1] = v28;
  swift_retain();
  swift_retain();
  v29 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v30 = (char *)v26 + v29;
  v31 = &v27[v29];
  v32 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  v33 = a3[11];
  v34 = (uint64_t *)((char *)a1 + v33);
  v35 = (char *)a2 + v33;
  v36 = *(uint64_t *)((char *)a2 + v33 + 8);
  *v34 = *(uint64_t *)((char *)a2 + v33);
  v34[1] = v36;
  swift_retain();
  swift_retain();
  v37 = *(int *)(sub_1000BA294(&qword_100BE16B0) + 32);
  v38 = (char *)v34 + v37;
  v39 = &v35[v37];
  v40 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v42 = a3[12];
  v43 = a3[13];
  v44 = (char *)a1 + v42;
  v45 = (char *)a2 + v42;
  *v44 = *v45;
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  v46 = (char *)a1 + v43;
  v47 = (char *)a2 + v43;
  *v46 = *v47;
  *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *sub_100424200(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  char v65;
  char *v66;

  v6 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a2[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (uint64_t *)((char *)a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for DetailChartSelection(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, (uint64_t)v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, (uint64_t)v11);
  if (v12)
  {
    if (!v13)
    {
      *v9 = *v10;
      v14 = v10[1];
      v9[1] = v14;
      v15 = v11[5];
      v66 = (char *)v9 + v15;
      v16 = (char *)v10 + v15;
      v17 = type metadata accessor for Date(0);
      v18 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
      v19 = swift_bridgeObjectRetain(v14);
      v18(v66, v16, v17, v19);
      ((void (*)(char *, char *, uint64_t))v18)((char *)v9 + v11[6], (char *)v10 + v11[6], v17);
      ((void (*)(char *, char *, uint64_t))v18)((char *)v9 + v11[7], (char *)v10 + v11[7], v17);
      *(_QWORD *)((char *)v9 + v11[8]) = *(_QWORD *)((char *)v10 + v11[8]);
      v20 = v11[9];
      v21 = (char *)v9 + v20;
      v22 = (char *)v10 + v20;
      v23 = v22[8];
      *(_QWORD *)v21 = *(_QWORD *)v22;
      v21[8] = v23;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1000215BC((uint64_t)v9, type metadata accessor for DetailChartSelection);
LABEL_6:
    v24 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  *v9 = *v10;
  v56 = v10[1];
  v9[1] = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease();
  v57 = v11[5];
  v58 = (char *)v9 + v57;
  v59 = (char *)v10 + v57;
  v60 = type metadata accessor for Date(0);
  v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 24);
  v61(v58, v59, v60);
  v61((char *)v9 + v11[6], (char *)v10 + v11[6], v60);
  v61((char *)v9 + v11[7], (char *)v10 + v11[7], v60);
  *(_QWORD *)((char *)v9 + v11[8]) = *(_QWORD *)((char *)v10 + v11[8]);
  v62 = v11[9];
  v63 = (char *)v9 + v62;
  v64 = (char *)v10 + v62;
  v65 = v64[8];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  v63[8] = v65;
LABEL_7:
  sub_100094D04((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]));
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  v25 = a3[10];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(uint64_t *)((char *)a1 + v25);
  *(uint64_t *)((char *)a1 + v25) = *(uint64_t *)((char *)a2 + v25);
  swift_retain();
  swift_release(v28);
  v29 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_retain();
  swift_release(v29);
  v30 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v31 = &v26[v30];
  v32 = &v27[v30];
  v33 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = a3[11];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = *(uint64_t *)((char *)a1 + v34);
  *(uint64_t *)((char *)a1 + v34) = *(uint64_t *)((char *)a2 + v34);
  swift_retain();
  swift_release(v37);
  v38 = *((_QWORD *)v35 + 1);
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_retain();
  swift_release(v38);
  v39 = *(int *)(sub_1000BA294(&qword_100BE16B0) + 32);
  v40 = &v35[v39];
  v41 = &v36[v39];
  v42 = type metadata accessor for Date(0);
  v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v42);
  v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42);
  if (!v43)
  {
    v45 = *(_QWORD *)(v42 - 8);
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v40, v41, v42);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v42);
    goto LABEL_12;
  }
  if (v44)
  {
LABEL_12:
    v46 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
LABEL_13:
  v47 = a3[12];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  *v48 = *v49;
  v50 = *((_QWORD *)v48 + 1);
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  swift_retain();
  swift_release(v50);
  v51 = a3[13];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *v52 = *v53;
  v54 = *((_QWORD *)v52 + 1);
  *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
  swift_retain();
  swift_release(v54);
  return a1;
}

_OWORD *sub_100424650(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for DetailChartSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = v9[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for Date(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v15(v12, v13, v14);
    v15((char *)v7 + v9[6], (char *)v8 + v9[6], v14);
    v15((char *)v7 + v9[7], (char *)v8 + v9[7], v14);
    *(_QWORD *)((char *)v7 + v9[8]) = *(_QWORD *)((char *)v8 + v9[8]);
    v16 = v9[9];
    v17 = (char *)v7 + v16;
    v18 = (char *)v8 + v16;
    v17[8] = v18[8];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  v24 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a2 + v24);
  v28 = *(_QWORD *)((char *)a2 + v24 + 8);
  *v25 = v27;
  v25[1] = v28;
  v29 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v30 = (char *)v25 + v29;
  v31 = &v26[v29];
  v32 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  v33 = a3[11];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)((char *)a2 + v33 + 8);
  *v34 = *(_QWORD *)((char *)a2 + v33);
  v34[1] = v36;
  v37 = *(int *)(sub_1000BA294(&qword_100BE16B0) + 32);
  v38 = (char *)v34 + v37;
  v39 = &v35[v37];
  v40 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v42 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v42) = *(_OWORD *)((char *)a2 + v42);
  return a1;
}

_QWORD *sub_1004248B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for DetailChartSelection(0);
  v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, (uint64_t)v9);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v9);
  if (v10)
  {
    if (!v11)
    {
      *(_OWORD *)v7 = *(_OWORD *)v8;
      v12 = v9[5];
      v13 = &v7[v12];
      v14 = &v8[v12];
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      v16(&v7[v9[6]], &v8[v9[6]], v15);
      v16(&v7[v9[7]], &v8[v9[7]], v15);
      *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
      v17 = v9[9];
      v18 = &v7[v17];
      v19 = &v8[v17];
      v18[8] = v19[8];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_1000215BC((uint64_t)v7, type metadata accessor for DetailChartSelection);
LABEL_6:
    v20 = sub_1000BA294(&qword_100BD0B58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v57 = *((_QWORD *)v8 + 1);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *((_QWORD *)v7 + 1) = v57;
  swift_bridgeObjectRelease();
  v58 = v9[5];
  v59 = &v7[v58];
  v60 = &v8[v58];
  v61 = type metadata accessor for Date(0);
  v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40);
  v62(v59, v60, v61);
  v62(&v7[v9[6]], &v8[v9[6]], v61);
  v62(&v7[v9[7]], &v8[v9[7]], v61);
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  v63 = v9[9];
  v64 = &v7[v63];
  v65 = &v8[v63];
  v64[8] = v65[8];
  *(_QWORD *)v64 = *(_QWORD *)v65;
LABEL_7:
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + v21));
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  v25 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  v26 = a3[10];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a1 + v26);
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  swift_release(v29);
  v30 = *((_QWORD *)v27 + 1);
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_release(v30);
  v31 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v32 = &v27[v31];
  v33 = &v28[v31];
  v34 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[11];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a1 + v35);
  *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
  swift_release(v38);
  v39 = *((_QWORD *)v36 + 1);
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  swift_release(v39);
  v40 = *(int *)(sub_1000BA294(&qword_100BE16B0) + 32);
  v41 = &v36[v40];
  v42 = &v37[v40];
  v43 = type metadata accessor for Date(0);
  v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v43);
  v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43);
  if (!v44)
  {
    v46 = *(_QWORD *)(v43 - 8);
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v41, v42, v43);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v43);
    goto LABEL_12;
  }
  if (v45)
  {
LABEL_12:
    v47 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
LABEL_13:
  v48 = a3[12];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  *v49 = *v50;
  v51 = *((_QWORD *)v49 + 1);
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  swift_release(v51);
  v52 = a3[13];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  *v53 = *v54;
  v55 = *((_QWORD *)v53 + 1);
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  swift_release(v55);
  return a1;
}

uint64_t sub_100424CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100424CB4);
}

void sub_100424CB4(unint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*a1);
    sub_100079F70();
  }
  else
  {
    sub_1000BA294(&qword_100BD0B58);
    sub_100088FF0();
    if (v9)
    {
      v7 = v6;
      v8 = a3[6];
    }
    else
    {
      sub_1000BA294(&qword_100BE16A8);
      sub_100088FF0();
      if (v9)
      {
        v7 = v10;
        v8 = a3[10];
      }
      else
      {
        v7 = sub_1000BA294(&qword_100BE16B0);
        v8 = a3[11];
      }
    }
    sub_1000B250C((uint64_t)a1 + v8, a2, v7);
  }
}

uint64_t sub_100424D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100424D5C);
}

void sub_100424D5C()
{
  int v0;
  _QWORD *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000993A8();
  if (v2)
  {
    *v1 = (v0 - 1);
    sub_100079F70();
  }
  else
  {
    sub_1000BA294(&qword_100BD0B58);
    sub_10009D2E8();
    if (!v2)
    {
      sub_1000BA294(&qword_100BE16A8);
      sub_10009D2E8();
      if (!v3)
        sub_1000BA294(&qword_100BE16B0);
    }
    sub_100098D08();
    sub_1000987C4(v4, v5, v6, v7);
  }
}

void sub_100424DF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100158CD4(319, (unint64_t *)&qword_100BD0C90, type metadata accessor for DetailChartSelection);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v2 - 8) + 64;
    v8[3] = "(";
    v8[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[5] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_100158CD4(319, &qword_100BE1720, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
    if (v5 <= 0x3F)
    {
      v8[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_100158AA8(319, (unint64_t *)&unk_100BE1728, (uint64_t *)&unk_100BD35A0);
      if (v7 <= 0x3F)
      {
        v8[7] = *(_QWORD *)(v6 - 8) + 64;
        v8[8] = &unk_10099F0A8;
        v8[9] = &unk_10099F0A8;
        swift_initStructMetadata(a1, 256, 10, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100424F0C()
{
  return sub_100372A3C(&qword_100BE1778, &qword_100BE1618, (void (*)(void))sub_100424F40);
}

unint64_t sub_100424F40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  result = qword_100BE1780;
  if (!qword_100BE1780)
  {
    v1 = sub_100075EB0(&qword_100BE1608);
    v2 = sub_100075EB0(&qword_100BE15F8);
    v3 = type metadata accessor for DetailCondition(255);
    sub_10003D2DC(&qword_100BE1610, &qword_100BE15F8);
    v5 = v4;
    sub_10000F1C8(&qword_100BCE760, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v5;
    v7[3] = v6;
    swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_10003D2DC(&qword_100BE1788, &qword_100BE1790);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1780);
  }
  return result;
}

uint64_t sub_100425048(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB48BC, 1);
}

uint64_t sub_100425058(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4894, 1);
}

void sub_10042506C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10041D5D0(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_100425078()
{
  uint64_t v0;

  sub_1000C1AB4();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1004250A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10041D774(a1, a2);
}

void sub_1004250B0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10041DF20(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1004250B8()
{
  unint64_t result;

  result = qword_100BE17F8;
  if (!qword_100BE17F8)
  {
    result = swift_getWitnessTable(&unk_10099F2D8, &type metadata for PagingChartsView.HorizontalChartPages);
    atomic_store(result, (unint64_t *)&qword_100BE17F8);
  }
  return result;
}

unint64_t sub_1004250F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  result = qword_100BE1810;
  if (!qword_100BE1810)
  {
    v1 = sub_100075EB0(&qword_100BE17E8);
    v2 = sub_100075EB0(&qword_100BE17D8);
    v3 = sub_100075EB0(&qword_100BE17D0);
    v4 = sub_100075EB0(&qword_100BE17C8);
    v5 = type metadata accessor for Date(255);
    v6 = sub_100075EB0(&qword_100BE17C0);
    v7 = type metadata accessor for PagingScrollTargetBehavior(255);
    sub_10003D2DC(&qword_100BE1800, &qword_100BE17C0);
    v13 = v6;
    v14 = v7;
    v15 = v8;
    v16 = &protocol witness table for PagingScrollTargetBehavior;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.scrollTargetBehavior<A>(_:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    v13 = v4;
    v14 = v5;
    v15 = OpaqueTypeConformance2;
    v16 = v10;
    v11 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.scrollPosition<A>(id:anchor:)>>, 1);
    v13 = v3;
    v14 = v11;
    v12 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    v13 = v2;
    v14 = v12;
    swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
    sub_10003D2DC(&qword_100BE1818, &qword_100BE1808);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1810);
  }
  return result;
}

uint64_t type metadata accessor for StickyChartHeadersView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE1878, (uint64_t)&nominal type descriptor for StickyChartHeadersView);
}

_QWORD *sub_1004252B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC37F8);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(_QWORD *)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    v11 = *(_QWORD *)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v15;
    v16 = v15;
    v17 = **(void (***)(char *, char *, uint64_t, __n128))(v15 - 8);
    swift_bridgeObjectRetain(v10);
    v18 = swift_bridgeObjectRetain(v11);
    v17(v13, v14, v16, v18);
    v19 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
    v20 = a3[10];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    v26 = a3[11];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)((char *)a2 + v26 + 8);
    *v27 = *(_QWORD *)((char *)a2 + v26);
    v27[1] = v29;
    swift_retain();
    swift_retain();
    v30 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
    v31 = (char *)v27 + v30;
    v32 = &v28[v30];
    v33 = type metadata accessor for DetailCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    v34 = a3[12];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v36) == 1)
    {
      v38 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v38))
      {
        v39 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v38);
      }
      v40 = v35;
      v41 = v37;
      v42 = 1;
    }
    else
    {
      *v35 = *v36;
      swift_retain();
      v40 = v35;
      v41 = v37;
      v42 = 0;
    }
    swift_storeEnumTagMultiPayload(v40, v41, v42);
  }
  return a1;
}

void sub_10042554C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + a2[7]));
  v5 = a1 + a2[10];
  v6 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (_QWORD *)(a1 + a2[11]);
  swift_release(*v7);
  swift_release(v7[1]);
  v8 = (char *)v7 + *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v9 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = (_QWORD *)(a1 + a2[12]);
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release(*v10);
  }
}

uint64_t sub_1004256B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v14;
  v15 = v14;
  v16 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v14 - 8);
  swift_bridgeObjectRetain(v9);
  v17 = swift_bridgeObjectRetain(v10);
  v16(v12, v13, v15, v17);
  v18 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[10];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    v23 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  v24 = a3[11];
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 8);
  *v25 = *(_QWORD *)(a2 + v24);
  v25[1] = v27;
  swift_retain();
  swift_retain();
  v28 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v29 = (char *)v25 + v28;
  v30 = v26 + v28;
  v31 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  v32 = a3[12];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v34) == 1)
  {
    v36 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36))
    {
      v37 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      v38 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v38 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v36);
    }
  }
  else
  {
    *v33 = *v34;
    swift_retain();
    v38 = 0;
  }
  swift_storeEnumTagMultiPayload(v33, v35, v38);
  return a1;
}

uint64_t sub_100425920(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = a3[6];
  v10 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  sub_100094D04((_QWORD *)(a1 + a3[7]), (_QWORD *)(a2 + a3[7]));
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v11 = a3[10];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for Date(0);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  v19 = a3[11];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_retain();
  swift_release(v22);
  v23 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  swift_retain();
  swift_release(v23);
  v24 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v25 = v20 + v24;
  v26 = v21 + v24;
  v27 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  if (a1 != a2)
  {
    v28 = a3[12];
    v29 = (_QWORD *)(a1 + v28);
    v30 = (_QWORD *)(a2 + v28);
    sub_100021A14(a1 + v28, (uint64_t *)&unk_100C09CD0);
    v31 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v30) == 1)
    {
      v32 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v32))
      {
        v33 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v34 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
        v34 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v32);
      }
    }
    else
    {
      *v29 = *v30;
      swift_retain();
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v29, v31, v34);
  }
  return a1;
}

uint64_t sub_100425C00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v18 = a3[11];
  v19 = (_QWORD *)(a1 + v18);
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18 + 8);
  *v19 = *(_QWORD *)(a2 + v18);
  v19[1] = v21;
  v22 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v23 = (char *)v19 + v22;
  v24 = v20 + v22;
  v25 = type metadata accessor for DetailCondition(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[12];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v28) == 1)
  {
    v30 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30))
    {
      v31 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v30);
    }
    swift_storeEnumTagMultiPayload(v27, v29, 1);
  }
  else
  {
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100425E2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + v7));
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[10];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  v20 = a3[11];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  swift_release(v23);
  v24 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_release(v24);
  v25 = *(int *)(sub_1000BA294(&qword_100BE16A8) + 32);
  v26 = v21 + v25;
  v27 = v22 + v25;
  v28 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  if (a1 != a2)
  {
    v29 = a3[12];
    v30 = (void *)(a1 + v29);
    v31 = (const void *)(a2 + v29);
    sub_100021A14(a1 + v29, (uint64_t *)&unk_100C09CD0);
    v32 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v31) == 1)
    {
      v33 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v33))
      {
        v34 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v30, v31, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v33);
      }
      swift_storeEnumTagMultiPayload(v30, v32, 1);
    }
    else
    {
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004260F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100426104);
}

void sub_100426104()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  sub_1000D08E8();
  sub_1000BA294(&qword_100BC37F8);
  sub_100088FF0();
  if (v7)
  {
    v3 = sub_1000890E8();
  }
  else
  {
    if ((_DWORD)v0 == 0x7FFFFFFF)
    {
      sub_10003BCA4(*(_QWORD *)(v1 + v2[5]));
      sub_100079F70();
      return;
    }
    sub_1000BA294((uint64_t *)&unk_100BD35A0);
    sub_100088FF0();
    if (v7)
    {
      v4 = v5;
      v6 = v2[10];
    }
    else
    {
      sub_1000BA294(&qword_100BE16A8);
      sub_100088FF0();
      if (v7)
      {
        v4 = v8;
        v6 = v2[11];
      }
      else
      {
        v4 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
        v6 = v2[12];
      }
    }
    v3 = v1 + v6;
  }
  sub_1000B250C(v3, v0, v4);
}

uint64_t sub_1004261B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004261C4);
}

void sub_1004261C4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1000994F4();
  sub_1000BA294(&qword_100BC37F8);
  sub_10009D2E8();
  if (!v4)
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
      sub_100079F70();
      return;
    }
    sub_1000BA294((uint64_t *)&unk_100BD35A0);
    sub_10009D2E8();
    if (!v4)
    {
      sub_1000BA294(&qword_100BE16A8);
      sub_10009D2E8();
      if (!v4)
        sub_1000BA294((uint64_t *)&unk_100C09CB0);
    }
  }
  sub_100098D08();
  sub_1000987C4(v5, v6, v7, v8);
}

void sub_10042627C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[9];

  sub_100427B54(319, (unint64_t *)&qword_100BC38A0, (uint64_t (*)(void))sub_10010D1D0, (uint64_t)&type metadata for Double);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v10[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v10[3] = "(";
    v10[4] = &unk_10099F258;
    v10[5] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_100158CD4(319, (unint64_t *)&qword_100BC3500, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v10[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_100158CD4(319, &qword_100BE1720, (uint64_t (*)(uint64_t))&type metadata accessor for DetailCondition);
      if (v7 <= 0x3F)
      {
        v10[7] = *(_QWORD *)(v6 - 8) + 64;
        sub_100158AA8(319, (unint64_t *)&qword_100BC5C88, &qword_100BC5A68);
        if (v9 <= 0x3F)
        {
          v10[8] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 9, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t destroy for PagingChartsView.HorizontalChartPages(uint64_t a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)(a1 + 8);
  swift_bridgeObjectRelease();
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1);
}

uint64_t initializeWithCopy for PagingChartsView.HorizontalChartPages(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain(v4);
  v8(a1 + 8, v5, v7);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t assignWithCopy for PagingChartsView.HorizontalChartPages(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  sub_100094D04((_QWORD *)(a1 + 8), a2 + 1);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t assignWithTake for PagingChartsView.HorizontalChartPages(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for PagingChartsView.HorizontalChartPages()
{
  return &type metadata for PagingChartsView.HorizontalChartPages;
}

unint64_t sub_100426544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE18D0;
  if (!qword_100BE18D0)
  {
    v1 = sub_100075EB0(&qword_100BE18D8);
    sub_10003D2DC(&qword_100BE17B0, &qword_100BE17A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE18D0);
  }
  return result;
}

uint64_t sub_1004265C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_100075EB0(&qword_100BE17E8);
  sub_100075EB0((uint64_t *)&unk_100C0A510);
  sub_1004250F4();
  sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
  return sub_100099AA4(v1, (uint64_t)&opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, v2, v3, v4, v5, v6, v7, v0);
}

uint64_t sub_100426640(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB49B8, 1);
}

uint64_t sub_100426650(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4990, 1);
}

uint64_t sub_100426660()
{
  uint64_t v0;

  return sub_10041E348(*(uint64_t **)(v0 + 16));
}

unint64_t sub_100426668()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE18F8;
  if (!qword_100BE18F8)
  {
    v1 = sub_100075EB0(&qword_100BE18F0);
    sub_10000F1C8(&qword_100BE1900, type metadata accessor for PagingChartsView.ChartPage);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE18F8);
  }
  return result;
}

uint64_t type metadata accessor for PagingChartsView.ChartPage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE1B40, (uint64_t)&nominal type descriptor for PagingChartsView.ChartPage);
}

uint64_t sub_1004266F8(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for PagingChartsView.HorizontalChartPages(a2, a1);
  return a2;
}

uint64_t sub_10042672C()
{
  uint64_t v0;

  sub_1000C1AB4();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100426754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10041E490(a1, v2 + 16, a2);
}

uint64_t sub_10042675C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for StickyChartHeadersView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_1000BA294(&qword_100BC37F8);
  sub_1000987E0(v6);
  sub_100094FCC(v1[5]);
  sub_100094FCC(v1[6]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v4 + v1[7]));
  v7 = v0 + v4 + v1[10];
  v8 = sub_100098778();
  if (!sub_10009E638(v8))
    sub_1000B4974();
  sub_1000D0D08();
  swift_release(*(_QWORD *)(v7 + 8));
  sub_1000BA294(&qword_100BE16A8);
  v9 = sub_1000D9588();
  sub_1000B2568(v9);
  v10 = (_QWORD *)(v0 + v4 + v1[12]);
  v11 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (sub_10009DA58(v11) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!sub_1000C1D58(v12))
      sub_1000CCA08();
  }
  else
  {
    swift_release(*v10);
  }
  return sub_1000B4380(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100426858(uint64_t a1)
{
  return sub_100427CB8(a1, (void (*)(_QWORD))type metadata accessor for StickyChartHeadersView, (uint64_t (*)(uint64_t))sub_1004208B8);
}

unint64_t sub_10042686C()
{
  unint64_t result;

  result = qword_100BE1950;
  if (!qword_100BE1950)
  {
    result = swift_getWitnessTable(&unk_1009B7BF4, &type metadata for ConditionsChartID);
    atomic_store(result, (unint64_t *)&qword_100BE1950);
  }
  return result;
}

unint64_t sub_1004268A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_100BE19C8;
  if (!qword_100BE19C8)
  {
    v1 = sub_100075EB0(&qword_100BE19A8);
    v2 = type metadata accessor for LollipopDetailView(255);
    sub_10000F1C8((unint64_t *)&qword_100BDD980, type metadata accessor for LollipopDetailView);
    v4[0] = v2;
    v4[1] = v3;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.offsetXWithinBounds(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE19C8);
  }
  return result;
}

uint64_t sub_100426950()
{
  uint64_t v0;

  return sub_1004221F8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100426958@<X0>(uint64_t a1@<X8>)
{
  return sub_1004226C0(a1);
}

uint64_t type metadata accessor for ChartHeaderMenuLabel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE1C70, (uint64_t)&nominal type descriptor for ChartHeaderMenuLabel);
}

uint64_t sub_100426974()
{
  uint64_t v0;

  return sub_1004223E8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10042697C()
{
  unint64_t result;

  result = qword_100BE1A80;
  if (!qword_100BE1A80)
  {
    result = swift_getWitnessTable(&unk_10099F4B8, &type metadata for PickerDetailCondition);
    atomic_store(result, (unint64_t *)&qword_100BE1A80);
  }
  return result;
}

unint64_t sub_1004269B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1A88;
  if (!qword_100BE1A88)
  {
    v1 = sub_100075EB0(&qword_100BE1A78);
    sub_100426A1C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1A88);
  }
  return result;
}

unint64_t sub_100426A1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1A90;
  if (!qword_100BE1A90)
  {
    v1 = sub_100075EB0(&qword_100BE1A98);
    sub_100426AA0();
    sub_10003D2DC(&qword_100BE1AC8, &qword_100BE1AD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1A90);
  }
  return result;
}

unint64_t sub_100426AA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1AA0;
  if (!qword_100BE1AA0)
  {
    v1 = sub_100075EB0(&qword_100BE1AA8);
    sub_10000F1C8(&qword_100BE1AB0, type metadata accessor for ConditionPickerLabel);
    sub_10003D2DC(&qword_100BE1AB8, &qword_100BE1AC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1AA0);
  }
  return result;
}

uint64_t type metadata accessor for ConditionPickerLabel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE1BE0, (uint64_t)&nominal type descriptor for ConditionPickerLabel);
}

uint64_t sub_100426B50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1004224C8();
  *a1 = result;
  return result;
}

uint64_t sub_100426B7C()
{
  _BYTE *v0;

  type metadata accessor for StickyChartHeadersView(0);
  sub_1000D8F94();
  return sub_10041FA20(v0);
}

uint64_t sub_100426BA8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for StickyChartHeadersView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = sub_1000BA294(&qword_100BC37F8);
  sub_1000987E0(v6);
  sub_100094FCC(v1[5]);
  sub_100094FCC(v1[6]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + v4 + v1[7]));
  v7 = v0 + v4 + v1[10];
  v8 = sub_100098778();
  if (!sub_10009E638(v8))
    sub_1000B4974();
  sub_1000D0D08();
  swift_release(*(_QWORD *)(v7 + 8));
  sub_1000BA294(&qword_100BE16A8);
  v9 = sub_1000D9588();
  sub_1000B2568(v9);
  v10 = (_QWORD *)(v0 + v4 + v1[12]);
  v11 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (sub_10009DA58(v11) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!sub_1000C1D58(v12))
      sub_1000CCA08();
  }
  else
  {
    swift_release(*v10);
  }
  return sub_1000B4380(v0, v4 + v5, v3 | 7);
}

void sub_100426CAC()
{
  uint64_t v0;

  type metadata accessor for StickyChartHeadersView(0);
  v0 = sub_1000D1290();
  sub_10041FCF0(v0);
}

_QWORD *sub_100426CD4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for DetailChartsViewModel(0) + 20);
    v9 = *(_QWORD *)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v13;
    v14 = v13;
    v15 = **(void (***)(char *, char *, uint64_t, __n128))(v13 - 8);
    v16 = swift_bridgeObjectRetain(v9);
    v15(v11, v12, v14, v16);
    v17 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *v18 = *v19;
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  }
  swift_retain();
  return a1;
}

double sub_100426DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for DetailChartsViewModel(0);
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 24)));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 32) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100426E3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for DetailChartsViewModel(0) + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v12;
  v13 = v12;
  v14 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v12 - 8);
  v15 = swift_bridgeObjectRetain(v8);
  v14(v10, v11, v13, v15);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_100426F14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for DetailChartsViewModel(0) + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  sub_100094D04((_QWORD *)(a1 + a3[6]), (_QWORD *)(a2 + a3[6]));
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)v10 = *(_BYTE *)v11;
  v12 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_retain();
  swift_release(v12);
  return a1;
}

uint64_t sub_100426FDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for DetailChartsViewModel(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_100427078(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for DetailChartsViewModel(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRelease();
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + v8));
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  swift_release(v15);
  return a1;
}

uint64_t sub_100427144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100427150);
}

void sub_100427150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000DC3D0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1000B250C(a1, a2, v6);
  }
  else
  {
    sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 24));
    sub_100079F70();
  }
}

uint64_t sub_1004271AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004271B8);
}

void sub_1004271B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000994F4();
  sub_1000DC3D0();
  sub_10009D2E8();
  if (v0)
  {
    sub_100098D08();
    sub_1000987C4(v1, v2, v3, v4);
  }
  else
  {
    sub_1000BF180();
    sub_100079F70();
  }
}

uint64_t sub_1004271F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for DetailChartsViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10099F258;
    v4[2] = "(";
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_10099F0A8;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10042728C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailCondition(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1004272C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DetailCondition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1004272FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100427340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100427384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1004273C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10042740C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100427418);
}

uint64_t sub_100427418(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  sub_1000D9588();
  v3 = sub_1000890E8();
  return _s7Weather24LocationCompositionStateOwet_0(v3, a2, v4);
}

uint64_t sub_100427444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100427450);
}

uint64_t sub_100427450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000D9588();
  sub_100098D08();
  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t sub_100427480(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for DetailCondition(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PickerDetailCondition(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PickerDetailCondition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1004275BC + 4 * byte_10099EFEC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1004275F0 + 4 * byte_10099EFE7[v4]))();
}

uint64_t sub_1004275F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004275F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100427600);
  return result;
}

uint64_t sub_10042760C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100427614);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100427618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100427620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PickerDetailCondition()
{
  return &type metadata for PickerDetailCondition;
}

uint64_t *sub_10042763C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD3380);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for DetailCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100427708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1000BA294(&qword_100BD3380);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for DetailCondition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_100427784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BD3380);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_100427824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BD3380);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_1004278C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BD3380);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_100427964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BD3380);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100427A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100427A10);
}

uint64_t sub_100427A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000D08E8();
  sub_1000BA294(&qword_100BD3380);
  sub_100088FF0();
  if (v3)
  {
    v5 = sub_1000890E8();
  }
  else
  {
    v4 = sub_1000D9588();
    v5 = v1 + *(int *)(v2 + 24);
  }
  return sub_1000B250C(v5, v0, v4);
}

uint64_t sub_100427A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100427A68);
}

uint64_t sub_100427A68()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000994F4();
  sub_1000BA294(&qword_100BD3380);
  sub_10009D2E8();
  if (!v0)
    sub_1000D9588();
  sub_100098D08();
  return sub_1000987C4(v1, v2, v3, v4);
}

void sub_100427AB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100427B54(319, (unint64_t *)&qword_100BD33F0, (uint64_t (*)(void))sub_10010FE84, (uint64_t)&type metadata for CGFloat);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    v4 = type metadata accessor for DetailCondition(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_100427B54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3();
    v8 = type metadata accessor for ScaledMetric(a1, a4, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  sub_100079F70();
}

uint64_t sub_100427BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_100075EB0(&qword_100BE18E0);
  sub_10003D2DC(&qword_100BE1908, &qword_100BE18E0);
  return sub_100099AA4(v1, (uint64_t)&opaque type descriptor for <<opaque return type of View.scrollTargetLayout(isEnabled:)>>, v2, v3, v4, v5, v6, v7, v0);
}

void sub_100427C00()
{
  sub_10003D2DC(&qword_100BE1CB0, &qword_100BE1CB8);
}

uint64_t sub_100427C30(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4A58, 1);
}

unint64_t sub_100427C44()
{
  unint64_t result;

  result = qword_100BE1CC0;
  if (!qword_100BE1CC0)
  {
    result = swift_getWitnessTable(&unk_10099F440, &type metadata for PickerDetailCondition);
    atomic_store(result, (unint64_t *)&qword_100BE1CC0);
  }
  return result;
}

uint64_t sub_100427C80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4A30, 1);
}

uint64_t sub_100427C90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4A08, 1);
}

uint64_t sub_100427CA4(uint64_t a1)
{
  return sub_100427CB8(a1, (void (*)(_QWORD))type metadata accessor for PagingChartsView.ChartPage, (uint64_t (*)(uint64_t))sub_10041EB2C);
}

uint64_t sub_100427CB8(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  a2(0);
  v3 = sub_1000C130C();
  return a3(v3);
}

uint64_t type metadata accessor for PagingChartsView.ChartWrapperView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE1DE0, (uint64_t)&nominal type descriptor for PagingChartsView.ChartWrapperView);
}

unint64_t sub_100427D10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1D08;
  if (!qword_100BE1D08)
  {
    v1 = sub_100075EB0(&qword_100BE1CD0);
    sub_10003D2DC(&qword_100BE1D10, &qword_100BE1CC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1D08);
  }
  return result;
}

uint64_t sub_100427D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PagingChartsView.ChartPage(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = sub_100098778();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_1000DC3D0();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v7 + *(int *)(v1 + 24)));
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 32) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100427E3C(char a1)
{
  uint64_t v2;

  type metadata accessor for PagingChartsView.ChartPage(0);
  sub_1000987F4();
  return sub_10041ED54(a1, v2);
}

double sub_100427E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  swift_retain(a3);
  swift_retain(a1);
  *(_QWORD *)&result = swift_retain(a2).n128_u64[0];
  return result;
}

uint64_t sub_100427EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_release(a1);
  swift_release(a2);
  return swift_release(a3);
}

uint64_t sub_100427EDC()
{
  uint64_t v0;

  return sub_1004231D4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100427EE4@<X0>(uint64_t a1@<X8>)
{
  return sub_10042337C(a1);
}

unint64_t sub_100427EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1D68;
  if (!qword_100BE1D68)
  {
    v1 = sub_100075EB0(&qword_100BE1D58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1D68);
  }
  return result;
}

double sub_100427F48@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_10042324C(*(_QWORD *)(v2 + 16), a1, a2);
}

_QWORD *sub_100427F50(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, char *, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t, __n128);
  __n128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  int *v127;
  uint64_t v128;
  _QWORD *v129;
  int *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t, __n128);
  __n128 v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  unsigned int EnumCaseMultiPayload;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t, __n128);
  __n128 v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v187;
  unsigned int v188;
  int *v189;
  _QWORD *v190;
  _QWORD *v191;
  int *v192;
  char *v193;
  char *v194;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v50 = *a2;
    *a1 = *a2;
    v51 = (_QWORD *)(v50 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v51;
  }
  v7 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = a3[5];
  v190 = a2;
  v191 = a1;
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ConditionDetailChartHeaderStringModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  v9[*(int *)(v12 + 20)] = v10[*(int *)(v12 + 20)];
  v9[*(int *)(v12 + 24)] = v10[*(int *)(v12 + 24)];
  v192 = (int *)type metadata accessor for DetailChartViewModel(0);
  v193 = v9;
  v13 = v192[5];
  v14 = &v9[v13];
  v194 = v10;
  v15 = &v10[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = (int *)type metadata accessor for ChartViewModel(0);
  v18 = v17[5];
  v19 = &v14[v18];
  v20 = &v15[v18];
  v21 = type metadata accessor for ChartKind(0);
  v22 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 16);
  v23 = swift_bridgeObjectRetain(v16);
  v22(v19, v20, v21, v23);
  v24 = v17[6];
  v25 = *(_QWORD *)&v15[v24];
  *(_QWORD *)&v14[v24] = v25;
  v26 = v17[7];
  v27 = &v14[v26];
  v28 = &v15[v26];
  v29 = type metadata accessor for DetailChartExtrema(0);
  v30 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v29 - 8) + 16);
  v31 = swift_bridgeObjectRetain(v25);
  v30(v27, v28, v29, v31);
  v32 = v17[8];
  v33 = *(_QWORD *)&v15[v32];
  *(_QWORD *)&v14[v32] = v33;
  v34 = v17[9];
  v35 = *(_QWORD *)&v15[v34];
  *(_QWORD *)&v14[v34] = v35;
  *(_OWORD *)&v14[v17[10]] = *(_OWORD *)&v15[v17[10]];
  v36 = v17[11];
  v37 = &v14[v36];
  v38 = &v15[v36];
  v39 = *(void **)v38;
  v40 = (void *)*((_QWORD *)v38 + 1);
  v41 = *((_QWORD *)v38 + 2);
  LOBYTE(v30) = v38[24];
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v35);
  sub_1001A41A0(v39, v40, v41, v30);
  *(_QWORD *)v37 = v39;
  *((_QWORD *)v37 + 1) = v40;
  *((_QWORD *)v37 + 2) = v41;
  v37[24] = (char)v30;
  v42 = v17[12];
  v43 = &v14[v42];
  v44 = &v15[v42];
  *(_QWORD *)&v14[v42] = *(_QWORD *)&v15[v42];
  v45 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v46 = &v43[v45];
  v47 = &v44[v45];
  v48 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
  {
    v49 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
  }
  v52 = v17[13];
  v53 = &v14[v52];
  v54 = &v15[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v53[8] = v54[8];
  v55 = v17[14];
  v56 = &v14[v55];
  v57 = &v15[v55];
  v58 = sub_1000BA294(&qword_100BCB988);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
  {
    v59 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v56 = *(_QWORD *)v57;
    v60 = *(int *)(v58 + 48);
    v61 = &v56[v60];
    v62 = &v57[v60];
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v48))
    {
      v63 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v61, v62, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v48);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
  }
  *(_QWORD *)&v14[v17[15]] = *(_QWORD *)&v15[v17[15]];
  v64 = v17[16];
  v65 = &v14[v64];
  v66 = &v15[v64];
  v67 = type metadata accessor for ChartDarkeningScrim(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
  v68 = v17[17];
  v69 = *(_QWORD *)&v15[v68];
  *(_QWORD *)&v14[v68] = v69;
  v70 = v17[18];
  v71 = &v14[v70];
  v72 = &v15[v70];
  v73 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v48 - 8) + 16);
  v74 = swift_bridgeObjectRetain(v69);
  v73(v71, v72, v48, v74);
  ((void (*)(char *, char *, uint64_t))v73)(&v14[v17[19]], &v15[v17[19]], v48);
  ((void (*)(char *, char *, uint64_t))v73)(&v14[v17[20]], &v15[v17[20]], v48);
  v75 = v17[21];
  v76 = &v14[v75];
  v77 = &v15[v75];
  v78 = type metadata accessor for DetailChartDataElement(0);
  v189 = a3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78))
  {
    v79 = sub_1000BA294(&qword_100BCB0A0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v78);
  }
  v80 = v17[22];
  v81 = *(_QWORD *)&v15[v80];
  *(_QWORD *)&v14[v80] = v81;
  v82 = v17[23];
  v83 = &v14[v82];
  v84 = &v15[v82];
  v85 = type metadata accessor for ChartPeakMarkStyle(0);
  v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v85 - 8) + 16);
  v87 = swift_bridgeObjectRetain(v81);
  v86(v83, v84, v85, v87);
  *(_QWORD *)&v14[v17[24]] = *(_QWORD *)&v15[v17[24]];
  v88 = v17[25];
  v89 = *(_QWORD *)&v15[v88];
  *(_QWORD *)&v14[v88] = v89;
  v90 = v17[26];
  v91 = &v14[v90];
  v92 = &v15[v90];
  v93 = type metadata accessor for ChartViewModelInterpolationMode(0);
  v94 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v93 - 8) + 16);
  v95 = swift_bridgeObjectRetain(v89);
  v94(v91, v92, v93, v95);
  v96 = v17[27];
  v97 = &v14[v96];
  v98 = &v15[v96];
  v99 = type metadata accessor for ChartPastDataTreatment(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
  v100 = v17[28];
  v101 = &v14[v100];
  v102 = &v15[v100];
  v103 = *((_QWORD *)v102 + 1);
  *(_QWORD *)v101 = *(_QWORD *)v102;
  *((_QWORD *)v101 + 1) = v103;
  v104 = v17[29];
  v105 = &v14[v104];
  v106 = &v15[v104];
  v107 = *((_QWORD *)v106 + 1);
  *(_QWORD *)v105 = *(_QWORD *)v106;
  *((_QWORD *)v105 + 1) = v107;
  v108 = v17[30];
  v109 = &v14[v108];
  v110 = &v15[v108];
  v111 = *((_QWORD *)v110 + 1);
  *(_QWORD *)v109 = *(_QWORD *)v110;
  *((_QWORD *)v109 + 1) = v111;
  v112 = v17[31];
  v113 = &v14[v112];
  v114 = &v15[v112];
  v115 = *((_QWORD *)v114 + 1);
  *(_QWORD *)v113 = *(_QWORD *)v114;
  *((_QWORD *)v113 + 1) = v115;
  v116 = v17[32];
  v117 = &v14[v116];
  v118 = &v15[v116];
  v119 = *((_QWORD *)v118 + 1);
  *(_QWORD *)v117 = *(_QWORD *)v118;
  *((_QWORD *)v117 + 1) = v119;
  v120 = v17[33];
  v121 = &v14[v120];
  v122 = &v15[v120];
  v123 = *((_QWORD *)v122 + 1);
  *(_QWORD *)v121 = *(_QWORD *)v122;
  *((_QWORD *)v121 + 1) = v123;
  v124 = v192[6];
  v125 = &v193[v124];
  v126 = &v194[v124];
  v127 = (int *)type metadata accessor for LollipopViewModel(0);
  swift_bridgeObjectRetain(v103);
  swift_bridgeObjectRetain(v107);
  swift_bridgeObjectRetain(v111);
  swift_bridgeObjectRetain(v115);
  swift_bridgeObjectRetain(v119);
  swift_retain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, (uint64_t)v127))
  {
    v131 = *((_QWORD *)v126 + 1);
    *(_QWORD *)v125 = *(_QWORD *)v126;
    *((_QWORD *)v125 + 1) = v131;
    v132 = v127[5];
    v133 = &v125[v132];
    v134 = &v126[v132];
    v135 = type metadata accessor for DetailChartDataPoint(0);
    v136 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v135 - 8) + 16);
    v137 = swift_bridgeObjectRetain(v131);
    v136(v133, v134, v135, v137);
    *(_QWORD *)&v125[v127[6]] = *(_QWORD *)&v126[v127[6]];
    v138 = v127[7];
    v139 = &v125[v138];
    v140 = &v126[v138];
    v141 = type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v140);
    v188 = EnumCaseMultiPayload;
    if (EnumCaseMultiPayload == 2)
    {
      v147 = *((_QWORD *)v140 + 1);
      *(_QWORD *)v139 = *(_QWORD *)v140;
      *((_QWORD *)v139 + 1) = v147;
      v187 = v141;
      v148 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v149 = v148[5];
      v150 = &v139[v149];
      v151 = &v140[v149];
      v152 = type metadata accessor for AttributedString(0);
      v153 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v152 - 8) + 16);
      v154 = swift_bridgeObjectRetain(v147);
      v153(v150, v151, v152, v154);
      v155 = v148[6];
      v156 = &v139[v155];
      v157 = &v140[v155];
      v158 = *((_QWORD *)v157 + 1);
      *(_QWORD *)v156 = *(_QWORD *)v157;
      *((_QWORD *)v156 + 1) = v158;
      v159 = v148[7];
      v160 = &v139[v159];
      v161 = &v140[v159];
      v162 = *((_QWORD *)v161 + 1);
      *(_QWORD *)v160 = *(_QWORD *)v161;
      *((_QWORD *)v160 + 1) = v162;
      v163 = v148[8];
      v164 = &v139[v163];
      v165 = &v140[v163];
      v144 = *((_QWORD *)v165 + 1);
      *(_QWORD *)v164 = *(_QWORD *)v165;
      *((_QWORD *)v164 + 1) = v144;
      v166 = v148[9];
      v167 = &v139[v166];
      v168 = &v140[v166];
      v145 = *((_QWORD *)v168 + 1);
      *(_QWORD *)v167 = *(_QWORD *)v168;
      *((_QWORD *)v167 + 1) = v145;
      v169 = v148[10];
      v170 = &v139[v169];
      v171 = &v140[v169];
      v146 = *((_QWORD *)v171 + 1);
      *(_QWORD *)v170 = *(_QWORD *)v171;
      *((_QWORD *)v170 + 1) = v146;
      v172 = v148[11];
      v141 = v187;
      v139[v172] = v140[v172];
      swift_bridgeObjectRetain(v158);
      v143 = v162;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v144 = *((_QWORD *)v140 + 1);
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *((_QWORD *)v139 + 1) = v144;
        v145 = *((_QWORD *)v140 + 3);
        *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
        *((_QWORD *)v139 + 3) = v145;
        v146 = *((_QWORD *)v140 + 5);
        *((_QWORD *)v139 + 4) = *((_QWORD *)v140 + 4);
        *((_QWORD *)v139 + 5) = v146;
        goto LABEL_23;
      }
      v143 = *((_QWORD *)v140 + 1);
      *(_QWORD *)v139 = *(_QWORD *)v140;
      *((_QWORD *)v139 + 1) = v143;
      v144 = *((_QWORD *)v140 + 3);
      *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
      *((_QWORD *)v139 + 3) = v144;
      v145 = *((_QWORD *)v140 + 5);
      *((_QWORD *)v139 + 4) = *((_QWORD *)v140 + 4);
      *((_QWORD *)v139 + 5) = v145;
      v146 = *((_QWORD *)v140 + 7);
      *((_QWORD *)v139 + 6) = *((_QWORD *)v140 + 6);
      *((_QWORD *)v139 + 7) = v146;
      v139[64] = v140[64];
      v139[65] = v140[65];
    }
    swift_bridgeObjectRetain(v143);
LABEL_23:
    v129 = v190;
    v51 = v191;
    v130 = v189;
    swift_bridgeObjectRetain(v144);
    swift_bridgeObjectRetain(v145);
    swift_bridgeObjectRetain(v146);
    swift_storeEnumTagMultiPayload(v139, v141, v188);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, (uint64_t)v127);
    goto LABEL_24;
  }
  v128 = sub_1000BA294(&qword_100BE19B8);
  memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
  v129 = v190;
  v51 = v191;
  v130 = v189;
LABEL_24:
  v173 = v192[7];
  v174 = &v193[v173];
  v175 = &v194[v173];
  v176 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v176))
  {
    v177 = sub_1000BA294(&qword_100BE1968);
    memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v175) == 1)
    {
      v178 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v174, v175, v178);
      v179 = v174;
      v180 = v176;
      v181 = 1;
    }
    else
    {
      v182 = *((_QWORD *)v175 + 1);
      *(_QWORD *)v174 = *(_QWORD *)v175;
      *((_QWORD *)v174 + 1) = v182;
      swift_bridgeObjectRetain(v182);
      v179 = v174;
      v180 = v176;
      v181 = 0;
    }
    swift_storeEnumTagMultiPayload(v179, v180, v181);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v176);
  }
  v183 = v130[6];
  v184 = *(_OWORD *)((char *)v129 + v183 + 24);
  *(_OWORD *)((char *)v51 + v183 + 24) = v184;
  (**(void (***)(void))(v184 - 8))();
  v185 = v130[8];
  *((_BYTE *)v51 + v130[7]) = *((_BYTE *)v129 + v130[7]);
  *(_QWORD *)((char *)v51 + v185) = *(_QWORD *)((char *)v129 + v185);
  *((_BYTE *)v51 + v130[9]) = *((_BYTE *)v129 + v130[9]);
  return v51;
}

uint64_t sub_1004288C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for ConditionDetailChartHeaderStringModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (int *)type metadata accessor for DetailChartViewModel(0);
  v8 = v5 + v7[5];
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for ChartViewModel(0);
  v10 = v8 + v9[5];
  v11 = type metadata accessor for ChartKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  v12 = v8 + v9[7];
  v13 = type metadata accessor for DetailChartExtrema(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001A44FC(*(void **)(v8 + v9[11]), *(void **)(v8 + v9[11] + 8), *(_QWORD *)(v8 + v9[11] + 16), *(_BYTE *)(v8 + v9[11] + 24));
  v14 = v8 + v9[12];
  v15 = v14 + *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v16 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = (_QWORD *)(v8 + v9[14]);
  v18 = sub_1000BA294(&qword_100BCB988);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    swift_release(*v17);
    v19 = (uint64_t)v17 + *(int *)(v18 + 48);
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v19, v16);
  }
  v20 = v8 + v9[16];
  v21 = type metadata accessor for ChartDarkeningScrim(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  v22 = swift_bridgeObjectRelease();
  v23 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 8);
  v23(v8 + v9[18], v16, v22);
  ((void (*)(uint64_t, uint64_t))v23)(v8 + v9[19], v16);
  ((void (*)(uint64_t, uint64_t))v23)(v8 + v9[20], v16);
  v24 = v8 + v9[21];
  v25 = type metadata accessor for DetailChartDataElement(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  swift_bridgeObjectRelease();
  v26 = v8 + v9[23];
  v27 = type metadata accessor for ChartPeakMarkStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  swift_bridgeObjectRelease();
  v28 = v8 + v9[26];
  v29 = type metadata accessor for ChartViewModelInterpolationMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  v30 = v8 + v9[27];
  v31 = type metadata accessor for ChartPastDataTreatment(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v8 + v9[33] + 8));
  v32 = v5 + v7[6];
  v33 = type metadata accessor for LollipopViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33))
  {
    swift_bridgeObjectRelease();
    v34 = v32 + *(int *)(v33 + 20);
    v35 = type metadata accessor for DetailChartDataPoint(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
    v36 = v32 + *(int *)(v33 + 28);
    type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36);
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      v38 = v36 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
      v39 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  v40 = v5 + v7[7];
  v41 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v41))
  {
    if (swift_getEnumCaseMultiPayload(v40) == 1)
    {
      v42 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v40, v42);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_100428DE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, __n128);
  __n128 v72;
  uint64_t v73;
  char *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, __n128);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, __n128);
  __n128 v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  int *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t, __n128);
  __n128 v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t EnumCaseMultiPayload;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t, __n128);
  __n128 v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v185;
  int *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int *v190;
  uint64_t v191;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v186 = a3;
  v187 = a2;
  v7 = a3[5];
  v188 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ConditionDetailChartHeaderStringModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  *(_BYTE *)(v8 + *(int *)(v11 + 24)) = *(_BYTE *)(v9 + *(int *)(v11 + 24));
  v189 = v8;
  v190 = (int *)type metadata accessor for DetailChartViewModel(0);
  v12 = v190[5];
  v13 = (_QWORD *)(v8 + v12);
  v191 = v9;
  v14 = v9 + v12;
  v15 = *(_QWORD *)(v9 + v12);
  v16 = *(_QWORD *)(v14 + 8);
  *v13 = v15;
  v13[1] = v16;
  v17 = (int *)type metadata accessor for ChartViewModel(0);
  v18 = v17[5];
  v19 = (char *)v13 + v18;
  v20 = v14 + v18;
  v21 = type metadata accessor for ChartKind(0);
  v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 16);
  v23 = swift_bridgeObjectRetain(v16);
  v22(v19, v20, v21, v23);
  v24 = v17[6];
  v25 = *(_QWORD *)(v14 + v24);
  *(_QWORD *)((char *)v13 + v24) = v25;
  v26 = v17[7];
  v27 = (char *)v13 + v26;
  v28 = v14 + v26;
  v29 = type metadata accessor for DetailChartExtrema(0);
  v30 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v29 - 8) + 16);
  v31 = swift_bridgeObjectRetain(v25);
  v30(v27, v28, v29, v31);
  v32 = v17[8];
  v33 = *(_QWORD *)(v14 + v32);
  *(_QWORD *)((char *)v13 + v32) = v33;
  v34 = v17[9];
  v35 = *(_QWORD *)(v14 + v34);
  *(_QWORD *)((char *)v13 + v34) = v35;
  *(_OWORD *)((char *)v13 + v17[10]) = *(_OWORD *)(v14 + v17[10]);
  v36 = v17[11];
  v37 = (char *)v13 + v36;
  v38 = v14 + v36;
  v39 = *(void **)v38;
  v40 = *(void **)(v38 + 8);
  v41 = *(_QWORD *)(v38 + 16);
  LOBYTE(v30) = *(_BYTE *)(v38 + 24);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v35);
  sub_1001A41A0(v39, v40, v41, v30);
  *(_QWORD *)v37 = v39;
  *((_QWORD *)v37 + 1) = v40;
  *((_QWORD *)v37 + 2) = v41;
  v37[24] = (char)v30;
  v42 = v17[12];
  v43 = (char *)v13 + v42;
  v44 = v14 + v42;
  *(_QWORD *)((char *)v13 + v42) = *(_QWORD *)(v14 + v42);
  v45 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v46 = &v43[v45];
  v47 = (const void *)(v44 + v45);
  v48 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
  {
    v49 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
  }
  v50 = v17[13];
  v51 = (char *)v13 + v50;
  v52 = v14 + v50;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = *(_BYTE *)(v52 + 8);
  v53 = v17[14];
  v54 = (_QWORD *)((char *)v13 + v53);
  v55 = (_QWORD *)(v14 + v53);
  v56 = sub_1000BA294(&qword_100BCB988);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
  {
    v57 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    *v54 = *v55;
    v58 = *(int *)(v56 + 48);
    v59 = (char *)v54 + v58;
    v60 = (char *)v55 + v58;
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v48))
    {
      v61 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v59, v60, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v48);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
  }
  *(_QWORD *)((char *)v13 + v17[15]) = *(_QWORD *)(v14 + v17[15]);
  v62 = v17[16];
  v63 = (char *)v13 + v62;
  v64 = v14 + v62;
  v65 = type metadata accessor for ChartDarkeningScrim(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
  v66 = v17[17];
  v67 = *(_QWORD *)(v14 + v66);
  *(_QWORD *)((char *)v13 + v66) = v67;
  v68 = v17[18];
  v69 = (char *)v13 + v68;
  v70 = v14 + v68;
  v71 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v48 - 8) + 16);
  v72 = swift_bridgeObjectRetain(v67);
  v71(v69, v70, v48, v72);
  ((void (*)(char *, uint64_t, uint64_t))v71)((char *)v13 + v17[19], v14 + v17[19], v48);
  ((void (*)(char *, uint64_t, uint64_t))v71)((char *)v13 + v17[20], v14 + v17[20], v48);
  v73 = v17[21];
  v74 = (char *)v13 + v73;
  v75 = (const void *)(v14 + v73);
  v76 = type metadata accessor for DetailChartDataElement(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
  {
    v77 = sub_1000BA294(&qword_100BCB0A0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
  }
  v78 = v17[22];
  v79 = *(_QWORD *)(v14 + v78);
  *(_QWORD *)((char *)v13 + v78) = v79;
  v80 = v17[23];
  v81 = (char *)v13 + v80;
  v82 = v14 + v80;
  v83 = type metadata accessor for ChartPeakMarkStyle(0);
  v84 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
  v85 = swift_bridgeObjectRetain(v79);
  v84(v81, v82, v83, v85);
  *(_QWORD *)((char *)v13 + v17[24]) = *(_QWORD *)(v14 + v17[24]);
  v86 = v17[25];
  v87 = *(_QWORD *)(v14 + v86);
  *(_QWORD *)((char *)v13 + v86) = v87;
  v88 = v17[26];
  v89 = (char *)v13 + v88;
  v90 = v14 + v88;
  v91 = type metadata accessor for ChartViewModelInterpolationMode(0);
  v92 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v91 - 8) + 16);
  v93 = swift_bridgeObjectRetain(v87);
  v92(v89, v90, v91, v93);
  v94 = v17[27];
  v95 = (char *)v13 + v94;
  v96 = v14 + v94;
  v97 = type metadata accessor for ChartPastDataTreatment(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v95, v96, v97);
  v98 = v17[28];
  v99 = (_QWORD *)((char *)v13 + v98);
  v100 = (_QWORD *)(v14 + v98);
  v101 = v100[1];
  *v99 = *v100;
  v99[1] = v101;
  v102 = v17[29];
  v103 = (_QWORD *)((char *)v13 + v102);
  v104 = (_QWORD *)(v14 + v102);
  v105 = v104[1];
  *v103 = *v104;
  v103[1] = v105;
  v106 = v17[30];
  v107 = (_QWORD *)((char *)v13 + v106);
  v108 = (_QWORD *)(v14 + v106);
  v109 = v108[1];
  *v107 = *v108;
  v107[1] = v109;
  v110 = v17[31];
  v111 = (_QWORD *)((char *)v13 + v110);
  v112 = (_QWORD *)(v14 + v110);
  v113 = v112[1];
  *v111 = *v112;
  v111[1] = v113;
  v114 = v17[32];
  v115 = (_QWORD *)((char *)v13 + v114);
  v116 = (_QWORD *)(v14 + v114);
  v117 = v116[1];
  *v115 = *v116;
  v115[1] = v117;
  v118 = v17[33];
  v119 = (_QWORD *)((char *)v13 + v118);
  v120 = (_QWORD *)(v14 + v118);
  v121 = v120[1];
  *v119 = *v120;
  v119[1] = v121;
  v122 = v189;
  v123 = v190[6];
  v124 = (_QWORD *)(v189 + v123);
  v125 = (_QWORD *)(v191 + v123);
  v126 = (int *)type metadata accessor for LollipopViewModel(0);
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRetain(v105);
  swift_bridgeObjectRetain(v109);
  swift_bridgeObjectRetain(v113);
  swift_bridgeObjectRetain(v117);
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, (uint64_t)v126))
  {
    v127 = sub_1000BA294(&qword_100BE19B8);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    goto LABEL_22;
  }
  v128 = v125[1];
  *v124 = *v125;
  v124[1] = v128;
  v129 = v126[5];
  v130 = (char *)v124 + v129;
  v131 = (char *)v125 + v129;
  v132 = type metadata accessor for DetailChartDataPoint(0);
  v133 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v132 - 8) + 16);
  v134 = swift_bridgeObjectRetain(v128);
  v133(v130, v131, v132, v134);
  *(_QWORD *)((char *)v124 + v126[6]) = *(_QWORD *)((char *)v125 + v126[6]);
  v135 = v126[7];
  v136 = (char *)v124 + v135;
  v137 = (char *)v125 + v135;
  v138 = type metadata accessor for LollipopDetailViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v137);
  v140 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v145 = *((_QWORD *)v137 + 1);
    *(_QWORD *)v136 = *(_QWORD *)v137;
    *((_QWORD *)v136 + 1) = v145;
    v146 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v147 = v146[5];
    v148 = &v136[v147];
    v149 = &v137[v147];
    v185 = v138;
    v150 = type metadata accessor for AttributedString(0);
    v151 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v150 - 8) + 16);
    v152 = swift_bridgeObjectRetain(v145);
    v151(v148, v149, v150, v152);
    v153 = v146[6];
    v154 = &v136[v153];
    v155 = &v137[v153];
    v156 = *((_QWORD *)v155 + 1);
    *(_QWORD *)v154 = *(_QWORD *)v155;
    *((_QWORD *)v154 + 1) = v156;
    v157 = v146[7];
    v158 = &v136[v157];
    v159 = &v137[v157];
    v160 = *((_QWORD *)v159 + 1);
    *(_QWORD *)v158 = *(_QWORD *)v159;
    *((_QWORD *)v158 + 1) = v160;
    v161 = v146[8];
    v162 = &v136[v161];
    v163 = &v137[v161];
    v142 = *((_QWORD *)v163 + 1);
    *(_QWORD *)v162 = *(_QWORD *)v163;
    *((_QWORD *)v162 + 1) = v142;
    v164 = v146[9];
    v165 = &v136[v164];
    v166 = &v137[v164];
    v143 = *((_QWORD *)v166 + 1);
    *(_QWORD *)v165 = *(_QWORD *)v166;
    *((_QWORD *)v165 + 1) = v143;
    v167 = v146[10];
    v168 = &v136[v167];
    v169 = &v137[v167];
    v144 = *((_QWORD *)v169 + 1);
    *(_QWORD *)v168 = *(_QWORD *)v169;
    *((_QWORD *)v168 + 1) = v144;
    v170 = v146[11];
    v140 = 2;
    v136[v170] = v137[v170];
    swift_bridgeObjectRetain(v156);
    v141 = v160;
    v138 = v185;
  }
  else
  {
    if ((_DWORD)EnumCaseMultiPayload != 1)
    {
      v122 = v189;
      v142 = *((_QWORD *)v137 + 1);
      *(_QWORD *)v136 = *(_QWORD *)v137;
      *((_QWORD *)v136 + 1) = v142;
      v143 = *((_QWORD *)v137 + 3);
      *((_QWORD *)v136 + 2) = *((_QWORD *)v137 + 2);
      *((_QWORD *)v136 + 3) = v143;
      v144 = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 4) = *((_QWORD *)v137 + 4);
      *((_QWORD *)v136 + 5) = v144;
      goto LABEL_21;
    }
    v141 = *((_QWORD *)v137 + 1);
    *(_QWORD *)v136 = *(_QWORD *)v137;
    *((_QWORD *)v136 + 1) = v141;
    v142 = *((_QWORD *)v137 + 3);
    *((_QWORD *)v136 + 2) = *((_QWORD *)v137 + 2);
    *((_QWORD *)v136 + 3) = v142;
    v143 = *((_QWORD *)v137 + 5);
    *((_QWORD *)v136 + 4) = *((_QWORD *)v137 + 4);
    *((_QWORD *)v136 + 5) = v143;
    v144 = *((_QWORD *)v137 + 7);
    *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
    *((_QWORD *)v136 + 7) = v144;
    v136[64] = v137[64];
    v136[65] = v137[65];
  }
  swift_bridgeObjectRetain(v141);
  v122 = v189;
LABEL_21:
  swift_bridgeObjectRetain(v142);
  swift_bridgeObjectRetain(v143);
  swift_bridgeObjectRetain(v144);
  swift_storeEnumTagMultiPayload(v136, v138, v140);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, (uint64_t)v126);
LABEL_22:
  v171 = v190[7];
  v172 = (_QWORD *)(v122 + v171);
  v173 = (_QWORD *)(v191 + v171);
  v174 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v174))
  {
    v175 = sub_1000BA294(&qword_100BE1968);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v173) == 1)
    {
      v176 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v172, v173, v176);
      v177 = v172;
      v178 = v174;
      v179 = 1;
    }
    else
    {
      v180 = v173[1];
      *v172 = *v173;
      v172[1] = v180;
      swift_bridgeObjectRetain(v180);
      v177 = v172;
      v178 = v174;
      v179 = 0;
    }
    swift_storeEnumTagMultiPayload(v177, v178, v179);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v174);
  }
  v181 = v186[6];
  v182 = *(_OWORD *)(v187 + v181 + 24);
  *(_OWORD *)(v188 + v181 + 24) = v182;
  (**(void (***)(void))(v182 - 8))();
  v183 = v186[8];
  *(_BYTE *)(v188 + v186[7]) = *(_BYTE *)(v187 + v186[7]);
  *(_QWORD *)(v188 + v183) = *(_QWORD *)(v187 + v183);
  *(_BYTE *)(v188 + v186[9]) = *(_BYTE *)(v187 + v186[9]);
  return v188;
}

uint64_t sub_100429728(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  unsigned __int8 v40;
  void *v41;
  void *v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  const void *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  void (*v85)(char *, uint64_t, uint64_t, __n128);
  uint64_t v86;
  char *v87;
  const void *v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  int *v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, char *, uint64_t, __n128);
  __n128 v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  unsigned int EnumCaseMultiPayload;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  void (*v184)(char *, char *, uint64_t, __n128);
  __n128 v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  int v208;
  int v209;
  int *v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v225;
  int *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, char *, uint64_t, __n128);
  __n128 v233;
  uint64_t v234;
  _QWORD *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  unsigned int v262;
  int *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v263 = a3;
  v7 = a3[5];
  v265 = a1;
  v266 = a2;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ConditionDetailChartHeaderStringModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  *(_BYTE *)(v8 + *(int *)(v11 + 24)) = *(_BYTE *)(v9 + *(int *)(v11 + 24));
  v267 = v8;
  v268 = type metadata accessor for DetailChartViewModel(0);
  v12 = *(int *)(v268 + 20);
  v13 = (char *)(v8 + v12);
  v14 = v9 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(v9 + v12);
  v15 = *(_QWORD *)(v9 + v12 + 8);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for ChartViewModel(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = v14 + v17;
  v20 = type metadata accessor for ChartKind(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v16[6];
  v22 = *(_QWORD *)(v14 + v21);
  *(_QWORD *)&v13[v21] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  v23 = v16[7];
  v24 = &v13[v23];
  v25 = v14 + v23;
  v26 = type metadata accessor for DetailChartExtrema(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = v16[8];
  v28 = *(_QWORD *)(v14 + v27);
  *(_QWORD *)&v13[v27] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease();
  v29 = v16[9];
  v30 = *(_QWORD *)(v14 + v29);
  *(_QWORD *)&v13[v29] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease();
  v31 = v16[10];
  v32 = &v13[v31];
  v33 = (_QWORD *)(v14 + v31);
  *(_QWORD *)v32 = *v33;
  *((_QWORD *)v32 + 1) = v33[1];
  v34 = v16[11];
  v35 = &v13[v34];
  v36 = v14 + v34;
  v37 = *(id *)v36;
  v38 = *(void **)(v36 + 8);
  v39 = *(_QWORD *)(v36 + 16);
  v40 = *(_BYTE *)(v36 + 24);
  sub_1001A41A0(*(id *)v36, v38, v39, v40);
  v41 = *(void **)v35;
  v42 = (void *)*((_QWORD *)v35 + 1);
  v43 = *((_QWORD *)v35 + 2);
  *(_QWORD *)v35 = v37;
  *((_QWORD *)v35 + 1) = v38;
  *((_QWORD *)v35 + 2) = v39;
  v44 = v35[24];
  v35[24] = v40;
  sub_1001A44FC(v41, v42, v43, v44);
  v45 = v16[12];
  v46 = &v13[v45];
  v47 = v14 + v45;
  *(_QWORD *)&v13[v45] = *(_QWORD *)(v14 + v45);
  v48 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v49 = &v46[v48];
  v50 = (const void *)(v47 + v48);
  v51 = type metadata accessor for Date(0);
  LODWORD(v46) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v51);
  v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51);
  v264 = v9;
  if ((_DWORD)v46)
  {
    if (!v52)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v53 = *(_QWORD *)(v51 - 8);
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v51);
LABEL_6:
    v54 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v53 + 24))(v49, v50, v51);
LABEL_7:
  v55 = v16[13];
  v56 = &v13[v55];
  v57 = (uint64_t *)(v14 + v55);
  v58 = *v57;
  v56[8] = *((_BYTE *)v57 + 8);
  *(_QWORD *)v56 = v58;
  v59 = v16[14];
  v60 = (uint64_t *)&v13[v59];
  v61 = (uint64_t *)(v14 + v59);
  v62 = sub_1000BA294(&qword_100BCB988);
  v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v62);
  v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62);
  if (v63)
  {
    if (!v64)
    {
      *v60 = *v61;
      v65 = *(int *)(v62 + 48);
      v66 = (char *)v60 + v65;
      v67 = (char *)v61 + v65;
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v51))
      {
        v68 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v66, v67, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v51);
      }
      v70 = v264;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      goto LABEL_20;
    }
LABEL_13:
    v69 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    v70 = v264;
LABEL_20:
    v77 = v267;
    goto LABEL_21;
  }
  if (v64)
  {
    sub_100021A14((uint64_t)v60, &qword_100BCB988);
    goto LABEL_13;
  }
  v71 = *v60;
  *v60 = *v61;
  swift_retain();
  swift_release(v71);
  v72 = *(int *)(v62 + 48);
  v73 = (char *)v60 + v72;
  v74 = (char *)v61 + v72;
  v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60 + v72, 1, v51);
  v76 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v51);
  if (v75)
  {
    v70 = v264;
    v77 = v267;
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v73, v74, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v51);
      goto LABEL_21;
    }
    goto LABEL_59;
  }
  v221 = *(_QWORD *)(v51 - 8);
  v70 = v264;
  v77 = v267;
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v221 + 8))(v73, v51);
LABEL_59:
    v222 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v221 + 24))(v73, v74, v51);
LABEL_21:
  *(_QWORD *)&v13[v16[15]] = *(_QWORD *)(v14 + v16[15]);
  v78 = v16[16];
  v79 = &v13[v78];
  v80 = v14 + v78;
  v81 = type metadata accessor for ChartDarkeningScrim(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 24))(v79, v80, v81);
  v82 = v16[17];
  v83 = *(_QWORD *)(v14 + v82);
  *(_QWORD *)&v13[v82] = v83;
  swift_bridgeObjectRetain(v83);
  v84 = swift_bridgeObjectRelease();
  v85 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v51 - 8) + 24);
  v85(&v13[v16[18]], v14 + v16[18], v51, v84);
  ((void (*)(char *, uint64_t, uint64_t))v85)(&v13[v16[19]], v14 + v16[19], v51);
  ((void (*)(char *, uint64_t, uint64_t))v85)(&v13[v16[20]], v14 + v16[20], v51);
  v86 = v16[21];
  v87 = &v13[v86];
  v88 = (const void *)(v14 + v86);
  v89 = type metadata accessor for DetailChartDataElement(0);
  v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v89);
  v91 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89);
  if (v90)
  {
    if (!v91)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v89);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  v92 = *(_QWORD *)(v89 - 8);
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v87, v89);
LABEL_26:
    v93 = sub_1000BA294(&qword_100BCB0A0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, const void *, uint64_t))(v92 + 24))(v87, v88, v89);
LABEL_27:
  v94 = v16[22];
  v95 = *(_QWORD *)(v14 + v94);
  *(_QWORD *)&v13[v94] = v95;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRelease();
  v96 = v16[23];
  v97 = &v13[v96];
  v98 = v14 + v96;
  v99 = type metadata accessor for ChartPeakMarkStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 24))(v97, v98, v99);
  *(_QWORD *)&v13[v16[24]] = *(_QWORD *)(v14 + v16[24]);
  v100 = v16[25];
  v101 = *(_QWORD *)(v14 + v100);
  *(_QWORD *)&v13[v100] = v101;
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRelease();
  v102 = v16[26];
  v103 = &v13[v102];
  v104 = v14 + v102;
  v105 = type metadata accessor for ChartViewModelInterpolationMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 24))(v103, v104, v105);
  v106 = v16[27];
  v107 = &v13[v106];
  v108 = v14 + v106;
  v109 = type metadata accessor for ChartPastDataTreatment(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 24))(v107, v108, v109);
  v110 = v16[28];
  v111 = &v13[v110];
  v112 = (_QWORD *)(v14 + v110);
  *(_QWORD *)v111 = *v112;
  v113 = v112[1];
  *((_QWORD *)v111 + 1) = v113;
  swift_bridgeObjectRetain(v113);
  swift_bridgeObjectRelease();
  v114 = v16[29];
  v115 = &v13[v114];
  v116 = (_QWORD *)(v14 + v114);
  *(_QWORD *)v115 = *v116;
  v117 = v116[1];
  *((_QWORD *)v115 + 1) = v117;
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRelease();
  v118 = v16[30];
  v119 = &v13[v118];
  v120 = (_QWORD *)(v14 + v118);
  *(_QWORD *)v119 = *v120;
  v121 = v120[1];
  *((_QWORD *)v119 + 1) = v121;
  swift_bridgeObjectRetain(v121);
  swift_bridgeObjectRelease();
  v122 = v16[31];
  v123 = &v13[v122];
  v124 = (_QWORD *)(v14 + v122);
  *(_QWORD *)v123 = *v124;
  v125 = v124[1];
  *((_QWORD *)v123 + 1) = v125;
  swift_bridgeObjectRetain(v125);
  swift_bridgeObjectRelease();
  v126 = v16[32];
  v127 = &v13[v126];
  v128 = (_QWORD *)(v14 + v126);
  *(_QWORD *)v127 = *v128;
  v129 = v128[1];
  *((_QWORD *)v127 + 1) = v129;
  swift_bridgeObjectRetain(v129);
  swift_bridgeObjectRelease();
  v130 = v16[33];
  v131 = &v13[v130];
  v132 = (_QWORD *)(v14 + v130);
  v133 = v132[1];
  v134 = *((_QWORD *)v131 + 1);
  *(_QWORD *)v131 = *v132;
  *((_QWORD *)v131 + 1) = v133;
  swift_retain();
  swift_release(v134);
  v135 = v268;
  v136 = *(int *)(v268 + 24);
  v137 = (_QWORD *)(v77 + v136);
  v138 = (_QWORD *)(v70 + v136);
  v139 = (int *)type metadata accessor for LollipopViewModel(0);
  LODWORD(v134) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, (uint64_t)v139);
  v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v138, 1, (uint64_t)v139);
  if ((_DWORD)v134)
  {
    if (!v140)
    {
      v141 = v70;
      *v137 = *v138;
      v142 = v138[1];
      v137[1] = v142;
      v143 = v139[5];
      v144 = (char *)v137 + v143;
      v145 = (char *)v138 + v143;
      v146 = type metadata accessor for DetailChartDataPoint(0);
      v147 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v146 - 8) + 16);
      v148 = swift_bridgeObjectRetain(v142);
      v147(v144, v145, v146, v148);
      *(_QWORD *)((char *)v137 + v139[6]) = *(_QWORD *)((char *)v138 + v139[6]);
      v149 = v139[7];
      v150 = (char *)v137 + v149;
      v151 = (char *)v138 + v149;
      v152 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v151);
      v262 = EnumCaseMultiPayload;
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v150 = *(_QWORD *)v151;
        v179 = *((_QWORD *)v151 + 1);
        *((_QWORD *)v150 + 1) = v179;
        v261 = v152;
        v180 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v181 = v180[5];
        v260 = &v150[v181];
        v182 = &v151[v181];
        v183 = type metadata accessor for AttributedString(0);
        v184 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v183 - 8) + 16);
        v185 = swift_bridgeObjectRetain(v179);
        v184(v260, v182, v183, v185);
        v186 = v180[6];
        v187 = &v150[v186];
        v188 = &v151[v186];
        *(_QWORD *)v187 = *(_QWORD *)v188;
        v189 = *((_QWORD *)v188 + 1);
        *((_QWORD *)v187 + 1) = v189;
        v190 = v180[7];
        v191 = &v150[v190];
        v192 = &v151[v190];
        *(_QWORD *)v191 = *(_QWORD *)v192;
        v193 = *((_QWORD *)v192 + 1);
        *((_QWORD *)v191 + 1) = v193;
        v194 = v180[8];
        v195 = &v150[v194];
        v196 = &v151[v194];
        *(_QWORD *)v195 = *(_QWORD *)v196;
        v155 = *((_QWORD *)v196 + 1);
        *((_QWORD *)v195 + 1) = v155;
        v197 = v180[9];
        v198 = &v150[v197];
        v199 = &v151[v197];
        *(_QWORD *)v198 = *(_QWORD *)v199;
        v156 = *((_QWORD *)v199 + 1);
        *((_QWORD *)v198 + 1) = v156;
        v200 = v180[10];
        v201 = &v150[v200];
        v202 = &v151[v200];
        *(_QWORD *)v201 = *(_QWORD *)v202;
        v157 = *((_QWORD *)v202 + 1);
        *((_QWORD *)v201 + 1) = v157;
        v203 = v180[11];
        v152 = v261;
        v150[v203] = v151[v203];
        swift_bridgeObjectRetain(v189);
        v154 = v193;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(_QWORD *)v150 = *(_QWORD *)v151;
          v155 = *((_QWORD *)v151 + 1);
          *((_QWORD *)v150 + 1) = v155;
          *((_QWORD *)v150 + 2) = *((_QWORD *)v151 + 2);
          v156 = *((_QWORD *)v151 + 3);
          *((_QWORD *)v150 + 3) = v156;
          *((_QWORD *)v150 + 4) = *((_QWORD *)v151 + 4);
          v157 = *((_QWORD *)v151 + 5);
          *((_QWORD *)v150 + 5) = v157;
          goto LABEL_44;
        }
        *(_QWORD *)v150 = *(_QWORD *)v151;
        v154 = *((_QWORD *)v151 + 1);
        *((_QWORD *)v150 + 1) = v154;
        *((_QWORD *)v150 + 2) = *((_QWORD *)v151 + 2);
        v155 = *((_QWORD *)v151 + 3);
        *((_QWORD *)v150 + 3) = v155;
        *((_QWORD *)v150 + 4) = *((_QWORD *)v151 + 4);
        v156 = *((_QWORD *)v151 + 5);
        *((_QWORD *)v150 + 5) = v156;
        *((_QWORD *)v150 + 6) = *((_QWORD *)v151 + 6);
        v157 = *((_QWORD *)v151 + 7);
        *((_QWORD *)v150 + 7) = v157;
        v150[64] = v151[64];
        v150[65] = v151[65];
      }
      swift_bridgeObjectRetain(v154);
LABEL_44:
      v159 = v265;
      v70 = v141;
      v135 = v268;
      swift_bridgeObjectRetain(v155);
      swift_bridgeObjectRetain(v156);
      swift_bridgeObjectRetain(v157);
      swift_storeEnumTagMultiPayload(v150, v152, v262);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v137, 0, 1, (uint64_t)v139);
      v160 = v266;
      v77 = v267;
      goto LABEL_45;
    }
    goto LABEL_34;
  }
  if (v140)
  {
    sub_1000215BC((uint64_t)v137, type metadata accessor for LollipopViewModel);
LABEL_34:
    v158 = sub_1000BA294(&qword_100BE19B8);
    memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    v159 = v265;
LABEL_35:
    v160 = v266;
    goto LABEL_45;
  }
  *v137 = *v138;
  v161 = v138[1];
  v137[1] = v161;
  swift_bridgeObjectRetain(v161);
  swift_bridgeObjectRelease();
  v162 = v139[5];
  v163 = (char *)v137 + v162;
  v164 = (char *)v138 + v162;
  v165 = type metadata accessor for DetailChartDataPoint(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 24))(v163, v164, v165);
  *(_QWORD *)((char *)v137 + v139[6]) = *(_QWORD *)((char *)v138 + v139[6]);
  v159 = v265;
  v160 = v266;
  if (v265 == v266)
    goto LABEL_45;
  v166 = v139[7];
  v167 = (uint64_t)v137 + v166;
  v168 = (char *)v138 + v166;
  sub_1000215BC(v167, type metadata accessor for LollipopDetailViewModel);
  v169 = type metadata accessor for LollipopDetailViewModel(0);
  v170 = swift_getEnumCaseMultiPayload(v168);
  if (v170 == 2)
  {
    *(_QWORD *)v167 = *(_QWORD *)v168;
    v225 = *((_QWORD *)v168 + 1);
    *(_QWORD *)(v167 + 8) = v225;
    v226 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v227 = v226[5];
    v228 = v167 + v227;
    v229 = &v168[v227];
    v230 = v70;
    v231 = type metadata accessor for AttributedString(0);
    v232 = *(void (**)(uint64_t, char *, uint64_t, __n128))(*(_QWORD *)(v231 - 8) + 16);
    v233 = swift_bridgeObjectRetain(v225);
    v232(v228, v229, v231, v233);
    v159 = v265;
    v234 = v226[6];
    v235 = (_QWORD *)(v167 + v234);
    v236 = &v168[v234];
    *v235 = *(_QWORD *)v236;
    v237 = *((_QWORD *)v236 + 1);
    v235[1] = v237;
    v238 = v226[7];
    v239 = (_QWORD *)(v167 + v238);
    v240 = &v168[v238];
    *v239 = *(_QWORD *)v240;
    v241 = *((_QWORD *)v240 + 1);
    v239[1] = v241;
    v242 = v226[8];
    v243 = (_QWORD *)(v167 + v242);
    v244 = &v168[v242];
    *v243 = *(_QWORD *)v244;
    v245 = *((_QWORD *)v244 + 1);
    v243[1] = v245;
    v246 = v226[9];
    v247 = (_QWORD *)(v167 + v246);
    v248 = &v168[v246];
    *v247 = *(_QWORD *)v248;
    v249 = *((_QWORD *)v248 + 1);
    v247[1] = v249;
    v250 = v226[10];
    v251 = (_QWORD *)(v167 + v250);
    v252 = &v168[v250];
    *v251 = *(_QWORD *)v252;
    v253 = *((_QWORD *)v252 + 1);
    v251[1] = v253;
    v254 = v226[11];
    v160 = v266;
    *(_BYTE *)(v167 + v254) = v168[v254];
    swift_bridgeObjectRetain(v237);
    swift_bridgeObjectRetain(v241);
    swift_bridgeObjectRetain(v245);
    v255 = v249;
    v77 = v267;
    swift_bridgeObjectRetain(v255);
    v256 = v253;
    v70 = v230;
    v135 = v268;
    swift_bridgeObjectRetain(v256);
    v176 = v167;
    v177 = v169;
    v178 = 2;
  }
  else
  {
    if (v170 != 1)
    {
      *(_QWORD *)v167 = *(_QWORD *)v168;
      v257 = *((_QWORD *)v168 + 1);
      *(_QWORD *)(v167 + 8) = v257;
      *(_QWORD *)(v167 + 16) = *((_QWORD *)v168 + 2);
      v258 = *((_QWORD *)v168 + 3);
      *(_QWORD *)(v167 + 24) = v258;
      *(_QWORD *)(v167 + 32) = *((_QWORD *)v168 + 4);
      v259 = *((_QWORD *)v168 + 5);
      *(_QWORD *)(v167 + 40) = v259;
      swift_bridgeObjectRetain(v257);
      swift_bridgeObjectRetain(v258);
      swift_bridgeObjectRetain(v259);
      swift_storeEnumTagMultiPayload(v167, v169, 0);
      goto LABEL_35;
    }
    *(_QWORD *)v167 = *(_QWORD *)v168;
    v171 = *((_QWORD *)v168 + 1);
    *(_QWORD *)(v167 + 8) = v171;
    *(_QWORD *)(v167 + 16) = *((_QWORD *)v168 + 2);
    v172 = *((_QWORD *)v168 + 3);
    *(_QWORD *)(v167 + 24) = v172;
    *(_QWORD *)(v167 + 32) = *((_QWORD *)v168 + 4);
    v173 = *((_QWORD *)v168 + 5);
    *(_QWORD *)(v167 + 40) = v173;
    *(_QWORD *)(v167 + 48) = *((_QWORD *)v168 + 6);
    v174 = *((_QWORD *)v168 + 7);
    *(_QWORD *)(v167 + 56) = v174;
    *(_BYTE *)(v167 + 64) = v168[64];
    *(_BYTE *)(v167 + 65) = v168[65];
    swift_bridgeObjectRetain(v171);
    swift_bridgeObjectRetain(v172);
    v175 = v173;
    v160 = v266;
    swift_bridgeObjectRetain(v175);
    swift_bridgeObjectRetain(v174);
    v176 = v167;
    v177 = v169;
    v178 = 1;
  }
  swift_storeEnumTagMultiPayload(v176, v177, v178);
LABEL_45:
  v204 = *(int *)(v135 + 28);
  v205 = (_QWORD *)(v77 + v204);
  v206 = (_QWORD *)(v70 + v204);
  v207 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  v208 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v205, 1, v207);
  v209 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, v207);
  if (v208)
  {
    if (!v209)
    {
      v210 = v263;
      if (swift_getEnumCaseMultiPayload(v206) == 1)
      {
        v211 = type metadata accessor for TemperatureChartKind(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v211 - 8) + 16))(v205, v206, v211);
        v212 = v205;
        v213 = v207;
        v214 = 1;
      }
      else
      {
        *v205 = *v206;
        v220 = v206[1];
        v205[1] = v220;
        swift_bridgeObjectRetain(v220);
        v212 = v205;
        v213 = v207;
        v214 = 0;
      }
      swift_storeEnumTagMultiPayload(v212, v213, v214);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v205, 0, 1, v207);
      goto LABEL_62;
    }
LABEL_51:
    v215 = sub_1000BA294(&qword_100BE1968);
    memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
    v210 = v263;
    goto LABEL_62;
  }
  if (v209)
  {
    sub_1000215BC((uint64_t)v205, type metadata accessor for ConditionDetailChartFooterViewModel);
    goto LABEL_51;
  }
  v210 = v263;
  if (v159 != v160)
  {
    sub_1000215BC((uint64_t)v205, type metadata accessor for ConditionDetailChartFooterViewModel);
    if (swift_getEnumCaseMultiPayload(v206) == 1)
    {
      v216 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v205, v206, v216);
      v217 = v205;
      v218 = v207;
      v219 = 1;
    }
    else
    {
      *v205 = *v206;
      v223 = v206[1];
      v205[1] = v223;
      swift_bridgeObjectRetain(v223);
      v217 = v205;
      v218 = v207;
      v219 = 0;
    }
    swift_storeEnumTagMultiPayload(v217, v218, v219);
  }
LABEL_62:
  sub_100094D04((_QWORD *)(v159 + v210[6]), (_QWORD *)(v160 + v210[6]));
  *(_BYTE *)(v159 + v210[7]) = *(_BYTE *)(v160 + v210[7]);
  *(_QWORD *)(v159 + v210[8]) = *(_QWORD *)(v160 + v210[8]);
  *(_BYTE *)(v159 + v210[9]) = *(_BYTE *)(v160 + v210[9]);
  return v159;
}

uint64_t sub_10042A6D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  _OWORD *v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  const void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 *v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v105 = a3;
  v106 = a2;
  v7 = a3[5];
  v107 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ConditionDetailChartHeaderStringModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  *(_BYTE *)(v8 + *(int *)(v11 + 24)) = *(_BYTE *)(v9 + *(int *)(v11 + 24));
  v108 = type metadata accessor for DetailChartViewModel(0);
  v12 = *(int *)(v108 + 20);
  v13 = v8 + v12;
  v14 = v9 + v12;
  *(_OWORD *)(v8 + v12) = *(_OWORD *)(v9 + v12);
  v15 = (int *)type metadata accessor for ChartViewModel(0);
  v16 = v15[5];
  v17 = v13 + v16;
  v18 = v14 + v16;
  v19 = type metadata accessor for ChartKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_QWORD *)(v13 + v15[6]) = *(_QWORD *)(v14 + v15[6]);
  v20 = v15[7];
  v21 = v13 + v20;
  v22 = v14 + v20;
  v23 = type metadata accessor for DetailChartExtrema(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  *(_QWORD *)(v13 + v15[8]) = *(_QWORD *)(v14 + v15[8]);
  *(_QWORD *)(v13 + v15[9]) = *(_QWORD *)(v14 + v15[9]);
  *(_OWORD *)(v13 + v15[10]) = *(_OWORD *)(v14 + v15[10]);
  v24 = v15[11];
  v25 = (_OWORD *)(v13 + v24);
  v26 = (_OWORD *)(v14 + v24);
  *v25 = *v26;
  *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
  v27 = v15[12];
  v28 = v13 + v27;
  v29 = v14 + v27;
  *(_QWORD *)(v13 + v27) = *(_QWORD *)(v14 + v27);
  v30 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v31 = (void *)(v28 + v30);
  v32 = (const void *)(v29 + v30);
  v33 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
  {
    v34 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
  }
  v35 = v15[13];
  v36 = v13 + v35;
  v37 = v14 + v35;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  v38 = v15[14];
  v39 = (_QWORD *)(v13 + v38);
  v40 = (_QWORD *)(v14 + v38);
  v41 = sub_1000BA294(&qword_100BCB988);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
  {
    v42 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    *v39 = *v40;
    v43 = *(int *)(v41 + 48);
    v44 = (char *)v39 + v43;
    v45 = (char *)v40 + v43;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v33))
    {
      v46 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v44, v45, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v33);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
  }
  *(_QWORD *)(v13 + v15[15]) = *(_QWORD *)(v14 + v15[15]);
  v47 = v15[16];
  v48 = v13 + v47;
  v49 = v14 + v47;
  v50 = type metadata accessor for ChartDarkeningScrim(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  *(_QWORD *)(v13 + v15[17]) = *(_QWORD *)(v14 + v15[17]);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
  v51(v13 + v15[18], v14 + v15[18], v33);
  v51(v13 + v15[19], v14 + v15[19], v33);
  v51(v13 + v15[20], v14 + v15[20], v33);
  v52 = v15[21];
  v53 = (void *)(v13 + v52);
  v54 = (const void *)(v14 + v52);
  v55 = type metadata accessor for DetailChartDataElement(0);
  v56 = v108;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
  {
    v57 = sub_1000BA294(&qword_100BCB0A0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
  }
  *(_QWORD *)(v13 + v15[22]) = *(_QWORD *)(v14 + v15[22]);
  v58 = v15[23];
  v59 = v13 + v58;
  v60 = v14 + v58;
  v61 = type metadata accessor for ChartPeakMarkStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
  *(_QWORD *)(v13 + v15[24]) = *(_QWORD *)(v14 + v15[24]);
  *(_QWORD *)(v13 + v15[25]) = *(_QWORD *)(v14 + v15[25]);
  v62 = v15[26];
  v63 = v13 + v62;
  v64 = v14 + v62;
  v65 = type metadata accessor for ChartViewModelInterpolationMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
  v66 = v15[27];
  v67 = v13 + v66;
  v68 = v14 + v66;
  v69 = type metadata accessor for ChartPastDataTreatment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
  *(_OWORD *)(v13 + v15[28]) = *(_OWORD *)(v14 + v15[28]);
  *(_OWORD *)(v13 + v15[29]) = *(_OWORD *)(v14 + v15[29]);
  *(_OWORD *)(v13 + v15[30]) = *(_OWORD *)(v14 + v15[30]);
  *(_OWORD *)(v13 + v15[31]) = *(_OWORD *)(v14 + v15[31]);
  *(_OWORD *)(v13 + v15[32]) = *(_OWORD *)(v14 + v15[32]);
  *(_OWORD *)(v13 + v15[33]) = *(_OWORD *)(v14 + v15[33]);
  v70 = *(int *)(v108 + 24);
  v71 = (_OWORD *)(v8 + v70);
  v72 = (_OWORD *)(v9 + v70);
  v73 = (int *)type metadata accessor for LollipopViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, (uint64_t)v73))
  {
    v74 = sub_1000BA294(&qword_100BE19B8);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    v76 = v106;
    v75 = v107;
    v77 = v105;
  }
  else
  {
    *v71 = *v72;
    v78 = v73[5];
    v79 = (char *)v71 + v78;
    v80 = (char *)v72 + v78;
    v81 = type metadata accessor for DetailChartDataPoint(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
    *(_QWORD *)((char *)v71 + v73[6]) = *(_QWORD *)((char *)v72 + v73[6]);
    v82 = v73[7];
    v83 = (_OWORD *)((char *)v71 + v82);
    v84 = (_OWORD *)((char *)v72 + v82);
    v85 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v84) == 2)
    {
      *v83 = *v84;
      v86 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v87 = v86[5];
      v88 = (char *)v83 + v87;
      v89 = (char *)v84 + v87;
      v90 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
      *(_OWORD *)((char *)v83 + v86[6]) = *(_OWORD *)((char *)v84 + v86[6]);
      *(_OWORD *)((char *)v83 + v86[7]) = *(_OWORD *)((char *)v84 + v86[7]);
      *(_OWORD *)((char *)v83 + v86[8]) = *(_OWORD *)((char *)v84 + v86[8]);
      *(_OWORD *)((char *)v83 + v86[9]) = *(_OWORD *)((char *)v84 + v86[9]);
      *(_OWORD *)((char *)v83 + v86[10]) = *(_OWORD *)((char *)v84 + v86[10]);
      *((_BYTE *)v83 + v86[11]) = *((_BYTE *)v84 + v86[11]);
      swift_storeEnumTagMultiPayload(v83, v85, 2);
    }
    else
    {
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    v76 = v106;
    v75 = v107;
    v77 = v105;
    v56 = v108;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, (uint64_t)v73);
  }
  v91 = *(int *)(v56 + 28);
  v92 = (void *)(v8 + v91);
  v93 = (const void *)(v9 + v91);
  v94 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
  {
    v95 = sub_1000BA294(&qword_100BE1968);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v93) == 1)
    {
      v96 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v92, v93, v96);
      swift_storeEnumTagMultiPayload(v92, v94, 1);
    }
    else
    {
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
  }
  v97 = v77[6];
  v98 = v77[7];
  v99 = v75 + v97;
  v100 = (__int128 *)(v76 + v97);
  v101 = *v100;
  v102 = v100[1];
  *(_QWORD *)(v99 + 32) = *((_QWORD *)v100 + 4);
  *(_OWORD *)v99 = v101;
  *(_OWORD *)(v99 + 16) = v102;
  *(_BYTE *)(v75 + v98) = *(_BYTE *)(v76 + v98);
  v103 = v77[9];
  *(_QWORD *)(v75 + v77[8]) = *(_QWORD *)(v76 + v77[8]);
  *(_BYTE *)(v75 + v103) = *(_BYTE *)(v76 + v103);
  return v75;
}

uint64_t sub_10042AE80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  void *v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  void (*v69)(char *, uint64_t, uint64_t, __n128);
  uint64_t v70;
  char *v71;
  const void *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  int *v120;
  int v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _OWORD *v127;
  _OWORD *v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  _OWORD *v144;
  _OWORD *v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  const void *v155;
  uint64_t v156;
  int v157;
  int v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  uint64_t v168;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;

  v6 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v171 = a3;
  v172 = a1;
  v7 = a3[5];
  v8 = a1 + v7;
  v174 = a2;
  v9 = a2 + v7;
  v10 = type metadata accessor for ConditionDetailChartHeaderStringModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for ConditionDetailChartHeaderViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  *(_BYTE *)(v8 + *(int *)(v11 + 24)) = *(_BYTE *)(v9 + *(int *)(v11 + 24));
  v173 = type metadata accessor for DetailChartViewModel(0);
  v12 = *(int *)(v173 + 20);
  v13 = (char *)(v8 + v12);
  v14 = v9 + v12;
  v15 = *(_QWORD *)(v9 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(v9 + v12);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for ChartViewModel(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = v14 + v17;
  v20 = type metadata accessor for ChartKind(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  *(_QWORD *)&v13[v16[6]] = *(_QWORD *)(v14 + v16[6]);
  swift_bridgeObjectRelease();
  v21 = v16[7];
  v22 = &v13[v21];
  v23 = v14 + v21;
  v24 = type metadata accessor for DetailChartExtrema(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  *(_QWORD *)&v13[v16[8]] = *(_QWORD *)(v14 + v16[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13[v16[9]] = *(_QWORD *)(v14 + v16[9]);
  swift_bridgeObjectRelease();
  *(_OWORD *)&v13[v16[10]] = *(_OWORD *)(v14 + v16[10]);
  v25 = v16[11];
  v26 = &v13[v25];
  v27 = v14 + v25;
  v28 = *(_QWORD *)(v27 + 16);
  v29 = *(_BYTE *)(v27 + 24);
  v30 = *(void **)v26;
  v31 = (void *)*((_QWORD *)v26 + 1);
  v32 = *((_QWORD *)v26 + 2);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_QWORD *)v26 + 2) = v28;
  v33 = v26[24];
  v26[24] = v29;
  sub_1001A44FC(v30, v31, v32, v33);
  v34 = v16[12];
  v35 = &v13[v34];
  v36 = v14 + v34;
  *(_QWORD *)&v13[v34] = *(_QWORD *)(v14 + v34);
  v37 = *(int *)(sub_1000BA294(&qword_100BCB978) + 48);
  v38 = &v35[v37];
  v39 = (const void *)(v36 + v37);
  v40 = type metadata accessor for Date(0);
  LODWORD(v35) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if ((_DWORD)v35)
  {
    if (!v41)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v42 = *(_QWORD *)(v40 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v40);
LABEL_6:
    v43 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v42 + 40))(v38, v39, v40);
LABEL_7:
  v44 = v16[13];
  v45 = &v13[v44];
  v46 = v14 + v44;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = *(_BYTE *)(v46 + 8);
  v47 = v16[14];
  v48 = (uint64_t *)&v13[v47];
  v49 = (uint64_t *)(v14 + v47);
  v50 = sub_1000BA294(&qword_100BCB988);
  v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v50);
  v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50);
  if (v51)
  {
    if (!v52)
    {
      *v48 = *v49;
      v53 = *(int *)(v50 + 48);
      v54 = (char *)v48 + v53;
      v55 = (char *)v49 + v53;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v40))
      {
        v56 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v54, v55, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v40);
      }
      v62 = (uint64_t)v48;
      v63 = v50;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v52)
  {
    sub_100021A14((uint64_t)v48, &qword_100BCB988);
LABEL_13:
    v57 = type metadata accessor for ChartViewModel.Background(0);
LABEL_14:
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_22;
  }
  v58 = *v48;
  *v48 = *v49;
  swift_release(v58);
  v59 = *(int *)(v50 + 48);
  v48 = (uint64_t *)((char *)v48 + v59);
  v49 = (uint64_t *)((char *)v49 + v59);
  v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v40);
  v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v40);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v48, v49, v40);
      v62 = (uint64_t)v48;
      v63 = v40;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v63);
      goto LABEL_22;
    }
    goto LABEL_56;
  }
  v170 = *(_QWORD *)(v40 - 8);
  if (v61)
  {
    (*(void (**)(uint64_t *, uint64_t))(v170 + 8))(v48, v40);
LABEL_56:
    v57 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    goto LABEL_14;
  }
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v170 + 40))(v48, v49, v40);
LABEL_22:
  *(_QWORD *)&v13[v16[15]] = *(_QWORD *)(v14 + v16[15]);
  v64 = v16[16];
  v65 = &v13[v64];
  v66 = v14 + v64;
  v67 = type metadata accessor for ChartDarkeningScrim(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  *(_QWORD *)&v13[v16[17]] = *(_QWORD *)(v14 + v16[17]);
  v68 = swift_bridgeObjectRelease();
  v69 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v40 - 8) + 40);
  v69(&v13[v16[18]], v14 + v16[18], v40, v68);
  ((void (*)(char *, uint64_t, uint64_t))v69)(&v13[v16[19]], v14 + v16[19], v40);
  ((void (*)(char *, uint64_t, uint64_t))v69)(&v13[v16[20]], v14 + v16[20], v40);
  v70 = v16[21];
  v71 = &v13[v70];
  v72 = (const void *)(v14 + v70);
  v73 = type metadata accessor for DetailChartDataElement(0);
  LODWORD(v69) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v73);
  v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73);
  if ((_DWORD)v69)
  {
    if (!v74)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v75 = *(_QWORD *)(v73 - 8);
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v73);
LABEL_27:
    v76 = sub_1000BA294(&qword_100BCB0A0);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, const void *, uint64_t))(v75 + 40))(v71, v72, v73);
LABEL_28:
  *(_QWORD *)&v13[v16[22]] = *(_QWORD *)(v14 + v16[22]);
  swift_bridgeObjectRelease();
  v77 = v16[23];
  v78 = &v13[v77];
  v79 = v14 + v77;
  v80 = type metadata accessor for ChartPeakMarkStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
  *(_QWORD *)&v13[v16[24]] = *(_QWORD *)(v14 + v16[24]);
  *(_QWORD *)&v13[v16[25]] = *(_QWORD *)(v14 + v16[25]);
  swift_bridgeObjectRelease();
  v81 = v16[26];
  v82 = &v13[v81];
  v83 = v14 + v81;
  v84 = type metadata accessor for ChartViewModelInterpolationMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 40))(v82, v83, v84);
  v85 = v16[27];
  v86 = &v13[v85];
  v87 = v14 + v85;
  v88 = type metadata accessor for ChartPastDataTreatment(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
  v89 = v16[28];
  v90 = &v13[v89];
  v91 = (uint64_t *)(v14 + v89);
  v93 = *v91;
  v92 = v91[1];
  *(_QWORD *)v90 = v93;
  *((_QWORD *)v90 + 1) = v92;
  swift_bridgeObjectRelease();
  v94 = v16[29];
  v95 = &v13[v94];
  v96 = (uint64_t *)(v14 + v94);
  v98 = *v96;
  v97 = v96[1];
  *(_QWORD *)v95 = v98;
  *((_QWORD *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  v99 = v16[30];
  v100 = &v13[v99];
  v101 = (uint64_t *)(v14 + v99);
  v103 = *v101;
  v102 = v101[1];
  *(_QWORD *)v100 = v103;
  *((_QWORD *)v100 + 1) = v102;
  swift_bridgeObjectRelease();
  v104 = v16[31];
  v105 = &v13[v104];
  v106 = (uint64_t *)(v14 + v104);
  v108 = *v106;
  v107 = v106[1];
  *(_QWORD *)v105 = v108;
  *((_QWORD *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  v109 = v16[32];
  v110 = &v13[v109];
  v111 = (uint64_t *)(v14 + v109);
  v113 = *v111;
  v112 = v111[1];
  *(_QWORD *)v110 = v113;
  *((_QWORD *)v110 + 1) = v112;
  swift_bridgeObjectRelease();
  v114 = v16[33];
  v115 = *(_QWORD *)&v13[v114 + 8];
  *(_OWORD *)&v13[v114] = *(_OWORD *)(v14 + v114);
  swift_release(v115);
  v116 = v173;
  v117 = *(int *)(v173 + 24);
  v118 = (_QWORD *)(v8 + v117);
  v119 = (_QWORD *)(v9 + v117);
  v120 = (int *)type metadata accessor for LollipopViewModel(0);
  LODWORD(v86) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, (uint64_t)v120);
  v121 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, (uint64_t)v120);
  if ((_DWORD)v86)
  {
    if (!v121)
    {
      *(_OWORD *)v118 = *(_OWORD *)v119;
      v122 = v120[5];
      v123 = (char *)v118 + v122;
      v124 = (char *)v119 + v122;
      v125 = type metadata accessor for DetailChartDataPoint(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
      *(_QWORD *)((char *)v118 + v120[6]) = *(_QWORD *)((char *)v119 + v120[6]);
      v126 = v120[7];
      v127 = (_OWORD *)((char *)v118 + v126);
      v128 = (_OWORD *)((char *)v119 + v126);
      v129 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v128) == 2)
      {
        *v127 = *v128;
        v130 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v131 = v130[5];
        v132 = (char *)v127 + v131;
        v133 = (char *)v128 + v131;
        v134 = type metadata accessor for AttributedString(0);
        v135 = v133;
        v116 = v173;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v135, v134);
        *(_OWORD *)((char *)v127 + v130[6]) = *(_OWORD *)((char *)v128 + v130[6]);
        *(_OWORD *)((char *)v127 + v130[7]) = *(_OWORD *)((char *)v128 + v130[7]);
        *(_OWORD *)((char *)v127 + v130[8]) = *(_OWORD *)((char *)v128 + v130[8]);
        *(_OWORD *)((char *)v127 + v130[9]) = *(_OWORD *)((char *)v128 + v130[9]);
        *(_OWORD *)((char *)v127 + v130[10]) = *(_OWORD *)((char *)v128 + v130[10]);
        *((_BYTE *)v127 + v130[11]) = *((_BYTE *)v128 + v130[11]);
        swift_storeEnumTagMultiPayload(v127, v129, 2);
      }
      else
      {
        memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      v137 = v172;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, (uint64_t)v120);
      goto LABEL_41;
    }
LABEL_34:
    v136 = sub_1000BA294(&qword_100BE19B8);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    v137 = v172;
    goto LABEL_41;
  }
  if (v121)
  {
    sub_1000215BC((uint64_t)v118, type metadata accessor for LollipopViewModel);
    goto LABEL_34;
  }
  v138 = v119[1];
  *v118 = *v119;
  v118[1] = v138;
  swift_bridgeObjectRelease();
  v139 = v120[5];
  v140 = (char *)v118 + v139;
  v141 = (char *)v119 + v139;
  v142 = type metadata accessor for DetailChartDataPoint(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 40))(v140, v141, v142);
  *(_QWORD *)((char *)v118 + v120[6]) = *(_QWORD *)((char *)v119 + v120[6]);
  v137 = v172;
  if (v172 != v174)
  {
    v143 = v120[7];
    v144 = (_OWORD *)((char *)v118 + v143);
    v145 = (_OWORD *)((char *)v119 + v143);
    sub_1000215BC((uint64_t)v144, type metadata accessor for LollipopDetailViewModel);
    v146 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v145) == 2)
    {
      *v144 = *v145;
      v147 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v148 = v147[5];
      v149 = (char *)v144 + v148;
      v150 = (char *)v145 + v148;
      v151 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
      *(_OWORD *)((char *)v144 + v147[6]) = *(_OWORD *)((char *)v145 + v147[6]);
      *(_OWORD *)((char *)v144 + v147[7]) = *(_OWORD *)((char *)v145 + v147[7]);
      *(_OWORD *)((char *)v144 + v147[8]) = *(_OWORD *)((char *)v145 + v147[8]);
      *(_OWORD *)((char *)v144 + v147[9]) = *(_OWORD *)((char *)v145 + v147[9]);
      *(_OWORD *)((char *)v144 + v147[10]) = *(_OWORD *)((char *)v145 + v147[10]);
      v152 = v147[11];
      v137 = v172;
      *((_BYTE *)v144 + v152) = *((_BYTE *)v145 + v152);
      swift_storeEnumTagMultiPayload(v144, v146, 2);
    }
    else
    {
      memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
    }
  }
LABEL_41:
  v153 = *(int *)(v116 + 28);
  v154 = (void *)(v8 + v153);
  v155 = (const void *)(v9 + v153);
  v156 = type metadata accessor for ConditionDetailChartFooterViewModel(0);
  v157 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v156);
  v158 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v156);
  if (v157)
  {
    if (!v158)
    {
      v159 = v174;
      v160 = v171;
      if (swift_getEnumCaseMultiPayload(v155) == 1)
      {
        v161 = type metadata accessor for TemperatureChartKind(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v161 - 8) + 32))(v154, v155, v161);
        swift_storeEnumTagMultiPayload(v154, v156, 1);
      }
      else
      {
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v156);
      goto LABEL_53;
    }
LABEL_47:
    v162 = sub_1000BA294(&qword_100BE1968);
    memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
    v159 = v174;
    v160 = v171;
    goto LABEL_53;
  }
  if (v158)
  {
    sub_1000215BC((uint64_t)v154, type metadata accessor for ConditionDetailChartFooterViewModel);
    goto LABEL_47;
  }
  v159 = v174;
  v160 = v171;
  if (v137 != v174)
  {
    sub_1000215BC((uint64_t)v154, type metadata accessor for ConditionDetailChartFooterViewModel);
    if (swift_getEnumCaseMultiPayload(v155) == 1)
    {
      v163 = type metadata accessor for TemperatureChartKind(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v154, v155, v163);
      swift_storeEnumTagMultiPayload(v154, v156, 1);
    }
    else
    {
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
    }
  }
LABEL_53:
  v164 = v160[6];
  v165 = v137 + v164;
  v166 = v159 + v164;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v137 + v164));
  v167 = *(_OWORD *)(v166 + 16);
  *(_OWORD *)v165 = *(_OWORD *)v166;
  *(_OWORD *)(v165 + 16) = v167;
  *(_QWORD *)(v165 + 32) = *(_QWORD *)(v166 + 32);
  v168 = v160[8];
  *(_BYTE *)(v137 + v160[7]) = *(_BYTE *)(v159 + v160[7]);
  *(_QWORD *)(v137 + v168) = *(_QWORD *)(v159 + v168);
  *(_BYTE *)(v137 + v160[9]) = *(_BYTE *)(v159 + v160[9]);
  return v137;
}

uint64_t sub_10042BA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042BA90);
}

void sub_10042BA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_1000D08E8();
  sub_1000BA294(&qword_100BC37F8);
  sub_100088FF0();
  if (v5)
  {
    v3 = sub_1000890E8();
  }
  else
  {
    type metadata accessor for DetailChartViewModel(0);
    sub_100088FF0();
    if (!v5)
    {
      sub_10003BCA4(*(_QWORD *)(v1 + *(int *)(v2 + 24) + 24));
      sub_100079F70();
      return;
    }
    v4 = v6;
    v3 = v1 + *(int *)(v2 + 20);
  }
  sub_1000B250C(v3, v0, v4);
}

uint64_t sub_10042BB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042BB0C);
}

void sub_10042BB0C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000994F4();
  sub_1000BA294(&qword_100BC37F8);
  sub_10009D2E8();
  if (v0 || (type metadata accessor for DetailChartViewModel(0), sub_10009D2E8(), v0))
  {
    sub_100098D08();
    sub_1000987C4(v1, v2, v3, v4);
  }
  else
  {
    sub_1000BF180();
    sub_100079F70();
  }
}

void sub_10042BB74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_100427B54(319, (unint64_t *)&qword_100BC38A0, (uint64_t (*)(void))sub_10010D1D0, (uint64_t)&type metadata for Double);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for DetailChartViewModel(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "(";
      v6[3] = &unk_10099F258;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[5] = &unk_10099F258;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

unint64_t sub_10042BC38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = qword_100BE1E28;
  if (!qword_100BE1E28)
  {
    v1 = sub_100075EB0(&qword_100BE1E30);
    v2 = sub_100075EB0(&qword_100BE1CE0);
    v3 = sub_100075EB0(&qword_100BE1CD8);
    v6 = sub_100075EB0(&qword_100BE1CD0);
    v7 = sub_100427D10();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onScrollVisibilityChange(threshold:_:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1E28);
  }
  return result;
}

unint64_t sub_10042BD40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1E38;
  if (!qword_100BE1E38)
  {
    v1 = sub_100075EB0(&qword_100BE1D38);
    sub_10042BDC4();
    sub_10003D2DC(&qword_100BD9910, &qword_100BD3DA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1E38);
  }
  return result;
}

unint64_t sub_10042BDC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1E40;
  if (!qword_100BE1E40)
  {
    v1 = sub_100075EB0(&qword_100BE1D28);
    sub_10042BE48();
    sub_10003D2DC(&qword_100BE1E58, &qword_100BE1E60);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1E40);
  }
  return result;
}

unint64_t sub_10042BE48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1E48;
  if (!qword_100BE1E48)
  {
    v1 = sub_100075EB0(&qword_100BE1D20);
    sub_10003D2DC(&qword_100BE1E50, &qword_100BE1D18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1E48);
  }
  return result;
}

unint64_t sub_10042BED0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE1E68;
  if (!qword_100BE1E68)
  {
    v1 = sub_100075EB0(&qword_100BE1E70);
    sub_10003D2DC(&qword_100BE1D70, &qword_100BE1D48);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE1E68);
  }
  return result;
}

uint64_t sub_10042BF6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4A80, 1);
}

unint64_t sub_10042BF7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD170;
  if (!qword_100BDD170)
  {
    v1 = sub_100075EB0(&qword_100BDD178);
    sub_10003D2DC(&qword_100BDD180, &qword_100BDD188);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD170);
  }
  return result;
}

void sub_10042C014()
{
  sub_10003D2DC(&qword_100BE1EB8, &qword_100BE1EC0);
}

uint64_t sub_10042C040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[15];
  char v11;

  v0 = type metadata accessor for Domain(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Access(0);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD))(v7 + 104))(v6, enum case for Access.protected(_:));
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Domain.standard(_:), v0);
  v11 = 1;
  v8 = sub_1000BA294(&qword_100BD0228);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  result = Setting.init(_:defaultValue:domain:access:)(0xD00000000000001DLL, 0x8000000100A02CB0, &v11, v3, v6);
  qword_100CAEB70 = result;
  return result;
}

void sub_10042C160(char *a1)
{
  sub_10045B964(a1);
  sub_10004A298();
}

void sub_10042C178()
{
  sub_10034F438();
  sub_10004A298();
}

void sub_10042C194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_10009CC5C();
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100099864();
  v2 = sub_10045B940();
  sub_100080C0C(v2, v3, v4);
  sub_10034F46C(v0);
  sub_100079F70();
}

uint64_t sub_10042C1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(char *, uint64_t);
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  BOOL v17;
  BOOL v19;
  int v25;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  sub_1000986AC();
  v41 = v0;
  v42 = v1;
  v2 = sub_10009EE9C();
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  sub_10045B914((uint64_t)&v36 - v7);
  v37 = v3;
  v9 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  v10 = v9(v8, v2);
  v11 = enum case for ContentSizeCategory.extraSmall(_:);
  v12 = enum case for ContentSizeCategory.small(_:);
  v13 = enum case for ContentSizeCategory.medium(_:);
  v14 = enum case for ContentSizeCategory.large(_:);
  v17 = v10 == enum case for ContentSizeCategory.extraSmall(_:)
     || v10 == enum case for ContentSizeCategory.small(_:)
     || v10 == enum case for ContentSizeCategory.medium(_:)
     || v10 == enum case for ContentSizeCategory.large(_:);
  v39 = enum case for ContentSizeCategory.extraExtraLarge(_:);
  v40 = enum case for ContentSizeCategory.extraLarge(_:);
  v19 = v17
     || v10 == enum case for ContentSizeCategory.extraLarge(_:)
     || v10 == enum case for ContentSizeCategory.extraExtraLarge(_:);
  v38 = enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
  if (!v19 && v10 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    if (v10 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v2);
  }
  sub_10045B914((uint64_t)v5);
  v25 = v9(v5, v2);
  if (v25 != v11 && v25 != v12 && v25 != v13 && v25 != v14)
  {
    if (v25 == v40 || v25 == v39 || v25 == v38)
      return 1;
    if (v25 != enum case for ContentSizeCategory.accessibilityMedium(_:)
      && v25 != enum case for ContentSizeCategory.accessibilityLarge(_:)
      && v25 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      && v25 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      && v25 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v2);
    }
  }
  return 0;
}

void sub_10042C430(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  _QWORD v92[2];
  char v93;
  __int128 v94;
  char v95;
  uint64_t v96;

  v21 = (int *)sub_10045B80C();
  v22 = a9 + v21[13];
  v92[0] = 0;
  v92[1] = 0;
  v93 = 1;
  v23 = sub_1000BA294(&qword_100BE1FD8);
  sub_10045B8BC(v23, v23, v24, v25, v26, v27, v28, v29, v76, v78, a12, a13, v85);
  v30 = v95;
  v31 = v96;
  *(_OWORD *)v22 = v94;
  *(_BYTE *)(v22 + 16) = v30;
  *(_QWORD *)(v22 + 24) = v31;
  v32 = a9 + v21[14];
  *(_QWORD *)v32 = sub_100129140;
  *(_QWORD *)(v32 + 8) = 0;
  *(_BYTE *)(v32 + 16) = 0;
  v33 = a9 + v21[15];
  v34 = sub_100098740((uint64_t)&unk_100B73C60, 17);
  *(_BYTE *)(v34 + 16) = 0;
  *(_QWORD *)v33 = sub_100129138;
  *(_QWORD *)(v33 + 8) = v34;
  *(_BYTE *)(v33 + 16) = 0;
  v35 = a9 + v21[16];
  *(_QWORD *)v35 = sub_100129104;
  *(_QWORD *)(v35 + 8) = 0;
  *(_BYTE *)(v35 + 16) = 0;
  v36 = a9 + v21[17];
  LOBYTE(v92[0]) = 0;
  sub_10045B8BC(v34, (uint64_t)&type metadata for Bool, v37, v38, v39, v40, v41, v42, v77, v79, v81, v83, v86);
  v43 = *((_QWORD *)&v94 + 1);
  *(_BYTE *)v36 = v94;
  *(_QWORD *)(v36 + 8) = v43;
  v44 = (_QWORD *)(a9 + v21[18]);
  *v44 = swift_getKeyPath(&unk_10099FD60);
  v45 = sub_1000BA294(&qword_100BC2908);
  sub_10045B640(v45);
  KeyPath = swift_getKeyPath(&unk_10099FD90);
  sub_1000FCC6C(KeyPath);
  v47 = swift_getKeyPath(&unk_10099FDC0);
  sub_1000FCC6C(v47);
  v48 = (_QWORD *)(a9 + v21[21]);
  *v48 = swift_getKeyPath(&unk_10099FDE8);
  v49 = sub_1000BA294(&qword_100BC37D8);
  sub_10045B640(v49);
  v50 = swift_getKeyPath(&unk_10099FE18);
  sub_1000FCC6C(v50);
  v51 = swift_getKeyPath(&unk_10099FE48);
  sub_1000FCC6C(v51);
  v52 = swift_getKeyPath(&unk_10099FE78);
  sub_1000FCC6C(v52);
  v53 = swift_getKeyPath(&unk_10099FD38);
  sub_1000FCC6C(v53);
  v54 = swift_getKeyPath(&unk_10099FEA8);
  sub_1000FCC6C(v54);
  v55 = swift_getKeyPath(&unk_10099FED0);
  sub_1000FCC6C(v55);
  v56 = (_QWORD *)(a9 + v21[28]);
  *v56 = swift_getKeyPath(&unk_10099FEF8);
  v57 = sub_1000BA294(&qword_100BC37E0);
  sub_10045B640(v57);
  v58 = (_QWORD *)(a9 + v21[29]);
  v59 = type metadata accessor for ObservableResolver(0);
  sub_10007A100((uint64_t)&qword_100BD0930);
  *v58 = EnvironmentObject.init()(v59, v60);
  v58[1] = v61;
  v89 = a1;
  sub_100080C0C(a1, a9, type metadata accessor for LocationComponentContainerViewModel);
  v62 = (_QWORD *)(a9 + v21[5]);
  *v62 = a2;
  v62[1] = a3;
  sub_100043CA8((uint64_t)a6, a9 + v21[6]);
  *(_BYTE *)(a9 + v21[7]) = a7;
  v63 = a9 + v21[8];
  v64 = sub_100098AA0();
  v80 = *(_QWORD *)(v64 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v63, a8, v64);
  *(_QWORD *)(a9 + v21[9]) = a11;
  *(double *)(a9 + v21[10]) = a10;
  *(_BYTE *)(a9 + v21[11]) = a14;
  v65 = (uint64_t *)(a9 + v21[12]);
  *v65 = v82;
  v65[1] = v84;
  v66 = *(_QWORD *)(a4 + 56);
  v87 = a2;
  swift_unknownObjectRetain(a2);
  swift_retain();
  swift_retain();
  v68 = 0;
  if ((DeviceIsVerySlow(v67) & 1) == 0)
    v68 = static Animation.linear(duration:)(0.25);
  if (qword_100BC1EF8 != -1)
    swift_once(&qword_100BC1EF8, sub_100131F04);
  v69 = byte_100CAE580 | byte_100CAE581 | byte_100CAE582;
  v70 = type metadata accessor for WireframeContentManager(0);
  swift_allocObject(v70, *(unsigned int *)(v70 + 48), *(unsigned __int16 *)(v70 + 52));
  swift_retain();
  v71 = sub_100022240(v66, a5, v68, v82, v84, (v69 & 1) == 0);
  v72 = type metadata accessor for WireframeContentManagerReference();
  v73 = sub_100098740(v72, 24);
  *(_QWORD *)(v73 + 16) = v71;
  v92[0] = v73;
  State.init(wrappedValue:)(v92, v72);
  swift_unknownObjectRelease(v87);
  swift_release(a4);
  swift_release(a5);
  swift_release(a11);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(a8, v64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a6);
  sub_100441DDC(v89, type metadata accessor for LocationComponentContainerViewModel);
  v74 = *((_QWORD *)&v94 + 1);
  v75 = (_QWORD *)(a9 + v21[30]);
  *v75 = v94;
  v75[1] = v74;
}

void sub_10042C8F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;

  v36[1] = a2;
  v38 = sub_1000BA294(&qword_100BE2330);
  __chkstk_darwin(v38);
  v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[0] = sub_1000BA294(&qword_100BE2338);
  __chkstk_darwin(v36[0]);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1000BA294(&qword_100BE2340);
  v7 = __chkstk_darwin(v37);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v36 - v10;
  v12 = type metadata accessor for LocationComponentContainerView(0);
  __chkstk_darwin(v12);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocationComponentViewModel(0);
  __chkstk_darwin(v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocationComponentContainerViewModel(0);
  sub_100080C0C(a1 + *(int *)(v18 + 20), (uint64_t)v17, type metadata accessor for LocationComponentViewModel);
  LODWORD(v15) = swift_getEnumCaseMultiPayload(v17, v15);
  sub_100441DDC((uint64_t)v17, type metadata accessor for LocationComponentViewModel);
  sub_100080C0C(a1, (uint64_t)v14, type metadata accessor for LocationComponentContainerView);
  if ((_DWORD)v15 != 5)
  {
    sub_100441DDC((uint64_t)v14, type metadata accessor for LocationComponentContainerView);
    v24 = v36[0];
    goto LABEL_8;
  }
  v19 = &v14[*(int *)(v12 + 108)];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_10008D47C(*(_QWORD *)v19, v21);
  sub_10010BCB4();
  v23 = v22;
  sub_1000B15F8(v20, v21);
  sub_100441DDC((uint64_t)v14, type metadata accessor for LocationComponentContainerView);
  v24 = v36[0];
  if ((v23 & 1) != 0)
  {
LABEL_8:
    sub_10008F324((uint64_t)v6);
    v30 = &qword_100BE2338;
    sub_100037768((uint64_t)v6, (uint64_t)v4, &qword_100BE2338);
    swift_storeEnumTagMultiPayload(v4, v38, 1);
    v34 = sub_100444E10();
    v35 = sub_100444E7C();
    _ConditionalContent<>.init(storage:)(v4, v37, v24, v34, v35);
    v33 = (uint64_t)v6;
    goto LABEL_9;
  }
  v25 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v26 = objc_msgSend(v25, "userInterfaceIdiom");

  sub_10008F324((uint64_t)v6);
  if (v26 == (id)1)
    v27 = 0x4000000000000000;
  else
    v27 = 0x3FF0000000000000;
  sub_100037768((uint64_t)v6, (uint64_t)v9, &qword_100BE2338);
  v28 = v37;
  v29 = &v9[*(int *)(v37 + 36)];
  *(_QWORD *)v29 = v27;
  *((_WORD *)v29 + 4) = 0;
  sub_100021A14((uint64_t)v6, &qword_100BE2338);
  v30 = &qword_100BE2340;
  sub_1001A7244((uint64_t)v9, (uint64_t)v11, &qword_100BE2340);
  sub_100037768((uint64_t)v11, (uint64_t)v4, &qword_100BE2340);
  swift_storeEnumTagMultiPayload(v4, v38, 0);
  v31 = sub_100444E10();
  v32 = sub_100444E7C();
  _ConditionalContent<>.init(storage:)(v4, v28, v24, v31, v32);
  v33 = (uint64_t)v11;
LABEL_9:
  sub_100021A14(v33, v30);
}

void sub_10042CC94(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for LocationComponentContainerView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC30C8);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v29 - v16;
  v18 = type metadata accessor for Date(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 1, 1, v18);
  if ((a1 & 1) == 0)
    goto LABEL_6;
  if (qword_100BC22E8 != -1)
    swift_once(&qword_100BC22E8, sub_10015A4B4);
  if (byte_100CAEE88 == 1)
  {
    v19 = type metadata accessor for TaskPriority(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v19);
    sub_100080C0C(a2, (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LocationComponentContainerView);
    sub_100037768((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_100BD35A0);
    type metadata accessor for MainActor(0);
    v20 = static MainActor.shared.getter();
    v21 = *(unsigned __int8 *)(v5 + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = (v6 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(unsigned __int8 *)(v12 + 80);
    v25 = (v24 + v23 + 32) & ~v24;
    v26 = swift_allocObject(&unk_100B73FA0, v25 + v13, v21 | v24 | 7);
    *(_QWORD *)(v26 + 16) = v20;
    *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
    sub_10007C75C((uint64_t)v7, v26 + v22, type metadata accessor for LocationComponentContainerView);
    v27 = (_OWORD *)(v26 + v23);
    *v27 = 0u;
    v27[1] = 0u;
    sub_1001A7244((uint64_t)v15, v26 + v25, (uint64_t *)&unk_100BD35A0);
    v28 = sub_1004ECBA8((uint64_t)v10, (uint64_t)&unk_100BE2460, v26);
    swift_release(v28);
  }
  else
  {
LABEL_6:
    sub_10042D724();
  }
  sub_100021A14((uint64_t)v17, (uint64_t *)&unk_100BD35A0);
}

void sub_10042CF10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)();
  void (*v24)();
  void (**v25)();
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = type metadata accessor for LocationComponentContainerAccessibilityModifier(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for LocationComponentContainerView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BE2380);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BE2388);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v14);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v17 = sub_1000BA294(&qword_100BE2390);
  sub_10042D164(a1, (uint64_t)&v12[*(int *)(v17 + 44)]);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for LocationComponentContainerView);
  v18 = *(unsigned __int8 *)(v7 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_100B73F28, v19 + v8, v18 | 7);
  sub_10007C75C((uint64_t)v9, v20 + v19, type metadata accessor for LocationComponentContainerView);
  v22 = static Alignment.center.getter(v21);
  v24 = v23;
  sub_100037768((uint64_t)v12, (uint64_t)v16, &qword_100BE2380);
  v25 = (void (**)())&v16[*(int *)(v13 + 36)];
  *v25 = sub_100445EE8;
  v25[1] = (void (*)())v20;
  v25[2] = (void (*)())v22;
  v25[3] = v24;
  sub_100021A14((uint64_t)v12, &qword_100BE2380);
  *v5 = swift_getKeyPath(&unk_1009A0280);
  v26 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v5, v26, 0);
  v27 = sub_1000BA294(&qword_100BE2398);
  v28 = v30;
  sub_10007C75C((uint64_t)v5, v30 + *(int *)(v27 + 36), type metadata accessor for LocationComponentContainerAccessibilityModifier);
  sub_1001A7244((uint64_t)v16, v28, &qword_100BE2388);
}

void sub_10042D164(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t OpaqueTypeConformance2;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];

  v32 = a1;
  v35 = a2;
  v33 = sub_1000BA294(&qword_100BE23B0);
  __chkstk_darwin(v33);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000BA294(&qword_100BE23B8);
  __chkstk_darwin(v34);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE23C0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v32 - v10;
  v12 = type metadata accessor for ComponentHeaderHeightModifier(0);
  v13 = __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v17 = (char *)&v32 - v16;
  v18 = sub_1000BA294(&qword_100BE23C8);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v32 - v22;
  *v15 = swift_getKeyPath(&unk_1009A0280);
  v24 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v15, v24, 0);
  sub_10007C75C((uint64_t)v15, (uint64_t)v17, type metadata accessor for ComponentHeaderHeightModifier);
  sub_100080C0C((uint64_t)v17, (uint64_t)&v21[*(int *)(v18 + 36)], type metadata accessor for ComponentHeaderHeightModifier);
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  sub_100441DDC((uint64_t)v17, type metadata accessor for ComponentHeaderHeightModifier);
  sub_1001A7244((uint64_t)v21, (uint64_t)v23, &qword_100BE23C8);
  sub_10004B214((uint64_t)v5);
  sub_100037768((uint64_t)v5, (uint64_t)v3, &qword_100BE23B8);
  swift_storeEnumTagMultiPayload(v3, v33, 1);
  v25 = sub_1000BA294(&qword_100BE23D0);
  v26 = sub_100075EB0(&qword_100BE23D8);
  v27 = sub_100445F34();
  v36[0] = v26;
  v36[1] = &type metadata for Bool;
  v36[2] = v27;
  v36[3] = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v36, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v29 = sub_1004460A8();
  _ConditionalContent<>.init(storage:)(v3, v25, v34, OpaqueTypeConformance2, v29);
  sub_100021A14((uint64_t)v5, &qword_100BE23B8);
  sub_100037768((uint64_t)v23, (uint64_t)v21, &qword_100BE23C8);
  sub_100037768((uint64_t)v11, (uint64_t)v9, &qword_100BE23C0);
  v30 = v35;
  sub_100037768((uint64_t)v21, v35, &qword_100BE23C8);
  v31 = sub_1000BA294(&qword_100BE2438);
  sub_100037768((uint64_t)v9, v30 + *(int *)(v31 + 48), &qword_100BE23C0);
  sub_100021A14((uint64_t)v11, &qword_100BE23C0);
  sub_100021A14((uint64_t)v23, &qword_100BE23C8);
  sub_100021A14((uint64_t)v9, &qword_100BE23C0);
  sub_100021A14((uint64_t)v21, &qword_100BE23C8);
}

void sub_10042D4E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t KeyPath;
  uint64_t v8;
  _BYTE v10[40];

  v4 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1001A7244(a1, (uint64_t)v10, &qword_100BE23A0);
  sub_10042D5C8((uint64_t)v10, (uint64_t)v6);
  KeyPath = swift_getKeyPath(&unk_1009A03E8);
  sub_100080C0C((uint64_t)v6, a2, type metadata accessor for LocationComponentContainerBackgroundView);
  v8 = a2 + *(int *)(sub_1000BA294(&qword_100BE23A8) + 36);
  *(_QWORD *)v8 = KeyPath;
  *(_WORD *)(v8 + 8) = 0;
  sub_100441DDC((uint64_t)v6, type metadata accessor for LocationComponentContainerBackgroundView);
}

void sub_10042D5C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  char v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;

  sub_1000BA294(&qword_100BC3808);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100099864();
  v8 = sub_100098AA0();
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098694();
  sub_100117398();
  sub_1000B42B0();
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000878BC();
  sub_100080C0C(v2 + *(int *)(v13 + 20), (uint64_t)v12, type metadata accessor for LocationComponentViewModel);
  v14 = (int *)sub_10045B80C();
  v15 = *(_BYTE *)(v2 + v14[7]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v4, v2 + v14[8], v8);
  v16 = *(_QWORD *)(v2 + v14[9]);
  v17 = *(double *)(v2 + v14[10]);
  *v3 = swift_getKeyPath(&unk_10099FEF8);
  v18 = sub_1000BA294(&qword_100BC37E0);
  sub_1000916FC((uint64_t)v3, v18);
  sub_10042E250((uint64_t)v3, (uint64_t)v12, v15, v4, v16, a1, a2, v17);
  swift_retain();
}

void sub_10042D724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[4];
  char v26;

  sub_10045B718();
  v6 = v0;
  v8 = v7;
  v9 = sub_10045B834();
  v10 = type metadata accessor for OSSignpostID(v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_100098694();
  sub_1000BA294(&qword_100BDA950);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  sub_100095158();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v18 = (char *)&v25[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000878BC();
  sub_100037768(v6 + *(int *)(v19 + 28), v15, &qword_100BDA950);
  if (sub_1000BD480(v15) == 1)
  {
    sub_100021A14(v15, &qword_100BDA950);
  }
  else
  {
    sub_10007C75C(v15, (uint64_t)v18, type metadata accessor for LocationComponentAction);
    v20 = objc_msgSend((id)objc_opt_self(CATransaction), "setFrameStallSkipRequest:", 1);
    v21 = static os_signpost_type_t.event.getter(v20);
    sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
    v22 = (void *)OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0xD00000000000001ELL, 0x800000010099FBF0);
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:)(v21, &_mh_execute_header, v22, "Weather:componentSelect", 23, 2, v1);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v10);
    sub_10045B80C();
    v23 = v6 + *(int *)(v19 + 20);
    v25[0] = v5;
    v25[1] = v4;
    v25[2] = v3;
    v25[3] = v2;
    v26 = 0;
    sub_1006BE634(v23, (uint64_t)v18, (uint64_t)v25, v8);
    sub_100441DDC((uint64_t)v18, type metadata accessor for LocationComponentAction);
  }
  sub_1000BD9F8();
}

void sub_10042D924(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v3 = type metadata accessor for DateInterval(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocationComponentContainerView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = sub_1000BA294(&qword_100BC30C8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a2 + *(int *)(v7 + 44)) == 1)
  {
    static TaskPriority.utility.getter(v11);
    v14 = type metadata accessor for TaskPriority(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
    sub_100080C0C(a2, (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LocationComponentContainerView);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v3);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = *(unsigned __int8 *)(v4 + 80);
    v18 = (v9 + v17 + v16) & ~v17;
    v19 = swift_allocObject(&unk_100B73F00, v18 + v5, v15 | v17 | 7);
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    sub_10007C75C((uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v16, type metadata accessor for LocationComponentContainerView);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v19 + v18, v6, v3);
    v20 = sub_10068CCF4((uint64_t)v13, (uint64_t)&unk_100BE2370, v19);
    swift_release(v20);
    sub_100021A14((uint64_t)v13, &qword_100BC30C8);
  }
}

uint64_t sub_10042DAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for Date(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[6] = swift_task_alloc(v8);
  v5[7] = swift_task_alloc(v8);
  v9 = type metadata accessor for Location.Identifier(0);
  v5[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[9] = v10;
  v5[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocationComponentContainerViewModel(0);
  v5[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10042DBB4, 0, 0);
}

uint64_t sub_10042DBB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_10045B80C();
  *(_QWORD *)(v0 + 96) = v1;
  *(_DWORD *)(v0 + 136) = *(_DWORD *)(v1 + 20);
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 112) = static MainActor.shared.getter(v2);
  sub_100099AB8();
  return sub_1000BA5E8();
}

uint64_t sub_10042DC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 112));
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v2 + v1);
  return sub_1000BA5E8();
}

uint64_t sub_10042DC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  sub_100080C0C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 88), type metadata accessor for LocationComponentContainerViewModel);
  *(_DWORD *)(v0 + 140) = *(_DWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v2);
  sub_100099AB8();
  return sub_1000BA5E8();
}

uint64_t sub_10042DCD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(int *)(v0 + 140);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = swift_release(*(_QWORD *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v2, v5 + v1, v4, v6);
  return sub_10045B624();
}

uint64_t sub_10042DD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(char **)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = (uint64_t *)(*(_QWORD *)(v0 + 16) + *(int *)(*(_QWORD *)(v0 + 96) + 48));
  v7 = *v6;
  v8 = v6[1];
  v9 = DateInterval.start.getter();
  DateInterval.end.getter(v9);
  sub_1000DB418((_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 56));
  sub_10049ACCC(v2, v3, v7, v8, v4, v5);
  sub_1000BE7AC(v5);
  sub_1000BE7AC(v4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v12);
  sub_100441DDC(v2, type metadata accessor for LocationComponentContainerViewModel);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10042DE3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[15];
  _BYTE v25[9];
  uint64_t v26;

  v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v12 = __chkstk_darwin(v11);
  v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v16 = &v24[-v15];
  v17 = type metadata accessor for TrackExposureModifier(0);
  __chkstk_darwin(v17);
  v19 = (double *)&v24[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v19 = a4;
  v19[1] = a5;
  *((_QWORD *)v19 + 2) = a1;
  *((_QWORD *)v19 + 3) = a2;
  v20 = type metadata accessor for Date(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v20);
  sub_100037768((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_100BD35A0);
  swift_retain();
  State.init(wrappedValue:)(v14, v11);
  sub_100021A14((uint64_t)v16, (uint64_t *)&unk_100BD35A0);
  v21 = (char *)v19 + *(int *)(v17 + 32);
  v25[0] = 0;
  State.init(wrappedValue:)(v25, &type metadata for Bool);
  v22 = v26;
  *v21 = v25[1];
  *((_QWORD *)v21 + 1) = v22;
  sub_100037768(v5, a3, &qword_100BDE360);
  v23 = sub_1000BA294(&qword_100BDE350);
  sub_10007C75C((uint64_t)v19, a3 + *(int *)(v23 + 36), type metadata accessor for TrackExposureModifier);
}

void sub_10042DFF4(char a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;

  v14 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocationComponentContainerView(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BC30C8);
  __chkstk_darwin(v22);
  v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
    goto LABEL_6;
  if (qword_100BC22E8 != -1)
    swift_once(&qword_100BC22E8, sub_10015A4B4);
  if (byte_100CAEE88 == 1)
  {
    v25 = type metadata accessor for TaskPriority(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 1, 1, v25);
    sub_100080C0C(a3, (uint64_t)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LocationComponentContainerView);
    sub_100037768(a2, (uint64_t)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_100BD35A0);
    type metadata accessor for MainActor(0);
    v26 = static MainActor.shared.getter();
    v27 = *(unsigned __int8 *)(v19 + 80);
    v28 = (v27 + 32) & ~v27;
    v29 = (v20 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = *(unsigned __int8 *)(v15 + 80);
    v31 = (v30 + v29 + 32) & ~v30;
    v32 = swift_allocObject(&unk_100B73F78, v31 + v16, v27 | v30 | 7);
    *(_QWORD *)(v32 + 16) = v26;
    *(_QWORD *)(v32 + 24) = &protocol witness table for MainActor;
    sub_10007C75C((uint64_t)v21, v32 + v28, type metadata accessor for LocationComponentContainerView);
    v33 = (double *)(v32 + v29);
    *v33 = a4;
    v33[1] = a5;
    v33[2] = a6;
    v33[3] = a7;
    sub_1001A7244((uint64_t)v17, v32 + v31, (uint64_t *)&unk_100BD35A0);
    v34 = sub_1004ECBA8((uint64_t)v24, (uint64_t)&unk_100BE2458, v32);
    swift_release(v34);
  }
  else
  {
LABEL_6:
    sub_10042D724();
  }
}

void sub_10042E250(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1001A7244(a1, a7, &qword_100BC3808);
  v15 = (int *)type metadata accessor for LocationComponentContainerBackgroundView(0);
  v16 = a7 + v15[5];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_10099FD90);
  *(_BYTE *)(v16 + 8) = 0;
  v17 = a7 + v15[6];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_1009A0440);
  *(_BYTE *)(v17 + 8) = 0;
  sub_10007C75C(a2, a7 + v15[7], type metadata accessor for LocationComponentViewModel);
  v18 = a7 + v15[8];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_10099FC98);
  *(_BYTE *)(v18 + 8) = 0;
  v19 = (_QWORD *)(a7 + v15[9]);
  *v19 = swift_getKeyPath(&unk_1009A0280);
  v20 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  *(_BYTE *)(a7 + v15[10]) = a3;
  v21 = a7 + v15[11];
  v22 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a4, v22);
  *(_QWORD *)(a7 + v15[12]) = a5;
  *(double *)(a7 + v15[13]) = a8;
  sub_1001A7244(a6, a7 + v15[14], &qword_100BE23A0);
}

uint64_t sub_10042E3B8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v9 + 56) = a9;
  *(double *)(v9 + 40) = a3;
  *(double *)(v9 + 48) = a4;
  *(double *)(v9 + 24) = a1;
  *(double *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 16) = a8;
  v10 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v9 + 64) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 72) = v11;
  *(_QWORD *)(v9 + 80) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 88) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12);
  *(_QWORD *)(v9 + 96) = v13;
  *(_QWORD *)(v9 + 104) = v14;
  return swift_task_switch(sub_10042E458, v13, v14);
}

uint64_t sub_10042E458()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  static Duration.seconds(_:)(0.15);
  ContinuousClock.init()();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100BFC620 + dword_100BFC620);
  v1 = (_QWORD *)swift_task_alloc(unk_100BFC624);
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_10042E4EC;
  v2 = sub_10045B940();
  return v5(v2, v3, 0, 0, 1);
}

uint64_t sub_10042E4EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  sub_100099254(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return sub_10045B624();
}

uint64_t sub_10042E560()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 88));
  sub_10045B900();
  sub_10042D724();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042E5D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return sub_1000950D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10042E604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  _QWORD v22[2];

  v4 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007A5F94(v7);
  v8 = sub_100357CFC();
  v10 = v9;
  sub_100441DDC((uint64_t)v6, type metadata accessor for LocationComponentHeaderMetrics);
  v22[0] = v8;
  v22[1] = v10;
  v11 = sub_100114EF8();
  v12 = Text.init<A>(_:)(v22, &type metadata for String, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  v19 = sub_1000BA294(&qword_100BE3360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a2, a1, v19);
  result = sub_1000BA294(&qword_100BE3368);
  v21 = (uint64_t *)(a2 + *(int *)(result + 36));
  *v21 = v12;
  v21[1] = v14;
  v21[2] = v18;
  v21[3] = v16;
  return result;
}

uint64_t sub_10042E70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned int v12;
  uint64_t KeyPath;
  double v14;
  double v15;
  char v16;
  char v17;
  double v18;
  char v19;
  char v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v12 = (a5 >> 8) & 1;
  KeyPath = swift_getKeyPath(&unk_1009A0B20);
  sub_100082BE8(a4, a5, v12);
  sub_1007A5DE0();
  v15 = v14;
  v17 = v16;
  sub_100082C5C(a4, a5, v12);
  if ((v17 & 1) == 0)
  {
    v18 = v15;
    v19 = a3 & 1;
    sub_10008D47C(a2, a3 & 1);
    sub_100109B54();
    v21 = v20;
    sub_1000B15F8(a2, v19);
    if ((v21 & 1) != 0)
    {
      if (qword_100BC1EB0 != -1)
        swift_once(&qword_100BC1EB0, sub_1002425A4);
      v22 = &qword_100CAE530;
    }
    else
    {
      if (qword_100BC1EB8 != -1)
        swift_once(&qword_100BC1EB8, sub_100129188);
      v22 = &qword_100CAE538;
    }
    v15 = v18 - (*(double *)v22 + *(double *)v22);
  }
  v23 = sub_1000BA294(&qword_100BE3350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a6, a1, v23);
  result = sub_1000BA294(&qword_100BE3358);
  v25 = a6 + *(int *)(result + 36);
  *(_QWORD *)v25 = KeyPath;
  *(double *)(v25 + 8) = v15;
  *(_BYTE *)(v25 + 16) = v17 & 1;
  return result;
}

void sub_10042E8AC(uint64_t a1@<X8>)
{
  char v2;

  *(_QWORD *)a1 = sub_1001B8D1C();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  sub_10004A298();
}

void sub_10042E8D8(uint64_t a1)
{
  sub_1001B8D6C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  sub_10004A298();
}

uint64_t sub_10042E900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10042E70C(a1, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24) | (*(unsigned __int8 *)(v2 + 25) << 8), a2);
}

double sub_10042E92C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  double result;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v8 = (a3 >> 8) & 1;
  sub_100082BE8(a2, a3, BYTE1(a3) & 1);
  sub_1007A5DE0();
  v10 = v9;
  v12 = v11 & 1;
  v13 = sub_100082C5C(a2, a3, v8);
  static Alignment.center.getter(v13);
  _FrameLayout.init(width:height:alignment:)(v10, v12, 0, 1);
  v14 = sub_1000BA294(&qword_100BE3370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a4, a1, v14);
  v15 = (_OWORD *)(a4 + *(int *)(sub_1000BA294(&qword_100BE3378) + 36));
  *v15 = v17;
  v15[1] = v18;
  result = *(double *)&v19;
  v15[2] = v19;
  return result;
}

double sub_10042EA20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10042E92C(a1, *(_QWORD *)v2, *(unsigned __int8 *)(v2 + 8) | (*(unsigned __int8 *)(v2 + 9) << 8), a2);
}

double sub_10042EA3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  double result;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = sub_10042EAE0();
  static Alignment.center.getter(v5);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v4, 0);
  v6 = sub_1000BA294(&qword_100BE34D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  v7 = (_OWORD *)(a2 + *(int *)(sub_1000BA294(&qword_100BE34E0) + 36));
  *v7 = v9;
  v7[1] = v10;
  result = *(double *)&v11;
  v7[2] = v11;
  return result;
}

double sub_10042EAE0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v16;

  v0 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  sub_1007A5F94(v9);
  v10 = v8[*(int *)(v3 + 32)];
  sub_100441DDC((uint64_t)v8, type metadata accessor for LocationComponentHeaderMetrics);
  if ((v10 & 1) != 0)
  {
    if (qword_100BC1EA0 != -1)
      swift_once(&qword_100BC1EA0, sub_100129178);
    return *(double *)&qword_100CAE520;
  }
  else
  {
    sub_1007A5F94(v11);
    sub_100080C0C((uint64_t)v5, (uint64_t)v2, type metadata accessor for LocationComponentHeaderViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2);
    sub_100441DDC((uint64_t)v2, type metadata accessor for LocationComponentHeaderViewModel);
    sub_100441DDC((uint64_t)v5, type metadata accessor for LocationComponentHeaderViewModel);
    v12 = 0.0;
    if (EnumCaseMultiPayload != 4)
    {
      sub_1007A5F94(v14);
      v12 = *(double *)&v8[*(int *)(v3 + 20)];
      sub_100441DDC((uint64_t)v8, type metadata accessor for LocationComponentHeaderMetrics);
    }
  }
  return v12;
}

void sub_10042EC80(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE __dst[112];

  v32 = a1;
  v33 = a2;
  v3 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v3);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1000BA294(&qword_100BE39C8);
  __chkstk_darwin(v9);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = static Edge.Set.top.getter(v12);
  memcpy(__dst, v2, sizeof(__dst));
  v13 = &v2[*(int *)(type metadata accessor for AirQualityTopPaddingModifier(0) + 24)];
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_10008D47C(*(_QWORD *)v13, v15);
  sub_100109B54();
  v17 = v16;
  v18 = sub_1000B15F8(v14, v15);
  sub_1007A5F94(v18);
  sub_100080C0C((uint64_t)v8, (uint64_t)v5, type metadata accessor for LocationComponentHeaderViewModel);
  v19 = swift_getEnumCaseMultiPayload(v5) == 4;
  sub_100441DDC((uint64_t)v5, type metadata accessor for LocationComponentHeaderViewModel);
  sub_100441DDC((uint64_t)v8, type metadata accessor for LocationComponentHeaderViewModel);
  v20 = sub_10012BFD0(v17 & 1, v19);
  v21 = EdgeInsets.init(_all:)(v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = sub_1000BA294(&qword_100BE39D0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v32, v28);
  v29 = (double *)&v11[*(int *)(v9 + 36)];
  *(_BYTE *)v29 = v31;
  v29[1] = v21;
  *((_QWORD *)v29 + 2) = v23;
  *((_QWORD *)v29 + 3) = v25;
  *((_QWORD *)v29 + 4) = v27;
  *((_BYTE *)v29 + 40) = 0;
  sub_1001A7244((uint64_t)v11, v33, &qword_100BE39C8);
}

double sub_10042EEA8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BC6A10);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10097CA50;
  sub_1007A5F94(v4);
  v5 = sub_100357CFC();
  v7 = v6;
  sub_100441DDC((uint64_t)v2, type metadata accessor for LocationComponentHeaderMetrics);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = sub_1000BA294(&qword_100BE39D8);
  sub_10007AB60((uint64_t)&unk_100BE39E0);
  v10 = v9;
  v11 = sub_100114EF8();
  View.accessibilityInputLabels<A>(_:)(v4, v8, &type metadata for String, v10, v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_10042EFD4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for AirQualityTopPaddingModifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for AirQualityComponentView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BE3240);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v12, a1, 0x70uLL);
  *((_QWORD *)v12 + 14) = swift_getKeyPath(&unk_10099FD38);
  v12[120] = 0;
  *((_QWORD *)v12 + 16) = swift_getKeyPath(&unk_10099FE78);
  v12[136] = 0;
  *((_QWORD *)v12 + 18) = swift_getKeyPath(&unk_1009A09D0);
  v12[152] = 0;
  v16 = &v12[*(int *)(v10 + 32)];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_10099FDE8);
  v17 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v16, v17, 0);
  v18 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_1009A09F8);
  v18[8] = 0;
  v24 = 0x3FF0000000000000;
  v25 = 0x4010000000000000;
  sub_10001F750(a1);
  v19 = sub_10010D1D0();
  ScaledValue.init(wrappedValue:step:)(&v25, &v24, &type metadata for Double, v19);
  *v9 = swift_getKeyPath(&unk_1009A0280);
  v20 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v9, v20, 0);
  sub_10007C75C((uint64_t)v9, (uint64_t)&v15[*(int *)(v13 + 36)], type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v12, (uint64_t)v15, type metadata accessor for AirQualityComponentView);
  memcpy(v6, a1, 0x70uLL);
  v21 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_1009A0280);
  swift_storeEnumTagMultiPayload(v21, v20, 0);
  v22 = &v6[*(int *)(v4 + 24)];
  *(_QWORD *)v22 = swift_getKeyPath(&unk_10099FD38);
  v22[8] = 0;
  sub_100037768((uint64_t)v15, a2, &qword_100BE3240);
  v23 = sub_1000BA294(&qword_100BE3248);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v23 + 36), type metadata accessor for AirQualityTopPaddingModifier);
  sub_10001F750(a1);
  sub_100021A14((uint64_t)v15, &qword_100BE3240);
}

void sub_10042F2D4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t *v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;

  sub_10045B718();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = v0;
  v12 = v11;
  v14 = v13;
  v55 = v15;
  v17 = v16 & 1;
  sub_1000BA294(v8);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098694();
  v53 = sub_100079FD4();
  sub_1000B42B0();
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v5;
  v54 = sub_1000BA294(v5);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100098728();
  v25 = v24 - v23;
  v3(v10, v17, v14, v12);
  v26 = v10 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v27 = (unsigned __int8 *)(v26 + *(int *)(sub_1000878BC() + 24));
  v28 = *v27;
  if (v27[1] == 1)
  {
    if ((v28 - 1) >= 2u)
    {
      v35 = static Edge.Set.bottom.getter();
      v36 = Edge.Set.init(rawValue:)(0);
      v37 = Edge.Set.init(rawValue:)(v36);
      if (Edge.Set.init(rawValue:)(v37 & v35) == v35)
        goto LABEL_12;
      v29 = v36 | v35;
    }
    else
    {
      v29 = 0;
    }
  }
  else
  {
    v30 = static Edge.Set.top.getter();
    v31 = static Edge.Set.bottom.getter();
    v32 = Edge.Set.init(rawValue:)(0);
    v33 = Edge.Set.init(rawValue:)(v32);
    if (Edge.Set.init(rawValue:)(v33 & v30) != v30)
      v32 = Edge.Set.init(rawValue:)(v32 | v30);
    v34 = Edge.Set.init(rawValue:)(v32);
    if (Edge.Set.init(rawValue:)(v34 & v31) != v31)
      LODWORD(v32) = Edge.Set.init(rawValue:)(v32 | v31);
    v29 = Edge.Set.init(rawValue:)(v28) & v32;
  }
  LOBYTE(v36) = Edge.Set.init(rawValue:)(v29);
LABEL_12:
  v38 = *(_QWORD *)(v10 + 16);
  v39 = *(_BYTE *)(v10 + 24);
  sub_10008D47C(v38, v39);
  sub_100109B54();
  v41 = v40;
  sub_1000B15F8(v38, v39);
  if ((v41 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v42 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v42 = &qword_100CAE538;
  }
  v43 = EdgeInsets.init(_all:)(*(double *)v42);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = sub_10045B894();
  sub_100037768(v50, v51, v9);
  v52 = &v21[*(int *)(v53 + 36)];
  *v52 = v36;
  *((double *)v52 + 1) = v43;
  *((_QWORD *)v52 + 2) = v45;
  *((_QWORD *)v52 + 3) = v47;
  *((_QWORD *)v52 + 4) = v49;
  v52[40] = 0;
  sub_100021A14(v1, v9);
  sub_100037768((uint64_t)v21, v25, v7);
  *(_QWORD *)(v25 + *(int *)(v54 + 36)) = 0x3FF0000000000000;
  sub_10009E47C((uint64_t)v21);
  sub_1001A7244(v25, v55, v56);
  sub_1000BD9F8();
}

void sub_10042F5B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (int *)type metadata accessor for FeelsLikeComponentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for FeelsLikeComponentViewModel);
  v10 = &v9[v7[5]];
  *(_QWORD *)v10 = swift_getKeyPath(&unk_10099FED0);
  v10[8] = 0;
  v11 = &v9[v7[6]];
  *(_QWORD *)v11 = swift_getKeyPath(&unk_1009A09F8);
  v11[8] = 0;
  v12 = &v9[v7[7]];
  *(_QWORD *)v12 = swift_getKeyPath(&unk_10099FD38);
  v12[8] = 0;
  v13 = &v9[v7[8]];
  *(_QWORD *)v13 = swift_getKeyPath(&unk_10099FDE8);
  v14 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v13, v14, 0);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v15 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v15, 0);
  v16 = sub_1000BA294(&qword_100BE3260);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v16 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v9, a2, type metadata accessor for FeelsLikeComponentView);
}

void sub_10042F764(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v8 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  v9 = __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v13 = (char *)&v18 - v12;
  KeyPath = swift_getKeyPath(&unk_10099FED0);
  v15 = swift_getKeyPath(&unk_10099FD38);
  *v11 = swift_getKeyPath(&unk_1009A0280);
  v16 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v11, v16, 0);
  sub_10007C75C((uint64_t)v11, (uint64_t)v13, type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  v17 = sub_1000BA294(&qword_100BE3278);
  sub_100080C0C((uint64_t)v13, a3 + *(int *)(v17 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  *(double *)a3 = a4;
  *(_QWORD *)(a3 + 8) = a1;
  *(_QWORD *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + 24) = KeyPath;
  *(_BYTE *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = v15;
  *(_BYTE *)(a3 + 48) = 0;
  swift_bridgeObjectRetain(a2);
  sub_100441DDC((uint64_t)v13, type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
}

void sub_10042F8B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for MapComponentViewModel(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MapComponentView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for MapComponentViewModel);
  sub_1008B9788((uint64_t)v9, (uint64_t)v12);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v13 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v13, 0);
  v14 = sub_1000BA294(&qword_100BE3288);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v14 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v12, a2, type metadata accessor for MapComponentView);
}

void sub_10042FA18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1000BA294(&qword_100BCD698);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1000BA294(&qword_100BCD380);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for MoonComponentViewModel(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MoonComponentView(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v15, type metadata accessor for MoonComponentViewModel);
  *v12 = swift_getKeyPath(&unk_1009A0A28);
  v19 = sub_1000BA294(&qword_100BC68C8);
  swift_storeEnumTagMultiPayload(v12, v19, 0);
  *v9 = swift_getKeyPath(&unk_1009A0A58);
  v20 = sub_1000BA294(&qword_100C09EB0);
  swift_storeEnumTagMultiPayload(v9, v20, 0);
  sub_10032A0B4((uint64_t)v12, (uint64_t)v9, (uint64_t)v15, 0, (uint64_t)v18, 0);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v21 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v21, 0);
  v22 = sub_1000BA294(&qword_100BE3298);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v22 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v18, a2, type metadata accessor for MoonComponentView);
}

void sub_10042FC6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for NewsArticleComponentViewModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v6, type metadata accessor for NewsArticleComponentViewModel);
  *(_QWORD *)a2 = swift_getKeyPath(&unk_10099FD38);
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = swift_getKeyPath(&unk_1009A09F8);
  *(_BYTE *)(a2 + 24) = 0;
  v7 = (int *)type metadata accessor for NewsArticleComponentView(0);
  v8 = (_QWORD *)(a2 + v7[6]);
  *v8 = swift_getKeyPath(&unk_10099FDE8);
  v9 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  sub_10007C75C((uint64_t)v6, a2 + v7[7], type metadata accessor for NewsArticleComponentViewModel);
  *(_BYTE *)(a2 + v7[8]) = 0;
}

void sub_10042FD70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t HourPrecipitationComponentView;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  HourPrecipitationComponentView = type metadata accessor for NextHourPrecipitationComponentView(0);
  __chkstk_darwin(HourPrecipitationComponentView);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for NextHourPrecipitationComponentViewModel);
  v10 = &v9[*(int *)(HourPrecipitationComponentView + 20)];
  *(_QWORD *)v10 = swift_getKeyPath(&unk_10099FED0);
  v10[8] = 0;
  v11 = &v9[*(int *)(HourPrecipitationComponentView + 24)];
  *(_QWORD *)v11 = swift_getKeyPath(&unk_10099FDC0);
  v11[8] = 0;
  v16 = 0x4050C00000000000;
  v12 = sub_10010FE84();
  ScaledMetric.init(wrappedValue:)(&v16, &type metadata for CGFloat, v12);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v13 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v13, 0);
  v14 = sub_1000BA294(&qword_100BE32B0);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v14 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v9, a2, type metadata accessor for NextHourPrecipitationComponentView);
}

uint64_t sub_10042FF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  sub_100080C0C(a1, a3, type metadata accessor for NotificationsOptInComponentViewModel);
  v5 = *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 28);
  v6 = type metadata accessor for NotificationsOptInComponentView(0);
  v7 = *(_OWORD *)(a2 + v5);
  *(_OWORD *)(a3 + *(int *)(v6 + 20)) = v7;
  return swift_unknownObjectRetain(v7);
}

uint64_t sub_10042FF60@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 28));
  *a2 = v3;
  return swift_unknownObjectRetain(v3);
}

void sub_10042FF98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PressureComponentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for PressureComponentViewModel);
  v10 = &v9[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = swift_getKeyPath(&unk_10099FDE8);
  v11 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v12 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v12, 0);
  v13 = sub_1000BA294(&qword_100BE32D0);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v13 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v9, a2, type metadata accessor for PressureComponentView);
}

void sub_1004300F4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (int *)type metadata accessor for PrecipitationTotalComponentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v9, a1, 0x60uLL);
  v10 = &v9[v7[5]];
  *(_QWORD *)v10 = swift_getKeyPath(&unk_10099FDE8);
  v11 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  v12 = &v9[v7[6]];
  *(_QWORD *)v12 = swift_getKeyPath(&unk_10099FED0);
  v12[8] = 0;
  v13 = &v9[v7[7]];
  *(_QWORD *)v13 = swift_getKeyPath(&unk_10099FD38);
  v13[8] = 0;
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v14 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v14, 0);
  v15 = sub_1000BA294(&qword_100BE32E0);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v15 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_100080C0C((uint64_t)v9, a2, type metadata accessor for PrecipitationTotalComponentView);
  sub_100016458(a1);
  sub_100441DDC((uint64_t)v9, type metadata accessor for PrecipitationTotalComponentView);
}

__n128 sub_100430298@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[2];
  char v17;
  __int128 v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v15 = *(_OWORD *)(a2 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 28));
  swift_unknownObjectRetain(v15);
  sub_10016F238((uint64_t)v16);
  v5 = v16[0];
  v6 = v16[1];
  v7 = v17;
  v13 = v19;
  v14 = v18;
  v8 = v20;
  v9 = v21;
  v10 = type metadata accessor for ReportWeatherTipViewFactory();
  v11 = swift_allocObject(v10, 16, 7);
  *(_BYTE *)a3 = a1;
  *(_OWORD *)(a3 + 8) = v15;
  *(_QWORD *)(a3 + 24) = v5;
  *(_QWORD *)(a3 + 32) = v6;
  *(_BYTE *)(a3 + 40) = v7;
  result = v13;
  *(_OWORD *)(a3 + 48) = v14;
  *(__n128 *)(a3 + 64) = v13;
  *(_QWORD *)(a3 + 80) = v8;
  *(_QWORD *)(a3 + 88) = v9;
  *(_QWORD *)(a3 + 96) = v11;
  return result;
}

void sub_100430354(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for SevereAlertComponentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for SevereAlertComponentViewModel);
  v10 = &v9[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = swift_getKeyPath(&unk_1009A09F8);
  v10[8] = 0;
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v11 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v11, 0);
  v12 = sub_1000BA294(&qword_100BE32F8);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v12 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v9, a2, type metadata accessor for SevereAlertComponentView);
}

void sub_100430498(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (int *)type metadata accessor for SunriseSunsetComponentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SunriseSunsetViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  v11 = &v9[v7[5]];
  *(_QWORD *)v11 = swift_getKeyPath(&unk_10099FDE8);
  v12 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v11, v12, 0);
  v13 = &v9[v7[6]];
  *(_QWORD *)v13 = swift_getKeyPath(&unk_10099FDC0);
  v13[8] = 0;
  v14 = &v9[v7[7]];
  *(_QWORD *)v14 = swift_getKeyPath(&unk_10099FD38);
  v14[8] = 0;
  v15 = &v9[v7[8]];
  *(_QWORD *)v15 = swift_getKeyPath(&unk_10099FED0);
  v15[8] = 0;
  v16 = &v9[v7[9]];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_10099FE78);
  v16[8] = 0;
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v17 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v17, 0);
  v18 = sub_1000BA294(&qword_100BE3308);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v18 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v9, a2, type metadata accessor for SunriseSunsetComponentView);
}

void sub_100430670(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1000BA294(&qword_100BD8F08);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1000BA294(&qword_100BCD380);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (int *)type metadata accessor for AveragesComponentView(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = swift_getKeyPath(&unk_1009A0A28);
  v16 = sub_1000BA294(&qword_100BC68C8);
  swift_storeEnumTagMultiPayload(v12, v16, 0);
  *v9 = swift_getKeyPath(&unk_1009A0A88);
  v17 = sub_1000BA294(&qword_100BC2990);
  swift_storeEnumTagMultiPayload(v9, v17, 0);
  memcpy(v15, a1, 0xD0uLL);
  sub_1001A7244((uint64_t)v12, (uint64_t)&v15[v13[5]], &qword_100BCD380);
  v18 = &v15[v13[6]];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_10099FE78);
  v18[8] = 0;
  v19 = &v15[v13[7]];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_10099FED0);
  v19[8] = 0;
  sub_1001A7244((uint64_t)v9, (uint64_t)&v15[v13[8]], &qword_100BD8F08);
  v20 = &v15[v13[9]];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_10099FD38);
  v20[8] = 0;
  v21 = &v15[v13[10]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_1009A03C0);
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  v21[72] = 0;
  sub_100025C0C(a1);
  Text.Measurements.init()(v22);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v23 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v23, 0);
  v24 = sub_1000BA294(&qword_100BE3318);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v24 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v15, a2, type metadata accessor for AveragesComponentView);
}

void sub_10043092C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (int *)type metadata accessor for UVIndexComponentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for UVIndexComponentViewModel);
  v10 = &v9[v7[5]];
  *(_QWORD *)v10 = swift_getKeyPath(&unk_1009A09F8);
  v10[8] = 0;
  v11 = &v9[v7[6]];
  *(_QWORD *)v11 = swift_getKeyPath(&unk_10099FED0);
  v11[8] = 0;
  v12 = &v9[v7[7]];
  *(_QWORD *)v12 = swift_getKeyPath(&unk_10099FD38);
  v12[8] = 0;
  v13 = &v9[v7[8]];
  *(_QWORD *)v13 = swift_getKeyPath(&unk_10099FDE8);
  v14 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v13, v14, 0);
  v18 = 0x3FF0000000000000;
  v19 = 0x4010000000000000;
  v15 = sub_10010D1D0();
  ScaledValue.init(wrappedValue:step:)(&v19, &v18, &type metadata for Double, v15);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v16 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v16, 0);
  v17 = sub_1000BA294(&qword_100BE3328);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v17 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v9, a2, type metadata accessor for UVIndexComponentView);
}

void sub_100430B14(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v4 = *a1;
  v19 = a1[1];
  v20 = v4;
  v5 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 5);
  v7 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  v8 = __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  v13 = *a1;
  v22 = a1[1];
  v23 = v13;
  v21 = a1[2];
  KeyPath = swift_getKeyPath(&unk_10099FED0);
  v15 = swift_getKeyPath(&unk_10099FD38);
  *v10 = swift_getKeyPath(&unk_1009A0280);
  v16 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v10, v16, 0);
  sub_10007C75C((uint64_t)v10, (uint64_t)v12, type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  v17 = sub_1000BA294(&qword_100BE3338);
  sub_100080C0C((uint64_t)v12, a2 + *(int *)(v17 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  v18 = v19;
  *(_OWORD *)a2 = v20;
  *(_OWORD *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = KeyPath;
  *(_BYTE *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = v15;
  *(_BYTE *)(a2 + 72) = 0;
  sub_1002BDF74((uint64_t)&v23);
  sub_1002BDF74((uint64_t)&v22);
  sub_1002BDF74((uint64_t)&v21);
  sub_100441DDC((uint64_t)v12, type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
}

void sub_100430C8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for LocationComponentContainerContentAccessibilityModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for WindComponentViewModel(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WindComponentView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, type metadata accessor for WindComponentViewModel);
  *(_QWORD *)v12 = swift_getKeyPath(&unk_1009A0AB8);
  v12[8] = 0;
  *((_QWORD *)v12 + 2) = swift_getKeyPath(&unk_1009A0AF8);
  v12[24] = 0;
  sub_10007C75C((uint64_t)v9, (uint64_t)&v12[*(int *)(v10 + 24)], type metadata accessor for WindComponentViewModel);
  *v6 = swift_getKeyPath(&unk_1009A0280);
  v13 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v6, v13, 0);
  v14 = sub_1000BA294(&qword_100BE3348);
  sub_10007C75C((uint64_t)v6, a2 + *(int *)(v14 + 36), type metadata accessor for LocationComponentContainerContentAccessibilityModifier);
  sub_10007C75C((uint64_t)v12, a2, type metadata accessor for WindComponentView);
}

void sub_100430E30(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3340);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2B58);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100435660(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2B58);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2B58);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2B68);
    v29 = sub_100450BB8();
    sub_10007AB60((uint64_t)&unk_100BE2B60);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2B58);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100435660(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2B68);
    v33 = sub_100450BB8();
    sub_10007AB60((uint64_t)&unk_100BE2B60);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_1004311CC(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3330);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2B00);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100435A0C(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2B00);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2B00);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2B10);
    v29 = sub_100450988();
    sub_10007AB60((uint64_t)&unk_100BE2B08);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2B00);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100435A0C(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2B10);
    v33 = sub_100450988();
    sub_10007AB60((uint64_t)&unk_100BE2B08);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100431568(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3320);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2C10);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100435DB8(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2C10);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2C10);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2C20);
    v29 = sub_100451084();
    sub_10007AB60((uint64_t)&unk_100BE2C18);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2C10);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100435DB8(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2C20);
    v33 = sub_100451084();
    sub_10007AB60((uint64_t)&unk_100BE2C18);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100431904(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3310);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2BB8);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100436164(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2BB8);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2BB8);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2BC8);
    v29 = sub_100450E54();
    sub_10007AB60((uint64_t)&unk_100BE2BC0);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2BB8);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100436164(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2BC8);
    v33 = sub_100450E54();
    sub_10007AB60((uint64_t)&unk_100BE2BC0);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100431CA0(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3300);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE3210);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100436510(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE3210);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE3210);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE3220);
    v29 = sub_100453ACC();
    sub_10007AB60((uint64_t)&unk_100BE3218);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE3210);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100436510(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE3220);
    v33 = sub_100453ACC();
    sub_10007AB60((uint64_t)&unk_100BE3218);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_10043203C(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32F0);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE31B8);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_1004368BC(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE31B8);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE31B8);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE31C8);
    v29 = sub_10045389C();
    sub_10007AB60((uint64_t)&unk_100BE31C0);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE31B8);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_1004368BC(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE31C8);
    v33 = sub_10045389C();
    sub_10007AB60((uint64_t)&unk_100BE31C0);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_1004323D8(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32E8);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE3158);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100436C68(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE3158);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE3158);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE3168);
    v29 = sub_100453600();
    sub_10007AB60((uint64_t)&unk_100BE3160);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE3158);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100436C68(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE3168);
    v33 = sub_100453600();
    sub_10007AB60((uint64_t)&unk_100BE3160);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100432774(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32D8);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE3100);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100437014(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE3100);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE3100);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE3110);
    v29 = sub_1004533D0();
    sub_10007AB60((uint64_t)&unk_100BE3108);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE3100);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100437014(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE3110);
    v33 = sub_1004533D0();
    sub_10007AB60((uint64_t)&unk_100BE3108);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100432B10(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32C8);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE3098);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_1004373C0(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE3098);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE3098);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE30A8);
    v29 = sub_100453098();
    sub_10007AB60((uint64_t)&unk_100BE30A0);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE3098);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_1004373C0(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE30A8);
    v33 = sub_100453098();
    sub_10007AB60((uint64_t)&unk_100BE30A0);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100432EAC(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32C0);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE3040);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_10043776C(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE3040);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE3040);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE3050);
    v29 = sub_100452E68();
    sub_10007AB60((uint64_t)&unk_100BE3048);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE3040);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_10043776C(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE3050);
    v33 = sub_100452E68();
    sub_10007AB60((uint64_t)&unk_100BE3048);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100433248(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32B8);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2FE0);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100437B18(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2FE0);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2FE0);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2FF0);
    v29 = sub_100452BA4();
    sub_10007AB60((uint64_t)&unk_100BE2FE8);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2FE0);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100437B18(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2FF0);
    v33 = sub_100452BA4();
    sub_10007AB60((uint64_t)&unk_100BE2FE8);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_1004335E4(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32A8);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2F88);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100437EC4(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2F88);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2F88);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2F98);
    v29 = sub_100452974();
    sub_10007AB60((uint64_t)&unk_100BE2F90);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2F88);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100437EC4(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2F98);
    v33 = sub_100452974();
    sub_10007AB60((uint64_t)&unk_100BE2F90);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100433980(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE32A0);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2F18);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100438270(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2F18);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2F18);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2F28);
    v29 = sub_1004525D0();
    sub_10007AB60((uint64_t)&unk_100BE2F20);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2F18);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100438270(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2F28);
    v33 = sub_1004525D0();
    sub_10007AB60((uint64_t)&unk_100BE2F20);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100433D1C(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3290);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2EC0);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_10043861C(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2EC0);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2EC0);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2ED0);
    v29 = sub_1004523A0();
    sub_10007AB60((uint64_t)&unk_100BE2EC8);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2EC0);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_10043861C(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2ED0);
    v33 = sub_1004523A0();
    sub_10007AB60((uint64_t)&unk_100BE2EC8);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_1004340B8(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3280);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2E60);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_1004389C8(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2E60);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2E60);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2E70);
    v29 = sub_100452104();
    sub_10007AB60((uint64_t)&unk_100BE2E68);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2E60);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_1004389C8(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2E70);
    v33 = sub_100452104();
    sub_10007AB60((uint64_t)&unk_100BE2E68);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100434454(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3270);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2E08);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100438D74(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2E08);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2E08);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2E18);
    v29 = sub_100451ED4();
    sub_10007AB60((uint64_t)&unk_100BE2E10);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2E08);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100438D74(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2E18);
    v33 = sub_100451ED4();
    sub_10007AB60((uint64_t)&unk_100BE2E10);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_1004347F0(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3268);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2DA0);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100439120(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2DA0);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2DA0);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2DB0);
    v29 = sub_100451BCC();
    sub_10007AB60((uint64_t)&unk_100BE2DA8);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2DA0);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100439120(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2DB0);
    v33 = sub_100451BCC();
    sub_10007AB60((uint64_t)&unk_100BE2DA8);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100434B8C(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3258);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2D48);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_1004394CC(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2D48);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2D48);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2D58);
    v29 = sub_10045199C();
    sub_10007AB60((uint64_t)&unk_100BE2D50);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2D48);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_1004394CC(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2D58);
    v33 = sub_10045199C();
    sub_10007AB60((uint64_t)&unk_100BE2D50);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100434F28(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3250);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2CE8);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100439878(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2CE8);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2CE8);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2CF8);
    v29 = sub_100451700();
    sub_10007AB60((uint64_t)&unk_100BE2CF0);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2CE8);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100439878(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2CF8);
    v33 = sub_100451700();
    sub_10007AB60((uint64_t)&unk_100BE2CF0);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_1004352C4(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE v47[232];
  _BYTE v48[232];

  v37 = a3;
  v38 = a4;
  v41 = a5;
  v36 = a2 & 1;
  v39 = sub_1000BA294(&qword_100BE3230);
  __chkstk_darwin(v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1000BA294(&qword_100BE2C90);
  v11 = __chkstk_darwin(v40);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v35[-v14];
  v16 = *(_QWORD *)a1;
  v17 = *(_BYTE *)(a1 + 8);
  sub_10008D47C(*(_QWORD *)a1, v17);
  sub_100109B54();
  v19 = v18;
  v20 = sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
  {
    v21 = static HorizontalAlignment.leading.getter(v20);
    sub_100439C24(v36, v37, v38, a1, (uint64_t)v47);
    v46 = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *v10 = swift_getKeyPath(&unk_1009A0280);
    v22 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v10, v22, 0);
    v23 = (char *)v10 + *(int *)(v8 + 20);
    *(_QWORD *)v23 = swift_getKeyPath(&unk_1009A02A8);
    v23[8] = 0;
    v24 = (char *)v10 + *(int *)(v8 + 24);
    memset(v42, 0, sizeof(v42));
    State.init(wrappedValue:)(v42, &type metadata for RowModifier.RowGeometry);
    v25 = v44;
    v26 = v45;
    *(_OWORD *)v24 = v43;
    *((_QWORD *)v24 + 2) = v25;
    *((_QWORD *)v24 + 3) = v26;
    v27 = v40;
    sub_100080C0C((uint64_t)v10, (uint64_t)&v13[*(int *)(v40 + 36)], type metadata accessor for RowModifier);
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v48, 0xE8uLL);
    sub_100441DDC((uint64_t)v10, type metadata accessor for RowModifier);
    sub_1001A7244((uint64_t)v13, (uint64_t)v15, &qword_100BE2C90);
    sub_100037768((uint64_t)v15, (uint64_t)v7, &qword_100BE2C90);
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    v28 = sub_1000BA294(&qword_100BE2CA0);
    v29 = sub_1004514D0();
    sub_10007AB60((uint64_t)&unk_100BE2C98);
    _ConditionalContent<>.init(storage:)(v7, v27, v28, v29, v30);
    sub_100021A14((uint64_t)v15, &qword_100BE2C90);
  }
  else
  {
    v31 = static HorizontalAlignment.leading.getter(v20);
    sub_100439C24(v36, v37, v38, a1, (uint64_t)v47);
    LOBYTE(v43) = 0;
    memcpy(&v48[7], v47, 0xE1uLL);
    *(_QWORD *)v7 = v31;
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v48, 0xE8uLL);
    swift_storeEnumTagMultiPayload(v7, v39, 1);
    v32 = sub_1000BA294(&qword_100BE2CA0);
    v33 = sub_1004514D0();
    sub_10007AB60((uint64_t)&unk_100BE2C98);
    _ConditionalContent<>.init(storage:)(v7, v40, v32, v33, v34);
  }
}

void sub_100435660(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B748C8, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100435A0C(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B748A0, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100435DB8(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74878, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100436164(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74850, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100436510(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74828, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_1004368BC(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74800, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100436C68(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B747D8, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100455CA4, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100437014(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B747B0, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_1004373C0(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74788, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_10043776C(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74760, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100455C9C, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100437B18(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74738, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100437EC4(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74710, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100438270(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B746E8, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125664, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_10043861C(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B746C0, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_1004389C8(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74698, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100438D74(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74670, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100439120(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74648, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_1004394CC(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B74620, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100439878(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B745F8, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

void sub_100439C24(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[25];
  char v45;
  _BYTE v46[216];
  uint64_t __dst[18];
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD __src[18];

  v10 = swift_allocObject(&unk_100B745D0, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = type metadata accessor for WireframeContentManager(0);
  sub_10007A100((uint64_t)&unk_100BE3238);
  v13 = v12;
  swift_retain();
  v14 = Environment.init<A>(_:)(v11, v11, v13);
  LOBYTE(v11) = v15;
  v16 = static Alignment.center.getter(v14);
  sub_100946258(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v16, v17, v14, v11 & 1 | ((a1 & 1) << 8), sub_100125660, v10);
  swift_release(v10);
  swift_release(v14);
  v18 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  v19 = (unsigned __int8 *)(v18 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 24));
  v20 = *v19;
  if (v19[1] != 1)
  {
    v27 = static Edge.Set.leading.getter();
    v28 = static Edge.Set.trailing.getter();
    v29 = Edge.Set.init(rawValue:)(0);
    v30 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
      v29 = Edge.Set.init(rawValue:)(v29 | v27);
    v31 = Edge.Set.init(rawValue:)(v29);
    if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
      LODWORD(v29) = Edge.Set.init(rawValue:)(v29 | v28);
    v26 = Edge.Set.init(rawValue:)(v20) & v29;
    goto LABEL_13;
  }
  if (v20 >= 2)
  {
    v26 = 0;
    goto LABEL_13;
  }
  v21 = static Edge.Set.leading.getter();
  v22 = static Edge.Set.trailing.getter();
  v23 = Edge.Set.init(rawValue:)(0);
  v24 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    v23 = Edge.Set.init(rawValue:)(v23 | v21);
  v25 = Edge.Set.init(rawValue:)(v23);
  if (Edge.Set.init(rawValue:)(v25 & v22) != v22)
  {
    v26 = v23 | v22;
LABEL_13:
    LOBYTE(v23) = Edge.Set.init(rawValue:)(v26);
  }
  v32 = *(_QWORD *)(a4 + 16);
  v33 = *(_BYTE *)(a4 + 24);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  if ((v35 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v36 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v36 = &qword_100CAE538;
  }
  v37 = EdgeInsets.init(_all:)(*(double *)v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v44, __src, 0x90uLL);
  LOBYTE(v44[18]) = v23;
  *(double *)&v44[19] = v37;
  v44[20] = v39;
  v44[21] = v41;
  v44[22] = v43;
  LOBYTE(v44[23]) = 0;
  v44[24] = 0x3FF0000000000000;
  v46[208] = 0;
  memcpy(&v46[7], v44, 0xC8uLL);
  v45 = 0;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v46, 0xCFuLL);
  *(_QWORD *)(a5 + 216) = 0;
  *(_BYTE *)(a5 + 224) = 0;
  v48 = v23;
  v49 = v37;
  v50 = v39;
  v51 = v41;
  v52 = v43;
  v53 = 0;
  v54 = 0x3FF0000000000000;
  sub_100455CB4((uint64_t)v44);
  sub_100455CE0(__dst);
}

__n128 sub_100439FD0@<Q0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  char v3;
  __n128 result;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;
  __n128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  a1(&v10);
  v3 = v13;
  result = v14;
  v5 = v15;
  v6 = v16;
  v8 = v11;
  v7 = v12;
  v9 = v17;
  *(_BYTE *)a2 = v10;
  *(_OWORD *)(a2 + 8) = v8;
  *(_OWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 40) = v3;
  *(__n128 *)(a2 + 48) = result;
  *(_OWORD *)(a2 + 64) = v5;
  *(_QWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 88) = v9;
  return result;
}

uint64_t sub_10043A038(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  return v2;
}

double sub_10043A068()
{
  double v1;

  sub_10044013C();
  EnvironmentValues.subscript.getter(&_s63LocationComponentContainerBackgroundPinningOffsetEnvironmentKeyVN, &_s63LocationComponentContainerBackgroundPinningOffsetEnvironmentKeyVN);
  return v1;
}

uint64_t sub_10043A0A0(double a1)
{
  double v2;

  v2 = a1;
  sub_10044013C();
  return EnvironmentValues.subscript.setter(&v2, &_s63LocationComponentContainerBackgroundPinningOffsetEnvironmentKeyVN, &_s63LocationComponentContainerBackgroundPinningOffsetEnvironmentKeyVN);
}

double sub_10043A0D8()
{
  return 0.0;
}

void sub_10043A0E0(double *a1@<X8>)
{
  *a1 = sub_10043A0D8();
}

void sub_10043A104(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v13 = sub_1000BA294(&qword_100BE2310);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100079FBC();
  KeyPath = swift_getKeyPath(&unk_1009A02A8);
  if ((a2 & 1) == 0)
  {
    v16 = a4 & 1;
    sub_10008D47C(a3, v16);
    sub_100109B54();
    v18 = v17;
    sub_1000B15F8(a3, v16);
    if ((v18 & 1) != 0)
      a6 = 0.0;
  }
  v19 = sub_1000BA294(&qword_100BE2318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v6, a1, v19);
  v20 = v6 + *(int *)(v13 + 36);
  *(_QWORD *)v20 = KeyPath;
  *(double *)(v20 + 8) = a6;
  sub_1001A7244(v6, a5, &qword_100BE2310);
}

void sub_10043A210(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10043A104(a1, *(_BYTE *)v2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), a2, *(double *)(v2 + 8));
}

void sub_10043A224(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v36 = a2;
  v35 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v35);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocationComponentContainerBackgroundPaddingModifier(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BE3420);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1000BA294(&qword_100BE3428);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE3430);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000BA294(&qword_100BE3438);
  v17 = __chkstk_darwin(v34);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v33 - v21;
  *v10 = static Alignment.top.getter(v20);
  v10[1] = v23;
  v24 = sub_1000BA294(&qword_100BE3440);
  sub_10043A594(a1, (uint64_t)v10 + *(int *)(v24 + 44));
  *v7 = swift_getKeyPath(&unk_1009A0280);
  v25 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v7, v25, 0);
  sub_10007C75C((uint64_t)v7, (uint64_t)&v13[*(int *)(v11 + 36)], type metadata accessor for LocationComponentContainerBackgroundPaddingModifier);
  sub_1001A7244((uint64_t)v10, (uint64_t)v13, &qword_100BE3420);
  v26 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  sub_1007A5F94(v26);
  v27 = *(_QWORD *)&v4[*(int *)(v35 + 20)];
  sub_100441DDC((uint64_t)v4, type metadata accessor for LocationComponentHeaderMetrics);
  static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(0, 1, v27, 0);
  sub_100037768((uint64_t)v13, (uint64_t)v16, &qword_100BE3428);
  v29 = &v16[*(int *)(v14 + 36)];
  v30 = v38;
  *(_OWORD *)v29 = v37;
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v39;
  sub_100021A14((uint64_t)v13, &qword_100BE3428);
  sub_100037768((uint64_t)v16, (uint64_t)v19, &qword_100BE3430);
  v19[*(int *)(v34 + 36)] = 1;
  sub_100021A14((uint64_t)v16, &qword_100BE3430);
  sub_1001A7244((uint64_t)v19, (uint64_t)v22, &qword_100BE3438);
  sub_100037768((uint64_t)v22, (uint64_t)v19, &qword_100BE3438);
  v31 = v36;
  sub_100037768((uint64_t)v19, v36, &qword_100BE3438);
  v32 = v31 + *(int *)(sub_1000BA294(&qword_100BE3448) + 48);
  *(_QWORD *)v32 = 0;
  *(_BYTE *)(v32 + 8) = 1;
  sub_100021A14((uint64_t)v22, &qword_100BE3438);
  sub_100021A14((uint64_t)v19, &qword_100BE3438);
}

void sub_10043A594(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int EnumCaseMultiPayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int16 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  char v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _OWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t KeyPath;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned __int8 v162;
  uint64_t v163;
  unsigned __int8 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _OWORD v168[3];
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;

  v157 = a2;
  v3 = sub_1000BA294(&qword_100BE3450);
  v4 = __chkstk_darwin(v3);
  v158 = (uint64_t)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v156 = (char *)&v130 - v6;
  v155 = sub_1000BA294(&qword_100BE3458);
  v7 = __chkstk_darwin(v155);
  v142 = (uint64_t)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v143 = (uint64_t)&v130 - v9;
  v151 = sub_1000BA294(&qword_100BE3460);
  __chkstk_darwin(v151);
  v153 = (uint64_t)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = type metadata accessor for LocationComponentViewModel(0);
  v11 = __chkstk_darwin(KeyPath);
  v135 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v134 = (uint64_t)&v130 - v13;
  v132 = type metadata accessor for LocationComponentHeaderViewModel(0);
  v14 = __chkstk_darwin(v132);
  v131 = (_OWORD *)((char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v14);
  v133 = (uint64_t)&v130 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v130 - v18;
  v20 = type metadata accessor for LocationComponentHeaderMetrics(0);
  v21 = __chkstk_darwin(v20);
  v150 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v130 - v24;
  v26 = __chkstk_darwin(v23);
  v137 = (uint64_t)&v130 - v27;
  __chkstk_darwin(v26);
  v29 = (char *)&v130 - v28;
  v30 = type metadata accessor for LocationComponentHeaderView(0);
  v31 = __chkstk_darwin(v30);
  v146 = (uint64_t)&v130 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v145 = (uint64_t)&v130 - v33;
  v148 = sub_1000BA294(&qword_100BE3468);
  v34 = __chkstk_darwin(v148);
  v36 = (char *)&v130 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v140 = (uint64_t)&v130 - v37;
  v136 = sub_1000BA294(&qword_100BE3470);
  __chkstk_darwin(v136);
  v139 = (uint64_t)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1000BA294(&qword_100BE3478);
  v39 = __chkstk_darwin(v149);
  v138 = (uint64_t)&v130 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v141 = (uint64_t)&v130 - v41;
  v42 = sub_1000BA294(&qword_100BE3480);
  v43 = __chkstk_darwin(v42);
  v154 = (uint64_t)&v130 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v152 = (char *)&v130 - v45;
  v46 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  v47 = a1 + *(int *)(v46 + 32);
  v48 = *(_QWORD *)v47;
  v144 = v47;
  v49 = *(_BYTE *)(v47 + 8);
  sub_10008D47C(v48, v49);
  sub_100109B54();
  v51 = v50;
  v52 = sub_1000B15F8(v48, v49);
  v159 = v46;
  v160 = a1;
  if ((v51 & 1) != 0)
  {
    sub_1007A5F94(v52);
    if (v29[*(int *)(v20 + 32)] == 1)
      sub_100258630();
    else
      sub_100080C0C((uint64_t)v29, (uint64_t)v19, type metadata accessor for LocationComponentHeaderViewModel);
    sub_100441DDC((uint64_t)v29, type metadata accessor for LocationComponentHeaderMetrics);
    sub_10003FDBC((uint64_t)v19, v145);
    v54 = v134;
    sub_100080C0C(v160 + *(int *)(v159 + 28), v134, type metadata accessor for LocationComponentViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v54, KeyPath);
    sub_100441DDC(v54, type metadata accessor for LocationComponentViewModel);
    if (EnumCaseMultiPayload == 7)
    {
      KeyPath = swift_getKeyPath(&unk_1009A0AF8);
      v57 = v137;
      sub_1007A5F94(KeyPath);
      v58 = *(_QWORD *)(v57 + *(int *)(v20 + 20));
      sub_100441DDC(v57, type metadata accessor for LocationComponentHeaderMetrics);
      static Alignment.center.getter(v59);
      v56 = _FrameLayout.init(width:height:alignment:)(0, 1, v58, 0);
      v135 = 0;
      v146 = v161;
      v143 = v162;
      v142 = v163;
      v137 = v164;
      v60 = 256;
      v61 = 0x4030000000000000;
      v62 = 3;
      v63 = v165;
      v64 = v166;
    }
    else
    {
      KeyPath = 0;
      v146 = 0;
      v143 = 0;
      v142 = 0;
      v137 = 0;
      v63 = 0;
      v64 = 0;
      v61 = 0;
      v62 = 0;
      v60 = 0;
      v135 = 255;
    }
    v76 = static Alignment.center.getter(v56);
    v78 = v77;
    v79 = v145;
    v80 = v140;
    sub_100080C0C(v145, v140, type metadata accessor for LocationComponentHeaderView);
    v81 = v80 + *(int *)(v148 + 36);
    v82 = v135;
    *(_QWORD *)v81 = KeyPath;
    *(_QWORD *)(v81 + 8) = v82;
    v83 = v143;
    *(_QWORD *)(v81 + 16) = v146;
    *(_QWORD *)(v81 + 24) = v83;
    v84 = v137;
    *(_QWORD *)(v81 + 32) = v142;
    *(_QWORD *)(v81 + 40) = v84;
    *(_QWORD *)(v81 + 48) = v63;
    *(_QWORD *)(v81 + 56) = v64;
    *(_QWORD *)(v81 + 64) = v61;
    *(_QWORD *)(v81 + 72) = v62;
    *(_WORD *)(v81 + 80) = v60;
    *(_QWORD *)(v81 + 88) = v76;
    *(_QWORD *)(v81 + 96) = v78;
    sub_100441DDC(v79, type metadata accessor for LocationComponentHeaderView);
    v85 = v139;
    v86 = (char *)(v139 + *(int *)(v136 + 36));
    *(_QWORD *)v86 = swift_getKeyPath(&unk_1009A0280);
    v87 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v86, v87, 0);
    v88 = type metadata accessor for HeaderModifier(0);
    v89 = &v86[*(int *)(v88 + 20)];
    *(_QWORD *)v89 = swift_getKeyPath(&unk_1009A02A8);
    v89[8] = 0;
    v90 = &v86[*(int *)(v88 + 24)];
    v168[0] = xmmword_10098AC50;
    State.init(wrappedValue:)(v168, &type metadata for HeaderModifier.HeaderGeometry);
    v91 = v171;
    *(_OWORD *)v90 = v170;
    *((_QWORD *)v90 + 2) = v91;
    sub_1001A7244(v80, v85, &qword_100BE3468);
    v92 = v138;
    sub_100037768(v85, v138, &qword_100BE3470);
    v93 = v149;
    *(_QWORD *)(v92 + *(int *)(v149 + 36)) = 0x3FF0000000000000;
    sub_100021A14(v85, &qword_100BE3470);
    v94 = v141;
    sub_1001A7244(v92, v141, &qword_100BE3478);
    v95 = v153;
    sub_100037768(v94, v153, &qword_100BE3478);
    swift_storeEnumTagMultiPayload(v95, v151, 0);
    v96 = sub_100455F9C();
    v97 = sub_1001568AC();
    v98 = (uint64_t)v152;
    _ConditionalContent<>.init(storage:)(v95, v93, v155, v96, v97);
    sub_100021A14(v94, &qword_100BE3478);
  }
  else
  {
    sub_1007A5F94(v52);
    v53 = v133;
    if (v25[*(int *)(v20 + 32)] == 1)
      sub_100258630();
    else
      sub_100080C0C((uint64_t)v25, v133, type metadata accessor for LocationComponentHeaderViewModel);
    sub_100441DDC((uint64_t)v25, type metadata accessor for LocationComponentHeaderMetrics);
    sub_10003FDBC(v53, v146);
    v65 = v135;
    sub_100080C0C(v160 + *(int *)(v159 + 28), v135, type metadata accessor for LocationComponentViewModel);
    v66 = swift_getEnumCaseMultiPayload(v65, KeyPath);
    sub_100441DDC(v65, type metadata accessor for LocationComponentViewModel);
    if (v66 == 7)
    {
      KeyPath = swift_getKeyPath(&unk_1009A0AF8);
      v68 = v137;
      sub_1007A5F94(KeyPath);
      v69 = *(_QWORD *)(v68 + *(int *)(v20 + 20));
      sub_100441DDC(v68, type metadata accessor for LocationComponentHeaderMetrics);
      static Alignment.center.getter(v70);
      v67 = _FrameLayout.init(width:height:alignment:)(0, 1, v69, 0);
      v138 = 0;
      v145 = v161;
      v141 = v162;
      v140 = v163;
      v139 = v164;
      v71 = 256;
      v72 = 0x4030000000000000;
      v73 = 3;
      v74 = v165;
      v75 = v166;
    }
    else
    {
      KeyPath = 0;
      v145 = 0;
      v141 = 0;
      v140 = 0;
      v139 = 0;
      v74 = 0;
      v75 = 0;
      v72 = 0;
      v73 = 0;
      v71 = 0;
      v138 = 255;
    }
    v100 = static Alignment.center.getter(v67);
    v102 = v101;
    v103 = v146;
    sub_100080C0C(v146, (uint64_t)v36, type metadata accessor for LocationComponentHeaderView);
    v104 = &v36[*(int *)(v148 + 36)];
    v105 = v138;
    *(_QWORD *)v104 = KeyPath;
    *((_QWORD *)v104 + 1) = v105;
    v106 = v141;
    *((_QWORD *)v104 + 2) = v145;
    *((_QWORD *)v104 + 3) = v106;
    v107 = v139;
    *((_QWORD *)v104 + 4) = v140;
    *((_QWORD *)v104 + 5) = v107;
    *((_QWORD *)v104 + 6) = v74;
    *((_QWORD *)v104 + 7) = v75;
    *((_QWORD *)v104 + 8) = v72;
    *((_QWORD *)v104 + 9) = v73;
    *((_WORD *)v104 + 40) = v71;
    *((_QWORD *)v104 + 11) = v100;
    *((_QWORD *)v104 + 12) = v102;
    sub_100441DDC(v103, type metadata accessor for LocationComponentHeaderView);
    v108 = v142;
    sub_100037768((uint64_t)v36, v142, &qword_100BE3468);
    v109 = v155;
    *(_QWORD *)(v108 + *(int *)(v155 + 36)) = 0x3FF0000000000000;
    sub_100021A14((uint64_t)v36, &qword_100BE3468);
    v110 = v143;
    sub_1001A7244(v108, v143, &qword_100BE3458);
    v111 = v153;
    sub_100037768(v110, v153, &qword_100BE3458);
    swift_storeEnumTagMultiPayload(v111, v151, 1);
    v112 = sub_100455F9C();
    v113 = sub_1001568AC();
    v98 = (uint64_t)v152;
    _ConditionalContent<>.init(storage:)(v111, v149, v109, v112, v113);
    sub_100021A14(v110, &qword_100BE3458);
  }
  v114 = (uint64_t)v150;
  sub_1007A5F94(v99);
  sub_100095360();
  sub_100441DDC(v114, type metadata accessor for LocationComponentHeaderViewModel);
  sub_1001A7244((uint64_t)&v167, (uint64_t)v168, &qword_100BDAA28);
  v115 = (uint64_t)v156;
  if (!*((_QWORD *)&v168[0] + 1))
    goto LABEL_20;
  v170 = v168[0];
  v171 = v168[1];
  v172 = v168[2];
  v173 = v169;
  v116 = *(_QWORD *)v144;
  v117 = *(_BYTE *)(v144 + 8);
  sub_10008D47C(*(_QWORD *)v144, v117);
  sub_100109B54();
  v119 = v118;
  sub_1000B15F8(v116, v117);
  if ((v119 & 1) == 0)
  {
    sub_100126958(&v167);
LABEL_20:
    v125 = sub_1000BA294(&qword_100BE34C8);
    v123 = v115;
    v124 = 1;
    goto LABEL_21;
  }
  v120 = v171;
  v121 = (uint64_t)v131;
  *v131 = v170;
  *(_OWORD *)(v121 + 16) = v120;
  *(_OWORD *)(v121 + 32) = v172;
  *(_QWORD *)(v121 + 48) = v173;
  swift_storeEnumTagMultiPayload(v121, v132, 0);
  sub_10003FDBC(v121, v115);
  v122 = sub_1000BA294(&qword_100BE34C8);
  sub_10043B3FC(v115 + *(int *)(v122 + 36));
  v123 = v115;
  v124 = 0;
  v125 = v122;
LABEL_21:
  _s7Weather24LocationCompositionStateOwst_0(v123, v124, 1, v125);
  v126 = v154;
  sub_100037768(v98, v154, &qword_100BE3480);
  v127 = v158;
  sub_100037768(v115, v158, &qword_100BE3450);
  v128 = v157;
  sub_100037768(v126, v157, &qword_100BE3480);
  v129 = sub_1000BA294(&qword_100BE34D0);
  sub_100037768(v127, v128 + *(int *)(v129 + 48), &qword_100BE3450);
  sub_100021A14(v115, &qword_100BE3450);
  sub_100021A14(v98, &qword_100BE3480);
  sub_100021A14(v127, &qword_100BE3450);
  sub_100021A14(v126, &qword_100BE3480);
}

double sub_10043B3FC@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)a1 = swift_getKeyPath(&unk_10099FC98);
  *(_BYTE *)(a1 + 8) = 0;
  v2 = (int *)type metadata accessor for PinningHeaderModifier(0);
  v3 = (_QWORD *)(a1 + v2[5]);
  *v3 = swift_getKeyPath(&unk_1009A0280);
  v4 = sub_1000BA294(&qword_100BE21F0);
  swift_storeEnumTagMultiPayload(v3, v4, 0);
  v5 = a1 + v2[6];
  *(_QWORD *)v5 = swift_getKeyPath(&unk_1009A02A8);
  *(_BYTE *)(v5 + 8) = 0;
  v6 = a1 + v2[7];
  v9 = xmmword_10098AC50;
  State.init(wrappedValue:)(&v9, &type metadata for PinningHeaderModifier.PinningHeaderGeometry);
  v7 = v11;
  result = *(double *)&v10;
  *(_OWORD *)v6 = v10;
  *(_QWORD *)(v6 + 16) = v7;
  return result;
}

void sub_10043B4D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;

  v4 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v4);
  v6 = (_OWORD *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1000BA294(&qword_100BDFBE8);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)v6 + *(int *)(v4 + 20);
  v11 = enum case for RoundedCornerStyle.continuous(_:);
  v12 = type metadata accessor for RoundedCornerStyle(0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v19 = static Color.black.getter(v13);
  v20 = a1 + *(int *)(type metadata accessor for LocationComponentContainerBackgroundView(0) + 24);
  v21 = *(_QWORD *)v20;
  LOBYTE(v11) = *(_BYTE *)(v20 + 8);
  sub_10008D47C(*(_QWORD *)v20, v11);
  sub_100109B54();
  v23 = v22;
  sub_1000B15F8(v21, v11);
  v24 = 0.07;
  if ((v23 & 1) == 0)
    v24 = 0.0;
  v25 = Color.opacity(_:)(v24);
  swift_release(v19);
  sub_100080C0C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v9[*(int *)(v7 + 52)] = v25;
  *(_WORD *)&v9[*(int *)(v7 + 56)] = 256;
  sub_100441DDC((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_1001A7244((uint64_t)v9, a2, &qword_100BDFBE8);
}

void sub_10043B680(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  double v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD __src[6];

  v77 = a2;
  v80 = a3;
  v4 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v4);
  v6 = (_OWORD *)((char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1000BA294(&qword_100BE33B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1000BA294(&qword_100BE33B8);
  v10 = __chkstk_darwin(v79);
  v73 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v74 = (uint64_t)&v73 - v12;
  v75 = sub_1000BA294(&qword_100BE33C0);
  __chkstk_darwin(v75);
  v78 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1000BA294(&qword_100BE33C8);
  __chkstk_darwin(v76);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  sub_1007A5F94(v19);
  v20 = &v18[*(int *)(v16 + 28)];
  v21 = *(double *)v20;
  v22 = v20[8];
  sub_100441DDC((uint64_t)v18, type metadata accessor for LocationComponentHeaderMetrics);
  if ((v22 & 1) != 0
    || (v23 = a1 + *(int *)(v19 + 32),
        v24 = *(_QWORD *)v23,
        v25 = *(_BYTE *)(v23 + 8),
        sub_10008D47C(*(_QWORD *)v23, v25),
        sub_100109B54(),
        v27 = v26,
        sub_1000B15F8(v24, v25),
        (v27 & 1) == 0))
  {
    v39 = (char *)v6 + *(int *)(v4 + 20);
    v40 = enum case for RoundedCornerStyle.continuous(_:);
    v41 = type metadata accessor for RoundedCornerStyle(0);
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v39, v40, v41);
    __asm { FMOV            V0.2D, #16.0 }
    *v6 = _Q0;
    v48 = static Color.white.getter(v42);
    v49 = Color.opacity(_:)(0.05);
    swift_release(v48);
    v50 = a1 + *(int *)(v19 + 20);
    v51 = *(_QWORD *)v50;
    LOBYTE(v48) = *(_BYTE *)(v50 + 8);
    sub_10008D47C(*(_QWORD *)v50, v48);
    sub_10006A9A8();
    v53 = v52;
    sub_1000B15F8(v51, v48);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(__src, 0, 0, 1.0 / v53, 10.0, 0.0);
    sub_100080C0C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v54 = &v9[*(int *)(sub_1000BA294(&qword_100BDCBF8) + 36)];
    v55 = __src[1];
    *(_OWORD *)v54 = __src[0];
    *((_OWORD *)v54 + 1) = v55;
    *((_QWORD *)v54 + 4) = *(_QWORD *)&__src[2];
    v56 = sub_1000BA294(&qword_100BDCC00);
    *(_QWORD *)&v9[*(int *)(v56 + 52)] = v49;
    *(_WORD *)&v9[*(int *)(v56 + 56)] = 256;
    v57 = static Alignment.center.getter(v56);
    v59 = v58;
    v60 = (uint64_t *)&v9[*(int *)(sub_1000BA294(&qword_100BDCC08) + 36)];
    *v60 = v57;
    v60[1] = v59;
    sub_100441DDC((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v62 = static Alignment.center.getter(v61);
    v64 = v63;
    v65 = v79;
    v66 = (uint64_t)v73;
    v67 = (uint64_t)&v73[*(int *)(v79 + 36)];
    sub_100037768((uint64_t)v9, v67, &qword_100BE33B0);
    v68 = (uint64_t *)(v67 + *(int *)(sub_1000BA294(&qword_100BE33D0) + 36));
    *v68 = v62;
    v68[1] = v64;
    sub_100037768(v77, v66, &qword_100BE3388);
    sub_100021A14((uint64_t)v9, &qword_100BE33B0);
    v34 = &qword_100BE33B8;
    v69 = v74;
    sub_1001A7244(v66, v74, &qword_100BE33B8);
    v70 = v78;
    sub_100037768(v69, v78, &qword_100BE33B8);
    swift_storeEnumTagMultiPayload(v70, v75, 1);
    v71 = sub_100455D54();
    v72 = sub_100455F04();
    _ConditionalContent<>.init(storage:)(v70, v76, v65, v71, v72);
    v38 = v69;
  }
  else
  {
    v28 = a1 + *(int *)(v19 + 20);
    v29 = *(_QWORD *)v28;
    v30 = *(_BYTE *)(v28 + 8);
    sub_10008D47C(*(_QWORD *)v28, v30);
    sub_10006A9A8();
    v32 = v31;
    sub_1000B15F8(v29, v30);
    sub_10043BBCC((uint64_t)__src, v32, v21);
    sub_100037768(v77, (uint64_t)v15, &qword_100BE3388);
    v33 = v76;
    memcpy(&v15[*(int *)(v76 + 36)], __src, 0x58uLL);
    v34 = &qword_100BE33C8;
    v35 = v78;
    sub_100037768((uint64_t)v15, v78, &qword_100BE33C8);
    swift_storeEnumTagMultiPayload(v35, v75, 0);
    v36 = sub_100455D54();
    v37 = sub_100455F04();
    _ConditionalContent<>.init(storage:)(v35, v33, v79, v36, v37);
    v38 = (uint64_t)v15;
  }
  sub_100021A14(v38, v34);
}

__n128 sub_10043BBCC@<Q0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t KeyPath;
  uint64_t v7;
  __n128 result;
  __int128 v9;
  __int128 v10;
  _OWORD v11[6];
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_1009A02A8);
  memset(v11, 0, 32);
  v11[2] = xmmword_10099F730;
  State.init(wrappedValue:)(v11, &type metadata for BackgroundModifier.BackgroundGeometry);
  v7 = v12;
  result = (__n128)v11[3];
  v9 = v11[4];
  v10 = v11[5];
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 80) = v7;
  return result;
}

void sub_10043BC5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  char v34;
  int EnumCaseMultiPayload;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v49 = a2;
  v2 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v2);
  v4 = &v45[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v45[-v6];
  v8 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v8);
  v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v45[-v12];
  v14 = sub_1000BA294(&qword_100BE3AC8);
  __chkstk_darwin(v14);
  v16 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v48 = sub_1000BA294(&qword_100BE3AD0);
  __chkstk_darwin(v48);
  v18 = &v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = static Edge.Set.top.getter(v19);
  v46 = v20;
  if (qword_100BC1EA0 != -1)
    v20 = swift_once(&qword_100BC1EA0, sub_100129178);
  v21 = *(double *)&qword_100CAE520;
  sub_1007A5F94(v20);
  sub_100080C0C((uint64_t)v13, (uint64_t)v7, type metadata accessor for LocationComponentHeaderViewModel);
  v22 = dbl_1009A1110[(int)swift_getEnumCaseMultiPayload(v7)];
  sub_100441DDC((uint64_t)v7, type metadata accessor for LocationComponentHeaderViewModel);
  sub_100441DDC((uint64_t)v13, type metadata accessor for LocationComponentHeaderMetrics);
  v23 = EdgeInsets.init(_all:)(v21 + v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = sub_1000BA294(&qword_100BE3AD8);
  v31 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v16, v47, v30);
  v32 = (double *)&v16[*(int *)(v14 + 36)];
  *(_BYTE *)v32 = v46;
  v32[1] = v23;
  *((_QWORD *)v32 + 2) = v25;
  *((_QWORD *)v32 + 3) = v27;
  *((_QWORD *)v32 + 4) = v29;
  *((_BYTE *)v32 + 40) = 0;
  v33 = static Edge.Set.bottom.getter(v31);
  v34 = v33;
  sub_1007A5F94(v33);
  sub_100080C0C((uint64_t)v10, (uint64_t)v4, type metadata accessor for LocationComponentHeaderViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4);
  sub_100441DDC((uint64_t)v4, type metadata accessor for LocationComponentHeaderViewModel);
  sub_100441DDC((uint64_t)v10, type metadata accessor for LocationComponentHeaderViewModel);
  v36 = 0.0;
  if (EnumCaseMultiPayload != 1)
  {
    if (qword_100BC1EA8 != -1)
      swift_once(&qword_100BC1EA8, sub_100129168);
    v36 = *(double *)&qword_100CAE528;
  }
  v37 = EdgeInsets.init(_all:)(v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_100037768((uint64_t)v16, (uint64_t)v18, &qword_100BE3AC8);
  v44 = (double *)&v18[*(int *)(v48 + 36)];
  *(_BYTE *)v44 = v34;
  v44[1] = v37;
  *((_QWORD *)v44 + 2) = v39;
  *((_QWORD *)v44 + 3) = v41;
  *((_QWORD *)v44 + 4) = v43;
  *((_BYTE *)v44 + 40) = 0;
  sub_100021A14((uint64_t)v16, &qword_100BE3AC8);
  sub_1001A7244((uint64_t)v18, v49, &qword_100BE3AD0);
}

void sub_10043BFA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a1;
  v37 = sub_1000BA294(&qword_100BE39E8);
  v1 = __chkstk_darwin(v37);
  v36 = (uint64_t)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v38 = (uint64_t)&v33 - v3;
  v4 = type metadata accessor for RoundedRectangle(0);
  v34 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BDFBE8);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1000BA294(&qword_100BE3A90);
  v10 = __chkstk_darwin(v35);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v33 - v13;
  v15 = &v6[*(int *)(v4 + 20)];
  v16 = enum case for RoundedCornerStyle.continuous(_:);
  v17 = type metadata accessor for RoundedCornerStyle(0);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
  v19 = v18(v15, v16, v17);
  __asm { FMOV            V0.2D, #16.0 }
  v33 = _Q0;
  *(_OWORD *)v6 = _Q0;
  v25 = static Color.black.getter(v19);
  sub_100080C0C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v9[*(int *)(v7 + 52)] = v25;
  *(_WORD *)&v9[*(int *)(v7 + 56)] = 256;
  sub_100441DDC((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100037768((uint64_t)v9, (uint64_t)v12, &qword_100BDFBE8);
  *(_QWORD *)&v12[*(int *)(v35 + 36)] = 0x3FD3333333333333;
  sub_100021A14((uint64_t)v9, &qword_100BDFBE8);
  sub_1001A7244((uint64_t)v12, (uint64_t)v14, &qword_100BE3A90);
  v18(&v6[*(int *)(v34 + 20)], v16, v17);
  *(_OWORD *)v6 = v33;
  if (qword_100BC21F0 != -1)
    swift_once(&qword_100BC21F0, sub_1001542A4);
  v26 = type metadata accessor for Material(0);
  v27 = sub_1000AECD4(v26, (uint64_t)qword_100CAED40);
  v28 = v36;
  sub_100080C0C((uint64_t)v6, v36, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v29 = v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v28 + *(int *)(v37 + 52), v27, v26);
  *(_WORD *)(v28 + *(int *)(v29 + 56)) = 256;
  sub_100441DDC((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v30 = v38;
  sub_1001A7244(v28, v38, &qword_100BE39E8);
  sub_100037768((uint64_t)v14, (uint64_t)v12, &qword_100BE3A90);
  sub_100037768(v30, v28, &qword_100BE39E8);
  v31 = v39;
  sub_100037768((uint64_t)v12, v39, &qword_100BE3A90);
  v32 = sub_1000BA294(&qword_100BE3A98);
  sub_100037768(v28, v31 + *(int *)(v32 + 48), &qword_100BE39E8);
  sub_100021A14(v30, &qword_100BE39E8);
  sub_100021A14((uint64_t)v14, &qword_100BE3A90);
  sub_100021A14(v28, &qword_100BE39E8);
  sub_100021A14((uint64_t)v12, &qword_100BE3A90);
}

uint64_t sub_10043C348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t active;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v29;
  uint64_t v30;

  v1 = type metadata accessor for Location.Identifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v29 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BCD780);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BCD680);
  v11 = __chkstk_darwin(v10);
  v30 = (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - v13;
  v15 = type metadata accessor for LocationComponentBackground(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(unsigned __int8 *)(v0 + *(int *)(v16 + 32));
  sub_100080C0C(v0, (uint64_t)v18, v20);
  if (v19 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v14, v18, v1);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v1);
    v21 = *(_QWORD *)&v18[*(int *)(v15 + 20) + 8];
    swift_retain();
    sub_10006BDA4();
    swift_release(v21);
    v22 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_100037768((uint64_t)v14, (uint64_t)v6, &qword_100BCD680);
    sub_1001A7244((uint64_t)v9, v22, &qword_100BCD680);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v1) == 1)
    {
      sub_100021A14((uint64_t)v14, &qword_100BCD680);
      sub_100441DDC((uint64_t)v18, type metadata accessor for LocationComponentBackground);
      if (_s7Weather24LocationCompositionStateOwet_0(v22, 1, v1) == 1)
      {
        sub_100021A14((uint64_t)v6, &qword_100BCD680);
        goto LABEL_6;
      }
    }
    else
    {
      v24 = v30;
      sub_100037768((uint64_t)v6, v30, &qword_100BCD680);
      if (_s7Weather24LocationCompositionStateOwet_0(v22, 1, v1) != 1)
      {
        v25 = v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v29, v22, v1);
        sub_10007A100((uint64_t)&qword_100BC3640);
        v23 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v25, v1, v26);
        v27 = *(void (**)(char *, uint64_t))(v2 + 8);
        v27(v25, v1);
        sub_100021A14((uint64_t)v14, &qword_100BCD680);
        sub_100441DDC((uint64_t)v18, type metadata accessor for LocationComponentBackground);
        v27((char *)v24, v1);
        sub_100021A14((uint64_t)v6, &qword_100BCD680);
        return v23 & 1;
      }
      sub_100021A14((uint64_t)v14, &qword_100BCD680);
      sub_100441DDC((uint64_t)v18, type metadata accessor for LocationComponentBackground);
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v24, v1);
    }
    sub_100021A14((uint64_t)v6, &qword_100BCD780);
    v23 = 0;
    return v23 & 1;
  }
  sub_100441DDC((uint64_t)v18, type metadata accessor for LocationComponentBackground);
LABEL_6:
  v23 = 1;
  return v23 & 1;
}

void sub_10043C6F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a1;
  v2 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v2);
  v4 = (_OWORD *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1000BA294(&qword_100BE3A58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1000BA294(&qword_100BE3A48);
  v9 = __chkstk_darwin(v48);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v46 - v12;
  v46 = sub_1000BA294(&qword_100BE3AA0);
  __chkstk_darwin(v46);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1000BA294(&qword_100BE3A38);
  __chkstk_darwin(v47);
  v17 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for LocationComponentBackground(0);
  v19 = v1 + *(int *)(v18 + 28);
  if ((*(_BYTE *)(v19 + 32) & 1) != 0)
  {
    v20 = sub_1000BA294(&qword_100BE39E8);
    sub_10007AB60((uint64_t)&unk_100BE3A60);
    ForegroundEffectView.init(fallbackContent:)(sub_10043CFB0, 0, v20, v21);
    v22 = (char *)v4 + *(int *)(v2 + 20);
    v23 = enum case for RoundedCornerStyle.continuous(_:);
    v24 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
    __asm { FMOV            V0.2D, #16.0 }
    *v4 = _Q0;
    v30 = v48;
    v31 = (uint64_t)&v11[*(int *)(v48 + 36)];
    sub_100080C0C((uint64_t)v4, v31, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v31 + *(int *)(sub_1000BA294(&qword_100BD3DA8) + 36)) = 256;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
    sub_100441DDC((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v32 = &qword_100BE3A48;
    sub_1001A7244((uint64_t)v11, (uint64_t)v13, &qword_100BE3A48);
    sub_100037768((uint64_t)v13, (uint64_t)v15, &qword_100BE3A48);
    swift_storeEnumTagMultiPayload(v15, v46, 1);
    sub_10007AB60((uint64_t)&unk_100BE3A30);
    v34 = v33;
    v35 = sub_1001587BC();
    _ConditionalContent<>.init(storage:)(v15, v47, v30, v34, v35);
    v36 = (uint64_t)v13;
  }
  else
  {
    v38 = *(double *)(v19 + 16);
    v37 = *(double *)(v19 + 24);
    v40 = *(double *)v19;
    v39 = *(double *)(v19 + 8);
    *v17 = static Alignment.center.getter(v18);
    v17[1] = v41;
    v42 = sub_1000BA294(&qword_100BE3AA8);
    sub_10043CAC0((uint64_t)v17 + *(int *)(v42 + 44), v40, v39, v38, v37);
    v32 = &qword_100BE3A38;
    sub_100037768((uint64_t)v17, (uint64_t)v15, &qword_100BE3A38);
    swift_storeEnumTagMultiPayload(v15, v46, 0);
    sub_10007AB60((uint64_t)&unk_100BE3A30);
    v44 = v43;
    v45 = sub_1001587BC();
    _ConditionalContent<>.init(storage:)(v15, v47, v48, v44, v45);
    v36 = (uint64_t)v17;
  }
  sub_100021A14(v36, v32);
}

void sub_10043CAC0(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t);
  __int128 v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v63 = a1;
  v9 = sub_1000BA294(&qword_100BE3A58);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  __chkstk_darwin(v9);
  v58 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1000BA294(&qword_100BE3A48);
  __chkstk_darwin(v56);
  v59 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1000BA294(&qword_100BE3AB0);
  v12 = __chkstk_darwin(v57);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v62 = (uint64_t)&v50 - v15;
  v16 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BE39E8);
  __chkstk_darwin(v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BE3AB8);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v54 = v16;
  v55 = (uint64_t)&v50 - v26;
  v27 = &v18[*(int *)(v16 + 20)];
  v28 = enum case for RoundedCornerStyle.continuous(_:);
  v29 = type metadata accessor for RoundedCornerStyle(0);
  v30 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104);
  v53 = v28;
  v51 = v30;
  v30(v27, v28, v29);
  __asm { FMOV            V0.2D, #16.0 }
  v52 = _Q0;
  *(_OWORD *)v18 = _Q0;
  if (qword_100BC21F0 != -1)
    swift_once(&qword_100BC21F0, sub_1001542A4);
  v36 = type metadata accessor for Material(0);
  v37 = sub_1000AECD4(v36, (uint64_t)qword_100CAED40);
  sub_100080C0C((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(&v21[*(int *)(v19 + 52)], v37, v36);
  *(_WORD *)&v21[*(int *)(v19 + 56)] = 256;
  sub_100441DDC((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100037768((uint64_t)v21, (uint64_t)v25, &qword_100BE39E8);
  v38 = &v25[*(int *)(v22 + 36)];
  *(double *)v38 = a2;
  *((double *)v38 + 1) = a3;
  *((double *)v38 + 2) = a4;
  *((double *)v38 + 3) = a5;
  v38[32] = 0;
  sub_100021A14((uint64_t)v21, &qword_100BE39E8);
  v39 = v55;
  sub_1001A7244((uint64_t)v25, v55, &qword_100BE3AB8);
  sub_10007AB60((uint64_t)&unk_100BE3A60);
  v40 = v58;
  ForegroundEffectView.init(fallbackContent:)(sub_10043CFB0, 0, v19, v41);
  v51(&v18[*(int *)(v54 + 20)], v53, v29);
  *(_OWORD *)v18 = v52;
  v42 = (uint64_t)v59;
  v43 = (uint64_t)&v59[*(int *)(v56 + 36)];
  sub_100080C0C((uint64_t)v18, v43, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v43 + *(int *)(sub_1000BA294(&qword_100BD3DA8) + 36)) = 256;
  v45 = v60;
  v44 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v42, v40, v61);
  sub_100441DDC((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v44);
  sub_100037768(v42, (uint64_t)v14, &qword_100BE3A48);
  v46 = &v14[*(int *)(v57 + 36)];
  *(double *)v46 = a2;
  *((double *)v46 + 1) = a3;
  *((double *)v46 + 2) = a4;
  *((double *)v46 + 3) = a5;
  v46[32] = 1;
  sub_100021A14(v42, &qword_100BE3A48);
  v47 = v62;
  sub_1001A7244((uint64_t)v14, v62, &qword_100BE3AB0);
  sub_100037768(v39, (uint64_t)v25, &qword_100BE3AB8);
  sub_100037768(v47, (uint64_t)v14, &qword_100BE3AB0);
  v48 = v63;
  sub_100037768((uint64_t)v25, v63, &qword_100BE3AB8);
  v49 = sub_1000BA294(&qword_100BE3AC0);
  sub_100037768((uint64_t)v14, v48 + *(int *)(v49 + 48), &qword_100BE3AB0);
  sub_100021A14(v47, &qword_100BE3AB0);
  sub_100021A14(v39, &qword_100BE3AB8);
  sub_100021A14((uint64_t)v14, &qword_100BE3AB0);
  sub_100021A14((uint64_t)v25, &qword_100BE3AB8);
}

void sub_10043CFB0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for RoundedRectangle(0);
  v3 = __chkstk_darwin(v2);
  v5 = (_OWORD *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)v5 + *(int *)(v3 + 20);
  v7 = enum case for RoundedCornerStyle.continuous(_:);
  v8 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  __asm { FMOV            V0.2D, #16.0 }
  *v5 = _Q0;
  if (qword_100BC21F0 != -1)
    swift_once(&qword_100BC21F0, sub_1001542A4);
  v14 = type metadata accessor for Material(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAED40);
  sub_100080C0C((uint64_t)v5, a1, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v16 = sub_1000BA294(&qword_100BE39E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1 + *(int *)(v16 + 52), v15, v14);
  *(_WORD *)(a1 + *(int *)(v16 + 56)) = 256;
  sub_100441DDC((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
}

double sub_10043D0F0@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  double result;
  __int128 v15;
  _OWORD v16[2];
  char v17;
  _QWORD v18[5];
  _QWORD v19[5];
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v11 = Path.init()(v16);
  if ((*(_BYTE *)(v5 + 32) & 1) != 0)
  {
    Rectangle.path(in:)(v18, v11, a2, a3, a4, a5);
    v21 = 0x3FF0000000000000;
    v22 = 0;
    v23 = 0;
    v24 = 0x3FF0000000000000;
    v25 = 0;
    v26 = 0;
    Path.addPath(_:transform:)(v18, &v21);
    v12 = sub_100154604((uint64_t)v18);
    Circle.path(in:)(v19, v12, *(double *)v5, *(double *)(v5 + 8), *(double *)(v5 + 16), *(double *)(v5 + 24));
    sub_10043D214((uint64_t)v20);
    sub_100154604((uint64_t)v19);
  }
  else
  {
    Circle.path(in:)(v20, v11, *(double *)v5, *(double *)(v5 + 8), *(double *)(v5 + 16), *(double *)(v5 + 24));
    v21 = 0x3FF0000000000000;
    v22 = 0;
    v23 = 0;
    v24 = 0x3FF0000000000000;
    v25 = 0;
    v26 = 0;
  }
  Path.addPath(_:transform:)(v20, &v21);
  sub_100154604((uint64_t)v20);
  v13 = v17;
  result = *(double *)v16;
  v15 = v16[1];
  *(_OWORD *)a1 = v16[0];
  *(_OWORD *)(a1 + 16) = v15;
  *(_BYTE *)(a1 + 32) = v13;
  return result;
}

double sub_10043D214@<D0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  v2 = (void *)Path.cgPath.getter();
  v3 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithCGPath:", v2);

  v4 = objc_msgSend(v3, "bezierPathByReversingPath");
  v5 = objc_msgSend(v4, "CGPath");

  Path.init(_:)(v8, v5);
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

double sub_10043D2D8@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  __int128 *v5;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[2];
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v7 = v5[1];
  v12 = *v5;
  v13 = v7;
  v14 = *((_BYTE *)v5 + 32);
  sub_10043D0F0((uint64_t)v10, a2, a3, a4, a5);
  result = *(double *)v10;
  v9 = v10[1];
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v11;
  return result;
}

uint64_t sub_10043D334()
{
  return Shape.sizeThatFits(_:)();
}

void sub_10043D34C()
{
  LocationSearchEntityFromStringResolver.init()();
}

uint64_t sub_10043D384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10045B52C();
  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10043D3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10045B52C();
  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10043D424(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10045B52C();
  return Shape.body.getter(a1, v2);
}

uint64_t sub_10043D45C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  char v5;
  char v6;
  char v7;
  uint64_t result;

  v5 = a2 & 1;
  sub_10008D47C(a1, a2 & 1);
  sub_100109B54();
  v7 = v6;
  result = sub_1000B15F8(a1, v5);
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10043D4B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_10043D45C(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

BOOL sub_10043D4C0(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

BOOL sub_10043D4D4(double *a1, double *a2)
{
  return sub_10043D4C0(*a1, a1[1], *a2, a2[1]);
}

void sub_10043D4E0(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double MinY;
  double v25;
  uint64_t v26;
  uint64_t *v27;
  double v28;
  double v29;
  double v30[5];
  uint64_t v31[7];
  _BYTE v32[8];
  uint64_t v33;
  _BYTE v34[32];
  char v35;

  v8 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NamedCoordinateSpace(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.scrollView.getter(v15);
  GeometryProxy.bounds(of:)(v30, v14);
  v16 = v30[0];
  v17 = v30[1];
  v18 = v30[2];
  v19 = v30[3];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1001A7244((uint64_t)v30, (uint64_t)v34, &qword_100BC40B0);
  if ((v35 & 1) != 0)
    v20 = 0.0;
  else
    v20 = v18;
  if ((v35 & 1) != 0)
    v21 = 0.0;
  else
    v21 = v19;
  if ((v35 & 1) != 0)
    v22 = 0.0;
  else
    v22 = v16;
  if ((v35 & 1) != 0)
    v23 = 0.0;
  else
    v23 = v17;
  MinY = CGRectGetMinY(*(CGRect *)(&v20 - 2));
  v25 = -MinY;
  sub_1007A5F94(v26);
  sub_100095360();
  sub_100441DDC((uint64_t)v10, type metadata accessor for LocationComponentHeaderViewModel);
  sub_1001A7244((uint64_t)v31, (uint64_t)v32, &qword_100BDAA28);
  if (v33)
  {
    v27 = sub_100126958(v31);
    v28 = (CGFloat.clamp(min:max:)(v27, a3, a4, v25) - a3) / (a4 - a3);
  }
  else
  {
    v28 = 1.0;
  }
  v29 = MinY + a2;
  if (v25 >= a2)
    v29 = 0.0;
  *a1 = v29;
  a1[1] = v28;
}

uint64_t sub_10043D6BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  __int128 v9;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = (__int128 *)(a2 + *(int *)(type metadata accessor for HeaderModifier(0) + 24));
  v5 = *((_QWORD *)v4 + 2);
  v9 = *v4;
  v10 = v5;
  v8[0] = v2;
  v8[1] = v3;
  v6 = sub_1000BA294(&qword_100BE39B0);
  return State.wrappedValue.setter(v8, v6);
}

void sub_10043D72C(uint64_t a1@<X1>, double *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  CGFloat MinY;
  double v26;
  double v27;
  double v28;
  double v29;
  _QWORD v30[5];
  _BYTE v31[32];
  char v32;

  v8 = type metadata accessor for NamedCoordinateSpace(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)a1;
  LOBYTE(a1) = *(_BYTE *)(a1 + 8);
  sub_10008D47C(v12, a1);
  sub_100109B54();
  v14 = v13;
  v15 = sub_1000B15F8(v12, a1);
  if ((v14 & 1) != 0)
  {
    static CoordinateSpaceProtocol<>.scrollView.getter(v15);
    GeometryProxy.bounds(of:)(v30, v11);
    v16 = *(double *)v30;
    v17 = *(double *)&v30[1];
    v18 = *(double *)&v30[2];
    v19 = *(double *)&v30[3];
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1001A7244((uint64_t)v30, (uint64_t)v31, &qword_100BC40B0);
    if ((v32 & 1) != 0)
      v20 = 0.0;
    else
      v20 = v18;
    if ((v32 & 1) != 0)
      v21 = 0.0;
    else
      v21 = v19;
    if ((v32 & 1) != 0)
      v22 = 0.0;
    else
      v22 = v16;
    if ((v32 & 1) != 0)
      v23 = 0.0;
    else
      v23 = v17;
    MinY = CGRectGetMinY(*(CGRect *)(&v20 - 2));
    v26 = -MinY;
    v27 = MinY + a3;
    if (v26 < a3)
      v28 = v27;
    else
      v28 = 0.0;
    v29 = 1.0
        - (CGFloat.clamp(min:max:)(v24, a4 + -16.0, a4 + -16.0 + 5.0, v26) - (a4 + -16.0))
        / (a4 + -16.0 + 5.0 - (a4 + -16.0));
  }
  else
  {
    v29 = 1.0;
    v28 = 0.0;
  }
  *a2 = v28;
  a2[1] = v29;
}

uint64_t sub_10043D8B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  __int128 v9;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = (__int128 *)(a2 + *(int *)(type metadata accessor for PinningHeaderModifier(0) + 28));
  v5 = *((_QWORD *)v4 + 2);
  v9 = *v4;
  v10 = v5;
  v8[0] = v2;
  v8[1] = v3;
  v6 = sub_1000BA294(&qword_100BE3AF0);
  return State.wrappedValue.setter(v8, v6);
}

double sub_10043D924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  double v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v18;

  v1 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - v8;
  sub_1007A5F94(v10);
  v11 = &v9[*(int *)(v4 + 28)];
  v12 = *(double *)v11;
  v13 = v11[8];
  sub_100441DDC((uint64_t)v9, type metadata accessor for LocationComponentHeaderMetrics);
  sub_100080C0C(v0, (uint64_t)v3, type metadata accessor for RowModifier);
  if ((v13 & 1) != 0)
  {
    sub_1007A5F94(v14);
    sub_100441DDC((uint64_t)v3, type metadata accessor for RowModifier);
    v12 = *(double *)&v6[*(int *)(v4 + 20)];
    v15 = type metadata accessor for LocationComponentHeaderMetrics;
    v16 = (uint64_t)v6;
  }
  else
  {
    v15 = type metadata accessor for RowModifier;
    v16 = (uint64_t)v3;
  }
  sub_100441DDC(v16, v15);
  return v12;
}

BOOL sub_10043DA78()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v0 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007A5F94(v6);
  sub_100080C0C((uint64_t)v5, (uint64_t)v2, type metadata accessor for LocationComponentHeaderViewModel);
  v7 = swift_getEnumCaseMultiPayload(v2) == 4;
  sub_100441DDC((uint64_t)v2, type metadata accessor for LocationComponentHeaderViewModel);
  sub_100441DDC((uint64_t)v5, type metadata accessor for LocationComponentHeaderViewModel);
  return v7;
}

double sub_10043DB60@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat MinY;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double result;
  uint64_t v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  _QWORD v40[5];
  _BYTE v41[32];
  char v42;
  CGRect v43;
  CGRect v44;

  v38 = a5;
  v39 = a6;
  v36 = a3;
  v37 = a4;
  v35 = a2;
  v7 = type metadata accessor for NamedCoordinateSpace(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.scrollView.getter(v11);
  GeometryProxy.bounds(of:)(v40, v10);
  v12 = *(double *)v40;
  v13 = *(double *)&v40[1];
  v14 = *(double *)&v40[2];
  v15 = *(double *)&v40[3];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1001A7244((uint64_t)v40, (uint64_t)v41, &qword_100BC40B0);
  if ((v42 & 1) != 0)
    v17 = 0.0;
  else
    v17 = v14;
  if ((v42 & 1) != 0)
    v18 = 0.0;
  else
    v18 = v15;
  if ((v42 & 1) != 0)
    v19 = 0.0;
  else
    v19 = v12;
  if ((v42 & 1) != 0)
    v20 = 0.0;
  else
    v20 = v13;
  v34 = GeometryProxy.size.getter(v16);
  v33 = v21;
  v22 = -v20;
  v23 = v35;
  v37 = -fmin(-v20 - v35 - v36 + v37, 0.0);
  v43.origin.x = v19;
  v43.origin.y = v20;
  v43.size.width = v17;
  v43.size.height = v18;
  MinY = CGRectGetMinY(v43);
  v26 = v38;
  v25 = v39;
  v28 = (CGFloat.clamp(min:max:)(v27, v38, v39, -MinY) - v26) / (v25 - v26);
  v44.origin.x = -v19;
  v44.origin.y = v22;
  v44.size.width = v34;
  v44.size.height = v33;
  v29 = v23 - CGRectGetMinY(v44);
  if (v29 < 0.0)
    v30 = 0.0;
  else
    v30 = v29;
  result = sub_10043D924() + v30;
  *a1 = v37;
  a1[1] = result;
  a1[2] = v28;
  return result;
}

uint64_t sub_10043DD0C(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = (__int128 *)(a2 + *(int *)(type metadata accessor for RowModifier(0) + 24));
  v4 = *((_QWORD *)v3 + 2);
  v5 = *((_QWORD *)v3 + 3);
  v11 = *v3;
  v12 = v4;
  v13 = v5;
  v9 = v8;
  v10 = v2;
  v6 = sub_1000BA294(&qword_100BE2898);
  return State.wrappedValue.setter(&v9, v6);
}

double sub_10043DD94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for RowModifier(0) + 24));
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v23 = *v3;
  v4 = v23;
  v24 = v5;
  v25 = v6;
  v26 = v7;
  v8 = sub_1000BA294(&qword_100BE2898);
  v9 = State.wrappedValue.getter(&v18, v8);
  v10 = v19;
  static Alignment.center.getter(v9);
  _FrameLayout.init(width:height:alignment:)(0, 1, v10, 0);
  v11 = v23;
  v12 = v24;
  v13 = v25;
  v14 = v26;
  v15 = v27;
  v16 = v28;
  v18 = v4;
  v19 = v5;
  v20 = v6;
  v21 = v7;
  State.wrappedValue.getter(v22, v8);
  result = *(double *)&v22[2];
  *(_QWORD *)a2 = v11;
  *(_BYTE *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v16;
  *(double *)(a2 + 48) = result;
  return result;
}

BOOL sub_10043DEA4(CGRect *a1, CGRect *a2)
{
  _BOOL8 result;

  result = CGRectEqualToRect(*a1, *a2);
  if (result)
    return a1[1].origin.x == a2[1].origin.x && a1[1].origin.y == a2[1].origin.y;
  return result;
}

BOOL sub_10043DF04(uint64_t a1, uint64_t a2)
{
  CGSize v2;
  CGPoint v3;
  CGSize v4;
  __int128 v5;
  CGRect v7;
  __int128 v8;
  CGRect v9;
  __int128 v10;

  v2 = *(CGSize *)(a1 + 16);
  v7.origin = *(CGPoint *)a1;
  v7.size = v2;
  v3 = *(CGPoint *)a2;
  v4 = *(CGSize *)(a2 + 16);
  v8 = *(_OWORD *)(a1 + 32);
  v9.origin = v3;
  v5 = *(_OWORD *)(a2 + 32);
  v9.size = v4;
  v10 = v5;
  return sub_10043DEA4(&v7, &v9);
}

void sub_10043DF48(uint64_t a1@<X1>, CGFloat *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double height;
  uint64_t v22;
  char v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  uint64_t v33;
  double v34;
  _QWORD v35[5];
  _BYTE v36[32];
  char v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.scrollView.getter(v6);
  GeometryProxy.bounds(of:)(v35, v8);
  v9 = *(double *)v35;
  v10 = *(double *)&v35[1];
  v11 = *(double *)&v35[2];
  v12 = *(double *)&v35[3];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1001A7244((uint64_t)v35, (uint64_t)v36, &qword_100BC40B0);
  v14 = 0.0;
  if ((v37 & 1) != 0)
    v15 = 0.0;
  else
    v15 = v11;
  v34 = v15;
  if ((v37 & 1) != 0)
  {
    v12 = 0.0;
    v16 = 0.0;
  }
  else
  {
    v16 = v9;
  }
  if ((v37 & 1) != 0)
    v17 = 0.0;
  else
    v17 = v10;
  v18 = GeometryProxy.size.getter(v13);
  v20 = v19;
  height = *(double *)(a1 + 8);
  v22 = *(_QWORD *)(a1 + 16);
  v23 = *(_BYTE *)(a1 + 24);
  sub_10008D47C(v22, v23);
  sub_10006A9A8();
  v25 = v24;
  sub_1000B15F8(v22, v23);
  if (v17 >= -v25)
  {
    sub_10008D47C(v22, v23);
    sub_10006A9A8();
    v28 = v27;
    v29 = sub_1000B15F8(v22, v23);
    v42.origin.x = CGRect.adding(minY:)(v29, v28, v16, v17, v34, v12);
    v42.origin.y = v30;
    v42.size.width = v31;
    v42.size.height = v32;
    v40.origin.x = 0.0;
    v40.origin.y = 0.0;
    v40.size.width = v18;
    v40.size.height = v20;
    v39 = CGRectIntersection(v40, v42);
    if (v41.size.height >= height)
    {
      v26 = 1.0;
      height = v41.size.height;
    }
    else
    {
      v14 = height - v41.size.height;
      v26 = v41.size.height / height;
    }
  }
  else
  {
    v38.origin.x = 0.0;
    v38.origin.y = 0.0;
    v38.size.width = v18;
    v38.size.height = v20;
    v39 = CGRectIntegral(v38);
    height = v39.size.height;
    v26 = 1.0;
  }
  *a2 = v39.origin.x;
  a2[1] = v39.origin.y;
  a2[2] = v39.size.width;
  a2[3] = height;
  a2[4] = v26;
  a2[5] = v14;
}

double sub_10043E134(_OWORD *a1, const void *a2)
{
  uint64_t v4;
  __int128 v5;
  double result;

  v4 = swift_allocObject(&unk_100B74BD0, 152, 7);
  memcpy((void *)(v4 + 16), a2, 0x58uLL);
  v5 = a1[1];
  *(_OWORD *)(v4 + 104) = *a1;
  *(_OWORD *)(v4 + 120) = v5;
  *(_OWORD *)(v4 + 136) = a1[2];
  sub_10045A898((uint64_t)a2);
  asyncMain(block:)(sub_10045A914, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_10043E1B4(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _OWORD v6[6];
  uint64_t v7;

  v2 = *(_OWORD *)(a1 + 48);
  v6[3] = *(_OWORD *)(a1 + 32);
  v6[4] = v2;
  v6[5] = *(_OWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 80);
  v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  v6[2] = a2[2];
  v4 = sub_1000BA294(&qword_100BE3988);
  return State.wrappedValue.setter(v6, v4);
}

void sub_10043E218(double *a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double MinY;
  double v10;
  double v11;
  _QWORD v12[5];
  CGRect v13;
  char v14;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.scrollView.getter(v6);
  GeometryProxy.bounds(of:)(v12, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1001A7244((uint64_t)v12, (uint64_t)&v13, &qword_100BC40B0);
  MinY = 0.0;
  if ((v14 & 1) == 0)
    MinY = CGRectGetMinY(v13);
  v10 = -MinY;
  v11 = MinY + a2;
  if (v10 >= a2)
    v11 = 0.0;
  *a1 = v11;
}

uint64_t sub_10043E2FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v2 = *a1;
  v6 = *(_OWORD *)(a2 + 64);
  v5 = v2;
  v3 = sub_1000BA294(&qword_100BC40A8);
  return State.wrappedValue.setter(&v5, v3);
}

double sub_10043E348()
{
  uint64_t v0;
  __n128 v1;
  double result;
  _QWORD v3[2];

  v0 = type metadata accessor for NamedCoordinateSpace(0);
  sub_10004037C(v0, qword_100CAEB78);
  sub_1000AECD4(v0, (uint64_t)qword_100CAEB78);
  v3[0] = qword_100BE1F10;
  v3[1] = off_100BE1F18;
  v1 = swift_bridgeObjectRetain(off_100BE1F18);
  static CoordinateSpaceProtocol<>.named<A>(_:)(v3, &type metadata for String, &protocol witness table for String, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10043E3D0()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  sub_10008900C();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for ObservableResolver(0);
  sub_10007A100((uint64_t)&qword_100BD0930);
  v6 = EnvironmentObject.init()(v4, v5);
  v8 = v7;
  KeyPath = swift_getKeyPath(&unk_10099FC98);
  v10 = swift_getKeyPath(&unk_10099FCC0);
  v11 = swift_getKeyPath(&unk_10099FCE8);
  v12 = swift_getKeyPath(&unk_10099FD10);
  result = swift_getKeyPath(&unk_10099FD38);
  *(_QWORD *)v3 = v6;
  *(_QWORD *)(v3 + 8) = v8;
  *(_QWORD *)(v3 + 16) = KeyPath;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = v10;
  *(_BYTE *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = v11;
  *(_QWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = v12;
  *(_BYTE *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = result;
  *(_BYTE *)(v3 + 96) = 0;
  *(_BYTE *)(v3 + 97) = v1;
  return result;
}

void sub_10043E4BC()
{
  uint64_t v0;

  v0 = sub_10011DE18();
  sub_1000C0E60(v0);
  sub_10004A298();
}

void sub_10043E4D8()
{
  uint64_t v0;

  v0 = sub_10045B990();
  sub_1000C0E60(v0);
  sub_10004A298();
}

void sub_10043E4F4(char *a1)
{
  sub_10045B964(a1);
  sub_10004A298();
}

void sub_10043E514(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a2;
  v3 = sub_1000BA294(&qword_100BE2178);
  __chkstk_darwin(v3);
  v5 = (char *)&v30[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE2180);
  __chkstk_darwin(v6);
  v8 = (char *)&v30[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BE2188);
  __chkstk_darwin(v9);
  v11 = (char *)&v30[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  sub_10008D47C(v12, v13);
  sub_100109B54();
  v15 = v14;
  sub_1000B15F8(v12, v13);
  if ((v15 & 1) != 0)
  {
    sub_10043E7A0((uint64_t)v11);
    v16 = &v11[*(int *)(v9 + 36)];
    *(_QWORD *)v16 = swift_getKeyPath(&unk_1009A0280);
    v17 = sub_1000BA294(&qword_100BE21F0);
    swift_storeEnumTagMultiPayload(v16, v17, 0);
    v18 = type metadata accessor for RowModifier(0);
    v19 = &v16[*(int *)(v18 + 20)];
    *(_QWORD *)v19 = swift_getKeyPath(&unk_1009A02A8);
    v19[8] = 0;
    v20 = &v16[*(int *)(v18 + 24)];
    memset(v30, 0, sizeof(v30));
    State.init(wrappedValue:)(v30, &type metadata for RowModifier.RowGeometry);
    v21 = v32;
    v22 = v33;
    *(_OWORD *)v20 = v31;
    *((_QWORD *)v20 + 2) = v21;
    *((_QWORD *)v20 + 3) = v22;
    v23 = &qword_100BE2188;
    sub_100037768((uint64_t)v11, (uint64_t)v8, &qword_100BE2188);
    swift_storeEnumTagMultiPayload(v8, v6, 0);
    v24 = sub_1004446F4();
    v25 = sub_100444778();
    _ConditionalContent<>.init(storage:)(v8, v9, v3, v24, v25);
    v26 = (uint64_t)v11;
  }
  else
  {
    sub_10043E7A0((uint64_t)v5);
    v23 = &qword_100BE2178;
    sub_100037768((uint64_t)v5, (uint64_t)v8, &qword_100BE2178);
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v27 = sub_1004446F4();
    v28 = sub_100444778();
    _ConditionalContent<>.init(storage:)(v8, v9, v3, v27, v28);
    v26 = (uint64_t)v5;
  }
  sub_100021A14(v26, v23);
}

void sub_10043E7A0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  char v28;
  unsigned int *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  __chkstk_darwin(v2);
  v43 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)sub_1000BA294(&qword_100BE21C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1000BA294(&qword_100BE21B8);
  __chkstk_darwin(v39);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000BA294(&qword_100BE21A8);
  __chkstk_darwin(v40);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1000BA294(&qword_100BE2178);
  __chkstk_darwin(v42);
  v41 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 48);
  v13 = *(_QWORD *)(v1 + 56);
  v14 = *(_BYTE *)(v1 + 64);
  sub_100082BE8(v12, v13, v14);
  sub_1007A60A8();
  v16 = v15;
  v18 = v17;
  sub_100082C5C(v12, v13, v14);
  v19 = *(_QWORD *)(v1 + 16);
  v20 = *(_BYTE *)(v1 + 24);
  sub_10008D47C(v19, v20);
  sub_100109B54();
  LOBYTE(v13) = v21;
  sub_1000B15F8(v19, v20);
  *(_QWORD *)&v6[v4[9]] = 0x4020000000000000;
  sub_10043EC70(v1);
  v22 = &v6[v4[10]];
  *(_QWORD *)v22 = v16;
  *((_QWORD *)v22 + 1) = v18;
  v22[16] = 0;
  v6[v4[11]] = (v13 & 1) == 0;
  v23 = static Color.primary.getter();
  KeyPath = swift_getKeyPath(&unk_1009A02D0);
  sub_100037768((uint64_t)v6, (uint64_t)v8, &qword_100BE21C8);
  v25 = (uint64_t *)&v8[*(int *)(v39 + 36)];
  *v25 = KeyPath;
  v25[1] = v23;
  sub_100021A14((uint64_t)v6, &qword_100BE21C8);
  v26 = *(_QWORD *)(v1 + 72);
  v27 = *(_BYTE *)(v1 + 80);
  sub_10008D47C(v26, v27);
  sub_100109B54();
  LOBYTE(KeyPath) = v28;
  sub_1000B15F8(v26, v27);
  v29 = (unsigned int *)&enum case for ColorScheme.light(_:);
  v31 = v43;
  v30 = v44;
  if ((KeyPath & 1) == 0)
    v29 = (unsigned int *)&enum case for ColorScheme.dark(_:);
  v32 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *v29, v45);
  v33 = swift_getKeyPath(&unk_1009A0300);
  v34 = (uint64_t *)&v10[*(int *)(v40 + 36)];
  v35 = sub_1000BA294(&qword_100BE21D8);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v34 + *(int *)(v35 + 28), v31, v32);
  *v34 = v33;
  sub_100037768((uint64_t)v8, (uint64_t)v10, &qword_100BE21B8);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  sub_100021A14((uint64_t)v8, &qword_100BE21B8);
  v36 = swift_getKeyPath(&unk_1009A0330);
  v37 = v41;
  sub_100037768((uint64_t)v10, v41, &qword_100BE21A8);
  v38 = v37 + *(int *)(v42 + 36);
  *(_QWORD *)v38 = v36;
  *(_BYTE *)(v38 + 8) = 0;
  sub_100021A14((uint64_t)v10, &qword_100BE21A8);
  sub_1001A7244(v37, v46, &qword_100BE2178);
}

uint64_t sub_10043EB44()
{
  uint64_t v0;

  v0 = static VerticalAlignment.top.getter();
  return ViewDimensions.subscript.getter(v0);
}

double sub_10043EB68()
{
  uint64_t v0;
  double result;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t *v6;
  char v7;
  char v8;

  sub_1001A7244(v0 + 97, (uint64_t)&v7, &qword_100BE2148);
  sub_1001A7244((uint64_t)&v7, (uint64_t)&v8, &qword_100BE2148);
  result = 0.0;
  if ((v8 & 0xFE) == 2)
  {
    v2 = *(_QWORD *)(v0 + 88);
    v3 = *(_BYTE *)(v0 + 96);
    sub_10008D47C(v2, v3);
    sub_100109B54();
    v5 = v4;
    sub_1000B15F8(v2, v3);
    if ((v5 & 1) != 0)
    {
      if (qword_100BC1EB0 != -1)
        swift_once(&qword_100BC1EB0, sub_1002425A4);
      v6 = &qword_100CAE530;
    }
    else
    {
      if (qword_100BC1EB8 != -1)
        swift_once(&qword_100BC1EB8, sub_100129188);
      v6 = &qword_100CAE538;
    }
    return 1.0 - *(double *)v6;
  }
  return result;
}

void sub_10043EC70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1000BA294(&qword_100BE21F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BE2200);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BE2208);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10043EE60(a1, (uint64_t)v4);
  v13 = static Color.clear.getter(v12);
  v20 = v13;
  v14 = sub_10045016C((uint64_t)&unk_100BE2210);
  View.tipBackground<A>(_:)(&v20, v2, &type metadata for Color, v14, &protocol witness table for Color);
  swift_release(v13);
  sub_100021A14((uint64_t)v4, &qword_100BE21F8);
  v15 = static Color.secondary.getter();
  KeyPath = swift_getKeyPath(&unk_1009A0368);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  v17 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *v17 = KeyPath;
  v17[1] = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = sub_100444D10();
  View.onTapGesture(count:perform:)(1, LocationSearchEntityFromStringResolver.init(), 0, v9, v18);
  sub_100021A14((uint64_t)v11, &qword_100BE2208);
}

void sub_10043EE60(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[9];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;

  v41 = a2;
  v27 = sub_1000BA294(&qword_100BE22D0);
  v17[8] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v17[7] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000BA294(&qword_100BE22E0);
  __chkstk_darwin(v28);
  v30 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BE22E8);
  __chkstk_darwin(v22);
  v24 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000BA294(&qword_100BE22B0);
  __chkstk_darwin(v29);
  v26 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000BA294(&qword_100BE22A0);
  __chkstk_darwin(v40);
  v31 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000BA294(&qword_100BE22C0);
  v17[6] = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v17[5] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000BA294(&qword_100BE2290);
  v17[4] = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v17[3] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BE22F0);
  __chkstk_darwin(v18);
  v35 = sub_1000BA294(&qword_100BE2270);
  __chkstk_darwin(v35);
  v21 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100BE2280);
  v17[2] = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v17[1] = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BE2260);
  v17[0] = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v37 = sub_1000BA294(&qword_100BE22F8);
  __chkstk_darwin(v37);
  v39 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000BA294(&qword_100BE2300);
  __chkstk_darwin(v32);
  v34 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE2308);
  __chkstk_darwin(v14);
  v33 = sub_1000BA294(&qword_100BE2240);
  __chkstk_darwin(v33);
  v38 = sub_1000BA294(&qword_100BE2230);
  __chkstk_darwin(v38);
  v36 = (char *)v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BE2250);
  __chkstk_darwin(v16);
  sub_1001A7244(a1 + 97, (uint64_t)&v42, &qword_100BE2148);
  sub_1001A7244((uint64_t)&v42, (uint64_t)&v43, &qword_100BE2148);
  __asm { BR              X10 }
}

uint64_t sub_10043F34C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_OWORD *)(v6 - 112) = *v1;
  if (!*(_QWORD *)(v6 - 112))
  {
    v25 = *(_QWORD *)(v6 - 104);
    v26 = type metadata accessor for ObservableResolver(0);
    sub_10007A100((uint64_t)&qword_100BD0930);
    EnvironmentObject.error()(0, v25, v26, v27);
    __break(1u);
    JUMPOUT(0x10043FED4);
  }
  v7 = type metadata accessor for TipCoordinator(0);
  swift_retain();
  ObservableResolver.resolve<A>(_:)(v7, v7);
  sub_1004446CC((_QWORD *)(v6 - 112));
  v8 = *(_QWORD *)(v6 - 120);
  if (!v8)
  {
    __break(1u);
    JUMPOUT(0x10043FE7CLL);
  }
  sub_100146A74();
  v10 = v9;
  swift_release(v8);
  *(_BYTE *)(v6 - 120) = v10 & 1;
  v11 = sub_1001445CC();
  TipView.init(_:arrowEdge:action:)(v6 - 120, 4, LocationSearchEntityFromStringResolver.init(), 0, &unk_100B716F0, v11);
  v12 = *(_QWORD *)(v6 - 384);
  v13 = *(_QWORD *)(v6 - 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v4, v3, v13);
  swift_storeEnumTagMultiPayload(v4, v0, 1);
  sub_10007AB60((uint64_t)&unk_100BE2248);
  v15 = v14;
  sub_10007AB60((uint64_t)&unk_100BE2258);
  _ConditionalContent<>.init(storage:)(v4, v5, v13, v15, v16);
  v17 = *(_QWORD *)(v6 - 184);
  sub_100037768(v2, v17, &qword_100BE2240);
  swift_storeEnumTagMultiPayload(v17, *(_QWORD *)(v6 - 200), 0);
  v18 = sub_100444A98();
  v19 = sub_100444B3C();
  v20 = *(_QWORD *)(v6 - 168);
  _ConditionalContent<>.init(storage:)(v17, *(_QWORD *)(v6 - 192), *(_QWORD *)(v6 - 176), v18, v19);
  sub_100021A14(v2, &qword_100BE2240);
  v21 = *(_QWORD *)(v6 - 144);
  sub_100037768(v20, v21, &qword_100BE2230);
  swift_storeEnumTagMultiPayload(v21, *(_QWORD *)(v6 - 160), 0);
  v22 = sub_100444A2C();
  v23 = sub_100444BE0();
  _ConditionalContent<>.init(storage:)(v21, *(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 136), v22, v23);
  sub_100021A14(v20, &qword_100BE2230);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v3, v13);
}

double sub_10043FEF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  double result;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v7 = a3 & 1;
  sub_10008D47C(a2, a3 & 1);
  sub_10006A9A8();
  v9 = v8;
  v10 = sub_1000B15F8(a2, v7);
  static Alignment.center.getter(v10);
  ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(v9 + v9, 0, 0, 1);
  v11 = sub_1000BA294(&qword_100BE2870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a4, a1, v11);
  v12 = (_OWORD *)(a4 + *(int *)(sub_1000BA294(&qword_100BE2878) + 36));
  *v12 = v14;
  v12[1] = v15;
  result = *(double *)&v16;
  v12[2] = v16;
  return result;
}

double sub_10043FFCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10043FEF0(a1, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), a2);
}

void sub_10043FFD8()
{
  uint64_t v0;

  v0 = sub_10009C7FC();
  sub_1000C0E60(v0);
  sub_10004A298();
}

void sub_10043FFF4(char *a1)
{
  sub_10009F064(a1);
  sub_10004A298();
}

void sub_10044000C()
{
  uint64_t v0;

  v0 = sub_10045B984();
  sub_1000C0E60(v0);
  sub_10004A298();
}

void sub_100440028(char *a1)
{
  sub_10045B970(a1);
  sub_10004A298();
}

uint64_t sub_100440040()
{
  uint64_t v0;

  return sub_100099AB0(v0, 17);
}

uint64_t sub_10044008C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004400B0()
{
  uint64_t *v0;

  *v0 = sub_10045B99C();
  sub_10004A298();
}

void sub_1004400CC()
{
  __n128 v0;

  v0 = swift_retain();
  EnvironmentValues.tintColor.setter(v0);
  sub_10004A298();
}

BOOL sub_1004400F0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_100440124()
{
  return 16;
}

__n128 sub_100440130(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_10044013C()
{
  unint64_t result;

  result = qword_100BE2018;
  if (!qword_100BE2018)
  {
    result = swift_getWitnessTable(&unk_1009A01A4, &_s63LocationComponentContainerBackgroundPinningOffsetEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_100BE2018);
  }
  return result;
}

ValueMetadata *_s63LocationComponentContainerBackgroundPinningOffsetEnvironmentKeyVMa()
{
  return &_s63LocationComponentContainerBackgroundPinningOffsetEnvironmentKeyVN;
}

void *initializeWithTake for LocationTipOverlayModifier(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x62uLL);
}

uint64_t *assignWithTake for LocationTipOverlayModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = *((_BYTE *)a2 + 24);
  v6 = a1[2];
  v7 = *((_BYTE *)a1 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *((_BYTE *)a2 + 40);
  v9 = a1[4];
  v10 = *((_BYTE *)a1 + 40);
  a1[4] = a2[4];
  *((_BYTE *)a1 + 40) = v8;
  sub_1000B15F8(v9, v10);
  v11 = *((_BYTE *)a2 + 64);
  v12 = a1[6];
  v13 = a1[7];
  v14 = *((_BYTE *)a1 + 64);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_BYTE *)a1 + 64) = v11;
  sub_100082C5C(v12, v13, v14);
  v15 = *((_BYTE *)a2 + 80);
  v16 = a1[9];
  v17 = *((_BYTE *)a1 + 80);
  a1[9] = a2[9];
  *((_BYTE *)a1 + 80) = v15;
  sub_1000B15F8(v16, v17);
  v18 = *((_BYTE *)a2 + 96);
  v19 = a1[11];
  v20 = *((_BYTE *)a1 + 96);
  a1[11] = a2[11];
  *((_BYTE *)a1 + 96) = v18;
  sub_1000B15F8(v19, v20);
  *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationTipOverlayModifier(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 98))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationTipOverlayModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 98) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 98) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t destroy for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t a1)
{
  return sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v3, v4);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v3, v4);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1000B15F8(v5, v6);
  return a1;
}

uint64_t assignWithTake for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1000B15F8(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[25])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier()
{
  return &type metadata for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier;
}

uint64_t sub_1004404CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v5 = (char *)&loc_100440538 + 4 * byte_10099F768[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_100441DDC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_10045B958(a1, a2);
  sub_10003BC44(v2);
  sub_10004A298();
}

_BYTE *sub_100441DFC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _OWORD *v158;
  _OWORD *v159;
  __int128 v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  __int128 v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  char *__src;
  char *__srca;
  int *v220;
  int *v221;
  uint64_t v222;
  int *v223;
  int *__dstb;
  char *__dst;
  void *__dsta;
  void *__dstc;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;

  v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (swift_getEnumCaseMultiPayload(a2) == 3)
  {
    v7 = type metadata accessor for WeatherDescription(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    v9 = *(int *)(v8 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
    a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload(a1, v6, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v13 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v14 = v13[5];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for LocationComponentViewModel(0);
  switch(swift_getEnumCaseMultiPayload(v16))
  {
    case 1u:
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v18 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v19 = v18[5];
      v20 = &v15[v19];
      v228 = v17;
      v21 = &v16[v19];
      v22 = sub_1000BA294(&qword_100BC4E68);
      __dstb = v13;
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      v23(&v15[v18[6]], &v16[v18[6]], v22);
      v23(&v15[v18[7]], &v16[v18[7]], v22);
      v13 = __dstb;
      v24 = v228;
      *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
      *(_OWORD *)&v15[v18[9]] = *(_OWORD *)&v16[v18[9]];
      v25 = v15;
      v26 = 1;
      goto LABEL_51;
    case 2u:
      v229 = v17;
      v27 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v27;
      v28 = type metadata accessor for FeelsLikeComponentViewModel(0);
      v29 = *(int *)(v28 + 24);
      v30 = &v15[v29];
      v31 = &v16[v29];
      v32 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
      {
        v33 = sub_1000BA294(&qword_100BC3360);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v30 = *(_OWORD *)v31;
        v89 = *(int *)(v32 + 20);
        __dstc = (void *)v28;
        v90 = &v30[v89];
        v91 = &v31[v89];
        v92 = type metadata accessor for TemperatureScaleConfiguration(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
        v93 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(_QWORD *)&v90[v93[5]] = *(_QWORD *)&v91[v93[5]];
        *(_QWORD *)&v90[v93[6]] = *(_QWORD *)&v91[v93[6]];
        *(_QWORD *)&v90[v93[7]] = *(_QWORD *)&v91[v93[7]];
        *(_OWORD *)&v90[v93[8]] = *(_OWORD *)&v91[v93[8]];
        v90[v93[9]] = v91[v93[9]];
        v28 = (uint64_t)__dstc;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
      }
      v24 = v229;
      *(_OWORD *)&v15[*(int *)(v28 + 28)] = *(_OWORD *)&v16[*(int *)(v28 + 28)];
      v25 = v15;
      v26 = 2;
      goto LABEL_51;
    case 5u:
      v34 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v15, v16, v34);
      v35 = (int *)type metadata accessor for MapComponentViewModel(0);
      v36 = v35[5];
      v37 = &v15[v36];
      v38 = &v16[v36];
      v39 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      v40 = v35[6];
      __dst = &v15[v40];
      v41 = &v16[v40];
      v42 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
      {
        v43 = sub_1000BA294(&qword_100BC3460);
        memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v220 = v35;
        v221 = (int *)v42;
        v231 = v17;
        *(_OWORD *)__dst = *(_OWORD *)v41;
        v94 = *(int *)(v42 + 20);
        v215 = &__dst[v94];
        v95 = &v41[v94];
        v96 = type metadata accessor for Locale(0);
        __src = v41;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          v97 = sub_1000BA294(&qword_100BC3340);
          memcpy(v215, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v215, v95, v96);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v215, 0, 1, v96);
        }
        v103 = v221[6];
        v216 = &__dst[v103];
        v104 = &v41[v103];
        v105 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v216, v104, v105);
        v106 = v221[7];
        v107 = &__dst[v106];
        v108 = &__src[v106];
        v109 = sub_1000BA294(&qword_100BC3348);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
        {
          v110 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          v111 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v107, v108, v111);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
        }
        v112 = v221[8];
        v113 = &__dst[v112];
        v114 = &__src[v112];
        v115 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload(v114) == 1)
        {
          v116 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v113, v114, v116);
          swift_storeEnumTagMultiPayload(v113, v115, 1);
        }
        else
        {
          memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        v117 = v221[9];
        v118 = &__dst[v117];
        v119 = (uint64_t)&__src[v117];
        v120 = type metadata accessor for WeatherDataOverrides(0);
        __srca = (char *)v119;
        v121 = _s7Weather24LocationCompositionStateOwet_0(v119, 1, v120);
        v17 = v231;
        v35 = v220;
        if (v121)
        {
          v122 = sub_1000BA294(&qword_100BC3350);
          memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          v214 = v120;
          v217 = v118;
          v123 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srca, 1, v123))
          {
            v124 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v118, __srca, v123);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v123);
          }
          v125 = *(int *)(v120 + 20);
          v126 = &v118[v125];
          v127 = &__srca[v125];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srca[v125], 1, v123))
          {
            v128 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v126, v127, v123);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v123);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v214);
          v35 = v220;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v221);
      }
      *(_OWORD *)&v15[v35[7]] = *(_OWORD *)&v16[v35[7]];
      v25 = v15;
      v24 = v17;
      v26 = 5;
      goto LABEL_51;
    case 6u:
      v44 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v44;
      v15[32] = v16[32];
      *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
      v45 = (int *)type metadata accessor for MoonComponentViewModel(0);
      v46 = v45[7];
      v47 = &v15[v46];
      v48 = &v16[v46];
      v49 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      v15[v45[8]] = v16[v45[8]];
      *(_QWORD *)&v15[v45[9]] = *(_QWORD *)&v16[v45[9]];
      v25 = v15;
      v24 = v17;
      v26 = 6;
      goto LABEL_51;
    case 7u:
      v50 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v16) == 1)
      {
        __dsta = (void *)v50;
        v230 = v17;
        *(_OWORD *)v15 = *(_OWORD *)v16;
        v51 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v52 = v51[5];
        v53 = &v15[v52];
        v54 = &v16[v52];
        v55 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
        {
          v56 = sub_1000BA294(&qword_100BD4280);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
        }
        else
        {
          v98 = v53;
          v222 = (uint64_t)v53;
          v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
          v57(v98, v54, v55);
          _s7Weather24LocationCompositionStateOwst_0(v222, 0, 1, v55);
        }
        *(_OWORD *)&v15[v51[6]] = *(_OWORD *)&v16[v51[6]];
        v57(&v15[v51[7]], &v16[v51[7]], v55);
        v223 = v51;
        v99 = v51[8];
        v100 = &v15[v99];
        v101 = &v16[v99];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v16[v99], 1, v55))
        {
          v102 = sub_1000BA294(&qword_100BD4280);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v57(v100, v101, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v55);
        }
        v17 = v230;
        v15[v223[9]] = v16[v223[9]];
        swift_storeEnumTagMultiPayload(v15, __dsta, 1);
      }
      else
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      v25 = v15;
      v24 = v17;
      v26 = 7;
      goto LABEL_51;
    case 8u:
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v58 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      v59 = &v15[v58];
      v60 = &v16[v58];
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v59, v60, HourPrecipitationChartViewModel);
      v25 = v15;
      v24 = v17;
      v26 = 8;
      goto LABEL_51;
    case 9u:
      v62 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v15, v16, v62);
      v63 = type metadata accessor for NotificationsOptInComponentViewModel(0);
      v15[*(int *)(v63 + 20)] = v16[*(int *)(v63 + 20)];
      v25 = v15;
      v24 = v17;
      v26 = 9;
      goto LABEL_51;
    case 0xBu:
      v64 = type metadata accessor for PressureTrend(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v15, v16, v64);
      v65 = (int *)type metadata accessor for PressureComponentViewModel(0);
      *(_OWORD *)&v15[v65[5]] = *(_OWORD *)&v16[v65[5]];
      *(_OWORD *)&v15[v65[6]] = *(_OWORD *)&v16[v65[6]];
      *(_OWORD *)&v15[v65[7]] = *(_OWORD *)&v16[v65[7]];
      *(_QWORD *)&v15[v65[8]] = *(_QWORD *)&v16[v65[8]];
      *(_OWORD *)&v15[v65[9]] = *(_OWORD *)&v16[v65[9]];
      v25 = v15;
      v24 = v17;
      v26 = 11;
      goto LABEL_51;
    case 0xDu:
      v66 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v66;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
      *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
      v67 = type metadata accessor for SevereAlertComponentViewModel(0);
      v68 = *(int *)(v67 + 36);
      v69 = &v15[v68];
      v70 = &v16[v68];
      v71 = type metadata accessor for WeatherAlert.Prominence(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
      *(_QWORD *)&v15[*(int *)(v67 + 40)] = *(_QWORD *)&v16[*(int *)(v67 + 40)];
      v25 = v15;
      v24 = v17;
      v26 = 13;
      goto LABEL_51;
    case 0xEu:
      v72 = type metadata accessor for SunriseSunsetViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v15, v16, v72);
      v25 = v15;
      v24 = v17;
      v26 = 14;
      goto LABEL_51;
    case 0x10u:
      v73 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v73;
      v74 = type metadata accessor for UVIndexComponentViewModel(0);
      v75 = *(int *)(v74 + 28);
      v76 = &v15[v75];
      v77 = &v16[v75];
      v78 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
      *(_QWORD *)&v15[*(int *)(v74 + 32)] = *(_QWORD *)&v16[*(int *)(v74 + 32)];
      v25 = v15;
      v24 = v17;
      v26 = 16;
      goto LABEL_51;
    case 0x12u:
      v79 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v79;
      v80 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v80;
      v81 = *((_OWORD *)v16 + 5);
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      *((_OWORD *)v15 + 5) = v81;
      v82 = *((_OWORD *)v16 + 7);
      *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
      *((_OWORD *)v15 + 7) = v82;
      v83 = *((_OWORD *)v16 + 9);
      *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
      *((_OWORD *)v15 + 9) = v83;
      *((_OWORD *)v15 + 10) = *((_OWORD *)v16 + 10);
      *((_QWORD *)v15 + 22) = *((_QWORD *)v16 + 22);
      *(_OWORD *)(v15 + 184) = *(_OWORD *)(v16 + 184);
      v84 = type metadata accessor for WindComponentViewModel(0);
      v85 = *(int *)(v84 + 68);
      v86 = &v15[v85];
      v87 = &v16[v85];
      v88 = type metadata accessor for WindComponentCompassViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
      *(_QWORD *)&v15[*(int *)(v84 + 72)] = *(_QWORD *)&v16[*(int *)(v84 + 72)];
      v25 = v15;
      v24 = v17;
      v26 = 18;
LABEL_51:
      swift_storeEnumTagMultiPayload(v25, v24, v26);
      break;
    default:
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      break;
  }
  *(_WORD *)&a1[v13[6]] = *(_WORD *)&a2[v13[6]];
  v129 = v13[7];
  v130 = &a1[v129];
  v131 = &a2[v129];
  v132 = type metadata accessor for LocationComponentAction(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132))
  {
    v133 = sub_1000BA294(&qword_100BDA950);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v131))
    {
      case 0u:
        v134 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v130, v131, v134);
        v135 = sub_1000BA294(&qword_100BC5FE8);
        v130[*(int *)(v135 + 48)] = v131[*(int *)(v135 + 48)];
        v136 = v130;
        v137 = v132;
        v138 = 0;
        goto LABEL_60;
      case 1u:
        v139 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v130, v131, v139);
        v136 = v130;
        v137 = v132;
        v138 = 1;
        goto LABEL_60;
      case 2u:
        v140 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v130, v131, v140);
        v141 = sub_1000BA294(&qword_100BC5FF8);
        v130[*(int *)(v141 + 48)] = v131[*(int *)(v141 + 48)];
        v136 = v130;
        v137 = v132;
        v138 = 2;
        goto LABEL_60;
      case 4u:
        *v130 = *v131;
        v142 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v143 = &v130[v142];
        v144 = &v131[v142];
        v145 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
        v136 = v130;
        v137 = v132;
        v138 = 4;
LABEL_60:
        swift_storeEnumTagMultiPayload(v136, v137, v138);
        break;
      default:
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
  }
  v146 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v147 = &a1[v146];
  v148 = &a2[v146];
  v149 = *((_OWORD *)v148 + 1);
  *(_OWORD *)v147 = *(_OWORD *)v148;
  *((_OWORD *)v147 + 1) = v149;
  *((_QWORD *)v147 + 4) = *((_QWORD *)v148 + 4);
  v150 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v151 = &a1[v150];
  v152 = &a2[v150];
  v153 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v151, v152, v153);
  v154 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v154] = *(_QWORD *)&a2[v154];
  v155 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  *(_OWORD *)&a1[v155] = *(_OWORD *)&a2[v155];
  v156 = a3[13];
  v157 = a3[14];
  v158 = &a1[v156];
  v159 = &a2[v156];
  v160 = v159[1];
  *v158 = *v159;
  v158[1] = v160;
  v161 = &a1[v157];
  v162 = &a2[v157];
  *(_OWORD *)v161 = *(_OWORD *)v162;
  v161[16] = v162[16];
  v163 = a3[15];
  v164 = a3[16];
  v165 = &a1[v163];
  v166 = &a2[v163];
  v167 = *(_OWORD *)v166;
  v165[16] = v166[16];
  *(_OWORD *)v165 = v167;
  v168 = &a1[v164];
  v169 = &a2[v164];
  *(_OWORD *)v168 = *(_OWORD *)v169;
  v168[16] = v169[16];
  v170 = a3[18];
  *(_OWORD *)&a1[a3[17]] = *(_OWORD *)&a2[a3[17]];
  v171 = &a1[v170];
  v172 = &a2[v170];
  v173 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v172) == 1)
  {
    v174 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v171, v172, v174);
    swift_storeEnumTagMultiPayload(v171, v173, 1);
  }
  else
  {
    memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
  }
  v175 = a3[19];
  v176 = a3[20];
  v177 = &a1[v175];
  v178 = &a2[v175];
  *(_QWORD *)v177 = *(_QWORD *)v178;
  v177[8] = v178[8];
  v179 = &a1[v176];
  v180 = &a2[v176];
  *(_QWORD *)v179 = *(_QWORD *)v180;
  v179[8] = v180[8];
  v181 = a3[21];
  v182 = &a1[v181];
  v183 = &a2[v181];
  v184 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v183) == 1)
  {
    v185 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v182, v183, v185);
    swift_storeEnumTagMultiPayload(v182, v184, 1);
  }
  else
  {
    memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
  }
  v186 = a3[22];
  v187 = a3[23];
  v188 = &a1[v186];
  v189 = &a2[v186];
  *(_QWORD *)v188 = *(_QWORD *)v189;
  v188[8] = v189[8];
  v190 = &a1[v187];
  v191 = &a2[v187];
  *(_QWORD *)v190 = *(_QWORD *)v191;
  v190[8] = v191[8];
  v192 = a3[24];
  v193 = a3[25];
  v194 = &a1[v192];
  v195 = &a2[v192];
  *(_QWORD *)v194 = *(_QWORD *)v195;
  v194[8] = v195[8];
  v196 = &a1[v193];
  v197 = &a2[v193];
  *(_QWORD *)v196 = *(_QWORD *)v197;
  v196[8] = v197[8];
  v198 = a3[26];
  v199 = a3[27];
  v200 = &a1[v198];
  v201 = &a2[v198];
  v200[8] = v201[8];
  *(_QWORD *)v200 = *(_QWORD *)v201;
  v202 = &a1[v199];
  v203 = &a2[v199];
  v202[8] = v203[8];
  *(_QWORD *)v202 = *(_QWORD *)v203;
  v204 = a3[28];
  v205 = &a1[v204];
  v206 = &a2[v204];
  v207 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v206) == 1)
  {
    *(_OWORD *)v205 = *(_OWORD *)v206;
    v205[16] = v206[16];
    v205[17] = v206[17];
    v205[18] = v206[18];
    v208 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v209 = &v205[v208];
    v210 = &v206[v208];
    v211 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v209, v210, v211);
    swift_storeEnumTagMultiPayload(v205, v207, 1);
  }
  else
  {
    memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
  }
  v212 = a3[30];
  *(_OWORD *)&a1[a3[29]] = *(_OWORD *)&a2[a3[29]];
  *(_OWORD *)&a1[v212] = *(_OWORD *)&a2[v212];
  return a1;
}

_BYTE *sub_100442EF4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _BYTE *v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  __int128 v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v278;
  char *v279;
  char *v280;
  char *v281;
  char *__src;
  char *__srca;
  int *v284;
  int *v285;
  uint64_t v286;
  int *v287;
  char *__dstb;
  char *__dst;
  void *__dsta;
  void *__dstc;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;

  if (a1 != a2)
  {
    sub_100441DDC((uint64_t)a1, type metadata accessor for LocationComponentHeaderViewModel);
    v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 3)
    {
      v7 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v9 = *(int *)(v8 + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload(a1, v6, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v13 = type metadata accessor for LocationComponentContainerViewModel(0);
  v14 = v13;
  if (a1 != a2)
  {
    v15 = *(int *)(v13 + 20);
    v16 = &a1[v15];
    v17 = &a2[v15];
    sub_100441DDC((uint64_t)&a1[v15], type metadata accessor for LocationComponentViewModel);
    v18 = type metadata accessor for LocationComponentViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v17))
    {
      case 1u:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        v19 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        v20 = v19[5];
        __dstb = &v16[v20];
        v292 = v18;
        v21 = &v17[v20];
        v22 = sub_1000BA294(&qword_100BC4E68);
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
        v23(__dstb, v21, v22);
        v23(&v16[v19[6]], &v17[v19[6]], v22);
        v23(&v16[v19[7]], &v17[v19[7]], v22);
        *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
        *(_OWORD *)&v16[v19[9]] = *(_OWORD *)&v17[v19[9]];
        v24 = v16;
        v25 = v292;
        v26 = 1;
        goto LABEL_53;
      case 2u:
        v293 = v18;
        v27 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v27;
        v28 = type metadata accessor for FeelsLikeComponentViewModel(0);
        v29 = *(int *)(v28 + 24);
        v30 = &v16[v29];
        v31 = &v17[v29];
        v32 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
        {
          v33 = sub_1000BA294(&qword_100BC3360);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
          v89 = *(int *)(v32 + 20);
          __dstc = (void *)v28;
          v90 = &v30[v89];
          v91 = &v31[v89];
          v92 = type metadata accessor for TemperatureScaleConfiguration(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
          v93 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(_QWORD *)&v90[v93[5]] = *(_QWORD *)&v91[v93[5]];
          *(_QWORD *)&v90[v93[6]] = *(_QWORD *)&v91[v93[6]];
          *(_QWORD *)&v90[v93[7]] = *(_QWORD *)&v91[v93[7]];
          *(_OWORD *)&v90[v93[8]] = *(_OWORD *)&v91[v93[8]];
          v90[v93[9]] = v91[v93[9]];
          v28 = (uint64_t)__dstc;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
        }
        v25 = v293;
        *(_OWORD *)&v16[*(int *)(v28 + 28)] = *(_OWORD *)&v17[*(int *)(v28 + 28)];
        v24 = v16;
        v26 = 2;
        goto LABEL_53;
      case 5u:
        v34 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v16, v17, v34);
        v35 = (int *)type metadata accessor for MapComponentViewModel(0);
        v36 = v35[5];
        v37 = &v16[v36];
        v38 = &v17[v36];
        v39 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        v40 = v35[6];
        __dst = &v16[v40];
        v41 = &v17[v40];
        v42 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
        {
          v43 = sub_1000BA294(&qword_100BC3460);
          memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v284 = v35;
          v285 = (int *)v42;
          v295 = v18;
          *(_OWORD *)__dst = *(_OWORD *)v41;
          v94 = *(int *)(v42 + 20);
          v279 = &__dst[v94];
          v95 = &v41[v94];
          v96 = type metadata accessor for Locale(0);
          __src = v41;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
          {
            v97 = sub_1000BA294(&qword_100BC3340);
            memcpy(v279, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v279, v95, v96);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v279, 0, 1, v96);
          }
          v103 = v285[6];
          v280 = &__dst[v103];
          v104 = &v41[v103];
          v105 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v280, v104, v105);
          v106 = v285[7];
          v107 = &__dst[v106];
          v108 = &__src[v106];
          v109 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
          {
            v110 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
          }
          else
          {
            v111 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v107, v108, v111);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
          }
          v112 = v285[8];
          v113 = &__dst[v112];
          v114 = &__src[v112];
          v115 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v114) == 1)
          {
            v116 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v113, v114, v116);
            swift_storeEnumTagMultiPayload(v113, v115, 1);
          }
          else
          {
            memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          }
          v117 = v285[9];
          v118 = &__dst[v117];
          v119 = (uint64_t)&__src[v117];
          v120 = type metadata accessor for WeatherDataOverrides(0);
          __srca = (char *)v119;
          v121 = _s7Weather24LocationCompositionStateOwet_0(v119, 1, v120);
          v18 = v295;
          v35 = v284;
          if (v121)
          {
            v122 = sub_1000BA294(&qword_100BC3350);
            memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
          }
          else
          {
            v278 = v120;
            v281 = v118;
            v123 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srca, 1, v123))
            {
              v124 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v118, __srca, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v118, __srca, v123);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v123);
            }
            v125 = *(int *)(v120 + 20);
            v126 = &v118[v125];
            v127 = &__srca[v125];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srca[v125], 1, v123))
            {
              v128 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v126, v127, v123);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v123);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v278);
            v35 = v284;
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v285);
        }
        *(_OWORD *)&v16[v35[7]] = *(_OWORD *)&v17[v35[7]];
        v24 = v16;
        v25 = v18;
        v26 = 5;
        goto LABEL_53;
      case 6u:
        v44 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v44;
        v16[32] = v17[32];
        *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
        v45 = (int *)type metadata accessor for MoonComponentViewModel(0);
        v46 = v45[7];
        v47 = &v16[v46];
        v48 = &v17[v46];
        v49 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        v16[v45[8]] = v17[v45[8]];
        *(_QWORD *)&v16[v45[9]] = *(_QWORD *)&v17[v45[9]];
        v24 = v16;
        v25 = v18;
        v26 = 6;
        goto LABEL_53;
      case 7u:
        v50 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v17) == 1)
        {
          __dsta = (void *)v50;
          v294 = v18;
          *(_OWORD *)v16 = *(_OWORD *)v17;
          v51 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v52 = v51[5];
          v53 = &v16[v52];
          v54 = &v17[v52];
          v55 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
          {
            v56 = sub_1000BA294(&qword_100BD4280);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
            v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
          }
          else
          {
            v98 = v53;
            v286 = (uint64_t)v53;
            v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
            v57(v98, v54, v55);
            _s7Weather24LocationCompositionStateOwst_0(v286, 0, 1, v55);
          }
          *(_OWORD *)&v16[v51[6]] = *(_OWORD *)&v17[v51[6]];
          v57(&v16[v51[7]], &v17[v51[7]], v55);
          v287 = v51;
          v99 = v51[8];
          v100 = &v16[v99];
          v101 = &v17[v99];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v17[v99], 1, v55))
          {
            v102 = sub_1000BA294(&qword_100BD4280);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
          }
          else
          {
            v57(v100, v101, v55);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v55);
          }
          v18 = v294;
          v16[v287[9]] = v17[v287[9]];
          swift_storeEnumTagMultiPayload(v16, __dsta, 1);
        }
        else
        {
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        v24 = v16;
        v25 = v18;
        v26 = 7;
        goto LABEL_53;
      case 8u:
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v58 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
        v59 = &v16[v58];
        v60 = &v17[v58];
        HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v59, v60, HourPrecipitationChartViewModel);
        v24 = v16;
        v25 = v18;
        v26 = 8;
        goto LABEL_53;
      case 9u:
        v62 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v16, v17, v62);
        v63 = type metadata accessor for NotificationsOptInComponentViewModel(0);
        v16[*(int *)(v63 + 20)] = v17[*(int *)(v63 + 20)];
        v24 = v16;
        v25 = v18;
        v26 = 9;
        goto LABEL_53;
      case 0xBu:
        v64 = type metadata accessor for PressureTrend(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v16, v17, v64);
        v65 = (int *)type metadata accessor for PressureComponentViewModel(0);
        *(_OWORD *)&v16[v65[5]] = *(_OWORD *)&v17[v65[5]];
        *(_OWORD *)&v16[v65[6]] = *(_OWORD *)&v17[v65[6]];
        *(_OWORD *)&v16[v65[7]] = *(_OWORD *)&v17[v65[7]];
        *(_QWORD *)&v16[v65[8]] = *(_QWORD *)&v17[v65[8]];
        *(_OWORD *)&v16[v65[9]] = *(_OWORD *)&v17[v65[9]];
        v24 = v16;
        v25 = v18;
        v26 = 11;
        goto LABEL_53;
      case 0xDu:
        v66 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v66;
        *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
        *(_OWORD *)(v16 + 40) = *(_OWORD *)(v17 + 40);
        *(_OWORD *)(v16 + 56) = *(_OWORD *)(v17 + 56);
        v67 = type metadata accessor for SevereAlertComponentViewModel(0);
        v68 = *(int *)(v67 + 36);
        v69 = &v16[v68];
        v70 = &v17[v68];
        v71 = type metadata accessor for WeatherAlert.Prominence(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
        *(_QWORD *)&v16[*(int *)(v67 + 40)] = *(_QWORD *)&v17[*(int *)(v67 + 40)];
        v24 = v16;
        v25 = v18;
        v26 = 13;
        goto LABEL_53;
      case 0xEu:
        v72 = type metadata accessor for SunriseSunsetViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v16, v17, v72);
        v24 = v16;
        v25 = v18;
        v26 = 14;
        goto LABEL_53;
      case 0x10u:
        v73 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v73;
        v74 = type metadata accessor for UVIndexComponentViewModel(0);
        v75 = *(int *)(v74 + 28);
        v76 = &v16[v75];
        v77 = &v17[v75];
        v78 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
        *(_QWORD *)&v16[*(int *)(v74 + 32)] = *(_QWORD *)&v17[*(int *)(v74 + 32)];
        v24 = v16;
        v25 = v18;
        v26 = 16;
        goto LABEL_53;
      case 0x12u:
        v79 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v79;
        v80 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v80;
        v81 = *((_OWORD *)v17 + 5);
        *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
        *((_OWORD *)v16 + 5) = v81;
        v82 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v82;
        v83 = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
        *((_OWORD *)v16 + 9) = v83;
        *((_OWORD *)v16 + 10) = *((_OWORD *)v17 + 10);
        *((_QWORD *)v16 + 22) = *((_QWORD *)v17 + 22);
        *(_OWORD *)(v16 + 184) = *(_OWORD *)(v17 + 184);
        v84 = type metadata accessor for WindComponentViewModel(0);
        v85 = *(int *)(v84 + 68);
        v86 = &v16[v85];
        v87 = &v17[v85];
        v88 = type metadata accessor for WindComponentCompassViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
        *(_QWORD *)&v16[*(int *)(v84 + 72)] = *(_QWORD *)&v17[*(int *)(v84 + 72)];
        v24 = v16;
        v25 = v18;
        v26 = 18;
LABEL_53:
        swift_storeEnumTagMultiPayload(v24, v25, v26);
        break;
      default:
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        break;
    }
  }
  *(_WORD *)&a1[*(int *)(v14 + 24)] = *(_WORD *)&a2[*(int *)(v14 + 24)];
  v129 = *(int *)(v14 + 28);
  v130 = &a1[v129];
  v131 = &a2[v129];
  v132 = type metadata accessor for LocationComponentAction(0);
  v133 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v132);
  v134 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132);
  if (v133)
  {
    if (!v134)
    {
      switch(swift_getEnumCaseMultiPayload(v131))
      {
        case 0u:
          v135 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v130, v131, v135);
          v136 = sub_1000BA294(&qword_100BC5FE8);
          v130[*(int *)(v136 + 48)] = v131[*(int *)(v136 + 48)];
          v137 = v130;
          v138 = v132;
          v139 = 0;
          goto LABEL_69;
        case 1u:
          v146 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v130, v131, v146);
          v137 = v130;
          v138 = v132;
          v139 = 1;
          goto LABEL_69;
        case 2u:
          v147 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v130, v131, v147);
          v148 = sub_1000BA294(&qword_100BC5FF8);
          v130[*(int *)(v148 + 48)] = v131[*(int *)(v148 + 48)];
          v137 = v130;
          v138 = v132;
          v139 = 2;
          goto LABEL_69;
        case 4u:
          *v130 = *v131;
          v149 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v150 = &v130[v149];
          v151 = &v131[v149];
          v152 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v150, v151, v152);
          v137 = v130;
          v138 = v132;
          v139 = 4;
LABEL_69:
          swift_storeEnumTagMultiPayload(v137, v138, v139);
          break;
        default:
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
      goto LABEL_76;
    }
    goto LABEL_60;
  }
  if (v134)
  {
    sub_100441DDC((uint64_t)v130, type metadata accessor for LocationComponentAction);
LABEL_60:
    v140 = *(_QWORD *)(sub_1000BA294(&qword_100BDA950) - 8);
LABEL_61:
    memcpy(v130, v131, *(_QWORD *)(v140 + 64));
    goto LABEL_76;
  }
  if (a1 != a2)
  {
    sub_100441DDC((uint64_t)v130, type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload(v131))
    {
      case 0u:
        v141 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v130, v131, v141);
        v142 = sub_1000BA294(&qword_100BC5FE8);
        v130[*(int *)(v142 + 48)] = v131[*(int *)(v142 + 48)];
        v143 = v130;
        v144 = v132;
        v145 = 0;
        break;
      case 1u:
        v153 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v130, v131, v153);
        v143 = v130;
        v144 = v132;
        v145 = 1;
        break;
      case 2u:
        v154 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v130, v131, v154);
        v155 = sub_1000BA294(&qword_100BC5FF8);
        v130[*(int *)(v155 + 48)] = v131[*(int *)(v155 + 48)];
        v143 = v130;
        v144 = v132;
        v145 = 2;
        break;
      case 4u:
        *v130 = *v131;
        v156 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v157 = &v130[v156];
        v158 = &v131[v156];
        v159 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
        v143 = v130;
        v144 = v132;
        v145 = 4;
        break;
      default:
        v140 = *(_QWORD *)(v132 - 8);
        goto LABEL_61;
    }
    swift_storeEnumTagMultiPayload(v143, v144, v145);
  }
LABEL_76:
  v160 = a3[5];
  v161 = (uint64_t *)&a1[v160];
  v162 = (uint64_t *)&a2[v160];
  v163 = v162[1];
  v164 = *v161;
  *v161 = *v162;
  swift_unknownObjectRelease(v164);
  v161[1] = v163;
  v165 = a3[6];
  v166 = &a1[v165];
  v167 = &a2[v165];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&a1[v165]);
  v168 = *((_OWORD *)v167 + 1);
  *(_OWORD *)v166 = *(_OWORD *)v167;
  *((_OWORD *)v166 + 1) = v168;
  *((_QWORD *)v166 + 4) = *((_QWORD *)v167 + 4);
  v169 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v170 = &a1[v169];
  v171 = &a2[v169];
  v172 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 40))(v170, v171, v172);
  v173 = a3[9];
  v174 = *(_QWORD *)&a1[v173];
  *(_QWORD *)&a1[v173] = *(_QWORD *)&a2[v173];
  swift_release(v174);
  v175 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  a1[v175] = a2[v175];
  v176 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  v177 = &a1[v176];
  v178 = &a2[v176];
  *(_OWORD *)v177 = *(_OWORD *)v178;
  v177[16] = v178[16];
  v179 = *((_QWORD *)v177 + 3);
  *((_QWORD *)v177 + 3) = *((_QWORD *)v178 + 3);
  swift_release(v179);
  v180 = a3[14];
  v181 = &a1[v180];
  v182 = &a2[v180];
  v183 = v182[16];
  v184 = *(_QWORD *)v181;
  v185 = *((_QWORD *)v181 + 1);
  *(_OWORD *)v181 = *(_OWORD *)v182;
  v181[16] = v183;
  sub_1000BF398(v184, v185);
  v186 = a3[15];
  v187 = &a1[v186];
  v188 = &a2[v186];
  v189 = v188[16];
  v190 = *(_QWORD *)v187;
  v191 = *((_QWORD *)v187 + 1);
  *(_OWORD *)v187 = *(_OWORD *)v188;
  v187[16] = v189;
  sub_1000BF398(v190, v191);
  v192 = a3[16];
  v193 = &a1[v192];
  v194 = &a2[v192];
  v195 = v194[16];
  v196 = *(_QWORD *)v193;
  v197 = *((_QWORD *)v193 + 1);
  *(_OWORD *)v193 = *(_OWORD *)v194;
  v193[16] = v195;
  sub_1000BF398(v196, v197);
  v198 = a3[17];
  v199 = &a1[v198];
  v200 = &a2[v198];
  *v199 = *v200;
  v201 = *((_QWORD *)v199 + 1);
  *((_QWORD *)v199 + 1) = *((_QWORD *)v200 + 1);
  swift_release(v201);
  if (a1 != a2)
  {
    v202 = a3[18];
    v203 = &a1[v202];
    v204 = &a2[v202];
    sub_100021A14((uint64_t)&a1[v202], &qword_100BC2908);
    v205 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v204) == 1)
    {
      v206 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v203, v204, v206);
      swift_storeEnumTagMultiPayload(v203, v205, 1);
    }
    else
    {
      memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
    }
  }
  v207 = a3[19];
  v208 = &a1[v207];
  v209 = &a2[v207];
  v210 = *(_QWORD *)v209;
  LOBYTE(v209) = v209[8];
  v211 = *(_QWORD *)v208;
  v212 = v208[8];
  *(_QWORD *)v208 = v210;
  v208[8] = (char)v209;
  sub_1000B15F8(v211, v212);
  v213 = a3[20];
  v214 = &a1[v213];
  v215 = &a2[v213];
  v216 = *(_QWORD *)v215;
  LOBYTE(v215) = v215[8];
  v217 = *(_QWORD *)v214;
  v218 = v214[8];
  *(_QWORD *)v214 = v216;
  v214[8] = (char)v215;
  sub_1000B15F8(v217, v218);
  if (a1 != a2)
  {
    v219 = a3[21];
    v220 = &a1[v219];
    v221 = &a2[v219];
    sub_100021A14((uint64_t)&a1[v219], &qword_100BC37D8);
    v222 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v221) == 1)
    {
      v223 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v220, v221, v223);
      swift_storeEnumTagMultiPayload(v220, v222, 1);
    }
    else
    {
      memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
    }
  }
  v224 = a3[22];
  v225 = &a1[v224];
  v226 = &a2[v224];
  v227 = *(_QWORD *)v226;
  LOBYTE(v226) = v226[8];
  v228 = *(_QWORD *)v225;
  v229 = v225[8];
  *(_QWORD *)v225 = v227;
  v225[8] = (char)v226;
  sub_1000B15F8(v228, v229);
  v230 = a3[23];
  v231 = &a1[v230];
  v232 = &a2[v230];
  v233 = *(_QWORD *)v232;
  LOBYTE(v232) = v232[8];
  v234 = *(_QWORD *)v231;
  v235 = v231[8];
  *(_QWORD *)v231 = v233;
  v231[8] = (char)v232;
  sub_1000B15F8(v234, v235);
  v236 = a3[24];
  v237 = &a1[v236];
  v238 = &a2[v236];
  v239 = *(_QWORD *)v238;
  LOBYTE(v238) = v238[8];
  v240 = *(_QWORD *)v237;
  v241 = v237[8];
  *(_QWORD *)v237 = v239;
  v237[8] = (char)v238;
  sub_1000B15F8(v240, v241);
  v242 = a3[25];
  v243 = &a1[v242];
  v244 = &a2[v242];
  v245 = *(_QWORD *)v244;
  LOBYTE(v244) = v244[8];
  v246 = *(_QWORD *)v243;
  v247 = v243[8];
  *(_QWORD *)v243 = v245;
  v243[8] = (char)v244;
  sub_1000B15F8(v246, v247);
  v248 = a3[26];
  v249 = &a1[v248];
  v250 = &a2[v248];
  v251 = *(_QWORD *)v250;
  LOBYTE(v250) = v250[8];
  v252 = *(_QWORD *)v249;
  v253 = v249[8];
  *(_QWORD *)v249 = v251;
  v249[8] = (char)v250;
  sub_1000B15F8(v252, v253);
  v254 = a3[27];
  v255 = &a1[v254];
  v256 = &a2[v254];
  v257 = *(_QWORD *)v256;
  LOBYTE(v256) = v256[8];
  v258 = *(_QWORD *)v255;
  v259 = v255[8];
  *(_QWORD *)v255 = v257;
  v255[8] = (char)v256;
  sub_1000B15F8(v258, v259);
  if (a1 != a2)
  {
    v260 = a3[28];
    v261 = &a1[v260];
    v262 = &a2[v260];
    sub_100021A14((uint64_t)&a1[v260], &qword_100BC37E0);
    v263 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v262) == 1)
    {
      *(_OWORD *)v261 = *(_OWORD *)v262;
      v261[16] = v262[16];
      v261[17] = v262[17];
      v261[18] = v262[18];
      v264 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v265 = &v261[v264];
      v266 = &v262[v264];
      v267 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(v265, v266, v267);
      swift_storeEnumTagMultiPayload(v261, v263, 1);
    }
    else
    {
      memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
    }
  }
  v268 = a3[29];
  v269 = &a1[v268];
  v270 = &a2[v268];
  v271 = *(_QWORD *)&a1[v268];
  *(_QWORD *)&a1[v268] = *(_QWORD *)&a2[v268];
  swift_release(v271);
  *((_QWORD *)v269 + 1) = *((_QWORD *)v270 + 1);
  v272 = a3[30];
  v273 = &a1[v272];
  v274 = &a2[v272];
  v275 = *(_QWORD *)&a1[v272];
  *(_QWORD *)&a1[v272] = *v274;
  swift_release(v275);
  v276 = *((_QWORD *)v273 + 1);
  *((_QWORD *)v273 + 1) = v274[1];
  swift_release(v276);
  return a1;
}

uint64_t sub_100444324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100444330);
}

void sub_100444330(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1000878BC();
  sub_100088FF0();
  if (v10)
  {
    v6 = sub_1000890E8();
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      sub_10003BCA4(*(_QWORD *)(a1 + a3[5]));
      sub_100079F70();
      return;
    }
    sub_100098AA0();
    sub_100088FF0();
    if (v10)
    {
      v7 = v8;
      v9 = a3[8];
    }
    else
    {
      sub_1000BA294(&qword_100BC3800);
      sub_100088FF0();
      if (v10)
      {
        v7 = v11;
        v9 = a3[18];
      }
      else
      {
        sub_1000BA294((uint64_t *)&unk_100C09CA0);
        sub_100088FF0();
        if (v12)
        {
          v7 = v13;
          v9 = a3[21];
        }
        else
        {
          v7 = sub_1000BA294(&qword_100BC3808);
          v9 = a3[28];
        }
      }
    }
    v6 = a1 + v9;
  }
  sub_1000B250C(v6, a2, v7);
}

uint64_t sub_1004443FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100444408);
}

void sub_100444408(uint64_t a1, int a2, int a3, uint64_t a4)
{
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1000878BC();
  sub_10009D2E8();
  if (!v8)
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      sub_100079F70();
      return;
    }
    sub_100098AA0();
    sub_10009D2E8();
    if (!v8)
    {
      sub_1000BA294(&qword_100BC3800);
      sub_10009D2E8();
      if (!v8)
      {
        sub_1000BA294((uint64_t *)&unk_100C09CA0);
        sub_10009D2E8();
        if (!v9)
          sub_1000BA294(&qword_100BC3808);
      }
    }
  }
  sub_100098D08();
  sub_1000987C4(v10, v11, v12, v13);
}

uint64_t assignWithCopy for CollisionModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  sub_10008D47C(v5, v6);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v6;
  sub_1000B15F8(v7, v8);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release(v9);
  return a1;
}

void *initializeWithTake for SunriseSunsetMonthlyAverageRowViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for CollisionModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v4;
  sub_1000B15F8(v5, v6);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v7);
  return a1;
}

uint64_t sub_100444620(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4DC8, 1);
}

unint64_t sub_100444630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2150;
  if (!qword_100BE2150)
  {
    v1 = sub_100075EB0(&qword_100BE2140);
    sub_10007AB60((uint64_t)&unk_100BE2158);
    sub_10007AB60((uint64_t)&unk_100BE2160);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2150);
  }
  return result;
}

_QWORD *sub_1004446CC(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

unint64_t sub_1004446F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2190;
  if (!qword_100BE2190)
  {
    v1 = sub_100075EB0(&qword_100BE2188);
    sub_100444778();
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2190);
  }
  return result;
}

unint64_t sub_100444778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2198;
  if (!qword_100BE2198)
  {
    v1 = sub_100075EB0(&qword_100BE2178);
    sub_1004447E4();
    sub_100444904();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2198);
  }
  return result;
}

unint64_t sub_1004447E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE21A0;
  if (!qword_100BE21A0)
  {
    v1 = sub_100075EB0(&qword_100BE21A8);
    sub_100444868();
    sub_10007AB60((uint64_t)&unk_100BE21D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE21A0);
  }
  return result;
}

unint64_t sub_100444868()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE21B0;
  if (!qword_100BE21B0)
  {
    v1 = sub_100075EB0(&qword_100BE21B8);
    sub_10007AB60((uint64_t)&unk_100BE21C0);
    sub_10007AB60((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE21B0);
  }
  return result;
}

unint64_t sub_100444904()
{
  unint64_t result;

  result = qword_100BE21E0;
  if (!qword_100BE21E0)
  {
    result = swift_getWitnessTable(&unk_1009A0980, &type metadata for TipOverlayWidthModifier);
    atomic_store(result, (unint64_t *)&qword_100BE21E0);
  }
  return result;
}

void sub_100444940()
{
  sub_10034F438();
  sub_10004A298();
}

void sub_100444980(void *__src@<X0>, double *a2@<X8>)
{
  _BYTE __dst[72];

  memcpy(__dst, __src, sizeof(__dst));
  *a2 = sub_1007F9520();
}

unint64_t sub_1004449C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2218;
  if (!qword_100BE2218)
  {
    v1 = sub_100075EB0(&qword_100BE2220);
    sub_100444A2C();
    sub_100444BE0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2218);
  }
  return result;
}

unint64_t sub_100444A2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2228;
  if (!qword_100BE2228)
  {
    v1 = sub_100075EB0(&qword_100BE2230);
    sub_100444A98();
    sub_100444B3C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2228);
  }
  return result;
}

unint64_t sub_100444A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2238;
  if (!qword_100BE2238)
  {
    v1 = sub_100075EB0(&qword_100BE2240);
    sub_10007AB60((uint64_t)&unk_100BE2248);
    sub_10007AB60((uint64_t)&unk_100BE2258);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2238);
  }
  return result;
}

unint64_t sub_100444B3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2268;
  if (!qword_100BE2268)
  {
    v1 = sub_100075EB0(&qword_100BE2270);
    sub_10007AB60((uint64_t)&unk_100BE2278);
    sub_10007AB60((uint64_t)&unk_100BE2288);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2268);
  }
  return result;
}

unint64_t sub_100444BE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2298;
  if (!qword_100BE2298)
  {
    v1 = sub_100075EB0(&qword_100BE22A0);
    sub_100444C4C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2298);
  }
  return result;
}

unint64_t sub_100444C4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE22A8;
  if (!qword_100BE22A8)
  {
    v1 = sub_100075EB0(&qword_100BE22B0);
    sub_10007AB60((uint64_t)&unk_100BE22B8);
    sub_10007AB60((uint64_t)&unk_100BE22C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE22A8);
  }
  return result;
}

void sub_100444CF0()
{
  uint64_t *v0;

  *v0 = sub_10045B99C();
  sub_10004A298();
}

unint64_t sub_100444D10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_100BE22D8;
  if (!qword_100BE22D8)
  {
    v1 = sub_100075EB0(&qword_100BE2208);
    v2[0] = sub_100075EB0(&qword_100BE21F8);
    v2[1] = &type metadata for Color;
    v2[2] = sub_10045016C((uint64_t)&unk_100BE2210);
    v2[3] = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.tipBackground<A>(_:)>>, 1);
    sub_10007AB60((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE22D8);
  }
  return result;
}

unint64_t sub_100444E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2348;
  if (!qword_100BE2348)
  {
    v1 = sub_100075EB0(&qword_100BE2340);
    sub_100444E7C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2348);
  }
  return result;
}

unint64_t sub_100444E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2350;
  if (!qword_100BE2350)
  {
    v1 = sub_100075EB0(&qword_100BE2338);
    sub_100444EE8();
    sub_1003C0CA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2350);
  }
  return result;
}

unint64_t sub_100444EE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE338;
  if (!qword_100BDE338)
  {
    v1 = sub_100075EB0(&qword_100BDE330);
    sub_1003C0CA4();
    sub_1003BF570();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE338);
  }
  return result;
}

void sub_100444F58(char a1)
{
  uint64_t v2;

  type metadata accessor for LocationComponentContainerView(0);
  sub_1000987F4();
  sub_10042CC94(a1, v2);
}

uint64_t sub_100444F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = (int *)type metadata accessor for LocationComponentContainerView(0);
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v61 = v0;
  v62 = (v6 + 16) & ~v6;
  v8 = (_QWORD *)(v0 + v62);
  v9 = sub_1000C21DC();
  switch(sub_100098814(v9))
  {
    case 0u:
    case 4u:
      sub_10009BF48();
      sub_1000D9DD0();
      v10 = v8 + 6;
      goto LABEL_6;
    case 1u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      v10 = v8 + 10;
      goto LABEL_6;
    case 2u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      sub_100094FD4();
      sub_1000F3E40();
      v10 = v8 + 14;
      goto LABEL_6;
    case 3u:
      v11 = sub_1000D12B0();
      sub_1000987E0(v11);
      v12 = (char *)v8 + *(int *)(sub_1000D09EC() + 20);
      sub_1000C0DF8();
      sub_1000952D8();
      v10 = v12 + 48;
LABEL_6:
      sub_10045B638(v10);
      break;
    default:
      break;
  }
  sub_1000878BC();
  v13 = sub_1000DAC78();
  switch(sub_100094FAC(v13))
  {
    case 0u:
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      goto LABEL_41;
    case 1u:
      sub_100321DEC();
      v14 = (int *)sub_10009C20C();
      v15 = v1 + v14[5];
      sub_1000BA294(&qword_100BC4E68);
      sub_1000BE7AC(v15);
      sub_1000BE7AC(v1 + v14[6]);
      sub_1000BE7AC(v1 + v14[7]);
      v16 = v14[8];
      goto LABEL_33;
    case 2u:
      v60 = v7;
      sub_1000B3B94();
      sub_1000CE558();
      v17 = sub_10011E210();
      v18 = sub_10009BD00();
      if (!sub_1000C0DE4(v18))
      {
        sub_1000C48E0();
        v19 = sub_10009DF08();
        sub_10009BF1C(v19);
        v20 = sub_1000C1494();
        sub_1000BA548(v2 + *(int *)(v20 + 32));
      }
      v21 = *(int *)(v17 + 28);
      goto LABEL_66;
    case 3u:
    case 4u:
      goto LABEL_41;
    case 5u:
      v60 = v7;
      v22 = sub_1000B4608();
      sub_1000989A0(v22);
      v23 = sub_10045B614();
      v24 = v1 + *(int *)(v23 + 20);
      v25 = sub_1000992C4();
      sub_10009BF1C(v25);
      v26 = sub_10011E47C();
      if (!sub_1000C0DE4(v26))
      {
        sub_1000C48E0();
        v27 = v24 + *(int *)(v3 + 20);
        v28 = sub_1000988FC();
        if (!sub_10009D53C(v27))
          sub_1000BE774(v27, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8));
        v29 = sub_10003BD50();
        sub_1000BA9C0(v29);
        sub_10045B8A0();
        v30 = sub_1000BA294(&qword_100BC3348);
        if (!sub_10009DB00(v30))
        {
          v31 = sub_100098778();
          sub_1000BA9C0(v31);
        }
        v32 = sub_1000FDA30();
        v33 = sub_10009ED24(v32);
        if (v33 == 1)
        {
          v58 = sub_10011E384();
          sub_1000BA9C0(v58);
        }
        else if (!v33)
        {
          sub_10009C0F0();
        }
        v59 = sub_1000B2EF8();
        if (!sub_1000C0DE4(v59))
        {
          sub_100098778();
          if (!sub_10009D53C(v24))
            sub_1000CD75C();
          if (!sub_10009D53C(v24 + *(int *)(v3 + 20)))
            sub_1000CD75C();
        }
      }
      v21 = *(int *)(v23 + 28);
LABEL_66:
      sub_1000999DC(v21);
      v7 = v60;
      break;
    case 6u:
      sub_1000B3B94();
      sub_10045B798();
      if (!v37)
        sub_10045B6F8(v34, v35, v36);
      sub_1000D1E34();
      sub_10011E0E8();
      v38 = sub_100098778();
      goto LABEL_36;
    case 7u:
      v39 = sub_1000C21E4();
      if (sub_100094FAC(v39) == 1)
      {
        sub_1000B3B94();
        v40 = (int *)sub_10004A364();
        v41 = v1 + v40[5];
        v42 = sub_10009896C();
        if (!sub_10009D53C(v41))
          sub_1000BE774(v41, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8));
        sub_1000999DC(v40[6]);
        sub_1000DA540();
        v43 = v1 + v40[8];
        if (!sub_10009D53C(v43))
          sub_1000951E8(v43);
      }
      break;
    case 8u:
      sub_1000B3B94();
      sub_10011E2F4();
      v38 = sub_1000ED298();
      goto LABEL_36;
    case 9u:
      v38 = sub_1000992C4();
      goto LABEL_36;
    case 0xAu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      goto LABEL_41;
    case 0xBu:
      v44 = sub_1000DF640();
      sub_1000989A0(v44);
      v45 = (int *)sub_10011E25C();
      sub_1000999DC(v45[5]);
      sub_1000999DC(v45[6]);
      v16 = v45[7];
LABEL_33:
      sub_1000999DC(v16);
      sub_10045B6E8();
      goto LABEL_41;
    case 0xDu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_10045B6E0();
      sub_10009C890();
      sub_10045B6D8();
      sub_10009EFBC();
      v38 = sub_1000FC4D4();
      goto LABEL_36;
    case 0xEu:
      v38 = sub_10045B61C();
LABEL_36:
      sub_1000989A0(v38);
      break;
    case 0xFu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10009C824();
      goto LABEL_41;
    case 0x10u:
      sub_1000CE558();
      sub_10009ED94();
      v46 = sub_1000D12B0();
      sub_10009BF1C(v46);
      goto LABEL_41;
    case 0x11u:
      sub_1000B3B94();
      sub_1000CE558();
      goto LABEL_41;
    case 0x12u:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10045B81C();
      sub_10011DF78();
      v47 = sub_1000DC068();
      sub_10009BF1C(v47);
LABEL_41:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v48 = sub_100095158();
  if (!sub_10009E638(v48))
  {
    switch(sub_10045B7E4())
    {
      case 0u:
        v49 = sub_10009896C();
        goto LABEL_48;
      case 1u:
        v49 = sub_1000B4608();
        goto LABEL_48;
      case 2u:
        v49 = sub_1000D9588();
        goto LABEL_48;
      case 4u:
        sub_1000BA294(&qword_100BC5FF0);
        v49 = sub_1000992C4();
LABEL_48:
        sub_1000B2568(v49);
        break;
      default:
        break;
    }
  }
  sub_10009DE64();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)v8 + v4[6]));
  v50 = sub_100098AA0();
  sub_1000B2568(v50);
  sub_1000DC924(v4[9]);
  sub_10045B674(v4[13]);
  sub_1000DC3D8();
  v51 = sub_1000BA294(&qword_100BC2908);
  if (sub_1000952AC(v51) == 1)
  {
    v52 = sub_1000E7C40();
    sub_1000B2568(v52);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_10011046C();
  v53 = sub_1000BA294(&qword_100BC37D8);
  if (sub_1000952AC(v53) == 1)
  {
    v54 = sub_10009EE9C();
    sub_1000B2568(v54);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_1000C15A4();
  v55 = sub_1000BA294(&qword_100BC37E0);
  if (sub_1000952AC(v55) == 1)
  {
    sub_10009E908();
    v56 = sub_100099998();
    sub_1000B2568(v56);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_1000DC924(v4[29]);
  sub_1000C6DD4();
  sub_10009C7AC();
  return swift_deallocObject(v61, v62 + v7, v6 | 7);
}

void sub_1004455D0()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for LocationComponentContainerView(0);
  v0 = sub_10009DACC();
  sub_10042D924(v0, v1);
}

uint64_t sub_1004455F8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __n128 v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = (int *)sub_10045B80C();
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v78 = *(_QWORD *)(v3 + 64);
  v5 = type metadata accessor for DateInterval(0);
  v6 = *(_QWORD *)(v5 - 8);
  v77 = *(unsigned __int8 *)(v6 + 80);
  v76 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v79 = (v4 + 32) & ~v4;
  v7 = (_QWORD *)(v0 + v79);
  v8 = sub_1000C21DC();
  switch(sub_1000952AC(v8))
  {
    case 0u:
    case 4u:
      sub_1000C0DF8();
      sub_1000952D8();
      v9 = v7 + 6;
      goto LABEL_6;
    case 1u:
      sub_1000C0DF8();
      sub_1000952D8();
      sub_10009E4AC();
      sub_10045B84C();
      v9 = v7 + 10;
      goto LABEL_6;
    case 2u:
      sub_1000C0DF8();
      sub_1000952D8();
      sub_10009E4AC();
      sub_10045B84C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v7 + 14;
      goto LABEL_6;
    case 3u:
      v10 = sub_1000D12B0();
      sub_1000B2568(v10);
      v11 = (char *)v7 + *(int *)(sub_1000D09EC() + 20);
      sub_1000B3B94();
      sub_1000CE558();
      v9 = v11 + 48;
LABEL_6:
      sub_10045B638(v9);
      break;
    default:
      break;
  }
  v12 = sub_1000878BC();
  v13 = (char *)v7 + *(int *)(v12 + 20);
  v14 = sub_100117398();
  switch(sub_10009ED24(v14))
  {
    case 0u:
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      sub_10045B66C();
      goto LABEL_41;
    case 1u:
      swift_bridgeObjectRelease();
      v15 = (int *)sub_10009C20C();
      v71 = v6;
      v16 = v5;
      v17 = &v13[v15[5]];
      v18 = sub_1000BA294(&qword_100BC4E68);
      v19 = v17;
      v5 = v16;
      v6 = v71;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v19, v18);
      sub_10045B8F4(v15[6]);
      sub_10045B8F4(v15[7]);
      v20 = v15[8];
      goto LABEL_33;
    case 2u:
      v73 = v4;
      v21 = v5;
      sub_10009C0F0();
      sub_1000DB2A8();
      v22 = sub_10011E210();
      v23 = &v13[*(int *)(v22 + 24)];
      v24 = sub_10009DD94();
      if (!sub_1000B4988(v24))
      {
        sub_10009C0D4();
        v25 = &v23[*(int *)(v1 + 20)];
        v26 = sub_10011E004();
        sub_1000BC1D4(v26);
        v27 = sub_1000C1494();
        sub_1000BA548((uint64_t)&v25[*(int *)(v27 + 32)]);
      }
      sub_1000BA548((uint64_t)&v13[*(int *)(v22 + 28)]);
      v5 = v21;
      v4 = v73;
      break;
    case 3u:
    case 4u:
      goto LABEL_41;
    case 5u:
      v72 = v5;
      v74 = v4;
      v28 = sub_1000B4608();
      sub_1000BA9C0(v28);
      v29 = sub_10045B614();
      v30 = sub_1000992C4();
      sub_10009BF1C(v30);
      v70 = v29;
      v31 = &v13[*(int *)(v29 + 24)];
      v32 = sub_1000C2148();
      if (!sub_1000B4988(v32))
      {
        sub_10009C0D4();
        v33 = (uint64_t)&v31[*(int *)(v1 + 20)];
        v34 = sub_1000988FC();
        if (!sub_1000952CC(v33))
          sub_100098B40(v33, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8));
        v35 = sub_1000B2F08();
        sub_10009BF1C(v35);
        v36 = sub_1000BA294(&qword_100BC3348);
        if (!sub_10045B824(v36))
        {
          v37 = sub_100098778();
          sub_10009BF1C(v37);
        }
        v38 = sub_10007A178();
        v39 = sub_10045B8C8(v38);
        if (v39 == 1)
        {
          v67 = sub_10011E384();
          sub_10009BF1C(v67);
        }
        else if (!v39)
        {
          sub_1000C48E0();
        }
        v68 = (uint64_t)&v31[*(int *)(v1 + 36)];
        v69 = sub_1000B2FFC();
        if (!sub_1000B4988(v69))
        {
          sub_100098778();
          if (!sub_1000952CC(v68))
            sub_1000890F4();
          if (!sub_1000952CC(v68 + *(int *)(v1 + 20)))
            sub_1000890F4();
        }
      }
      sub_1000BA548((uint64_t)&v13[*(int *)(v70 + 28)]);
      v5 = v72;
      v4 = v74;
      break;
    case 6u:
      sub_10009C0F0();
      v40 = v13[32];
      if (v40 != 255)
        sub_100121E04(*((_QWORD *)v13 + 2), *((_QWORD *)v13 + 3), v40);
      sub_10007A044();
      sub_10011E0E8();
      v41 = sub_100098778();
      goto LABEL_36;
    case 7u:
      v42 = sub_1000C21E4();
      if (sub_10009ED24(v42) == 1)
      {
        v75 = v4;
        v43 = v5;
        sub_10009C0F0();
        v44 = (int *)sub_10004A364();
        v45 = (uint64_t)&v13[v44[5]];
        v46 = sub_10009896C();
        if (!sub_1000952CC(v45))
          sub_100098B40(v45, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8));
        sub_1000BA548((uint64_t)&v13[v44[6]]);
        sub_10011E6C4((uint64_t)&v13[v44[7]]);
        v47 = (uint64_t)&v13[v44[8]];
        v5 = v43;
        v4 = v75;
        if (!sub_1000952CC(v47))
          sub_10011E6C4(v47);
      }
      break;
    case 8u:
      sub_10009C0F0();
      sub_10011E2F4();
      v41 = sub_10011DFA8();
      goto LABEL_36;
    case 9u:
      v41 = sub_1000992C4();
      goto LABEL_36;
    case 0xAu:
      sub_10009C0F0();
      sub_1000DB2A8();
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      goto LABEL_41;
    case 0xBu:
      v48 = sub_1000DF640();
      sub_1000BA9C0(v48);
      v49 = (int *)sub_10011E25C();
      sub_1000BA548((uint64_t)&v13[v49[5]]);
      sub_1000BA548((uint64_t)&v13[v49[6]]);
      v20 = v49[7];
LABEL_33:
      sub_1000BA548((uint64_t)&v13[v20]);
      goto LABEL_41;
    case 0xDu:
      sub_10009C0F0();
      sub_1000DB2A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10009EFBC();
      v41 = sub_1000BBFE4();
      goto LABEL_36;
    case 0xEu:
      v41 = sub_10045B61C();
LABEL_36:
      sub_1000BA9C0(v41);
      break;
    case 0xFu:
      sub_10009C0F0();
      sub_1000DB2A8();
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      sub_10045B66C();
      sub_10045B7DC();
      sub_10045B7C0();
      sub_10045B7B8();
      sub_10009C854();
      sub_10011DE74();
      swift_bridgeObjectRelease();
      goto LABEL_41;
    case 0x10u:
      sub_1000DB2A8();
      v4 = v5;
      v5 = (uint64_t)&v13[*(int *)(sub_10009ED94() + 28)];
      v50 = sub_1000D12B0();
      sub_10045B650(v50);
      goto LABEL_41;
    case 0x11u:
      sub_10009C0F0();
      sub_1000DB2A8();
      goto LABEL_41;
    case 0x12u:
      sub_10009C0F0();
      sub_1000DB2A8();
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      sub_10045B66C();
      sub_10045B7DC();
      sub_10045B7C0();
      sub_10045B7B8();
      sub_10009C854();
      sub_10011DE74();
      sub_10045B8B4();
      v4 = v5;
      v5 = (uint64_t)&v13[*(int *)(sub_10011DF78() + 68)];
      v51 = sub_10009E584();
      sub_10045B650(v51);
LABEL_41:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v52 = (uint64_t)v7 + *(int *)(v12 + 28);
  sub_100095158();
  if (!sub_10009D53C(v52))
  {
    v53 = sub_10045B894();
    switch(swift_getEnumCaseMultiPayload(v53))
    {
      case 0u:
        v54 = sub_10009896C();
        goto LABEL_48;
      case 1u:
        v54 = sub_1000B4608();
        goto LABEL_48;
      case 2u:
        v54 = sub_1000D9588();
        goto LABEL_48;
      case 4u:
        sub_1000BA294(&qword_100BC5FF0);
        v54 = sub_1000992C4();
LABEL_48:
        sub_1000989A0(v54);
        break;
      default:
        break;
    }
  }
  swift_unknownObjectRelease(*(_QWORD *)((char *)v7 + v2[5]));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)v7 + v2[6]));
  v55 = sub_100098AA0();
  sub_1000989A0(v55);
  swift_release(*(_QWORD *)((char *)v7 + v2[9]));
  swift_release(*(_QWORD *)((char *)v7 + v2[13] + 24));
  sub_10011DECC(v2[14]);
  sub_10011DECC(v2[15]);
  sub_10011DECC(v2[16]);
  sub_10009DAA8((uint64_t)v7 + v2[17]);
  v56 = sub_1000BA294(&qword_100BC2908);
  if (sub_100094FAC(v56) == 1)
  {
    v57 = sub_1000E7C40();
    sub_1000989A0(v57);
  }
  else
  {
    sub_1000DAF0C();
  }
  sub_1000C1E14(v2[19]);
  sub_1000C1E14(v2[20]);
  v58 = sub_1000BA294(&qword_100BC37D8);
  if (sub_100094FAC(v58) == 1)
  {
    v59 = sub_10009EE9C();
    sub_1000989A0(v59);
  }
  else
  {
    sub_1000DAF0C();
  }
  sub_1000C1E14(v2[22]);
  sub_1000C1E14(v2[23]);
  sub_1000C1E14(v2[24]);
  sub_1000C1E14(v2[25]);
  sub_1000C1E14(v2[26]);
  sub_1000C1E14(v2[27]);
  v60 = sub_1000BA294(&qword_100BC37E0);
  if (sub_100094FAC(v60) == 1)
  {
    sub_10009E908();
    v61 = type metadata accessor for DynamicTypeSize(0);
    sub_1000989A0(v61);
  }
  else
  {
    sub_1000DAF0C();
  }
  v62 = v4 | v77 | 7;
  v63 = (v79 + v78 + v77) & ~v77;
  swift_release(*(_QWORD *)((char *)v7 + v2[29]));
  v64 = (char *)v7 + v2[30];
  sub_1000B4394();
  v65 = swift_release(*((_QWORD *)v64 + 1));
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v63, v5, v65);
  return sub_1000BE900(v0, v63 + v76, v62);
}

uint64_t sub_100445DF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for LocationComponentContainerView(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  type metadata accessor for DateInterval(0);
  sub_10045B94C();
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_100BE236C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_100445EA4;
  return sub_10042DAFC(a1, v9, v10, v11, v12);
}

uint64_t sub_100445EA4()
{
  uint64_t v0;

  sub_100098D14();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for LocationComponentContainerAccessibilityModifier(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BE24E8, (uint64_t)&nominal type descriptor for LocationComponentContainerAccessibilityModifier);
}

void sub_100445EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1000F422C();
  type metadata accessor for LocationComponentContainerView(v0);
  sub_1000987F4();
  v1 = sub_10045B934();
  sub_10042D4E8(v1, v2);
}

uint64_t type metadata accessor for ComponentHeaderHeightModifier(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE2778, (uint64_t)&nominal type descriptor for ComponentHeaderHeightModifier);
}

unint64_t sub_100445F34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE23E0;
  if (!qword_100BE23E0)
  {
    v1 = sub_100075EB0(&qword_100BE23D8);
    sub_100445FA0();
    sub_100446168();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE23E0);
  }
  return result;
}

unint64_t sub_100445FA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE23E8;
  if (!qword_100BE23E8)
  {
    v1 = sub_100075EB0(&qword_100BE23F0);
    sub_100446024();
    sub_10007AB60((uint64_t)&unk_100BE2420);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE23E8);
  }
  return result;
}

unint64_t sub_100446024()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE23F8;
  if (!qword_100BE23F8)
  {
    v1 = sub_100075EB0(&qword_100BE2400);
    sub_1004460A8();
    sub_10007AB60((uint64_t)&unk_100BE2420);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE23F8);
  }
  return result;
}

unint64_t sub_1004460A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2408;
  if (!qword_100BE2408)
  {
    v1 = sub_100075EB0(&qword_100BE23B8);
    sub_10007A100((uint64_t)&unk_100BE2410);
    sub_10044612C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2408);
  }
  return result;
}

unint64_t sub_10044612C()
{
  unint64_t result;

  result = qword_100BE2418;
  if (!qword_100BE2418)
  {
    result = swift_getWitnessTable(&unk_1009A0890, &type metadata for ApplyLocationComponentContentWidthModifier);
    atomic_store(result, (unint64_t *)&qword_100BE2418);
  }
  return result;
}

unint64_t sub_100446168()
{
  unint64_t result;

  result = qword_100BE2430;
  if (!qword_100BE2430)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HoverRegionModifier, &type metadata for _HoverRegionModifier);
    atomic_store(result, (unint64_t *)&qword_100BE2430);
  }
  return result;
}

void sub_1004461A8(char a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;

  v4 = sub_10045B834();
  type metadata accessor for LocationComponentContainerView(v4);
  v5 = sub_10045B900();
  sub_10042DFF4(a1, a2, v6, v5, v7, v8, v9);
}

uint64_t sub_10044620C()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;

  sub_10009E2A4();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_100086180();
  v1 = (_QWORD *)swift_task_alloc(dword_100BE2454);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10004A38C(v1);
  return sub_10045B5DC(v2, v8, v9, v10, v3, v4, v5, v6, v7);
}

uint64_t sub_100446270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_1001FB8BC();
  v14 = (int *)type metadata accessor for LocationComponentContainerView(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(v15 + 64) + v17;
  v19 = *(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v11 + 16));
  v22 = (_QWORD *)(v11 + v17);
  v23 = sub_1000C21DC();
  switch(sub_100098814(v23))
  {
    case 0u:
    case 4u:
      sub_10009BF48();
      sub_1000D9DD0();
      v24 = v22 + 6;
      goto LABEL_6;
    case 1u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      v24 = v22 + 10;
      goto LABEL_6;
    case 2u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      sub_100094FD4();
      sub_1000F3E40();
      v24 = v22 + 14;
      goto LABEL_6;
    case 3u:
      v25 = sub_1000D12B0();
      sub_1000987E0(v25);
      v12 = (uint64_t)v22 + *(int *)(sub_1000D09EC() + 20);
      sub_1000B3B94();
      sub_1000CE558();
      v24 = (_QWORD *)(v12 + 48);
LABEL_6:
      sub_10045B638(v24);
      break;
    default:
      break;
  }
  sub_1000878BC();
  v26 = sub_1000DAC78();
  switch(sub_100094FAC(v26))
  {
    case 0u:
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      goto LABEL_41;
    case 1u:
      sub_100321DEC();
      v27 = (int *)sub_10009C20C();
      v73 = v20;
      v28 = v21;
      v29 = v12 + v27[5];
      sub_1000BA294(&qword_100BC4E68);
      v30 = v29;
      v21 = v28;
      v20 = v73;
      sub_10045B8AC(v30);
      sub_10045B8AC(v12 + v27[6]);
      sub_10045B8AC(v12 + v27[7]);
      v31 = v27[8];
      goto LABEL_33;
    case 2u:
      v75 = v21;
      sub_1000B3B94();
      sub_1000CE558();
      v32 = sub_10011E210();
      v33 = sub_10009BD00();
      if (!sub_1000C0DE4(v33))
      {
        sub_1000C48E0();
        v34 = sub_10009DF08();
        sub_10009BF1C(v34);
        v35 = sub_1000C1494();
        sub_1000BA548(v21 + *(int *)(v35 + 32));
      }
      v36 = *(int *)(v32 + 28);
      goto LABEL_68;
    case 3u:
    case 4u:
      goto LABEL_41;
    case 5u:
      v75 = v21;
      v37 = sub_1000B4608();
      sub_1000989A0(v37);
      v38 = sub_10045B614();
      v39 = v12 + *(int *)(v38 + 20);
      v40 = sub_1000992C4();
      sub_10009BF1C(v40);
      v74 = v38;
      sub_10011E47C();
      if (!sub_10009D53C(v39))
      {
        sub_1000C48E0();
        v41 = sub_10011E528();
        if (!sub_10009D53C(v13))
          sub_1000BE774(v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8));
        v42 = sub_10003BD50();
        sub_1000BA9C0(v42);
        sub_10045B8A0();
        v43 = sub_1000BA294(&qword_100BC3348);
        if (!sub_10009DB00(v43))
        {
          v44 = sub_100098778();
          sub_1000BA9C0(v44);
        }
        v45 = sub_1000FDA30();
        v46 = sub_10009ED24(v45);
        if (v46 == 1)
        {
          v71 = sub_10011E384();
          sub_1000BA9C0(v71);
        }
        else if (!v46)
        {
          sub_10009C0F0();
        }
        v72 = sub_1000B2EF8();
        if (!sub_1000C0DE4(v72))
        {
          sub_100098778();
          if (!sub_10009D53C(v39))
            sub_1000CD75C();
          if (!sub_10009D53C(v39 + *(int *)(a11 + 20)))
            sub_1000CD75C();
        }
      }
      v36 = *(int *)(v74 + 28);
LABEL_68:
      sub_1000999DC(v36);
      v21 = v75;
      break;
    case 6u:
      sub_1000B3B94();
      sub_10045B798();
      if (!v50)
        sub_10045B6F8(v47, v48, v49);
      sub_1000D1E34();
      sub_10011E0E8();
      v51 = sub_100098778();
      goto LABEL_36;
    case 7u:
      v52 = sub_1000C21E4();
      if (sub_100094FAC(v52) == 1)
      {
        sub_1000B3B94();
        v21 = sub_10004A364();
        v53 = v12 + *(int *)(v21 + 20);
        v54 = sub_10009896C();
        if (!sub_10009D53C(v53))
          sub_1000BE774(v53, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8));
        sub_1000999DC(*(int *)(v21 + 24));
        sub_1000DA540();
        if (!sub_1000BECB0())
          sub_1000951E8(v12);
      }
      break;
    case 8u:
      sub_1000B3B94();
      sub_10011E2F4();
      v51 = sub_1000ED298();
      goto LABEL_36;
    case 9u:
      v51 = sub_1000992C4();
      goto LABEL_36;
    case 0xAu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      goto LABEL_41;
    case 0xBu:
      v55 = sub_1000DF640();
      sub_1000989A0(v55);
      v56 = (int *)sub_10011E25C();
      sub_1000999DC(v56[5]);
      sub_1000999DC(v56[6]);
      v31 = v56[7];
LABEL_33:
      sub_1000999DC(v31);
      sub_10045B6E8();
      goto LABEL_41;
    case 0xDu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_10045B6E0();
      sub_10009C890();
      sub_10045B6D8();
      sub_10009EFBC();
      v51 = sub_1000FC4D4();
      goto LABEL_36;
    case 0xEu:
      v51 = sub_10045B61C();
LABEL_36:
      sub_1000989A0(v51);
      break;
    case 0xFu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10009C824();
      goto LABEL_41;
    case 0x10u:
      sub_1000CE558();
      v21 = v12 + *(int *)(sub_10009ED94() + 28);
      v57 = sub_1000D12B0();
      sub_1000BD468(v57);
      goto LABEL_41;
    case 0x11u:
      sub_1000B3B94();
      sub_1000CE558();
      goto LABEL_41;
    case 0x12u:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10045B81C();
      sub_10011DF78();
      v58 = sub_1000FC61C();
      sub_1000BD468(v58);
LABEL_41:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v59 = sub_100095158();
  if (!sub_10009E638(v59))
  {
    switch(sub_10045B7E4())
    {
      case 0u:
        v60 = sub_10009896C();
        goto LABEL_48;
      case 1u:
        v60 = sub_1000B4608();
        goto LABEL_48;
      case 2u:
        v60 = sub_1000D9588();
        goto LABEL_48;
      case 4u:
        sub_1000BA294(&qword_100BC5FF0);
        v60 = sub_1000992C4();
LABEL_48:
        sub_1000B2568(v60);
        break;
      default:
        break;
    }
  }
  sub_10009DE64();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)v22 + v14[6]));
  v61 = sub_100098AA0();
  sub_1000B2568(v61);
  sub_1000DC924(v14[9]);
  sub_10045B674(v14[13]);
  sub_1000DC3D8();
  v62 = sub_1000BA294(&qword_100BC2908);
  if (sub_1000952AC(v62) == 1)
  {
    v63 = sub_1000E7C40();
    sub_1000B2568(v63);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_10011046C();
  v64 = sub_1000BA294(&qword_100BC37D8);
  if (sub_1000952AC(v64) == 1)
  {
    v65 = sub_10009EE9C();
    sub_1000B2568(v65);
  }
  else
  {
    sub_1000F3F48();
  }
  v66 = (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + v20 + 32) & ~v20;
  sub_1000C15A4();
  v67 = sub_1000BA294(&qword_100BC37E0);
  if (sub_1000952AC(v67) == 1)
  {
    sub_10009E908();
    v68 = sub_100099998();
    sub_1000B2568(v68);
  }
  else
  {
    sub_1000F3F48();
  }
  sub_1000DC924(v14[29]);
  sub_1000C6DD4();
  sub_10009C7AC();
  v69 = sub_100098778();
  if (!sub_1000CF764(v11 + v66))
    sub_100099254(v11 + v66, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8));
  return sub_1000D8FB4(v11, v66 + v21, v16 | v20 | 7);
}

uint64_t sub_1004468F8()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;

  sub_10009E2A4();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_100086180();
  v1 = (_QWORD *)swift_task_alloc(dword_100BE2454);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10004A38C(v1);
  return sub_10045B5DC(v2, v8, v9, v10, v3, v4, v5, v6, v7);
}

uint64_t sub_100446958()
{
  uint64_t v0;

  sub_100098D14();
  return sub_1000950D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10044697C()
{
  uint64_t v0;

  return sub_100099AB0(v0, 24);
}

void sub_100446988(double *a1@<X8>)
{
  uint64_t v1;

  sub_10043E218(a1, *(double *)(v1 + 16));
}

uint64_t sub_100446990()
{
  uint64_t v0;

  sub_1000951F0();
  sub_1000B15F8(*(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1004469C4(uint64_t *a1)
{
  uint64_t v1;

  return sub_10043E2FC(a1, v1 + 16);
}

uint64_t sub_1004469CC(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 56);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 24));
  sub_10008D47C(v2, v3);
  swift_retain();
  return a1;
}

ValueMetadata *type metadata accessor for RowModifier.RowGeometry()
{
  return &type metadata for RowModifier.RowGeometry;
}

void assignWithCopy for TipOverlayWidthModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_10045A220(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_10008D47C, (void (*)(uint64_t, uint64_t))sub_1000B15F8);
}

ValueMetadata *type metadata accessor for TipOverlayWidthModifier()
{
  return &type metadata for TipOverlayWidthModifier;
}

uint64_t sub_100446A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100446A74);
}

uint64_t sub_100446A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10009E50C();
  sub_1000BA294(&qword_100BE2488);
  v1 = sub_1000890E8();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_100446AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100446AB0);
}

uint64_t sub_100446AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10009E50C();
  sub_1000BA294(&qword_100BE2488);
  sub_100098D08();
  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t destroy for ExplicitComponentWidthModifier(uint64_t a1)
{
  return sub_100082C5C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
}

void _s7Weather30ExplicitComponentWidthModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 9);
  v5 = *(_BYTE *)(a2 + 8);
  sub_100082BE8(*(_QWORD *)a2, v5, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v4;
  sub_100079F70();
}

uint64_t assignWithCopy for ExplicitComponentWidthModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned __int8 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 9);
  v5 = *(_BYTE *)(a2 + 8);
  sub_100082BE8(*(_QWORD *)a2, v5, v4);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v3;
  v8 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v4;
  sub_100082C5C(v6, v8, v7);
  return a1;
}

uint64_t initializeWithTake for ExplicitComponentWidthModifier(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for ExplicitComponentWidthModifier(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 9);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  sub_100082C5C(v5, v7, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplicitComponentWidthModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 9);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplicitComponentWidthModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplicitComponentWidthModifier()
{
  return &type metadata for ExplicitComponentWidthModifier;
}

uint64_t sub_100446C98(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t HourPrecipitationChartViewModel;
  void (*v91)(char *, char *, uint64_t, __n128);
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t, __n128);
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __n128 v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t, __n128);
  __n128 v168;
  int *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t, __n128);
  __n128 v192;
  uint64_t v193;
  _QWORD *v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  void (*v200)(char *, char *, uint64_t, __n128);
  __n128 v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  _QWORD *v218;
  uint64_t v219;
  int EnumCaseMultiPayload;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char v246;
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  __int128 v260;
  void (*v262)(char *, char *, uint64_t, __n128);
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t, __n128);
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  int *v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  int *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
      *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
      v8 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v9 = a1 + v8;
      v10 = (uint64_t)a2 + v8;
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      *(_QWORD *)a1 = *a2;
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v12);
    v14 = a3[5];
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = *(_BYTE *)(v16 + 8);
    sub_10008D47C(*(_QWORD *)v16, v18);
    *(_QWORD *)v15 = v17;
    *(_BYTE *)(v15 + 8) = v18;
    v19 = a3[6];
    v20 = a1 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = *(_QWORD *)v21;
    v23 = *(_BYTE *)(v21 + 8);
    sub_10008D47C(*(_QWORD *)v21, v23);
    *(_QWORD *)v20 = v22;
    *(_BYTE *)(v20 + 8) = v23;
    v24 = a3[7];
    v25 = (_QWORD *)(a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = type metadata accessor for LocationComponentViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v26))
    {
      case 0u:
        *v25 = *v26;
        *(_OWORD *)(v25 + 1) = *(_OWORD *)(v26 + 1);
        *(_OWORD *)(v25 + 3) = *(_OWORD *)(v26 + 3);
        v28 = v26[5];
        v29 = v26[6];
        v25[5] = v28;
        v25[6] = v29;
        v31 = v26[7];
        v30 = v26[8];
        v25[7] = v31;
        v25[8] = v30;
        v33 = v26[9];
        v32 = v26[10];
        v25[9] = v33;
        v25[10] = v32;
        v34 = v26[11];
        v25[11] = v34;
        *((_WORD *)v25 + 48) = *((_WORD *)v26 + 48);
        v35 = v26[13];
        v25[13] = v35;
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRetain(v31);
        swift_bridgeObjectRetain(v33);
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v35);
        v36 = v25;
        v37 = v27;
        v38 = 0;
        goto LABEL_65;
      case 1u:
        v39 = *v26;
        *v25 = *v26;
        v40 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        v41 = v40[5];
        v42 = (char *)v25 + v41;
        v297 = v27;
        v43 = (char *)v26 + v41;
        swift_bridgeObjectRetain(v39);
        v44 = sub_1000BA294(&qword_100BC4E68);
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        v45(v42, v43, v44);
        v45((char *)v25 + v40[6], (char *)v26 + v40[6], v44);
        v45((char *)v25 + v40[7], (char *)v26 + v40[7], v44);
        v46 = v40[8];
        v47 = (_QWORD *)((char *)v25 + v46);
        v48 = (_QWORD *)((char *)v26 + v46);
        v49 = v48[1];
        *v47 = *v48;
        v47[1] = v49;
        v50 = v40[9];
        v51 = (_QWORD *)((char *)v25 + v50);
        v52 = (_QWORD *)((char *)v26 + v50);
        v53 = v52[1];
        *v51 = *v52;
        v51[1] = v53;
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRetain(v53);
        v36 = v25;
        v37 = v297;
        v38 = 1;
        goto LABEL_65;
      case 2u:
        v298 = v27;
        v54 = v26[1];
        *v25 = *v26;
        v25[1] = v54;
        v55 = v26[3];
        v25[2] = v26[2];
        v25[3] = v55;
        v289 = type metadata accessor for FeelsLikeComponentViewModel(0);
        v56 = *(int *)(v289 + 24);
        v57 = (_QWORD *)((char *)v25 + v56);
        v58 = (_QWORD *)((char *)v26 + v56);
        v59 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain(v54);
        swift_bridgeObjectRetain(v55);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
        {
          v60 = sub_1000BA294(&qword_100BC3360);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          v162 = v58[1];
          *v57 = *v58;
          v57[1] = v162;
          v287 = v59;
          v163 = *(int *)(v59 + 20);
          v164 = (char *)v57 + v163;
          v165 = (char *)v58 + v163;
          v166 = type metadata accessor for TemperatureScaleConfiguration(0);
          v280 = (uint64_t)v57;
          v167 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v166 - 8) + 16);
          v168 = swift_bridgeObjectRetain(v162);
          v167(v164, v165, v166, v168);
          v169 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(_QWORD *)&v164[v169[5]] = *(_QWORD *)&v165[v169[5]];
          *(_QWORD *)&v164[v169[6]] = *(_QWORD *)&v165[v169[6]];
          *(_QWORD *)&v164[v169[7]] = *(_QWORD *)&v165[v169[7]];
          v170 = v169[8];
          v171 = &v164[v170];
          v172 = &v165[v170];
          v174 = *(_QWORD *)v172;
          v173 = *((_QWORD *)v172 + 1);
          *(_QWORD *)v171 = v174;
          *((_QWORD *)v171 + 1) = v173;
          v164[v169[9]] = v165[v169[9]];
          swift_bridgeObjectRetain(v173);
          _s7Weather24LocationCompositionStateOwst_0(v280, 0, 1, v287);
        }
        v175 = *(int *)(v289 + 28);
        v176 = (_QWORD *)((char *)v25 + v175);
        v177 = (_QWORD *)((char *)v26 + v175);
        v178 = v177[1];
        *v176 = *v177;
        v176[1] = v178;
        swift_bridgeObjectRetain(v178);
        v36 = v25;
        v37 = v298;
        v38 = 2;
        goto LABEL_65;
      case 3u:
        v61 = *v26;
        *v25 = *v26;
        swift_bridgeObjectRetain(v61);
        v36 = v25;
        v37 = v27;
        v38 = 3;
        goto LABEL_65;
      case 4u:
        *(_OWORD *)v25 = *(_OWORD *)v26;
        v62 = v26[2];
        v25[2] = v62;
        swift_bridgeObjectRetain(v62);
        v36 = v25;
        v37 = v27;
        v38 = 4;
        goto LABEL_65;
      case 5u:
        v299 = v27;
        v63 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v25, v26, v63);
        v64 = (int *)type metadata accessor for MapComponentViewModel(0);
        v65 = v64[5];
        v66 = (char *)v25 + v65;
        v67 = (char *)v26 + v65;
        v68 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
        v69 = v64[6];
        v70 = (_QWORD *)((char *)v25 + v69);
        v71 = (_QWORD *)((char *)v26 + v69);
        v72 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
        {
          v73 = sub_1000BA294(&qword_100BC3460);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          v74 = v299;
          goto LABEL_64;
        }
        v281 = v64;
        v288 = v70;
        v179 = (int *)v72;
        v180 = v71[1];
        *v70 = *v71;
        v70[1] = v180;
        v295 = v179;
        v181 = v179[5];
        v182 = (char *)v70 + v181;
        v183 = (char *)v71 + v181;
        v184 = type metadata accessor for Locale(0);
        swift_bridgeObjectRetain(v180);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v184))
        {
          v185 = sub_1000BA294(&qword_100BC3340);
          memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v182, v183, v184);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v184);
        }
        v206 = v295[6];
        v207 = (char *)v288 + v206;
        v208 = (char *)v71 + v206;
        v209 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(v207, v208, v209);
        v210 = v295[7];
        v211 = (char *)v288 + v210;
        v212 = (char *)v71 + v210;
        v213 = sub_1000BA294(&qword_100BC3348);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v212, 1, v213))
        {
          v214 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
        }
        else
        {
          v215 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v211, v212, v215);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v211, 0, 1, v213);
        }
        v216 = v295[8];
        v217 = (_QWORD *)((char *)v288 + v216);
        v218 = (_QWORD *)((char *)v71 + v216);
        v219 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v218);
        if (EnumCaseMultiPayload == 1)
        {
          v225 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v217, v218, v225);
          v222 = v217;
          v223 = v219;
          v224 = 1;
          goto LABEL_52;
        }
        if (!EnumCaseMultiPayload)
        {
          v221 = v218[1];
          *v217 = *v218;
          v217[1] = v221;
          swift_bridgeObjectRetain(v221);
          v222 = v217;
          v223 = v219;
          v224 = 0;
LABEL_52:
          swift_storeEnumTagMultiPayload(v222, v223, v224);
          goto LABEL_54;
        }
        memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
LABEL_54:
        v64 = v281;
        v226 = (uint64_t)v288;
        v227 = v295[9];
        v228 = (char *)v288 + v227;
        v229 = (char *)v71 + v227;
        v230 = type metadata accessor for WeatherDataOverrides(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v229, 1, v230))
        {
          v231 = sub_1000BA294(&qword_100BC3350);
          memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
          v74 = v299;
        }
        else
        {
          v232 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v229, 1, v232))
          {
            v233 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v228, v229, v232);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, v232);
          }
          v276 = v230;
          v282 = (uint64_t)v228;
          v234 = *(int *)(v230 + 20);
          v235 = &v228[v234];
          v236 = &v229[v234];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v229[v234], 1, v232))
          {
            v237 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v235, v236, v232);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v235, 0, 1, v232);
          }
          v74 = v299;
          _s7Weather24LocationCompositionStateOwst_0(v282, 0, 1, v276);
          v226 = (uint64_t)v288;
        }
        _s7Weather24LocationCompositionStateOwst_0(v226, 0, 1, (uint64_t)v295);
LABEL_64:
        v238 = v64[7];
        v239 = (_QWORD *)((char *)v25 + v238);
        v240 = (_QWORD *)((char *)v26 + v238);
        v241 = v240[1];
        *v239 = *v240;
        v239[1] = v241;
        swift_bridgeObjectRetain(v241);
        v36 = v25;
        v37 = v74;
        v38 = 5;
LABEL_65:
        swift_storeEnumTagMultiPayload(v36, v37, v38);
LABEL_66:
        v242 = a3[8];
        v243 = a1 + v242;
        v244 = (uint64_t)a2 + v242;
        v245 = *(_QWORD *)v244;
        v246 = *(_BYTE *)(v244 + 8);
        sub_10008D47C(*(_QWORD *)v244, v246);
        *(_QWORD *)v243 = v245;
        *(_BYTE *)(v243 + 8) = v246;
        v247 = a3[9];
        v248 = (_QWORD *)(a1 + v247);
        v249 = (uint64_t *)((char *)a2 + v247);
        v250 = sub_1000BA294(&qword_100BE21F0);
        if (swift_getEnumCaseMultiPayload(v249) == 1)
        {
          type metadata accessor for LocationComponentHeaderViewModel(0);
          v251 = (char *)&loc_100447DF4 + 4 * byte_10099F916[swift_getEnumCaseMultiPayload(v249)];
          __asm { BR              X10 }
        }
        *v248 = *v249;
        swift_retain();
        swift_storeEnumTagMultiPayload(v248, v250, 0);
        v252 = a3[11];
        *(_BYTE *)(a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
        v253 = a1 + v252;
        v254 = (uint64_t)a2 + v252;
        v255 = type metadata accessor for Location.Identifier(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v255 - 8) + 16))(v253, v254, v255);
        v256 = a3[13];
        *(_QWORD *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
        *(_QWORD *)(a1 + v256) = *(uint64_t *)((char *)a2 + v256);
        v257 = a3[14];
        v258 = a1 + v257;
        v259 = (uint64_t)a2 + v257;
        v260 = *(_OWORD *)(v259 + 16);
        *(_OWORD *)v258 = *(_OWORD *)v259;
        *(_OWORD *)(v258 + 16) = v260;
        *(_BYTE *)(v258 + 32) = *(_BYTE *)(v259 + 32);
        break;
      case 6u:
        v75 = v26[1];
        *v25 = *v26;
        v25[1] = v75;
        v76 = *((unsigned __int8 *)v26 + 32);
        swift_bridgeObjectRetain(v75);
        v300 = v27;
        if (v76 == 255)
        {
          *((_OWORD *)v25 + 1) = *((_OWORD *)v26 + 1);
          *((_BYTE *)v25 + 32) = *((_BYTE *)v26 + 32);
        }
        else
        {
          v77 = v26[2];
          v78 = v26[3];
          sub_100121DEC(v77, v78, v76);
          v25[2] = v77;
          v25[3] = v78;
          *((_BYTE *)v25 + 32) = v76;
        }
        v186 = v26[5];
        v25[5] = v186;
        v187 = (int *)type metadata accessor for MoonComponentViewModel(0);
        v188 = v187[7];
        v296 = (char *)v25 + v188;
        v189 = (char *)v26 + v188;
        v190 = type metadata accessor for Date(0);
        v191 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v190 - 8) + 16);
        v192 = swift_bridgeObjectRetain(v186);
        v191(v296, v189, v190, v192);
        *((_BYTE *)v25 + v187[8]) = *((_BYTE *)v26 + v187[8]);
        *(_QWORD *)((char *)v25 + v187[9]) = *(_QWORD *)((char *)v26 + v187[9]);
        v36 = v25;
        v37 = v300;
        v38 = 6;
        goto LABEL_65;
      case 7u:
        v79 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v26) == 1)
        {
          v283 = v79;
          v301 = v27;
          v80 = v26[1];
          *v25 = *v26;
          v25[1] = v80;
          v290 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v81 = v290[5];
          v82 = (char *)v25 + v81;
          v83 = (char *)v26 + v81;
          v84 = type metadata accessor for URL(0);
          swift_bridgeObjectRetain(v80);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
          {
            v85 = sub_1000BA294(&qword_100BD4280);
            memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
          }
          v193 = v290[6];
          v194 = (_QWORD *)((char *)v25 + v193);
          v195 = (_QWORD *)((char *)v26 + v193);
          v196 = v195[1];
          *v194 = *v195;
          v194[1] = v196;
          v197 = v290[7];
          v198 = (char *)v25 + v197;
          v199 = (char *)v26 + v197;
          v200 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
          v201 = swift_bridgeObjectRetain(v196);
          v200(v198, v199, v84, v201);
          v202 = v290[8];
          v203 = (char *)v25 + v202;
          v204 = (char *)v26 + v202;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26 + v202, 1, v84))
          {
            v205 = sub_1000BA294(&qword_100BD4280);
            memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v200)(v203, v204, v84);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v84);
          }
          *((_BYTE *)v25 + v290[9]) = *((_BYTE *)v26 + v290[9]);
          swift_storeEnumTagMultiPayload(v25, v283, 1);
          v27 = v301;
        }
        else
        {
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        v36 = v25;
        v37 = v27;
        v38 = 7;
        goto LABEL_65;
      case 8u:
        v86 = v26[1];
        *v25 = *v26;
        v25[1] = v86;
        v87 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
        v88 = (char *)v25 + v87;
        v89 = (char *)v26 + v87;
        HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
        v91 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8)
                                                                     + 16);
        v92 = swift_bridgeObjectRetain(v86);
        v91(v88, v89, HourPrecipitationChartViewModel, v92);
        v36 = v25;
        v37 = v27;
        v38 = 8;
        goto LABEL_65;
      case 9u:
        v93 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v25, v26, v93);
        v94 = type metadata accessor for NotificationsOptInComponentViewModel(0);
        *((_BYTE *)v25 + *(int *)(v94 + 20)) = *((_BYTE *)v26 + *(int *)(v94 + 20));
        v36 = v25;
        v37 = v27;
        v38 = 9;
        goto LABEL_65;
      case 0xAu:
        v95 = v26[1];
        *v25 = *v26;
        v25[1] = v95;
        v96 = v26[3];
        v25[2] = v26[2];
        v25[3] = v96;
        v97 = v26[5];
        v25[4] = v26[4];
        v25[5] = v97;
        v98 = v26[7];
        v25[6] = v26[6];
        v25[7] = v98;
        v99 = v26[9];
        v25[8] = v26[8];
        v25[9] = v99;
        v100 = v26[10];
        v101 = v26[11];
        v25[10] = v100;
        v25[11] = v101;
        swift_bridgeObjectRetain(v95);
        swift_bridgeObjectRetain(v96);
        swift_bridgeObjectRetain(v97);
        swift_bridgeObjectRetain(v98);
        swift_bridgeObjectRetain(v99);
        swift_bridgeObjectRetain(v101);
        v36 = v25;
        v37 = v27;
        v38 = 10;
        goto LABEL_65;
      case 0xBu:
        v102 = type metadata accessor for PressureTrend(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v25, v26, v102);
        v103 = (int *)type metadata accessor for PressureComponentViewModel(0);
        v104 = v103[5];
        v105 = (_QWORD *)((char *)v25 + v104);
        v106 = (_QWORD *)((char *)v26 + v104);
        v108 = *v106;
        v107 = v106[1];
        *v105 = v108;
        v105[1] = v107;
        v109 = v103[6];
        v110 = (_QWORD *)((char *)v25 + v109);
        v111 = (_QWORD *)((char *)v26 + v109);
        v112 = v111[1];
        *v110 = *v111;
        v110[1] = v112;
        v113 = v103[7];
        v114 = (_QWORD *)((char *)v25 + v113);
        v115 = (_QWORD *)((char *)v26 + v113);
        v116 = v115[1];
        *v114 = *v115;
        v114[1] = v116;
        *(_QWORD *)((char *)v25 + v103[8]) = *(_QWORD *)((char *)v26 + v103[8]);
        v117 = v103[9];
        v118 = (_QWORD *)((char *)v25 + v117);
        v119 = (_QWORD *)((char *)v26 + v117);
        v120 = v119[1];
        *v118 = *v119;
        v118[1] = v120;
        swift_bridgeObjectRetain(v107);
        swift_bridgeObjectRetain(v112);
        swift_bridgeObjectRetain(v116);
        swift_bridgeObjectRetain(v120);
        v36 = v25;
        v37 = v27;
        v38 = 11;
        goto LABEL_65;
      case 0xDu:
        v121 = v26[1];
        *v25 = *v26;
        v25[1] = v121;
        v122 = v26[3];
        v25[2] = v26[2];
        v25[3] = v122;
        v123 = v26[5];
        v284 = v26[4];
        v25[4] = v284;
        v25[5] = v123;
        v125 = v26[6];
        v124 = v26[7];
        v25[6] = v125;
        v25[7] = v124;
        v302 = v27;
        v126 = v26[8];
        v25[8] = v126;
        v291 = type metadata accessor for SevereAlertComponentViewModel(0);
        v127 = *(int *)(v291 + 36);
        v273 = (char *)v26 + v127;
        v277 = (char *)v25 + v127;
        v128 = type metadata accessor for WeatherAlert.Prominence(0);
        v270 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v128 - 8) + 16);
        swift_bridgeObjectRetain(v121);
        swift_bridgeObjectRetain(v122);
        swift_bridgeObjectRetain(v284);
        swift_bridgeObjectRetain(v125);
        v129 = swift_bridgeObjectRetain(v126);
        v270(v277, v273, v128, v129);
        *(_QWORD *)((char *)v25 + *(int *)(v291 + 40)) = *(_QWORD *)((char *)v26 + *(int *)(v291 + 40));
        v36 = v25;
        v37 = v302;
        v38 = 13;
        goto LABEL_65;
      case 0xEu:
        v130 = type metadata accessor for SunriseSunsetViewModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v25, v26, v130);
        v36 = v25;
        v37 = v27;
        v38 = 14;
        goto LABEL_65;
      case 0xFu:
        v131 = v26[1];
        *v25 = *v26;
        v25[1] = v131;
        v132 = v26[3];
        v25[2] = v26[2];
        v25[3] = v132;
        v133 = v26[5];
        v25[4] = v26[4];
        v25[5] = v133;
        v134 = v26[7];
        v25[6] = v26[6];
        v25[7] = v134;
        v135 = v26[9];
        v25[8] = v26[8];
        v25[9] = v135;
        v303 = v27;
        v136 = v26[11];
        v25[10] = v26[10];
        v25[11] = v136;
        v292 = v26[13];
        v25[12] = v26[12];
        v25[13] = v292;
        v285 = v26[15];
        v25[14] = v26[14];
        v25[15] = v285;
        v278 = v26[17];
        v25[16] = v26[16];
        v25[17] = v278;
        v274 = v26[19];
        v25[18] = v26[18];
        v25[19] = v274;
        v271 = v26[21];
        v25[20] = v26[20];
        v25[21] = v271;
        v268 = v26[23];
        v25[22] = v26[22];
        v25[23] = v268;
        v137 = v26[24];
        v138 = v26[25];
        v25[24] = v137;
        v25[25] = v138;
        swift_bridgeObjectRetain(v131);
        swift_bridgeObjectRetain(v132);
        swift_bridgeObjectRetain(v133);
        swift_bridgeObjectRetain(v134);
        swift_bridgeObjectRetain(v135);
        swift_bridgeObjectRetain(v136);
        swift_bridgeObjectRetain(v292);
        swift_bridgeObjectRetain(v285);
        swift_bridgeObjectRetain(v278);
        swift_bridgeObjectRetain(v274);
        swift_bridgeObjectRetain(v271);
        swift_bridgeObjectRetain(v268);
        swift_bridgeObjectRetain(v138);
        v36 = v25;
        v37 = v303;
        v38 = 15;
        goto LABEL_65;
      case 0x10u:
        *(_OWORD *)v25 = *(_OWORD *)v26;
        v139 = v26[3];
        v25[2] = v26[2];
        v25[3] = v139;
        v140 = type metadata accessor for UVIndexComponentViewModel(0);
        v141 = *(int *)(v140 + 28);
        v293 = (char *)v25 + v141;
        v142 = (char *)v26 + v141;
        v304 = v27;
        v143 = type metadata accessor for WeatherDescription(0);
        v144 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v143 - 8) + 16);
        v145 = swift_bridgeObjectRetain(v139);
        v144(v293, v142, v143, v145);
        v146 = *(int *)(v140 + 32);
        v147 = *(_QWORD *)((char *)v26 + v146);
        *(_QWORD *)((char *)v25 + v146) = v147;
        swift_bridgeObjectRetain(v147);
        v36 = v25;
        v37 = v304;
        v38 = 16;
        goto LABEL_65;
      case 0x11u:
        v148 = v26[1];
        *v25 = *v26;
        v25[1] = v148;
        v149 = v26[3];
        v25[2] = v26[2];
        v25[3] = v149;
        v150 = v26[4];
        v151 = v26[5];
        v25[4] = v150;
        v25[5] = v151;
        swift_bridgeObjectRetain(v148);
        swift_bridgeObjectRetain(v149);
        swift_bridgeObjectRetain(v151);
        v36 = v25;
        v37 = v27;
        v38 = 17;
        goto LABEL_65;
      case 0x12u:
        v152 = v26[1];
        *v25 = *v26;
        v25[1] = v152;
        v153 = v26[3];
        v25[2] = v26[2];
        v25[3] = v153;
        v305 = v27;
        v154 = v26[5];
        v25[4] = v26[4];
        v25[5] = v154;
        v155 = v26[7];
        v25[6] = v26[6];
        v25[7] = v155;
        v286 = v26[9];
        v25[8] = v26[8];
        v25[9] = v286;
        v279 = v26[11];
        v25[10] = v26[10];
        v25[11] = v279;
        v275 = v26[13];
        v25[12] = v26[12];
        v25[13] = v275;
        v272 = v26[15];
        v25[14] = v26[14];
        v25[15] = v272;
        v269 = v26[17];
        v25[16] = v26[16];
        v25[17] = v269;
        v267 = v26[19];
        v25[18] = v26[18];
        v25[19] = v267;
        v156 = v26[21];
        v25[20] = v26[20];
        v25[21] = v156;
        *((_OWORD *)v25 + 11) = *((_OWORD *)v26 + 11);
        v265 = v26[24];
        v266 = v156;
        v25[24] = v265;
        v294 = type metadata accessor for WindComponentViewModel(0);
        v157 = *(int *)(v294 + 68);
        v263 = (char *)v26 + v157;
        v264 = (char *)v25 + v157;
        v158 = type metadata accessor for WindComponentCompassViewModel(0);
        v262 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v158 - 8) + 16);
        swift_bridgeObjectRetain(v152);
        swift_bridgeObjectRetain(v153);
        swift_bridgeObjectRetain(v154);
        swift_bridgeObjectRetain(v155);
        swift_bridgeObjectRetain(v286);
        swift_bridgeObjectRetain(v279);
        swift_bridgeObjectRetain(v275);
        swift_bridgeObjectRetain(v272);
        swift_bridgeObjectRetain(v269);
        swift_bridgeObjectRetain(v267);
        swift_bridgeObjectRetain(v266);
        v159 = swift_bridgeObjectRetain(v265);
        v262(v264, v263, v158, v159);
        v160 = *(int *)(v294 + 72);
        v161 = *(_QWORD *)((char *)v26 + v160);
        *(_QWORD *)((char *)v25 + v160) = v161;
        swift_bridgeObjectRetain(v161);
        v36 = v25;
        v37 = v305;
        v38 = 18;
        goto LABEL_65;
      default:
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        goto LABEL_66;
    }
  }
  swift_retain();
  return a1;
}

uint64_t sub_100448054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t HourPrecipitationChartViewModel;
  void (*v90)(char *, char *, uint64_t, __n128);
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t, __n128);
  __n128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __n128 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t, __n128);
  __n128 v161;
  int *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  void (*v184)(char *, char *, uint64_t, __n128);
  __n128 v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  void (*v193)(char *, char *, uint64_t, __n128);
  __n128 v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  _QWORD *v211;
  uint64_t v212;
  int EnumCaseMultiPayload;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  _QWORD *v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  _QWORD *v243;
  _QWORD *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  __int128 *v255;
  __int128 v256;
  __int128 v257;
  void (*v259)(char *, char *, uint64_t, __n128);
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void (*v267)(char *, char *, uint64_t, __n128);
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _QWORD *v285;
  uint64_t v286;
  int *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  int *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;

  if (a1 != a2)
  {
    sub_100021A14(a1, &qword_100BC37E0);
    v6 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
      *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
      v7 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v8 = a1 + v7;
      v9 = a2 + v7;
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v11);
  }
  v12 = a3[5];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_10008D47C(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  sub_1000B15F8(v17, v18);
  v19 = a3[6];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10008D47C(*(_QWORD *)v21, v23);
  v24 = *(_QWORD *)v20;
  v25 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  sub_1000B15F8(v24, v25);
  if (a1 != a2)
  {
    v26 = a3[7];
    v27 = (_QWORD *)(a1 + v26);
    v28 = (_QWORD *)(a2 + v26);
    sub_100441DDC(a1 + v26, type metadata accessor for LocationComponentViewModel);
    v29 = type metadata accessor for LocationComponentViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v28))
    {
      case 0u:
        *v27 = *v28;
        *(_OWORD *)(v27 + 1) = *(_OWORD *)(v28 + 1);
        v27[3] = v28[3];
        v27[4] = v28[4];
        v30 = v28[5];
        v27[5] = v30;
        v27[6] = v28[6];
        v31 = v28[7];
        v27[7] = v31;
        v27[8] = v28[8];
        v32 = v28[9];
        v27[9] = v32;
        v27[10] = v28[10];
        v33 = v28[11];
        v27[11] = v33;
        *((_BYTE *)v27 + 96) = *((_BYTE *)v28 + 96);
        *((_BYTE *)v27 + 97) = *((_BYTE *)v28 + 97);
        v34 = v28[13];
        v27[13] = v34;
        swift_bridgeObjectRetain(v30);
        swift_bridgeObjectRetain(v31);
        swift_bridgeObjectRetain(v32);
        swift_bridgeObjectRetain(v33);
        swift_bridgeObjectRetain(v34);
        v35 = v27;
        v36 = v29;
        v37 = 0;
        goto LABEL_66;
      case 1u:
        v38 = *v28;
        *v27 = *v28;
        v39 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        v40 = v39[5];
        v41 = (char *)v27 + v40;
        v294 = v29;
        v42 = (char *)v28 + v40;
        swift_bridgeObjectRetain(v38);
        v43 = sub_1000BA294(&qword_100BC4E68);
        v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        v44(v41, v42, v43);
        v44((char *)v27 + v39[6], (char *)v28 + v39[6], v43);
        v44((char *)v27 + v39[7], (char *)v28 + v39[7], v43);
        v45 = v39[8];
        v46 = (_QWORD *)((char *)v27 + v45);
        v47 = (_QWORD *)((char *)v28 + v45);
        *v46 = *v47;
        v48 = v47[1];
        v46[1] = v48;
        v49 = v39[9];
        v50 = (_QWORD *)((char *)v27 + v49);
        v51 = (_QWORD *)((char *)v28 + v49);
        *v50 = *v51;
        v52 = v51[1];
        v50[1] = v52;
        swift_bridgeObjectRetain(v48);
        swift_bridgeObjectRetain(v52);
        v35 = v27;
        v36 = v294;
        v37 = 1;
        goto LABEL_66;
      case 2u:
        v295 = v29;
        *v27 = *v28;
        v53 = v28[1];
        v27[1] = v53;
        v27[2] = v28[2];
        v54 = v28[3];
        v27[3] = v54;
        v286 = type metadata accessor for FeelsLikeComponentViewModel(0);
        v55 = *(int *)(v286 + 24);
        v56 = (_QWORD *)((char *)v27 + v55);
        v57 = (_QWORD *)((char *)v28 + v55);
        v58 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v54);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
        {
          v59 = sub_1000BA294(&qword_100BC3360);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          *v56 = *v57;
          v155 = v57[1];
          v56[1] = v155;
          v284 = v58;
          v156 = *(int *)(v58 + 20);
          v157 = (char *)v56 + v156;
          v158 = (char *)v57 + v156;
          v159 = type metadata accessor for TemperatureScaleConfiguration(0);
          v277 = (uint64_t)v56;
          v160 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v159 - 8) + 16);
          v161 = swift_bridgeObjectRetain(v155);
          v160(v157, v158, v159, v161);
          v162 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(_QWORD *)&v157[v162[5]] = *(_QWORD *)&v158[v162[5]];
          *(_QWORD *)&v157[v162[6]] = *(_QWORD *)&v158[v162[6]];
          *(_QWORD *)&v157[v162[7]] = *(_QWORD *)&v158[v162[7]];
          v163 = v162[8];
          v164 = &v157[v163];
          v165 = &v158[v163];
          *(_QWORD *)v164 = *(_QWORD *)v165;
          v166 = *((_QWORD *)v165 + 1);
          *((_QWORD *)v164 + 1) = v166;
          v157[v162[9]] = v158[v162[9]];
          swift_bridgeObjectRetain(v166);
          _s7Weather24LocationCompositionStateOwst_0(v277, 0, 1, v284);
        }
        v167 = *(int *)(v286 + 28);
        v168 = (_QWORD *)((char *)v27 + v167);
        v169 = (_QWORD *)((char *)v28 + v167);
        *v168 = *v169;
        v170 = v169[1];
        v168[1] = v170;
        swift_bridgeObjectRetain(v170);
        v35 = v27;
        v36 = v295;
        v37 = 2;
        goto LABEL_66;
      case 3u:
        v60 = *v28;
        *v27 = *v28;
        swift_bridgeObjectRetain(v60);
        v35 = v27;
        v36 = v29;
        v37 = 3;
        goto LABEL_66;
      case 4u:
        *v27 = *v28;
        v27[1] = v28[1];
        v61 = v28[2];
        v27[2] = v61;
        swift_bridgeObjectRetain(v61);
        v35 = v27;
        v36 = v29;
        v37 = 4;
        goto LABEL_66;
      case 5u:
        v296 = v29;
        v62 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v27, v28, v62);
        v63 = (int *)type metadata accessor for MapComponentViewModel(0);
        v64 = v63[5];
        v65 = (char *)v27 + v64;
        v66 = (char *)v28 + v64;
        v67 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
        v68 = v63[6];
        v69 = (_QWORD *)((char *)v27 + v68);
        v70 = (_QWORD *)((char *)v28 + v68);
        v71 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71))
        {
          v72 = sub_1000BA294(&qword_100BC3460);
          memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          v73 = v296;
          goto LABEL_65;
        }
        v278 = v63;
        v285 = v69;
        *v69 = *v70;
        v171 = (int *)v71;
        v172 = v70[1];
        v69[1] = v172;
        v292 = v171;
        v173 = v171[5];
        v174 = (char *)v69 + v173;
        v175 = (char *)v70 + v173;
        v176 = type metadata accessor for Locale(0);
        swift_bridgeObjectRetain(v172);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v176))
        {
          v177 = sub_1000BA294(&qword_100BC3340);
          memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v174, v175, v176);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v176);
        }
        v199 = v292[6];
        v200 = (char *)v285 + v199;
        v201 = (char *)v70 + v199;
        v202 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v200, v201, v202);
        v203 = v292[7];
        v204 = (char *)v285 + v203;
        v205 = (char *)v70 + v203;
        v206 = sub_1000BA294(&qword_100BC3348);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v205, 1, v206))
        {
          v207 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v204, v205, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
        }
        else
        {
          v208 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v204, v205, v208);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v204, 0, 1, v206);
        }
        v209 = v292[8];
        v210 = (_QWORD *)((char *)v285 + v209);
        v211 = (_QWORD *)((char *)v70 + v209);
        v212 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v211);
        if (EnumCaseMultiPayload == 1)
        {
          v218 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v210, v211, v218);
          v215 = v210;
          v216 = v212;
          v217 = 1;
          goto LABEL_53;
        }
        if (!EnumCaseMultiPayload)
        {
          *v210 = *v211;
          v214 = v211[1];
          v210[1] = v214;
          swift_bridgeObjectRetain(v214);
          v215 = v210;
          v216 = v212;
          v217 = 0;
LABEL_53:
          swift_storeEnumTagMultiPayload(v215, v216, v217);
          goto LABEL_55;
        }
        memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
LABEL_55:
        v63 = v278;
        v219 = (uint64_t)v285;
        v220 = v292[9];
        v221 = (char *)v285 + v220;
        v222 = (char *)v70 + v220;
        v223 = type metadata accessor for WeatherDataOverrides(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v223))
        {
          v224 = sub_1000BA294(&qword_100BC3350);
          memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
          v73 = v296;
        }
        else
        {
          v225 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v225))
          {
            v226 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v221, v222, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v225);
          }
          v273 = v223;
          v279 = (uint64_t)v221;
          v227 = *(int *)(v223 + 20);
          v228 = &v221[v227];
          v229 = &v222[v227];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v222[v227], 1, v225))
          {
            v230 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v228, v229, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, v225);
          }
          v73 = v296;
          _s7Weather24LocationCompositionStateOwst_0(v279, 0, 1, v273);
          v219 = (uint64_t)v285;
        }
        _s7Weather24LocationCompositionStateOwst_0(v219, 0, 1, (uint64_t)v292);
LABEL_65:
        v231 = v63[7];
        v232 = (_QWORD *)((char *)v27 + v231);
        v233 = (_QWORD *)((char *)v28 + v231);
        *v232 = *v233;
        v234 = v233[1];
        v232[1] = v234;
        swift_bridgeObjectRetain(v234);
        v35 = v27;
        v36 = v73;
        v37 = 5;
LABEL_66:
        swift_storeEnumTagMultiPayload(v35, v36, v37);
        break;
      case 6u:
        *v27 = *v28;
        v74 = v28[1];
        v27[1] = v74;
        v75 = *((unsigned __int8 *)v28 + 32);
        swift_bridgeObjectRetain(v74);
        v297 = v29;
        if (v75 == 255)
        {
          v178 = *((_OWORD *)v28 + 1);
          *((_BYTE *)v27 + 32) = *((_BYTE *)v28 + 32);
          *((_OWORD *)v27 + 1) = v178;
        }
        else
        {
          v76 = v28[2];
          v77 = v28[3];
          sub_100121DEC(v76, v77, v75);
          v27[2] = v76;
          v27[3] = v77;
          *((_BYTE *)v27 + 32) = v75;
        }
        v179 = v28[5];
        v27[5] = v179;
        v180 = (int *)type metadata accessor for MoonComponentViewModel(0);
        v181 = v180[7];
        v293 = (char *)v27 + v181;
        v182 = (char *)v28 + v181;
        v183 = type metadata accessor for Date(0);
        v184 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v183 - 8) + 16);
        v185 = swift_bridgeObjectRetain(v179);
        v184(v293, v182, v183, v185);
        *((_BYTE *)v27 + v180[8]) = *((_BYTE *)v28 + v180[8]);
        *(_QWORD *)((char *)v27 + v180[9]) = *(_QWORD *)((char *)v28 + v180[9]);
        v35 = v27;
        v36 = v297;
        v37 = 6;
        goto LABEL_66;
      case 7u:
        v78 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v28) == 1)
        {
          v280 = v78;
          v298 = v29;
          *v27 = *v28;
          v79 = v28[1];
          v27[1] = v79;
          v287 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v80 = v287[5];
          v81 = (char *)v27 + v80;
          v82 = (char *)v28 + v80;
          v83 = type metadata accessor for URL(0);
          swift_bridgeObjectRetain(v79);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
          {
            v84 = sub_1000BA294(&qword_100BD4280);
            memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
          }
          v186 = v287[6];
          v187 = (_QWORD *)((char *)v27 + v186);
          v188 = (_QWORD *)((char *)v28 + v186);
          *v187 = *v188;
          v189 = v188[1];
          v187[1] = v189;
          v190 = v287[7];
          v191 = (char *)v27 + v190;
          v192 = (char *)v28 + v190;
          v193 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
          v194 = swift_bridgeObjectRetain(v189);
          v193(v191, v192, v83, v194);
          v195 = v287[8];
          v196 = (char *)v27 + v195;
          v197 = (char *)v28 + v195;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28 + v195, 1, v83))
          {
            v198 = sub_1000BA294(&qword_100BD4280);
            memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v193)(v196, v197, v83);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v83);
          }
          *((_BYTE *)v27 + v287[9]) = *((_BYTE *)v28 + v287[9]);
          swift_storeEnumTagMultiPayload(v27, v280, 1);
          v29 = v298;
        }
        else
        {
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        v35 = v27;
        v36 = v29;
        v37 = 7;
        goto LABEL_66;
      case 8u:
        *v27 = *v28;
        v85 = v28[1];
        v27[1] = v85;
        v86 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
        v87 = (char *)v27 + v86;
        v88 = (char *)v28 + v86;
        HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
        v90 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8)
                                                                     + 16);
        v91 = swift_bridgeObjectRetain(v85);
        v90(v87, v88, HourPrecipitationChartViewModel, v91);
        v35 = v27;
        v36 = v29;
        v37 = 8;
        goto LABEL_66;
      case 9u:
        v92 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v27, v28, v92);
        v93 = type metadata accessor for NotificationsOptInComponentViewModel(0);
        *((_BYTE *)v27 + *(int *)(v93 + 20)) = *((_BYTE *)v28 + *(int *)(v93 + 20));
        v35 = v27;
        v36 = v29;
        v37 = 9;
        goto LABEL_66;
      case 0xAu:
        *v27 = *v28;
        v94 = v28[1];
        v27[1] = v94;
        v27[2] = v28[2];
        v95 = v28[3];
        v27[3] = v95;
        v27[4] = v28[4];
        v96 = v28[5];
        v27[5] = v96;
        v27[6] = v28[6];
        v97 = v28[7];
        v27[7] = v97;
        v27[8] = v28[8];
        v98 = v28[9];
        v27[9] = v98;
        v27[10] = v28[10];
        v99 = v28[11];
        v27[11] = v99;
        swift_bridgeObjectRetain(v94);
        swift_bridgeObjectRetain(v95);
        swift_bridgeObjectRetain(v96);
        swift_bridgeObjectRetain(v97);
        swift_bridgeObjectRetain(v98);
        swift_bridgeObjectRetain(v99);
        v35 = v27;
        v36 = v29;
        v37 = 10;
        goto LABEL_66;
      case 0xBu:
        v100 = type metadata accessor for PressureTrend(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v27, v28, v100);
        v101 = (int *)type metadata accessor for PressureComponentViewModel(0);
        v102 = v101[5];
        v103 = (_QWORD *)((char *)v27 + v102);
        v104 = (_QWORD *)((char *)v28 + v102);
        *v103 = *v104;
        v105 = v104[1];
        v103[1] = v105;
        v106 = v101[6];
        v107 = (_QWORD *)((char *)v27 + v106);
        v108 = (_QWORD *)((char *)v28 + v106);
        *v107 = *v108;
        v109 = v108[1];
        v107[1] = v109;
        v110 = v101[7];
        v111 = (_QWORD *)((char *)v27 + v110);
        v112 = (_QWORD *)((char *)v28 + v110);
        *v111 = *v112;
        v113 = v112[1];
        v111[1] = v113;
        *(_QWORD *)((char *)v27 + v101[8]) = *(_QWORD *)((char *)v28 + v101[8]);
        v114 = v101[9];
        v115 = (_QWORD *)((char *)v27 + v114);
        v116 = (_QWORD *)((char *)v28 + v114);
        *v115 = *v116;
        v117 = v116[1];
        v115[1] = v117;
        swift_bridgeObjectRetain(v105);
        swift_bridgeObjectRetain(v109);
        swift_bridgeObjectRetain(v113);
        swift_bridgeObjectRetain(v117);
        v35 = v27;
        v36 = v29;
        v37 = 11;
        goto LABEL_66;
      case 0xDu:
        *v27 = *v28;
        v118 = v28[1];
        v27[1] = v118;
        v27[2] = v28[2];
        v119 = v28[3];
        v27[3] = v119;
        v281 = v28[4];
        v27[4] = v281;
        v27[5] = v28[5];
        v120 = v28[6];
        v27[6] = v120;
        v27[7] = v28[7];
        v299 = v29;
        v121 = v28[8];
        v27[8] = v121;
        v288 = type metadata accessor for SevereAlertComponentViewModel(0);
        v122 = *(int *)(v288 + 36);
        v270 = (char *)v28 + v122;
        v274 = (char *)v27 + v122;
        v123 = type metadata accessor for WeatherAlert.Prominence(0);
        v267 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v123 - 8) + 16);
        swift_bridgeObjectRetain(v118);
        swift_bridgeObjectRetain(v119);
        swift_bridgeObjectRetain(v281);
        swift_bridgeObjectRetain(v120);
        v124 = swift_bridgeObjectRetain(v121);
        v267(v274, v270, v123, v124);
        *(_QWORD *)((char *)v27 + *(int *)(v288 + 40)) = *(_QWORD *)((char *)v28 + *(int *)(v288 + 40));
        v35 = v27;
        v36 = v299;
        v37 = 13;
        goto LABEL_66;
      case 0xEu:
        v125 = type metadata accessor for SunriseSunsetViewModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v27, v28, v125);
        v35 = v27;
        v36 = v29;
        v37 = 14;
        goto LABEL_66;
      case 0xFu:
        *v27 = *v28;
        v126 = v28[1];
        v27[1] = v126;
        v27[2] = v28[2];
        v127 = v28[3];
        v27[3] = v127;
        v27[4] = v28[4];
        v128 = v28[5];
        v27[5] = v128;
        v27[6] = v28[6];
        v129 = v28[7];
        v27[7] = v129;
        v27[8] = v28[8];
        v130 = v28[9];
        v27[9] = v130;
        v27[10] = v28[10];
        v300 = v29;
        v131 = v28[11];
        v27[11] = v131;
        v27[12] = v28[12];
        v289 = v28[13];
        v27[13] = v289;
        v27[14] = v28[14];
        v282 = v28[15];
        v27[15] = v282;
        v27[16] = v28[16];
        v275 = v28[17];
        v27[17] = v275;
        v27[18] = v28[18];
        v271 = v28[19];
        v27[19] = v271;
        v27[20] = v28[20];
        v268 = v28[21];
        v27[21] = v268;
        v27[22] = v28[22];
        v265 = v28[23];
        v27[23] = v265;
        v27[24] = v28[24];
        v132 = v28[25];
        v27[25] = v132;
        swift_bridgeObjectRetain(v126);
        swift_bridgeObjectRetain(v127);
        swift_bridgeObjectRetain(v128);
        swift_bridgeObjectRetain(v129);
        swift_bridgeObjectRetain(v130);
        swift_bridgeObjectRetain(v131);
        swift_bridgeObjectRetain(v289);
        swift_bridgeObjectRetain(v282);
        swift_bridgeObjectRetain(v275);
        swift_bridgeObjectRetain(v271);
        swift_bridgeObjectRetain(v268);
        swift_bridgeObjectRetain(v265);
        swift_bridgeObjectRetain(v132);
        v35 = v27;
        v36 = v300;
        v37 = 15;
        goto LABEL_66;
      case 0x10u:
        *v27 = *v28;
        v27[1] = v28[1];
        v27[2] = v28[2];
        v133 = v28[3];
        v27[3] = v133;
        v134 = type metadata accessor for UVIndexComponentViewModel(0);
        v135 = *(int *)(v134 + 28);
        v290 = (char *)v27 + v135;
        v136 = (char *)v28 + v135;
        v301 = v29;
        v137 = type metadata accessor for WeatherDescription(0);
        v138 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v137 - 8) + 16);
        v139 = swift_bridgeObjectRetain(v133);
        v138(v290, v136, v137, v139);
        v140 = *(int *)(v134 + 32);
        v141 = *(_QWORD *)((char *)v28 + v140);
        *(_QWORD *)((char *)v27 + v140) = v141;
        swift_bridgeObjectRetain(v141);
        v35 = v27;
        v36 = v301;
        v37 = 16;
        goto LABEL_66;
      case 0x11u:
        *v27 = *v28;
        v142 = v28[1];
        v27[1] = v142;
        v27[2] = v28[2];
        v143 = v28[3];
        v27[3] = v143;
        v27[4] = v28[4];
        v144 = v28[5];
        v27[5] = v144;
        swift_bridgeObjectRetain(v142);
        swift_bridgeObjectRetain(v143);
        swift_bridgeObjectRetain(v144);
        v35 = v27;
        v36 = v29;
        v37 = 17;
        goto LABEL_66;
      case 0x12u:
        *v27 = *v28;
        v291 = v28[1];
        v27[1] = v291;
        v27[2] = v28[2];
        v145 = v28[3];
        v27[3] = v145;
        v27[4] = v28[4];
        v146 = v28[5];
        v27[5] = v146;
        v27[6] = v28[6];
        v302 = v29;
        v147 = v28[7];
        v27[7] = v147;
        v27[8] = v28[8];
        v283 = v28[9];
        v27[9] = v283;
        v27[10] = v28[10];
        v276 = v28[11];
        v27[11] = v276;
        v27[12] = v28[12];
        v272 = v28[13];
        v27[13] = v272;
        v27[14] = v28[14];
        v269 = v28[15];
        v27[15] = v269;
        v27[16] = v28[16];
        v266 = v28[17];
        v27[17] = v266;
        v27[18] = v28[18];
        v264 = v28[19];
        v27[19] = v264;
        v27[20] = v28[20];
        v263 = v28[21];
        v27[21] = v263;
        v27[22] = v28[22];
        v27[23] = v28[23];
        v148 = v28[24];
        v27[24] = v148;
        v149 = type metadata accessor for WindComponentViewModel(0);
        v150 = *(int *)(v149 + 68);
        v261 = (char *)v27 + v150;
        v262 = v149;
        v260 = (char *)v28 + v150;
        v151 = type metadata accessor for WindComponentCompassViewModel(0);
        v259 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v151 - 8) + 16);
        swift_bridgeObjectRetain(v291);
        swift_bridgeObjectRetain(v145);
        swift_bridgeObjectRetain(v146);
        swift_bridgeObjectRetain(v147);
        swift_bridgeObjectRetain(v283);
        swift_bridgeObjectRetain(v276);
        swift_bridgeObjectRetain(v272);
        swift_bridgeObjectRetain(v269);
        swift_bridgeObjectRetain(v266);
        swift_bridgeObjectRetain(v264);
        swift_bridgeObjectRetain(v263);
        v152 = swift_bridgeObjectRetain(v148);
        v259(v261, v260, v151, v152);
        v153 = *(int *)(v262 + 72);
        v154 = *(_QWORD *)((char *)v28 + v153);
        *(_QWORD *)((char *)v27 + v153) = v154;
        swift_bridgeObjectRetain(v154);
        v35 = v27;
        v36 = v302;
        v37 = 18;
        goto LABEL_66;
      default:
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        break;
    }
  }
  v235 = a3[8];
  v236 = a1 + v235;
  v237 = a2 + v235;
  v238 = *(_QWORD *)v237;
  v239 = *(_BYTE *)(v237 + 8);
  sub_10008D47C(*(_QWORD *)v237, v239);
  v240 = *(_QWORD *)v236;
  v241 = *(_BYTE *)(v236 + 8);
  *(_QWORD *)v236 = v238;
  *(_BYTE *)(v236 + 8) = v239;
  sub_1000B15F8(v240, v241);
  if (a1 != a2)
  {
    v242 = a3[9];
    v243 = (_QWORD *)(a1 + v242);
    v244 = (_QWORD *)(a2 + v242);
    sub_100021A14(a1 + v242, &qword_100BE21F0);
    v245 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v244) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v246 = (char *)&loc_100449400 + 4 * byte_10099F99A[swift_getEnumCaseMultiPayload(v244)];
      __asm { BR              X10 }
    }
    *v243 = *v244;
    swift_retain();
    swift_storeEnumTagMultiPayload(v243, v245, 0);
  }
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v247 = a3[11];
  v248 = a1 + v247;
  v249 = a2 + v247;
  v250 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v250 - 8) + 24))(v248, v249, v250);
  v251 = a3[12];
  v252 = *(_QWORD *)(a1 + v251);
  *(_QWORD *)(a1 + v251) = *(_QWORD *)(a2 + v251);
  swift_retain();
  swift_release(v252);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v253 = a3[14];
  v254 = a1 + v253;
  v255 = (__int128 *)(a2 + v253);
  v256 = *v255;
  v257 = v255[1];
  *(_BYTE *)(v254 + 32) = *((_BYTE *)v255 + 32);
  *(_OWORD *)v254 = v256;
  *(_OWORD *)(v254 + 16) = v257;
  return a1;
}

char *sub_100449704(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  int *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  __int128 v162;
  uint64_t v164;
  char *__src;
  int *v166;
  char *__dsta;
  char *__dst;
  int *v169;
  void (*v170)(char *, char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _OWORD *v174;

  v6 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    v7 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v11 = a3[5];
  v12 = a3[6];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = &a1[v12];
  v16 = &a2[v12];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for LocationComponentViewModel(0);
  switch(swift_getEnumCaseMultiPayload(v19))
  {
    case 1u:
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v21 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v22 = v21[5];
      v23 = &v18[v22];
      v24 = &v19[v22];
      v25 = sub_1000BA294(&qword_100BC4E68);
      v171 = v20;
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
      v26(v23, v24, v25);
      v26(&v18[v21[6]], &v19[v21[6]], v25);
      v26(&v18[v21[7]], &v19[v21[7]], v25);
      *(_OWORD *)&v18[v21[8]] = *(_OWORD *)&v19[v21[8]];
      *(_OWORD *)&v18[v21[9]] = *(_OWORD *)&v19[v21[9]];
      v27 = v18;
      v28 = v171;
      v29 = 1;
      goto LABEL_51;
    case 2u:
      v30 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v30;
      v31 = type metadata accessor for FeelsLikeComponentViewModel(0);
      v32 = *(int *)(v31 + 24);
      v33 = &v18[v32];
      v34 = &v19[v32];
      v35 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        v36 = sub_1000BA294(&qword_100BC3360);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v33 = *(_OWORD *)v34;
        v93 = *(int *)(v35 + 20);
        v173 = v31;
        v94 = &v33[v93];
        v95 = &v34[v93];
        v96 = type metadata accessor for TemperatureScaleConfiguration(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
        v97 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(_QWORD *)&v94[v97[5]] = *(_QWORD *)&v95[v97[5]];
        *(_QWORD *)&v94[v97[6]] = *(_QWORD *)&v95[v97[6]];
        *(_QWORD *)&v94[v97[7]] = *(_QWORD *)&v95[v97[7]];
        *(_OWORD *)&v94[v97[8]] = *(_OWORD *)&v95[v97[8]];
        v94[v97[9]] = v95[v97[9]];
        v31 = v173;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      }
      *(_OWORD *)&v18[*(int *)(v31 + 28)] = *(_OWORD *)&v19[*(int *)(v31 + 28)];
      v27 = v18;
      v28 = v20;
      v29 = 2;
      goto LABEL_51;
    case 5u:
      v37 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v18, v19, v37);
      v38 = (int *)type metadata accessor for MapComponentViewModel(0);
      v39 = v38[5];
      v40 = &v18[v39];
      v41 = &v19[v39];
      v42 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
      v43 = v38[6];
      v44 = &v18[v43];
      v45 = &v19[v43];
      v46 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        v47 = sub_1000BA294(&qword_100BC3460);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v166 = v38;
        *(_OWORD *)v44 = *(_OWORD *)v45;
        v169 = (int *)v46;
        v174 = v44;
        v98 = *(int *)(v46 + 20);
        v99 = &v44[v98];
        v100 = &v45[v98];
        v101 = type metadata accessor for Locale(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
        {
          v102 = sub_1000BA294(&qword_100BC3340);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
        }
        v108 = v169[6];
        __dsta = (char *)v174 + v108;
        v109 = &v45[v108];
        v110 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(__dsta, v109, v110);
        v111 = v169[7];
        v112 = (char *)v174 + v111;
        v113 = &v45[v111];
        v114 = sub_1000BA294(&qword_100BC3348);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v114))
        {
          v115 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        else
        {
          v116 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v112, v113, v116);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v114);
        }
        v117 = v169[8];
        v118 = (char *)v174 + v117;
        v119 = &v45[v117];
        v120 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload(v119) == 1)
        {
          v121 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v118, v119, v121);
          swift_storeEnumTagMultiPayload(v118, v120, 1);
        }
        else
        {
          memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        v123 = (uint64_t)v169;
        v122 = (uint64_t)v174;
        v124 = v169[9];
        __dst = (char *)v174 + v124;
        v125 = (uint64_t)&v45[v124];
        v126 = type metadata accessor for WeatherDataOverrides(0);
        __src = (char *)v125;
        v127 = _s7Weather24LocationCompositionStateOwet_0(v125, 1, v126);
        v38 = v166;
        if (v127)
        {
          v128 = sub_1000BA294(&qword_100BC3350);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          v164 = v126;
          v129 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__src, 1, v129))
          {
            v130 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            v131 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          }
          else
          {
            v131 = __dst;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(__dst, __src, v129);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v129);
          }
          v132 = *(int *)(v164 + 20);
          v133 = &v131[v132];
          v134 = &__src[v132];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__src[v132], 1, v129))
          {
            v135 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v133, v134, v129);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v133, 0, 1, v129);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v164);
          v123 = (uint64_t)v169;
          v122 = (uint64_t)v174;
        }
        _s7Weather24LocationCompositionStateOwst_0(v122, 0, 1, v123);
      }
      *(_OWORD *)&v18[v38[7]] = *(_OWORD *)&v19[v38[7]];
      v27 = v18;
      v28 = v20;
      v29 = 5;
      goto LABEL_51;
    case 6u:
      v48 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v48;
      v18[32] = v19[32];
      *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      v49 = (int *)type metadata accessor for MoonComponentViewModel(0);
      v50 = v49[7];
      v51 = &v18[v50];
      v52 = &v19[v50];
      v53 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      v18[v49[8]] = v19[v49[8]];
      *(_QWORD *)&v18[v49[9]] = *(_QWORD *)&v19[v49[9]];
      v27 = v18;
      v28 = v20;
      v29 = 6;
      goto LABEL_51;
    case 7u:
      v54 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v19) == 1)
      {
        v172 = v54;
        *(_OWORD *)v18 = *(_OWORD *)v19;
        v55 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v56 = v55[5];
        v57 = &v18[v56];
        v58 = &v19[v56];
        v59 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
        {
          v60 = sub_1000BA294(&qword_100BD4280);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32);
        }
        else
        {
          v103 = v58;
          v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32);
          v61(v57, v103, v59);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
        }
        *(_OWORD *)&v18[v55[6]] = *(_OWORD *)&v19[v55[6]];
        v170 = v61;
        v61(&v18[v55[7]], &v19[v55[7]], v59);
        v104 = v55[8];
        v105 = &v18[v104];
        v106 = &v19[v104];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v19[v104], 1, v59))
        {
          v107 = sub_1000BA294(&qword_100BD4280);
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        }
        else
        {
          v170(v105, v106, v59);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v59);
        }
        v18[v55[9]] = v19[v55[9]];
        swift_storeEnumTagMultiPayload(v18, v172, 1);
      }
      else
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      v27 = v18;
      v28 = v20;
      v29 = 7;
      goto LABEL_51;
    case 8u:
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v62 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      v63 = &v18[v62];
      v64 = &v19[v62];
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v63, v64, HourPrecipitationChartViewModel);
      v27 = v18;
      v28 = v20;
      v29 = 8;
      goto LABEL_51;
    case 9u:
      v66 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v18, v19, v66);
      v67 = type metadata accessor for NotificationsOptInComponentViewModel(0);
      v18[*(int *)(v67 + 20)] = v19[*(int *)(v67 + 20)];
      v27 = v18;
      v28 = v20;
      v29 = 9;
      goto LABEL_51;
    case 0xBu:
      v68 = type metadata accessor for PressureTrend(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v18, v19, v68);
      v69 = (int *)type metadata accessor for PressureComponentViewModel(0);
      *(_OWORD *)&v18[v69[5]] = *(_OWORD *)&v19[v69[5]];
      *(_OWORD *)&v18[v69[6]] = *(_OWORD *)&v19[v69[6]];
      *(_OWORD *)&v18[v69[7]] = *(_OWORD *)&v19[v69[7]];
      *(_QWORD *)&v18[v69[8]] = *(_QWORD *)&v19[v69[8]];
      *(_OWORD *)&v18[v69[9]] = *(_OWORD *)&v19[v69[9]];
      v27 = v18;
      v28 = v20;
      v29 = 11;
      goto LABEL_51;
    case 0xDu:
      v70 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v70;
      *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
      *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
      *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
      v71 = type metadata accessor for SevereAlertComponentViewModel(0);
      v72 = *(int *)(v71 + 36);
      v73 = &v18[v72];
      v74 = &v19[v72];
      v75 = type metadata accessor for WeatherAlert.Prominence(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
      *(_QWORD *)&v18[*(int *)(v71 + 40)] = *(_QWORD *)&v19[*(int *)(v71 + 40)];
      v27 = v18;
      v28 = v20;
      v29 = 13;
      goto LABEL_51;
    case 0xEu:
      v76 = type metadata accessor for SunriseSunsetViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v18, v19, v76);
      v27 = v18;
      v28 = v20;
      v29 = 14;
      goto LABEL_51;
    case 0x10u:
      v77 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v77;
      v78 = type metadata accessor for UVIndexComponentViewModel(0);
      v79 = *(int *)(v78 + 28);
      v80 = &v18[v79];
      v81 = &v19[v79];
      v82 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
      *(_QWORD *)&v18[*(int *)(v78 + 32)] = *(_QWORD *)&v19[*(int *)(v78 + 32)];
      v27 = v18;
      v28 = v20;
      v29 = 16;
      goto LABEL_51;
    case 0x12u:
      v83 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v83;
      v84 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v84;
      v85 = *((_OWORD *)v19 + 5);
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 5) = v85;
      v86 = *((_OWORD *)v19 + 7);
      *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
      *((_OWORD *)v18 + 7) = v86;
      v87 = *((_OWORD *)v19 + 9);
      *((_OWORD *)v18 + 8) = *((_OWORD *)v19 + 8);
      *((_OWORD *)v18 + 9) = v87;
      *((_OWORD *)v18 + 10) = *((_OWORD *)v19 + 10);
      *((_QWORD *)v18 + 22) = *((_QWORD *)v19 + 22);
      *(_OWORD *)(v18 + 184) = *(_OWORD *)(v19 + 184);
      v88 = type metadata accessor for WindComponentViewModel(0);
      v89 = *(int *)(v88 + 68);
      v90 = &v18[v89];
      v91 = &v19[v89];
      v92 = type metadata accessor for WindComponentCompassViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
      *(_QWORD *)&v18[*(int *)(v88 + 72)] = *(_QWORD *)&v19[*(int *)(v88 + 72)];
      v27 = v18;
      v28 = v20;
      v29 = 18;
LABEL_51:
      swift_storeEnumTagMultiPayload(v27, v28, v29);
      break;
    default:
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      break;
  }
  v136 = a3[8];
  v137 = a3[9];
  v138 = &a1[v136];
  v139 = &a2[v136];
  *(_QWORD *)v138 = *(_QWORD *)v139;
  v138[8] = v139[8];
  v140 = &a1[v137];
  v141 = &a2[v137];
  v142 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v141) == 1)
  {
    v143 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(v141) == 3)
    {
      v144 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v140, v141, v144);
      v145 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v146 = *(int *)(v145 + 20);
      v147 = &v140[v146];
      v148 = &v141[v146];
      v149 = *((_OWORD *)v148 + 1);
      *(_OWORD *)v147 = *(_OWORD *)v148;
      *((_OWORD *)v147 + 1) = v149;
      *((_OWORD *)v147 + 2) = *((_OWORD *)v148 + 2);
      *((_QWORD *)v147 + 6) = *((_QWORD *)v148 + 6);
      v140[*(int *)(v145 + 24)] = v141[*(int *)(v145 + 24)];
      swift_storeEnumTagMultiPayload(v140, v143, 3);
    }
    else
    {
      memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
    }
    v150 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(_QWORD *)&v140[v150[5]] = *(_QWORD *)&v141[v150[5]];
    *(_QWORD *)&v140[v150[6]] = *(_QWORD *)&v141[v150[6]];
    v151 = v150[7];
    v152 = &v140[v151];
    v153 = &v141[v151];
    *(_QWORD *)v152 = *(_QWORD *)v153;
    v152[8] = v153[8];
    v140[v150[8]] = v141[v150[8]];
    swift_storeEnumTagMultiPayload(v140, v142, 1);
  }
  else
  {
    memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
  }
  v154 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v155 = &a1[v154];
  v156 = &a2[v154];
  v157 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
  v158 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v158] = *(_QWORD *)&a2[v158];
  v159 = a3[14];
  v160 = &a1[v159];
  v161 = &a2[v159];
  v162 = *((_OWORD *)v161 + 1);
  *(_OWORD *)v160 = *(_OWORD *)v161;
  *((_OWORD *)v160 + 1) = v162;
  v160[32] = v161[32];
  return a1;
}

char *sub_10044A4A0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  __int128 v158;
  int *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  __int128 v172;
  uint64_t v174;
  char *__src;
  int *v176;
  char *__dsta;
  char *__dst;
  int *v179;
  void (*v180)(char *, char *, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _OWORD *v184;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BC37E0);
    v6 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      v7 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  sub_1000B15F8(v15, v16);
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = v19[8];
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v19;
  sub_1000B15F8(v21, v22);
  if (a1 != a2)
  {
    v23 = a3[7];
    v24 = &a1[v23];
    v25 = &a2[v23];
    sub_100441DDC((uint64_t)&a1[v23], type metadata accessor for LocationComponentViewModel);
    v26 = type metadata accessor for LocationComponentViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v25))
    {
      case 1u:
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v27 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        v28 = v27[5];
        v29 = &v24[v28];
        v30 = &v25[v28];
        v31 = sub_1000BA294(&qword_100BC4E68);
        v181 = v26;
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
        v32(v29, v30, v31);
        v32(&v24[v27[6]], &v25[v27[6]], v31);
        v32(&v24[v27[7]], &v25[v27[7]], v31);
        *(_OWORD *)&v24[v27[8]] = *(_OWORD *)&v25[v27[8]];
        *(_OWORD *)&v24[v27[9]] = *(_OWORD *)&v25[v27[9]];
        v33 = v24;
        v34 = v181;
        v35 = 1;
        goto LABEL_53;
      case 2u:
        v36 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v36;
        v37 = type metadata accessor for FeelsLikeComponentViewModel(0);
        v38 = *(int *)(v37 + 24);
        v39 = &v24[v38];
        v40 = &v25[v38];
        v41 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
        {
          v42 = sub_1000BA294(&qword_100BC3360);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v39 = *(_OWORD *)v40;
          v99 = *(int *)(v41 + 20);
          v183 = v37;
          v100 = &v39[v99];
          v101 = &v40[v99];
          v102 = type metadata accessor for TemperatureScaleConfiguration(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
          v103 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(_QWORD *)&v100[v103[5]] = *(_QWORD *)&v101[v103[5]];
          *(_QWORD *)&v100[v103[6]] = *(_QWORD *)&v101[v103[6]];
          *(_QWORD *)&v100[v103[7]] = *(_QWORD *)&v101[v103[7]];
          *(_OWORD *)&v100[v103[8]] = *(_OWORD *)&v101[v103[8]];
          v100[v103[9]] = v101[v103[9]];
          v37 = v183;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
        }
        *(_OWORD *)&v24[*(int *)(v37 + 28)] = *(_OWORD *)&v25[*(int *)(v37 + 28)];
        v33 = v24;
        v34 = v26;
        v35 = 2;
        goto LABEL_53;
      case 5u:
        v43 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v24, v25, v43);
        v44 = (int *)type metadata accessor for MapComponentViewModel(0);
        v45 = v44[5];
        v46 = &v24[v45];
        v47 = &v25[v45];
        v48 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
        v49 = v44[6];
        v50 = &v24[v49];
        v51 = &v25[v49];
        v52 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          v53 = sub_1000BA294(&qword_100BC3460);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v176 = v44;
          *(_OWORD *)v50 = *(_OWORD *)v51;
          v179 = (int *)v52;
          v184 = v50;
          v104 = *(int *)(v52 + 20);
          v105 = &v50[v104];
          v106 = &v51[v104];
          v107 = type metadata accessor for Locale(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
          {
            v108 = sub_1000BA294(&qword_100BC3340);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
          }
          v114 = v179[6];
          __dsta = (char *)v184 + v114;
          v115 = &v51[v114];
          v116 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(__dsta, v115, v116);
          v117 = v179[7];
          v118 = (char *)v184 + v117;
          v119 = &v51[v117];
          v120 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
          {
            v121 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            v122 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v118, v119, v122);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
          }
          v123 = v179[8];
          v124 = (char *)v184 + v123;
          v125 = &v51[v123];
          v126 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v125) == 1)
          {
            v127 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v124, v125, v127);
            swift_storeEnumTagMultiPayload(v124, v126, 1);
          }
          else
          {
            memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
          }
          v129 = (uint64_t)v179;
          v128 = (uint64_t)v184;
          v130 = v179[9];
          __dst = (char *)v184 + v130;
          v131 = (uint64_t)&v51[v130];
          v132 = type metadata accessor for WeatherDataOverrides(0);
          __src = (char *)v131;
          v133 = _s7Weather24LocationCompositionStateOwet_0(v131, 1, v132);
          v44 = v176;
          if (v133)
          {
            v134 = sub_1000BA294(&qword_100BC3350);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
          }
          else
          {
            v174 = v132;
            v135 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__src, 1, v135))
            {
              v136 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              v137 = __dst;
              memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
            }
            else
            {
              v137 = __dst;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(__dst, __src, v135);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v135);
            }
            v138 = *(int *)(v174 + 20);
            v139 = &v137[v138];
            v140 = &__src[v138];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__src[v138], 1, v135))
            {
              v141 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v139, v140, v135);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v139, 0, 1, v135);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v174);
            v129 = (uint64_t)v179;
            v128 = (uint64_t)v184;
          }
          _s7Weather24LocationCompositionStateOwst_0(v128, 0, 1, v129);
        }
        *(_OWORD *)&v24[v44[7]] = *(_OWORD *)&v25[v44[7]];
        v33 = v24;
        v34 = v26;
        v35 = 5;
        goto LABEL_53;
      case 6u:
        v54 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v54;
        v24[32] = v25[32];
        *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
        v55 = (int *)type metadata accessor for MoonComponentViewModel(0);
        v56 = v55[7];
        v57 = &v24[v56];
        v58 = &v25[v56];
        v59 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
        v24[v55[8]] = v25[v55[8]];
        *(_QWORD *)&v24[v55[9]] = *(_QWORD *)&v25[v55[9]];
        v33 = v24;
        v34 = v26;
        v35 = 6;
        goto LABEL_53;
      case 7u:
        v60 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v25) == 1)
        {
          v182 = v60;
          *(_OWORD *)v24 = *(_OWORD *)v25;
          v61 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v62 = v61[5];
          v63 = &v24[v62];
          v64 = &v25[v62];
          v65 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
          {
            v66 = sub_1000BA294(&qword_100BD4280);
            memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
            v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32);
          }
          else
          {
            v109 = v64;
            v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32);
            v67(v63, v109, v65);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
          }
          *(_OWORD *)&v24[v61[6]] = *(_OWORD *)&v25[v61[6]];
          v180 = v67;
          v67(&v24[v61[7]], &v25[v61[7]], v65);
          v110 = v61[8];
          v111 = &v24[v110];
          v112 = &v25[v110];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v110], 1, v65))
          {
            v113 = sub_1000BA294(&qword_100BD4280);
            memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          }
          else
          {
            v180(v111, v112, v65);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v65);
          }
          v24[v61[9]] = v25[v61[9]];
          swift_storeEnumTagMultiPayload(v24, v182, 1);
        }
        else
        {
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        v33 = v24;
        v34 = v26;
        v35 = 7;
        goto LABEL_53;
      case 8u:
        *(_OWORD *)v24 = *(_OWORD *)v25;
        v68 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
        v69 = &v24[v68];
        v70 = &v25[v68];
        HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v69, v70, HourPrecipitationChartViewModel);
        v33 = v24;
        v34 = v26;
        v35 = 8;
        goto LABEL_53;
      case 9u:
        v72 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v24, v25, v72);
        v73 = type metadata accessor for NotificationsOptInComponentViewModel(0);
        v24[*(int *)(v73 + 20)] = v25[*(int *)(v73 + 20)];
        v33 = v24;
        v34 = v26;
        v35 = 9;
        goto LABEL_53;
      case 0xBu:
        v74 = type metadata accessor for PressureTrend(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v24, v25, v74);
        v75 = (int *)type metadata accessor for PressureComponentViewModel(0);
        *(_OWORD *)&v24[v75[5]] = *(_OWORD *)&v25[v75[5]];
        *(_OWORD *)&v24[v75[6]] = *(_OWORD *)&v25[v75[6]];
        *(_OWORD *)&v24[v75[7]] = *(_OWORD *)&v25[v75[7]];
        *(_QWORD *)&v24[v75[8]] = *(_QWORD *)&v25[v75[8]];
        *(_OWORD *)&v24[v75[9]] = *(_OWORD *)&v25[v75[9]];
        v33 = v24;
        v34 = v26;
        v35 = 11;
        goto LABEL_53;
      case 0xDu:
        v76 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v76;
        *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
        *(_OWORD *)(v24 + 40) = *(_OWORD *)(v25 + 40);
        *(_OWORD *)(v24 + 56) = *(_OWORD *)(v25 + 56);
        v77 = type metadata accessor for SevereAlertComponentViewModel(0);
        v78 = *(int *)(v77 + 36);
        v79 = &v24[v78];
        v80 = &v25[v78];
        v81 = type metadata accessor for WeatherAlert.Prominence(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
        *(_QWORD *)&v24[*(int *)(v77 + 40)] = *(_QWORD *)&v25[*(int *)(v77 + 40)];
        v33 = v24;
        v34 = v26;
        v35 = 13;
        goto LABEL_53;
      case 0xEu:
        v82 = type metadata accessor for SunriseSunsetViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v24, v25, v82);
        v33 = v24;
        v34 = v26;
        v35 = 14;
        goto LABEL_53;
      case 0x10u:
        v83 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v83;
        v84 = type metadata accessor for UVIndexComponentViewModel(0);
        v85 = *(int *)(v84 + 28);
        v86 = &v24[v85];
        v87 = &v25[v85];
        v88 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
        *(_QWORD *)&v24[*(int *)(v84 + 32)] = *(_QWORD *)&v25[*(int *)(v84 + 32)];
        v33 = v24;
        v34 = v26;
        v35 = 16;
        goto LABEL_53;
      case 0x12u:
        v89 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v89;
        v90 = *((_OWORD *)v25 + 3);
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        *((_OWORD *)v24 + 3) = v90;
        v91 = *((_OWORD *)v25 + 5);
        *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
        *((_OWORD *)v24 + 5) = v91;
        v92 = *((_OWORD *)v25 + 7);
        *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
        *((_OWORD *)v24 + 7) = v92;
        v93 = *((_OWORD *)v25 + 9);
        *((_OWORD *)v24 + 8) = *((_OWORD *)v25 + 8);
        *((_OWORD *)v24 + 9) = v93;
        *((_OWORD *)v24 + 10) = *((_OWORD *)v25 + 10);
        *((_QWORD *)v24 + 22) = *((_QWORD *)v25 + 22);
        *(_OWORD *)(v24 + 184) = *(_OWORD *)(v25 + 184);
        v94 = type metadata accessor for WindComponentViewModel(0);
        v95 = *(int *)(v94 + 68);
        v96 = &v24[v95];
        v97 = &v25[v95];
        v98 = type metadata accessor for WindComponentCompassViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
        *(_QWORD *)&v24[*(int *)(v94 + 72)] = *(_QWORD *)&v25[*(int *)(v94 + 72)];
        v33 = v24;
        v34 = v26;
        v35 = 18;
LABEL_53:
        swift_storeEnumTagMultiPayload(v33, v34, v35);
        break;
      default:
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        break;
    }
  }
  v142 = a3[8];
  v143 = &a1[v142];
  v144 = &a2[v142];
  v145 = *(_QWORD *)v144;
  LOBYTE(v144) = v144[8];
  v146 = *(_QWORD *)v143;
  v147 = v143[8];
  *(_QWORD *)v143 = v145;
  v143[8] = (char)v144;
  sub_1000B15F8(v146, v147);
  if (a1 != a2)
  {
    v148 = a3[9];
    v149 = &a1[v148];
    v150 = &a2[v148];
    sub_100021A14((uint64_t)&a1[v148], &qword_100BE21F0);
    v151 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v150) == 1)
    {
      v152 = type metadata accessor for LocationComponentHeaderViewModel(0);
      if (swift_getEnumCaseMultiPayload(v150) == 3)
      {
        v153 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v149, v150, v153);
        v154 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        v155 = *(int *)(v154 + 20);
        v156 = &v149[v155];
        v157 = &v150[v155];
        v158 = *((_OWORD *)v157 + 1);
        *(_OWORD *)v156 = *(_OWORD *)v157;
        *((_OWORD *)v156 + 1) = v158;
        *((_OWORD *)v156 + 2) = *((_OWORD *)v157 + 2);
        *((_QWORD *)v156 + 6) = *((_QWORD *)v157 + 6);
        v149[*(int *)(v154 + 24)] = v150[*(int *)(v154 + 24)];
        swift_storeEnumTagMultiPayload(v149, v152, 3);
      }
      else
      {
        memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
      }
      v159 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(_QWORD *)&v149[v159[5]] = *(_QWORD *)&v150[v159[5]];
      *(_QWORD *)&v149[v159[6]] = *(_QWORD *)&v150[v159[6]];
      v160 = v159[7];
      v161 = &v149[v160];
      v162 = &v150[v160];
      *(_QWORD *)v161 = *(_QWORD *)v162;
      v161[8] = v162[8];
      v149[v159[8]] = v150[v159[8]];
      swift_storeEnumTagMultiPayload(v149, v151, 1);
    }
    else
    {
      memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    }
  }
  v163 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v164 = &a1[v163];
  v165 = &a2[v163];
  v166 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 40))(v164, v165, v166);
  v167 = a3[12];
  v168 = *(_QWORD *)&a1[v167];
  *(_QWORD *)&a1[v167] = *(_QWORD *)&a2[v167];
  swift_release(v168);
  v169 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v170 = &a1[v169];
  v171 = &a2[v169];
  v172 = *((_OWORD *)v171 + 1);
  *(_OWORD *)v170 = *(_OWORD *)v171;
  *((_OWORD *)v170 + 1) = v172;
  v170[32] = v171[32];
  return a1;
}

void sub_10044B2B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_10009E50C();
  sub_1000BA294(&qword_100BC3808);
  sub_100088FF0();
  if (v8)
  {
    v6 = sub_1000890E8();
  }
  else
  {
    sub_100117398();
    sub_100088FF0();
    if (v8)
    {
      v7 = v9;
      v10 = a3[7];
    }
    else
    {
      sub_1000BA294(&qword_100BE2488);
      sub_100088FF0();
      if (v11)
      {
        v7 = v12;
        v10 = a3[9];
      }
      else
      {
        sub_100098AA0();
        sub_100088FF0();
        if (!v13)
        {
          sub_10003BCA4(*(_QWORD *)(v4 + a3[12]));
          sub_100079F70();
          return;
        }
        v7 = v14;
        v10 = a3[11];
      }
    }
    v6 = v4 + v10;
  }
  sub_1000B250C(v6, v3, v7);
}

void sub_10044B35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_10009E50C();
  sub_1000BA294(&qword_100BC3808);
  sub_10009D2E8();
  if (v7
    || (sub_100117398(),
        sub_10009D2E8(),
        v7 || (sub_1000BA294(&qword_100BE2488), sub_10009D2E8(), v8 || (sub_100098AA0(), sub_10009D2E8(), v9))))
  {
    sub_100098D08();
    sub_1000987C4(v10, v11, v12, v13);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 48)) = (v4 - 1);
    sub_100079F70();
  }
}

uint64_t *sub_10044B408(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v8 = (char *)&loc_10044B498 + 4 * byte_10099F9E8[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload(a1, v7, 0);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)v12;
    v14 = v12[8];
    sub_10008D47C(*(_QWORD *)v12, v14);
    *(_QWORD *)v11 = v13;
    v11[8] = v14;
    v15 = *(int *)(a3 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v18 = *((_QWORD *)v17 + 3);
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    *((_QWORD *)v16 + 3) = v18;
  }
  swift_retain();
  return a1;
}

double sub_10044B7A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload(a1))
    {
      case 0u:
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 3u:
        v4 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release(*a1);
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)), *((_BYTE *)a1 + *(int *)(a2 + 20) + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 24)).n128_u64[0];
  return result;
}

_QWORD *sub_10044B908(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v7 = (char *)&loc_10044B98C + 4 * byte_10099F9F2[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  *a1 = *a2;
  swift_retain();
  swift_storeEnumTagMultiPayload(a1, v6, 0);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  sub_10008D47C(*(_QWORD *)v10, v12);
  *(_QWORD *)v9 = v11;
  v9[8] = v12;
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = *((_QWORD *)v15 + 3);
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 3) = v16;
  swift_retain();
  return a1;
}

_QWORD *sub_10044BC78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BE21F0);
    v6 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v7 = (char *)&loc_10044BD14 + 4 * byte_10099F9F7[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload(a1, v6, 0);
  }
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  sub_10008D47C(*(_QWORD *)v10, v12);
  v13 = *(_QWORD *)v9;
  v14 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = v12;
  sub_1000B15F8(v13, v14);
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  v16[2] = v17[2];
  v18 = v16[3];
  v16[3] = v17[3];
  swift_retain();
  swift_release(v18);
  return a1;
}

_BYTE *sub_10044C0D0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;

  v6 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 3)
    {
      v8 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v10 = *(int *)(v9 + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v13;
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
      a1[*(int *)(v9 + 24)] = a2[*(int *)(v9 + 24)];
      swift_storeEnumTagMultiPayload(a1, v7, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v14 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(_QWORD *)&a1[v14[5]] = *(_QWORD *)&a2[v14[5]];
    *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
    v15 = v14[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    a1[v14[8]] = a2[v14[8]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v18 = *(int *)(a3 + 20);
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  return a1;
}

_BYTE *sub_10044C268(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BE21F0);
    v6 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for LocationComponentHeaderViewModel(0);
      if (swift_getEnumCaseMultiPayload(a2) == 3)
      {
        v8 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        v10 = *(int *)(v9 + 20);
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = *((_OWORD *)v12 + 1);
        *(_OWORD *)v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v13;
        *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
        *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
        a1[*(int *)(v9 + 24)] = a2[*(int *)(v9 + 24)];
        swift_storeEnumTagMultiPayload(a1, v7, 3);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      v14 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(_QWORD *)&a1[v14[5]] = *(_QWORD *)&a2[v14[5]];
      *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
      v15 = v14[7];
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      v16[8] = v17[8];
      a1[v14[8]] = a2[v14[8]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v18 = *(int *)(a3 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)v20;
  LOBYTE(v20) = v20[8];
  v22 = *(_QWORD *)v19;
  v23 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = (char)v20;
  sub_1000B15F8(v22, v23);
  v24 = *(int *)(a3 + 24);
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
  v27 = *((_QWORD *)v25 + 3);
  *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
  swift_release(v27);
  return a1;
}

void sub_10044C440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000BA294(&qword_100BE2488);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1000B250C(a1, a2, v6);
  }
  else
  {
    sub_1000C016C(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 24));
    sub_100079F70();
  }
}

void sub_10044C4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_10009E50C();
  sub_1000BA294(&qword_100BE2488);
  sub_10009D2E8();
  if (v7)
  {
    sub_100098D08();
    sub_1000987C4(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 24) + 24) = v4;
    sub_100079F70();
  }
}

void sub_10044C500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10045A198(a1, a2, a3, (uint64_t)&unk_1009A0088);
}

uint64_t destroy for ApplyLocationComponentContentWidthModifier(uint64_t a1)
{
  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return sub_100082C5C(*(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25));
}

uint64_t initializeWithCopy for ApplyLocationComponentContentWidthModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 25);
  v8 = *(unsigned __int8 *)(a2 + 24);
  sub_100082BE8(v6, v8, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 25) = v7;
  return a1;
}

uint64_t assignWithCopy for ApplyLocationComponentContentWidthModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 25);
  v10 = *(unsigned __int8 *)(a2 + 24);
  sub_100082BE8(v8, v10, v9);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)(a1 + 16) = v8;
  v13 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 25) = v9;
  sub_100082C5C(v11, v13, v12);
  return a1;
}

uint64_t assignWithTake for ApplyLocationComponentContentWidthModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *((_BYTE *)a2 + 25);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)(a1 + 16) = a2[2];
  v12 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 25) = v9;
  sub_100082C5C(v10, v12, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplyLocationComponentContentWidthModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 26))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplyLocationComponentContentWidthModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplyLocationComponentContentWidthModifier()
{
  return &type metadata for ApplyLocationComponentContentWidthModifier;
}

unint64_t sub_10044C73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_10008D47C(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = a2 + *(int *)(a3 + 24);
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v12 = (char *)&loc_10044C7F4 + 4 * byte_10099F9FC[swift_getEnumCaseMultiPayload(v11)];
    __asm { BR              X10 }
  }
  v13 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v14 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v14;
}

uint64_t sub_10044DC80(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  _BYTE *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  int *__src;
  char *v159;
  char *v160;
  char *v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *__dstc;
  char *__dst;
  char *__dsta;
  int *__dstb;
  int *v172;
  int *v173;
  int *v174;
  int *v175;
  int *v176;
  int *v177;
  char *v178;
  int *v179;
  uint64_t v180;
  int *v181;
  int *v182;
  int *v183;
  int *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;

  v3 = a3;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (swift_getEnumCaseMultiPayload(v8) == 3)
  {
    v10 = type metadata accessor for WeatherDescription(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    v11 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    v12 = *(int *)(v11 + 20);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
    v7[*(int *)(v11 + 24)] = v8[*(int *)(v11 + 24)];
    swift_storeEnumTagMultiPayload(v7, v9, 3);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v16 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v17 = v16[5];
  v18 = &v7[v17];
  v19 = &v8[v17];
  v20 = type metadata accessor for LocationComponentViewModel(0);
  switch(swift_getEnumCaseMultiPayload(v19))
  {
    case 1u:
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v172 = v3;
      v176 = v16;
      v21 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v22 = v21[5];
      v23 = &v18[v22];
      __dstc = &v19[v22];
      v185 = v20;
      v24 = sub_1000BA294(&qword_100BC4E68);
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
      v26 = v23;
      v16 = v176;
      v25(v26, __dstc, v24);
      v25(&v18[v21[6]], &v19[v21[6]], v24);
      v25(&v18[v21[7]], &v19[v21[7]], v24);
      *(_OWORD *)&v18[v21[8]] = *(_OWORD *)&v19[v21[8]];
      v27 = v21[9];
      v3 = v172;
      *(_OWORD *)&v18[v27] = *(_OWORD *)&v19[v27];
      v28 = v18;
      v29 = v185;
      v30 = 1;
      goto LABEL_51;
    case 2u:
      v173 = v3;
      v177 = v16;
      v31 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v31;
      v32 = type metadata accessor for FeelsLikeComponentViewModel(0);
      v33 = *(int *)(v32 + 24);
      __dst = &v18[v33];
      v34 = &v19[v33];
      v35 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        v36 = sub_1000BA294(&qword_100BC3360);
        memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v34;
        v94 = *(int *)(v35 + 20);
        v193 = v20;
        v95 = &__dst[v94];
        v167 = v32;
        v96 = &v34[v94];
        v97 = type metadata accessor for TemperatureScaleConfiguration(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
        v98 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(_QWORD *)&v95[v98[5]] = *(_QWORD *)&v96[v98[5]];
        *(_QWORD *)&v95[v98[6]] = *(_QWORD *)&v96[v98[6]];
        *(_QWORD *)&v95[v98[7]] = *(_QWORD *)&v96[v98[7]];
        *(_OWORD *)&v95[v98[8]] = *(_OWORD *)&v96[v98[8]];
        v99 = v98[9];
        v100 = v96[v99];
        v32 = v167;
        v95[v99] = v100;
        v20 = v193;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v35);
      }
      v3 = v173;
      v16 = v177;
      *(_OWORD *)&v18[*(int *)(v32 + 28)] = *(_OWORD *)&v19[*(int *)(v32 + 28)];
      v28 = v18;
      v29 = v20;
      v30 = 2;
      goto LABEL_51;
    case 5u:
      v186 = v20;
      v37 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v18, v19, v37);
      v38 = type metadata accessor for MapComponentViewModel(0);
      v39 = *(int *)(v38 + 20);
      v178 = &v18[v39];
      v40 = &v19[v39];
      v41 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v178, v40, v41);
      v42 = *(int *)(v38 + 24);
      v165 = v38;
      __dsta = &v18[v42];
      v43 = &v19[v42];
      v44 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
      {
        v45 = sub_1000BA294(&qword_100BC3460);
        memcpy(__dsta, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        v29 = v186;
        v46 = v165;
      }
      else
      {
        v175 = v3;
        v184 = v16;
        *(_OWORD *)__dsta = *(_OWORD *)v43;
        v101 = v44[5];
        v159 = v43;
        v161 = &__dsta[v101];
        v102 = &v43[v101];
        v103 = type metadata accessor for Locale(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103))
        {
          v104 = sub_1000BA294(&qword_100BC3340);
          memcpy(v161, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v161, v102, v103);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v103);
        }
        v110 = v44[6];
        v163 = &__dsta[v110];
        v111 = &v159[v110];
        v112 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v163, v111, v112);
        v164 = v44;
        v113 = v44[7];
        v114 = &__dsta[v113];
        v115 = &v159[v113];
        v116 = sub_1000BA294(&qword_100BC3348);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116))
        {
          v117 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          v118 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v114, v115, v118);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
        }
        v119 = v44[8];
        v120 = &__dsta[v119];
        v121 = &v159[v119];
        v122 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        v46 = v165;
        if (swift_getEnumCaseMultiPayload(v121) == 1)
        {
          v123 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v120, v121, v123);
          swift_storeEnumTagMultiPayload(v120, v122, 1);
        }
        else
        {
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        v124 = v164[9];
        v125 = &__dsta[v124];
        v126 = &v159[v124];
        v127 = type metadata accessor for WeatherDataOverrides(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127))
        {
          v128 = sub_1000BA294(&qword_100BC3350);
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          __src = (int *)v127;
          v160 = v125;
          v129 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v129))
          {
            v130 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v125, v126, v129);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v129);
          }
          v131 = __src[5];
          v132 = &v125[v131];
          v133 = &v126[v131];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v129))
          {
            v134 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v132, v133, v129);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v129);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, (uint64_t)__src);
        }
        v3 = v175;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, (uint64_t)v164);
        v16 = v184;
        v29 = v186;
      }
      *(_OWORD *)&v18[*(int *)(v46 + 28)] = *(_OWORD *)&v19[*(int *)(v46 + 28)];
      v28 = v18;
      v30 = 5;
      goto LABEL_51;
    case 6u:
      v47 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v47;
      v18[32] = v19[32];
      *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      v179 = v16;
      v187 = v20;
      v48 = (int *)type metadata accessor for MoonComponentViewModel(0);
      v49 = v48[7];
      v50 = &v18[v49];
      v51 = &v19[v49];
      v52 = type metadata accessor for Date(0);
      v53 = v51;
      v16 = v179;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v53, v52);
      v18[v48[8]] = v19[v48[8]];
      *(_QWORD *)&v18[v48[9]] = *(_QWORD *)&v19[v48[9]];
      v28 = v18;
      v29 = v187;
      v30 = 6;
      goto LABEL_51;
    case 7u:
      v54 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v19) == 1)
      {
        v166 = v54;
        v188 = v20;
        *(_OWORD *)v18 = *(_OWORD *)v19;
        __dstb = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v55 = __dstb[5];
        v56 = &v18[v55];
        v57 = &v19[v55];
        v180 = type metadata accessor for URL(0);
        v174 = v3;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v180))
        {
          v58 = sub_1000BA294(&qword_100BD4280);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
          v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32);
        }
        else
        {
          v105 = v57;
          v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32);
          v59(v56, v105, v180);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v180);
        }
        *(_OWORD *)&v18[__dstb[6]] = *(_OWORD *)&v19[__dstb[6]];
        v162 = v59;
        v59(&v18[__dstb[7]], &v19[__dstb[7]], v180);
        v106 = __dstb[8];
        v107 = &v18[v106];
        v108 = &v19[v106];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v19[v106], 1, v180))
        {
          v109 = sub_1000BA294(&qword_100BD4280);
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          v162(v107, v108, v180);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v180);
        }
        v20 = v188;
        v18[__dstb[9]] = v19[__dstb[9]];
        swift_storeEnumTagMultiPayload(v18, v166, 1);
        v3 = v174;
      }
      else
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      v28 = v18;
      v29 = v20;
      v30 = 7;
      goto LABEL_51;
    case 8u:
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v60 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      v189 = v20;
      v61 = &v18[v60];
      v62 = &v19[v60];
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v61, v62, HourPrecipitationChartViewModel);
      v28 = v18;
      v29 = v189;
      v30 = 8;
      goto LABEL_51;
    case 9u:
      v64 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v18, v19, v64);
      v65 = type metadata accessor for NotificationsOptInComponentViewModel(0);
      v18[*(int *)(v65 + 20)] = v19[*(int *)(v65 + 20)];
      v28 = v18;
      v29 = v20;
      v30 = 9;
      goto LABEL_51;
    case 0xBu:
      v66 = type metadata accessor for PressureTrend(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v18, v19, v66);
      v67 = (int *)type metadata accessor for PressureComponentViewModel(0);
      *(_OWORD *)&v18[v67[5]] = *(_OWORD *)&v19[v67[5]];
      *(_OWORD *)&v18[v67[6]] = *(_OWORD *)&v19[v67[6]];
      *(_OWORD *)&v18[v67[7]] = *(_OWORD *)&v19[v67[7]];
      *(_QWORD *)&v18[v67[8]] = *(_QWORD *)&v19[v67[8]];
      *(_OWORD *)&v18[v67[9]] = *(_OWORD *)&v19[v67[9]];
      v28 = v18;
      v29 = v20;
      v30 = 11;
      goto LABEL_51;
    case 0xDu:
      v68 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v68;
      *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
      *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
      *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
      v181 = v16;
      v190 = v20;
      v69 = type metadata accessor for SevereAlertComponentViewModel(0);
      v70 = *(int *)(v69 + 36);
      v71 = &v18[v70];
      v72 = &v19[v70];
      v73 = type metadata accessor for WeatherAlert.Prominence(0);
      v74 = v72;
      v16 = v181;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v74, v73);
      *(_QWORD *)&v18[*(int *)(v69 + 40)] = *(_QWORD *)&v19[*(int *)(v69 + 40)];
      v28 = v18;
      v29 = v190;
      v30 = 13;
      goto LABEL_51;
    case 0xEu:
      v75 = type metadata accessor for SunriseSunsetViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v18, v19, v75);
      v28 = v18;
      v29 = v20;
      v30 = 14;
      goto LABEL_51;
    case 0x10u:
      v76 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v76;
      v182 = v16;
      v191 = v20;
      v77 = type metadata accessor for UVIndexComponentViewModel(0);
      v78 = *(int *)(v77 + 28);
      v79 = &v18[v78];
      v80 = &v19[v78];
      v81 = type metadata accessor for WeatherDescription(0);
      v82 = v80;
      v16 = v182;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v82, v81);
      *(_QWORD *)&v18[*(int *)(v77 + 32)] = *(_QWORD *)&v19[*(int *)(v77 + 32)];
      v28 = v18;
      v29 = v191;
      v30 = 16;
      goto LABEL_51;
    case 0x12u:
      v83 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v83;
      v84 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v84;
      v85 = *((_OWORD *)v19 + 5);
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 5) = v85;
      v86 = *((_OWORD *)v19 + 7);
      *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
      *((_OWORD *)v18 + 7) = v86;
      v87 = *((_OWORD *)v19 + 9);
      *((_OWORD *)v18 + 8) = *((_OWORD *)v19 + 8);
      *((_OWORD *)v18 + 9) = v87;
      *((_OWORD *)v18 + 10) = *((_OWORD *)v19 + 10);
      *((_QWORD *)v18 + 22) = *((_QWORD *)v19 + 22);
      *(_OWORD *)(v18 + 184) = *(_OWORD *)(v19 + 184);
      v183 = v16;
      v192 = v20;
      v88 = type metadata accessor for WindComponentViewModel(0);
      v89 = *(int *)(v88 + 68);
      v90 = &v18[v89];
      v91 = &v19[v89];
      v92 = type metadata accessor for WindComponentCompassViewModel(0);
      v93 = v91;
      v16 = v183;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v93, v92);
      *(_QWORD *)&v18[*(int *)(v88 + 72)] = *(_QWORD *)&v19[*(int *)(v88 + 72)];
      v28 = v18;
      v29 = v192;
      v30 = 18;
LABEL_51:
      swift_storeEnumTagMultiPayload(v28, v29, v30);
      break;
    default:
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      break;
  }
  *(_WORD *)&v7[v16[6]] = *(_WORD *)&v8[v16[6]];
  v135 = v16[7];
  v136 = &v7[v135];
  v137 = &v8[v135];
  v138 = type metadata accessor for LocationComponentAction(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138))
  {
    v139 = sub_1000BA294(&qword_100BDA950);
    memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v137))
    {
      case 0u:
        v140 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v136, v137, v140);
        v141 = sub_1000BA294(&qword_100BC5FE8);
        v136[*(int *)(v141 + 48)] = v137[*(int *)(v141 + 48)];
        v142 = v136;
        v143 = v138;
        v144 = 0;
        goto LABEL_60;
      case 1u:
        v145 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v136, v137, v145);
        v142 = v136;
        v143 = v138;
        v144 = 1;
        goto LABEL_60;
      case 2u:
        v146 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v136, v137, v146);
        v147 = sub_1000BA294(&qword_100BC5FF8);
        v136[*(int *)(v147 + 48)] = v137[*(int *)(v147 + 48)];
        v142 = v136;
        v143 = v138;
        v144 = 2;
        goto LABEL_60;
      case 4u:
        *v136 = *v137;
        v148 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v149 = &v136[v148];
        v150 = &v137[v148];
        v151 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
        v142 = v136;
        v143 = v138;
        v144 = 4;
LABEL_60:
        swift_storeEnumTagMultiPayload(v142, v143, v144);
        break;
      default:
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
  }
  v152 = v3[8];
  *(_OWORD *)(a1 + v3[7]) = *(_OWORD *)(a2 + v3[7]);
  *(_OWORD *)(a1 + v152) = *(_OWORD *)(a2 + v152);
  v153 = v3[10];
  *(_OWORD *)(a1 + v3[9]) = *(_OWORD *)(a2 + v3[9]);
  v154 = a1 + v153;
  v155 = a2 + v153;
  v156 = *(_OWORD *)(v155 + 16);
  *(_OWORD *)v154 = *(_OWORD *)v155;
  *(_OWORD *)(v154 + 16) = v156;
  *(_BYTE *)(v154 + 32) = *(_BYTE *)(v155 + 32);
  return a1;
}

uint64_t sub_10044EAEC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  int *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, _QWORD *);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, _QWORD *);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  uint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  _BYTE *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v177;
  const void *v178;
  char *v179;
  uint64_t v180;
  const void *v181;
  uint64_t v182;
  char *__src;
  char *__srca;
  void (*__srcb)(char *, char *, _QWORD *);
  char *__srcf;
  char *__srcc;
  char *__srcd;
  char *__srce;
  void *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  void *v195;
  int *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  int *v201;
  int *__dstc;
  char *__dst;
  char *__dstd;
  char *__dsta;
  char *__dste;
  _QWORD *__dstb;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_1000B15F8(v11, v12);
  v13 = a3[6];
  v14 = (_BYTE *)(a1 + v13);
  v15 = (char *)a2 + v13;
  if ((uint64_t *)a1 != a2)
  {
    sub_100441DDC(a1 + v13, type metadata accessor for LocationComponentHeaderViewModel);
    v16 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(v15) == 3)
    {
      v17 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      v18 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v19 = *(int *)(v18 + 20);
      v20 = &v14[v19];
      v21 = &v15[v19];
      v22 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v22;
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
      v14[*(int *)(v18 + 24)] = v15[*(int *)(v18 + 24)];
      swift_storeEnumTagMultiPayload(v14, v16, 3);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v23 = type metadata accessor for LocationComponentContainerViewModel(0);
  v24 = (int *)v23;
  if ((uint64_t *)a1 != a2)
  {
    v25 = *(int *)(v23 + 20);
    v26 = &v14[v25];
    v27 = &v15[v25];
    sub_100441DDC((uint64_t)&v14[v25], type metadata accessor for LocationComponentViewModel);
    v28 = type metadata accessor for LocationComponentViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v27))
    {
      case 1u:
        *(_QWORD *)v26 = *(_QWORD *)v27;
        v211 = v28;
        v29 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        v30 = v29[5];
        v193 = &v27[v30];
        v198 = &v26[v30];
        v31 = sub_1000BA294(&qword_100BC4E68);
        __dstc = v24;
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
        v32(v198, v193, v31);
        v32(&v26[v29[6]], &v27[v29[6]], v31);
        v32(&v26[v29[7]], &v27[v29[7]], v31);
        v24 = __dstc;
        v33 = v211;
        *(_OWORD *)&v26[v29[8]] = *(_OWORD *)&v27[v29[8]];
        *(_OWORD *)&v26[v29[9]] = *(_OWORD *)&v27[v29[9]];
        v34 = v26;
        v35 = 1;
        goto LABEL_53;
      case 2u:
        v212 = v28;
        v36 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v36;
        v37 = type metadata accessor for FeelsLikeComponentViewModel(0);
        v38 = *(int *)(v37 + 24);
        __dst = &v26[v38];
        v39 = &v27[v38];
        v199 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v199))
        {
          v40 = sub_1000BA294(&qword_100BC3360);
          memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v39;
          v90 = *(int *)(v199 + 20);
          v195 = (void *)v37;
          v91 = &__dst[v90];
          v92 = &v39[v90];
          v93 = type metadata accessor for TemperatureScaleConfiguration(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
          v94 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(_QWORD *)&v91[v94[5]] = *(_QWORD *)&v92[v94[5]];
          *(_QWORD *)&v91[v94[6]] = *(_QWORD *)&v92[v94[6]];
          *(_QWORD *)&v91[v94[7]] = *(_QWORD *)&v92[v94[7]];
          *(_OWORD *)&v91[v94[8]] = *(_OWORD *)&v92[v94[8]];
          v91[v94[9]] = v92[v94[9]];
          v37 = (uint64_t)v195;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v199);
        }
        v33 = v212;
        *(_OWORD *)&v26[*(int *)(v37 + 28)] = *(_OWORD *)&v27[*(int *)(v37 + 28)];
        v34 = v26;
        v35 = 2;
        goto LABEL_53;
      case 5u:
        v213 = v28;
        v41 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v26, v27, v41);
        v42 = type metadata accessor for MapComponentViewModel(0);
        v43 = *(int *)(v42 + 20);
        __dstd = &v26[v43];
        v44 = &v27[v43];
        v45 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(__dstd, v44, v45);
        v46 = *(int *)(v42 + 24);
        v200 = v42;
        __dsta = &v26[v46];
        v47 = &v27[v46];
        v48 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
        {
          v49 = sub_1000BA294(&qword_100BC3460);
          memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          v50 = v213;
          v51 = v200;
        }
        else
        {
          *(_OWORD *)__dsta = *(_OWORD *)v47;
          v196 = (int *)v48;
          v95 = *(int *)(v48 + 20);
          __srca = &__dsta[v95];
          v96 = &v47[v95];
          v97 = type metadata accessor for Locale(0);
          v178 = v96;
          v98 = (uint64_t)v96;
          v99 = v97;
          v191 = v47;
          if (_s7Weather24LocationCompositionStateOwet_0(v98, 1, v97))
          {
            v100 = sub_1000BA294(&qword_100BC3340);
            memcpy(__srca, v178, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(__srca, v178, v99);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srca, 0, 1, v99);
          }
          v105 = v196[6];
          v179 = &v47[v105];
          __srcf = &__dsta[v105];
          v106 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(__srcf, v179, v106);
          v107 = v196[7];
          __srcc = &__dsta[v107];
          v108 = &v47[v107];
          v180 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v180))
          {
            v109 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(__srcc, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          }
          else
          {
            v110 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(__srcc, v108, v110);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srcc, 0, 1, v180);
          }
          v111 = v196[8];
          v112 = __dsta;
          __srcd = &__dsta[v111];
          v113 = &v47[v111];
          v114 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          v181 = v113;
          v115 = v113;
          v116 = v114;
          if (swift_getEnumCaseMultiPayload(v115) == 1)
          {
            v117 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(__srcd, v181, v117);
            v112 = __dsta;
            swift_storeEnumTagMultiPayload(__srcd, v116, 1);
          }
          else
          {
            memcpy(__srcd, v181, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          }
          v118 = v196[9];
          __srce = (char *)v112 + v118;
          v119 = &v191[v118];
          v120 = type metadata accessor for WeatherDataOverrides(0);
          v192 = v119;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
          {
            v121 = sub_1000BA294(&qword_100BC3350);
            memcpy(__srce, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            v182 = v120;
            v122 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v122))
            {
              v123 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(__srce, v119, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(__srce, v119, v122);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srce, 0, 1, v122);
            }
            v124 = *(int *)(v182 + 20);
            v177 = &__srce[v124];
            v125 = &v119[v124];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v192[v124], 1, v122))
            {
              v126 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v177, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v177, v125, v122);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, v122);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srce, 0, 1, v182);
          }
          v50 = v213;
          v51 = v200;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, (uint64_t)v196);
        }
        *(_OWORD *)&v26[*(int *)(v51 + 28)] = *(_OWORD *)&v27[*(int *)(v51 + 28)];
        v34 = v26;
        v33 = v50;
        v35 = 5;
        goto LABEL_53;
      case 6u:
        v52 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v52;
        v26[32] = v27[32];
        *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
        v53 = (int *)type metadata accessor for MoonComponentViewModel(0);
        v54 = v53[7];
        v214 = v28;
        v55 = &v26[v54];
        __dste = &v27[v54];
        v56 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v55, __dste, v56);
        v26[v53[8]] = v27[v53[8]];
        *(_QWORD *)&v26[v53[9]] = *(_QWORD *)&v27[v53[9]];
        v34 = v26;
        v33 = v214;
        v35 = 6;
        goto LABEL_53;
      case 7u:
        v57 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v27) == 1)
        {
          v190 = (void *)v57;
          *(_OWORD *)v26 = *(_OWORD *)v27;
          v58 = type metadata accessor for NewsArticleComponentContentViewModel(0);
          v59 = *(int *)(v58 + 20);
          v194 = &v26[v59];
          v201 = (int *)v58;
          __src = &v27[v59];
          __dstb = (_QWORD *)type metadata accessor for URL(0);
          v215 = v28;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__src, 1, (uint64_t)__dstb))
          {
            v60 = sub_1000BA294(&qword_100BD4280);
            memcpy(v194, __src, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
            v61 = *(void (**)(char *, char *, _QWORD *))(*(__dstb - 1) + 32);
          }
          else
          {
            v101 = *(void (**)(char *, char *, _QWORD *))(*(__dstb - 1) + 32);
            v101(v194, __src, __dstb);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, (uint64_t)__dstb);
            v61 = v101;
          }
          *(_OWORD *)&v26[v201[6]] = *(_OWORD *)&v27[v201[6]];
          __srcb = v61;
          v61(&v26[v201[7]], &v27[v201[7]], __dstb);
          v102 = v201[8];
          v197 = &v26[v102];
          v103 = &v27[v102];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v27[v102], 1, (uint64_t)__dstb))
          {
            v104 = sub_1000BA294(&qword_100BD4280);
            memcpy(v197, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
          }
          else
          {
            __srcb(v197, v103, __dstb);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, (uint64_t)__dstb);
          }
          v26[v201[9]] = v27[v201[9]];
          swift_storeEnumTagMultiPayload(v26, v190, 1);
          v28 = v215;
        }
        else
        {
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        v34 = v26;
        v33 = v28;
        v35 = 7;
        goto LABEL_53;
      case 8u:
        *(_OWORD *)v26 = *(_OWORD *)v27;
        v62 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
        v63 = &v26[v62];
        v64 = &v27[v62];
        HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 32))(v63, v64, HourPrecipitationChartViewModel);
        v34 = v26;
        v33 = v28;
        v35 = 8;
        goto LABEL_53;
      case 9u:
        v66 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v26, v27, v66);
        v67 = type metadata accessor for NotificationsOptInComponentViewModel(0);
        v26[*(int *)(v67 + 20)] = v27[*(int *)(v67 + 20)];
        v34 = v26;
        v33 = v28;
        v35 = 9;
        goto LABEL_53;
      case 0xBu:
        v68 = type metadata accessor for PressureTrend(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v26, v27, v68);
        v69 = (int *)type metadata accessor for PressureComponentViewModel(0);
        *(_OWORD *)&v26[v69[5]] = *(_OWORD *)&v27[v69[5]];
        *(_OWORD *)&v26[v69[6]] = *(_OWORD *)&v27[v69[6]];
        *(_OWORD *)&v26[v69[7]] = *(_OWORD *)&v27[v69[7]];
        *(_QWORD *)&v26[v69[8]] = *(_QWORD *)&v27[v69[8]];
        *(_OWORD *)&v26[v69[9]] = *(_OWORD *)&v27[v69[9]];
        v34 = v26;
        v33 = v28;
        v35 = 11;
        goto LABEL_53;
      case 0xDu:
        v70 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v70;
        *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *(_OWORD *)(v26 + 56) = *(_OWORD *)(v27 + 56);
        v71 = type metadata accessor for SevereAlertComponentViewModel(0);
        v72 = *(int *)(v71 + 36);
        v216 = v28;
        v73 = &v26[v72];
        __dstf = &v27[v72];
        v74 = type metadata accessor for WeatherAlert.Prominence(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v73, __dstf, v74);
        *(_QWORD *)&v26[*(int *)(v71 + 40)] = *(_QWORD *)&v27[*(int *)(v71 + 40)];
        v34 = v26;
        v33 = v216;
        v35 = 13;
        goto LABEL_53;
      case 0xEu:
        v75 = type metadata accessor for SunriseSunsetViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v26, v27, v75);
        v34 = v26;
        v33 = v28;
        v35 = 14;
        goto LABEL_53;
      case 0x10u:
        v76 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v76;
        v77 = type metadata accessor for UVIndexComponentViewModel(0);
        v78 = *(int *)(v77 + 28);
        v217 = v28;
        v79 = &v26[v78];
        __dstg = &v27[v78];
        v80 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v79, __dstg, v80);
        *(_QWORD *)&v26[*(int *)(v77 + 32)] = *(_QWORD *)&v27[*(int *)(v77 + 32)];
        v34 = v26;
        v33 = v217;
        v35 = 16;
        goto LABEL_53;
      case 0x12u:
        v81 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v81;
        v82 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v82;
        v83 = *((_OWORD *)v27 + 5);
        *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
        *((_OWORD *)v26 + 5) = v83;
        v84 = *((_OWORD *)v27 + 7);
        *((_OWORD *)v26 + 6) = *((_OWORD *)v27 + 6);
        *((_OWORD *)v26 + 7) = v84;
        v85 = *((_OWORD *)v27 + 9);
        *((_OWORD *)v26 + 8) = *((_OWORD *)v27 + 8);
        *((_OWORD *)v26 + 9) = v85;
        *((_OWORD *)v26 + 10) = *((_OWORD *)v27 + 10);
        *((_QWORD *)v26 + 22) = *((_QWORD *)v27 + 22);
        *(_OWORD *)(v26 + 184) = *(_OWORD *)(v27 + 184);
        v86 = type metadata accessor for WindComponentViewModel(0);
        v87 = *(int *)(v86 + 68);
        v218 = v28;
        v88 = &v26[v87];
        __dsth = &v27[v87];
        v89 = type metadata accessor for WindComponentCompassViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v88, __dsth, v89);
        *(_QWORD *)&v26[*(int *)(v86 + 72)] = *(_QWORD *)&v27[*(int *)(v86 + 72)];
        v34 = v26;
        v33 = v218;
        v35 = 18;
LABEL_53:
        swift_storeEnumTagMultiPayload(v34, v33, v35);
        break;
      default:
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        break;
    }
  }
  *(_WORD *)&v14[v24[6]] = *(_WORD *)&v15[v24[6]];
  v127 = v24[7];
  v128 = &v14[v127];
  v129 = &v15[v127];
  v130 = type metadata accessor for LocationComponentAction(0);
  v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v130);
  v132 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130);
  if (v131)
  {
    if (!v132)
    {
      switch(swift_getEnumCaseMultiPayload(v129))
      {
        case 0u:
          v133 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v128, v129, v133);
          v134 = sub_1000BA294(&qword_100BC5FE8);
          v128[*(int *)(v134 + 48)] = v129[*(int *)(v134 + 48)];
          v135 = v128;
          v136 = v130;
          v137 = 0;
          goto LABEL_69;
        case 1u:
          v144 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v128, v129, v144);
          v135 = v128;
          v136 = v130;
          v137 = 1;
          goto LABEL_69;
        case 2u:
          v145 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v128, v129, v145);
          v146 = sub_1000BA294(&qword_100BC5FF8);
          v128[*(int *)(v146 + 48)] = v129[*(int *)(v146 + 48)];
          v135 = v128;
          v136 = v130;
          v137 = 2;
          goto LABEL_69;
        case 4u:
          *v128 = *v129;
          v147 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v148 = &v128[v147];
          v149 = &v129[v147];
          v150 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
          v135 = v128;
          v136 = v130;
          v137 = 4;
LABEL_69:
          swift_storeEnumTagMultiPayload(v135, v136, v137);
          break;
        default:
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
      goto LABEL_76;
    }
    goto LABEL_60;
  }
  if (v132)
  {
    sub_100441DDC((uint64_t)v128, type metadata accessor for LocationComponentAction);
LABEL_60:
    v138 = *(_QWORD *)(sub_1000BA294(&qword_100BDA950) - 8);
LABEL_61:
    memcpy(v128, v129, *(_QWORD *)(v138 + 64));
    goto LABEL_76;
  }
  if ((uint64_t *)a1 != a2)
  {
    sub_100441DDC((uint64_t)v128, type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload(v129))
    {
      case 0u:
        v139 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v128, v129, v139);
        v140 = sub_1000BA294(&qword_100BC5FE8);
        v128[*(int *)(v140 + 48)] = v129[*(int *)(v140 + 48)];
        v141 = v128;
        v142 = v130;
        v143 = 0;
        break;
      case 1u:
        v151 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v128, v129, v151);
        v141 = v128;
        v142 = v130;
        v143 = 1;
        break;
      case 2u:
        v152 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v128, v129, v152);
        v153 = sub_1000BA294(&qword_100BC5FF8);
        v128[*(int *)(v153 + 48)] = v129[*(int *)(v153 + 48)];
        v141 = v128;
        v142 = v130;
        v143 = 2;
        break;
      case 4u:
        *v128 = *v129;
        v154 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v155 = &v128[v154];
        v156 = &v129[v154];
        v157 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
        v141 = v128;
        v142 = v130;
        v143 = 4;
        break;
      default:
        v138 = *(_QWORD *)(v130 - 8);
        goto LABEL_61;
    }
    swift_storeEnumTagMultiPayload(v141, v142, v143);
  }
LABEL_76:
  v158 = a3[7];
  v159 = (uint64_t *)(a1 + v158);
  v160 = (uint64_t *)((char *)a2 + v158);
  v161 = v160[1];
  v162 = *v159;
  *v159 = *v160;
  swift_unknownObjectRelease(v162);
  v159[1] = v161;
  v163 = a3[8];
  v164 = *(_QWORD *)(a1 + v163 + 8);
  *(_OWORD *)(a1 + v163) = *(_OWORD *)((char *)a2 + v163);
  swift_release(v164);
  v165 = a3[9];
  v166 = (_QWORD *)(a1 + v165);
  v167 = (uint64_t *)((char *)a2 + v165);
  v169 = *v167;
  v168 = v167[1];
  v170 = v166[1];
  *v166 = v169;
  v166[1] = v168;
  swift_release(v170);
  v171 = a3[10];
  v172 = a1 + v171;
  v173 = (uint64_t)a2 + v171;
  v174 = *(_QWORD *)(a1 + v171);
  *(_QWORD *)(a1 + v171) = *(_QWORD *)v173;
  swift_release(v174);
  v175 = *(_QWORD *)(v172 + 8);
  *(_QWORD *)(v172 + 8) = *(_QWORD *)(v173 + 8);
  swift_release(v175);
  *(_OWORD *)(v172 + 16) = *(_OWORD *)(v173 + 16);
  *(_BYTE *)(v172 + 32) = *(_BYTE *)(v173 + 32);
  return a1;
}

uint64_t sub_10044FB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10044FB88);
}

void sub_10044FB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;

  sub_1000878BC();
  sub_100088FF0();
  if (v7)
  {
    sub_1000B250C(a1 + *(int *)(a3 + 24), a2, v6);
  }
  else
  {
    sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 28)));
    sub_100079F70();
  }
}

uint64_t sub_10044FBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044FBE8);
}

void sub_10044FBE8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000878BC();
  sub_10009D2E8();
  if (v7)
  {
    sub_100098D08();
    sub_1000987C4(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
    sub_100079F70();
  }
}

void sub_10044FC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1000986AC();
  v14 = (_QWORD *)v12;
  if ((_QWORD *)v12 != v13)
  {
    v15 = v13;
    sub_10009E47C(v12);
    v16 = sub_100079FD4();
    if (sub_10009C8E0(v16) == 1)
    {
      sub_1000C21DC();
      v17 = sub_10009F7EC((uint64_t)v15);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_10044FCB0 + 4 * byte_10099FB1A[v17]))(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
      return;
    }
    *v14 = *v15;
    swift_retain();
    v25 = sub_10045B940();
    swift_storeEnumTagMultiPayload(v25, v26, 0);
  }
  sub_100098640();
}

void sub_10044FE78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;

  if (a1 != a2)
  {
    sub_10009E47C(a1);
    v3 = sub_100079FD4();
    if (sub_10009C8E0(v3) == 1)
    {
      v4 = sub_1000C21DC();
      if (sub_10009F7EC(a2) == 3)
      {
        v5 = sub_1000D12B0();
        sub_1000B4328(v5);
        v6 = sub_1000D09EC();
        sub_1000F4450(v6);
      }
      else
      {
        sub_1000FD93C(*(_QWORD *)(v4 - 8));
      }
      v7 = (int *)sub_10009CC5C();
      sub_1000C6A94(v7);
    }
    else
    {
      sub_1000FD93C(unk_100BE21E8);
    }
  }
  sub_100079F70();
}

uint64_t sub_10044FF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10045B568);
}

uint64_t sub_10044FF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10045B574);
}

void sub_10044FF24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100158B48(319, (unint64_t *)&unk_100BE24F8, type metadata accessor for LocationComponentHeaderMetrics);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

unint64_t sub_10044FFA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE27B0;
  if (!qword_100BE27B0)
  {
    v1 = sub_100075EB0(&qword_100BE27B8);
    sub_100444630();
    sub_10007AB60((uint64_t)&unk_100BE2158);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE27B0);
  }
  return result;
}

unint64_t sub_100450028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE27C0;
  if (!qword_100BE27C0)
  {
    v1 = sub_100075EB0(&qword_100BE2310);
    sub_10007AB60((uint64_t)&unk_100BE27C8);
    sub_10007AB60((uint64_t)&qword_100BCDE00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE27C0);
  }
  return result;
}

unint64_t sub_1004500C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE27D0;
  if (!qword_100BE27D0)
  {
    v1 = sub_100075EB0(&qword_100BE2328);
    sub_10045016C((uint64_t)&unk_100BE27D8);
    sub_10007A100((uint64_t)&unk_100BE27F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE27D0);
  }
  return result;
}

unint64_t sub_10045016C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;

  result = sub_10009987C(a1);
  if (!result)
  {
    v6 = v5;
    v7 = v4;
    v8 = sub_100075EB0(v3);
    v7();
    result = swift_getWitnessTable(v6, v8);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1004501CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE27E0;
  if (!qword_100BE27E0)
  {
    v1 = sub_100075EB0(&qword_100BE27E8);
    sub_100444E10();
    sub_100444E7C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE27E0);
  }
  return result;
}

unint64_t sub_10045023C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE27F8;
  if (!qword_100BE27F8)
  {
    v1 = sub_100075EB0(&qword_100BE2480);
    sub_1004502C0();
    sub_10007AB60((uint64_t)&qword_100BC41C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE27F8);
  }
  return result;
}

unint64_t sub_1004502C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2800;
  if (!qword_100BE2800)
  {
    v1 = sub_100075EB0(&qword_100BE2470);
    sub_100157724();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2800);
  }
  return result;
}

uint64_t sub_10045032C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5114, 1);
}

unint64_t sub_10045033C()
{
  return sub_10045016C((uint64_t)&unk_100BE2818);
}

unint64_t sub_100450370()
{
  unint64_t result;

  result = qword_100BE2820;
  if (!qword_100BE2820)
  {
    result = swift_getWitnessTable(&unk_1009C93D0, &type metadata for ForegroundEffectViewMask);
    atomic_store(result, (unint64_t *)&qword_100BE2820);
  }
  return result;
}

unint64_t sub_1004503AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1004503D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1004503D0()
{
  unint64_t result;

  result = qword_100BE2840;
  if (!qword_100BE2840)
  {
    result = swift_getWitnessTable(&unk_1009A06B0, &type metadata for LocationComponentForegroundEffectViewMaskPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_100BE2840);
  }
  return result;
}

uint64_t sub_10045040C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB50C4, 1);
}

uint64_t sub_10045041C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB509C, 1);
}

void sub_10045042C()
{
  sub_10007A100((uint64_t)&unk_100BE2848);
}

unint64_t sub_100450458(uint64_t a1)
{
  unint64_t result;

  result = sub_10045047C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10045047C()
{
  unint64_t result;

  result = qword_100BE2868;
  if (!qword_100BE2868)
  {
    result = swift_getWitnessTable(&unk_1009A0804, &type metadata for LocationComponentContainerViewFramePreferenceKey);
    atomic_store(result, (unint64_t *)&qword_100BE2868);
  }
  return result;
}

uint64_t sub_1004504B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5074, 1);
}

uint64_t sub_1004504C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB4FFC, 1);
}

unint64_t sub_1004504D8()
{
  unint64_t result;

  result = qword_100BE28B0;
  if (!qword_100BE28B0)
  {
    result = swift_getWitnessTable(&unk_1009A0868, &type metadata for RowModifier.RowGeometry);
    atomic_store(result, (unint64_t *)&qword_100BE28B0);
  }
  return result;
}

uint64_t sub_100450514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008900C();
  type metadata accessor for RowModifier(0);
  v0 = sub_1000BA294(&qword_100BE21F0);
  if (sub_100098814(v0) == 1)
  {
    v1 = sub_1000C21DC();
    switch(sub_100098814(v1))
    {
      case 0u:
      case 4u:
        sub_10009BF48();
        sub_1000D9DD0();
        goto LABEL_8;
      case 1u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        goto LABEL_8;
      case 2u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        sub_100094FD4();
        sub_1000F3E40();
        goto LABEL_8;
      case 3u:
        v2 = sub_1000D12B0();
        sub_1000987E0(v2);
        sub_1000D09EC();
        sub_1000C48E0();
        sub_10045B790();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    sub_1000B4394();
  }
  sub_10009C970();
  v3 = sub_10009E954();
  return sub_1000B4380(v3, v4, v5);
}

double sub_100450614()
{
  uint64_t v0;
  double *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v0 = sub_1000F422C();
  type metadata accessor for RowModifier(v0);
  sub_10045B94C();
  sub_10045B934();
  return sub_10043DB60(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10045065C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008900C();
  type metadata accessor for RowModifier(0);
  sub_10045B770();
  v0 = sub_1000BA294(&qword_100BE21F0);
  if (sub_100098814(v0) == 1)
  {
    v1 = sub_1000C21DC();
    switch(sub_100098814(v1))
    {
      case 0u:
      case 4u:
        sub_10009BF48();
        sub_1000D9DD0();
        goto LABEL_8;
      case 1u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        goto LABEL_8;
      case 2u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        sub_100094FD4();
        sub_1000F3E40();
        goto LABEL_8;
      case 3u:
        v2 = sub_1000D12B0();
        sub_1000987E0(v2);
        sub_1000D09EC();
        sub_1000C48E0();
        sub_10045B790();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    sub_1000B4394();
  }
  sub_10009C970();
  v3 = sub_10009E954();
  return sub_1000B4380(v3, v4, v5);
}

uint64_t sub_100450744()
{
  __int128 *v0;
  uint64_t v1;

  type metadata accessor for RowModifier(0);
  v0 = (__int128 *)sub_10009DACC();
  return sub_10043DD0C(v0, v1);
}

uint64_t sub_10045076C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10011DF78();
  sub_10011DF08();
  sub_10009C0F0();
  sub_1000DB2A8();
  sub_10007A044();
  sub_100087910();
  sub_100075E20();
  sub_10045B66C();
  sub_10045B7DC();
  sub_10045B7C0();
  sub_10045B7B8();
  sub_10009C854();
  sub_10011DE74();
  sub_10045B8B4();
  v0 = sub_10009E584();
  sub_1000989A0(v0);
  swift_bridgeObjectRelease();
  v1 = sub_1000B3B9C();
  return sub_100098B00(v1, v2, v3);
}

uint64_t sub_1004507E0()
{
  return sub_1004554EC(type metadata accessor for WindComponentViewModel);
}

unint64_t sub_1004507F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2AC0;
  if (!qword_100BE2AC0)
  {
    v1 = sub_100075EB0(&qword_100BE28F8);
    sub_100450878();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2AC0);
  }
  return result;
}

unint64_t sub_100450878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2AC8;
  if (!qword_100BE2AC8)
  {
    v1 = sub_100075EB0(&qword_100BE2AD0);
    sub_10045016C((uint64_t)&unk_100BE2AD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2AC8);
  }
  return result;
}

unint64_t sub_100450904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2AE8;
  if (!qword_100BE2AE8)
  {
    v1 = sub_100075EB0(&qword_100BE2AF0);
    sub_100450988();
    sub_10007AB60((uint64_t)&unk_100BE2B08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2AE8);
  }
  return result;
}

unint64_t sub_100450988()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2AF8;
  if (!qword_100BE2AF8)
  {
    v1 = sub_100075EB0(&qword_100BE2B00);
    sub_10007AB60((uint64_t)&unk_100BE2B08);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2AF8);
  }
  return result;
}

unint64_t sub_100450A24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2B18;
  if (!qword_100BE2B18)
  {
    v1 = sub_100075EB0(&qword_100BE28E0);
    sub_100450AA8();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2B18);
  }
  return result;
}

unint64_t sub_100450AA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2B20;
  if (!qword_100BE2B20)
  {
    v1 = sub_100075EB0(&qword_100BE2B28);
    sub_10045016C((uint64_t)&unk_100BE2B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2B20);
  }
  return result;
}

unint64_t sub_100450B34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2B40;
  if (!qword_100BE2B40)
  {
    v1 = sub_100075EB0(&qword_100BE2B48);
    sub_100450BB8();
    sub_10007AB60((uint64_t)&unk_100BE2B60);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2B40);
  }
  return result;
}

unint64_t sub_100450BB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2B50;
  if (!qword_100BE2B50)
  {
    v1 = sub_100075EB0(&qword_100BE2B58);
    sub_10007AB60((uint64_t)&unk_100BE2B60);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2B50);
  }
  return result;
}

unint64_t sub_100450C54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2B70;
  if (!qword_100BE2B70)
  {
    v1 = sub_100075EB0(&qword_100BE2918);
    sub_100450CC0();
    sub_100450EF0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2B70);
  }
  return result;
}

unint64_t sub_100450CC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2B78;
  if (!qword_100BE2B78)
  {
    v1 = sub_100075EB0(&qword_100BE2928);
    sub_100450D44();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2B78);
  }
  return result;
}

unint64_t sub_100450D44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2B80;
  if (!qword_100BE2B80)
  {
    v1 = sub_100075EB0(&qword_100BE2B88);
    sub_10045016C((uint64_t)&unk_100BE2B90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2B80);
  }
  return result;
}

unint64_t sub_100450DD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2BA0;
  if (!qword_100BE2BA0)
  {
    v1 = sub_100075EB0(&qword_100BE2BA8);
    sub_100450E54();
    sub_10007AB60((uint64_t)&unk_100BE2BC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2BA0);
  }
  return result;
}

unint64_t sub_100450E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2BB0;
  if (!qword_100BE2BB0)
  {
    v1 = sub_100075EB0(&qword_100BE2BB8);
    sub_10007AB60((uint64_t)&unk_100BE2BC0);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2BB0);
  }
  return result;
}

unint64_t sub_100450EF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2BD0;
  if (!qword_100BE2BD0)
  {
    v1 = sub_100075EB0(&qword_100BE2900);
    sub_100450F74();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2BD0);
  }
  return result;
}

unint64_t sub_100450F74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2BD8;
  if (!qword_100BE2BD8)
  {
    v1 = sub_100075EB0(&qword_100BE2BE0);
    sub_10045016C((uint64_t)&unk_100BE2BE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2BD8);
  }
  return result;
}

unint64_t sub_100451000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2BF8;
  if (!qword_100BE2BF8)
  {
    v1 = sub_100075EB0(&qword_100BE2C00);
    sub_100451084();
    sub_10007AB60((uint64_t)&unk_100BE2C18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2BF8);
  }
  return result;
}

unint64_t sub_100451084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C08;
  if (!qword_100BE2C08)
  {
    v1 = sub_100075EB0(&qword_100BE2C10);
    sub_10007AB60((uint64_t)&unk_100BE2C18);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C08);
  }
  return result;
}

unint64_t sub_100451120()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C28;
  if (!qword_100BE2C28)
  {
    v1 = sub_100075EB0(&qword_100BE28F0);
    sub_1004507F4();
    sub_100450A24();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C28);
  }
  return result;
}

unint64_t sub_10045118C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C30;
  if (!qword_100BE2C30)
  {
    v1 = sub_100075EB0(&qword_100BE2AB0);
    sub_1004511F8();
    sub_10045266C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C30);
  }
  return result;
}

unint64_t sub_1004511F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C38;
  if (!qword_100BE2C38)
  {
    v1 = sub_100075EB0(&qword_100BE2AA8);
    sub_100451264();
    sub_100451C68();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C38);
  }
  return result;
}

unint64_t sub_100451264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C40;
  if (!qword_100BE2C40)
  {
    v1 = sub_100075EB0(&qword_100BE2AA0);
    sub_1004512D0();
    sub_10045179C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C40);
  }
  return result;
}

unint64_t sub_1004512D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C48;
  if (!qword_100BE2C48)
  {
    v1 = sub_100075EB0(&qword_100BE2A98);
    sub_10045133C();
    sub_10045156C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C48);
  }
  return result;
}

unint64_t sub_10045133C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C50;
  if (!qword_100BE2C50)
  {
    v1 = sub_100075EB0(&qword_100BE2AB8);
    sub_1004513C0();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C50);
  }
  return result;
}

unint64_t sub_1004513C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C58;
  if (!qword_100BE2C58)
  {
    v1 = sub_100075EB0(&qword_100BE2C60);
    sub_10045016C((uint64_t)&unk_100BE2C68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C58);
  }
  return result;
}

unint64_t sub_10045144C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C78;
  if (!qword_100BE2C78)
  {
    v1 = sub_100075EB0(&qword_100BE2C80);
    sub_1004514D0();
    sub_10007AB60((uint64_t)&unk_100BE2C98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C78);
  }
  return result;
}

unint64_t sub_1004514D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2C88;
  if (!qword_100BE2C88)
  {
    v1 = sub_100075EB0(&qword_100BE2C90);
    sub_10007AB60((uint64_t)&unk_100BE2C98);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2C88);
  }
  return result;
}

unint64_t sub_10045156C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2CA8;
  if (!qword_100BE2CA8)
  {
    v1 = sub_100075EB0(&qword_100BE2A68);
    sub_1004515F0();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2CA8);
  }
  return result;
}

unint64_t sub_1004515F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2CB0;
  if (!qword_100BE2CB0)
  {
    v1 = sub_100075EB0(&qword_100BE2CB8);
    sub_10045016C((uint64_t)&unk_100BE2CC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2CB0);
  }
  return result;
}

unint64_t sub_10045167C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2CD0;
  if (!qword_100BE2CD0)
  {
    v1 = sub_100075EB0(&qword_100BE2CD8);
    sub_100451700();
    sub_10007AB60((uint64_t)&unk_100BE2CF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2CD0);
  }
  return result;
}

unint64_t sub_100451700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2CE0;
  if (!qword_100BE2CE0)
  {
    v1 = sub_100075EB0(&qword_100BE2CE8);
    sub_10007AB60((uint64_t)&unk_100BE2CF0);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2CE0);
  }
  return result;
}

unint64_t sub_10045179C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D00;
  if (!qword_100BE2D00)
  {
    v1 = sub_100075EB0(&qword_100BE2A58);
    sub_100451808();
    sub_100451A38();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D00);
  }
  return result;
}

unint64_t sub_100451808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D08;
  if (!qword_100BE2D08)
  {
    v1 = sub_100075EB0(&qword_100BE2A60);
    sub_10045188C();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D08);
  }
  return result;
}

unint64_t sub_10045188C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D10;
  if (!qword_100BE2D10)
  {
    v1 = sub_100075EB0(&qword_100BE2D18);
    sub_10045016C((uint64_t)&unk_100BE2D20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D10);
  }
  return result;
}

unint64_t sub_100451918()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D30;
  if (!qword_100BE2D30)
  {
    v1 = sub_100075EB0(&qword_100BE2D38);
    sub_10045199C();
    sub_10007AB60((uint64_t)&unk_100BE2D50);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D30);
  }
  return result;
}

unint64_t sub_10045199C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D40;
  if (!qword_100BE2D40)
  {
    v1 = sub_100075EB0(&qword_100BE2D48);
    sub_10007AB60((uint64_t)&unk_100BE2D50);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D40);
  }
  return result;
}

unint64_t sub_100451A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D60;
  if (!qword_100BE2D60)
  {
    v1 = sub_100075EB0(&qword_100BE2A48);
    sub_100451ABC();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D60);
  }
  return result;
}

unint64_t sub_100451ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D68;
  if (!qword_100BE2D68)
  {
    v1 = sub_100075EB0(&qword_100BE2D70);
    sub_10045016C((uint64_t)&unk_100BE2D78);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D68);
  }
  return result;
}

unint64_t sub_100451B48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D88;
  if (!qword_100BE2D88)
  {
    v1 = sub_100075EB0(&qword_100BE2D90);
    sub_100451BCC();
    sub_10007AB60((uint64_t)&unk_100BE2DA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D88);
  }
  return result;
}

unint64_t sub_100451BCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2D98;
  if (!qword_100BE2D98)
  {
    v1 = sub_100075EB0(&qword_100BE2DA0);
    sub_10007AB60((uint64_t)&unk_100BE2DA8);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2D98);
  }
  return result;
}

unint64_t sub_100451C68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2DB8;
  if (!qword_100BE2DB8)
  {
    v1 = sub_100075EB0(&qword_100BE2A38);
    sub_100451CD4();
    sub_1004521A0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2DB8);
  }
  return result;
}

unint64_t sub_100451CD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2DC0;
  if (!qword_100BE2DC0)
  {
    v1 = sub_100075EB0(&qword_100BE2A30);
    sub_100451D40();
    sub_100451F70();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2DC0);
  }
  return result;
}

unint64_t sub_100451D40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2DC8;
  if (!qword_100BE2DC8)
  {
    v1 = sub_100075EB0(&qword_100BE2A40);
    sub_100451DC4();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2DC8);
  }
  return result;
}

unint64_t sub_100451DC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2DD0;
  if (!qword_100BE2DD0)
  {
    v1 = sub_100075EB0(&qword_100BE2DD8);
    sub_10045016C((uint64_t)&unk_100BE2DE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2DD0);
  }
  return result;
}

unint64_t sub_100451E50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2DF0;
  if (!qword_100BE2DF0)
  {
    v1 = sub_100075EB0(&qword_100BE2DF8);
    sub_100451ED4();
    sub_10007AB60((uint64_t)&unk_100BE2E10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2DF0);
  }
  return result;
}

unint64_t sub_100451ED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E00;
  if (!qword_100BE2E00)
  {
    v1 = sub_100075EB0(&qword_100BE2E08);
    sub_10007AB60((uint64_t)&unk_100BE2E10);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E00);
  }
  return result;
}

unint64_t sub_100451F70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E20;
  if (!qword_100BE2E20)
  {
    v1 = sub_100075EB0(&qword_100BE2A18);
    sub_100451FF4();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E20);
  }
  return result;
}

unint64_t sub_100451FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E28;
  if (!qword_100BE2E28)
  {
    v1 = sub_100075EB0(&qword_100BE2E30);
    sub_10045016C((uint64_t)&unk_100BE2E38);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E28);
  }
  return result;
}

unint64_t sub_100452080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E48;
  if (!qword_100BE2E48)
  {
    v1 = sub_100075EB0(&qword_100BE2E50);
    sub_100452104();
    sub_10007AB60((uint64_t)&unk_100BE2E68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E48);
  }
  return result;
}

unint64_t sub_100452104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E58;
  if (!qword_100BE2E58)
  {
    v1 = sub_100075EB0(&qword_100BE2E60);
    sub_10007AB60((uint64_t)&unk_100BE2E68);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E58);
  }
  return result;
}

unint64_t sub_1004521A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E78;
  if (!qword_100BE2E78)
  {
    v1 = sub_100075EB0(&qword_100BE2A08);
    sub_10045220C();
    sub_10045243C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E78);
  }
  return result;
}

unint64_t sub_10045220C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E80;
  if (!qword_100BE2E80)
  {
    v1 = sub_100075EB0(&qword_100BE2A10);
    sub_100452290();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E80);
  }
  return result;
}

unint64_t sub_100452290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2E88;
  if (!qword_100BE2E88)
  {
    v1 = sub_100075EB0(&qword_100BE2E90);
    sub_10045016C((uint64_t)&unk_100BE2E98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2E88);
  }
  return result;
}

unint64_t sub_10045231C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2EA8;
  if (!qword_100BE2EA8)
  {
    v1 = sub_100075EB0(&qword_100BE2EB0);
    sub_1004523A0();
    sub_10007AB60((uint64_t)&unk_100BE2EC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2EA8);
  }
  return result;
}

unint64_t sub_1004523A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2EB8;
  if (!qword_100BE2EB8)
  {
    v1 = sub_100075EB0(&qword_100BE2EC0);
    sub_10007AB60((uint64_t)&unk_100BE2EC8);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2EB8);
  }
  return result;
}

unint64_t sub_10045243C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2ED8;
  if (!qword_100BE2ED8)
  {
    v1 = sub_100075EB0(&qword_100BE29F8);
    sub_1004524C0();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2ED8);
  }
  return result;
}

unint64_t sub_1004524C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2EE0;
  if (!qword_100BE2EE0)
  {
    v1 = sub_100075EB0(&qword_100BE2EE8);
    sub_10045016C((uint64_t)&unk_100BE2EF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2EE0);
  }
  return result;
}

unint64_t sub_10045254C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F00;
  if (!qword_100BE2F00)
  {
    v1 = sub_100075EB0(&qword_100BE2F08);
    sub_1004525D0();
    sub_10007AB60((uint64_t)&unk_100BE2F20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F00);
  }
  return result;
}

unint64_t sub_1004525D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F10;
  if (!qword_100BE2F10)
  {
    v1 = sub_100075EB0(&qword_100BE2F18);
    sub_10007AB60((uint64_t)&unk_100BE2F20);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F10);
  }
  return result;
}

unint64_t sub_10045266C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F30;
  if (!qword_100BE2F30)
  {
    v1 = sub_100075EB0(&qword_100BE29E8);
    sub_1004526D8();
    sub_100453134();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F30);
  }
  return result;
}

unint64_t sub_1004526D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F38;
  if (!qword_100BE2F38)
  {
    v1 = sub_100075EB0(&qword_100BE29E0);
    sub_100452744();
    sub_100452C40();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F38);
  }
  return result;
}

unint64_t sub_100452744()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BE2F40;
  if (!qword_100BE2F40)
  {
    v1 = sub_100075EB0(&qword_100BE29D8);
    sub_1004527E0();
    v2[0] = sub_100075EB0(&qword_100BE29B0);
    v2[1] = sub_100452A10();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.drawingGroup(opaque:colorMode:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F40);
  }
  return result;
}

unint64_t sub_1004527E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F48;
  if (!qword_100BE2F48)
  {
    v1 = sub_100075EB0(&qword_100BE29F0);
    sub_100452864();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F48);
  }
  return result;
}

unint64_t sub_100452864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F50;
  if (!qword_100BE2F50)
  {
    v1 = sub_100075EB0(&qword_100BE2F58);
    sub_10045016C((uint64_t)&unk_100BE2F60);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F50);
  }
  return result;
}

unint64_t sub_1004528F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F70;
  if (!qword_100BE2F70)
  {
    v1 = sub_100075EB0(&qword_100BE2F78);
    sub_100452974();
    sub_10007AB60((uint64_t)&unk_100BE2F90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F70);
  }
  return result;
}

unint64_t sub_100452974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2F80;
  if (!qword_100BE2F80)
  {
    v1 = sub_100075EB0(&qword_100BE2F88);
    sub_10007AB60((uint64_t)&unk_100BE2F90);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2F80);
  }
  return result;
}

unint64_t sub_100452A10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2FA0;
  if (!qword_100BE2FA0)
  {
    v1 = sub_100075EB0(&qword_100BE29B0);
    sub_100452A94();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2FA0);
  }
  return result;
}

unint64_t sub_100452A94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2FA8;
  if (!qword_100BE2FA8)
  {
    v1 = sub_100075EB0(&qword_100BE2FB0);
    sub_10045016C((uint64_t)&unk_100BE2FB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2FA8);
  }
  return result;
}

unint64_t sub_100452B20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2FC8;
  if (!qword_100BE2FC8)
  {
    v1 = sub_100075EB0(&qword_100BE2FD0);
    sub_100452BA4();
    sub_10007AB60((uint64_t)&unk_100BE2FE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2FC8);
  }
  return result;
}

unint64_t sub_100452BA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE2FD8;
  if (!qword_100BE2FD8)
  {
    v1 = sub_100075EB0(&qword_100BE2FE0);
    sub_10007AB60((uint64_t)&unk_100BE2FE8);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2FD8);
  }
  return result;
}

unint64_t sub_100452C40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BE2FF8;
  if (!qword_100BE2FF8)
  {
    v1 = sub_100075EB0(&qword_100BE2998);
    v2[0] = sub_100075EB0(&qword_100BE29A0);
    v2[1] = sub_100452CD4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.drawingGroup(opaque:colorMode:)>>, 1);
    sub_100452F04();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE2FF8);
  }
  return result;
}

unint64_t sub_100452CD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3000;
  if (!qword_100BE3000)
  {
    v1 = sub_100075EB0(&qword_100BE29A0);
    sub_100452D58();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3000);
  }
  return result;
}

unint64_t sub_100452D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3008;
  if (!qword_100BE3008)
  {
    v1 = sub_100075EB0(&qword_100BE3010);
    sub_10045016C((uint64_t)&unk_100BE3018);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3008);
  }
  return result;
}

unint64_t sub_100452DE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3028;
  if (!qword_100BE3028)
  {
    v1 = sub_100075EB0(&qword_100BE3030);
    sub_100452E68();
    sub_10007AB60((uint64_t)&unk_100BE3048);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3028);
  }
  return result;
}

unint64_t sub_100452E68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3038;
  if (!qword_100BE3038)
  {
    v1 = sub_100075EB0(&qword_100BE3040);
    sub_10007AB60((uint64_t)&unk_100BE3048);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3038);
  }
  return result;
}

unint64_t sub_100452F04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3058;
  if (!qword_100BE3058)
  {
    v1 = sub_100075EB0(&qword_100BE2988);
    sub_100452F88();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3058);
  }
  return result;
}

unint64_t sub_100452F88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3060;
  if (!qword_100BE3060)
  {
    v1 = sub_100075EB0(&qword_100BE3068);
    sub_10045016C((uint64_t)&unk_100BE3070);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3060);
  }
  return result;
}

unint64_t sub_100453014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3080;
  if (!qword_100BE3080)
  {
    v1 = sub_100075EB0(&qword_100BE3088);
    sub_100453098();
    sub_10007AB60((uint64_t)&unk_100BE30A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3080);
  }
  return result;
}

unint64_t sub_100453098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3090;
  if (!qword_100BE3090)
  {
    v1 = sub_100075EB0(&qword_100BE3098);
    sub_10007AB60((uint64_t)&unk_100BE30A0);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3090);
  }
  return result;
}

unint64_t sub_100453134()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE30B0;
  if (!qword_100BE30B0)
  {
    v1 = sub_100075EB0(&qword_100BE2978);
    sub_1004531A0();
    sub_10045369C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE30B0);
  }
  return result;
}

unint64_t sub_1004531A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BE30B8;
  if (!qword_100BE30B8)
  {
    v1 = sub_100075EB0(&qword_100BE2970);
    sub_10045323C();
    v2[0] = sub_100075EB0(&qword_100BE2950);
    v2[1] = sub_10045346C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.drawingGroup(opaque:colorMode:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE30B8);
  }
  return result;
}

unint64_t sub_10045323C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE30C0;
  if (!qword_100BE30C0)
  {
    v1 = sub_100075EB0(&qword_100BE2980);
    sub_1004532C0();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE30C0);
  }
  return result;
}

unint64_t sub_1004532C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE30C8;
  if (!qword_100BE30C8)
  {
    v1 = sub_100075EB0(&qword_100BE30D0);
    sub_10045016C((uint64_t)&unk_100BE30D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE30C8);
  }
  return result;
}

unint64_t sub_10045334C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE30E8;
  if (!qword_100BE30E8)
  {
    v1 = sub_100075EB0(&qword_100BE30F0);
    sub_1004533D0();
    sub_10007AB60((uint64_t)&unk_100BE3108);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE30E8);
  }
  return result;
}

unint64_t sub_1004533D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE30F8;
  if (!qword_100BE30F8)
  {
    v1 = sub_100075EB0(&qword_100BE3100);
    sub_10007AB60((uint64_t)&unk_100BE3108);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE30F8);
  }
  return result;
}

unint64_t sub_10045346C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3118;
  if (!qword_100BE3118)
  {
    v1 = sub_100075EB0(&qword_100BE2950);
    sub_1004534F0();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3118);
  }
  return result;
}

unint64_t sub_1004534F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3120;
  if (!qword_100BE3120)
  {
    v1 = sub_100075EB0(&qword_100BE3128);
    sub_10045016C((uint64_t)&unk_100BE3130);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3120);
  }
  return result;
}

unint64_t sub_10045357C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3140;
  if (!qword_100BE3140)
  {
    v1 = sub_100075EB0(&qword_100BE3148);
    sub_100453600();
    sub_10007AB60((uint64_t)&unk_100BE3160);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3140);
  }
  return result;
}

unint64_t sub_100453600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3150;
  if (!qword_100BE3150)
  {
    v1 = sub_100075EB0(&qword_100BE3158);
    sub_10007AB60((uint64_t)&unk_100BE3160);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3150);
  }
  return result;
}

unint64_t sub_10045369C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3170;
  if (!qword_100BE3170)
  {
    v1 = sub_100075EB0(&qword_100BE2940);
    sub_100453708();
    sub_100453938();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3170);
  }
  return result;
}

unint64_t sub_100453708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3178;
  if (!qword_100BE3178)
  {
    v1 = sub_100075EB0(&qword_100BE2948);
    sub_10045378C();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3178);
  }
  return result;
}

unint64_t sub_10045378C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3180;
  if (!qword_100BE3180)
  {
    v1 = sub_100075EB0(&qword_100BE3188);
    sub_10045016C((uint64_t)&unk_100BE3190);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3180);
  }
  return result;
}

unint64_t sub_100453818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE31A0;
  if (!qword_100BE31A0)
  {
    v1 = sub_100075EB0(&qword_100BE31A8);
    sub_10045389C();
    sub_10007AB60((uint64_t)&unk_100BE31C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE31A0);
  }
  return result;
}

unint64_t sub_10045389C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE31B0;
  if (!qword_100BE31B0)
  {
    v1 = sub_100075EB0(&qword_100BE31B8);
    sub_10007AB60((uint64_t)&unk_100BE31C0);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE31B0);
  }
  return result;
}

unint64_t sub_100453938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE31D0;
  if (!qword_100BE31D0)
  {
    v1 = sub_100075EB0(&qword_100BE2930);
    sub_1004539BC();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE31D0);
  }
  return result;
}

unint64_t sub_1004539BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE31D8;
  if (!qword_100BE31D8)
  {
    v1 = sub_100075EB0(&qword_100BE31E0);
    sub_10045016C((uint64_t)&unk_100BE31E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE31D8);
  }
  return result;
}

unint64_t sub_100453A48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE31F8;
  if (!qword_100BE31F8)
  {
    v1 = sub_100075EB0(&qword_100BE3200);
    sub_100453ACC();
    sub_10007AB60((uint64_t)&unk_100BE3218);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE31F8);
  }
  return result;
}

unint64_t sub_100453ACC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3208;
  if (!qword_100BE3208)
  {
    v1 = sub_100075EB0(&qword_100BE3210);
    sub_10007AB60((uint64_t)&unk_100BE3218);
    sub_10007A100((uint64_t)&unk_100BE21E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3208);
  }
  return result;
}

unint64_t sub_100453B68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3228;
  if (!qword_100BE3228)
  {
    v1 = sub_100075EB0(&qword_100BE2920);
    sub_100450C54();
    sub_100451120();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3228);
  }
  return result;
}

uint64_t sub_100453BD4()
{
  uint64_t v0;

  sub_1000B329C();
  sub_1000951F0();
  sub_10009E258();
  return swift_deallocObject(v0, 64, 7);
}

void sub_100453BFC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100430B14((__int128 *)(v1 + 16), a1);
}

uint64_t sub_100453C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10009ED94();
  sub_10011DF08();
  sub_1000DB2A8();
  v0 = sub_1000D12B0();
  sub_1000989A0(v0);
  swift_bridgeObjectRelease();
  v1 = sub_1000B3B9C();
  return sub_100098B00(v1, v2, v3);
}

uint64_t sub_100453C4C()
{
  return sub_1004554EC(type metadata accessor for UVIndexComponentViewModel);
}

uint64_t sub_100453C60()
{
  uint64_t v0;

  sub_1000B329C();
  sub_1000951F0();
  sub_10009E258();
  sub_10045B9A8();
  sub_10045B920();
  sub_10045B97C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 224, 7);
}

void sub_100453CCC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100430670((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100453CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10045B61C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100453D30()
{
  return sub_1004554EC((uint64_t (*)(_QWORD))&type metadata accessor for SunriseSunsetViewModel);
}

uint64_t sub_100453D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10009EFBC();
  sub_1000B3B94();
  sub_1000CE558();
  sub_10045B6E0();
  sub_10009C890();
  sub_10045B6D8();
  v0 = sub_1000BBFE4();
  sub_10003BC44(v0);
  v1 = sub_1000B3B9C();
  return sub_100098B00(v1, v2, v3);
}

uint64_t sub_100453DB0()
{
  return sub_1004554EC(type metadata accessor for SevereAlertComponentViewModel);
}

uint64_t sub_100453DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1001FB8BC();
  sub_10009ED30();
  v17 = (v16 + 17) & ~v16;
  v18 = v12 + v17;
  sub_1000B15F8(*(_QWORD *)(v12 + v17), *(_BYTE *)(v12 + v17 + 8));
  sub_1000B15F8(*(_QWORD *)(v18 + 16), *(_BYTE *)(v18 + 24));
  v19 = (_QWORD *)(v12 + v17 + v11[6]);
  v20 = sub_1000C21DC();
  switch(sub_100098814(v20))
  {
    case 0u:
    case 4u:
      sub_10009BF48();
      sub_1000D9DD0();
      v21 = v19 + 6;
      goto LABEL_6;
    case 1u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      v21 = v19 + 10;
      goto LABEL_6;
    case 2u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      sub_100094FD4();
      sub_1000F3E40();
      v21 = v19 + 14;
      goto LABEL_6;
    case 3u:
      v22 = sub_1000D12B0();
      sub_1000987E0(v22);
      v23 = (char *)v19 + *(int *)(sub_1000D09EC() + 20);
      sub_1000C0DF8();
      sub_1000952D8();
      v21 = v23 + 48;
LABEL_6:
      sub_10045B638(v21);
      break;
    default:
      break;
  }
  sub_1000878BC();
  v24 = sub_1000DAC78();
  switch(sub_100094FAC(v24))
  {
    case 0u:
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      goto LABEL_41;
    case 1u:
      sub_100321DEC();
      sub_10009C20C();
      sub_10045B8D4();
      sub_1000BA294(&qword_100BC4E68);
      sub_1000BE7AC((v16 + 17) & ~v16);
      sub_1000BE7AC(v13 + v14[6]);
      sub_1000BE7AC(v13 + v14[7]);
      v25 = v14[8];
      goto LABEL_33;
    case 2u:
      sub_1000B3B94();
      sub_1000CE558();
      v26 = sub_10011E210();
      v27 = sub_10009BD00();
      if (!sub_1000C0DE4(v27))
      {
        sub_1000C48E0();
        v28 = sub_10009DF08();
        sub_10009BF1C(v28);
        v29 = sub_1000C1494();
        sub_1000BA548(v17 + *(int *)(v29 + 32));
      }
      v30 = *(int *)(v26 + 28);
      goto LABEL_57;
    case 3u:
    case 4u:
      goto LABEL_41;
    case 5u:
      v31 = sub_1000B4608();
      sub_1000989A0(v31);
      v32 = sub_10045B614();
      v33 = v13 + *(int *)(v32 + 20);
      v34 = sub_1000992C4();
      sub_10009BF1C(v34);
      v62 = v32;
      sub_10011E47C();
      if (!sub_10009D53C(v33))
      {
        sub_1000C48E0();
        v35 = sub_10011E528();
        if (!sub_10009D53C(v15))
          sub_1000BE774(v15, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8));
        v36 = sub_10003BD50();
        sub_1000BA9C0(v36);
        sub_10045B8A0();
        v37 = sub_1000BA294(&qword_100BC3348);
        if (!sub_10009DB00(v37))
        {
          v38 = sub_100098778();
          sub_1000BA9C0(v38);
        }
        v39 = sub_1000FDA30();
        v40 = sub_10009ED24(v39);
        if (v40 == 1)
        {
          v60 = sub_10011E384();
          sub_1000BA9C0(v60);
        }
        else if (!v40)
        {
          sub_10009C0F0();
        }
        v61 = sub_1000B2EF8();
        if (!sub_1000C0DE4(v61))
        {
          sub_100098778();
          if (!sub_10009D53C(v33))
            sub_1000CD75C();
          if (!sub_10009D53C(v33 + *(int *)(a11 + 20)))
            sub_1000CD75C();
        }
      }
      v30 = *(int *)(v62 + 28);
LABEL_57:
      sub_1000999DC(v30);
      break;
    case 6u:
      sub_1000B3B94();
      sub_10045B798();
      if (!v44)
        sub_10045B6F8(v41, v42, v43);
      sub_1000D1E34();
      sub_10011E0E8();
      v45 = sub_100098778();
      goto LABEL_36;
    case 7u:
      v46 = sub_1000C21E4();
      if (sub_100094FAC(v46) == 1)
      {
        sub_1000B3B94();
        v47 = sub_10004A364();
        v48 = v13 + *(int *)(v47 + 20);
        v49 = sub_10009896C();
        if (!sub_10009D53C(v48))
          sub_1000BE774(v48, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8));
        sub_1000999DC(*(int *)(v47 + 24));
        sub_1000DA540();
        if (!sub_1000BECB0())
          sub_1000951E8(v13);
      }
      break;
    case 8u:
      sub_1000B3B94();
      sub_10011E2F4();
      v45 = sub_1000ED298();
      goto LABEL_36;
    case 9u:
      v45 = sub_1000992C4();
      goto LABEL_36;
    case 0xAu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      goto LABEL_41;
    case 0xBu:
      v50 = sub_1000DF640();
      sub_1000989A0(v50);
      v51 = (int *)sub_10011E25C();
      sub_1000999DC(v51[5]);
      sub_1000999DC(v51[6]);
      v25 = v51[7];
LABEL_33:
      sub_1000999DC(v25);
      sub_10045B6E8();
      goto LABEL_41;
    case 0xDu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_10045B6E0();
      sub_10009C890();
      sub_10045B6D8();
      sub_10009EFBC();
      v45 = sub_1000FC4D4();
      goto LABEL_36;
    case 0xEu:
      v45 = sub_10045B61C();
LABEL_36:
      sub_1000989A0(v45);
      break;
    case 0xFu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10009C824();
      goto LABEL_41;
    case 0x10u:
      sub_1000CE558();
      sub_10009ED94();
      v52 = sub_1000D12B0();
      sub_1000BD468(v52);
      goto LABEL_41;
    case 0x11u:
      sub_1000B3B94();
      sub_1000CE558();
      goto LABEL_41;
    case 0x12u:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10045B81C();
      sub_10011DF78();
      v53 = sub_1000FC61C();
      sub_1000BD468(v53);
LABEL_41:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v54 = sub_100095158();
  if (!sub_1000BC04C(v54))
  {
    switch(sub_10045B608())
    {
      case 0u:
        v55 = sub_10009896C();
        goto LABEL_48;
      case 1u:
        v55 = sub_1000B4608();
        goto LABEL_48;
      case 2u:
        v55 = sub_1000D9588();
        goto LABEL_48;
      case 4u:
        sub_1000BA294(&qword_100BC5FF0);
        v55 = sub_1000992C4();
LABEL_48:
        sub_1000987E0(v55);
        break;
      default:
        break;
    }
  }
  sub_10045B758();
  sub_10009DAA8(v18 + v11[8]);
  sub_10009DAA8(v18 + v11[9]);
  sub_1000C6DD4();
  sub_10009C7AC();
  v56 = sub_1000BD3C8();
  return sub_1000D8FB4(v56, v57, v58);
}

double sub_10045432C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  type metadata accessor for LocationComponentContainerContentView(0);
  sub_10045B94C();
  *(_QWORD *)&result = sub_100430298(*(_BYTE *)(v1 + 16), v1 + ((v3 + 17) & (unint64_t)~v3), a1).n128_u64[0];
  return result;
}

uint64_t sub_100454368()
{
  uint64_t v0;

  sub_1000B329C();
  sub_1000951F0();
  sub_10009E258();
  sub_10045B9A8();
  sub_10045B920();
  sub_10045B97C();
  return swift_deallocObject(v0, 112, 7);
}

void sub_10045439C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1004300F4((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1004543A4()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (int *)sub_10011E25C();
  v1 = sub_1000DF640();
  sub_1000989A0(v1);
  sub_1000999DC(v0[5]);
  sub_1000999DC(v0[6]);
  sub_1000999DC(v0[7]);
  sub_1000999DC(v0[9]);
  v2 = sub_1000B3B9C();
  return sub_100098B00(v2, v3, v4);
}

uint64_t sub_100454414()
{
  return sub_1004554EC(type metadata accessor for PressureComponentViewModel);
}

uint64_t sub_100454428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1001FB8BC();
  sub_10009ED30();
  v17 = (v16 + 16) & ~v16;
  v18 = v12 + v17;
  sub_1000B15F8(*(_QWORD *)(v12 + v17), *(_BYTE *)(v12 + v17 + 8));
  sub_1000B15F8(*(_QWORD *)(v18 + 16), *(_BYTE *)(v18 + 24));
  v19 = (_QWORD *)(v12 + v17 + v11[6]);
  v20 = sub_1000C21DC();
  switch(sub_100098814(v20))
  {
    case 0u:
    case 4u:
      sub_10009BF48();
      sub_1000D9DD0();
      v21 = v19 + 6;
      goto LABEL_6;
    case 1u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      v21 = v19 + 10;
      goto LABEL_6;
    case 2u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      sub_100094FD4();
      sub_1000F3E40();
      v21 = v19 + 14;
      goto LABEL_6;
    case 3u:
      v22 = sub_1000D12B0();
      sub_1000987E0(v22);
      v23 = (char *)v19 + *(int *)(sub_1000D09EC() + 20);
      sub_1000C0DF8();
      sub_1000952D8();
      v21 = v23 + 48;
LABEL_6:
      sub_10045B638(v21);
      break;
    default:
      break;
  }
  sub_1000878BC();
  v24 = sub_1000DAC78();
  switch(sub_100094FAC(v24))
  {
    case 0u:
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      goto LABEL_41;
    case 1u:
      sub_100321DEC();
      sub_10009C20C();
      sub_10045B8D4();
      sub_1000BA294(&qword_100BC4E68);
      sub_1000BE7AC((v16 + 16) & ~v16);
      sub_1000BE7AC(v13 + v14[6]);
      sub_1000BE7AC(v13 + v14[7]);
      v25 = v14[8];
      goto LABEL_33;
    case 2u:
      sub_1000B3B94();
      sub_1000CE558();
      v26 = sub_10011E210();
      v27 = sub_10009BD00();
      if (!sub_1000C0DE4(v27))
      {
        sub_1000C48E0();
        v28 = sub_10009DF08();
        sub_10009BF1C(v28);
        v29 = sub_1000C1494();
        sub_1000BA548(v17 + *(int *)(v29 + 32));
      }
      v30 = *(int *)(v26 + 28);
      goto LABEL_57;
    case 3u:
    case 4u:
      goto LABEL_41;
    case 5u:
      v31 = sub_1000B4608();
      sub_1000989A0(v31);
      v32 = sub_10045B614();
      v33 = v13 + *(int *)(v32 + 20);
      v34 = sub_1000992C4();
      sub_10009BF1C(v34);
      v62 = v32;
      sub_10011E47C();
      if (!sub_10009D53C(v33))
      {
        sub_1000C48E0();
        v35 = sub_10011E528();
        if (!sub_10009D53C(v15))
          sub_1000BE774(v15, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8));
        v36 = sub_10003BD50();
        sub_1000BA9C0(v36);
        sub_10045B8A0();
        v37 = sub_1000BA294(&qword_100BC3348);
        if (!sub_10009DB00(v37))
        {
          v38 = sub_100098778();
          sub_1000BA9C0(v38);
        }
        v39 = sub_1000FDA30();
        v40 = sub_10009ED24(v39);
        if (v40 == 1)
        {
          v60 = sub_10011E384();
          sub_1000BA9C0(v60);
        }
        else if (!v40)
        {
          sub_10009C0F0();
        }
        v61 = sub_1000B2EF8();
        if (!sub_1000C0DE4(v61))
        {
          sub_100098778();
          if (!sub_10009D53C(v33))
            sub_1000CD75C();
          if (!sub_10009D53C(v33 + *(int *)(a11 + 20)))
            sub_1000CD75C();
        }
      }
      v30 = *(int *)(v62 + 28);
LABEL_57:
      sub_1000999DC(v30);
      break;
    case 6u:
      sub_1000B3B94();
      sub_10045B798();
      if (!v44)
        sub_10045B6F8(v41, v42, v43);
      sub_1000D1E34();
      sub_10011E0E8();
      v45 = sub_100098778();
      goto LABEL_36;
    case 7u:
      v46 = sub_1000C21E4();
      if (sub_100094FAC(v46) == 1)
      {
        sub_1000B3B94();
        v47 = sub_10004A364();
        v48 = v13 + *(int *)(v47 + 20);
        v49 = sub_10009896C();
        if (!sub_10009D53C(v48))
          sub_1000BE774(v48, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8));
        sub_1000999DC(*(int *)(v47 + 24));
        sub_1000DA540();
        if (!sub_1000BECB0())
          sub_1000951E8(v13);
      }
      break;
    case 8u:
      sub_1000B3B94();
      sub_10011E2F4();
      v45 = sub_1000ED298();
      goto LABEL_36;
    case 9u:
      v45 = sub_1000992C4();
      goto LABEL_36;
    case 0xAu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      goto LABEL_41;
    case 0xBu:
      v50 = sub_1000DF640();
      sub_1000989A0(v50);
      v51 = (int *)sub_10011E25C();
      sub_1000999DC(v51[5]);
      sub_1000999DC(v51[6]);
      v25 = v51[7];
LABEL_33:
      sub_1000999DC(v25);
      sub_10045B6E8();
      goto LABEL_41;
    case 0xDu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_10045B6E0();
      sub_10009C890();
      sub_10045B6D8();
      sub_10009EFBC();
      v45 = sub_1000FC4D4();
      goto LABEL_36;
    case 0xEu:
      v45 = sub_10045B61C();
LABEL_36:
      sub_1000989A0(v45);
      break;
    case 0xFu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10009C824();
      goto LABEL_41;
    case 0x10u:
      sub_1000CE558();
      sub_10009ED94();
      v52 = sub_1000D12B0();
      sub_1000BD468(v52);
      goto LABEL_41;
    case 0x11u:
      sub_1000B3B94();
      sub_1000CE558();
      goto LABEL_41;
    case 0x12u:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10045B81C();
      sub_10011DF78();
      v53 = sub_1000FC61C();
      sub_1000BD468(v53);
LABEL_41:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v54 = sub_100095158();
  if (!sub_1000BC04C(v54))
  {
    switch(sub_10045B608())
    {
      case 0u:
        v55 = sub_10009896C();
        goto LABEL_48;
      case 1u:
        v55 = sub_1000B4608();
        goto LABEL_48;
      case 2u:
        v55 = sub_1000D9588();
        goto LABEL_48;
      case 4u:
        sub_1000BA294(&qword_100BC5FF0);
        v55 = sub_1000992C4();
LABEL_48:
        sub_1000987E0(v55);
        break;
      default:
        break;
    }
  }
  sub_10045B758();
  sub_10009DAA8(v18 + v11[8]);
  sub_10009DAA8(v18 + v11[9]);
  sub_1000C6DD4();
  sub_10009C7AC();
  v56 = sub_1000BD3C8();
  return sub_1000D8FB4(v56, v57, v58);
}

uint64_t sub_100454990()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;

  v0 = type metadata accessor for LocationComponentContainerContentView(0);
  v1 = sub_10045B7F0(v0);
  return sub_10042FF60(v1, v2);
}

uint64_t sub_1004549B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v3 = v0;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NotificationsOptInComponentViewModel(0) - 8) + 80);
  v5 = (int *)sub_10045B928();
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v68 = *(_QWORD *)(v6 + 64);
  sub_1000992C4();
  v8 = sub_10009ECE0();
  v66 = v10;
  v67 = v9;
  ((void (*)(uint64_t))v10)(v8);
  v69 = (((v4 + 16) & ~v4) + v1 + v7) & ~v7;
  v11 = v0 + v69;
  sub_1000B15F8(*(_QWORD *)v11, *(_BYTE *)(v11 + 8));
  sub_1000B15F8(*(_QWORD *)(v11 + 16), *(_BYTE *)(v11 + 24));
  v12 = (_QWORD *)(v11 + v5[6]);
  v13 = sub_1000C21DC();
  switch(sub_1000952AC(v13))
  {
    case 0u:
    case 4u:
      sub_1000C0DF8();
      sub_1000952D8();
      v14 = v12 + 6;
      goto LABEL_6;
    case 1u:
      sub_1000C0DF8();
      sub_1000952D8();
      sub_10009E4AC();
      sub_10045B84C();
      v14 = v12 + 10;
      goto LABEL_6;
    case 2u:
      sub_1000C0DF8();
      sub_1000952D8();
      sub_10009E4AC();
      sub_10045B84C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v12 + 14;
      goto LABEL_6;
    case 3u:
      v15 = sub_1000D12B0();
      sub_1000B2568(v15);
      v16 = (char *)v12 + *(int *)(sub_1000D09EC() + 20);
      sub_1000B3B94();
      sub_1000CE558();
      v14 = v16 + 48;
LABEL_6:
      sub_10045B638(v14);
      break;
    default:
      break;
  }
  v17 = sub_1000878BC();
  v18 = (char *)v12 + *(int *)(v17 + 20);
  v19 = sub_100117398();
  switch(sub_10009ED24(v19))
  {
    case 0u:
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      sub_10045B66C();
      goto LABEL_42;
    case 1u:
      swift_bridgeObjectRelease();
      v20 = (int *)sub_10009C20C();
      v62 = &v18[v20[5]];
      v21 = sub_1000BA294(&qword_100BC4E68);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v62, v21);
      sub_10045B8E8(v20[6]);
      sub_10045B8E8(v20[7]);
      v22 = v20[8];
      goto LABEL_33;
    case 2u:
      v64 = v3;
      sub_10009C0F0();
      sub_1000DB2A8();
      v23 = sub_10011E210();
      v24 = &v18[*(int *)(v23 + 24)];
      v25 = sub_10009DD94();
      if (!sub_1000B4988(v25))
      {
        sub_10009C0D4();
        v26 = &v24[*(int *)(v2 + 20)];
        v27 = sub_10011E004();
        sub_1000BC1D4(v27);
        v28 = sub_1000C1494();
        sub_1000BA548((uint64_t)&v26[*(int *)(v28 + 32)]);
      }
      v29 = *(int *)(v23 + 28);
      goto LABEL_59;
    case 3u:
    case 4u:
      goto LABEL_42;
    case 5u:
      v64 = v3;
      v30 = sub_1000B4608();
      sub_1000BA9C0(v30);
      v31 = sub_10045B614();
      v66(&v18[*(int *)(v31 + 20)], v67);
      v63 = v31;
      v32 = (uint64_t)&v18[*(int *)(v31 + 24)];
      v33 = sub_1000C2148();
      if (!sub_1000952CC(v32))
      {
        sub_10009C0D4();
        v61 = v33;
        v34 = v32 + *(int *)(v33 + 20);
        v35 = sub_1000988FC();
        if (!sub_1000952CC(v34))
          sub_100098B40(v34, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8));
        v36 = sub_1000B2F08();
        sub_10009BF1C(v36);
        v37 = sub_1000BA294(&qword_100BC3348);
        if (!sub_10045B824(v37))
        {
          v38 = sub_100098778();
          sub_10009BF1C(v38);
        }
        v39 = sub_10007A178();
        v40 = sub_10045B8C8(v39);
        if (v40 == 1)
        {
          v58 = sub_10011E384();
          sub_10009BF1C(v58);
        }
        else if (!v40)
        {
          sub_1000C48E0();
        }
        v59 = v32 + *(int *)(v61 + 36);
        v60 = sub_1000B2FFC();
        if (!sub_1000B4988(v60))
        {
          sub_100098778();
          if (!sub_1000952CC(v59))
            sub_1000890F4();
          if (!sub_1000952CC(v59 + *(int *)(v61 + 20)))
            sub_1000890F4();
        }
      }
      v29 = *(int *)(v63 + 28);
LABEL_59:
      sub_1000BA548((uint64_t)&v18[v29]);
      v3 = v64;
      break;
    case 6u:
      sub_10009C0F0();
      v41 = v18[32];
      if (v41 != 255)
        sub_100121E04(*((_QWORD *)v18 + 2), *((_QWORD *)v18 + 3), v41);
      sub_10007A044();
      v18 += *(int *)(sub_10011E0E8() + 28);
      v42 = sub_100098778();
      goto LABEL_36;
    case 7u:
      v43 = sub_1000C21E4();
      if (sub_10009ED24(v43) == 1)
      {
        v65 = v3;
        sub_10009C0F0();
        v44 = (int *)sub_10004A364();
        v45 = (uint64_t)&v18[v44[5]];
        v46 = sub_10009896C();
        if (!sub_1000952CC(v45))
          sub_100098B40(v45, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8));
        sub_1000BA548((uint64_t)&v18[v44[6]]);
        sub_10011E6C4((uint64_t)&v18[v44[7]]);
        v47 = (uint64_t)&v18[v44[8]];
        v3 = v65;
        if (!sub_1000952CC(v47))
          sub_10011E6C4(v47);
      }
      break;
    case 8u:
      sub_10009C0F0();
      v18 += *(int *)(sub_10011E2F4() + 20);
      v42 = sub_10011DFA8();
      goto LABEL_36;
    case 9u:
      v66(v18, v67);
      break;
    case 0xAu:
      sub_10009C0F0();
      sub_1000DB2A8();
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      goto LABEL_42;
    case 0xBu:
      v48 = sub_1000DF640();
      sub_1000BA9C0(v48);
      v49 = (int *)sub_10011E25C();
      sub_1000BA548((uint64_t)&v18[v49[5]]);
      sub_1000BA548((uint64_t)&v18[v49[6]]);
      v22 = v49[7];
LABEL_33:
      sub_1000BA548((uint64_t)&v18[v22]);
      goto LABEL_42;
    case 0xDu:
      sub_10009C0F0();
      sub_1000DB2A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 += *(int *)(sub_10009EFBC() + 36);
      v42 = sub_1000BBFE4();
      goto LABEL_36;
    case 0xEu:
      v42 = sub_10045B61C();
LABEL_36:
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v18, v42);
      break;
    case 0xFu:
      sub_10009C0F0();
      sub_1000DB2A8();
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      sub_10045B66C();
      sub_10045B7DC();
      sub_10045B7C0();
      sub_10045B7B8();
      sub_10009C854();
      sub_10011DE74();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 0x10u:
      sub_1000DB2A8();
      v3 = (uint64_t)&v18[*(int *)(sub_10009ED94() + 28)];
      v50 = sub_1000D12B0();
      sub_10045B700(v50);
      goto LABEL_42;
    case 0x11u:
      sub_10009C0F0();
      sub_1000DB2A8();
      goto LABEL_42;
    case 0x12u:
      sub_10009C0F0();
      sub_1000DB2A8();
      sub_10007A044();
      sub_100087910();
      sub_100075E20();
      sub_10045B66C();
      sub_10045B7DC();
      sub_10045B7C0();
      sub_10045B7B8();
      sub_10009C854();
      sub_10011DE74();
      sub_10045B8B4();
      v3 = (uint64_t)&v18[*(int *)(sub_10011DF78() + 68)];
      v51 = sub_10009E584();
      sub_10045B700(v51);
LABEL_42:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v52 = (char *)v12 + *(int *)(v17 + 28);
  v53 = sub_100095158();
  if (!sub_10009E638(v53))
  {
    switch(sub_10045B7E4())
    {
      case 0u:
        sub_10009896C();
        goto LABEL_48;
      case 1u:
        sub_1000B4608();
        goto LABEL_48;
      case 2u:
        sub_1000D9588();
LABEL_48:
        v54 = sub_10009ECE0();
        goto LABEL_50;
      case 4u:
        v54 = (uint64_t)&v52[*(int *)(sub_1000BA294(&qword_100BC5FF0) + 48)];
        v56 = (void (*)(uint64_t, uint64_t))v66;
        v55 = v67;
LABEL_50:
        v56(v54, v55);
        break;
      default:
        break;
    }
  }
  swift_unknownObjectRelease(*(_QWORD *)(v11 + v5[7]));
  sub_10009DAA8(v11 + v5[8]);
  sub_10009DAA8(v11 + v5[9]);
  sub_1000C6DD4();
  sub_10009C7AC();
  return sub_1000BE900(v3, v69 + v68, v4 | v7 | 7);
}

uint64_t sub_100455074()
{
  return sub_100455B58(type metadata accessor for NotificationsOptInComponentViewModel);
}

uint64_t sub_100455088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10011E2F4();
  sub_1000B3B94();
  v0 = sub_10011DFA8();
  sub_10003BC44(v0);
  v1 = sub_1000B3B9C();
  return sub_100098B00(v1, v2, v3);
}

uint64_t sub_1004550E4()
{
  return sub_1004554EC(type metadata accessor for NextHourPrecipitationComponentViewModel);
}

uint64_t sub_1004550F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void (*v10)(uint64_t, uint64_t, double);
  uint64_t v11;

  sub_10008900C();
  v1 = *(_QWORD *)(sub_1000C21E4() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = v0 + v3;
  if (swift_getEnumCaseMultiPayload(v0 + v3) == 1)
  {
    sub_1000CDC68();
    v6 = (int *)sub_10004A364();
    v7 = v5 + v6[5];
    v8 = sub_10009896C();
    if (!sub_1000CF764(v7))
      sub_100099254(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
    v9 = sub_1000BA548(v5 + v6[6]);
    v10 = *(void (**)(uint64_t, uint64_t, double))(*(_QWORD *)(v8 - 8) + 8);
    v10(v5 + v6[7], v8, v9);
    if (!sub_1000CF764(v5 + v6[8]))
    {
      v11 = sub_10045B940();
      ((void (*)(uint64_t))v10)(v11);
    }
  }
  return sub_1000B4380(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1004551C8()
{
  return sub_1004554EC(type metadata accessor for NewsArticleComponentViewModel);
}

uint64_t sub_1004551DC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_10011E0E8();
  sub_1000B3B94();
  sub_10045B798();
  if (!v3)
    sub_10045B6F8(v0, v1, v2);
  sub_1000D1E34();
  v4 = sub_100098778();
  sub_10003BC44(v4);
  v5 = sub_1000BD3C8();
  return sub_100098B00(v5, v6, v7);
}

uint64_t sub_100455248()
{
  return sub_1004554EC(type metadata accessor for MoonComponentViewModel);
}

uint64_t sub_10045525C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1000986AC();
  v2 = sub_10045B614();
  v3 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80));
  v4 = sub_1000B4608();
  sub_1000987E0(v4);
  v5 = sub_1000992C4();
  sub_1000B2568(v5);
  v6 = v3 + *(int *)(v2 + 24);
  v7 = sub_1000C2148();
  if (!sub_10009E638(v7))
  {
    sub_1000C0DF8();
    v8 = v6 + *(int *)(v1 + 20);
    v9 = sub_1000988FC();
    if (!sub_1000952CC(v8))
      sub_100098B40(v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8));
    v10 = sub_1000B2F08();
    sub_1000BA9C0(v10);
    v11 = sub_1000BA294(&qword_100BC3348);
    if (!sub_10009DB00(v11))
    {
      v12 = sub_100098778();
      sub_1000BA9C0(v12);
    }
    v13 = sub_10007A178();
    v14 = sub_10009ED24(v13);
    if (v14 == 1)
    {
      v15 = sub_10011E384();
      sub_1000BA9C0(v15);
    }
    else if (!v14)
    {
      sub_10009C0F0();
    }
    v16 = v6 + *(int *)(v1 + 36);
    v17 = sub_1000B2FFC();
    if (!sub_10009E638(v17))
    {
      v18 = sub_100098778();
      if (!sub_10009D53C(v16))
        sub_1000BE774(v16, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8));
      v19 = v16 + *(int *)(v1 + 20);
      if (!sub_10009D53C(v19))
        sub_1000BE774(v19, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8));
    }
  }
  sub_1000BA548(v3 + *(int *)(v2 + 28));
  v20 = sub_10009E954();
  return swift_deallocObject(v20, v21, v22);
}

uint64_t sub_1004553DC()
{
  return sub_1004554EC(type metadata accessor for MapComponentViewModel);
}

uint64_t sub_1004553F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100455414(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10042F764(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1, *(double *)(v1 + 16));
}

uint64_t sub_100455420()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100455444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_10008900C();
  v2 = sub_10011E210();
  v3 = (*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_1000C48E0();
  sub_10045B790();
  v4 = v0 + v3 + *(int *)(v2 + 24);
  v5 = sub_10009DD94();
  if (!sub_1000BC04C(v5))
  {
    sub_10009BF48();
    v6 = v4 + *(int *)(v1 + 20);
    v7 = sub_10011E004();
    sub_1000987E0(v7);
    v8 = sub_1000C1494();
    sub_1000BA548(v6 + *(int *)(v8 + 32));
  }
  sub_1000BA548(v0 + v3 + *(int *)(v2 + 28));
  v9 = sub_1000BD3C8();
  return sub_1000B4380(v9, v10, v11);
}

uint64_t sub_1004554D8()
{
  return sub_1004554EC(type metadata accessor for FeelsLikeComponentViewModel);
}

uint64_t sub_1004554EC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = sub_10045B7C8(a1);
  v2 = sub_10045B7F0(v1);
  return v4(v2);
}

uint64_t sub_100455518()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  void (*v45)(uint64_t, uint64_t, double);
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_1001FB8BC();
  v3 = (int *)sub_10009C20C();
  v4 = *((_QWORD *)v3 - 1);
  v58 = *(unsigned __int8 *)(v4 + 80);
  v5 = (v58 + 16) & ~v58;
  v6 = *(_QWORD *)(v4 + 64);
  sub_10009ED30();
  v7 = (v5 + v6 + v2) & ~v2;
  v57 = *(_QWORD *)(v8 + 64);
  v9 = v1 + v5;
  swift_bridgeObjectRelease();
  v10 = v9 + v3[5];
  v11 = sub_1000BA294(&qword_100BC4E68);
  sub_10011E6C4(v10);
  sub_10011E6C4(v9 + v3[6]);
  sub_10011E6C4(v9 + v3[7]);
  sub_1000BA548(v9 + v3[8]);
  sub_1000BA548(v9 + v3[9]);
  v59 = v1;
  v12 = v1 + v7;
  sub_1000B15F8(*(_QWORD *)(v1 + v7), *(_BYTE *)(v1 + v7 + 8));
  sub_1000B15F8(*(_QWORD *)(v12 + 16), *(_BYTE *)(v12 + 24));
  v13 = (_QWORD *)(v1 + v7 + v0[6]);
  v14 = sub_1000C21DC();
  switch(sub_100098814(v14))
  {
    case 0u:
    case 4u:
      sub_10009BF48();
      sub_1000D9DD0();
      v15 = v13 + 6;
      goto LABEL_6;
    case 1u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      v15 = v13 + 10;
      goto LABEL_6;
    case 2u:
      sub_10009BF48();
      sub_1000D9DD0();
      sub_1000DA994();
      sub_1001102A8();
      sub_100094FD4();
      sub_1000F3E40();
      v15 = v13 + 14;
      goto LABEL_6;
    case 3u:
      v16 = sub_1000D12B0();
      sub_1000987E0(v16);
      v17 = (char *)v13 + *(int *)(sub_1000D09EC() + 20);
      sub_1000C0DF8();
      sub_1000952D8();
      v15 = v17 + 48;
LABEL_6:
      sub_10045B638(v15);
      break;
    default:
      break;
  }
  sub_1000878BC();
  v18 = sub_1000DAC78();
  switch(sub_100094FAC(v18))
  {
    case 0u:
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      goto LABEL_47;
    case 1u:
      sub_100321DEC();
      sub_10011E6C4(v7 + v3[5]);
      sub_10011E6C4(v7 + v3[6]);
      sub_10011E6C4(v7 + v3[7]);
      v19 = v3[8];
      goto LABEL_32;
    case 2u:
      sub_1000B3B94();
      sub_1000CE558();
      sub_10011E210();
      v20 = sub_10009BD00();
      if (!sub_10009D53C(v11))
      {
        sub_1000C48E0();
        v21 = v11 + *(int *)(v20 + 20);
        v22 = sub_10011E004();
        sub_10009BF1C(v22);
        v23 = sub_1000C1494();
        sub_1000BA548(v21 + *(int *)(v23 + 32));
      }
      goto LABEL_47;
    case 3u:
    case 4u:
      goto LABEL_47;
    case 5u:
      v24 = sub_1000B4608();
      sub_1000989A0(v24);
      v25 = v7 + *(int *)(sub_10045B614() + 20);
      v26 = sub_1000992C4();
      sub_10009BF1C(v26);
      v27 = sub_10011E47C();
      if (!sub_1000BD480(v25))
      {
        sub_1000C48E0();
        v28 = v25 + *(int *)(v27 + 20);
        v29 = sub_1000988FC();
        if (!sub_10009D53C(v28))
          sub_1000BE774(v28, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8));
        v30 = sub_1000B2F08();
        sub_1000BA9C0(v30);
        v31 = sub_1000BA294(&qword_100BC3348);
        if (!sub_10009DB00(v31))
        {
          v32 = sub_100098778();
          sub_1000BA9C0(v32);
        }
        v33 = sub_10007A178();
        v34 = sub_10009ED24(v33);
        if (v34 == 1)
        {
          v51 = sub_10011E384();
          sub_1000BA9C0(v51);
        }
        else if (!v34)
        {
          sub_10009C0F0();
        }
        v52 = v25 + *(int *)(v27 + 36);
        v53 = sub_1000B2FFC();
        if (!sub_10009D53C(v52))
        {
          sub_100098778();
          if (!sub_1000BD480(v52))
            sub_10045B7A4();
          if (!sub_1000BD480(v52 + *(int *)(v53 + 20)))
            sub_10045B7A4();
        }
      }
      goto LABEL_47;
    case 6u:
      sub_1000B3B94();
      sub_10045B798();
      if (!v38)
        sub_10045B6F8(v35, v36, v37);
      sub_1000D1E34();
      sub_10011E0E8();
      v39 = sub_100098778();
      goto LABEL_35;
    case 7u:
      v40 = sub_1000C21E4();
      if (sub_100094FAC(v40) == 1)
      {
        sub_1000B3B94();
        v41 = (int *)sub_10004A364();
        v42 = v7 + v41[5];
        v43 = sub_10009896C();
        if (!sub_10009D53C(v42))
          sub_1000BE774(v42, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8));
        v44 = sub_1000999DC(v41[6]);
        v45 = *(void (**)(uint64_t, uint64_t, double))(*(_QWORD *)(v43 - 8) + 8);
        v45(v7 + v41[7], v43, v44);
        if (!sub_10009D53C(v7 + v41[8]))
        {
          v46 = sub_10045B894();
          ((void (*)(uint64_t))v45)(v46);
        }
      }
      break;
    case 8u:
      sub_1000B3B94();
      sub_10011E2F4();
      v39 = sub_1000ED298();
      goto LABEL_35;
    case 9u:
      v39 = sub_1000992C4();
      goto LABEL_35;
    case 0xAu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      goto LABEL_47;
    case 0xBu:
      v47 = sub_1000DF640();
      sub_1000989A0(v47);
      v48 = (int *)sub_10011E25C();
      sub_1000999DC(v48[5]);
      sub_1000999DC(v48[6]);
      v19 = v48[7];
LABEL_32:
      sub_1000999DC(v19);
      goto LABEL_47;
    case 0xDu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_10045B6E0();
      sub_10009C890();
      sub_10045B6D8();
      sub_10009EFBC();
      v39 = sub_1000FC4D4();
      goto LABEL_35;
    case 0xEu:
      v39 = sub_10045B61C();
LABEL_35:
      sub_1000989A0(v39);
      break;
    case 0xFu:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10009C824();
      goto LABEL_47;
    case 0x10u:
      sub_1000CE558();
      sub_10009ED94();
      v49 = sub_1000D12B0();
      sub_10009BF1C(v49);
      goto LABEL_47;
    case 0x11u:
      sub_1000B3B94();
      sub_1000CE558();
      goto LABEL_47;
    case 0x12u:
      sub_1000B3B94();
      sub_1000CE558();
      sub_1000D1E34();
      sub_1000E7754();
      sub_1000D0D18();
      sub_1000CE59C();
      sub_100110724();
      sub_1000952E0();
      sub_10045B600();
      sub_10045B5F8();
      sub_10011E614();
      sub_10045B81C();
      sub_10011DF78();
      v50 = sub_1000DC068();
      sub_10009BF1C(v50);
LABEL_47:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v54 = sub_100095158();
  if (!sub_1000BC04C(v54))
  {
    switch(sub_10045B608())
    {
      case 0u:
        v55 = sub_10009896C();
        goto LABEL_54;
      case 1u:
        v55 = sub_1000B4608();
        goto LABEL_54;
      case 2u:
        v55 = sub_1000D9588();
        goto LABEL_54;
      case 4u:
        sub_1000BA294(&qword_100BC5FF0);
        v55 = sub_1000992C4();
LABEL_54:
        sub_1000987E0(v55);
        break;
      default:
        break;
    }
  }
  swift_unknownObjectRelease(*(_QWORD *)(v12 + v0[7]));
  sub_10009DAA8(v12 + v0[8]);
  sub_10009DAA8(v12 + v0[9]);
  sub_1000C6DD4();
  sub_10009C7AC();
  return sub_1000D8FB4(v59, v7 + v57, v58 | v2 | 7);
}

uint64_t sub_100455B58(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10045B7C8(a1) - 8) + 80);
  v4 = (v3 + 16) & ~v3;
  sub_10045B928();
  sub_10045B94C();
  return v7(v1 + v4, v1 + ((v4 + v2 + v5) & ~v5));
}

uint64_t sub_100455BB8()
{
  uint64_t v0;

  sub_10009E258();
  sub_10045B9A8();
  sub_10045B920();
  sub_10045B97C();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 128, 7);
}

void sub_100455BEC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10042EFD4((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100455BF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for AirQualityTopPaddingModifier(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE3540, (uint64_t)&nominal type descriptor for AirQualityTopPaddingModifier);
}

uint64_t type metadata accessor for LocationComponentContainerContentAccessibilityModifier(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE35D8, (uint64_t)&nominal type descriptor for LocationComponentContainerContentAccessibilityModifier);
}

void sub_100455C40()
{
  _BOOL8 v0;

  v0 = sub_10095CB74();
  sub_1000C0E60(v0);
  sub_10004A298();
}

uint64_t sub_100455C78@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_10043A038(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100455C9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100455C78(*(void (**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

double sub_100455CA4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_100439FD0((void (*)(uint64_t *__return_ptr))*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

void sub_100455CB4(uint64_t a1)
{
  sub_10009987C(a1);
  swift_retain();
  swift_retain();
  sub_10004A298();
}

void sub_100455CE0(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_release(a1[3]);
  swift_release(v1);
  sub_10004A298();
}

void sub_100455D18()
{
  uint64_t v0;

  v0 = sub_100685830();
  sub_1000C0E60(v0);
  sub_10004A298();
}

unint64_t sub_100455D54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE33D8;
  if (!qword_100BE33D8)
  {
    v1 = sub_100075EB0(&qword_100BE33C8);
    sub_100455DC0();
    sub_100455EC8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE33D8);
  }
  return result;
}

unint64_t sub_100455DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE33E0;
  if (!qword_100BE33E0)
  {
    v1 = sub_100075EB0(&qword_100BE3388);
    sub_100455E2C();
    sub_1001CDA94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE33E0);
  }
  return result;
}

unint64_t sub_100455E2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE33E8;
  if (!qword_100BE33E8)
  {
    v1 = sub_100075EB0(&qword_100BE3380);
    sub_10007AB60((uint64_t)&unk_100BE33F0);
    sub_10007AB60((uint64_t)&unk_100BE3400);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE33E8);
  }
  return result;
}

unint64_t sub_100455EC8()
{
  unint64_t result;

  result = qword_100BE3408;
  if (!qword_100BE3408)
  {
    result = swift_getWitnessTable(&unk_1009A0FBC, &type metadata for BackgroundModifier);
    atomic_store(result, (unint64_t *)&qword_100BE3408);
  }
  return result;
}

unint64_t sub_100455F04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3410;
  if (!qword_100BE3410)
  {
    v1 = sub_100075EB0(&qword_100BE33B8);
    sub_100455DC0();
    sub_10007AB60((uint64_t)&unk_100BE3418);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3410);
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentContainerBackgroundPaddingModifier(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE3718, (uint64_t)&nominal type descriptor for LocationComponentContainerBackgroundPaddingModifier);
}

unint64_t sub_100455F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3488;
  if (!qword_100BE3488)
  {
    v1 = sub_100075EB0(&qword_100BE3478);
    sub_100456020();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3488);
  }
  return result;
}

unint64_t sub_100456020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3490;
  if (!qword_100BE3490)
  {
    v1 = sub_100075EB0(&qword_100BE3470);
    sub_100158000();
    sub_10007A100((uint64_t)&unk_100BE34B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3490);
  }
  return result;
}

ValueMetadata *type metadata accessor for PinningHeaderModifier.PinningHeaderGeometry()
{
  return &type metadata for PinningHeaderModifier.PinningHeaderGeometry;
}

ValueMetadata *type metadata accessor for HeaderModifier.HeaderGeometry()
{
  return &type metadata for HeaderModifier.HeaderGeometry;
}

ValueMetadata *type metadata accessor for BackgroundModifier.BackgroundGeometry()
{
  return &type metadata for BackgroundModifier.BackgroundGeometry;
}

uint64_t sub_1004560D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v7 = a2[5];
    v8 = a2[6];
    *(_QWORD *)(v4 + 40) = v7;
    *(_QWORD *)(v4 + 48) = v8;
    v10 = a2[7];
    v9 = a2[8];
    *(_QWORD *)(v4 + 56) = v10;
    *(_QWORD *)(v4 + 64) = v9;
    v12 = a2[9];
    v11 = a2[10];
    *(_QWORD *)(v4 + 72) = v12;
    *(_QWORD *)(v4 + 80) = v11;
    v13 = a2[11];
    *(_QWORD *)(v4 + 88) = v13;
    *(_WORD *)(v4 + 96) = *((_WORD *)a2 + 48);
    v14 = a2[13];
    v15 = *(int *)(a3 + 20);
    v16 = (_QWORD *)(v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    *(_QWORD *)(v4 + 104) = v14;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    v18 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v17) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v19 = (char *)&loc_1004561E4 + 4 * byte_10099FBB0[swift_getEnumCaseMultiPayload(v17)];
      __asm { BR              X10 }
    }
    *v16 = *v17;
    swift_retain();
    swift_storeEnumTagMultiPayload(v16, v18, 0);
    v21 = *(int *)(a3 + 24);
    v22 = v4 + v21;
    v23 = (uint64_t)a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = *(_BYTE *)(v23 + 8);
    sub_10008D47C(*(_QWORD *)v23, v25);
    *(_QWORD *)v22 = v24;
    *(_BYTE *)(v22 + 8) = v25;
  }
  return v4;
}

uint64_t sub_100456424(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v4))
    {
      case 0u:
      case 4u:
        goto LABEL_7;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 3u:
        v5 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        return sub_1000B15F8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
    }
  }
  else
  {
    swift_release(*v4);
  }
  return sub_1000B15F8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_100456594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v9 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  v11 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v10;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + 104) = v13;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  v17 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v16) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v18 = (char *)&loc_100456694 + 4 * byte_10099FBBA[swift_getEnumCaseMultiPayload(v16)];
    __asm { BR              X10 }
  }
  *v15 = *v16;
  swift_retain();
  swift_storeEnumTagMultiPayload(v15, v17, 0);
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10008D47C(*(_QWORD *)v21, v23);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  return a1;
}

uint64_t sub_1004568B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_100021A14(a1 + v11, &qword_100BE21F0);
    v14 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v15 = (char *)&loc_100456A28 + 4 * byte_10099FBBF[swift_getEnumCaseMultiPayload(v13)];
      __asm { BR              X10 }
    }
    *v12 = *v13;
    swift_retain();
    swift_storeEnumTagMultiPayload(v12, v14, 0);
  }
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_BYTE *)(v18 + 8);
  sub_10008D47C(*(_QWORD *)v18, v20);
  v21 = *(_QWORD *)v17;
  v22 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v20;
  sub_1000B15F8(v21, v22);
  return a1;
}

char *sub_100456CE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;

  memcpy(a1, a2, 0x70uLL);
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(v8) == 3)
    {
      v11 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      v12 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v13 = *(int *)(v12 + 20);
      v14 = &v7[v13];
      v15 = &v8[v13];
      v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
      v7[*(int *)(v12 + 24)] = v8[*(int *)(v12 + 24)];
      swift_storeEnumTagMultiPayload(v7, v10, 3);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v17 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(_QWORD *)&v7[v17[5]] = *(_QWORD *)&v8[v17[5]];
    *(_QWORD *)&v7[v17[6]] = *(_QWORD *)&v8[v17[6]];
    v18 = v17[7];
    v19 = &v7[v18];
    v20 = &v8[v18];
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = v20[8];
    v7[v17[8]] = v8[v17[8]];
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v21 = *(int *)(a3 + 24);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  return a1;
}

uint64_t sub_100456E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (_BYTE *)(a1 + v10);
    v12 = (_BYTE *)(a2 + v10);
    sub_100021A14(a1 + v10, &qword_100BE21F0);
    v13 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for LocationComponentHeaderViewModel(0);
      if (swift_getEnumCaseMultiPayload(v12) == 3)
      {
        v15 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
        v16 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        v17 = *(int *)(v16 + 20);
        v18 = &v11[v17];
        v19 = &v12[v17];
        v20 = *((_OWORD *)v19 + 1);
        *(_OWORD *)v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v20;
        *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
        *((_QWORD *)v18 + 6) = *((_QWORD *)v19 + 6);
        v11[*(int *)(v16 + 24)] = v12[*(int *)(v16 + 24)];
        swift_storeEnumTagMultiPayload(v11, v14, 3);
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      v21 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(_QWORD *)&v11[v21[5]] = *(_QWORD *)&v12[v21[5]];
      *(_QWORD *)&v11[v21[6]] = *(_QWORD *)&v12[v21[6]];
      v22 = v21[7];
      v23 = &v11[v22];
      v24 = &v12[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v11[v21[8]] = v12[v21[8]];
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v25 = *(int *)(a3 + 24);
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  LOBYTE(v27) = *((_BYTE *)v27 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = (_BYTE)v27;
  sub_1000B15F8(v29, v30);
  return a1;
}

uint64_t sub_1004570C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004570CC);
}

void sub_1004570CC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 40));
    sub_100079F70();
  }
  else
  {
    sub_1000BA294(&qword_100BE2488);
    v2 = sub_1000CFCD0();
    sub_1000B250C(v2, v3, v4);
  }
}

uint64_t sub_10045711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100457128);
}

void sub_100457128()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10009E50C();
  if (v2 == 0x7FFFFFFF)
  {
    *(_QWORD *)(v1 + 40) = (v0 - 1);
    sub_100079F70();
  }
  else
  {
    sub_1000BA294(&qword_100BE2488);
    sub_100098D08();
    sub_1000987C4(v3, v4, v5, v6);
  }
}

void sub_100457180(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "p";
  sub_100158B48(319, (unint64_t *)&unk_100BE24F8, type metadata accessor for LocationComponentHeaderMetrics);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1009A00D0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_10045720C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10045B56C);
}

uint64_t sub_100457218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10045B578);
}

double destroy for BackgroundModifier(uint64_t a1)
{
  double result;

  sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 80)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for BackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1000B15F8(v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for BackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1000B15F8(v6, v7);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release(v9);
  return a1;
}

_QWORD *sub_1004573D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v39 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Location.Identifier(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (char *)a1 + v13;
    v16 = (char *)a2 + v13;
    v15[32] = v16[32];
    v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v18 = a3[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)v20;
    v22 = v20[8];
    swift_retain();
    sub_10008D47C(v21, v22);
    *(_QWORD *)v19 = v21;
    v19[8] = v22;
    v23 = a3[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = v25[8];
    sub_10008D47C(*(_QWORD *)v25, v27);
    *(_QWORD *)v24 = v26;
    v24[8] = v27;
    v28 = a3[11];
    v29 = a3[12];
    v30 = (_QWORD *)((char *)a1 + v28);
    v31 = (_QWORD *)((char *)a2 + v28);
    v32 = *v31;
    v33 = v31[1];
    *v30 = v32;
    v30[1] = v33;
    v34 = (_QWORD *)((char *)a1 + v29);
    v35 = (_QWORD *)((char *)a2 + v29);
    swift_retain();
    v36 = sub_1000BA294(&qword_100BD86C0);
    if (swift_getEnumCaseMultiPayload(v35) == 1)
    {
      v37 = type metadata accessor for ForegroundEffect(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37))
      {
        v38 = sub_1000BA294(&qword_100BC5B30);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v37);
      }
      v40 = v34;
      v41 = v36;
      v42 = 1;
    }
    else
    {
      *v34 = *v35;
      swift_retain();
      v40 = v34;
      v41 = v36;
      v42 = 0;
    }
    swift_storeEnumTagMultiPayload(v40, v41, v42);
  }
  return a1;
}

uint64_t sub_1004575C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v8[1];
  v8[1] = v9[1];
  swift_retain();
  swift_release(v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 32);
  v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  *(_BYTE *)(v12 + 32) = v14;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_BYTE *)(v18 + 8);
  sub_10008D47C(*(_QWORD *)v18, v20);
  v21 = *(_QWORD *)v17;
  v22 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v20;
  sub_1000B15F8(v21, v22);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_BYTE *)(v25 + 8);
  sub_10008D47C(*(_QWORD *)v25, v27);
  v28 = *(_QWORD *)v24;
  v29 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v27;
  sub_1000B15F8(v28, v29);
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  swift_retain();
  swift_release(v33);
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  if (a1 != a2)
  {
    v34 = a3[12];
    v35 = (_QWORD *)(a1 + v34);
    v36 = (_QWORD *)(a2 + v34);
    sub_100021A14(a1 + v34, &qword_100BD86C0);
    v37 = sub_1000BA294(&qword_100BD86C0);
    if (swift_getEnumCaseMultiPayload(v36) == 1)
    {
      v38 = type metadata accessor for ForegroundEffect(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v38))
      {
        v39 = sub_1000BA294(&qword_100BC5B30);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        v40 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
        v40 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v38);
      }
    }
    else
    {
      *v35 = *v36;
      swift_retain();
      v40 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v37, v40);
  }
  return a1;
}

uint64_t sub_1004577F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_BYTE *)(v10 + 32) = *(_BYTE *)(v11 + 32);
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v13 = a3[9];
  v14 = a3[10];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[11];
  v20 = a3[12];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  v23 = sub_1000BA294(&qword_100BD86C0);
  if (swift_getEnumCaseMultiPayload(v22) == 1)
  {
    v24 = type metadata accessor for ForegroundEffect(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v24))
    {
      v25 = sub_1000BA294(&qword_100BC5B30);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v24);
    }
    swift_storeEnumTagMultiPayload(v21, v23, 1);
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10045798C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_release(v12);
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  LOBYTE(v19) = *((_BYTE *)v19 + 8);
  v21 = *(_QWORD *)v18;
  v22 = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = (_BYTE)v19;
  sub_1000B15F8(v21, v22);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  LOBYTE(v25) = *((_BYTE *)v25 + 8);
  v27 = *(_QWORD *)v24;
  v28 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = (_BYTE)v25;
  sub_1000B15F8(v27, v28);
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a1 + v29);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  swift_release(v32);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  if (a1 != a2)
  {
    v33 = a3[12];
    v34 = (void *)(a1 + v33);
    v35 = (const void *)(a2 + v33);
    sub_100021A14(a1 + v33, &qword_100BD86C0);
    v36 = sub_1000BA294(&qword_100BD86C0);
    if (swift_getEnumCaseMultiPayload(v35) == 1)
    {
      v37 = type metadata accessor for ForegroundEffect(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37))
      {
        v38 = sub_1000BA294(&qword_100BC5B30);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v37);
      }
      swift_storeEnumTagMultiPayload(v34, v36, 1);
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100457B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100457B8C);
}

void sub_100457B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_100098AA0();
  sub_100088FF0();
  if (v6)
  {
    v7 = sub_1000890E8();
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
      sub_100079F70();
      return;
    }
    v8 = sub_1000BA294(&qword_100BD86C8);
    v7 = a1 + *(int *)(a3 + 48);
  }
  sub_1000B250C(v7, a2, v8);
}

uint64_t sub_100457C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100457C10);
}

void sub_100457C10(uint64_t a1, int a2, int a3, uint64_t a4)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_100098AA0();
  sub_10009D2E8();
  if (!v8)
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      sub_100079F70();
      return;
    }
    sub_1000BA294(&qword_100BD86C8);
  }
  sub_100098D08();
  sub_1000987C4(v9, v10, v11, v12);
}

void sub_100457C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1000986AC();
  v14 = v13;
  v16 = v15;
  v17 = sub_1000BA294(&qword_100BE21F0);
  if ((*(_DWORD *)(*(_QWORD *)(v17 - 8) + 80) & 0x20000) != 0)
  {
    *v16 = *v14;
    swift_retain();
  }
  else
  {
    if (sub_10045B884(v17) == 1)
    {
      sub_1000C21DC();
      v18 = sub_10045B608();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_100457CF8 + 4 * byte_10099FBC4[v18]))(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
      return;
    }
    sub_10011DE48();
    swift_storeEnumTagMultiPayload(v16, v12, 0);
  }
  sub_100098640();
}

double sub_100457DCC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;

  v2 = sub_1000BA294(&qword_100BE21F0);
  if (sub_10009DA58(v2) == 1)
  {
    v3 = sub_1000C21DC();
    switch(sub_10009DA58(v3))
    {
      case 0u:
      case 4u:
        goto LABEL_8;
      case 1u:
        sub_1000CDC68();
        sub_1000C6E50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 2u:
        sub_1000CDC68();
        sub_1000C6E50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 3u:
        v5 = sub_1000D12B0();
        sub_10003BC44(v5);
        sub_1000D09EC();
LABEL_8:
        sub_1000CDC68();
        sub_1000C6E50();
LABEL_9:
        *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
        break;
      default:
        sub_10004A298();
        break;
    }
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

void sub_100457EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1000986AC();
  v14 = v13;
  v15 = sub_1000BA294(&qword_100BE21F0);
  if (sub_10045B884(v15) == 1)
  {
    sub_1000C21DC();
    v16 = sub_10045B608();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_100457F10 + 4 * byte_10099FBCE[v16]))(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
  }
  else
  {
    sub_10011DE48();
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    sub_100098640();
  }
}

void sub_100457FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;

  v4 = sub_1000BA294(&qword_100BE21F0);
  if (sub_10009C8E0(v4) == 1)
  {
    v5 = sub_1000C21DC();
    if (sub_10009F7EC(a2) == 3)
    {
      v6 = sub_1000D12B0();
      sub_1000B4328(v6);
      v7 = sub_1000D09EC();
      sub_1000F4450(v7);
    }
    else
    {
      sub_1000FD93C(*(_QWORD *)(v5 - 8));
    }
    v8 = (int *)sub_10009CC5C();
    sub_1000C6A94(v8);
  }
  else
  {
    sub_1000FD93C(*(_QWORD *)(v2 - 8));
  }
  sub_100079F70();
}

uint64_t sub_100458048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10045B570);
}

uint64_t sub_100458054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10045B57C);
}

unint64_t sub_100458060(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a3[5];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    v12 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v13 = (char *)&loc_100458120 + 4 * byte_10099FBD3[swift_getEnumCaseMultiPayload(v11)];
      __asm { BR              X10 }
    }
    *v10 = *v11;
    swift_retain();
    swift_storeEnumTagMultiPayload(v10, v12, 0);
    v15 = a3[6];
    v16 = a1 + v15;
    v17 = a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_BYTE *)(v17 + 8);
    sub_10008D47C(*(_QWORD *)v17, v19);
    *(_QWORD *)v16 = v18;
    *(_BYTE *)(v16 + 8) = v19;
    v20 = a3[7];
    v21 = a1 + v20;
    v22 = a2 + v20;
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  }
  swift_retain();
  return a1;
}

double sub_10045837C(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  double result;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = (_QWORD *)(a1 + a2[5]);
  sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v4))
    {
      case 0u:
      case 4u:
        goto LABEL_7;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 3u:
        v5 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release(*v4);
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[7] + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1004584E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v12 = (char *)&loc_100458590 + 4 * byte_10099FBDD[swift_getEnumCaseMultiPayload(v10)];
    __asm { BR              X10 }
  }
  *v9 = *v10;
  swift_retain();
  swift_storeEnumTagMultiPayload(v9, v11, 0);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_10008D47C(*(_QWORD *)v15, v17);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_1004587D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[5];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_100021A14(a1 + v10, &qword_100BE21F0);
    v13 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v14 = (char *)&loc_1004588A4 + 4 * byte_10099FBE2[swift_getEnumCaseMultiPayload(v12)];
      __asm { BR              X10 }
    }
    *v11 = *v12;
    swift_retain();
    swift_storeEnumTagMultiPayload(v11, v13, 0);
  }
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  sub_10008D47C(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v19;
  sub_1000B15F8(v20, v21);
  v22 = a3[7];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = v23[2];
  v23[2] = v24[2];
  swift_retain();
  swift_release(v25);
  return a1;
}

uint64_t sub_100458B94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(v8) == 3)
    {
      v11 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      v12 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v13 = *(int *)(v12 + 20);
      v14 = &v7[v13];
      v15 = &v8[v13];
      v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
      v7[*(int *)(v12 + 24)] = v8[*(int *)(v12 + 24)];
      swift_storeEnumTagMultiPayload(v7, v10, 3);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v17 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(_QWORD *)&v7[v17[5]] = *(_QWORD *)&v8[v17[5]];
    *(_QWORD *)&v7[v17[6]] = *(_QWORD *)&v8[v17[6]];
    v18 = v17[7];
    v19 = &v7[v18];
    v20 = &v8[v18];
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = v20[8];
    v7[v17[8]] = v8[v17[8]];
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v21 = a3[6];
  v22 = a3[7];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  return a1;
}

uint64_t sub_100458D58(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = a3[5];
    v11 = (_BYTE *)(a1 + v10);
    v12 = (char *)a2 + v10;
    sub_100021A14(a1 + v10, &qword_100BE21F0);
    v13 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for LocationComponentHeaderViewModel(0);
      if (swift_getEnumCaseMultiPayload(v12) == 3)
      {
        v15 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
        v16 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        v17 = *(int *)(v16 + 20);
        v18 = &v11[v17];
        v19 = &v12[v17];
        v20 = *((_OWORD *)v19 + 1);
        *(_OWORD *)v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v20;
        *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
        *((_QWORD *)v18 + 6) = *((_QWORD *)v19 + 6);
        v11[*(int *)(v16 + 24)] = v12[*(int *)(v16 + 24)];
        swift_storeEnumTagMultiPayload(v11, v14, 3);
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      v21 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(_QWORD *)&v11[v21[5]] = *(_QWORD *)&v12[v21[5]];
      *(_QWORD *)&v11[v21[6]] = *(_QWORD *)&v12[v21[6]];
      v22 = v21[7];
      v23 = &v11[v22];
      v24 = &v12[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v11[v21[8]] = v12[v21[8]];
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v25 = a3[6];
  v26 = a1 + v25;
  v27 = (uint64_t *)((char *)a2 + v25);
  v28 = *v27;
  LOBYTE(v27) = *((_BYTE *)v27 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = (_BYTE)v27;
  sub_1000B15F8(v29, v30);
  v31 = a3[7];
  v32 = a1 + v31;
  v33 = (uint64_t)a2 + v31;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  v34 = *(_QWORD *)(v32 + 16);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  swift_release(v34);
  return a1;
}

void sub_100458F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_10009E50C();
  sub_1000BA294(&qword_100BE2488);
  sub_100088FF0();
  if (v5)
  {
    v6 = sub_1000CFCD0();
    sub_1000B250C(v6, v7, v8);
  }
  else
  {
    sub_1000C016C(*(_QWORD *)(v3 + *(int *)(a3 + 28) + 16));
    sub_100079F70();
  }
}

void sub_100458FA8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000BA294(&qword_100BE2488);
  sub_10009D2E8();
  if (v7)
  {
    sub_100098D08();
    sub_1000987C4(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = a2;
    sub_100079F70();
  }
}

void sub_10045900C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1009A00D0;
  sub_100158B48(319, (unint64_t *)&unk_100BE24F8, type metadata accessor for LocationComponentHeaderMetrics);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1009A00D0;
    v4[3] = &unk_1009A0CD8;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t *sub_10045909C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v8 = (char *)&loc_10045912C + 4 * byte_10099FBE7[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload(a1, v7, 0);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)v12;
    v14 = v12[8];
    sub_10008D47C(*(_QWORD *)v12, v14);
    *(_QWORD *)v11 = v13;
    v11[8] = v14;
    v15 = *(int *)(a3 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  }
  swift_retain();
  return a1;
}

double sub_100459434(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload(a1))
    {
      case 0u:
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 3u:
        v4 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release(*a1);
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)), *((_BYTE *)a1 + *(int *)(a2 + 20) + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 16)).n128_u64[0];
  return result;
}

_QWORD *sub_10045959C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    v7 = (char *)&loc_100459620 + 4 * byte_10099FBF1[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  *a1 = *a2;
  swift_retain();
  swift_storeEnumTagMultiPayload(a1, v6, 0);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  sub_10008D47C(*(_QWORD *)v10, v12);
  *(_QWORD *)v9 = v11;
  v9[8] = v12;
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  swift_retain();
  return a1;
}

_QWORD *sub_10045990C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BE21F0);
    v6 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      v7 = (char *)&loc_1004599A8 + 4 * byte_10099FBF6[swift_getEnumCaseMultiPayload(a2)];
      __asm { BR              X10 }
    }
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload(a1, v6, 0);
  }
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  sub_10008D47C(*(_QWORD *)v10, v12);
  v13 = *(_QWORD *)v9;
  v14 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = v12;
  sub_1000B15F8(v13, v14);
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  v18 = v16[2];
  v16[2] = v17[2];
  swift_retain();
  swift_release(v18);
  return a1;
}

_BYTE *sub_100459D5C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;

  v6 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 3)
    {
      v8 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      v10 = *(int *)(v9 + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v13;
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
      a1[*(int *)(v9 + 24)] = a2[*(int *)(v9 + 24)];
      swift_storeEnumTagMultiPayload(a1, v7, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v14 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(_QWORD *)&a1[v14[5]] = *(_QWORD *)&a2[v14[5]];
    *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
    v15 = v14[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    a1[v14[8]] = a2[v14[8]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v18 = *(int *)(a3 + 20);
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  return a1;
}

_BYTE *sub_100459EFC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100BE21F0);
    v6 = sub_1000BA294(&qword_100BE21F0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for LocationComponentHeaderViewModel(0);
      if (swift_getEnumCaseMultiPayload(a2) == 3)
      {
        v8 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        v10 = *(int *)(v9 + 20);
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = *((_OWORD *)v12 + 1);
        *(_OWORD *)v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v13;
        *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
        *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
        a1[*(int *)(v9 + 24)] = a2[*(int *)(v9 + 24)];
        swift_storeEnumTagMultiPayload(a1, v7, 3);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      v14 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(_QWORD *)&a1[v14[5]] = *(_QWORD *)&a2[v14[5]];
      *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
      v15 = v14[7];
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      v16[8] = v17[8];
      a1[v14[8]] = a2[v14[8]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v18 = *(int *)(a3 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)v20;
  LOBYTE(v20) = v20[8];
  v22 = *(_QWORD *)v19;
  v23 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = (char)v20;
  sub_1000B15F8(v22, v23);
  v24 = *(int *)(a3 + 24);
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v27 = *((_QWORD *)v25 + 2);
  *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
  swift_release(v27);
  return a1;
}

void sub_10045A0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000BA294(&qword_100BE2488);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1000B250C(a1, a2, v6);
  }
  else
  {
    sub_1000C016C(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 16));
    sub_100079F70();
  }
}

void sub_10045A130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_10009E50C();
  sub_1000BA294(&qword_100BE2488);
  sub_10009D2E8();
  if (v7)
  {
    sub_100098D08();
    sub_1000987C4(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 24) + 16) = v4;
    sub_100079F70();
  }
}

void sub_10045A18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10045A198(a1, a2, a3, (uint64_t)&unk_1009A0CD8);
}

void sub_10045A198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_100158B48(319, (unint64_t *)&unk_100BE24F8, type metadata accessor for LocationComponentHeaderMetrics);
  if (v7 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v6 - 8) + 64;
    v8[1] = &unk_1009A00D0;
    v8[2] = a4;
    swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
  }
}

void sub_10045A220(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a2;
  v8 = *((_BYTE *)a2 + 8);
  a4(*a2, v8);
  v9 = *a1;
  v10 = *((unsigned __int8 *)a1 + 8);
  *a1 = v7;
  *((_BYTE *)a1 + 8) = v8;
  a5(v9, v10);
  sub_100079F70();
}

unint64_t sub_10045A270()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3880;
  if (!qword_100BE3880)
  {
    v1 = sub_100075EB0(&qword_100BE2878);
    sub_10007AB60((uint64_t)&unk_100BE3888);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3880);
  }
  return result;
}

unint64_t sub_10045A2F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3890;
  if (!qword_100BE3890)
  {
    v1 = sub_100075EB0(&qword_100BE28D8);
    sub_10045A37C();
    sub_10007AB60((uint64_t)&unk_100BE38C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3890);
  }
  return result;
}

unint64_t sub_10045A37C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3898;
  if (!qword_100BE3898)
  {
    v1 = sub_100075EB0(&qword_100BE2890);
    sub_10045A400();
    sub_10007AB60((uint64_t)&unk_100BE38B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3898);
  }
  return result;
}

unint64_t sub_10045A400()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_100BE38A0;
  if (!qword_100BE38A0)
  {
    v1 = sub_100075EB0(&qword_100BE2888);
    v2 = sub_100075EB0(&qword_100BE28A0);
    sub_10007AB60((uint64_t)&unk_100BE28A8);
    v4[0] = v2;
    v4[1] = &type metadata for RowModifier.RowGeometry;
    v4[2] = v3;
    v4[3] = sub_1004504D8();
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_10007AB60((uint64_t)&unk_100BE38A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE38A0);
  }
  return result;
}

unint64_t sub_10045A4E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE38D8;
  if (!qword_100BE38D8)
  {
    v1 = sub_100075EB0(&qword_100BE38E0);
    sub_10045118C();
    sub_100453B68();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE38D8);
  }
  return result;
}

unint64_t sub_10045A554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE38E8;
  if (!qword_100BE38E8)
  {
    v1 = sub_100075EB0(&qword_100BE3358);
    sub_10007AB60((uint64_t)&unk_100BE38F0);
    sub_10007AB60((uint64_t)&unk_100BE38F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE38E8);
  }
  return result;
}

unint64_t sub_10045A5F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3908;
  if (!qword_100BE3908)
  {
    v1 = sub_100075EB0(&qword_100BE3368);
    sub_10007AB60((uint64_t)&unk_100BE3910);
    sub_10007AB60((uint64_t)&unk_100BE3918);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3908);
  }
  return result;
}

unint64_t sub_10045A694()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3928;
  if (!qword_100BE3928)
  {
    v1 = sub_100075EB0(&qword_100BE3378);
    sub_10007AB60((uint64_t)&unk_100BE3930);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3928);
  }
  return result;
}

unint64_t sub_10045A718()
{
  return sub_10045016C((uint64_t)&unk_100BE3938);
}

unint64_t sub_10045A74C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3948;
  if (!qword_100BE3948)
  {
    v1 = sub_100075EB0(&qword_100BE3950);
    sub_100455D54();
    sub_100455F04();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3948);
  }
  return result;
}

unint64_t sub_10045A7BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3958;
  if (!qword_100BE3958)
  {
    v1 = sub_100075EB0(&qword_100BE34E0);
    sub_10007AB60((uint64_t)&unk_100BE3960);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3958);
  }
  return result;
}

uint64_t sub_10045A840(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5278, 1);
}

uint64_t sub_10045A850(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5228, 1);
}

uint64_t sub_10045A860(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB51D8, 1);
}

uint64_t sub_10045A870(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB51B0, 1);
}

void sub_10045A884(CGFloat *a1@<X8>)
{
  uint64_t v1;

  sub_10043DF48(v1 + 16, a1);
}

double sub_10045A890(_OWORD *a1)
{
  uint64_t v1;

  return sub_10043E134(a1, (const void *)(v1 + 16));
}

uint64_t sub_10045A898(uint64_t a1)
{
  sub_10008D47C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_retain();
  return a1;
}

uint64_t sub_10045A8D0()
{
  return sub_10045A8D8(152);
}

uint64_t sub_10045A8D8(uint64_t a1)
{
  uint64_t v1;

  sub_1000B15F8(*(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  swift_release(*(_QWORD *)(v1 + 96));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10045A914()
{
  uint64_t v0;

  return sub_10043E1B4(v0 + 16, (_OWORD *)(v0 + 104));
}

uint64_t sub_10045A920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10008900C();
  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeaderModifier(0) - 8) + 80);
  v2 = sub_1000BA294(&qword_100BE21F0);
  if (sub_100098814(v2) == 1)
  {
    v3 = sub_1000C21DC();
    switch(sub_100098814(v3))
    {
      case 0u:
      case 4u:
        sub_10009BF48();
        sub_1000D9DD0();
        goto LABEL_8;
      case 1u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        goto LABEL_8;
      case 2u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        sub_100094FD4();
        sub_1000F3E40();
        goto LABEL_8;
      case 3u:
        v4 = sub_1000D12B0();
        sub_1000987E0(v4);
        sub_1000D09EC();
        sub_1000C48E0();
        sub_10045B790();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    sub_1000B4394();
  }
  sub_10009E91C();
  v6 = v5 + 8;
  sub_10045B6AC();
  return sub_1000B4380(v0, v6, v1 | 7);
}

void sub_10045AA38()
{
  uint64_t v0;
  double *v1;
  double v2;
  double v3;
  double v4;

  v0 = sub_1000F422C();
  type metadata accessor for HeaderModifier(v0);
  sub_10045B738();
  sub_10045B934();
  sub_10043D4E0(v1, v2, v3, v4);
}

uint64_t sub_10045AA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008900C();
  type metadata accessor for HeaderModifier(0);
  sub_10045B770();
  v0 = sub_1000BA294(&qword_100BE21F0);
  if (sub_100098814(v0) == 1)
  {
    v1 = sub_1000C21DC();
    switch(sub_100098814(v1))
    {
      case 0u:
      case 4u:
        sub_10009BF48();
        sub_1000D9DD0();
        goto LABEL_8;
      case 1u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        goto LABEL_8;
      case 2u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        sub_100094FD4();
        sub_1000F3E40();
        goto LABEL_8;
      case 3u:
        v2 = sub_1000D12B0();
        sub_1000987E0(v2);
        sub_1000D09EC();
        sub_1000C48E0();
        sub_10045B790();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    sub_1000B4394();
  }
  sub_10045B6AC();
  v3 = sub_10009E954();
  return sub_1000B4380(v3, v4, v5);
}

uint64_t sub_10045AB74(uint64_t a1)
{
  return sub_10045AD9C(a1, type metadata accessor for HeaderModifier, (uint64_t (*)(uint64_t))sub_10043D6BC);
}

uint64_t sub_10045AB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008900C();
  sub_10009C0F8();
  v0 = sub_1000BA294(&qword_100BE21F0);
  if (sub_100098814(v0) == 1)
  {
    v1 = sub_1000C21DC();
    switch(sub_100098814(v1))
    {
      case 0u:
      case 4u:
        goto LABEL_7;
      case 1u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        goto LABEL_8;
      case 2u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        sub_100094FD4();
        sub_1000F3E40();
        goto LABEL_8;
      case 3u:
        v2 = sub_1000D12B0();
        sub_1000987E0(v2);
        sub_1000D09EC();
LABEL_7:
        sub_10009BF48();
        sub_1000D9DD0();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    sub_1000B4394();
  }
  sub_10009E91C();
  sub_10045B680();
  v3 = sub_1000B3B9C();
  return sub_1000B4380(v3, v4, v5);
}

void sub_10045AC68()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  double v3;
  double v4;

  v0 = sub_1000F422C();
  type metadata accessor for PinningHeaderModifier(v0);
  sub_10045B738();
  sub_10045B934();
  sub_10043D72C(v1, v2, v3, v4);
}

uint64_t sub_10045ACB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10008900C();
  sub_10009C0F8();
  v0 = sub_1000BA294(&qword_100BE21F0);
  if (sub_100098814(v0) == 1)
  {
    v1 = sub_1000C21DC();
    switch(sub_100098814(v1))
    {
      case 0u:
      case 4u:
        goto LABEL_7;
      case 1u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        goto LABEL_8;
      case 2u:
        sub_10009BF48();
        sub_1000D9DD0();
        sub_1000DA994();
        sub_1001102A8();
        sub_100094FD4();
        sub_1000F3E40();
        goto LABEL_8;
      case 3u:
        v2 = sub_1000D12B0();
        sub_1000987E0(v2);
        sub_1000D09EC();
LABEL_7:
        sub_10009BF48();
        sub_1000D9DD0();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    sub_1000B4394();
  }
  sub_10045B680();
  v3 = sub_1000BD3C8();
  return sub_1000B4380(v3, v4, v5);
}

uint64_t sub_10045AD88(uint64_t a1)
{
  return sub_10045AD9C(a1, type metadata accessor for PinningHeaderModifier, (uint64_t (*)(uint64_t))sub_10043D8B4);
}

uint64_t sub_10045AD9C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  sub_10045B958(a1, a2);
  v3 = sub_10009DACC();
  return a3(v3);
}

uint64_t getEnumTagSinglePayload for CircleMask(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircleMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

unint64_t sub_10045AE64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3B08;
  if (!qword_100BE3B08)
  {
    v1 = sub_100075EB0(&qword_100BE3998);
    sub_100155DC0();
    sub_10007AB60((uint64_t)&unk_100BE3B58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3B08);
  }
  return result;
}

unint64_t sub_10045AEE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3B28;
  if (!qword_100BE3B28)
  {
    v1 = sub_100075EB0(&qword_100BE3968);
    sub_10007AB60((uint64_t)&unk_100BE3B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3B28);
  }
  return result;
}

unint64_t sub_10045AF70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3B68;
  if (!qword_100BE3B68)
  {
    v1 = sub_100075EB0(&qword_100BE39C0);
    sub_1001564A0();
    sub_10007AB60((uint64_t)&unk_100BE3B88);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3B68);
  }
  return result;
}

unint64_t sub_10045AFF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3B78;
  if (!qword_100BE3B78)
  {
    v1 = sub_100075EB0(&qword_100BE39A0);
    sub_10007AB60((uint64_t)&unk_100BE3B80);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3B78);
  }
  return result;
}

unint64_t sub_10045B07C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3B98;
  if (!qword_100BE3B98)
  {
    v1 = sub_100075EB0(&qword_100BE39C8);
    sub_10007AB60((uint64_t)&unk_100BE3BA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3B98);
  }
  return result;
}

unint64_t sub_10045B104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3BA8;
  if (!qword_100BE3BA8)
  {
    v1 = sub_100075EB0(&qword_100BE3BB0);
    sub_10007AB60((uint64_t)&unk_100BE39E0);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3BA8);
  }
  return result;
}

unint64_t sub_10045B1A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3BB8;
  if (!qword_100BE3BB8)
  {
    v1 = sub_100075EB0(&qword_100BE3BC0);
    sub_100154EC0();
    sub_100154974();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3BB8);
  }
  return result;
}

unint64_t sub_10045B214()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3BC8;
  if (!qword_100BE3BC8)
  {
    v1 = sub_100075EB0(&qword_100BE3AD0);
    sub_10045B280();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3BC8);
  }
  return result;
}

unint64_t sub_10045B280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3BD0;
  if (!qword_100BE3BD0)
  {
    v1 = sub_100075EB0(&qword_100BE3AC8);
    sub_10007AB60((uint64_t)&unk_100BE3BD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3BD0);
  }
  return result;
}

unint64_t sub_10045B308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3BE0;
  if (!qword_100BE3BE0)
  {
    v1 = sub_100075EB0(&qword_100BE3B00);
    sub_1001566A0();
    sub_10007AB60((uint64_t)&unk_100BE3C00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3BE0);
  }
  return result;
}

unint64_t sub_10045B38C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE3BF0;
  if (!qword_100BE3BF0)
  {
    v1 = sub_100075EB0(&qword_100BE3AE0);
    sub_10007AB60((uint64_t)&unk_100BE3BF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE3BF0);
  }
  return result;
}

unint64_t sub_10045B410()
{
  return sub_10045016C((uint64_t)&unk_100BE3C10);
}

unint64_t sub_10045B444()
{
  unint64_t result;

  result = qword_100BE3C20;
  if (!qword_100BE3C20)
  {
    result = swift_getWitnessTable(&unk_1009D08E8, &type metadata for ComponentHeaderGradient);
    atomic_store(result, (unint64_t *)&qword_100BE3C20);
  }
  return result;
}

void sub_10045B480()
{
  sub_10007AB60((uint64_t)&unk_100BE3C28);
}

unint64_t sub_10045B4B0()
{
  unint64_t result;

  result = qword_100BE3C38;
  if (!qword_100BE3C38)
  {
    result = swift_getWitnessTable(&unk_1009A1068, &type metadata for CircleMask);
    atomic_store(result, (unint64_t *)&qword_100BE3C38);
  }
  return result;
}

unint64_t sub_10045B4F0()
{
  unint64_t result;

  result = qword_100BE3C40;
  if (!qword_100BE3C40)
  {
    result = swift_getWitnessTable(&unk_1009A1018, &type metadata for CircleMask);
    atomic_store(result, (unint64_t *)&qword_100BE3C40);
  }
  return result;
}

unint64_t sub_10045B52C()
{
  unint64_t result;

  result = qword_100BE3C48[0];
  if (!qword_100BE3C48[0])
  {
    result = swift_getWitnessTable(&unk_1009A10B8, &type metadata for CircleMask);
    atomic_store(result, qword_100BE3C48);
  }
  return result;
}

uint64_t sub_10045B5DC(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10042E3B8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

double sub_10045B5F8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152)).n128_u64[0];
  return result;
}

double sub_10045B600()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136)).n128_u64[0];
  return result;
}

uint64_t sub_10045B608()
{
  uint64_t v0;
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v0, v1);
}

uint64_t sub_10045B614()
{
  return type metadata accessor for MapComponentViewModel(0);
}

uint64_t sub_10045B61C()
{
  return type metadata accessor for SunriseSunsetViewModel(0);
}

uint64_t sub_10045B624()
{
  return swift_task_switch();
}

double sub_10045B638@<D0>(_QWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*a1).n128_u64[0];
  return result;
}

uint64_t sub_10045B640(uint64_t a1)
{
  uint64_t v1;

  return swift_storeEnumTagMultiPayload(v1, a1, 0);
}

uint64_t sub_10045B650(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

double sub_10045B66C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88)).n128_u64[0];
  return result;
}

uint64_t sub_10045B674@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + a1 + 24));
}

double sub_10045B680()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  sub_1000B15F8(*(_QWORD *)(v1 + *(int *)(v0 + 24)), *(_BYTE *)(v1 + *(int *)(v0 + 24) + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v1 + *(int *)(v0 + 28) + 16)).n128_u64[0];
  return result;
}

double sub_10045B6AC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  sub_1000B15F8(*(_QWORD *)(v1 + *(int *)(v0 + 20)), *(_BYTE *)(v1 + *(int *)(v0 + 20) + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v1 + *(int *)(v0 + 24) + 16)).n128_u64[0];
  return result;
}

double sub_10045B6D8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64)).n128_u64[0];
  return result;
}

double sub_10045B6E0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32)).n128_u64[0];
  return result;
}

uint64_t sub_10045B6E8()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(int *)(v1 + 36) + 8);
}

double sub_10045B6F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;

  return sub_100121E04(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_10045B700(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_10045B758()
{
  uint64_t v0;
  uint64_t v1;

  return swift_unknownObjectRelease(*(_QWORD *)(v1 + *(int *)(v0 + 28)));
}

double sub_10045B790()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_10045B7A4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

double sub_10045B7B8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136)).n128_u64[0];
  return result;
}

double sub_10045B7C0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120)).n128_u64[0];
  return result;
}

uint64_t sub_10045B7C8(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

double sub_10045B7DC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104)).n128_u64[0];
  return result;
}

uint64_t sub_10045B7E4()
{
  uint64_t v0;
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v0, v1);
}

uint64_t sub_10045B7F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 16) & ~v2);
}

uint64_t sub_10045B80C()
{
  return type metadata accessor for LocationComponentContainerView(0);
}

uint64_t sub_10045B814()
{
  return sub_10045A8D8(104);
}

double sub_10045B81C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192)).n128_u64[0];
  return result;
}

uint64_t sub_10045B824(uint64_t a1)
{
  uint64_t v1;

  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10045B834()
{
  return 0;
}

double sub_10045B84C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56)).n128_u64[0];
  return result;
}

uint64_t sub_10045B854()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10045B864()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10045B874()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10045B884(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v1, a1);
}

uint64_t sub_10045B894()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10045B8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

double sub_10045B8B4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192)).n128_u64[0];
  return result;
}

uint64_t sub_10045B8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  return State.init(wrappedValue:)(va, a2);
}

uint64_t sub_10045B8C8(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v1, a1);
}

uint64_t sub_10045B8E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1 + a1, v3);
}

uint64_t sub_10045B8F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2 + a1, v3);
}

double sub_10045B900()
{
  double v0;

  return v0;
}

uint64_t sub_10045B914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

double sub_10045B920()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88)).n128_u64[0];
  return result;
}

uint64_t sub_10045B928()
{
  return type metadata accessor for LocationComponentContainerContentView(0);
}

uint64_t sub_10045B934()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10045B940()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10045B958(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

void sub_10045B964(char *a1)
{
  sub_1001B8D08(*a1);
}

void sub_10045B970(char *a1)
{
  sub_100155794(*a1);
}

double sub_10045B97C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104)).n128_u64[0];
  return result;
}

uint64_t sub_10045B984()
{
  return sub_100054B48();
}

uint64_t sub_10045B990()
{
  return sub_1001557DC();
}

uint64_t sub_10045B99C()
{
  return EnvironmentValues.tintColor.getter();
}

double sub_10045B9A8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72)).n128_u64[0];
  return result;
}

uint64_t sub_10045B9B0(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_100094D04((_QWORD *)a1, a2);
LABEL_8:
  v7 = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  return a1;
}

uint64_t sub_10045BA58(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 24))
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t sub_10045BAAC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10045BAEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t *sub_10045BB3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v19;
  char *v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v10 = a2[4];
    v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    v12 = a2[6];
    v11 = a2[7];
    a1[6] = v12;
    a1[7] = v11;
    v13 = a2[8];
    v14 = *(int *)(a3 + 36);
    v19 = (char *)a2 + v14;
    v20 = (char *)a1 + v14;
    a1[8] = v13;
    v15 = type metadata accessor for WeatherAlert.Prominence(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    v16(v20, v19, v15);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t sub_10045BC44(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  v4 = (char *)a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for WeatherAlert.Prominence(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_10045BCAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v17;
  char *v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v9 = a2[4];
  v8 = a2[5];
  a1[4] = v9;
  a1[5] = v8;
  v11 = a2[6];
  v10 = a2[7];
  a1[6] = v11;
  a1[7] = v10;
  v12 = a2[8];
  v13 = *(int *)(a3 + 36);
  v17 = (char *)a2 + v13;
  v18 = (char *)a1 + v13;
  a1[8] = v12;
  v14 = type metadata accessor for WeatherAlert.Prominence(0);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  v15(v18, v17, v14);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

_QWORD *sub_10045BD88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[5] = a2[5];
  v12 = a2[6];
  v13 = a1[6];
  a1[6] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[7] = a2[7];
  v14 = a2[8];
  v15 = a1[8];
  a1[8] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = *(int *)(a3 + 36);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_10045BE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

_QWORD *sub_10045BF20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRelease(v10);
  v11 = a2[6];
  v12 = a1[6];
  a1[5] = a2[5];
  a1[6] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = a2[8];
  v14 = a1[8];
  a1[7] = a2[7];
  a1[8] = v13;
  swift_bridgeObjectRelease(v14);
  v15 = *(int *)(a3 + 36);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for WeatherAlert.Prominence(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_10045BFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10045BFEC);
}

void sub_10045BFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_100079F70();
  }
  else
  {
    v6 = type metadata accessor for WeatherAlert.Prominence(0);
    _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t sub_10045C058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10045C064);
}

uint64_t sub_10045C064(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for WeatherAlert.Prominence(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10045C0D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SevereAlertComponentViewModel(0) + 40));
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v3 <= a1)
  {
    sub_1000BABFC(0xD00000000000001ALL, 0x8000000100A02D50, v5, v6, v7, v8, v9, 0xD00000000000005FLL);
    sub_1000C29D4();
    v12 = sub_1000BA294(&qword_100BC3C38);
    v11 = swift_allocObject(v12, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v11 + 56) = &type metadata for Int;
    *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v11 + 32) = a1;
  }
  else
  {
    sub_1000BABFC(0xD000000000000023, 0x8000000100A02DD0, v5, v6, v7, v8, v9, 0xD00000000000007DLL);
    sub_1000C29D4();
    v10 = sub_1000BA294(&qword_100BC3C38);
    v11 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v11 + 16) = xmmword_10097DA20;
    *(_QWORD *)(v11 + 56) = &type metadata for Int;
    *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v11 + 32) = a1;
    *(_QWORD *)(v11 + 96) = &type metadata for Int;
    *(_QWORD *)(v11 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v11 + 72) = v3;
  }
  v13 = static String.localizedStringWithFormat(_:_:)(0xD00000000000001ALL, v1, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

void sub_10045C270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  if (v4 != *(_QWORD *)a2 || v5 != v6)
  {
    sub_100099264(v4, v5, *(_QWORD *)a2, v6);
    sub_10007A150();
    if ((v8 & 1) == 0)
      goto LABEL_31;
  }
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a2 + 24);
  if (v9)
  {
    if (!v10)
      goto LABEL_31;
    v11 = *(_QWORD *)(a1 + 16);
    v12 = *(_QWORD *)(a2 + 16);
    if (v11 != v12 || v9 != v10)
    {
      sub_100099264(v11, v9, v12, v10);
      sub_10007A150();
      if ((v14 & 1) == 0)
        goto LABEL_31;
    }
  }
  else if (v10)
  {
    goto LABEL_31;
  }
  sub_10009B4AC(*(_QWORD **)(a1 + 32), *(_QWORD **)(a2 + 32));
  if ((v15 & 1) != 0)
  {
    v16 = *(_QWORD *)(a1 + 40);
    v17 = *(_QWORD *)(a1 + 48);
    v18 = *(_QWORD *)(a2 + 40);
    v19 = *(_QWORD *)(a2 + 48);
    v20 = v16 == v18 && v17 == v19;
    if (v20 || (sub_100099264(v16, v17, v18, v19), sub_10007A150(), (v21 & 1) != 0))
    {
      v22 = *(_QWORD *)(a1 + 64);
      v23 = *(_QWORD *)(a2 + 64);
      if (v22)
      {
        if (!v23)
          goto LABEL_31;
        v24 = *(_QWORD *)(a1 + 56);
        v25 = *(_QWORD *)(a2 + 56);
        if (v24 != v25 || v22 != v23)
        {
          sub_100099264(v24, v22, v25, v23);
          sub_10007A150();
          if ((v27 & 1) == 0)
            goto LABEL_31;
        }
      }
      else if (v23)
      {
        goto LABEL_31;
      }
      v28 = type metadata accessor for SevereAlertComponentViewModel(0);
      static WeatherAlert.Prominence.== infix(_:_:)(a1 + *(int *)(v28 + 36), a2 + *(int *)(v28 + 36));
    }
  }
LABEL_31:
  sub_100079F70();
}

uint64_t sub_10045C394@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  uint64_t v42;
  double (*v43)(uint64_t *, uint64_t, uint64_t);
  void (*v44)(char *, uint64_t, __n128);
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  void (*v49)(char *);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a1;
  v57 = a4;
  v6 = type metadata accessor for WeatherFormatPlaceholder(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v52 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    v13 = sub_10045C668(a2);
  else
    v13 = sub_10045CB14(a2);
  v54 = v14;
  v55 = v13;
  v15 = sub_1000BA294(&qword_100BCE380);
  v16 = type metadata accessor for WeatherDescription.Argument(0);
  v17 = *(_QWORD *)(v16 - 8);
  v50 = *(_QWORD *)(v17 + 72);
  v51 = v16;
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v15, v19 + 2 * v50, v18 | 7);
  v53 = v20;
  *(_OWORD *)(v20 + 16) = xmmword_10097DA20;
  v21 = (uint64_t *)(v20 + v19);
  static WeatherFormatStyle<>.weather.getter(v20);
  v48 = enum case for WeatherFormatPlaceholder.none(_:);
  v49 = *(void (**)(char *))(v7 + 104);
  v49(v9);
  v47 = type metadata accessor for UnitManager(0);
  v22 = v6;
  v23 = static UnitManager.standard.getter(v47);
  v24 = sub_1000BA294(&qword_100BC4E68);
  v46 = v24;
  v45 = sub_1000A9A78();
  v25 = Measurement.formatted<A>(_:placeholder:unitManager:)(v12, v9, v23, &protocol witness table for UnitManager, v24, v10, v45);
  v27 = v26;
  v28 = swift_release(v23);
  v44 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
  v44(v9, v22, v28);
  v52 = *(_QWORD *)(v52 + 8);
  ((void (*)(char *, uint64_t))v52)(v12, v10);
  *v21 = v25;
  v21[1] = v27;
  v29 = enum case for WeatherDescription.Argument.measurement(_:);
  v43 = *(double (**)(uint64_t *, uint64_t, uint64_t))(v17 + 104);
  v30 = v51;
  v31 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v43)(v21, enum case for WeatherDescription.Argument.measurement(_:), v51);
  v32 = (uint64_t *)((char *)v21 + v50);
  static WeatherFormatStyle<>.weather.getter(v31);
  v33 = v22;
  v34 = ((uint64_t (*)(char *, _QWORD, uint64_t))v49)(v9, v48, v22);
  v35 = static UnitManager.standard.getter(v34);
  v36 = Measurement.formatted<A>(_:placeholder:unitManager:)(v12, v9, v35, &protocol witness table for UnitManager, v46, v10, v45);
  v38 = v37;
  v39 = swift_release(v35);
  v44(v9, v33, v39);
  ((void (*)(char *, uint64_t))v52)(v12, v10);
  *v32 = v36;
  v32[1] = v38;
  v40.n128_f64[0] = v43(v32, v29, v30);
  return WeatherDescription.init(format:_:)(v55, v54, v53, v40);
}

uint64_t sub_10045C668(uint64_t a1)
{
  objc_class *v1;
  uint64_t v2;
  unint64_t v3;
  const char *v4;
  const char *v5;
  unint64_t v6;
  NSBundle v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t countAndFlagsBits;
  unint64_t v12;

  switch(a1)
  {
    case 1:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x100000000000012ELL;
      v3 = 0xD00000000000007CLL;
      v12 = 0x8000000100A044B0;
      v4 = "For January, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 2:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0x8000000100A042E0;
      v5 = "For February, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gre"
           "gorian calendar.";
      goto LABEL_14;
    case 3:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x100000000000013CLL;
      v3 = 0xD00000000000007ALL;
      v12 = 0x8000000100A04120;
      v4 = "For March, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 4:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x100000000000013CLL;
      v3 = 0xD00000000000007ALL;
      v12 = 0x8000000100A03F60;
      v4 = "For April, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 5:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x1000000000000138;
      v3 = 0xD000000000000078;
      v12 = 0x8000000100A03DA0;
      v4 = "For May, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 6:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x100000000000013ALL;
      v3 = 0xD000000000000079;
      v12 = 0x8000000100A03BE0;
      v4 = "For June, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 7:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x100000000000013ALL;
      v3 = 0xD000000000000079;
      v12 = 0x8000000100A03A20;
      v4 = "For July, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 8:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x100000000000013ELL;
      v3 = 0xD00000000000007BLL;
      v12 = 0x8000000100A03860;
      v4 = "For August, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 9:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x1000000000000144;
      v3 = 0xD00000000000007ELL;
      v12 = 0x8000000100A03690;
      v4 = "For September, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gr"
           "egorian calendar.";
      goto LABEL_16;
    case 10:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x1000000000000140;
      v3 = 0xD00000000000007CLL;
      v12 = 0x8000000100A034C0;
      v4 = "For October, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gregorian calendar.";
      goto LABEL_16;
    case 11:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0x8000000100A032F0;
      v5 = "For November, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gre"
           "gorian calendar.";
      goto LABEL_14;
    case 12:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0x8000000100A03120;
      v5 = "For December, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the Gre"
           "gorian calendar.";
LABEL_14:
      v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      v3 = 0xD00000000000007DLL;
      v7.super.isa = v1;
      v8 = 0;
      v9 = 0xE000000000000000;
      v2 = 0x1000000000000142;
      break;
    default:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x1000000000000191;
      v3 = 0xD00000000000007FLL;
      v12 = 0x8000000100A02F00;
      v4 = "For this month, the average daily low is %1$@, and the average daily high is %2$@. Monthly averages use the G"
           "regorian calendar.";
LABEL_16:
      v6 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      v7.super.isa = v1;
      v8 = 0;
      v9 = 0xE000000000000000;
      break;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v7, *(Swift::String *)&v8, *(Swift::String *)&v2)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10045CB14(uint64_t a1)
{
  objc_class *v1;
  uint64_t v2;
  unint64_t v3;
  const char *v4;
  const char *v5;
  unint64_t v6;
  NSBundle v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t countAndFlagsBits;
  unint64_t v12;

  switch(a1)
  {
    case 1:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000ACLL;
      v3 = 0xD00000000000004FLL;
      v12 = 0x8000000100A052E0;
      v4 = "For January, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 2:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0x8000000100A051E0;
      v5 = "For February, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_14;
    case 3:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000A8;
      v3 = 0xD00000000000004DLL;
      v12 = 0x8000000100A050D0;
      v4 = "For March, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 4:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000A8;
      v3 = 0xD00000000000004DLL;
      v12 = 0x8000000100A04FD0;
      v4 = "For April, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 5:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000A4;
      v3 = 0xD00000000000004BLL;
      v12 = 0x8000000100A04ED0;
      v4 = "For May, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 6:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000A6;
      v3 = 0xD00000000000004CLL;
      v12 = 0x8000000100A04DD0;
      v4 = "For June, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 7:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000A6;
      v3 = 0xD00000000000004CLL;
      v12 = 0x8000000100A04CD0;
      v4 = "For July, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 8:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000AALL;
      v3 = 0xD00000000000004ELL;
      v12 = 0x8000000100A04BD0;
      v4 = "For August, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 9:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000B0;
      v3 = 0xD000000000000051;
      v12 = 0x8000000100A04AC0;
      v4 = "For September, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 10:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000ACLL;
      v3 = 0xD00000000000004FLL;
      v12 = 0x8000000100A049B0;
      v4 = "For October, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_16;
    case 11:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0x8000000100A048B0;
      v5 = "For November, the average daily low is %1$@, and the average daily high is %2$@.";
      goto LABEL_14;
    case 12:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0x8000000100A047A0;
      v5 = "For December, the average daily low is %1$@, and the average daily high is %2$@.";
LABEL_14:
      v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      v3 = 0xD000000000000050;
      v7.super.isa = v1;
      v8 = 0;
      v9 = 0xE000000000000000;
      v2 = 0x10000000000000AELL;
      break;
    default:
      v1 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v2 = 0x10000000000000FDLL;
      v3 = 0xD000000000000052;
      v12 = 0x8000000100A04640;
      v4 = "For this month, the average daily low is %1$@, and the average daily high is %2$@.";
LABEL_16:
      v6 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      v7.super.isa = v1;
      v8 = 0;
      v9 = 0xE000000000000000;
      break;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v7, *(Swift::String *)&v8, *(Swift::String *)&v2)._countAndFlagsBits;

  return countAndFlagsBits;
}

ValueMetadata *type metadata accessor for TemperatureMonthlyAveragesSummaryStringBuilder()
{
  return &type metadata for TemperatureMonthlyAveragesSummaryStringBuilder;
}

uint64_t sub_10045CFD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045DA24(a1, a2, a3, &qword_100BE3E50);
}

uint64_t sub_10045CFDC(uint64_t a1, uint64_t a2)
{
  return sub_10045DA84(a1, a2, &qword_100BE3E50);
}

void sub_10045CFE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10045E168();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_10045D00C()
{
  AttributeScopes.SwiftUIAttributes.foregroundColor.getter();
  __break(1u);
}

uint64_t sub_10045D024(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045DA24(a1, a2, a3, &qword_100BE3E58);
}

uint64_t sub_10045D030(uint64_t a1, uint64_t a2)
{
  return sub_10045DA84(a1, a2, &qword_100BE3E58);
}

void sub_10045D03C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10045E0CC();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_10045D060()
{
  AttributeScopes.FoundationAttributes.link.getter();
  __break(1u);
}

uint64_t sub_10045D078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for LocationsConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AppConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0[5];
  v10 = v0[6];
  sub_1000DB418(v0 + 2, v9);
  v11 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v9, v10);
  AppConfiguration.locationsConfiguration.getter(v11);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LocationsConfiguration.locationsOfInterestSupportURLiOS.getter(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_10045D184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_10009896C();
  sub_10009D5D4();
  __chkstk_darwin(v0);
  v1 = sub_1000BE9F0();
  type metadata accessor for String.LocalizationValue(v1);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000064, 0x8000000100A054E0);
  v6 = sub_10045D078();
  v7 = URL.absoluteString.getter(v6);
  v9 = v8;
  sub_1000E707C();
  sub_1000D960C(v5, 0, v7, v9);
  sub_10009D300();
}

void sub_10045D23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100098728();
  v4 = v3 - v2;
  v5 = sub_10009896C();
  sub_10009D5D4();
  __chkstk_darwin(v6);
  sub_10009883C();
  v9 = v7 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  type metadata accessor for String.LocalizationValue(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  String.LocalizationValue.init(stringLiteral:)(0x100000000000009DLL, 0x8000000100A05400);
  URL.init(string:)(0xD00000000000003FLL, 0x8000000100A054A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5) == 1)
  {
    __break(1u);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32);
    v17(v9, v4, v5);
    v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v12, v9, v5);
    v19 = URL.absoluteString.getter(v18);
    v21 = v20;
    sub_1000E707C();
    sub_1000D960C(v16, 0, v19, v21);
    sub_10009D300();
  }
}

void sub_10045D39C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  void (*v66)(_QWORD *, _QWORD);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void (*v91)(_QWORD *, _QWORD);
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  void (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t KeyPath;
  uint64_t v117;
  _QWORD v118[5];

  v98 = sub_1000BA294(&qword_100BDAE28);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v97 = v5;
  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v101 = v7;
  v8 = sub_10009876C();
  v103 = type metadata accessor for AttributeContainer(v8);
  v105 = *(_QWORD *)(v103 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v104 = v10;
  v11 = sub_10009876C();
  v96 = type metadata accessor for AttributedString.Runs.Run(v11, v12);
  v114 = *(_QWORD *)(v96 - 8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v102 = v14;
  sub_1000BA294(&qword_100BE3E18);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v115 = v16;
  v17 = sub_10009876C();
  v19 = type metadata accessor for AttributedString.Runs.Index(v17, v18);
  v112 = *(_QWORD *)(v19 - 8);
  v113 = v19;
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_1000986FC();
  v110 = v21;
  __chkstk_darwin(v22);
  v111 = (char *)&v94 - v23;
  v24 = sub_10009876C();
  v26 = type metadata accessor for AttributedString.Runs(v24, v25);
  v109 = *(_QWORD *)(v26 - 8);
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_100098728();
  v30 = v29 - v28;
  v31 = type metadata accessor for AttributedString(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  sub_100098728();
  v35 = v34 - v33;
  v95 = sub_1000BA294(&qword_100BE3E20);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_10009883C();
  v39 = v37 - v38;
  v41 = __chkstk_darwin(v40);
  v43 = (char *)&v94 - v42;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v32 + 16);
  v44(a2, a1, v31, v41);
  KeyPath = swift_getKeyPath(&unk_1009A12E8);
  v45 = swift_getKeyPath(&unk_1009A1318);
  v118[0] = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v46 = sub_10045DFC8();
  AttributedString.subscript.setter(v118, v45, v46);
  v99 = a2;
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v44)(v35, a2, v31);
  v48 = (uint64_t)v43;
  AttributedString.runs.getter(v47);
  v49 = v31;
  v50 = v96;
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v49);
  v51 = v109;
  v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16);
  v107(v39, v30, v26);
  v52 = sub_100051B90(&qword_100BE3E30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Runs, (uint64_t)&protocol conformance descriptor for AttributedString.Runs);
  v53 = v111;
  dispatch thunk of Collection.startIndex.getter(v26, v52);
  v54 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v108 = v30;
  v106 = v54;
  v54(v30, v26);
  v55 = v95;
  v56 = v112;
  (*(void (**)(uint64_t, char *, uint64_t))(v112 + 32))(v39 + *(int *)(v95 + 36), v53, v113);
  sub_10045E068(v39, v48);
  v57 = v48 + *(int *)(v55 + 36);
  v109 = *(_QWORD *)(v56 + 16);
  v100 = v52;
  while (1)
  {
    v58 = v111;
    v59 = v113;
    ((void (*)(char *, uint64_t, uint64_t))v109)(v111, v57, v113);
    v60 = v57;
    v61 = v110;
    dispatch thunk of Collection.endIndex.getter(v26, v52);
    v62 = sub_100051B90(&qword_100BE3E38, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Runs.Index);
    v63 = dispatch thunk of static Equatable.== infix(_:_:)(v58, v61, v59, v62);
    v64 = v48;
    v65 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
    v65(v61, v59);
    v65((uint64_t)v58, v59);
    if ((v63 & 1) != 0)
      break;
    v66 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v118, v60, v26, v52);
    v67 = v115;
    sub_1000992E4(v115, v68, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 16));
    v66(v118, 0);
    v69 = v108;
    v107(v108, v64, v26);
    dispatch thunk of Collection.formIndex(after:)(v60, v26, v52);
    v70 = v26;
    v106(v69, v26);
    sub_1000BA9D4(v67, 0);
    if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v50) == 1)
      goto LABEL_9;
    v57 = v60;
    v71 = v64;
    v72 = v114;
    v73 = v102;
    v74 = sub_1000992E4(v102, v115, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 32));
    v75 = v50;
    v76 = v104;
    AttributedString.Runs.Run.attributes.getter(v74);
    v77 = swift_getKeyPath(&unk_1009A1358);
    __chkstk_darwin(v77);
    sub_1000C29E0();
    v78 = swift_getKeyPath(&unk_1009A1388);
    v79 = sub_10045E0CC();
    v80 = v101;
    AttributeContainer.subscript.getter(v78, v79);
    v81 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v105 + 8))(v76, v103, v81);
    v82 = sub_10009896C();
    v83 = _s7Weather24LocationCompositionStateOwet_0(v80, 1, v82);
    v84 = sub_100021A68(v80, &qword_100BD4280);
    if (v83 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v75);
    }
    else
    {
      v85 = v57;
      v86 = v97;
      AttributedString.Runs.Run.range.getter(v84);
      v87 = swift_getKeyPath(&unk_1009A13C8);
      __chkstk_darwin(v87);
      sub_1000C29E0();
      v88 = swift_getKeyPath(&unk_1009A13F8);
      v117 = static Color.accentColor.getter();
      v89 = sub_100120924();
      v90 = v73;
      v91 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v118, v86, v98, v89);
      v92 = sub_10045E168();
      AttributedSubstring.subscript.setter(&v117, v88, v92);
      v91(v118, 0);
      v93 = v86;
      v57 = v85;
      sub_100021A68(v93, &qword_100BDAE28);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v90, v75);
    }
    v50 = v75;
    v48 = v71;
    v52 = v100;
    v26 = v70;
  }
  sub_1000BA9D4(v115, 1);
LABEL_9:
  sub_100021A68(v64, &qword_100BE3E20);
  sub_100098640();
}

uint64_t sub_10045DA18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045DA24(a1, a2, a3, &qword_100BE3E60);
}

uint64_t sub_10045DA24(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v7 = *a1;
  v8 = v4;
  v5 = sub_1000BA294(a4);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v8, &v7, v5, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_10045DA78(uint64_t a1, uint64_t a2)
{
  return sub_10045DA84(a1, a2, &qword_100BE3E60);
}

uint64_t sub_10045DA84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1000BA294(a3);
  return dispatch thunk of Hashable.hashValue.getter(v3, &protocol witness table for AnyKeyPath);
}

void sub_10045DAC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10045DFC8();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_10045DAE8()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

void sub_10045DB00(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *object;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *countAndFlagsBits;
  Swift::String v77;

  countAndFlagsBits = (char *)a2;
  v5 = type metadata accessor for AttributedString(0);
  v6 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  v74 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_1000986FC();
  v75 = v8;
  __chkstk_darwin(v9);
  object = (char *)&v61 - v10;
  v11 = sub_10009876C();
  type metadata accessor for HomeAndWorkRefinementInput(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v13 = sub_1000BE9F0();
  v14 = type metadata accessor for LocationOfInterest(v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_10009883C();
  v18 = v16 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - v20;
  v22 = type metadata accessor for Location(0);
  sub_10009D5D4();
  __chkstk_darwin(v23);
  sub_10009883C();
  v26 = v24 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v61 - v28;
  sub_10045DF2C(a1, v2);
  v30 = sub_1000BA294(&qword_100BC5FC0);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v30) == 1)
  {
    sub_10045DF70(v2);
    v31 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
    v32 = (uint64_t)countAndFlagsBits;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)countAndFlagsBits, 1, 1, v31);
    v33 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
    v34 = v32;
  }
  else
  {
    v70 = v26;
    v71 = v18;
    v35 = (uint64_t)object;
    v36 = v2 + *(int *)(v30 + 48);
    v65 = v3;
    v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v63 = v29;
    v67 = v22;
    sub_1000992E4((uint64_t)v29, v2, v62);
    v68 = v15;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
    v66 = v21;
    v64 = v14;
    v61 = v37;
    v37(v21, v36, v14);
    if (objc_msgSend((id)objc_opt_self(CNContactStore), "authorizationStatusForEntityType:", 0) == (id)3
      && (v38 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init"),
          v39 = objc_msgSend(v38, "w_meContact"),
          v39,
          v38,
          v39))
    {
      sub_10045D23C();
      LODWORD(v69) = 1;
    }
    else
    {
      sub_10045D184();
      LODWORD(v69) = 0;
    }
    v40 = v75;
    v41 = countAndFlagsBits;
    v42 = v70;
    v43 = v71;
    v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v77._object = (void *)0x8000000100A053D0;
    v45._countAndFlagsBits = 0x736C6961746544;
    v45._object = (void *)0xE700000000000000;
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    v77._countAndFlagsBits = 0xD00000000000002FLL;
    v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v77);
    countAndFlagsBits = (char *)v47._countAndFlagsBits;
    object = (char *)v47._object;

    v48 = v65;
    v49 = v42;
    v50 = (uint64_t)v63;
    v51 = v67;
    sub_1000992E4(v49, (uint64_t)v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16));
    v52 = v68;
    v53 = v43;
    v54 = v66;
    v55 = v64;
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v53, v66, v64);
    sub_10045D39C(v35, v40);
    v56 = v74;
    v57 = v35;
    v58 = v73;
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v57, v73);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v55);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v51);
    v59 = object;
    *(_QWORD *)v41 = countAndFlagsBits;
    *((_QWORD *)v41 + 1) = v59;
    v60 = (int *)type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
    v62((uint64_t)&v41[v60[5]], v70, v51);
    v61(&v41[v60[6]], v71, v55);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(&v41[v60[7]], v75, v58);
    v41[v60[8]] = v69;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, (uint64_t)v60);
    v33 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
    v34 = (uint64_t)v41;
  }
  _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v33);
  sub_100098640();
}

uint64_t type metadata accessor for HomeAndWorkRefinementViewModelFactory()
{
  return objc_opt_self(_TtC7Weather37HomeAndWorkRefinementViewModelFactory);
}

uint64_t sub_10045DF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HomeAndWorkRefinementInput(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10045DF70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HomeAndWorkRefinementInput(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10045DFAC()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

unint64_t sub_10045DFC8()
{
  unint64_t result;

  result = qword_100BE3E28;
  if (!qword_100BE3E28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.UIKitAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_100BE3E28);
  }
  return result;
}

uint64_t sub_10045E00C(_QWORD *a1)
{
  return swift_release(*a1);
}

double sub_10045E014(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10045E020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045DA24(a1, a2, a3, &qword_100BE3E60) & 1;
}

uint64_t sub_10045E040(uint64_t a1, uint64_t a2)
{
  return sub_10045DA84(a1, a2, &qword_100BE3E60);
}

_QWORD *sub_10045E05C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10045E068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BE3E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10045E0B0()
{
  AttributeScopes.FoundationAttributes.link.getter();
  __break(1u);
}

unint64_t sub_10045E0CC()
{
  unint64_t result;

  result = qword_100BE3E40;
  if (!qword_100BE3E40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.FoundationAttributes.LinkAttribute, &type metadata for AttributeScopes.FoundationAttributes.LinkAttribute);
    atomic_store(result, (unint64_t *)&qword_100BE3E40);
  }
  return result;
}

uint64_t sub_10045E110(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045DA24(a1, a2, a3, &qword_100BE3E58) & 1;
}

uint64_t sub_10045E130(uint64_t a1, uint64_t a2)
{
  return sub_10045DA84(a1, a2, &qword_100BE3E58);
}

void sub_10045E14C()
{
  AttributeScopes.SwiftUIAttributes.foregroundColor.getter();
  __break(1u);
}

unint64_t sub_10045E168()
{
  unint64_t result;

  result = qword_100BE3E48;
  if (!qword_100BE3E48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.SwiftUIAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.SwiftUIAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_100BE3E48);
  }
  return result;
}

uint64_t sub_10045E1AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045DA24(a1, a2, a3, &qword_100BE3E50) & 1;
}

uint64_t sub_10045E1CC(uint64_t a1, uint64_t a2)
{
  return sub_10045DA84(a1, a2, &qword_100BE3E50);
}

uint64_t sub_10045E200@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 56);
  sub_100043CA8(v2 + 16, a1 + 24);
  swift_retain();
  v6 = sub_1000BA294(&qword_100BC44E0);
  v7 = sub_10045E294();
  result = ObservedObject.init(wrappedValue:)(v5, v6, v7);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v9;
  *(double *)(a1 + 16) = a2;
  return result;
}

uint64_t type metadata accessor for DayPickerModule()
{
  return objc_opt_self(_TtC7Weather15DayPickerModule);
}

unint64_t sub_10045E294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC44E8;
  if (!qword_100BC44E8)
  {
    v1 = sub_100075EB0(&qword_100BC44E0);
    result = swift_getWitnessTable(&unk_1009D9950, v1);
    atomic_store(result, (unint64_t *)&qword_100BC44E8);
  }
  return result;
}

char *sub_10045E2D8(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __n128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t, __n128);
  uint64_t v140;
  void (*v141)(char *, char *);
  uint64_t v142;
  uint64_t v143;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v141 = *(void (**)(char *, char *))(*(_QWORD *)(v7 - 8) + 16);
    v142 = v7;
    v141(a1, a2);
    v8 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v8[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = type metadata accessor for TimeZone(0);
    v21 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain(v12);
    v22 = swift_bridgeObjectRetain(v16);
    v139 = v21;
    v140 = v20;
    v21(v18, v19, v20, v22);
    v23 = v8[8];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_1000BA294(&qword_100BC4E68);
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    v27(v24, v25, v26);
    v137 = v27;
    v138 = v26;
    v27(&a1[v8[9]], &a2[v8[9]], v26);
    v28 = v8[10];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = v8[11];
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
    a1[v8[13]] = a2[v8[13]];
    v36 = v8[14];
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v8[15];
    v41 = &a1[v40];
    v42 = &a2[v40];
    v43 = type metadata accessor for Precipitation(0);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v39);
    v143 = v43;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
    {
      v44 = sub_1000BA294(&qword_100BCB338);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
    }
    a1[v8[16]] = a2[v8[16]];
    v46 = v8[17];
    v47 = &a1[v46];
    v48 = &a2[v46];
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v50 = v8[18];
    v51 = &a1[v50];
    v52 = &a2[v50];
    v53 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *((_QWORD *)v51 + 1) = v53;
    v54 = v8[19];
    v55 = &a1[v54];
    v56 = &a2[v54];
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    v58 = v8[20];
    v59 = *(_QWORD *)&a2[v58];
    *(_QWORD *)&a1[v58] = v59;
    v60 = a3[5];
    v61 = &a1[v60];
    v62 = &a2[v60];
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v57);
    swift_bridgeObjectRetain(v59);
    v63 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v62) == 1)
    {
      v64 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v61, v62, v64);
      v65 = 1;
    }
    else
    {
      *(_QWORD *)v61 = *(_QWORD *)v62;
      swift_retain();
      v65 = 0;
    }
    swift_storeEnumTagMultiPayload(v61, v63, v65);
    v66 = a3[6];
    v67 = &a1[v66];
    v68 = &a2[v66];
    v69 = *(_QWORD *)v68;
    v70 = v68[8];
    sub_10008D47C(*(_QWORD *)v68, v70);
    *(_QWORD *)v67 = v69;
    v67[8] = v70;
    v71 = a3[7];
    v72 = &a1[v71];
    v73 = &a2[v71];
    v74 = *(_QWORD *)v73;
    v75 = v73[8];
    sub_10008D47C(*(_QWORD *)v73, v75);
    *(_QWORD *)v72 = v74;
    v72[8] = v75;
    v76 = a3[8];
    v77 = a3[9];
    v78 = &a1[v76];
    v79 = &a2[v76];
    v80 = *((_QWORD *)v79 + 1);
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *((_QWORD *)v78 + 1) = v80;
    *(_QWORD *)&a1[v77] = *(_QWORD *)&a2[v77];
    v81 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    v82 = &a1[v81];
    v83 = &a2[v81];
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    v85 = a3[12];
    v86 = &a1[v85];
    v87 = &a2[v85];
    v88 = *(_QWORD *)&a2[v85];
    v89 = *(_QWORD *)&a2[v85 + 8];
    *(_QWORD *)v86 = v88;
    *((_QWORD *)v86 + 1) = v89;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v90 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
    v91 = &v86[v90];
    v92 = &v87[v90];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v87[v90], 1, (uint64_t)v8))
    {
      v93 = sub_1000BA294(&qword_100BCB340);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v141)(v91, v92, v142);
      v94 = v8[5];
      v95 = &v91[v94];
      v96 = &v92[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      v98 = v8[6];
      v99 = &v91[v98];
      v100 = &v92[v98];
      v101 = *((_QWORD *)v100 + 1);
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *((_QWORD *)v99 + 1) = v101;
      v102 = v8[7];
      v103 = &v91[v102];
      v104 = &v92[v102];
      swift_bridgeObjectRetain(v97);
      v105 = swift_bridgeObjectRetain(v101);
      v139(v103, v104, v140, v105);
      v137(&v91[v8[8]], &v92[v8[8]], v138);
      v137(&v91[v8[9]], &v92[v8[9]], v138);
      v106 = v8[10];
      v107 = &v91[v106];
      v108 = &v92[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v110 = v8[11];
      v111 = &v91[v110];
      v112 = &v92[v110];
      v113 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *((_QWORD *)v111 + 1) = v113;
      *(_QWORD *)&v91[v8[12]] = *(_QWORD *)&v92[v8[12]];
      v91[v8[13]] = v92[v8[13]];
      v114 = v8[14];
      v115 = &v91[v114];
      v116 = &v92[v114];
      v117 = *((_QWORD *)v116 + 1);
      *(_QWORD *)v115 = *(_QWORD *)v116;
      *((_QWORD *)v115 + 1) = v117;
      v118 = v8[15];
      v119 = &v91[v118];
      v120 = &v92[v118];
      swift_bridgeObjectRetain(v109);
      swift_bridgeObjectRetain(v113);
      swift_bridgeObjectRetain(v117);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v143))
      {
        v121 = sub_1000BA294(&qword_100BCB338);
        memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v119, v120, v143);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v143);
      }
      v91[v8[16]] = v92[v8[16]];
      v122 = v8[17];
      v123 = &v91[v122];
      v124 = &v92[v122];
      v125 = *((_QWORD *)v124 + 1);
      *(_QWORD *)v123 = *(_QWORD *)v124;
      *((_QWORD *)v123 + 1) = v125;
      v126 = v8[18];
      v127 = &v91[v126];
      v128 = &v92[v126];
      v129 = *((_QWORD *)v128 + 1);
      *(_QWORD *)v127 = *(_QWORD *)v128;
      *((_QWORD *)v127 + 1) = v129;
      v130 = v8[19];
      v131 = &v91[v130];
      v132 = &v92[v130];
      v133 = *((_QWORD *)v132 + 1);
      *(_QWORD *)v131 = *(_QWORD *)v132;
      *((_QWORD *)v131 + 1) = v133;
      v134 = v8[20];
      v135 = *(_QWORD *)&v92[v134];
      *(_QWORD *)&v91[v134] = v135;
      swift_bridgeObjectRetain(v125);
      swift_bridgeObjectRetain(v129);
      swift_bridgeObjectRetain(v133);
      swift_bridgeObjectRetain(v135);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, (uint64_t)v8);
    }
  }
  return a1;
}

double sub_10045E908(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, __n128);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  __n128 v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);

  v4 = type metadata accessor for Date(0);
  v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v22(a1, v4);
  v5 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + v5[7];
  v7 = type metadata accessor for TimeZone(0);
  v8 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v7 - 8) + 8);
  ((void (*)(uint64_t, uint64_t))v8)(v6, v7);
  v9 = a1 + v5[8];
  v10 = sub_1000BA294(&qword_100BC4E68);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(a1 + v5[9], v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + v5[15];
  v13 = type metadata accessor for Precipitation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (_QWORD *)(a1 + a2[5]);
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v14) == 1)
  {
    v15 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release(*v14);
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  swift_release(*(_QWORD *)(a1 + a2[8] + 8));
  v16 = (_QWORD *)(a1 + a2[11]);
  swift_release(*v16);
  swift_release(v16[1]);
  v17 = (_QWORD *)(a1 + a2[12]);
  swift_release(*v17);
  swift_release(v17[1]);
  v18 = (uint64_t)v17 + *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, (uint64_t)v5))
  {
    v22(v18, v4);
    swift_bridgeObjectRelease();
    v20 = swift_bridgeObjectRelease();
    v8(v18 + v5[7], v7, v20);
    v11(v18 + v5[8], v10);
    v11(v18 + v5[9], v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v18 + v5[15];
    if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v21, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_10045ECA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  __n128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v135)(char *, char *, uint64_t);
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t, __n128);
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;

  v6 = type metadata accessor for Date(0);
  v139 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v140 = v6;
  v139(a1, a2);
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v7[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v7[7];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = type metadata accessor for TimeZone(0);
  v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain(v11);
  v21 = swift_bridgeObjectRetain(v15);
  v137 = v20;
  v138 = v19;
  v20(v17, v18, v19, v21);
  v22 = v7[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1000BA294(&qword_100BC4E68);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v26(v23, v24, v25);
  v135 = (void (*)(char *, char *, uint64_t))v26;
  v136 = v25;
  v26(a1 + v7[9], a2 + v7[9], v25);
  v27 = v7[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v7[11];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v35 = v7[14];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = v7[15];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v42 = type metadata accessor for Precipitation(0);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v38);
  v141 = v42;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    v43 = sub_1000BA294(&qword_100BCB338);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
  }
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  v44 = v7[17];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  v48 = v7[18];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = v7[19];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  v56 = v7[20];
  v57 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(a1 + v56) = v57;
  v58 = a3[5];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRetain(v57);
  v61 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v60) == 1)
  {
    v62 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v59, v60, v62);
    v63 = 1;
  }
  else
  {
    *v59 = *v60;
    swift_retain();
    v63 = 0;
  }
  swift_storeEnumTagMultiPayload(v59, v61, v63);
  v64 = a3[6];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = *(_QWORD *)v66;
  v68 = *(_BYTE *)(v66 + 8);
  sub_10008D47C(*(_QWORD *)v66, v68);
  *(_QWORD *)v65 = v67;
  *(_BYTE *)(v65 + 8) = v68;
  v69 = a3[7];
  v70 = a1 + v69;
  v71 = a2 + v69;
  v72 = *(_QWORD *)v71;
  v73 = *(_BYTE *)(v71 + 8);
  sub_10008D47C(*(_QWORD *)v71, v73);
  *(_QWORD *)v70 = v72;
  *(_BYTE *)(v70 + 8) = v73;
  v74 = a3[8];
  v75 = a3[9];
  v76 = (_QWORD *)(a1 + v74);
  v77 = (_QWORD *)(a2 + v74);
  v78 = v77[1];
  *v76 = *v77;
  v76[1] = v78;
  *(_QWORD *)(a1 + v75) = *(_QWORD *)(a2 + v75);
  v79 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v80 = (_QWORD *)(a1 + v79);
  v81 = (_QWORD *)(a2 + v79);
  v82 = v81[1];
  *v80 = *v81;
  v80[1] = v82;
  v83 = a3[12];
  v84 = (_QWORD *)(a1 + v83);
  v85 = a2 + v83;
  v86 = *(_QWORD *)(a2 + v83);
  v87 = *(_QWORD *)(a2 + v83 + 8);
  *v84 = v86;
  v84[1] = v87;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v88 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v89 = (char *)v84 + v88;
  v90 = (char *)(v85 + v88);
  if (_s7Weather24LocationCompositionStateOwet_0(v85 + v88, 1, (uint64_t)v7))
  {
    v91 = sub_1000BA294(&qword_100BCB340);
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v139)(v89, v90, v140);
    v92 = v7[5];
    v93 = &v89[v92];
    v94 = &v90[v92];
    v95 = *((_QWORD *)v94 + 1);
    *(_QWORD *)v93 = *(_QWORD *)v94;
    *((_QWORD *)v93 + 1) = v95;
    v96 = v7[6];
    v97 = &v89[v96];
    v98 = &v90[v96];
    v99 = *((_QWORD *)v98 + 1);
    *(_QWORD *)v97 = *(_QWORD *)v98;
    *((_QWORD *)v97 + 1) = v99;
    v100 = v7[7];
    v101 = &v89[v100];
    v102 = &v90[v100];
    swift_bridgeObjectRetain(v95);
    v103 = swift_bridgeObjectRetain(v99);
    v137(v101, v102, v138, v103);
    v135(&v89[v7[8]], &v90[v7[8]], v136);
    v135(&v89[v7[9]], &v90[v7[9]], v136);
    v104 = v7[10];
    v105 = &v89[v104];
    v106 = &v90[v104];
    v107 = *((_QWORD *)v106 + 1);
    *(_QWORD *)v105 = *(_QWORD *)v106;
    *((_QWORD *)v105 + 1) = v107;
    v108 = v7[11];
    v109 = &v89[v108];
    v110 = &v90[v108];
    v111 = *((_QWORD *)v110 + 1);
    *(_QWORD *)v109 = *(_QWORD *)v110;
    *((_QWORD *)v109 + 1) = v111;
    *(_QWORD *)&v89[v7[12]] = *(_QWORD *)&v90[v7[12]];
    v89[v7[13]] = v90[v7[13]];
    v112 = v7[14];
    v113 = &v89[v112];
    v114 = &v90[v112];
    v115 = *((_QWORD *)v114 + 1);
    *(_QWORD *)v113 = *(_QWORD *)v114;
    *((_QWORD *)v113 + 1) = v115;
    v116 = v7[15];
    v117 = &v89[v116];
    v118 = &v90[v116];
    swift_bridgeObjectRetain(v107);
    swift_bridgeObjectRetain(v111);
    swift_bridgeObjectRetain(v115);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v141))
    {
      v119 = sub_1000BA294(&qword_100BCB338);
      memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v117, v118, v141);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v141);
    }
    v89[v7[16]] = v90[v7[16]];
    v120 = v7[17];
    v121 = &v89[v120];
    v122 = &v90[v120];
    v123 = *((_QWORD *)v122 + 1);
    *(_QWORD *)v121 = *(_QWORD *)v122;
    *((_QWORD *)v121 + 1) = v123;
    v124 = v7[18];
    v125 = &v89[v124];
    v126 = &v90[v124];
    v127 = *((_QWORD *)v126 + 1);
    *(_QWORD *)v125 = *(_QWORD *)v126;
    *((_QWORD *)v125 + 1) = v127;
    v128 = v7[19];
    v129 = &v89[v128];
    v130 = &v90[v128];
    v131 = *((_QWORD *)v130 + 1);
    *(_QWORD *)v129 = *(_QWORD *)v130;
    *((_QWORD *)v129 + 1) = v131;
    v132 = v7[20];
    v133 = *(_QWORD *)&v90[v132];
    *(_QWORD *)&v89[v132] = v133;
    swift_bridgeObjectRetain(v123);
    swift_bridgeObjectRetain(v127);
    swift_bridgeObjectRetain(v131);
    swift_bridgeObjectRetain(v133);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, (uint64_t)v7);
  }
  return a1;
}

uint64_t sub_10045F2A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  int v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void (*v108)(char *, char *, uint64_t, __n128);
  __n128 v109;
  void (*v110)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  int v152;
  int v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v185)(uint64_t, uint64_t);
  void (*v186)(uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v6 = type metadata accessor for Date(0);
  v189 = *(_QWORD *)(v6 - 8);
  v190 = v6;
  v186 = *(void (**)(uint64_t, uint64_t))(v189 + 24);
  v186(a1, a2);
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = v7[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = v7[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for TimeZone(0);
  v187 = *(_QWORD *)(v19 - 8);
  v191 = v19;
  v185 = *(void (**)(uint64_t, uint64_t))(v187 + 24);
  v185(v17, v18);
  v20 = v7[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1000BA294(&qword_100BC4E68);
  v188 = *(_QWORD *)(v23 - 8);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 24);
  v24(v21, v22, v23);
  v24(a1 + v7[9], a2 + v7[9], v23);
  v25 = v7[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v28 = v27[1];
  v26[1] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease();
  v29 = v7[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v32 = v31[1];
  v30[1] = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v33 = v7[14];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v36 = v35[1];
  v34[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease();
  v37 = v7[15];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = type metadata accessor for Precipitation(0);
  LODWORD(v22) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if ((_DWORD)v22)
  {
    if (!v41)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v42 = *(_QWORD *)(v40 - 8);
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v42 + 8))(v38, v40);
LABEL_6:
    v43 = sub_1000BA294(&qword_100BCB338);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v42 + 24))(v38, v39, v40);
LABEL_7:
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  v44 = v7[17];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v47 = v46[1];
  v45[1] = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease();
  v48 = v7[18];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v51 = v50[1];
  v49[1] = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease();
  v52 = v7[19];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  *v53 = *v54;
  v55 = v54[1];
  v53[1] = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease();
  v56 = v7[20];
  v57 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(a1 + v56) = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v58 = a3[5];
    v59 = (_QWORD *)(a1 + v58);
    v60 = (_QWORD *)(a2 + v58);
    sub_100021A14(a1 + v58, &qword_100BC68C8);
    v61 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v60) == 1)
    {
      v62 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v59, v60, v62);
      v63 = 1;
    }
    else
    {
      *v59 = *v60;
      swift_retain();
      v63 = 0;
    }
    swift_storeEnumTagMultiPayload(v59, v61, v63);
  }
  v64 = a3[6];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = *(_QWORD *)v66;
  v68 = *(_BYTE *)(v66 + 8);
  sub_10008D47C(*(_QWORD *)v66, v68);
  v69 = *(_QWORD *)v65;
  v70 = *(_BYTE *)(v65 + 8);
  *(_QWORD *)v65 = v67;
  *(_BYTE *)(v65 + 8) = v68;
  sub_1000B15F8(v69, v70);
  v71 = a3[7];
  v72 = a1 + v71;
  v73 = a2 + v71;
  v74 = *(_QWORD *)v73;
  v75 = *(_BYTE *)(v73 + 8);
  sub_10008D47C(*(_QWORD *)v73, v75);
  v76 = *(_QWORD *)v72;
  v77 = *(_BYTE *)(v72 + 8);
  *(_QWORD *)v72 = v74;
  *(_BYTE *)(v72 + 8) = v75;
  sub_1000B15F8(v76, v77);
  v78 = a3[8];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (_QWORD *)(a2 + v78);
  v81 = v80[1];
  v82 = v79[1];
  *v79 = *v80;
  v79[1] = v81;
  swift_retain();
  swift_release(v82);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v83 = a3[11];
  v84 = a1 + v83;
  v85 = a2 + v83;
  v86 = *(_QWORD *)(a1 + v83);
  *(_QWORD *)(a1 + v83) = *(_QWORD *)(a2 + v83);
  swift_retain();
  swift_release(v86);
  v87 = *(_QWORD *)(v84 + 8);
  *(_QWORD *)(v84 + 8) = *(_QWORD *)(v85 + 8);
  swift_retain();
  swift_release(v87);
  v88 = a3[12];
  v89 = a1 + v88;
  v90 = a2 + v88;
  v91 = *(_QWORD *)(a1 + v88);
  *(_QWORD *)(a1 + v88) = *(_QWORD *)(a2 + v88);
  swift_retain();
  swift_release(v91);
  v92 = *(_QWORD *)(v89 + 8);
  *(_QWORD *)(v89 + 8) = *(_QWORD *)(v90 + 8);
  swift_retain();
  swift_release(v92);
  v93 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v94 = (_BYTE *)(v89 + v93);
  v95 = (_BYTE *)(v90 + v93);
  LODWORD(v92) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, (uint64_t)v7);
  v96 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, (uint64_t)v7);
  if (!(_DWORD)v92)
  {
    if (v96)
    {
      sub_1000215BC((uint64_t)v94, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_18;
    }
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v186)(v94, v95, v190);
    v128 = v7[5];
    v129 = &v94[v128];
    v130 = &v95[v128];
    *v129 = *v130;
    v131 = v130[1];
    v129[1] = v131;
    swift_bridgeObjectRetain(v131);
    swift_bridgeObjectRelease();
    v132 = v7[6];
    v133 = &v94[v132];
    v134 = &v95[v132];
    *v133 = *v134;
    v135 = v134[1];
    v133[1] = v135;
    swift_bridgeObjectRetain(v135);
    v136 = swift_bridgeObjectRelease();
    ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v185)(&v94[v7[7]], &v95[v7[7]], v191, v136);
    v24((uint64_t)&v94[v7[8]], (uint64_t)&v95[v7[8]], v23);
    v24((uint64_t)&v94[v7[9]], (uint64_t)&v95[v7[9]], v23);
    v137 = v7[10];
    v138 = &v94[v137];
    v139 = &v95[v137];
    *v138 = *v139;
    v140 = v139[1];
    v138[1] = v140;
    swift_bridgeObjectRetain(v140);
    swift_bridgeObjectRelease();
    v141 = v7[11];
    v142 = &v94[v141];
    v143 = &v95[v141];
    *v142 = *v143;
    v144 = v143[1];
    v142[1] = v144;
    swift_bridgeObjectRetain(v144);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v94[v7[12]] = *(_QWORD *)&v95[v7[12]];
    v94[v7[13]] = v95[v7[13]];
    v145 = v7[14];
    v146 = &v94[v145];
    v147 = &v95[v145];
    *v146 = *v147;
    v148 = v147[1];
    v146[1] = v148;
    swift_bridgeObjectRetain(v148);
    swift_bridgeObjectRelease();
    v149 = v7[15];
    v150 = &v94[v149];
    v151 = &v95[v149];
    v152 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v94[v149], 1, v40);
    v153 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v151, 1, v40);
    if (v152)
    {
      if (!v153)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v150, v151, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v150, 0, 1, v40);
LABEL_28:
        v94[v7[16]] = v95[v7[16]];
        v170 = v7[17];
        v171 = &v94[v170];
        v172 = &v95[v170];
        *v171 = *v172;
        v173 = v172[1];
        v171[1] = v173;
        swift_bridgeObjectRetain(v173);
        swift_bridgeObjectRelease();
        v174 = v7[18];
        v175 = &v94[v174];
        v176 = &v95[v174];
        *v175 = *v176;
        v177 = v176[1];
        v175[1] = v177;
        swift_bridgeObjectRetain(v177);
        swift_bridgeObjectRelease();
        v178 = v7[19];
        v179 = &v94[v178];
        v180 = &v95[v178];
        *v179 = *v180;
        v181 = v180[1];
        v179[1] = v181;
        swift_bridgeObjectRetain(v181);
        swift_bridgeObjectRelease();
        v182 = v7[20];
        v183 = *(_QWORD *)&v95[v182];
        *(_QWORD *)&v94[v182] = v183;
        swift_bridgeObjectRetain(v183);
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      v168 = *(_QWORD *)(v40 - 8);
      if (!v153)
      {
        (*(void (**)(char *, char *, uint64_t))(v168 + 24))(v150, v151, v40);
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v168 + 8))(v150, v40);
    }
    v169 = sub_1000BA294(&qword_100BCB338);
    memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
    goto LABEL_28;
  }
  if (v96)
  {
LABEL_18:
    v127 = sub_1000BA294(&qword_100BCB340);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v189 + 16))(v94, v95, v190);
  v97 = v7[5];
  v98 = &v94[v97];
  v99 = &v95[v97];
  *v98 = *v99;
  v100 = v99[1];
  v98[1] = v100;
  v101 = v7[6];
  v102 = &v94[v101];
  v103 = &v95[v101];
  *v102 = *v103;
  v104 = v103[1];
  v102[1] = v104;
  v105 = v7[7];
  v106 = &v94[v105];
  v107 = &v95[v105];
  v108 = *(void (**)(char *, char *, uint64_t, __n128))(v187 + 16);
  swift_bridgeObjectRetain(v100);
  v109 = swift_bridgeObjectRetain(v104);
  v108(v106, v107, v191, v109);
  v110 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v188 + 16);
  v110(&v94[v7[8]], &v95[v7[8]], v23);
  v110(&v94[v7[9]], &v95[v7[9]], v23);
  v111 = v7[10];
  v112 = &v94[v111];
  v113 = &v95[v111];
  *v112 = *v113;
  v114 = v113[1];
  v112[1] = v114;
  v115 = v7[11];
  v116 = &v94[v115];
  v117 = &v95[v115];
  *v116 = *v117;
  v118 = v117[1];
  v116[1] = v118;
  *(_QWORD *)&v94[v7[12]] = *(_QWORD *)&v95[v7[12]];
  v94[v7[13]] = v95[v7[13]];
  v119 = v7[14];
  v120 = &v94[v119];
  v121 = &v95[v119];
  *v120 = *v121;
  v122 = v121[1];
  v120[1] = v122;
  v123 = v7[15];
  v124 = &v94[v123];
  v125 = &v95[v123];
  swift_bridgeObjectRetain(v114);
  swift_bridgeObjectRetain(v118);
  swift_bridgeObjectRetain(v122);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v40))
  {
    v126 = sub_1000BA294(&qword_100BCB338);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v124, v125, v40);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v40);
  }
  v94[v7[16]] = v95[v7[16]];
  v154 = v7[17];
  v155 = &v94[v154];
  v156 = &v95[v154];
  *v155 = *v156;
  v157 = v156[1];
  v155[1] = v157;
  v158 = v7[18];
  v159 = &v94[v158];
  v160 = &v95[v158];
  *v159 = *v160;
  v161 = v160[1];
  v159[1] = v161;
  v162 = v7[19];
  v163 = &v94[v162];
  v164 = &v95[v162];
  *v163 = *v164;
  v165 = v164[1];
  v163[1] = v165;
  v166 = v7[20];
  v167 = *(_QWORD *)&v95[v166];
  *(_QWORD *)&v94[v166] = v167;
  swift_bridgeObjectRetain(v157);
  swift_bridgeObjectRetain(v161);
  swift_bridgeObjectRetain(v165);
  swift_bridgeObjectRetain(v167);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t sub_10045FD20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;

  v6 = type metadata accessor for Date(0);
  v50 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v51 = v6;
  v50(a1, a2);
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for TimeZone(0);
  v48 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v49 = v11;
  v48(v9, v10);
  v12 = v7[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1000BA294(&qword_100BC4E68);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[9], a2 + v7[9], v15);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  *(_OWORD *)(a1 + v7[14]) = *(_OWORD *)(a2 + v7[14]);
  v17 = v7[15];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = type metadata accessor for Precipitation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_1000BA294(&qword_100BCB338);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_OWORD *)(a1 + v7[18]) = *(_OWORD *)(a2 + v7[18]);
  *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  v22 = a3[5];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v24) == 1)
  {
    v26 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload(v23, v25, 1);
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v27 = a3[6];
  v28 = a3[7];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = a1 + v28;
  v32 = a2 + v28;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  v33 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  v34 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a2 + v35 + 8);
  *v36 = *(_QWORD *)(a2 + v35);
  v36[1] = v38;
  v39 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v40 = (char *)v36 + v39;
  v41 = (char *)(v37 + v39);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, (uint64_t)v7))
  {
    v42 = sub_1000BA294(&qword_100BCB340);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v50)(v40, v41, v51);
    *(_OWORD *)&v40[v7[5]] = *(_OWORD *)&v41[v7[5]];
    *(_OWORD *)&v40[v7[6]] = *(_OWORD *)&v41[v7[6]];
    ((void (*)(char *, char *, uint64_t))v48)(&v40[v7[7]], &v41[v7[7]], v49);
    v16((uint64_t)&v40[v7[8]], (uint64_t)&v41[v7[8]], v15);
    v16((uint64_t)&v40[v7[9]], (uint64_t)&v41[v7[9]], v15);
    *(_OWORD *)&v40[v7[10]] = *(_OWORD *)&v41[v7[10]];
    *(_OWORD *)&v40[v7[11]] = *(_OWORD *)&v41[v7[11]];
    *(_QWORD *)&v40[v7[12]] = *(_QWORD *)&v41[v7[12]];
    v40[v7[13]] = v41[v7[13]];
    *(_OWORD *)&v40[v7[14]] = *(_OWORD *)&v41[v7[14]];
    v43 = v7[15];
    v44 = &v40[v43];
    v45 = &v41[v43];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v41[v43], 1, v20))
    {
      v46 = sub_1000BA294(&qword_100BCB338);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v44, v45, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v20);
    }
    v40[v7[16]] = v41[v7[16]];
    *(_OWORD *)&v40[v7[17]] = *(_OWORD *)&v41[v7[17]];
    *(_OWORD *)&v40[v7[18]] = *(_OWORD *)&v41[v7[18]];
    *(_OWORD *)&v40[v7[19]] = *(_OWORD *)&v41[v7[19]];
    *(_QWORD *)&v40[v7[20]] = *(_QWORD *)&v41[v7[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, (uint64_t)v7);
  }
  return a1;
}

uint64_t sub_1004601BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  int v97;
  void (*v98)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  void (*v153)(uint64_t, uint64_t);
  void (*v154)(uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;

  v6 = type metadata accessor for Date(0);
  v157 = *(_QWORD *)(v6 - 8);
  v158 = v6;
  v154 = *(void (**)(uint64_t, uint64_t))(v157 + 40);
  v154(a1, a2);
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v7[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for TimeZone(0);
  v156 = *(_QWORD *)(v21 - 8);
  v159 = v21;
  v153 = *(void (**)(uint64_t, uint64_t))(v156 + 40);
  v153(v19, v20);
  v22 = v7[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1000BA294(&qword_100BC4E68);
  v155 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 40);
  v26(v23, v24, v25);
  v26(a1 + v7[9], a2 + v7[9], v25);
  v27 = v7[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = v7[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v37 = v7[14];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = v7[15];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  v45 = type metadata accessor for Precipitation(0);
  LODWORD(v24) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if ((_DWORD)v24)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v47 = *(_QWORD *)(v45 - 8);
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v47 + 8))(v43, v45);
LABEL_6:
    v48 = sub_1000BA294(&qword_100BCB338);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 40))(v43, v44, v45);
LABEL_7:
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  v49 = v7[17];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = v7[18];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)(a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  v59 = v7[19];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (uint64_t *)(a2 + v59);
  v63 = *v61;
  v62 = v61[1];
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v64 = a3[5];
    v65 = (void *)(a1 + v64);
    v66 = (const void *)(a2 + v64);
    sub_100021A14(a1 + v64, &qword_100BC68C8);
    v67 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v66) == 1)
    {
      v68 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v65, v66, v68);
      swift_storeEnumTagMultiPayload(v65, v67, 1);
    }
    else
    {
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
  }
  v69 = a3[6];
  v70 = a1 + v69;
  v71 = (uint64_t *)(a2 + v69);
  v72 = *v71;
  LOBYTE(v71) = *((_BYTE *)v71 + 8);
  v73 = *(_QWORD *)v70;
  v74 = *(_BYTE *)(v70 + 8);
  *(_QWORD *)v70 = v72;
  *(_BYTE *)(v70 + 8) = (_BYTE)v71;
  sub_1000B15F8(v73, v74);
  v75 = a3[7];
  v76 = a1 + v75;
  v77 = (uint64_t *)(a2 + v75);
  v78 = *v77;
  LOBYTE(v77) = *((_BYTE *)v77 + 8);
  v79 = *(_QWORD *)v76;
  v80 = *(_BYTE *)(v76 + 8);
  *(_QWORD *)v76 = v78;
  *(_BYTE *)(v76 + 8) = (_BYTE)v77;
  sub_1000B15F8(v79, v80);
  v81 = a3[8];
  v82 = *(_QWORD *)(a1 + v81 + 8);
  *(_OWORD *)(a1 + v81) = *(_OWORD *)(a2 + v81);
  swift_release(v82);
  v83 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v83) = *(_BYTE *)(a2 + v83);
  v84 = a3[11];
  v85 = a1 + v84;
  v86 = a2 + v84;
  v87 = *(_QWORD *)(a1 + v84);
  *(_QWORD *)(a1 + v84) = *(_QWORD *)(a2 + v84);
  swift_release(v87);
  v88 = *(_QWORD *)(v85 + 8);
  *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
  swift_release(v88);
  v89 = a3[12];
  v90 = a1 + v89;
  v91 = a2 + v89;
  v92 = *(_QWORD *)(a1 + v89);
  *(_QWORD *)(a1 + v89) = *(_QWORD *)(a2 + v89);
  swift_release(v92);
  v93 = *(_QWORD *)(v90 + 8);
  *(_QWORD *)(v90 + 8) = *(_QWORD *)(v91 + 8);
  swift_release(v93);
  v94 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v95 = (_BYTE *)(v90 + v94);
  v96 = (_BYTE *)(v91 + v94);
  LODWORD(v90) = _s7Weather24LocationCompositionStateOwet_0(v90 + v94, 1, (uint64_t)v7);
  v97 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, (uint64_t)v7);
  if (!(_DWORD)v90)
  {
    if (v97)
    {
      sub_1000215BC((uint64_t)v95, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_17;
    }
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v154)(v95, v96, v158);
    v104 = v7[5];
    v105 = &v95[v104];
    v106 = (uint64_t *)&v96[v104];
    v108 = *v106;
    v107 = v106[1];
    *v105 = v108;
    v105[1] = v107;
    swift_bridgeObjectRelease();
    v109 = v7[6];
    v110 = &v95[v109];
    v111 = (uint64_t *)&v96[v109];
    v113 = *v111;
    v112 = v111[1];
    *v110 = v113;
    v110[1] = v112;
    v114 = swift_bridgeObjectRelease();
    ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v153)(&v95[v7[7]], &v96[v7[7]], v159, v114);
    v26((uint64_t)&v95[v7[8]], (uint64_t)&v96[v7[8]], v25);
    v26((uint64_t)&v95[v7[9]], (uint64_t)&v96[v7[9]], v25);
    v115 = v7[10];
    v116 = &v95[v115];
    v117 = (uint64_t *)&v96[v115];
    v119 = *v117;
    v118 = v117[1];
    *v116 = v119;
    v116[1] = v118;
    swift_bridgeObjectRelease();
    v120 = v7[11];
    v121 = &v95[v120];
    v122 = (uint64_t *)&v96[v120];
    v124 = *v122;
    v123 = v122[1];
    *v121 = v124;
    v121[1] = v123;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v95[v7[12]] = *(_QWORD *)&v96[v7[12]];
    v95[v7[13]] = v96[v7[13]];
    v125 = v7[14];
    v126 = &v95[v125];
    v127 = (uint64_t *)&v96[v125];
    v129 = *v127;
    v128 = v127[1];
    *v126 = v129;
    v126[1] = v128;
    swift_bridgeObjectRelease();
    v130 = v7[15];
    v131 = &v95[v130];
    v132 = &v96[v130];
    v133 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v95[v130], 1, v45);
    v134 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v45);
    if (v133)
    {
      if (!v134)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v131, v132, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v45);
LABEL_27:
        v95[v7[16]] = v96[v7[16]];
        v137 = v7[17];
        v138 = &v95[v137];
        v139 = (uint64_t *)&v96[v137];
        v141 = *v139;
        v140 = v139[1];
        *v138 = v141;
        v138[1] = v140;
        swift_bridgeObjectRelease();
        v142 = v7[18];
        v143 = &v95[v142];
        v144 = (uint64_t *)&v96[v142];
        v146 = *v144;
        v145 = v144[1];
        *v143 = v146;
        v143[1] = v145;
        swift_bridgeObjectRelease();
        v147 = v7[19];
        v148 = &v95[v147];
        v149 = (uint64_t *)&v96[v147];
        v151 = *v149;
        v150 = v149[1];
        *v148 = v151;
        v148[1] = v150;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v95[v7[20]] = *(_QWORD *)&v96[v7[20]];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      v135 = *(_QWORD *)(v45 - 8);
      if (!v134)
      {
        (*(void (**)(char *, char *, uint64_t))(v135 + 40))(v131, v132, v45);
        goto LABEL_27;
      }
      (*(void (**)(char *, uint64_t))(v135 + 8))(v131, v45);
    }
    v136 = sub_1000BA294(&qword_100BCB338);
    memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    goto LABEL_27;
  }
  if (v97)
  {
LABEL_17:
    v103 = sub_1000BA294(&qword_100BCB340);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v157 + 32))(v95, v96, v158);
  *(_OWORD *)&v95[v7[5]] = *(_OWORD *)&v96[v7[5]];
  *(_OWORD *)&v95[v7[6]] = *(_OWORD *)&v96[v7[6]];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v156 + 32))(&v95[v7[7]], &v96[v7[7]], v159);
  v98 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v155 + 32);
  v98(&v95[v7[8]], &v96[v7[8]], v25);
  v98(&v95[v7[9]], &v96[v7[9]], v25);
  *(_OWORD *)&v95[v7[10]] = *(_OWORD *)&v96[v7[10]];
  *(_OWORD *)&v95[v7[11]] = *(_OWORD *)&v96[v7[11]];
  *(_QWORD *)&v95[v7[12]] = *(_QWORD *)&v96[v7[12]];
  v95[v7[13]] = v96[v7[13]];
  *(_OWORD *)&v95[v7[14]] = *(_OWORD *)&v96[v7[14]];
  v99 = v7[15];
  v100 = &v95[v99];
  v101 = &v96[v99];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v96[v99], 1, v45))
  {
    v102 = sub_1000BA294(&qword_100BCB338);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v100, v101, v45);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v45);
  }
  v95[v7[16]] = v96[v7[16]];
  *(_OWORD *)&v95[v7[17]] = *(_OWORD *)&v96[v7[17]];
  *(_OWORD *)&v95[v7[18]] = *(_OWORD *)&v96[v7[18]];
  *(_OWORD *)&v95[v7[19]] = *(_OWORD *)&v96[v7[19]];
  *(_QWORD *)&v95[v7[20]] = *(_QWORD *)&v96[v7[20]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t sub_100460A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100460A28);
}

uint64_t sub_100460A28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1000DB9F4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  v9 = sub_1000BA294(&qword_100BCD380);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = a1 + v10;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = sub_1000BA294(&qword_100BCB330);
    v10 = a3[12];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(a1 + a3[8]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100460AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100460AF8);
}

uint64_t sub_100460AF8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1000DB9F4();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    result = sub_1000BA294(&qword_100BCD380);
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
        return result;
      }
      v9 = sub_1000BA294(&qword_100BCB330);
      v12 = a4[12];
    }
    v10 = a1 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

uint64_t sub_100460BB8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5414, 1);
}

void sub_100460BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  sub_1000986AC();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = type metadata accessor for FontWithSmallVariantModifier(0);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  v37 = (uint64_t *)((char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100037794(v25, (uint64_t)v37 + *(int *)(v38 + 24), &qword_100BCCDA8);
  *v37 = v31;
  v37[1] = v29;
  *((_BYTE *)v37 + *(int *)(v34 + 28)) = v27;
  v39 = sub_1000BA294(&qword_100BDD820);
  sub_10000AB54((uint64_t)v37, (uint64_t)v33 + *(int *)(v39 + 36), type metadata accessor for FontWithSmallVariantModifier);
  *v33 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000215BC((uint64_t)v37, type metadata accessor for FontWithSmallVariantModifier);
  sub_100098640();
}

void sub_100460CA4()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_1000986AC();
  v3 = v0;
  v64 = v4;
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v61 = v7;
  v8 = type metadata accessor for DailyForecastRowViewButtonStyle(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100079FBC();
  v10 = sub_1000C5ECC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BE3FC0);
  v55 = *(_QWORD *)(v14 - 8);
  sub_10009D98C();
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BE3FC8);
  v19 = *(_QWORD *)(v18 - 8);
  v56 = v18;
  v57 = v19;
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_10004A2E8();
  v21 = sub_1000BA294(&qword_100BE3FD0);
  v22 = *(_QWORD *)(v21 - 8);
  v58 = v21;
  v59 = v22;
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_100088FDC();
  v53 = v24;
  v60 = sub_1000BA294(&qword_100BE3FD8);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v54 = v26;
  sub_10000AB54(v3, (uint64_t)v13, type metadata accessor for DailyComponentForecastRowViewLargeText);
  v27 = *(unsigned __int8 *)(v11 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = swift_allocObject(&unk_100B75030, v28 + v12, v27 | 7);
  sub_100463AF4((uint64_t)v13, v29 + v28);
  v65[2] = v3;
  v30 = sub_1000BA294(&qword_100BE3FE0);
  sub_10003D2DC(&qword_100BE3FE8, &qword_100BE3FE0);
  Button.init(action:label:)(sub_100463B38, v29, sub_100463B60, v65, v30, v31);
  LOBYTE(v30) = *(_BYTE *)(v3 + *(int *)(v10 + 40));
  v52 = v3;
  v32 = sub_1000BA294(&qword_100BCB330);
  Binding.projectedValue.getter(v32);
  sub_10000AB54(v3, (uint64_t)&v1[*(int *)(v8 + 24)], type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  *v1 = v30;
  sub_10003D2DC(&qword_100BE3FF0, &qword_100BE3FC0);
  v34 = v33;
  sub_10000F1C8(&qword_100BDD7A8, type metadata accessor for DailyForecastRowViewButtonStyle);
  v36 = v35;
  View.buttonStyle<A>(_:)(v1, v14, v8, v34, v35);
  sub_1000215BC((uint64_t)v1, type metadata accessor for DailyForecastRowViewButtonStyle);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v17, v14);
  v38 = v61;
  v39 = static AccessibilityChildBehavior.ignore.getter(v37);
  v66 = v14;
  v67 = v8;
  v68 = v34;
  v69 = v36;
  v40 = sub_1000C6674(v39, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v41 = v53;
  v42 = v56;
  View.accessibilityElement(children:)(v38, v56, v40);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v38, v63);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v2, v42);
  v66 = v42;
  v67 = v40;
  v44 = sub_1000C6674(v43, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v45 = v54;
  v46 = v58;
  View.accessibilityRespondsToUserInteraction(_:)(1, v58, v44);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v41, v46);
  v47 = (uint64_t *)(v52 + *(int *)(sub_1000DB9F4() + 76));
  v49 = *v47;
  v48 = v47[1];
  v66 = v49;
  v67 = v48;
  v50 = sub_100114EF8();
  ModifiedContent<>.accessibilityLabel<A>(_:)(&v66, v60, &type metadata for String, v50);
  sub_100021A14(v45, &qword_100BE3FD8);
  sub_100098640();
}

void sub_100461074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  void (*v6)(_QWORD, char *, double, double, double, double);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  double x;
  double y;
  double width;
  double height;
  uint64_t v19;
  _QWORD v20[3];
  double *v21;
  CGRect v22;
  CGRect v23;

  v2 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v2);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for DailyComponentForecastRowViewLargeText(0);
  v6 = *(void (**)(_QWORD, char *, double, double, double, double))(a1 + v5[8]);
  v7 = (uint64_t *)(a1 + v5[11]);
  v9 = *v7;
  v8 = v7[1];
  v20[1] = v9;
  v20[2] = v8;
  v10 = sub_1000BA294(&qword_100BDD848);
  State.wrappedValue.getter(&v21, v10);
  v11 = v21[2];
  v12 = v21[3];
  v13 = v21[4];
  v14 = v21[5];
  swift_release(v21);
  v22.origin.x = v11;
  v22.origin.y = v12;
  v22.size.width = v13;
  v22.size.height = v14;
  v23 = CGRectInset(v22, -*(double *)(a1 + v5[9]), 0.0);
  x = v23.origin.x;
  y = v23.origin.y;
  width = v23.size.width;
  height = v23.size.height;
  v19 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v4, a1, v19);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v19);
  v6(0, v4, x, y, width, height);
  sub_100021A14((uint64_t)v4, (uint64_t *)&unk_100BD35A0);
}

void sub_1004611E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_1000BA294(&qword_100BE3FF8);
  sub_100461230(a1, (_QWORD *)(a2 + *(int *)(v4 + 44)));
}

void sub_100461230(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, _QWORD, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t KeyPath;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  char *v113;
  __int128 v114;
  char v115;
  uint64_t v116;
  char v117;
  char v118;

  v112 = a2;
  v3 = sub_1000BA294(&qword_100BCCDA8);
  __chkstk_darwin(v3);
  v109 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Font.TextStyle(0);
  v102 = *(_QWORD *)(v5 - 8);
  v103 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BE4000);
  __chkstk_darwin(v8);
  v101 = (uint64_t *)((char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = sub_1000BA294(&qword_100BE4008);
  __chkstk_darwin(v105);
  v107 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1000BA294(&qword_100BE4010);
  __chkstk_darwin(v106);
  v108 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BE4018);
  __chkstk_darwin(v12);
  v111 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v110 = (uint64_t)&v94 - v15;
  v100 = sub_1000BA294(&qword_100BE4020);
  __chkstk_darwin(v100);
  v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1000BA294(&qword_100BE4028);
  __chkstk_darwin(v98);
  v19 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1000BA294(&qword_100BE4030);
  __chkstk_darwin(v99);
  v21 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BE4038);
  __chkstk_darwin(v22);
  v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000BA294(&qword_100BE4040);
  __chkstk_darwin(v25);
  v27 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000BA294(&qword_100BE4048);
  __chkstk_darwin(v28);
  v104 = (uint64_t)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v94 - v31;
  v33 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v35 = a1;
  v36 = (uint64_t *)(a1 + *(int *)(v33 + 40));
  v37 = v36[1];
  v113 = v32;
  if (v37)
  {
    v95 = v25;
    v96 = v22;
    v38 = *v36;
    v39 = *(_BYTE *)(v35 + *(int *)(v33 + 52));
    v97 = v35;
    if ((v39 & 1) != 0)
    {
      *v21 = static Axis.Set.horizontal.getter(v34);
      v40 = sub_1000BA294(&qword_100BE4080);
      sub_100461B68(v38, v37, (uint64_t)&v21[*(int *)(v40 + 44)]);
      v41 = &qword_100BE4030;
      sub_100037794((uint64_t)v21, (uint64_t)v19, &qword_100BE4030);
      swift_storeEnumTagMultiPayload(v19, v98, 0);
      sub_10003D2DC(&qword_100BE4058, &qword_100BE4030);
      v43 = v42;
      sub_10003D2DC(&qword_100BE4060, &qword_100BE4020);
      _ConditionalContent<>.init(storage:)(v19, v99, v100, v43, v44);
      v45 = (uint64_t)v21;
    }
    else
    {
      *(_QWORD *)v17 = static VerticalAlignment.lastTextBaseline.getter(v34);
      *((_QWORD *)v17 + 1) = 0;
      v17[16] = 1;
      v55 = sub_1000BA294(&qword_100BE4078);
      sub_1004629BC(v38, v37, (uint64_t)&v17[*(int *)(v55 + 44)]);
      v41 = &qword_100BE4020;
      sub_100037794((uint64_t)v17, (uint64_t)v19, &qword_100BE4020);
      swift_storeEnumTagMultiPayload(v19, v98, 1);
      sub_10003D2DC(&qword_100BE4058, &qword_100BE4030);
      v57 = v56;
      sub_10003D2DC(&qword_100BE4060, &qword_100BE4020);
      _ConditionalContent<>.init(storage:)(v19, v99, v100, v57, v58);
      v45 = (uint64_t)v17;
    }
    sub_100021A14(v45, v41);
    v59 = v95;
    sub_100037794((uint64_t)v24, (uint64_t)v27, &qword_100BE4038);
    swift_storeEnumTagMultiPayload(v27, v59, 0);
    v60 = sub_1000BA294(&qword_100BD99D8);
    v61 = sub_100463B68();
    v62 = sub_100463C04();
    _ConditionalContent<>.init(storage:)(v27, v96, v60, v61, v62);
    sub_100021A14((uint64_t)v24, &qword_100BE4038);
    v46 = v97;
  }
  else
  {
    v46 = v35;
    sub_100461F50();
    v47 = v115;
    v48 = v116;
    v49 = v117;
    v50 = v118;
    *(_OWORD *)v27 = v114;
    v27[16] = v47;
    *((_QWORD *)v27 + 3) = v48;
    v27[32] = v49;
    v27[33] = v50;
    swift_storeEnumTagMultiPayload(v27, v25, 1);
    v51 = sub_1000BA294(&qword_100BD99D8);
    v52 = sub_100463B68();
    v53 = sub_100463C04();
    _ConditionalContent<>.init(storage:)(v27, v22, v51, v52, v53);
  }
  v63 = static VerticalAlignment.lastTextBaseline.getter(v54);
  v64 = (uint64_t)v101;
  *v101 = v63;
  *(_QWORD *)(v64 + 8) = 0x4024000000000000;
  *(_BYTE *)(v64 + 16) = 0;
  v65 = sub_1000BA294(&qword_100BE4068);
  sub_100462BD8(v46, v64 + *(int *)(v65 + 44));
  v66 = v102;
  v67 = v103;
  v68 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v102 + 104);
  v69 = v68(v7, enum case for Font.TextStyle.title3(_:), v103);
  static Font.Weight.medium.getter(v69);
  v70 = static Font.system(_:weight:)(v7);
  v71 = *(void (**)(char *, uint64_t))(v66 + 8);
  v71(v7, v67);
  v72 = v68(v7, enum case for Font.TextStyle.body(_:), v67);
  static Font.Weight.medium.getter(v72);
  v73 = static Font.system(_:weight:)(v7);
  v71(v7, v67);
  v74 = v46 + *(int *)(type metadata accessor for DailyComponentForecastRowViewLargeText(0) + 28);
  v75 = *(_QWORD *)v74;
  LOBYTE(v71) = *(_BYTE *)(v74 + 8);
  sub_10008D47C(*(_QWORD *)v74, (char)v71);
  sub_100109B54();
  LOBYTE(v67) = v76;
  sub_1000B15F8(v75, (char)v71);
  v77 = enum case for Font.Leading.tight(_:);
  v78 = type metadata accessor for Font.Leading(0);
  v79 = (uint64_t)v109;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 104))(v109, v77, v78);
  _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v78);
  v80 = (uint64_t)v107;
  v81 = (uint64_t *)&v107[*(int *)(v105 + 36)];
  v82 = type metadata accessor for FontWithSmallVariantModifier(0);
  sub_100037794(v79, (uint64_t)v81 + *(int *)(v82 + 24), &qword_100BCCDA8);
  *v81 = v70;
  v81[1] = v73;
  *((_BYTE *)v81 + *(int *)(v82 + 28)) = v67 & 1;
  sub_100037794(v64, v80, &qword_100BE4000);
  sub_100021A14(v79, &qword_100BCCDA8);
  sub_100021A14(v64, &qword_100BE4000);
  KeyPath = swift_getKeyPath(&unk_1009A1560);
  v84 = v108;
  sub_100037794(v80, v108, &qword_100BE4008);
  v85 = v84 + *(int *)(v106 + 36);
  *(_QWORD *)v85 = KeyPath;
  *(_QWORD *)(v85 + 8) = 1;
  *(_BYTE *)(v85 + 16) = 0;
  sub_100021A14(v80, &qword_100BE4008);
  static Alignment.center.getter(v86);
  v87 = (uint64_t)v111;
  sub_1009463D4();
  sub_100021A14(v84, &qword_100BE4010);
  v88 = v110;
  sub_1000F111C(v87, v110, &qword_100BE4018);
  v89 = (uint64_t)v113;
  v90 = v104;
  sub_100037794((uint64_t)v113, v104, &qword_100BE4048);
  sub_100037794(v88, v87, &qword_100BE4018);
  v91 = v112;
  *v112 = 0x4020000000000000;
  *((_BYTE *)v91 + 8) = 0;
  v92 = (int *)sub_1000BA294(&qword_100BE4070);
  sub_100037794(v90, (uint64_t)v91 + v92[12], &qword_100BE4048);
  sub_100037794(v87, (uint64_t)v91 + v92[16], &qword_100BE4018);
  v93 = (char *)v91 + v92[20];
  *(_QWORD *)v93 = 0x4020000000000000;
  v93[8] = 0;
  sub_100021A14(v88, &qword_100BE4018);
  sub_100021A14(v89, &qword_100BE4048);
  sub_100021A14(v87, &qword_100BE4018);
  sub_100021A14(v90, &qword_100BE4048);
}

void sub_100461B68(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1000BA294(&qword_100BE4088);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - v10;
  v12 = sub_1000BA294(&qword_100BE4090);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v23 - v17;
  *(_QWORD *)v18 = static VerticalAlignment.lastTextBaseline.getter(v16);
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v19 = sub_1000BA294(&qword_100BE4098);
  sub_100461D4C(a1, a2, (uint64_t)&v18[*(int *)(v19 + 44)]);
  *(_QWORD *)v11 = static HorizontalAlignment.leading.getter(v20);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v21 = sub_1000BA294(&qword_100BE40A0);
  sub_1004626D8(a1, a2, (uint64_t)&v11[*(int *)(v21 + 44)]);
  sub_100037794((uint64_t)v18, (uint64_t)v14, &qword_100BE4090);
  sub_100037794((uint64_t)v11, (uint64_t)v8, &qword_100BE4088);
  sub_100037794((uint64_t)v14, a3, &qword_100BE4090);
  v22 = sub_1000BA294(&qword_100BE40A8);
  sub_100037794((uint64_t)v8, a3 + *(int *)(v22 + 48), &qword_100BE4088);
  sub_100021A14((uint64_t)v11, &qword_100BE4088);
  sub_100021A14((uint64_t)v18, &qword_100BE4090);
  sub_100021A14((uint64_t)v8, &qword_100BE4088);
  sub_100021A14((uint64_t)v14, &qword_100BE4090);
}

double sub_100461D4C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  _BYTE v24[4];
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;

  v6 = sub_1000BA294(&qword_100BDD820);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v24[-v10];
  sub_100461F50();
  v12 = v33;
  v13 = v34;
  v14 = v36;
  v30 = v33;
  v31 = v36;
  v27 = v37;
  v25 = v35;
  v26 = v38;
  sub_1004621B4(a1, a2);
  sub_10046234C();
  v15 = v33;
  LOBYTE(a1) = v35;
  v28 = v36;
  v29 = v34;
  v32 = v8;
  sub_100037794((uint64_t)v11, (uint64_t)v8, &qword_100BDD820);
  *(_QWORD *)a3 = v12;
  *(_QWORD *)(a3 + 8) = v13;
  v16 = v25;
  *(_BYTE *)(a3 + 16) = v25;
  *(_QWORD *)(a3 + 24) = v14;
  *(_BYTE *)(a3 + 32) = v27;
  *(_BYTE *)(a3 + 33) = v26;
  v17 = (int *)sub_1000BA294(&qword_100BE40D0);
  sub_100037794((uint64_t)v8, a3 + v17[12], &qword_100BDD820);
  v18 = a3 + v17[16];
  v20 = v28;
  v19 = v29;
  *(_QWORD *)v18 = v15;
  *(_QWORD *)(v18 + 8) = v19;
  *(_BYTE *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = v20;
  v21 = a3 + v17[20];
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  v22 = v30;
  sub_1000D55D4(v30, v13, v16);
  swift_bridgeObjectRetain(v31);
  sub_1000D55D4(v15, v19, a1);
  swift_bridgeObjectRetain(v20);
  sub_100021A14((uint64_t)v11, &qword_100BDD820);
  sub_1000D31B4(v15, v19, a1);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v32, &qword_100BDD820);
  sub_1000D31B4(v22, v13, v16);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100461F50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD v51[2];

  sub_1000986AC();
  v50 = v1;
  sub_1000BA294(&qword_100BCCDA8);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_10009883C();
  v5 = v3 - v4;
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - v7;
  v9 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v9);
  v10 = (_QWORD *)(v0 + *(int *)(sub_1000DCEBC() + 20));
  v11 = v10[1];
  v51[0] = *v10;
  v51[1] = v11;
  v12 = sub_100114EF8();
  swift_bridgeObjectRetain(v11);
  v47 = Text.init<A>(_:)(v51, &type metadata for String, v12);
  v48 = v13;
  v49 = v14;
  v16 = v15 & 1;
  v17 = sub_1000CFCE4(v47, enum case for Font.TextStyle.title3(_:));
  static Font.Weight.medium.getter(v17);
  v18 = sub_1000CCD68();
  v19 = sub_1000DA580();
  v20 = sub_1000CFCE4(v19, enum case for Font.TextStyle.body(_:));
  static Font.Weight.medium.getter(v20);
  v21 = sub_1000CCD68();
  sub_1000DA580();
  v22 = v0 + *(int *)(sub_1000C5ECC() + 28);
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_10008D47C(*(_QWORD *)v22, v24);
  sub_100109B54();
  v26 = v25;
  sub_1000B15F8(v23, v24);
  v27 = enum case for Font.Leading.tight(_:);
  v28 = sub_1000C0E6C();
  v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
  v46 = v8;
  v29(v8, v27, v28);
  sub_100099444();
  _s7Weather24LocationCompositionStateOwst_0(v30, v31, v32, v28);
  sub_100037794((uint64_t)v8, v5, &qword_100BCCDA8);
  v33 = v18;
  swift_retain();
  swift_retain();
  v34 = sub_10040BDEC(v18, v21, v26 & 1, v5);
  v35 = v47;
  v36 = v48;
  v37 = Text.font(_:)(v34, v47, v48, v16, v49);
  v39 = v38;
  v41 = v40;
  v45 = v42;
  swift_release(v33);
  swift_release(v21);
  swift_release(v34);
  sub_1000D31B4(v35, v36, v16);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v46, &qword_100BCCDA8);
  v43 = v50;
  *v50 = v37;
  v43[1] = v39;
  *((_BYTE *)v43 + 16) = v41 & 1;
  v43[3] = v45;
  *((_WORD *)v43 + 16) = 257;
  sub_100098640();
}

#error "100462318: call analysis failed (funcsize=100)"

void sub_10046234C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  _BYTE v62[12];
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  Swift::String v76;

  sub_1000986AC();
  v75 = v1;
  v2 = type metadata accessor for ColorSchemeContrast(0);
  v73 = *(_QWORD *)(v2 - 8);
  v74 = v2;
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_10009883C();
  v72 = v4 - v5;
  __chkstk_darwin(v6);
  v71 = &v62[-v7];
  sub_1000BA294(&qword_100BCCDA8);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_10009883C();
  v11 = v9 - v10;
  __chkstk_darwin(v12);
  v14 = &v62[-v13];
  v15 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v15);
  sub_1000DCEBC();
  v64 = v0;
  v76 = Double.formattedPercent(roundToNearestPercent:)(1);
  v16 = sub_100114EF8();
  v17 = Text.init<A>(_:)(&v76, &type metadata for String, v16);
  v68 = v18;
  v69 = v17;
  v70 = v19;
  v67 = v20 & 1;
  v21 = sub_1000D0174(v17, enum case for Font.TextStyle.title3(_:));
  static Font.Weight.medium.getter(v21);
  v22 = sub_1000CCD68();
  v23 = sub_10009D5E4();
  v24 = sub_1000D0174(v23, enum case for Font.TextStyle.body(_:));
  static Font.Weight.medium.getter(v24);
  v25 = sub_1000CCD68();
  sub_10009D5E4();
  v26 = v0 + *(int *)(sub_1000C5ECC() + 28);
  v27 = *(_QWORD *)v26;
  v28 = *(_BYTE *)(v26 + 8);
  sub_10008D47C(*(_QWORD *)v26, v28);
  sub_100109B54();
  v30 = v29;
  sub_1000B15F8(v27, v28);
  v31 = enum case for Font.Leading.tight(_:);
  v32 = sub_1000C0E6C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v14, v31, v32);
  sub_100099444();
  _s7Weather24LocationCompositionStateOwst_0(v33, v34, v35, v32);
  sub_100037794((uint64_t)v14, v11, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v36 = sub_10040BDEC(v22, v25, v30 & 1, v11);
  v38 = v68;
  v37 = v69;
  LOBYTE(v31) = v67;
  v39 = Text.font(_:)(v36, v69, v68, v67, v70);
  v65 = v40;
  v66 = v41;
  v63 = v42;
  swift_release(v22);
  swift_release(v25);
  swift_release(v36);
  sub_1000D31B4(v37, v38, v31);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v14, &qword_100BCCDA8);
  v43 = v71;
  sub_100114A94();
  v44 = v72;
  v45 = v73;
  v46 = v74;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v73 + 104))(v72, enum case for ColorSchemeContrast.increased(_:), v74);
  v47 = v44;
  LOBYTE(v44) = static ColorSchemeContrast.== infix(_:_:)(v43, v44);
  v48 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v48(v47, v46);
  v49 = ((uint64_t (*)(_BYTE *, uint64_t))v48)(v43, v46);
  if ((v44 & 1) != 0)
    v50 = Color.init(hue:saturation:brightness:opacity:)(v49, 0.780392157, 0.0862745098, 1.0, 1.0);
  else
    v50 = static Color.cyan.getter(v49);
  v51 = v50;
  v52 = v63 & 1;
  v53 = v65;
  v54 = Text.foregroundColor(_:)(v50, v39, v65, v63 & 1, v66);
  v56 = v55;
  v58 = v57;
  v60 = v59;
  swift_release(v51);
  sub_1000D31B4(v39, v53, v52);
  swift_bridgeObjectRelease();
  v61 = v75;
  *v75 = v54;
  v61[1] = v56;
  *((_BYTE *)v61 + 16) = v58 & 1;
  v61[3] = v60;
  sub_100098640();
}

double sub_1004626D8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = a1;
  v21 = a2;
  v4 = sub_1000BA294(&qword_100BE40B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - v8;
  sub_100461F50();
  v10 = v22;
  v11 = v23;
  v12 = v24;
  v13 = v25;
  v14 = v26;
  v15 = v27;
  *(_QWORD *)v9 = static VerticalAlignment.lastTextBaseline.getter();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v16 = sub_1000BA294(&qword_100BE40B8);
  sub_10046285C(v20, v21, (uint64_t)&v9[*(int *)(v16 + 44)]);
  sub_100037794((uint64_t)v9, (uint64_t)v6, &qword_100BE40B0);
  *(_QWORD *)a3 = v10;
  *(_QWORD *)(a3 + 8) = v11;
  *(_BYTE *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v13;
  *(_BYTE *)(a3 + 32) = v14;
  *(_BYTE *)(a3 + 33) = v15;
  v17 = sub_1000BA294(&qword_100BE40C0);
  sub_100037794((uint64_t)v6, a3 + *(int *)(v17 + 48), &qword_100BE40B0);
  sub_1000D55D4(v10, v11, v12);
  swift_bridgeObjectRetain(v13);
  sub_100021A14((uint64_t)v9, &qword_100BE40B0);
  sub_100021A14((uint64_t)v6, &qword_100BE40B0);
  sub_1000D31B4(v10, v11, v12);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_10046285C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  char v19;
  uint64_t v20;

  v6 = sub_1000BA294(&qword_100BDD820);
  __chkstk_darwin(v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v18 - v10;
  sub_1004621B4(a1, a2);
  sub_10046234C();
  v12 = v18[0];
  v13 = v18[1];
  LOBYTE(a2) = v19;
  v14 = v20;
  sub_100037794((uint64_t)v11, (uint64_t)v8, &qword_100BDD820);
  sub_100037794((uint64_t)v8, a3, &qword_100BDD820);
  v15 = sub_1000BA294(&qword_100BE40C8);
  v16 = a3 + *(int *)(v15 + 48);
  *(_QWORD *)v16 = v12;
  *(_QWORD *)(v16 + 8) = v13;
  *(_BYTE *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v14;
  v17 = a3 + *(int *)(v15 + 64);
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  sub_1000D55D4(v12, v13, a2);
  swift_bridgeObjectRetain(v14);
  sub_100021A14((uint64_t)v11, &qword_100BDD820);
  sub_1000D31B4(v12, v13, a2);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v8, &qword_100BDD820);
}

double sub_1004629BC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t KeyPath;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;

  v26 = a1;
  v27 = a2;
  v4 = sub_1000BA294(&qword_100BDD820);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE40D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  sub_100461F50();
  v13 = v28;
  v14 = v29;
  v15 = v30;
  v23 = v31;
  v24 = v33;
  v25 = v32;
  sub_1004621B4(v26, v27);
  KeyPath = swift_getKeyPath(&unk_1009A1590);
  sub_100037794((uint64_t)v6, (uint64_t)v9, &qword_100BDD820);
  v17 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v17 = KeyPath;
  v17[1] = 0x3FE999999999999ALL;
  sub_100021A14((uint64_t)v6, &qword_100BDD820);
  sub_1000F111C((uint64_t)v9, (uint64_t)v12, &qword_100BE40D8);
  sub_100037794((uint64_t)v12, (uint64_t)v9, &qword_100BE40D8);
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v14;
  *(_BYTE *)(a3 + 16) = v15;
  v18 = v23;
  *(_QWORD *)(a3 + 24) = v23;
  *(_BYTE *)(a3 + 32) = v25;
  *(_BYTE *)(a3 + 33) = v24;
  v19 = sub_1000BA294(&qword_100BE40E0);
  sub_100037794((uint64_t)v9, a3 + *(int *)(v19 + 48), &qword_100BE40D8);
  v20 = a3 + *(int *)(v19 + 64);
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  sub_1000D55D4(v13, v14, v15);
  swift_bridgeObjectRetain(v18);
  sub_100021A14((uint64_t)v12, &qword_100BE40D8);
  sub_100021A14((uint64_t)v9, &qword_100BE40D8);
  sub_1000D31B4(v13, v14, v15);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100462BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(_QWORD);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  void *v55;
  void *v56;
  __n128 v57;
  void (*v58)(char *, uint64_t, __n128);
  void (*v59)(char *, uint64_t);
  Swift::String v60;
  char *v61;
  Swift::String v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t KeyPath;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  double v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  Swift::String v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  __n128 v117;
  Swift::String v118;
  Swift::String v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t, __n128);
  char *v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  void (*v146)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t);
  void (*v154)(char *, uint64_t, __n128);
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t (*v158)(char *, _QWORD, uint64_t);
  unsigned int v159;
  uint64_t v160;
  uint64_t (*v161)(char *, uint64_t, uint64_t);
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  void (*v185)(char *, uint64_t);
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;

  v187 = a1;
  v180 = a2;
  v181 = sub_1000BA294(&qword_100BE40E8);
  v178 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v179 = (char *)&v148 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v177 = (char *)&v148 - v4;
  v168 = type metadata accessor for DailyComponentForecastRowViewLargeText(0);
  __chkstk_darwin(v168);
  v166 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for ColorSchemeContrast(0);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v167 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v165 = (char *)&v148 - v8;
  v9 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v9);
  v156 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for BlendMode(0);
  v182 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v151 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for WeatherFormatPlaceholder(0);
  v12 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v14 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v148 - v20;
  v22 = sub_1000BA294(&qword_100BC4E68);
  v171 = *(_QWORD *)(v22 - 8);
  v23 = v171;
  __chkstk_darwin(v22);
  v25 = (char *)&v148 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = v25;
  v26 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v148 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1000BA294(&qword_100BE40F0);
  __chkstk_darwin(v150);
  v183 = (uint64_t)&v148 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_1000BA294(&qword_100BE40F8);
  __chkstk_darwin(v164);
  v163 = (uint64_t)&v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1000BA294(&qword_100BE4100);
  v189 = *(_QWORD *)(v31 - 8);
  v190 = v31;
  __chkstk_darwin(v31);
  v176 = (char *)&v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v162 = (char *)&v148 - v34;
  __chkstk_darwin(v35);
  v191 = (char *)&v148 - v36;
  v184 = v28;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(2, 1);
  v37._countAndFlagsBits = 14924;
  v37._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v37);
  v160 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v38 = v187 + *(int *)(v160 + 32);
  v39 = v25;
  v40 = v22;
  v161 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v41 = v161(v39, v38, v22);
  v42 = static WeatherFormatStyle<>.weather.getter(v41);
  v43 = v18;
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter(v42);
  v44 = *(void (**)(char *, uint64_t))(v16 + 8);
  v172 = v21;
  v44(v21, v15);
  v45 = *(void (**)(_QWORD))(v12 + 104);
  v46 = v14;
  v47 = v14;
  v159 = enum case for WeatherFormatPlaceholder.none(_:);
  v48 = v188;
  v158 = (uint64_t (*)(char *, _QWORD, uint64_t))v45;
  v45(v47);
  v157 = type metadata accessor for UnitManager(0);
  v49 = static UnitManager.standard.getter(v157);
  sub_10000F1C8((unint64_t *)&qword_100BCB9D8, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  v51 = v50;
  v52 = v18;
  v53 = v46;
  v155 = v51;
  v54 = v186;
  v149 = Measurement.formatted<A>(_:placeholder:unitManager:)(v52, v46, v49, &protocol witness table for UnitManager, v40, v15, v51);
  v56 = v55;
  v57 = swift_release(v49);
  v58 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
  v175 = v53;
  v154 = v58;
  v58(v53, v48, v57);
  v173 = v43;
  v174 = v15;
  v185 = v44;
  v44(v43, v15);
  v59 = *(void (**)(char *, uint64_t))(v171 + 8);
  v171 = v40;
  v153 = v59;
  v59(v54, v40);
  v60._countAndFlagsBits = v149;
  v60._object = v56;
  v61 = v184;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v60);
  swift_bridgeObjectRelease();
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v62);
  v63 = LocalizedStringKey.init(stringInterpolation:)(v61);
  v67 = Text.init(_:tableName:bundle:comment:)(v63, v65, v64 & 1, v66, 0, 0, 0, "The day's low temperature");
  v69 = v68;
  v71 = v70;
  LOBYTE(v15) = v72 & 1;
  KeyPath = swift_getKeyPath(&unk_1009A1590);
  v74 = v182;
  v75 = v151;
  v76 = v152;
  (*(void (**)(char *, _QWORD, uint64_t))(v182 + 104))(v151, enum case for BlendMode.plusLighter(_:), v152);
  v77 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v78 = (uint64_t)v156;
  v77(v156, v75, v76);
  v79 = v183;
  sub_10000AB54(v78, v183 + *(int *)(v150 + 36), (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v79 = v67;
  *(_QWORD *)(v79 + 8) = v69;
  *(_BYTE *)(v79 + 16) = v15;
  *(_QWORD *)(v79 + 24) = v71;
  *(_QWORD *)(v79 + 32) = KeyPath;
  *(_QWORD *)(v79 + 40) = 0x3FE0000000000000;
  sub_1000D55D4(v67, v69, v15);
  swift_bridgeObjectRetain(v71);
  swift_retain();
  sub_1000215BC(v78, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v182 + 8))(v75, v76);
  v80 = v67;
  v81 = v168;
  v82 = v69;
  v83 = (uint64_t)v166;
  v84 = v15;
  v85 = v187;
  sub_1000D31B4(v80, v82, v84);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v86 = v165;
  sub_100114A94();
  v87 = v169;
  v88 = v167;
  v89 = v170;
  (*(void (**)(char *, _QWORD, uint64_t))(v169 + 104))(v167, enum case for ColorSchemeContrast.increased(_:), v170);
  LOBYTE(v76) = static ColorSchemeContrast.== infix(_:_:)(v86, v88);
  v90 = *(void (**)(char *, uint64_t))(v87 + 8);
  v90(v88, v89);
  v90(v86, v89);
  sub_10000AB54(v85, v83, type metadata accessor for DailyComponentForecastRowViewLargeText);
  if ((v76 & 1) != 0)
  {
    sub_1000215BC(v83, type metadata accessor for DailyComponentForecastRowViewLargeText);
    v91 = 1.0;
  }
  else
  {
    v92 = v83 + *(int *)(v81 + 24);
    v93 = *(_QWORD *)v92;
    v94 = *(_BYTE *)(v92 + 8);
    sub_10008D47C(*(_QWORD *)v92, v94);
    sub_100109B54();
    v96 = v95;
    sub_1000B15F8(v93, v94);
    sub_1000215BC(v83, type metadata accessor for DailyComponentForecastRowViewLargeText);
    if ((v96 & 1) != 0)
      v91 = 1.0;
    else
      v91 = 0.27;
  }
  v97 = v183;
  v98 = v163;
  sub_100037794(v183, v163, &qword_100BE40F0);
  v99 = v164;
  *(double *)(v98 + *(int *)(v164 + 36)) = v91;
  sub_100021A14(v97, &qword_100BE40F0);
  sub_100372A3C(&qword_100BE4108, &qword_100BE40F8, (void (*)(void))sub_100463CD8);
  v100 = v162;
  View.monospacedDigit()(v99);
  sub_100021A14(v98, &qword_100BE40F8);
  (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v191, v100, v190);
  v101 = v184;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(2, 1);
  v102._countAndFlagsBits = 14920;
  v102._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v102);
  v103 = v186;
  v104 = v171;
  v105 = v161(v186, v85 + *(int *)(v160 + 36), v171);
  v106 = v172;
  v107 = static WeatherFormatStyle<>.weather.getter(v105);
  v108 = v173;
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter(v107);
  v109 = v174;
  v185(v106, v174);
  v110 = v175;
  v111 = v188;
  v112 = v158(v175, v159, v188);
  v113 = static UnitManager.standard.getter(v112);
  v114 = Measurement.formatted<A>(_:placeholder:unitManager:)(v108, v110, v113, &protocol witness table for UnitManager, v104, v109, v155);
  v116 = v115;
  v117 = swift_release(v113);
  v154(v110, v111, v117);
  v185(v108, v109);
  v153(v103, v104);
  v118._countAndFlagsBits = v114;
  v118._object = v116;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v118);
  swift_bridgeObjectRelease();
  v119._countAndFlagsBits = 0;
  v119._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v119);
  v120 = LocalizedStringKey.init(stringInterpolation:)(v101);
  v124 = Text.init(_:tableName:bundle:comment:)(v120, v122, v121 & 1, v123, 0, 0, 0, "The day's high temperature");
  v126 = v125;
  v128 = v127;
  LOBYTE(v111) = v129 & 1;
  v130 = swift_getKeyPath(&unk_1009A1590);
  v192 = v124;
  v193 = v126;
  v194 = v111;
  v195 = v128;
  v196 = v130;
  v197 = 0x3FE0000000000000;
  v131 = sub_1000BA294(&qword_100BDB4F8);
  sub_1003730F4();
  v132 = v177;
  View.monospacedDigit()(v131);
  sub_1000D31B4(v124, v126, v111);
  swift_release(v130);
  v133 = swift_bridgeObjectRelease();
  v135 = v189;
  v134 = v190;
  v136 = *(void (**)(char *, char *, uint64_t, __n128))(v189 + 16);
  v137 = v176;
  v136(v176, v191, v190, v133);
  v138 = v178;
  v139 = *(void (**)(char *, char *, uint64_t))(v178 + 16);
  v140 = v179;
  v141 = v181;
  v139(v179, v132, v181);
  v142 = v180;
  ((void (*)(uint64_t, char *, uint64_t))v136)(v180, v137, v134);
  v143 = sub_1000BA294(&qword_100BE4118);
  v139((char *)(v142 + *(int *)(v143 + 48)), v140, v141);
  v144 = v142 + *(int *)(v143 + 64);
  *(_QWORD *)v144 = 0;
  *(_BYTE *)(v144 + 8) = 1;
  v145 = *(void (**)(char *, uint64_t))(v138 + 8);
  v145(v132, v141);
  v146 = *(void (**)(char *, uint64_t))(v135 + 8);
  v146(v191, v134);
  v145(v140, v141);
  return ((uint64_t (*)(char *, uint64_t))v146)(v137, v134);
}

uint64_t sub_1004637B8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v1 = (int *)sub_1000C5ECC();
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v22 = *(_QWORD *)(v2 + 64);
  v23 = (v3 + 16) & ~v3;
  v4 = v0 + v23;
  v5 = type metadata accessor for Date(0);
  v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v21(v0 + v23, v5);
  v6 = (int *)sub_1000DB9F4();
  sub_1000BA548(v0 + v23 + v6[5]);
  sub_1000BA548(v0 + v23 + v6[6]);
  v7 = v0 + v23 + v6[7];
  v8 = type metadata accessor for TimeZone(0);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v20(v7, v8);
  v9 = v0 + v23 + v6[8];
  sub_1000BA294(&qword_100BC4E68);
  sub_1000DD7B4(v9);
  sub_1000DD7B4(v0 + v23 + v6[9]);
  sub_1000BA548(v0 + v23 + v6[10]);
  sub_1000BA548(v0 + v23 + v6[11]);
  sub_1000BA548(v0 + v23 + v6[14]);
  v10 = v0 + v23 + v6[15];
  v11 = type metadata accessor for Precipitation(0);
  if (!sub_10009D53C(v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  sub_1000BA548(v4 + v6[17]);
  sub_1000BA548(v4 + v6[18]);
  sub_1000BA548(v4 + v6[19]);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)(v4 + v1[5]);
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v12) == 1)
  {
    v13 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release(*v12);
  }
  sub_1000C1630(v1[6]);
  sub_1000C1630(v1[7]);
  swift_release(*(_QWORD *)(v4 + v1[8] + 8));
  v14 = (_QWORD *)(v4 + v1[11]);
  swift_release(*v14);
  swift_release(v14[1]);
  v15 = (_QWORD *)(v4 + v1[12]);
  swift_release(*v15);
  swift_release(v15[1]);
  v16 = (uint64_t)v15 + *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, (uint64_t)v6))
  {
    v21(v16, v5);
    sub_1000BA548(v16 + v6[5]);
    v17 = sub_1000BA548(v16 + v6[6]);
    ((void (*)(uint64_t, uint64_t, double))v20)(v16 + v6[7], v8, v17);
    sub_1000DD7B4(v16 + v6[8]);
    sub_1000DD7B4(v16 + v6[9]);
    sub_1000BA548(v16 + v6[10]);
    sub_1000BA548(v16 + v6[11]);
    sub_1000BA548(v16 + v6[14]);
    v18 = v16 + v6[15];
    if (!sub_10009D53C(v18))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v18, v11);
    sub_1000BA548(v16 + v6[17]);
    sub_1000BA548(v16 + v6[18]);
    sub_1000BA548(v16 + v6[19]);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v23 + v22, v3 | 7);
}

uint64_t sub_100463AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DailyComponentForecastRowViewLargeText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100463B38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000C5ECC() - 8) + 80);
  sub_100461074(v0 + ((v1 + 16) & ~v1));
}

void sub_100463B60(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1004611E4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100463B68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4050;
  if (!qword_100BE4050)
  {
    v1 = sub_100075EB0(&qword_100BE4038);
    sub_10003D2DC(&qword_100BE4058, &qword_100BE4030);
    sub_10003D2DC(&qword_100BE4060, &qword_100BE4020);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4050);
  }
  return result;
}

unint64_t sub_100463C04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD99D0;
  if (!qword_100BD99D0)
  {
    v1 = sub_100075EB0(&qword_100BD99D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD99D0);
  }
  return result;
}

void sub_100463C68()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1000DAF14();
  *v0 = v1;
  sub_10004A298();
}

void sub_100463C84(double *a1)
{
  sub_1000BD48C(a1);
  sub_10004A298();
}

void sub_100463CA4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1000DAF14();
  *v0 = v1;
  sub_10004A298();
}

void sub_100463CC0(double *a1)
{
  sub_1000BD48C(a1);
  sub_10004A298();
}

uint64_t sub_100463CD8()
{
  return sub_100372A3C(&qword_100BE4110, &qword_100BE40F0, (void (*)(void))sub_1003730F4);
}

unint64_t sub_100463D00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = qword_100BE4120;
  if (!qword_100BE4120)
  {
    v1 = sub_100075EB0(&qword_100BE3FD8);
    v2 = sub_100075EB0(&qword_100BE3FC8);
    v3 = sub_100075EB0(&qword_100BE3FC0);
    v4 = type metadata accessor for DailyForecastRowViewButtonStyle(255);
    sub_10003D2DC(&qword_100BE3FF0, &qword_100BE3FC0);
    v6 = v5;
    sub_10000F1C8(&qword_100BDD7A8, type metadata accessor for DailyForecastRowViewButtonStyle);
    v9 = v3;
    v10 = v4;
    v11 = v6;
    v12 = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v9 = v2;
    v10 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4120);
  }
  return result;
}

uint64_t sub_100463E30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 56);
  sub_100043CA8(v1 + 16, (uint64_t)(a1 + 2));
  swift_retain();
  v4 = sub_1000BA294(&qword_100BC47A0);
  v5 = sub_100463EB4();
  result = ObservedObject.init(wrappedValue:)(v3, v4, v5);
  *a1 = result;
  a1[1] = v7;
  return result;
}

uint64_t type metadata accessor for AveragesDetailModule()
{
  return objc_opt_self(_TtC7Weather20AveragesDetailModule);
}

unint64_t sub_100463EB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC47A8;
  if (!qword_100BC47A8)
  {
    v1 = sub_100075EB0(&qword_100BC47A0);
    result = swift_getWitnessTable(&unk_1009D9950, v1);
    atomic_store(result, (unint64_t *)&qword_100BC47A8);
  }
  return result;
}

void sub_100463EF8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  int64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  char v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  BOOL v67;
  unint64_t v68;
  BOOL v69;
  BOOL v70;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int EnumCaseMultiPayload;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  BOOL v96;
  int64_t v99;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;

  v108 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  __chkstk_darwin(v108);
  v107 = (uint64_t)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for Date(0);
  v119 = *(_QWORD *)(v120 - 8);
  v12 = __chkstk_darwin(v120);
  v104 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v113 = (char *)&v101 - v15;
  v16 = __chkstk_darwin(v14);
  v103 = (char *)&v101 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v101 - v18;
  v20 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  v21 = __chkstk_darwin(v20);
  v105 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v112 = (uint64_t)&v101 - v24;
  v25 = __chkstk_darwin(v23);
  v118 = (char *)&v101 - v26;
  v27 = __chkstk_darwin(v25);
  v115 = (uint64_t)&v101 - v28;
  v29 = __chkstk_darwin(v27);
  v111 = (char *)&v101 - v30;
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v101 - v32;
  v34 = __chkstk_darwin(v31);
  v117 = (unint64_t)&v101 - v35;
  __chkstk_darwin(v34);
  v114 = (unint64_t)&v101 - v37;
  v38 = *(_QWORD *)(v36 + 72);
  if (!v38)
  {
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v39 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v38 == -1)
    goto LABEL_93;
  v41 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v38 == -1)
    goto LABEL_94;
  v109 = *(_QWORD *)(v36 + 72);
  v110 = v19;
  v106 = a3;
  v43 = v39 / v38;
  v44 = v41 / v38;
  v116 = v20;
  if (v39 / v38 >= v41 / v38)
  {
    sub_1000DC650(a2, v41 / v38);
    if (v44 * v38 < 1 || a1 >= a2)
    {
      v46 = a4 + v44 * v38;
      goto LABEL_87;
    }
    v72 = -v38;
    v73 = v106;
    v110 = (char *)a1;
    v111 = v11;
    v46 = a4 + v44 * v38;
    v102 = a4;
    while (1)
    {
      v74 = v73;
      v117 = v46;
      v114 = v46 + v72;
      v75 = v115;
      sub_100095B78(v46 + v72, v115, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      v76 = a2 + v72;
      sub_100095B78(a2 + v72, (uint64_t)v118, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      v77 = v75;
      v78 = v112;
      sub_100095B78(v77, v112, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v78, v20);
      if (EnumCaseMultiPayload)
      {
        v80 = (uint64_t)v105;
        if (EnumCaseMultiPayload == 1)
        {
          v81 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
          sub_10007C77C(v112, (uint64_t)v11, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
          v82 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
          v82(v113, v11, v120);
          v83 = (uint64_t)v11;
        }
        else
        {
          v84 = v107;
          v81 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
          sub_10007C77C(v112, v107, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
          v82 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
          v82(v113, (char *)(v84 + *(int *)(v108 + 52)), v120);
          v83 = v84;
          v20 = v116;
        }
        sub_1000215BC(v83, v81);
      }
      else
      {
        sub_10007C77C(v112, (uint64_t)v11, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        v82 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
        v82(v113, v11, v120);
        sub_1000215BC((uint64_t)v11, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        v80 = (uint64_t)v105;
      }
      sub_100095B78((uint64_t)v118, v80, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if (swift_getEnumCaseMultiPayload(v80, v20) > 1)
      {
        v89 = v107;
        v85 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
        sub_10007C77C(v80, v107, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        v90 = v104;
        v87 = v120;
        v82(v104, (char *)(v89 + *(int *)(v108 + 52)), v120);
        v88 = v89;
        v86 = v90;
      }
      else
      {
        v85 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
        sub_10007C77C(v80, (uint64_t)v11, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        v86 = v104;
        v87 = v120;
        v82(v104, v11, v120);
        v88 = (uint64_t)v11;
      }
      sub_1000215BC(v88, v85);
      v91 = v72;
      v73 = v74 + v72;
      v92 = v113;
      v93 = static Date.< infix(_:_:)(v113, v86);
      v94 = v86;
      v95 = *(void (**)(char *, uint64_t))(v119 + 8);
      v95(v94, v87);
      v95(v92, v87);
      sub_1000215BC((uint64_t)v118, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_1000215BC(v115, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if ((v93 & 1) != 0)
      {
        v96 = v74 < a2 || v73 >= a2;
        v20 = v116;
        if (!v96)
        {
          a4 = v102;
          v11 = v111;
          v72 = v91;
          if (v74 != a2)
            swift_arrayInitWithTakeBackToFront(v73, v76, 1, v116);
          a2 = v76;
          v46 = v117;
          goto LABEL_83;
        }
        swift_arrayInitWithTakeFrontToBack(v73, v76, 1, v116);
        a2 = v76;
        a4 = v102;
        v11 = v111;
        v46 = v117;
      }
      else
      {
        v20 = v116;
        if (v74 >= v117 && v73 < v117)
        {
          v11 = v111;
          v72 = v91;
          v46 = v114;
          if (v74 != v117)
            swift_arrayInitWithTakeBackToFront(v73, v114, 1, v116);
          a4 = v102;
          goto LABEL_83;
        }
        v46 = v114;
        swift_arrayInitWithTakeFrontToBack(v73, v114, 1, v116);
        a4 = v102;
        v11 = v111;
      }
      v72 = v91;
LABEL_83:
      if (v46 <= a4 || a2 <= (unint64_t)v110)
        goto LABEL_87;
    }
  }
  sub_1000DC650(a1, v39 / v38);
  v45 = v43 * v38;
  v46 = a4 + v43 * v38;
  if (v45 >= 1 && a2 < v106)
  {
    v118 = v33;
    while (1)
    {
      v48 = v114;
      sub_100095B78(a2, v114, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_100095B78(a4, v117, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_100095B78(v48, (uint64_t)v33, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if (swift_getEnumCaseMultiPayload(v33, v20) > 1)
      {
        v52 = v107;
        v49 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
        sub_10007C77C((uint64_t)v33, v107, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        v50 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
        v50(v110, v52 + *(int *)(v108 + 52), v120);
        v51 = v52;
        v20 = v116;
      }
      else
      {
        v49 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
        sub_10007C77C((uint64_t)v33, (uint64_t)v11, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        v50 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
        v50(v110, (uint64_t)v11, v120);
        v51 = (uint64_t)v11;
      }
      sub_1000215BC(v51, v49);
      v53 = (uint64_t)v111;
      sub_100095B78(v117, (uint64_t)v111, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if (swift_getEnumCaseMultiPayload(v53, v20) > 1)
      {
        v54 = a4;
        v58 = v107;
        sub_10007C77C((uint64_t)v111, v107, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        v59 = v103;
        v50(v103, v58 + *(int *)(v108 + 52), v120);
        v56 = v58;
        v55 = v59;
        v57 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      }
      else
      {
        v54 = a4;
        sub_10007C77C((uint64_t)v111, (uint64_t)v11, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        v55 = v103;
        v50(v103, (uint64_t)v11, v120);
        v56 = (uint64_t)v11;
        v57 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
      }
      sub_1000215BC(v56, v57);
      v60 = v110;
      v61 = static Date.< infix(_:_:)(v110, v55);
      v62 = v55;
      v63 = *(void (**)(char *, uint64_t))(v119 + 8);
      v64 = v120;
      v63(v62, v120);
      v63(v60, v64);
      sub_1000215BC(v117, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_1000215BC(v114, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if ((v61 & 1) == 0)
      {
        v68 = v54;
        v65 = v109;
        a4 = v54 + v109;
        v69 = a1 < v54 || a1 >= a4;
        v33 = v118;
        if (!v69)
        {
          v20 = v116;
          if (a1 != v68)
          {
            swift_arrayInitWithTakeBackToFront(a1, v68, 1, v116);
LABEL_40:
            v65 = v109;
          }
          v66 = a2;
          goto LABEL_42;
        }
        v20 = v116;
        swift_arrayInitWithTakeFrontToBack(a1, v68, 1, v116);
        goto LABEL_40;
      }
      v65 = v109;
      v66 = a2 + v109;
      v67 = a1 < a2 || a1 >= v66;
      a4 = v54;
      v33 = v118;
      if (v67)
        break;
      v20 = v116;
      if (a1 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a1, a2, 1, v116);
        goto LABEL_37;
      }
LABEL_42:
      a1 += v65;
      v70 = a4 >= v46 || v66 >= v106;
      a2 = v66;
      if (v70)
        goto LABEL_87;
    }
    v20 = v116;
    swift_arrayInitWithTakeFrontToBack(a1, a2, 1, v116);
LABEL_37:
    v65 = v109;
    goto LABEL_42;
  }
LABEL_87:
  v99 = v46 - a4;
  if (v109 != -1 || v99 != 0x8000000000000000)
  {
    sub_1000DC650(a4, v99 / v109);
    return;
  }
LABEL_95:
  __break(1u);
}

_QWORD *sub_100464854(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t EnumCaseMultiPayload;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v71;
  void (*v72)(char *, char *, uint64_t);
  int *v73;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
    {
      v9 = type metadata accessor for MoonDetailSelectedDate(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
      v11 = type metadata accessor for Date(0);
      v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
      ((void (*)(_QWORD *, _QWORD *, uint64_t))v12)(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, v9, EnumCaseMultiPayload);
      v13 = v7[5];
      v14 = (_QWORD *)((char *)a1 + v13);
      v15 = (_QWORD *)((char *)a2 + v13);
      v16 = v15[1];
      *v14 = *v15;
      v14[1] = v16;
      v17 = v7[6];
      v18 = (_QWORD *)((char *)a1 + v17);
      v19 = (_QWORD *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = v7[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      swift_bridgeObjectRetain(v16);
      v24 = swift_bridgeObjectRetain(v20);
      v12(v22, v23, v11, v24);
      v25 = (int *)type metadata accessor for MoonViewModel(0);
      *(_QWORD *)&v22[v25[5]] = *(_QWORD *)&v23[v25[5]];
      v26 = v25[6];
      v27 = &v22[v26];
      v28 = &v23[v26];
      v72 = (void (*)(char *, char *, uint64_t))v12;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v23[v26], 1, v11))
      {
        v29 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v12)(v27, v28, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v11);
      }
      v30 = a2;
      v31 = v25[7];
      v32 = &v22[v31];
      v33 = &v23[v31];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v23[v31], 1, v11))
      {
        v34 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v72(v32, v33, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v11);
      }
      v35 = v11;
      v22[v25[8]] = v23[v25[8]];
      v36 = v7[8];
      v37 = (char *)a1 + v36;
      v71 = a1;
      v38 = v30;
      v39 = (char *)v30 + v36;
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v39;
      *((_QWORD *)v37 + 1) = v40;
      v41 = *((_QWORD *)v39 + 3);
      *((_QWORD *)v37 + 2) = *((_QWORD *)v39 + 2);
      *((_QWORD *)v37 + 3) = v41;
      v42 = *((_QWORD *)v39 + 5);
      *((_QWORD *)v37 + 4) = *((_QWORD *)v39 + 4);
      *((_QWORD *)v37 + 5) = v42;
      v37[48] = v39[48];
      v43 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
      v44 = v43[8];
      v45 = &v37[v44];
      v73 = v7;
      v46 = &v39[v44];
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v41);
      v47 = swift_bridgeObjectRetain(v42);
      ((void (*)(char *, char *, uint64_t, __n128))v72)(v45, v46, v35, v47);
      v72(&v37[v43[9]], &v39[v43[9]], v35);
      v37[v43[10]] = v39[v43[10]];
      v48 = v73[9];
      v49 = *(_QWORD *)((char *)v38 + v48);
      *(_QWORD *)((char *)v71 + v48) = v49;
      v50 = v73[10];
      v51 = (_QWORD *)((char *)v71 + v50);
      v52 = (uint64_t)v38 + v50;
      v53 = *(_QWORD *)((char *)v38 + v50);
      swift_bridgeObjectRetain(v49);
      if (v53)
      {
        v54 = *(_QWORD *)(v52 + 8);
        *v51 = v53;
        v51[1] = v54;
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v54);
      }
      else
      {
        *(_OWORD *)v51 = *(_OWORD *)v52;
      }
      v55 = v73[11];
      v56 = (char *)v71 + v55;
      v57 = (uint64_t)v38 + v55;
      v58 = *(_QWORD *)((char *)v38 + v55);
      v59 = *(_QWORD *)((char *)v38 + v55 + 8);
      v60 = *((_BYTE *)v38 + v55 + 16);
      sub_1000B2044(v58, v59, v60);
      *(_QWORD *)v56 = v58;
      *((_QWORD *)v56 + 1) = v59;
      v56[16] = v60;
      v61 = *(_QWORD *)(v57 + 32);
      *((_QWORD *)v56 + 3) = *(_QWORD *)(v57 + 24);
      *((_QWORD *)v56 + 4) = v61;
      v62 = type metadata accessor for ConditionDetailPlatterViewModel(0);
      v63 = *(int *)(v62 + 24);
      v64 = &v56[v63];
      v65 = (const void *)(v57 + v63);
      v66 = type metadata accessor for WeatherDescription(0);
      swift_bridgeObjectRetain(v61);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
      {
        v67 = sub_1000BA294(&qword_100BC3368);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      }
      v68 = v57 + *(int *)(v62 + 28);
      type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      v69 = (char *)&loc_100464C80 + 4 * byte_1009A16F0[swift_getEnumCaseMultiPayload(v68)];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for MoonDetailViewModel.Model(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE4360, (uint64_t)&nominal type descriptor for MoonDetailViewModel.Model);
}

uint64_t sub_100466238(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  void (*v64)(uint64_t, uint64_t, __n128);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, __n128);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v2 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2);
  if (!(_DWORD)result)
  {
    type metadata accessor for MoonDetailSelectedDate(0);
    if (swift_getEnumCaseMultiPayload(a1) <= 2)
    {
      v4 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + v2[7];
    v6 = type metadata accessor for Date(0);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(v5, v6);
    v8 = type metadata accessor for MoonViewModel(0);
    v9 = v5 + *(int *)(v8 + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v6))
      v7(v9, v6);
    v10 = v5 + *(int *)(v8 + 28);
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v6))
      v7(v10, v6);
    v11 = a1 + v2[8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = type metadata accessor for MoonScrubberHeaderViewModel(0);
    v7(v11 + *(int *)(v12 + 32), v6);
    v7(v11 + *(int *)(v12 + 36), v6);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + v2[10]))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v13 = a1 + v2[11];
    sub_10006BD8C(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_BYTE *)(v13 + 16));
    swift_bridgeObjectRelease();
    v14 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    v15 = v13 + v14[6];
    v16 = type metadata accessor for WeatherDescription(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    v17 = v13 + v14[7];
    v18 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload(v17))
    {
      case 0u:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v17, v16);
        goto LABEL_49;
      case 1u:
        goto LABEL_32;
      case 2u:
        v19 = type metadata accessor for AttributedString(0);
        goto LABEL_48;
      case 3u:
        v19 = sub_1000BA294(&qword_100BD30F8);
        goto LABEL_48;
      case 4u:
        if (*(_QWORD *)(v17 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v96 = type metadata accessor for DetailComponentContainerViewModel(0);
        v20 = v17 + *(int *)(v96 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v20) == 1)
        {
          swift_bridgeObjectRelease();
          v94 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v88 = v20 + v94[5];
          v92 = type metadata accessor for URL(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v88, 1, v92))
            (*(void (**)(uint64_t))(*(_QWORD *)(v92 - 8) + 8))(v88);
          v21 = swift_bridgeObjectRelease();
          v89 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v92 - 8) + 8);
          v89(v20 + v94[7], v92, v21);
          v22 = v20 + v94[8];
          if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v92))
            ((void (*)(uint64_t, uint64_t))v89)(v22, v92);
        }
        v17 += *(int *)(v96 + 24);
        v23 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v23))
          goto LABEL_49;
        v19 = type metadata accessor for URL(0);
        goto LABEL_48;
      case 5u:
        if (*(_QWORD *)(v17 + 24))
        {
          sub_1000D31B4(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_BYTE *)(v17 + 16));
          swift_bridgeObjectRelease();
        }
        sub_1002387C0(*(_QWORD *)(v17 + 32), *(_QWORD *)(v17 + 40), *(_QWORD *)(v17 + 48), *(_QWORD *)(v17 + 56), *(_QWORD *)(v17 + 64), *(_QWORD *)(v17 + 72), *(_QWORD *)(v17 + 80), *(unsigned __int8 *)(v17 + 88), *(_BYTE *)(v17 + 89));
        goto LABEL_49;
      case 6u:
        v19 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        goto LABEL_48;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17);
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          v25 = type metadata accessor for ConditionDetailMapViewModel(0);
          v97 = v17 + *(int *)(v25 + 20);
          v26 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v97, v26);
          v95 = v25;
          v27 = v17 + *(int *)(v25 + 24);
          v28 = type metadata accessor for WeatherData(0);
          v98 = v27;
          v29 = v27;
          v30 = (int *)v28;
          if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v28))
          {
            swift_bridgeObjectRelease();
            v93 = v30;
            v31 = v98 + v30[5];
            v90 = type metadata accessor for Locale(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v31, 1, v90))
              (*(void (**)(uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v31);
            v91 = v98 + v93[6];
            v32 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v91, v32);
            v33 = v98 + v93[7];
            v34 = sub_1000BA294(&qword_100BC3348);
            if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
              v7(v33, v6);
            v35 = v98 + v93[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v36 = swift_getEnumCaseMultiPayload(v35);
            if (v36 == 1)
            {
              v37 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v35, v37);
            }
            else if (!v36)
            {
              swift_bridgeObjectRelease();
            }
            v38 = v98 + v93[9];
            v39 = type metadata accessor for WeatherDataOverrides(0);
            v99 = v38;
            v40 = v38;
            v41 = v39;
            if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v39))
            {
              if (!_s7Weather24LocationCompositionStateOwet_0(v99, 1, v6))
                v7(v99, v6);
              v42 = v99 + *(int *)(v41 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v6))
                v7(v42, v6);
            }
          }
          swift_bridgeObjectRelease();
          v17 += *(int *)(v95 + 32);
          v19 = type metadata accessor for WeatherMapOverlayKind(0);
LABEL_48:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
LABEL_32:
          swift_bridgeObjectRelease();
        }
LABEL_49:
        v43 = v13 + v14[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v18))
        {
          switch(swift_getEnumCaseMultiPayload(v43))
          {
            case 0u:
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v43, v16);
              break;
            case 1u:
              goto LABEL_72;
            case 2u:
              v44 = type metadata accessor for AttributedString(0);
              goto LABEL_67;
            case 3u:
              v44 = sub_1000BA294(&qword_100BD30F8);
              goto LABEL_67;
            case 4u:
              if (*(_QWORD *)(v43 + 8))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v45 = type metadata accessor for DetailComponentContainerViewModel(0);
              v46 = v43 + *(int *)(v45 + 20);
              type metadata accessor for NewsArticleComponentViewModel(0);
              if (swift_getEnumCaseMultiPayload(v46) == 1)
              {
                swift_bridgeObjectRelease();
                v47 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                v48 = v46 + v47[5];
                v49 = type metadata accessor for URL(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v49))
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
                v50 = swift_bridgeObjectRelease();
                v51 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v49 - 8) + 8);
                v51(v46 + v47[7], v49, v50);
                v52 = v46 + v47[8];
                if (!_s7Weather24LocationCompositionStateOwet_0(v52, 1, v49))
                  ((void (*)(uint64_t, uint64_t))v51)(v52, v49);
              }
              v53 = v43 + *(int *)(v45 + 24);
              v54 = type metadata accessor for DetailComponentAction(0);
              if (_s7Weather24LocationCompositionStateOwet_0(v53, 1, v54))
                break;
              v55 = type metadata accessor for URL(0);
              goto LABEL_99;
            case 5u:
              if (*(_QWORD *)(v43 + 24))
              {
                sub_1000D31B4(*(_QWORD *)v43, *(_QWORD *)(v43 + 8), *(_BYTE *)(v43 + 16));
                swift_bridgeObjectRelease();
              }
              sub_1002387C0(*(_QWORD *)(v43 + 32), *(_QWORD *)(v43 + 40), *(_QWORD *)(v43 + 48), *(_QWORD *)(v43 + 56), *(_QWORD *)(v43 + 64), *(_QWORD *)(v43 + 72), *(_QWORD *)(v43 + 80), *(unsigned __int8 *)(v43 + 88), *(_BYTE *)(v43 + 89));
              break;
            case 6u:
              v44 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
LABEL_67:
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
              break;
            case 7u:
              type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
              v56 = swift_getEnumCaseMultiPayload(v43);
              if (v56 == 1)
              {
                swift_bridgeObjectRelease();
                v71 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
                v72 = v43 + v71[5];
                v73 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v72, v73);
                v74 = v43 + v71[6];
                v75 = (int *)type metadata accessor for WeatherData(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v74, 1, (uint64_t)v75))
                {
                  swift_bridgeObjectRelease();
                  v76 = v74 + v75[5];
                  v77 = type metadata accessor for Locale(0);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v76, 1, v77))
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
                  v78 = v74 + v75[6];
                  v79 = type metadata accessor for WeatherDataModel(0);
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
                  v80 = v74 + v75[7];
                  v81 = sub_1000BA294(&qword_100BC3348);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v80, 1, v81))
                    v7(v80, v6);
                  v82 = v74 + v75[8];
                  type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  v83 = swift_getEnumCaseMultiPayload(v82);
                  if (v83 == 1)
                  {
                    v84 = type metadata accessor for WeatherStatisticsModel(0);
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 8))(v82, v84);
                  }
                  else if (!v83)
                  {
                    swift_bridgeObjectRelease();
                  }
                  v85 = v74 + v75[9];
                  v86 = type metadata accessor for WeatherDataOverrides(0);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v85, 1, v86))
                  {
                    if (!_s7Weather24LocationCompositionStateOwet_0(v85, 1, v6))
                      v7(v85, v6);
                    v87 = v85 + *(int *)(v86 + 20);
                    if (!_s7Weather24LocationCompositionStateOwet_0(v87, 1, v6))
                      v7(v87, v6);
                  }
                }
                swift_bridgeObjectRelease();
                v53 = v43 + v71[8];
                v55 = type metadata accessor for WeatherMapOverlayKind(0);
LABEL_99:
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v53, v55);
              }
              else if (!v56)
              {
                swift_bridgeObjectRelease();
LABEL_72:
                swift_bridgeObjectRelease();
              }
              break;
            default:
              break;
          }
        }
        swift_bridgeObjectRelease();
        v57 = a1 + v2[13];
        v58 = type metadata accessor for DetailComponentContainerViewModel(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58))
        {
          if (*(_QWORD *)(v57 + 8))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v59 = v57 + *(int *)(v58 + 20);
          type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload(v59) == 1)
          {
            swift_bridgeObjectRelease();
            v60 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            v61 = v59 + v60[5];
            v62 = type metadata accessor for URL(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
            v63 = swift_bridgeObjectRelease();
            v64 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v62 - 8) + 8);
            v64(v59 + v60[7], v62, v63);
            v65 = v59 + v60[8];
            if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v62))
              ((void (*)(uint64_t, uint64_t))v64)(v65, v62);
          }
          v66 = v57 + *(int *)(v58 + 24);
          v67 = type metadata accessor for DetailComponentAction(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v66, 1, v67))
          {
            v68 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v66, v68);
          }
        }
        v69 = a1 + v2[14];
        v70 = type metadata accessor for Location(0);
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
        break;
      default:
        goto LABEL_49;
    }
  }
  return result;
}

char *sub_100466E6C(char *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t EnumCaseMultiPayload;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t, __n128);
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  int *v70;

  v6 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v9 = type metadata accessor for Date(0);
    v10 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v9 - 8) + 16);
    ((void (*)(char *, _BYTE *, uint64_t))v10)(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, v7, EnumCaseMultiPayload);
    v11 = v6[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = v13[1];
    *(_QWORD *)v12 = *v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = v6[6];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v6[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    swift_bridgeObjectRetain(v14);
    v22 = swift_bridgeObjectRetain(v18);
    v10(v20, v21, v9, v22);
    v23 = (int *)type metadata accessor for MoonViewModel(0);
    *(_QWORD *)&v20[v23[5]] = *(_QWORD *)&v21[v23[5]];
    v24 = v23[6];
    v25 = &v20[v24];
    v26 = &v21[v24];
    v69 = (void (*)(char *, char *, uint64_t))v10;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v21[v24], 1, v9))
    {
      v27 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v10)(v25, v26, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v9);
    }
    v28 = a1;
    v29 = v23[7];
    v30 = &v20[v29];
    v31 = &v21[v29];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v21[v29], 1, v9))
    {
      v32 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v69(v30, v31, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v9);
    }
    v33 = v9;
    v20[v23[8]] = v21[v23[8]];
    v34 = v6[8];
    v68 = v28;
    v35 = &v28[v34];
    v36 = &a2[v34];
    v37 = *(_QWORD *)&a2[v34 + 8];
    *(_QWORD *)v35 = *(_QWORD *)&a2[v34];
    *((_QWORD *)v35 + 1) = v37;
    v38 = *(_QWORD *)&a2[v34 + 24];
    *((_QWORD *)v35 + 2) = *(_QWORD *)&a2[v34 + 16];
    *((_QWORD *)v35 + 3) = v38;
    v39 = *(_QWORD *)&a2[v34 + 40];
    *((_QWORD *)v35 + 4) = *(_QWORD *)&a2[v34 + 32];
    *((_QWORD *)v35 + 5) = v39;
    v35[48] = a2[v34 + 48];
    v40 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
    v41 = v40[8];
    v42 = &v35[v41];
    v70 = v6;
    v43 = &v36[v41];
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
    v44 = swift_bridgeObjectRetain(v39);
    ((void (*)(char *, char *, uint64_t, __n128))v69)(v42, v43, v33, v44);
    v69(&v35[v40[9]], &v36[v40[9]], v33);
    v35[v40[10]] = v36[v40[10]];
    v45 = v70[9];
    v46 = *(_QWORD *)&a2[v45];
    *(_QWORD *)&v68[v45] = v46;
    v47 = v70[10];
    v48 = &v68[v47];
    v49 = &a2[v47];
    v50 = *(_QWORD *)&a2[v47];
    swift_bridgeObjectRetain(v46);
    if (v50)
    {
      v51 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = v50;
      *((_QWORD *)v48 + 1) = v51;
      swift_bridgeObjectRetain(v50);
      swift_bridgeObjectRetain(v51);
    }
    else
    {
      *(_OWORD *)v48 = *(_OWORD *)v49;
    }
    v52 = v70[11];
    v53 = &v68[v52];
    v54 = &a2[v52];
    v55 = *(_QWORD *)&a2[v52];
    v56 = *(_QWORD *)&a2[v52 + 8];
    v57 = a2[v52 + 16];
    sub_1000B2044(v55, v56, v57);
    *(_QWORD *)v53 = v55;
    *((_QWORD *)v53 + 1) = v56;
    v53[16] = v57;
    v58 = *((_QWORD *)v54 + 4);
    *((_QWORD *)v53 + 3) = *((_QWORD *)v54 + 3);
    *((_QWORD *)v53 + 4) = v58;
    v59 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    v60 = *(int *)(v59 + 24);
    v61 = &v53[v60];
    v62 = &v54[v60];
    v63 = type metadata accessor for WeatherDescription(0);
    swift_bridgeObjectRetain(v58);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
    {
      v64 = sub_1000BA294(&qword_100BC3368);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
    }
    v65 = &v54[*(int *)(v59 + 28)];
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v66 = (char *)&loc_100467270 + 4 * byte_1009A1710[swift_getEnumCaseMultiPayload(v65)];
    __asm { BR              X10 }
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1004687F8(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t EnumCaseMultiPayload;
  uint64_t v11;
  void (*v12)(_QWORD, _QWORD, _QWORD);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD);
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unsigned __int8 v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  int v138;
  int v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  int v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  int *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  void (*v179)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  int *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  void (*v218)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  int v228;
  int v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  void *__dst;
  int *__dsta;
  void *__dstb;
  void *__dstc;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  int *v245;
  int *v246;

  v6 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for MoonDetailSelectedDate(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
      v11 = type metadata accessor for Date(0);
      v12 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, v9, EnumCaseMultiPayload);
      v13 = v6[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v16 = *((_QWORD *)v15 + 1);
      *((_QWORD *)v14 + 1) = v16;
      v17 = v6[6];
      v18 = &a1[v17];
      v19 = &a2[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v20 = *((_QWORD *)v19 + 1);
      *((_QWORD *)v18 + 1) = v20;
      v21 = v6[7];
      v22 = &a1[v21];
      v23 = &a2[v21];
      swift_bridgeObjectRetain(v16);
      v24 = swift_bridgeObjectRetain(v20);
      ((void (*)(char *, char *, uint64_t, __n128))v12)(v22, v23, v11, v24);
      v25 = (int *)type metadata accessor for MoonViewModel(0);
      *(_QWORD *)&v22[v25[5]] = *(_QWORD *)&v23[v25[5]];
      v26 = v25[6];
      v27 = &v22[v26];
      v28 = &v23[v26];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v23[v26], 1, v11))
      {
        v29 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v12(v27, v28, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v11);
      }
      __dst = v12;
      v246 = v6;
      v52 = v25[7];
      v53 = &v22[v52];
      v54 = &v23[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v23[v52], 1, v11))
      {
        v55 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v12(v53, v54, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v11);
      }
      v56 = v11;
      v22[v25[8]] = v23[v25[8]];
      v57 = v246[8];
      v58 = &a1[v57];
      v243 = a2;
      v59 = &a2[v57];
      *(_QWORD *)v58 = *(_QWORD *)v59;
      v60 = *((_QWORD *)v59 + 1);
      *((_QWORD *)v58 + 1) = v60;
      *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
      v61 = *((_QWORD *)v59 + 3);
      *((_QWORD *)v58 + 3) = v61;
      *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
      v62 = *((_QWORD *)v59 + 5);
      *((_QWORD *)v58 + 5) = v62;
      v58[48] = v59[48];
      v63 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
      v64 = v63[8];
      v65 = &v58[v64];
      v66 = &v59[v64];
      swift_bridgeObjectRetain(v60);
      swift_bridgeObjectRetain(v61);
      v67 = swift_bridgeObjectRetain(v62);
      ((void (*)(char *, char *, uint64_t, __n128))__dst)(v65, v66, v56, v67);
      ((void (*)(char *, char *, uint64_t))__dst)(&v58[v63[9]], &v59[v63[9]], v56);
      v58[v63[10]] = v59[v63[10]];
      v68 = v246[9];
      v69 = *(_QWORD *)&v243[v68];
      *(_QWORD *)&a1[v68] = v69;
      v70 = v246[10];
      v71 = &a1[v70];
      v72 = &v243[v70];
      v73 = *(_QWORD *)&v243[v70];
      swift_bridgeObjectRetain(v69);
      if (v73)
      {
        *(_QWORD *)v71 = v73;
        v74 = *((_QWORD *)v72 + 1);
        *((_QWORD *)v71 + 1) = v74;
        swift_bridgeObjectRetain(v73);
        swift_bridgeObjectRetain(v74);
      }
      else
      {
        *(_OWORD *)v71 = *(_OWORD *)v72;
      }
      v75 = v246[11];
      v76 = &a1[v75];
      v77 = &v243[v75];
      v78 = *(_QWORD *)&v243[v75];
      v79 = *(_QWORD *)&v243[v75 + 8];
      v80 = v243[v75 + 16];
      sub_1000B2044(v78, v79, v80);
      *(_QWORD *)v76 = v78;
      *((_QWORD *)v76 + 1) = v79;
      v76[16] = v80;
      *((_QWORD *)v76 + 3) = *((_QWORD *)v77 + 3);
      v81 = *((_QWORD *)v77 + 4);
      *((_QWORD *)v76 + 4) = v81;
      v82 = type metadata accessor for ConditionDetailPlatterViewModel(0);
      v83 = *(int *)(v82 + 24);
      v84 = &v76[v83];
      v85 = &v77[v83];
      v86 = type metadata accessor for WeatherDescription(0);
      swift_bridgeObjectRetain(v81);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
      {
        v87 = sub_1000BA294(&qword_100BC3368);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
      }
      v88 = &v77[*(int *)(v82 + 28)];
      type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      v89 = (char *)&loc_100468DD4
          + 4 * *((unsigned __int16 *)&word_1009A1720 + swift_getEnumCaseMultiPayload(v88));
      __asm { BR              X10 }
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    if (a1 != a2)
    {
      sub_1000215BC((uint64_t)a1, type metadata accessor for MoonDetailSelectedDate);
      v30 = type metadata accessor for MoonDetailSelectedDate(0);
      v31 = swift_getEnumCaseMultiPayload(a2);
      v32 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
      swift_storeEnumTagMultiPayload(a1, v30, v31);
    }
    v33 = v6[5];
    v34 = &a1[v33];
    v35 = &a2[v33];
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v36 = *((_QWORD *)v35 + 1);
    *((_QWORD *)v34 + 1) = v36;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRelease();
    v37 = v6[6];
    v38 = &a1[v37];
    v39 = &a2[v37];
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v40 = *((_QWORD *)v39 + 1);
    *((_QWORD *)v38 + 1) = v40;
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRelease();
    v245 = v6;
    v41 = v6[7];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v44 = type metadata accessor for Date(0);
    v235 = *(_QWORD *)(v44 - 8);
    v45 = *(void (**)(_QWORD, _QWORD, _QWORD))(v235 + 24);
    v45(v42, v43, v44);
    v46 = (int *)type metadata accessor for MoonViewModel(0);
    *(_QWORD *)&v42[v46[5]] = *(_QWORD *)&v43[v46[5]];
    v47 = v46[6];
    v48 = &v42[v47];
    v49 = &v43[v47];
    v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v42[v47], 1, v44);
    v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v44);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v48, v49, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v44);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v51)
      {
        v45(v48, v49, v44);
LABEL_27:
        v91 = v46[7];
        v92 = &v42[v91];
        v93 = &v43[v91];
        v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v42[v91], 1, v44);
        v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v44);
        if (v94)
        {
          if (!v95)
          {
            (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v92, v93, v44);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v44);
            goto LABEL_33;
          }
        }
        else
        {
          if (!v95)
          {
            v45(v92, v93, v44);
LABEL_33:
            v42[v46[8]] = v43[v46[8]];
            v97 = v245[8];
            v98 = &a1[v97];
            v99 = &a2[v97];
            *(_QWORD *)v98 = *(_QWORD *)&a2[v97];
            v100 = *(_QWORD *)&a2[v97 + 8];
            *((_QWORD *)v98 + 1) = v100;
            swift_bridgeObjectRetain(v100);
            swift_bridgeObjectRelease();
            *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
            v101 = *((_QWORD *)v99 + 3);
            *((_QWORD *)v98 + 3) = v101;
            swift_bridgeObjectRetain(v101);
            swift_bridgeObjectRelease();
            *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
            v102 = *((_QWORD *)v99 + 5);
            *((_QWORD *)v98 + 5) = v102;
            swift_bridgeObjectRetain(v102);
            swift_bridgeObjectRelease();
            v98[48] = v99[48];
            v103 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
            v45(&v98[v103[8]], &v99[v103[8]], v44);
            v45(&v98[v103[9]], &v99[v103[9]], v44);
            v98[v103[10]] = v99[v103[10]];
            v104 = v245[9];
            v105 = *(_QWORD *)&a2[v104];
            *(_QWORD *)&a1[v104] = v105;
            swift_bridgeObjectRetain(v105);
            swift_bridgeObjectRelease();
            v106 = v245[10];
            v107 = &a1[v106];
            v108 = &a2[v106];
            v109 = *(_QWORD *)&a2[v106];
            if (*(_QWORD *)&a1[v106])
            {
              if (v109)
              {
                *(_QWORD *)v107 = v109;
                swift_bridgeObjectRetain(v109);
                swift_bridgeObjectRelease();
                v110 = *((_QWORD *)v108 + 1);
                *((_QWORD *)v107 + 1) = v110;
                swift_bridgeObjectRetain(v110);
                swift_bridgeObjectRelease();
                goto LABEL_40;
              }
              sub_10046CBB0(&a1[v106]);
            }
            else if (v109)
            {
              *(_QWORD *)v107 = v109;
              v111 = *((_QWORD *)v108 + 1);
              *((_QWORD *)v107 + 1) = v111;
              swift_bridgeObjectRetain(v109);
              swift_bridgeObjectRetain(v111);
              goto LABEL_40;
            }
            *(_OWORD *)v107 = *(_OWORD *)v108;
LABEL_40:
            v112 = v245[11];
            v113 = &a1[v112];
            v114 = &a2[v112];
            v115 = *(_QWORD *)&a2[v112];
            v116 = *(_QWORD *)&a2[v112 + 8];
            v117 = a2[v112 + 16];
            sub_1000B2044(v115, v116, v117);
            v118 = *(_QWORD *)v113;
            v119 = *((_QWORD *)v113 + 1);
            *(_QWORD *)v113 = v115;
            *((_QWORD *)v113 + 1) = v116;
            v120 = v113;
            v121 = v113[16];
            v113[16] = v117;
            sub_10006BD8C(v118, v119, v121);
            *((_QWORD *)v113 + 3) = *((_QWORD *)v114 + 3);
            v122 = *((_QWORD *)v114 + 4);
            *((_QWORD *)v113 + 4) = v122;
            swift_bridgeObjectRetain(v122);
            swift_bridgeObjectRelease();
            v123 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
            v124 = v123[6];
            v125 = &v113[v124];
            v126 = &v114[v124];
            v127 = type metadata accessor for WeatherDescription(0);
            LODWORD(v115) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v127);
            v128 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127);
            if ((_DWORD)v115)
            {
              if (!v128)
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v127);
                goto LABEL_46;
              }
            }
            else
            {
              v129 = *(_QWORD *)(v127 - 8);
              if (!v128)
              {
                (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v125, v126, v127);
LABEL_46:
                v244 = a2;
                v236 = v114;
                __dsta = v123;
                if (a1 != a2)
                {
                  v131 = v123[7];
                  v132 = &v114[v131];
                  sub_1000215BC((uint64_t)&v120[v131], type metadata accessor for ConditionDetailPlatterViewModel.Body);
                  type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
                  v133 = (char *)&loc_1004691A0
                       + 4 * *((unsigned __int8 *)&byte_1009A1738 + swift_getEnumCaseMultiPayload(v132));
                  __asm { BR              X10 }
                }
                v134 = v123[8];
                v135 = &v120[v134];
                v136 = &v114[v134];
                v137 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
                v138 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v137);
                v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137);
                if (v138)
                {
                  if (!v139)
                  {
                    v140 = (char *)&loc_10046ACFC
                         + 4 * *((unsigned __int8 *)&byte_1009A1740 + swift_getEnumCaseMultiPayload(v136));
                    __asm { BR              X10 }
                  }
                }
                else
                {
                  if (!v139)
                  {
                    if (a1 != v244)
                    {
                      sub_1000215BC((uint64_t)v135, type metadata accessor for ConditionDetailPlatterViewModel.Body);
                      v142 = (char *)&loc_10046AD84
                           + 4
                           * *((unsigned __int8 *)&byte_1009A1748 + swift_getEnumCaseMultiPayload(v136));
                      __asm { BR              X10 }
                    }
LABEL_59:
                    v120[__dsta[9]] = v236[__dsta[9]];
                    v120[__dsta[10]] = v236[__dsta[10]];
                    v143 = v245[12];
                    v144 = v244;
                    v145 = *(_QWORD *)&v244[v143];
                    *(_QWORD *)&a1[v143] = v145;
                    swift_bridgeObjectRetain(v145);
                    swift_bridgeObjectRelease();
                    v146 = v245[13];
                    v147 = &a1[v146];
                    v148 = &v244[v146];
                    v149 = type metadata accessor for DetailComponentContainerViewModel(0);
                    v150 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v149);
                    v151 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149);
                    if (v150)
                    {
                      if (!v151)
                      {
                        if (*((_QWORD *)v148 + 1))
                        {
                          *(_QWORD *)v147 = *(_QWORD *)v148;
                          v152 = *((_QWORD *)v148 + 1);
                          *((_QWORD *)v147 + 1) = v152;
                          *((_QWORD *)v147 + 2) = *((_QWORD *)v148 + 2);
                          v153 = *((_QWORD *)v148 + 3);
                          *((_QWORD *)v147 + 3) = v153;
                          swift_bridgeObjectRetain(v152);
                          swift_bridgeObjectRetain(v153);
                        }
                        else
                        {
                          v158 = *((_OWORD *)v148 + 1);
                          *(_OWORD *)v147 = *(_OWORD *)v148;
                          *((_OWORD *)v147 + 1) = v158;
                        }
                        v159 = *(int *)(v149 + 20);
                        v160 = &v147[v159];
                        v161 = &v148[v159];
                        v162 = type metadata accessor for NewsArticleComponentViewModel(0);
                        if (swift_getEnumCaseMultiPayload(v161) == 1)
                        {
                          __dstb = (void *)v162;
                          v241 = a1;
                          *(_QWORD *)v160 = *(_QWORD *)v161;
                          v163 = *((_QWORD *)v161 + 1);
                          *((_QWORD *)v160 + 1) = v163;
                          v164 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                          v165 = v164[5];
                          v166 = &v160[v165];
                          v167 = &v161[v165];
                          v168 = type metadata accessor for URL(0);
                          swift_bridgeObjectRetain(v163);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v168))
                          {
                            v169 = sub_1000BA294(&qword_100BD4280);
                            memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v166, v167, v168);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v166, 0, 1, v168);
                          }
                          v172 = v164[6];
                          v173 = &v160[v172];
                          v174 = &v161[v172];
                          *(_QWORD *)v173 = *(_QWORD *)v174;
                          v175 = *((_QWORD *)v174 + 1);
                          *((_QWORD *)v173 + 1) = v175;
                          v176 = v164[7];
                          v177 = &v160[v176];
                          v178 = &v161[v176];
                          v179 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(*(_QWORD *)(v168 - 8) + 16);
                          v180 = swift_bridgeObjectRetain(v175);
                          v179(v177, v178, v168, v180);
                          v181 = v164[8];
                          v182 = &v160[v181];
                          v183 = &v161[v181];
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v161[v181], 1, v168))
                          {
                            v184 = sub_1000BA294(&qword_100BD4280);
                            memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
                          }
                          else
                          {
                            ((void (*)(char *, char *, uint64_t))v179)(v182, v183, v168);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v168);
                          }
                          v144 = v244;
                          v160[v164[9]] = v161[v164[9]];
                          swift_storeEnumTagMultiPayload(v160, __dstb, 1);
                          a1 = v241;
                        }
                        else
                        {
                          memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
                        }
                        v185 = *(int *)(v149 + 24);
                        v186 = &v147[v185];
                        v187 = &v148[v185];
                        v188 = type metadata accessor for DetailComponentAction(0);
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v188))
                        {
                          v189 = sub_1000BA294(&qword_100BD3100);
                          memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
                        }
                        else
                        {
                          v190 = type metadata accessor for URL(0);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v186, v187, v190);
                          v191 = sub_1000BA294(&qword_100BC5FE8);
                          v186[*(int *)(v191 + 48)] = v187[*(int *)(v191 + 48)];
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v188);
                        }
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v149);
                        goto LABEL_85;
                      }
                    }
                    else
                    {
                      if (!v151)
                      {
                        v155 = *((_QWORD *)v148 + 1);
                        if (*((_QWORD *)v147 + 1))
                        {
                          if (v155)
                          {
                            *(_QWORD *)v147 = *(_QWORD *)v148;
                            v156 = *((_QWORD *)v148 + 1);
                            *((_QWORD *)v147 + 1) = v156;
                            swift_bridgeObjectRetain(v156);
                            swift_bridgeObjectRelease();
                            *((_QWORD *)v147 + 2) = *((_QWORD *)v148 + 2);
                            v157 = *((_QWORD *)v148 + 3);
                            *((_QWORD *)v147 + 3) = v157;
                            swift_bridgeObjectRetain(v157);
                            swift_bridgeObjectRelease();
                          }
                          else
                          {
                            sub_10035C44C((uint64_t)v147);
                            v198 = *((_OWORD *)v148 + 1);
                            *(_OWORD *)v147 = *(_OWORD *)v148;
                            *((_OWORD *)v147 + 1) = v198;
                          }
                        }
                        else if (v155)
                        {
                          *(_QWORD *)v147 = *(_QWORD *)v148;
                          v170 = *((_QWORD *)v148 + 1);
                          *((_QWORD *)v147 + 1) = v170;
                          *((_QWORD *)v147 + 2) = *((_QWORD *)v148 + 2);
                          v171 = *((_QWORD *)v148 + 3);
                          *((_QWORD *)v147 + 3) = v171;
                          swift_bridgeObjectRetain(v170);
                          swift_bridgeObjectRetain(v171);
                        }
                        else
                        {
                          v199 = *((_OWORD *)v148 + 1);
                          *(_OWORD *)v147 = *(_OWORD *)v148;
                          *((_OWORD *)v147 + 1) = v199;
                        }
                        if (a1 != v244)
                        {
                          v200 = *(int *)(v149 + 20);
                          v201 = &v147[v200];
                          v202 = &v148[v200];
                          sub_1000215BC((uint64_t)&v147[v200], type metadata accessor for NewsArticleComponentViewModel);
                          v203 = type metadata accessor for NewsArticleComponentViewModel(0);
                          if (swift_getEnumCaseMultiPayload(v202) == 1)
                          {
                            __dstc = (void *)v203;
                            v242 = a1;
                            *(_QWORD *)v201 = *(_QWORD *)v202;
                            v204 = *((_QWORD *)v202 + 1);
                            *((_QWORD *)v201 + 1) = v204;
                            v205 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                            v206 = v205[5];
                            v207 = &v201[v206];
                            v208 = &v202[v206];
                            v209 = type metadata accessor for URL(0);
                            swift_bridgeObjectRetain(v204);
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v209))
                            {
                              v210 = sub_1000BA294(&qword_100BD4280);
                              memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
                            }
                            else
                            {
                              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(v207, v208, v209);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v209);
                            }
                            v211 = v205[6];
                            v212 = &v201[v211];
                            v213 = &v202[v211];
                            *(_QWORD *)v212 = *(_QWORD *)v213;
                            v214 = *((_QWORD *)v213 + 1);
                            *((_QWORD *)v212 + 1) = v214;
                            v215 = v205[7];
                            v216 = &v201[v215];
                            v217 = &v202[v215];
                            v218 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(*(_QWORD *)(v209 - 8) + 16);
                            v219 = swift_bridgeObjectRetain(v214);
                            v218(v216, v217, v209, v219);
                            v220 = v205[8];
                            v221 = &v201[v220];
                            v222 = &v202[v220];
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v202[v220], 1, v209))
                            {
                              v223 = sub_1000BA294(&qword_100BD4280);
                              memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
                            }
                            else
                            {
                              ((void (*)(char *, char *, uint64_t))v218)(v221, v222, v209);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v209);
                            }
                            v144 = v244;
                            v201[v205[9]] = v202[v205[9]];
                            swift_storeEnumTagMultiPayload(v201, __dstc, 1);
                            a1 = v242;
                          }
                          else
                          {
                            memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
                          }
                        }
                        v224 = *(int *)(v149 + 24);
                        v225 = &v147[v224];
                        v226 = &v148[v224];
                        v227 = type metadata accessor for DetailComponentAction(0);
                        v228 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v225, 1, v227);
                        v229 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v227);
                        if (v228)
                        {
                          v192 = v245;
                          if (!v229)
                          {
                            v230 = type metadata accessor for URL(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v225, v226, v230);
                            v231 = sub_1000BA294(&qword_100BC5FE8);
                            v225[*(int *)(v231 + 48)] = v226[*(int *)(v231 + 48)];
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, v227);
                            goto LABEL_86;
                          }
                        }
                        else
                        {
                          v192 = v245;
                          if (!v229)
                          {
                            v233 = type metadata accessor for URL(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 24))(v225, v226, v233);
                            v234 = sub_1000BA294(&qword_100BC5FE8);
                            v225[*(int *)(v234 + 48)] = v226[*(int *)(v234 + 48)];
                            goto LABEL_86;
                          }
                          sub_1000215BC((uint64_t)v225, type metadata accessor for DetailComponentAction);
                        }
                        v232 = sub_1000BA294(&qword_100BD3100);
                        memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
                        goto LABEL_86;
                      }
                      sub_1000215BC((uint64_t)v147, type metadata accessor for DetailComponentContainerViewModel);
                    }
                    v154 = sub_1000BA294(&qword_100BC68A0);
                    memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
LABEL_85:
                    v192 = v245;
LABEL_86:
                    v193 = v192[14];
                    v194 = &a1[v193];
                    v195 = &v144[v193];
                    v196 = type metadata accessor for Location(0);
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 24))(v194, v195, v196);
                    a1[v192[15]] = v144[v192[15]];
                    return a1;
                  }
                  sub_1000215BC((uint64_t)v135, type metadata accessor for ConditionDetailPlatterViewModel.Body);
                }
                v141 = sub_1000BA294(&qword_100BD3108);
                memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
                goto LABEL_59;
              }
              (*(void (**)(char *, uint64_t))(v129 + 8))(v125, v127);
            }
            v130 = sub_1000BA294(&qword_100BC3368);
            memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v235 + 8))(v92, v44);
        }
        v96 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v235 + 8))(v48, v44);
    }
    v90 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_27;
  }
  sub_1000215BC((uint64_t)a1, type metadata accessor for MoonDetailViewModel.Model);
LABEL_7:
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_10046CBB0(_QWORD *a1)
{
  destroy for LocationViewDescription(a1);
  return a1;
}

char *sub_10046CBE4(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t EnumCaseMultiPayload;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  int *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  char *v143;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  int *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  char *__dst;
  void (*__dsta)(char *, char *, uint64_t);
  char *__dstb;
  uint64_t v220;
  _OWORD *v221;
  char *v222;
  void *v223;
  int *v224;
  char *v225;
  char *v226;
  int *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  void (*v234)(char *, char *, uint64_t);
  int *v235;
  char *v236;
  int *v237;
  uint64_t v238;
  int *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  int *v248;
  char *v249;
  int *v250;
  char *v251;
  int *v252;
  int *v253;
  void (*v254)(char *, char *, uint64_t);
  void (*v255)(char *, char *, uint64_t);
  char *v256;
  char *v257;
  void *v258;
  _QWORD *v259;
  int *v260;
  char *v261;
  char *v262;
  char *v263;
  int *v264;
  int *v265;

  v6 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v9 = type metadata accessor for Date(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, v7, EnumCaseMultiPayload);
    *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
    *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
    v11 = v6[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v10(&a1[v11], &a2[v11], v9);
    v14 = (int *)type metadata accessor for MoonViewModel(0);
    *(_QWORD *)&v12[v14[5]] = *(_QWORD *)&v13[v14[5]];
    v15 = v14[6];
    v16 = &v12[v15];
    v17 = &v13[v15];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v15], 1, v9))
    {
      v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v10(v16, v17, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v9);
    }
    v19 = v14[7];
    v20 = &v12[v19];
    v21 = &v13[v19];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v19], 1, v9))
    {
      v22 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v10(v20, v21, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v9);
    }
    v12[v14[8]] = v13[v14[8]];
    v23 = v6[8];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *(_OWORD *)&a2[v23 + 16];
    *(_OWORD *)v24 = *(_OWORD *)&a2[v23];
    *((_OWORD *)v24 + 1) = v26;
    *((_OWORD *)v24 + 2) = *(_OWORD *)&a2[v23 + 32];
    v24[48] = a2[v23 + 48];
    v27 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
    v10(&v24[v27[8]], &v25[v27[8]], v9);
    v255 = v10;
    v10(&v24[v27[9]], &v25[v27[9]], v9);
    v24[v27[10]] = v25[v27[10]];
    *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
    *(_OWORD *)&a1[v6[10]] = *(_OWORD *)&a2[v6[10]];
    v28 = v6[11];
    v29 = &a1[v28];
    v30 = &a2[v28];
    *(_OWORD *)v29 = *(_OWORD *)&a2[v28];
    v29[16] = a2[v28 + 16];
    *(_OWORD *)(v29 + 24) = *(_OWORD *)&a2[v28 + 24];
    v31 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    v32 = v31[6];
    v33 = &v29[v32];
    v34 = &v30[v32];
    v35 = type metadata accessor for WeatherDescription(0);
    v259 = (_QWORD *)v35;
    v265 = v6;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      v36 = sub_1000BA294(&qword_100BC3368);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
    v37 = v31[7];
    v38 = &v29[v37];
    v39 = &v30[v37];
    v40 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload(v39))
    {
      case 0u:
        (*(void (**)(char *, char *))(*(v259 - 1) + 32))(v38, v39);
        v41 = v38;
        v42 = v40;
        v43 = 0;
        goto LABEL_56;
      case 2u:
        v44 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v38, v39, v44);
        v41 = v38;
        v42 = v40;
        v43 = 2;
        goto LABEL_56;
      case 3u:
        v45 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v38, v39, v45);
        v41 = v38;
        v42 = v40;
        v43 = 3;
        goto LABEL_56;
      case 4u:
        v236 = v30;
        v240 = v29;
        v248 = v31;
        v46 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *((_OWORD *)v38 + 1) = v46;
        v47 = type metadata accessor for DetailComponentContainerViewModel(0);
        v48 = *(int *)(v47 + 20);
        v49 = &v38[v48];
        v50 = &v39[v48];
        v51 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v50) == 1)
        {
          v220 = v47;
          v223 = (void *)v51;
          *(_OWORD *)v49 = *(_OWORD *)v50;
          v227 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v231 = v49;
          v52 = v227[5];
          __dst = &v49[v52];
          v53 = &v50[v52];
          v54 = type metadata accessor for URL(0);
          v244 = v40;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
          {
            v55 = sub_1000BA294(&qword_100BD4280);
            memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
            v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32);
          }
          else
          {
            v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32);
            v68(__dst, v53, v54);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v54);
            v56 = v68;
          }
          *(_OWORD *)&v231[v227[6]] = *(_OWORD *)&v50[v227[6]];
          __dsta = v56;
          v56(&v231[v227[7]], &v50[v227[7]], v54);
          v69 = v227[8];
          v70 = &v231[v69];
          v71 = &v50[v69];
          v30 = v236;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v50[v69], 1, v54))
          {
            v72 = sub_1000BA294(&qword_100BD4280);
            memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            __dsta(v70, v71, v54);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v54);
          }
          v47 = v220;
          v231[v227[9]] = v50[v227[9]];
          swift_storeEnumTagMultiPayload(v231, v223, 1);
          v40 = v244;
        }
        else
        {
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          v30 = v236;
        }
        v78 = *(int *)(v47 + 24);
        v79 = &v38[v78];
        v80 = &v39[v78];
        v81 = type metadata accessor for DetailComponentAction(0);
        v29 = v240;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
        {
          v82 = sub_1000BA294(&qword_100BD3100);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          v83 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v79, v80, v83);
          v84 = sub_1000BA294(&qword_100BC5FE8);
          v79[*(int *)(v84 + 48)] = v80[*(int *)(v84 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
        }
        swift_storeEnumTagMultiPayload(v38, v40, 4);
        v31 = v248;
        break;
      case 6u:
        v57 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v38, v39, v57);
        v41 = v38;
        v42 = v40;
        v43 = 6;
        goto LABEL_56;
      case 7u:
        v58 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v39) == 1)
        {
          v241 = v58;
          v245 = v40;
          *(_OWORD *)v38 = *(_OWORD *)v39;
          v59 = type metadata accessor for ConditionDetailMapViewModel(0);
          v60 = *(int *)(v59 + 20);
          v249 = &v38[v60];
          v61 = &v39[v60];
          v62 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v249, v61, v62);
          v232 = v38;
          v237 = (int *)v59;
          v63 = *(int *)(v59 + 24);
          v64 = &v38[v63];
          v65 = &v39[v63];
          v66 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
          {
            v67 = sub_1000BA294(&qword_100BC3460);
            memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
            v38 = v232;
          }
          else
          {
            v250 = v31;
            *(_OWORD *)v64 = *(_OWORD *)v65;
            v224 = (int *)v66;
            v228 = v64;
            v73 = *(int *)(v66 + 20);
            v74 = &v64[v73];
            v221 = v65;
            v75 = &v65[v73];
            v76 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
            {
              v77 = sub_1000BA294(&qword_100BC3340);
              memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
            }
            v85 = v224[6];
            __dstb = &v228[v85];
            v86 = &v65[v85];
            v87 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(__dstb, v86, v87);
            v88 = v224[7];
            v89 = &v228[v88];
            v90 = &v65[v88];
            v91 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91))
            {
              v92 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
            }
            else
            {
              v255(v89, v90, v9);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v91);
            }
            v38 = v232;
            v93 = v224[8];
            v94 = &v228[v93];
            v95 = (char *)v221 + v93;
            v96 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v95) == 1)
            {
              v97 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v94, v95, v97);
              swift_storeEnumTagMultiPayload(v94, v96, 1);
            }
            else
            {
              memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
            }
            v98 = v224[9];
            v99 = &v228[v98];
            v100 = (char *)v221 + v98;
            v101 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
            {
              v102 = sub_1000BA294(&qword_100BC3350);
              memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v9))
              {
                v103 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
              }
              else
              {
                v255(v99, v100, v9);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v9);
              }
              v104 = *(int *)(v101 + 20);
              v233 = &v99[v104];
              v105 = &v100[v104];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v9))
              {
                v106 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v233, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
              }
              else
              {
                v255(v233, v105, v9);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v233, 0, 1, v9);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, (uint64_t)v224);
            v31 = v250;
          }
          *(_OWORD *)&v38[v237[7]] = *(_OWORD *)&v39[v237[7]];
          v107 = v237[8];
          v251 = &v38[v107];
          v108 = &v39[v107];
          v109 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v251, v108, v109);
          v38[v237[9]] = v39[v237[9]];
          swift_storeEnumTagMultiPayload(v38, v241, 1);
          v40 = v245;
        }
        else
        {
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        v41 = v38;
        v42 = v40;
        v43 = 7;
LABEL_56:
        swift_storeEnumTagMultiPayload(v41, v42, v43);
        break;
      default:
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        break;
    }
    v110 = v31[8];
    v111 = &v29[v110];
    v112 = &v30[v110];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v30[v110], 1, v40))
    {
      v113 = sub_1000BA294(&qword_100BD3108);
      memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      v114 = v265;
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v112))
      {
        case 0u:
          (*(void (**)(char *, char *))(*(v259 - 1) + 32))(v111, v112);
          v115 = v111;
          v116 = v40;
          v117 = 0;
          goto LABEL_103;
        case 2u:
          v118 = type metadata accessor for AttributedString(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v111, v112, v118);
          v115 = v111;
          v116 = v40;
          v117 = 2;
          goto LABEL_103;
        case 3u:
          v119 = sub_1000BA294(&qword_100BD30F8);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v111, v112, v119);
          v115 = v111;
          v116 = v40;
          v117 = 3;
          goto LABEL_103;
        case 4u:
          v246 = v40;
          v252 = v31;
          v120 = *((_OWORD *)v112 + 1);
          *(_OWORD *)v111 = *(_OWORD *)v112;
          *((_OWORD *)v111 + 1) = v120;
          v121 = type metadata accessor for DetailComponentContainerViewModel(0);
          v122 = *(int *)(v121 + 20);
          v123 = &v111[v122];
          v124 = &v112[v122];
          v125 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload(v124) == 1)
          {
            v238 = v121;
            v242 = v125;
            *(_OWORD *)v123 = *(_OWORD *)v124;
            v126 = type metadata accessor for NewsArticleComponentContentViewModel(0);
            v127 = *(int *)(v126 + 20);
            v256 = &v123[v127];
            v260 = (int *)v126;
            v128 = &v124[v127];
            v129 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129))
            {
              v130 = sub_1000BA294(&qword_100BD4280);
              memcpy(v256, v128, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
              v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32);
            }
            else
            {
              v143 = v128;
              v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32);
              v144(v256, v143, v129);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, v129);
              v131 = v144;
            }
            *(_OWORD *)&v123[v260[6]] = *(_OWORD *)&v124[v260[6]];
            v234 = v131;
            v131(&v123[v260[7]], &v124[v260[7]], v129);
            v145 = v260[8];
            v257 = &v123[v145];
            v146 = &v124[v145];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v124[v145], 1, v129))
            {
              v147 = sub_1000BA294(&qword_100BD4280);
              memcpy(v257, v146, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
            }
            else
            {
              v234(v257, v146, v129);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v129);
            }
            v121 = v238;
            v123[v260[9]] = v124[v260[9]];
            swift_storeEnumTagMultiPayload(v123, v242, 1);
          }
          else
          {
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
          }
          v153 = *(int *)(v121 + 24);
          v154 = &v111[v153];
          v155 = &v112[v153];
          v156 = type metadata accessor for DetailComponentAction(0);
          v40 = v246;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v156))
          {
            v157 = sub_1000BA294(&qword_100BD3100);
            memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
          }
          else
          {
            v158 = type metadata accessor for URL(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v154, v155, v158);
            v159 = sub_1000BA294(&qword_100BC5FE8);
            v154[*(int *)(v159 + 48)] = v155[*(int *)(v159 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v156);
          }
          v114 = v265;
          swift_storeEnumTagMultiPayload(v111, v246, 4);
          v31 = v252;
          goto LABEL_105;
        case 6u:
          v132 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v111, v112, v132);
          v115 = v111;
          v116 = v40;
          v117 = 6;
          goto LABEL_103;
        case 7u:
          v133 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
          if (swift_getEnumCaseMultiPayload(v112) == 1)
          {
            v243 = v133;
            v247 = v40;
            *(_OWORD *)v111 = *(_OWORD *)v112;
            v134 = type metadata accessor for ConditionDetailMapViewModel(0);
            v135 = *(int *)(v134 + 20);
            v261 = &v111[v135];
            v136 = &v112[v135];
            v137 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(v261, v136, v137);
            v239 = (int *)v134;
            v138 = *(int *)(v134 + 24);
            v262 = &v111[v138];
            v139 = &v112[v138];
            v140 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v139, 1, v140))
            {
              v141 = sub_1000BA294(&qword_100BC3460);
              memcpy(v262, v139, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
              v142 = v239;
            }
            else
            {
              v253 = v31;
              *(_OWORD *)v262 = *(_OWORD *)v139;
              v229 = v139;
              v235 = (int *)v140;
              v148 = *(int *)(v140 + 20);
              v149 = &v262[v148];
              v150 = &v139[v148];
              v151 = type metadata accessor for Locale(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v151))
              {
                v152 = sub_1000BA294(&qword_100BC3340);
                memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v151);
              }
              v160 = v235[6];
              v222 = &v229[v160];
              v225 = &v262[v160];
              v161 = type metadata accessor for WeatherDataModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 32))(v225, v222, v161);
              v162 = v235[7];
              v226 = &v262[v162];
              v163 = &v229[v162];
              v164 = sub_1000BA294(&qword_100BC3348);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
              {
                v165 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v226, v163, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
              }
              else
              {
                v255(v226, v163, v9);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v226, 0, 1, v164);
              }
              v166 = v235[8];
              v167 = &v262[v166];
              v168 = &v229[v166];
              v169 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload(v168) == 1)
              {
                v170 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v167, v168, v170);
                swift_storeEnumTagMultiPayload(v167, v169, 1);
              }
              else
              {
                memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
              }
              v171 = v235[9];
              v172 = &v262[v171];
              v173 = &v229[v171];
              v174 = type metadata accessor for WeatherDataOverrides(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v174))
              {
                v175 = sub_1000BA294(&qword_100BC3350);
                memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
                v142 = v239;
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v9))
                {
                  v176 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
                }
                else
                {
                  v255(v172, v173, v9);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v9);
                }
                v177 = *(int *)(v174 + 20);
                v230 = &v172[v177];
                v178 = &v173[v177];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v178, 1, v9))
                {
                  v179 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v230, v178, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
                }
                else
                {
                  v255(v230, v178, v9);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, v9);
                }
                v142 = v239;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v174);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, (uint64_t)v235);
              v31 = v253;
            }
            *(_OWORD *)&v111[v142[7]] = *(_OWORD *)&v112[v142[7]];
            v180 = v142[8];
            v181 = &v111[v180];
            v182 = &v112[v180];
            v183 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v181, v182, v183);
            v111[v142[9]] = v112[v142[9]];
            swift_storeEnumTagMultiPayload(v111, v243, 1);
            v40 = v247;
          }
          else
          {
            memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
          }
          v115 = v111;
          v116 = v40;
          v117 = 7;
LABEL_103:
          swift_storeEnumTagMultiPayload(v115, v116, v117);
          break;
        default:
          memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          break;
      }
      v114 = v265;
LABEL_105:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v40);
    }
    v29[v31[9]] = v30[v31[9]];
    v29[v31[10]] = v30[v31[10]];
    *(_QWORD *)&a1[v114[12]] = *(_QWORD *)&a2[v114[12]];
    v184 = v114[13];
    v185 = &a1[v184];
    v186 = &a2[v184];
    v187 = type metadata accessor for DetailComponentContainerViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, v187))
    {
      v188 = sub_1000BA294(&qword_100BC68A0);
      memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    }
    else
    {
      v189 = *((_OWORD *)v186 + 1);
      *(_OWORD *)v185 = *(_OWORD *)v186;
      *((_OWORD *)v185 + 1) = v189;
      v190 = *(int *)(v187 + 20);
      v191 = &v185[v190];
      v192 = &v186[v190];
      v193 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v192) == 1)
      {
        v258 = (void *)v193;
        *(_OWORD *)v191 = *(_OWORD *)v192;
        v194 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v195 = v194[5];
        v263 = &v191[v195];
        v196 = &v192[v195];
        v197 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v197))
        {
          v198 = sub_1000BA294(&qword_100BD4280);
          memcpy(v263, v196, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
          v199 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32);
        }
        else
        {
          v200 = v196;
          v199 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32);
          v199(v263, v200, v197);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v197);
        }
        *(_OWORD *)&v191[v194[6]] = *(_OWORD *)&v192[v194[6]];
        v254 = v199;
        v199(&v191[v194[7]], &v192[v194[7]], v197);
        v264 = v194;
        v201 = v194[8];
        v202 = &v191[v201];
        v203 = &v192[v201];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v192[v201], 1, v197))
        {
          v204 = sub_1000BA294(&qword_100BD4280);
          memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
        }
        else
        {
          v254(v202, v203, v197);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v197);
        }
        v114 = v265;
        v191[v264[9]] = v192[v264[9]];
        swift_storeEnumTagMultiPayload(v191, v258, 1);
      }
      else
      {
        memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
      }
      v205 = *(int *)(v187 + 24);
      v206 = &v185[v205];
      v207 = &v186[v205];
      v208 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v208))
      {
        v209 = sub_1000BA294(&qword_100BD3100);
        memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
      }
      else
      {
        v210 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v206, v207, v210);
        v211 = sub_1000BA294(&qword_100BC5FE8);
        v206[*(int *)(v211 + 48)] = v207[*(int *)(v211 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v208);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, v187);
    }
    v212 = v114[14];
    v213 = &a1[v212];
    v214 = &a2[v212];
    v215 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
    a1[v114[15]] = a2[v114[15]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v114);
  }
  return a1;
}

char *sub_10046E260(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t);
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  __int128 v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  void (*v257)(char *, char *, uint64_t);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  int *v270;
  void (*v271)(char *, char *, uint64_t);
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  int v323;
  int v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  __int128 v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  void (*v345)(char *, char *, uint64_t);
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  __int128 v360;
  uint64_t v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  void (*v371)(char *, char *, uint64_t);
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  char *v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  void (*v385)(char *, char *, uint64_t);
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  char *v403;
  char *v404;
  uint64_t v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  __int128 v413;
  uint64_t v414;
  char *v415;
  char *v416;
  uint64_t v417;
  int *v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  void (*v424)(char *, char *, uint64_t);
  char *v425;
  uint64_t v426;
  char *v427;
  char *v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  char *v439;
  uint64_t v440;
  char *v441;
  void (*v442)(char *, char *, uint64_t);
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  char *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  char *v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  char *v474;
  char *v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  uint64_t v481;
  uint64_t v482;
  char *v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  char *v488;
  char *v489;
  uint64_t v490;
  uint64_t v491;
  char *v492;
  char *v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  char *v498;
  char *v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  char *v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  char *v512;
  char *v513;
  uint64_t v514;
  char *v515;
  int *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  int v521;
  int v522;
  __int128 v523;
  uint64_t v524;
  char *v525;
  char *v526;
  uint64_t v527;
  int *v528;
  uint64_t v529;
  char *v530;
  char *v531;
  uint64_t v532;
  uint64_t v533;
  void (*v534)(char *, char *, uint64_t);
  size_t v535;
  void *v536;
  const void *v537;
  uint64_t v538;
  uint64_t v539;
  char *v540;
  uint64_t v541;
  char *v542;
  char *v543;
  uint64_t v544;
  uint64_t v545;
  void *v546;
  const void *v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  char *v555;
  char *v556;
  uint64_t v557;
  __int128 v559;
  uint64_t v560;
  char *v561;
  char *v562;
  uint64_t v563;
  int *v564;
  uint64_t v565;
  char *v566;
  char *v567;
  uint64_t v568;
  uint64_t v569;
  void (*v570)(char *, char *, uint64_t);
  char *v571;
  uint64_t v572;
  char *v573;
  char *v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  int v580;
  int v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  char *__dst;
  void (*__dsta)(char *, char *, uint64_t);
  void (*__dstb)(char *, char *, uint64_t);
  char *__dstc;
  char *__dstd;
  _OWORD *v591;
  uint64_t v592;
  char *v593;
  char *v594;
  char *v595;
  char *v596;
  uint64_t v597;
  uint64_t v598;
  _OWORD *v599;
  int *v600;
  void (*v601)(char *, char *, uint64_t);
  int *v602;
  int *v603;
  int *v604;
  int *v605;
  char *v606;
  _OWORD *v607;
  _OWORD *v608;
  _OWORD *v609;
  uint64_t v610;
  int *v611;
  char *v612;
  uint64_t v613;
  int *v614;
  void (*v615)(char *, char *, uint64_t);
  int *v616;
  void (*v617)(char *, char *, uint64_t);
  int *v618;
  char *v619;
  void *v620;
  char *v621;
  char *v622;
  void *v623;
  int *v624;
  char *v625;
  void *v626;
  int *v627;
  void *v628;
  int *v629;
  uint64_t v630;
  uint64_t v631;
  _OWORD *v632;
  char *v633;
  char *v634;
  char *v635;
  int *v636;
  uint64_t v637;
  char *v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  int *v643;
  uint64_t v644;
  uint64_t v645;
  int *v646;
  int *v647;
  int *v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  int *v658;
  int *v659;
  void (*v660)(char *, char *, uint64_t);
  void (*v661)(char *, char *, uint64_t);
  void (*v662)(char *, char *, uint64_t);
  void (*v663)(char *, char *, uint64_t);
  int *v664;
  char *v665;
  void *v666;
  void *v667;
  void *v668;
  int *v669;
  int *v670;
  char *v671;
  char *v672;

  v6 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1000215BC((uint64_t)a1, type metadata accessor for MoonDetailViewModel.Model);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      sub_1000215BC((uint64_t)a1, type metadata accessor for MoonDetailSelectedDate);
      v21 = type metadata accessor for MoonDetailSelectedDate(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
      v23 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
      swift_storeEnumTagMultiPayload(a1, v21, EnumCaseMultiPayload);
    }
    v24 = v6[5];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v28 = *(_QWORD *)v26;
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = v28;
    *((_QWORD *)v25 + 1) = v27;
    swift_bridgeObjectRelease();
    v29 = v6[6];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v33 = *(_QWORD *)v31;
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = v33;
    *((_QWORD *)v30 + 1) = v32;
    swift_bridgeObjectRelease();
    v34 = v6[7];
    v35 = &a1[v34];
    v671 = a2;
    v36 = &a2[v34];
    v37 = type metadata accessor for Date(0);
    v653 = *(_QWORD *)(v37 - 8);
    v38 = *(void (**)(char *, char *, uint64_t))(v653 + 40);
    v38(v35, v36, v37);
    v39 = (int *)type metadata accessor for MoonViewModel(0);
    *(_QWORD *)&v35[v39[5]] = *(_QWORD *)&v36[v39[5]];
    v40 = v39[6];
    v41 = &v35[v40];
    v42 = &v36[v40];
    v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v35[v40], 1, v37);
    v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v37);
    if (v43)
    {
      if (!v44)
      {
        (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v41, v42, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v37);
        goto LABEL_25;
      }
    }
    else
    {
      if (!v44)
      {
        v38(v41, v42, v37);
LABEL_25:
        v71 = v39[7];
        v72 = &v35[v71];
        v73 = &v36[v71];
        v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v35[v71], 1, v37);
        v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v37);
        if (v74)
        {
          if (!v75)
          {
            (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v72, v73, v37);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v37);
            goto LABEL_31;
          }
        }
        else
        {
          if (!v75)
          {
            v38(v72, v73, v37);
LABEL_31:
            v35[v39[8]] = v36[v39[8]];
            v77 = v6[8];
            v78 = &a1[v77];
            v79 = &v671[v77];
            v80 = *(_QWORD *)&v671[v77 + 8];
            *(_QWORD *)v78 = *(_QWORD *)&v671[v77];
            *((_QWORD *)v78 + 1) = v80;
            swift_bridgeObjectRelease();
            v81 = *((_QWORD *)v79 + 3);
            *((_QWORD *)v78 + 2) = *((_QWORD *)v79 + 2);
            *((_QWORD *)v78 + 3) = v81;
            swift_bridgeObjectRelease();
            v82 = *((_QWORD *)v79 + 5);
            *((_QWORD *)v78 + 4) = *((_QWORD *)v79 + 4);
            *((_QWORD *)v78 + 5) = v82;
            swift_bridgeObjectRelease();
            v78[48] = v79[48];
            v83 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
            v38(&v78[v83[8]], &v79[v83[8]], v37);
            v38(&v78[v83[9]], &v79[v83[9]], v37);
            v78[v83[10]] = v79[v83[10]];
            *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&v671[v6[9]];
            swift_bridgeObjectRelease();
            v84 = v6[10];
            v85 = &a1[v84];
            v86 = &v671[v84];
            if (*(_QWORD *)&a1[v84])
            {
              if (*(_QWORD *)v86)
              {
                *(_QWORD *)v85 = *(_QWORD *)v86;
                swift_bridgeObjectRelease();
                *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
                swift_bridgeObjectRelease();
                goto LABEL_46;
              }
              sub_10046CBB0(v85);
            }
            *(_OWORD *)v85 = *(_OWORD *)v86;
LABEL_46:
            v670 = v6;
            v112 = v6[11];
            v113 = &a1[v112];
            v114 = &v671[v112];
            LOBYTE(v112) = v671[v112 + 16];
            v115 = *(_QWORD *)v113;
            v116 = *((_QWORD *)v113 + 1);
            *(_OWORD *)v113 = *(_OWORD *)v114;
            v117 = v113[16];
            v113[16] = v112;
            sub_10006BD8C(v115, v116, v117);
            v118 = *((_QWORD *)v114 + 4);
            *((_QWORD *)v113 + 3) = *((_QWORD *)v114 + 3);
            *((_QWORD *)v113 + 4) = v118;
            swift_bridgeObjectRelease();
            v664 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
            v119 = v664[6];
            v120 = &v113[v119];
            v121 = &v114[v119];
            v122 = type metadata accessor for WeatherDescription(0);
            v123 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v122);
            v124 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, v122);
            if (v123)
            {
              if (!v124)
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v120, v121, v122);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v120, 0, 1, v122);
                goto LABEL_52;
              }
            }
            else
            {
              v125 = *(_QWORD *)(v122 - 8);
              if (!v124)
              {
                (*(void (**)(char *, char *, uint64_t))(v125 + 40))(v120, v121, v122);
LABEL_52:
                v127 = v664;
                if (a1 != v671)
                {
                  v128 = v664[7];
                  v129 = &v113[v128];
                  v130 = &v114[v128];
                  sub_1000215BC((uint64_t)&v113[v128], type metadata accessor for ConditionDetailPlatterViewModel.Body);
                  v131 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
                  switch(swift_getEnumCaseMultiPayload(v130))
                  {
                    case 0u:
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v129, v130, v122);
                      v132 = v129;
                      v133 = v131;
                      v134 = 0;
                      goto LABEL_174;
                    case 2u:
                      v136 = type metadata accessor for AttributedString(0);
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v129, v130, v136);
                      v132 = v129;
                      v133 = v131;
                      v134 = 2;
                      goto LABEL_174;
                    case 3u:
                      v137 = sub_1000BA294(&qword_100BD30F8);
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(v129, v130, v137);
                      v132 = v129;
                      v133 = v131;
                      v134 = 3;
                      goto LABEL_174;
                    case 4u:
                      v621 = v114;
                      v138 = *((_OWORD *)v130 + 1);
                      *(_OWORD *)v129 = *(_OWORD *)v130;
                      *((_OWORD *)v129 + 1) = v138;
                      v139 = type metadata accessor for DetailComponentContainerViewModel(0);
                      v140 = *(int *)(v139 + 20);
                      v141 = &v129[v140];
                      v632 = v130;
                      v142 = &v130[v140];
                      v143 = type metadata accessor for NewsArticleComponentViewModel(0);
                      v644 = v131;
                      if (swift_getEnumCaseMultiPayload(v142) == 1)
                      {
                        v592 = v143;
                        v598 = v139;
                        *(_OWORD *)v141 = *(_OWORD *)v142;
                        v603 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                        v612 = v141;
                        v144 = v603[5];
                        v145 = &v141[v144];
                        v146 = &v142[v144];
                        v147 = type metadata accessor for URL(0);
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, v147))
                        {
                          v148 = sub_1000BA294(&qword_100BD4280);
                          memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
                          v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32);
                        }
                        else
                        {
                          v177 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32);
                          v177(v145, v146, v147);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v145, 0, 1, v147);
                          v149 = v177;
                        }
                        *(_OWORD *)&v612[v603[6]] = *(_OWORD *)&v142[v603[6]];
                        __dstb = v149;
                        v149(&v612[v603[7]], &v142[v603[7]], v147);
                        v178 = v603[8];
                        v179 = &v612[v178];
                        v180 = &v142[v178];
                        v114 = v621;
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v142[v178], 1, v147))
                        {
                          v181 = sub_1000BA294(&qword_100BD4280);
                          memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
                        }
                        else
                        {
                          __dstb(v179, v180, v147);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v179, 0, 1, v147);
                        }
                        v612[v603[9]] = v142[v603[9]];
                        swift_storeEnumTagMultiPayload(v612, v592, 1);
                        v139 = v598;
                      }
                      else
                      {
                        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
                        v114 = v621;
                      }
                      v195 = *(int *)(v139 + 24);
                      v196 = &v129[v195];
                      v197 = (char *)v632 + v195;
                      v198 = type metadata accessor for DetailComponentAction(0);
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198))
                      {
                        v199 = sub_1000BA294(&qword_100BD3100);
                        memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
                      }
                      else
                      {
                        v200 = type metadata accessor for URL(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v196, v197, v200);
                        v201 = sub_1000BA294(&qword_100BC5FE8);
                        v196[*(int *)(v201 + 48)] = v197[*(int *)(v201 + 48)];
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v198);
                      }
                      swift_storeEnumTagMultiPayload(v129, v644, 4);
                      v127 = v664;
                      break;
                    case 6u:
                      v150 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v129, v130, v150);
                      v132 = v129;
                      v133 = v131;
                      v134 = 6;
                      goto LABEL_174;
                    case 7u:
                      v151 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
                      if (swift_getEnumCaseMultiPayload(v130) == 1)
                      {
                        v613 = v151;
                        v645 = v131;
                        *(_OWORD *)v129 = *(_OWORD *)v130;
                        v152 = type metadata accessor for ConditionDetailMapViewModel(0);
                        v153 = *(int *)(v152 + 20);
                        v633 = &v129[v153];
                        v154 = &v130[v153];
                        v155 = type metadata accessor for Location(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v633, v154, v155);
                        v604 = (int *)v152;
                        v156 = *(int *)(v152 + 24);
                        v634 = &v129[v156];
                        v157 = &v130[v156];
                        v158 = type metadata accessor for WeatherData(0);
                        v622 = v157;
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v158))
                        {
                          v159 = sub_1000BA294(&qword_100BC3460);
                          memcpy(v634, v157, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
                        }
                        else
                        {
                          *(_OWORD *)v634 = *(_OWORD *)v157;
                          v600 = (int *)v158;
                          v182 = *(int *)(v158 + 20);
                          v183 = &v634[v182];
                          v184 = &v157[v182];
                          v185 = type metadata accessor for Locale(0);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v185))
                          {
                            v186 = sub_1000BA294(&qword_100BC3340);
                            memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v183, v184, v185);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v185);
                          }
                          v214 = v600[6];
                          __dstd = &v622[v214];
                          v593 = &v634[v214];
                          v215 = type metadata accessor for WeatherDataModel(0);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v593, __dstd, v215);
                          v216 = v600[7];
                          v217 = &v634[v216];
                          v218 = &v622[v216];
                          v219 = sub_1000BA294(&qword_100BC3348);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
                          {
                            v220 = type metadata accessor for WeatherData.CachingState(0);
                            memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v217, v218, v37);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
                          }
                          v225 = v600[8];
                          v226 = &v634[v225];
                          v227 = &v622[v225];
                          v228 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                          if (swift_getEnumCaseMultiPayload(v227) == 1)
                          {
                            v229 = type metadata accessor for WeatherStatisticsModel(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v226, v227, v229);
                            swift_storeEnumTagMultiPayload(v226, v228, 1);
                          }
                          else
                          {
                            memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
                          }
                          v230 = v600[9];
                          v231 = &v634[v230];
                          v232 = &v622[v230];
                          v233 = type metadata accessor for WeatherDataOverrides(0);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v233))
                          {
                            v234 = sub_1000BA294(&qword_100BC3350);
                            memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
                          }
                          else
                          {
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v37))
                            {
                              v288 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                              memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
                            }
                            else
                            {
                              (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v231, v232, v37);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v37);
                            }
                            v309 = *(int *)(v233 + 20);
                            v625 = &v231[v309];
                            v310 = &v232[v309];
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v310, 1, v37))
                            {
                              v311 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                              memcpy(v625, v310, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
                            }
                            else
                            {
                              (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v625, v310, v37);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v625, 0, 1, v37);
                            }
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v233);
                          }
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v634, 0, 1, (uint64_t)v600);
                          v127 = v664;
                        }
                        *(_OWORD *)&v129[v604[7]] = *(_OWORD *)&v130[v604[7]];
                        v316 = v604[8];
                        v638 = &v129[v316];
                        v317 = &v130[v316];
                        v318 = type metadata accessor for WeatherMapOverlayKind(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v318 - 8) + 32))(v638, v317, v318);
                        v129[v604[9]] = v130[v604[9]];
                        swift_storeEnumTagMultiPayload(v129, v613, 1);
                        v131 = v645;
                      }
                      else
                      {
                        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
                      }
                      v132 = v129;
                      v133 = v131;
                      v134 = 7;
LABEL_174:
                      swift_storeEnumTagMultiPayload(v132, v133, v134);
                      break;
                    default:
                      memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
                      break;
                  }
                }
                v319 = v127[8];
                v320 = &v113[v319];
                v321 = &v114[v319];
                v322 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
                v323 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v320, 1, v322);
                v324 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v321, 1, v322);
                if (v323)
                {
                  if (!v324)
                  {
                    switch(swift_getEnumCaseMultiPayload(v321))
                    {
                      case 0u:
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v320, v321, v122);
                        v325 = v320;
                        v326 = v322;
                        v327 = 0;
                        goto LABEL_283;
                      case 2u:
                        v332 = type metadata accessor for AttributedString(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v332 - 8) + 32))(v320, v321, v332);
                        v325 = v320;
                        v326 = v322;
                        v327 = 2;
                        goto LABEL_283;
                      case 3u:
                        v333 = sub_1000BA294(&qword_100BD30F8);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v333 - 8) + 32))(v320, v321, v333);
                        v325 = v320;
                        v326 = v322;
                        v327 = 3;
                        goto LABEL_283;
                      case 4u:
                        v334 = *((_OWORD *)v321 + 1);
                        *(_OWORD *)v320 = *(_OWORD *)v321;
                        *((_OWORD *)v320 + 1) = v334;
                        v335 = type metadata accessor for DetailComponentContainerViewModel(0);
                        v336 = *(int *)(v335 + 20);
                        v337 = &v320[v336];
                        v338 = &v321[v336];
                        v339 = type metadata accessor for NewsArticleComponentViewModel(0);
                        v649 = v322;
                        if (swift_getEnumCaseMultiPayload(v338) == 1)
                        {
                          v626 = (void *)v335;
                          v639 = v339;
                          *(_OWORD *)v337 = *(_OWORD *)v338;
                          v658 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                          v340 = v658[5];
                          v341 = &v337[v340];
                          v342 = &v338[v340];
                          v343 = type metadata accessor for URL(0);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v342, 1, v343))
                          {
                            v344 = sub_1000BA294(&qword_100BD4280);
                            memcpy(v341, v342, *(_QWORD *)(*(_QWORD *)(v344 - 8) + 64));
                            v345 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 32);
                          }
                          else
                          {
                            v384 = v342;
                            v385 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 32);
                            v385(v341, v384, v343);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v341, 0, 1, v343);
                            v345 = v385;
                          }
                          *(_OWORD *)&v337[v658[6]] = *(_OWORD *)&v338[v658[6]];
                          v615 = v345;
                          v345(&v337[v658[7]], &v338[v658[7]], v343);
                          v386 = v658[8];
                          v387 = &v337[v386];
                          v388 = &v338[v386];
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v338[v386], 1, v343))
                          {
                            v389 = sub_1000BA294(&qword_100BD4280);
                            memcpy(v387, v388, *(_QWORD *)(*(_QWORD *)(v389 - 8) + 64));
                          }
                          else
                          {
                            v615(v387, v388, v343);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v387, 0, 1, v343);
                          }
                          v335 = (uint64_t)v626;
                          v337[v658[9]] = v338[v658[9]];
                          swift_storeEnumTagMultiPayload(v337, v639, 1);
                        }
                        else
                        {
                          memcpy(v337, v338, *(_QWORD *)(*(_QWORD *)(v339 - 8) + 64));
                        }
                        v395 = *(int *)(v335 + 24);
                        v396 = &v320[v395];
                        v397 = &v321[v395];
                        v398 = type metadata accessor for DetailComponentAction(0);
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v397, 1, v398))
                        {
                          v399 = sub_1000BA294(&qword_100BD3100);
                          memcpy(v396, v397, *(_QWORD *)(*(_QWORD *)(v399 - 8) + 64));
                        }
                        else
                        {
                          v400 = type metadata accessor for URL(0);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v400 - 8) + 32))(v396, v397, v400);
                          v401 = sub_1000BA294(&qword_100BC5FE8);
                          v396[*(int *)(v401 + 48)] = v397[*(int *)(v401 + 48)];
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v396, 0, 1, v398);
                        }
                        v322 = v649;
                        swift_storeEnumTagMultiPayload(v320, v649, 4);
                        v127 = v664;
                        break;
                      case 6u:
                        v346 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 32))(v320, v321, v346);
                        v325 = v320;
                        v326 = v322;
                        v327 = 6;
                        goto LABEL_283;
                      case 7u:
                        v347 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
                        if (swift_getEnumCaseMultiPayload(v321) == 1)
                        {
                          v640 = v347;
                          v650 = v322;
                          *(_OWORD *)v320 = *(_OWORD *)v321;
                          v348 = type metadata accessor for ConditionDetailMapViewModel(0);
                          v349 = *(int *)(v348 + 20);
                          v350 = &v320[v349];
                          v351 = &v321[v349];
                          v352 = type metadata accessor for Location(0);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v352 - 8) + 32))(v350, v351, v352);
                          v627 = (int *)v348;
                          v353 = *(int *)(v348 + 24);
                          v354 = &v320[v353];
                          v355 = &v321[v353];
                          v356 = type metadata accessor for WeatherData(0);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v355, 1, v356))
                          {
                            v357 = sub_1000BA294(&qword_100BC3460);
                            memcpy(v354, v355, *(_QWORD *)(*(_QWORD *)(v357 - 8) + 64));
                          }
                          else
                          {
                            *(_OWORD *)v354 = *(_OWORD *)v355;
                            v608 = v354;
                            v616 = (int *)v356;
                            v390 = *(int *)(v356 + 20);
                            v391 = &v354[v390];
                            v392 = &v355[v390];
                            v393 = type metadata accessor for Locale(0);
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v392, 1, v393))
                            {
                              v394 = sub_1000BA294(&qword_100BC3340);
                              memcpy(v391, v392, *(_QWORD *)(*(_QWORD *)(v394 - 8) + 64));
                            }
                            else
                            {
                              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v393 - 8) + 32))(v391, v392, v393);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v391, 0, 1, v393);
                            }
                            v452 = v616[6];
                            v595 = (char *)v608 + v452;
                            v453 = &v355[v452];
                            v454 = type metadata accessor for WeatherDataModel(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 32))(v595, v453, v454);
                            v455 = v616[7];
                            v456 = (char *)v608 + v455;
                            v457 = &v355[v455];
                            v458 = sub_1000BA294(&qword_100BC3348);
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v457, 1, v458))
                            {
                              v459 = type metadata accessor for WeatherData.CachingState(0);
                              memcpy(v456, v457, *(_QWORD *)(*(_QWORD *)(v459 - 8) + 64));
                            }
                            else
                            {
                              (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v456, v457, v37);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v456, 0, 1, v458);
                            }
                            v467 = v616[8];
                            v468 = (char *)v608 + v467;
                            v469 = &v355[v467];
                            v470 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                            if (swift_getEnumCaseMultiPayload(v469) == 1)
                            {
                              v471 = type metadata accessor for WeatherStatisticsModel(0);
                              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v471 - 8) + 32))(v468, v469, v471);
                              swift_storeEnumTagMultiPayload(v468, v470, 1);
                            }
                            else
                            {
                              memcpy(v468, v469, *(_QWORD *)(*(_QWORD *)(v470 - 8) + 64));
                            }
                            v472 = (uint64_t)v608;
                            v473 = v616[9];
                            v474 = (char *)v608 + v473;
                            v475 = &v355[v473];
                            v476 = type metadata accessor for WeatherDataOverrides(0);
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v475, 1, v476))
                            {
                              v477 = sub_1000BA294(&qword_100BC3350);
                              memcpy(v474, v475, *(_QWORD *)(*(_QWORD *)(v477 - 8) + 64));
                            }
                            else
                            {
                              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v475, 1, v37))
                              {
                                v478 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                                memcpy(v474, v475, *(_QWORD *)(*(_QWORD *)(v478 - 8) + 64));
                              }
                              else
                              {
                                (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v474, v475, v37);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v474, 0, 1, v37);
                              }
                              v487 = *(int *)(v476 + 20);
                              v488 = &v474[v487];
                              v489 = &v475[v487];
                              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v489, 1, v37))
                              {
                                v490 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                                memcpy(v488, v489, *(_QWORD *)(*(_QWORD *)(v490 - 8) + 64));
                              }
                              else
                              {
                                (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v488, v489, v37);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v488, 0, 1, v37);
                              }
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v474, 0, 1, v476);
                              v472 = (uint64_t)v608;
                            }
                            _s7Weather24LocationCompositionStateOwst_0(v472, 0, 1, (uint64_t)v616);
                            v127 = v664;
                          }
                          *(_OWORD *)&v320[v627[7]] = *(_OWORD *)&v321[v627[7]];
                          v502 = v627[8];
                          v503 = &v320[v502];
                          v504 = &v321[v502];
                          v505 = type metadata accessor for WeatherMapOverlayKind(0);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v505 - 8) + 32))(v503, v504, v505);
                          v320[v627[9]] = v321[v627[9]];
                          swift_storeEnumTagMultiPayload(v320, v640, 1);
                          v322 = v650;
                        }
                        else
                        {
                          memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v347 - 8) + 64));
                        }
                        v325 = v320;
                        v326 = v322;
                        v327 = 7;
LABEL_283:
                        swift_storeEnumTagMultiPayload(v325, v326, v327);
                        break;
                      default:
                        memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v322 - 8) + 64));
                        break;
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v320, 0, 1, v322);
                    goto LABEL_296;
                  }
                }
                else
                {
                  if (!v324)
                  {
                    if (a1 != v671)
                    {
                      sub_1000215BC((uint64_t)v320, type metadata accessor for ConditionDetailPlatterViewModel.Body);
                      switch(swift_getEnumCaseMultiPayload(v321))
                      {
                        case 0u:
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v320, v321, v122);
                          v329 = v320;
                          v330 = v322;
                          v331 = 0;
                          goto LABEL_295;
                        case 2u:
                          v358 = type metadata accessor for AttributedString(0);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v358 - 8) + 32))(v320, v321, v358);
                          v329 = v320;
                          v330 = v322;
                          v331 = 2;
                          goto LABEL_295;
                        case 3u:
                          v359 = sub_1000BA294(&qword_100BD30F8);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v359 - 8) + 32))(v320, v321, v359);
                          v329 = v320;
                          v330 = v322;
                          v331 = 3;
                          goto LABEL_295;
                        case 4u:
                          v360 = *((_OWORD *)v321 + 1);
                          *(_OWORD *)v320 = *(_OWORD *)v321;
                          *((_OWORD *)v320 + 1) = v360;
                          v361 = type metadata accessor for DetailComponentContainerViewModel(0);
                          v362 = *(int *)(v361 + 20);
                          v363 = &v320[v362];
                          v364 = &v321[v362];
                          v365 = type metadata accessor for NewsArticleComponentViewModel(0);
                          v651 = v322;
                          if (swift_getEnumCaseMultiPayload(v364) == 1)
                          {
                            v628 = (void *)v361;
                            v641 = v365;
                            *(_OWORD *)v363 = *(_OWORD *)v364;
                            v659 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                            v366 = v659[5];
                            v367 = &v363[v366];
                            v368 = &v364[v366];
                            v369 = type metadata accessor for URL(0);
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v368, 1, v369))
                            {
                              v370 = sub_1000BA294(&qword_100BD4280);
                              memcpy(v367, v368, *(_QWORD *)(*(_QWORD *)(v370 - 8) + 64));
                              v371 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 32);
                            }
                            else
                            {
                              v441 = v368;
                              v442 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 32);
                              v442(v367, v441, v369);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v367, 0, 1, v369);
                              v371 = v442;
                            }
                            *(_OWORD *)&v363[v659[6]] = *(_OWORD *)&v364[v659[6]];
                            v617 = v371;
                            v371(&v363[v659[7]], &v364[v659[7]], v369);
                            v443 = v659[8];
                            v444 = &v363[v443];
                            v445 = &v364[v443];
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v364[v443], 1, v369))
                            {
                              v446 = sub_1000BA294(&qword_100BD4280);
                              memcpy(v444, v445, *(_QWORD *)(*(_QWORD *)(v446 - 8) + 64));
                            }
                            else
                            {
                              v617(v444, v445, v369);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v444, 0, 1, v369);
                            }
                            v361 = (uint64_t)v628;
                            v363[v659[9]] = v364[v659[9]];
                            swift_storeEnumTagMultiPayload(v363, v641, 1);
                          }
                          else
                          {
                            memcpy(v363, v364, *(_QWORD *)(*(_QWORD *)(v365 - 8) + 64));
                          }
                          v460 = *(int *)(v361 + 24);
                          v461 = &v320[v460];
                          v462 = &v321[v460];
                          v463 = type metadata accessor for DetailComponentAction(0);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v462, 1, v463))
                          {
                            v464 = sub_1000BA294(&qword_100BD3100);
                            memcpy(v461, v462, *(_QWORD *)(*(_QWORD *)(v464 - 8) + 64));
                          }
                          else
                          {
                            v465 = type metadata accessor for URL(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v465 - 8) + 32))(v461, v462, v465);
                            v466 = sub_1000BA294(&qword_100BC5FE8);
                            v461[*(int *)(v466 + 48)] = v462[*(int *)(v466 + 48)];
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v461, 0, 1, v463);
                          }
                          swift_storeEnumTagMultiPayload(v320, v651, 4);
                          v127 = v664;
                          break;
                        case 6u:
                          v372 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v372 - 8) + 32))(v320, v321, v372);
                          v329 = v320;
                          v330 = v322;
                          v331 = 6;
                          goto LABEL_295;
                        case 7u:
                          v373 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
                          if (swift_getEnumCaseMultiPayload(v321) == 1)
                          {
                            v642 = v373;
                            v652 = v322;
                            *(_OWORD *)v320 = *(_OWORD *)v321;
                            v374 = type metadata accessor for ConditionDetailMapViewModel(0);
                            v375 = *(int *)(v374 + 20);
                            v376 = &v320[v375];
                            v377 = &v321[v375];
                            v378 = type metadata accessor for Location(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v378 - 8) + 32))(v376, v377, v378);
                            v629 = (int *)v374;
                            v379 = *(int *)(v374 + 24);
                            v380 = &v320[v379];
                            v381 = &v321[v379];
                            v382 = type metadata accessor for WeatherData(0);
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v381, 1, v382))
                            {
                              v383 = sub_1000BA294(&qword_100BC3460);
                              memcpy(v380, v381, *(_QWORD *)(*(_QWORD *)(v383 - 8) + 64));
                            }
                            else
                            {
                              *(_OWORD *)v380 = *(_OWORD *)v381;
                              v609 = v380;
                              v618 = (int *)v382;
                              v447 = *(int *)(v382 + 20);
                              v448 = &v380[v447];
                              v449 = &v381[v447];
                              v450 = type metadata accessor for Locale(0);
                              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v449, 1, v450))
                              {
                                v451 = sub_1000BA294(&qword_100BC3340);
                                memcpy(v448, v449, *(_QWORD *)(*(_QWORD *)(v451 - 8) + 64));
                              }
                              else
                              {
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v450 - 8) + 32))(v448, v449, v450);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v448, 0, 1, v450);
                              }
                              v479 = v618[6];
                              v596 = (char *)v609 + v479;
                              v480 = &v381[v479];
                              v481 = type metadata accessor for WeatherDataModel(0);
                              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v481 - 8) + 32))(v596, v480, v481);
                              v482 = v618[7];
                              v483 = (char *)v609 + v482;
                              v484 = &v381[v482];
                              v485 = sub_1000BA294(&qword_100BC3348);
                              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v484, 1, v485))
                              {
                                v486 = type metadata accessor for WeatherData.CachingState(0);
                                memcpy(v483, v484, *(_QWORD *)(*(_QWORD *)(v486 - 8) + 64));
                              }
                              else
                              {
                                (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v483, v484, v37);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v483, 0, 1, v485);
                              }
                              v491 = v618[8];
                              v492 = (char *)v609 + v491;
                              v493 = &v381[v491];
                              v494 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                              if (swift_getEnumCaseMultiPayload(v493) == 1)
                              {
                                v495 = type metadata accessor for WeatherStatisticsModel(0);
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v495 - 8) + 32))(v492, v493, v495);
                                swift_storeEnumTagMultiPayload(v492, v494, 1);
                              }
                              else
                              {
                                memcpy(v492, v493, *(_QWORD *)(*(_QWORD *)(v494 - 8) + 64));
                              }
                              v496 = (uint64_t)v609;
                              v497 = v618[9];
                              v498 = (char *)v609 + v497;
                              v499 = &v381[v497];
                              v500 = type metadata accessor for WeatherDataOverrides(0);
                              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v499, 1, v500))
                              {
                                v501 = sub_1000BA294(&qword_100BC3350);
                                memcpy(v498, v499, *(_QWORD *)(*(_QWORD *)(v501 - 8) + 64));
                              }
                              else
                              {
                                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v499, 1, v37))
                                {
                                  v506 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                                  memcpy(v498, v499, *(_QWORD *)(*(_QWORD *)(v506 - 8) + 64));
                                }
                                else
                                {
                                  (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v498, v499, v37);
                                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v498, 0, 1, v37);
                                }
                                v507 = *(int *)(v500 + 20);
                                v508 = &v498[v507];
                                v509 = &v499[v507];
                                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v509, 1, v37))
                                {
                                  v510 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                                  memcpy(v508, v509, *(_QWORD *)(*(_QWORD *)(v510 - 8) + 64));
                                }
                                else
                                {
                                  (*(void (**)(char *, char *, uint64_t))(v653 + 32))(v508, v509, v37);
                                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v508, 0, 1, v37);
                                }
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v498, 0, 1, v500);
                                v496 = (uint64_t)v609;
                              }
                              _s7Weather24LocationCompositionStateOwst_0(v496, 0, 1, (uint64_t)v618);
                              v127 = v664;
                            }
                            *(_OWORD *)&v320[v629[7]] = *(_OWORD *)&v321[v629[7]];
                            v511 = v629[8];
                            v512 = &v320[v511];
                            v513 = &v321[v511];
                            v514 = type metadata accessor for WeatherMapOverlayKind(0);
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 32))(v512, v513, v514);
                            v320[v629[9]] = v321[v629[9]];
                            swift_storeEnumTagMultiPayload(v320, v642, 1);
                            v322 = v652;
                          }
                          else
                          {
                            memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v373 - 8) + 64));
                          }
                          v329 = v320;
                          v330 = v322;
                          v331 = 7;
LABEL_295:
                          swift_storeEnumTagMultiPayload(v329, v330, v331);
                          break;
                        default:
                          v328 = *(_QWORD *)(v322 - 8);
                          goto LABEL_182;
                      }
                    }
LABEL_296:
                    v113[v127[9]] = v114[v127[9]];
                    v113[v127[10]] = v114[v127[10]];
                    v516 = v670;
                    v515 = v671;
                    *(_QWORD *)&a1[v670[12]] = *(_QWORD *)&v671[v670[12]];
                    swift_bridgeObjectRelease();
                    v517 = v670[13];
                    v518 = (uint64_t)&a1[v517];
                    v519 = (uint64_t)&v671[v517];
                    v520 = type metadata accessor for DetailComponentContainerViewModel(0);
                    v521 = _s7Weather24LocationCompositionStateOwet_0(v518, 1, v520);
                    v522 = _s7Weather24LocationCompositionStateOwet_0(v519, 1, v520);
                    if (v521)
                    {
                      if (!v522)
                      {
                        v523 = *(_OWORD *)(v519 + 16);
                        *(_OWORD *)v518 = *(_OWORD *)v519;
                        *(_OWORD *)(v518 + 16) = v523;
                        v524 = *(int *)(v520 + 20);
                        v525 = (char *)(v518 + v524);
                        v526 = (char *)(v519 + v524);
                        v527 = type metadata accessor for NewsArticleComponentViewModel(0);
                        if (swift_getEnumCaseMultiPayload(v526) == 1)
                        {
                          v667 = (void *)v527;
                          *(_OWORD *)v525 = *(_OWORD *)v526;
                          v528 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                          v529 = v528[5];
                          v530 = &v525[v529];
                          v531 = &v526[v529];
                          v532 = type metadata accessor for URL(0);
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v531, 1, v532))
                          {
                            v533 = sub_1000BA294(&qword_100BD4280);
                            memcpy(v530, v531, *(_QWORD *)(*(_QWORD *)(v533 - 8) + 64));
                            v534 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v532 - 8) + 32);
                          }
                          else
                          {
                            v540 = v531;
                            v534 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v532 - 8) + 32);
                            v534(v530, v540, v532);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v530, 0, 1, v532);
                          }
                          *(_OWORD *)&v525[v528[6]] = *(_OWORD *)&v526[v528[6]];
                          v661 = v534;
                          v534(&v525[v528[7]], &v526[v528[7]], v532);
                          v541 = v528[8];
                          v542 = &v525[v541];
                          v543 = &v526[v541];
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v526[v541], 1, v532))
                          {
                            v544 = sub_1000BA294(&qword_100BD4280);
                            memcpy(v542, v543, *(_QWORD *)(*(_QWORD *)(v544 - 8) + 64));
                          }
                          else
                          {
                            v661(v542, v543, v532);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v542, 0, 1, v532);
                          }
                          v525[v528[9]] = v526[v528[9]];
                          swift_storeEnumTagMultiPayload(v525, v667, 1);
                          v516 = v670;
                        }
                        else
                        {
                          memcpy(v525, v526, *(_QWORD *)(*(_QWORD *)(v527 - 8) + 64));
                        }
                        v545 = *(int *)(v520 + 24);
                        v546 = (void *)(v518 + v545);
                        v547 = (const void *)(v519 + v545);
                        v548 = type metadata accessor for DetailComponentAction(0);
                        v515 = v671;
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v547, 1, v548))
                        {
                          v549 = sub_1000BA294(&qword_100BD3100);
                          memcpy(v546, v547, *(_QWORD *)(*(_QWORD *)(v549 - 8) + 64));
                        }
                        else
                        {
                          v550 = type metadata accessor for URL(0);
                          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v550 - 8) + 32))(v546, v547, v550);
                          v551 = sub_1000BA294(&qword_100BC5FE8);
                          *((_BYTE *)v546 + *(int *)(v551 + 48)) = *((_BYTE *)v547 + *(int *)(v551 + 48));
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v546, 0, 1, v548);
                        }
                        v552 = v518;
                        v553 = v520;
                        goto LABEL_318;
                      }
                      goto LABEL_303;
                    }
                    if (v522)
                    {
                      sub_1000215BC(v518, type metadata accessor for DetailComponentContainerViewModel);
LABEL_303:
                      v535 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC68A0) - 8) + 64);
                      v536 = (void *)v518;
                      v537 = (const void *)v519;
                      goto LABEL_304;
                    }
                    if (*(_QWORD *)(v518 + 8))
                    {
                      v538 = *(_QWORD *)(v519 + 8);
                      if (v538)
                      {
                        *(_QWORD *)v518 = *(_QWORD *)v519;
                        *(_QWORD *)(v518 + 8) = v538;
                        swift_bridgeObjectRelease();
                        v539 = *(_QWORD *)(v519 + 24);
                        *(_QWORD *)(v518 + 16) = *(_QWORD *)(v519 + 16);
                        *(_QWORD *)(v518 + 24) = v539;
                        swift_bridgeObjectRelease();
LABEL_323:
                        if (a1 != v671)
                        {
                          v560 = *(int *)(v520 + 20);
                          v561 = (char *)(v518 + v560);
                          v562 = (char *)(v519 + v560);
                          sub_1000215BC(v518 + v560, type metadata accessor for NewsArticleComponentViewModel);
                          v563 = type metadata accessor for NewsArticleComponentViewModel(0);
                          if (swift_getEnumCaseMultiPayload(v562) == 1)
                          {
                            v668 = (void *)v563;
                            *(_OWORD *)v561 = *(_OWORD *)v562;
                            v564 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                            v565 = v564[5];
                            v566 = &v561[v565];
                            v567 = &v562[v565];
                            v568 = type metadata accessor for URL(0);
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v567, 1, v568))
                            {
                              v569 = sub_1000BA294(&qword_100BD4280);
                              memcpy(v566, v567, *(_QWORD *)(*(_QWORD *)(v569 - 8) + 64));
                              v570 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v568 - 8) + 32);
                            }
                            else
                            {
                              v571 = v567;
                              v570 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v568 - 8) + 32);
                              v570(v566, v571, v568);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v566, 0, 1, v568);
                            }
                            *(_OWORD *)&v561[v564[6]] = *(_OWORD *)&v562[v564[6]];
                            v662 = v570;
                            v570(&v561[v564[7]], &v562[v564[7]], v568);
                            v572 = v564[8];
                            v573 = &v561[v572];
                            v574 = &v562[v572];
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v562[v572], 1, v568))
                            {
                              v575 = sub_1000BA294(&qword_100BD4280);
                              memcpy(v573, v574, *(_QWORD *)(*(_QWORD *)(v575 - 8) + 64));
                            }
                            else
                            {
                              v662(v573, v574, v568);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v573, 0, 1, v568);
                            }
                            v561[v564[9]] = v562[v564[9]];
                            swift_storeEnumTagMultiPayload(v561, v668, 1);
                            v516 = v670;
                            v515 = v671;
                          }
                          else
                          {
                            memcpy(v561, v562, *(_QWORD *)(*(_QWORD *)(v563 - 8) + 64));
                            v515 = v671;
                          }
                        }
                        v576 = *(int *)(v520 + 24);
                        v577 = v518 + v576;
                        v578 = v519 + v576;
                        v579 = type metadata accessor for DetailComponentAction(0);
                        v580 = _s7Weather24LocationCompositionStateOwet_0(v577, 1, v579);
                        v581 = _s7Weather24LocationCompositionStateOwet_0(v578, 1, v579);
                        if (v580)
                        {
                          if (!v581)
                          {
                            v582 = type metadata accessor for URL(0);
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v582 - 8) + 32))(v577, v578, v582);
                            v583 = sub_1000BA294(&qword_100BC5FE8);
                            *(_BYTE *)(v577 + *(int *)(v583 + 48)) = *(_BYTE *)(v578 + *(int *)(v583 + 48));
                            v552 = v577;
                            v553 = v579;
LABEL_318:
                            _s7Weather24LocationCompositionStateOwst_0(v552, 0, 1, v553);
                            goto LABEL_319;
                          }
                        }
                        else
                        {
                          if (!v581)
                          {
                            v584 = type metadata accessor for URL(0);
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v584 - 8) + 40))(v577, v578, v584);
                            v585 = sub_1000BA294(&qword_100BC5FE8);
                            *(_BYTE *)(v577 + *(int *)(v585 + 48)) = *(_BYTE *)(v578 + *(int *)(v585 + 48));
                            goto LABEL_319;
                          }
                          sub_1000215BC(v577, type metadata accessor for DetailComponentAction);
                        }
                        v535 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD3100) - 8) + 64);
                        v536 = (void *)v577;
                        v537 = (const void *)v578;
LABEL_304:
                        memcpy(v536, v537, v535);
LABEL_319:
                        v554 = v516[14];
                        v555 = &a1[v554];
                        v556 = &v515[v554];
                        v557 = type metadata accessor for Location(0);
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v557 - 8) + 40))(v555, v556, v557);
                        a1[v516[15]] = v515[v516[15]];
                        return a1;
                      }
                      sub_10035C44C(v518);
                    }
                    v559 = *(_OWORD *)(v519 + 16);
                    *(_OWORD *)v518 = *(_OWORD *)v519;
                    *(_OWORD *)(v518 + 16) = v559;
                    goto LABEL_323;
                  }
                  sub_1000215BC((uint64_t)v320, type metadata accessor for ConditionDetailPlatterViewModel.Body);
                }
                v328 = *(_QWORD *)(sub_1000BA294(&qword_100BD3108) - 8);
LABEL_182:
                memcpy(v320, v321, *(_QWORD *)(v328 + 64));
                goto LABEL_296;
              }
              (*(void (**)(char *, uint64_t))(v125 + 8))(v120, v122);
            }
            v126 = sub_1000BA294(&qword_100BC3368);
            memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            goto LABEL_52;
          }
          (*(void (**)(char *, uint64_t))(v653 + 8))(v72, v37);
        }
        v76 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v653 + 8))(v41, v37);
    }
    v70 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_25;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for MoonDetailSelectedDate(0);
  v10 = swift_getEnumCaseMultiPayload(a2);
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(a1, a2, v11);
  swift_storeEnumTagMultiPayload(a1, v9, v10);
  *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
  *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
  v13 = v6[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v12(&a1[v13], &a2[v13], v11);
  v16 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)&v14[v16[5]] = *(_QWORD *)&v15[v16[5]];
  v17 = v16[6];
  v18 = &v14[v17];
  v19 = &v15[v17];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v15[v17], 1, v11))
  {
    v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v12(v18, v19, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v11);
  }
  v45 = v16[7];
  v46 = &v14[v45];
  v47 = &v15[v45];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v15[v45], 1, v11))
  {
    v48 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v12(v46, v47, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v11);
  }
  v14[v16[8]] = v15[v16[8]];
  v49 = v6[8];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = *(_OWORD *)&a2[v49 + 16];
  *(_OWORD *)v50 = *(_OWORD *)&a2[v49];
  *((_OWORD *)v50 + 1) = v52;
  *((_OWORD *)v50 + 2) = *(_OWORD *)&a2[v49 + 32];
  v50[48] = a2[v49 + 48];
  v53 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v12(&v50[v53[8]], &v51[v53[8]], v11);
  v12(&v50[v53[9]], &v51[v53[9]], v11);
  v50[v53[10]] = v51[v53[10]];
  *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
  *(_OWORD *)&a1[v6[10]] = *(_OWORD *)&a2[v6[10]];
  v669 = v6;
  v54 = v6[11];
  v55 = &a1[v54];
  v56 = &a2[v54];
  *(_OWORD *)v55 = *(_OWORD *)&a2[v54];
  v55[16] = a2[v54 + 16];
  *(_OWORD *)(v55 + 24) = *(_OWORD *)&a2[v54 + 24];
  v57 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v58 = v57[6];
  v59 = &v55[v58];
  v60 = &v56[v58];
  v61 = type metadata accessor for WeatherDescription(0);
  v672 = a2;
  v663 = v12;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
  {
    v62 = sub_1000BA294(&qword_100BC3368);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
  }
  v63 = v57[7];
  v64 = &v55[v63];
  v65 = &v56[v63];
  v66 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v65))
  {
    case 0u:
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v64, v65, v61);
      v67 = v64;
      v68 = v66;
      v69 = 0;
      goto LABEL_122;
    case 2u:
      v87 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v64, v65, v87);
      v67 = v64;
      v68 = v66;
      v69 = 2;
      goto LABEL_122;
    case 3u:
      v88 = sub_1000BA294(&qword_100BD30F8);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v64, v65, v88);
      v67 = v64;
      v68 = v66;
      v69 = 3;
      goto LABEL_122;
    case 4u:
      v630 = v61;
      v89 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v89;
      v610 = type metadata accessor for DetailComponentContainerViewModel(0);
      v619 = v64;
      v90 = *(int *)(v610 + 20);
      v91 = &v64[v90];
      v92 = &v65[v90];
      v93 = type metadata accessor for NewsArticleComponentViewModel(0);
      v643 = v57;
      v654 = v66;
      if (swift_getEnumCaseMultiPayload(v92) == 1)
      {
        v597 = v93;
        *(_OWORD *)v91 = *(_OWORD *)v92;
        v602 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v94 = v602[5];
        __dst = &v91[v94];
        v591 = v92;
        v95 = &v92[v94];
        v96 = type metadata accessor for URL(0);
        v97 = v91;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          v98 = sub_1000BA294(&qword_100BD4280);
          memcpy(__dst, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
          v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32);
        }
        else
        {
          v160 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32);
          v160(__dst, v95, v96);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v96);
          v99 = v160;
        }
        *(_OWORD *)&v97[v602[6]] = *(_OWORD *)&v92[v602[6]];
        __dsta = v99;
        v99(&v97[v602[7]], &v92[v602[7]], v96);
        v161 = v602[8];
        v162 = &v97[v161];
        v163 = (char *)v591 + v161;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v591 + v161, 1, v96))
        {
          v164 = sub_1000BA294(&qword_100BD4280);
          memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
        }
        else
        {
          __dsta(v162, v163, v96);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v96);
        }
        v135 = v610;
        v97[v602[9]] = *((_BYTE *)v591 + v602[9]);
        swift_storeEnumTagMultiPayload(v97, v597, 1);
      }
      else
      {
        memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        v135 = v610;
      }
      v170 = *(int *)(v135 + 24);
      v171 = &v619[v170];
      v172 = &v65[v170];
      v173 = type metadata accessor for DetailComponentAction(0);
      v61 = v630;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v173))
      {
        v174 = sub_1000BA294(&qword_100BD3100);
        memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
      }
      else
      {
        v175 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v171, v172, v175);
        v176 = sub_1000BA294(&qword_100BC5FE8);
        v171[*(int *)(v176 + 48)] = v172[*(int *)(v176 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v173);
      }
      v66 = v654;
      swift_storeEnumTagMultiPayload(v619, v654, 4);
      v57 = v643;
      break;
    case 6u:
      v100 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v64, v65, v100);
      v67 = v64;
      v68 = v66;
      v69 = 6;
      goto LABEL_122;
    case 7u:
      v101 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      if (swift_getEnumCaseMultiPayload(v65) == 1)
      {
        v620 = (void *)v101;
        v631 = v61;
        v655 = v66;
        *(_OWORD *)v64 = *(_OWORD *)v65;
        v102 = type metadata accessor for ConditionDetailMapViewModel(0);
        v103 = *(int *)(v102 + 20);
        v104 = &v64[v103];
        v105 = &v65[v103];
        v106 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
        v611 = (int *)v102;
        v107 = *(int *)(v102 + 24);
        v108 = &v64[v107];
        v109 = &v65[v107];
        v110 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
        {
          v111 = sub_1000BA294(&qword_100BC3460);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          v646 = v57;
          *(_OWORD *)v108 = *(_OWORD *)v109;
          v599 = v108;
          v605 = (int *)v110;
          v165 = *(int *)(v110 + 20);
          v166 = &v108[v165];
          v167 = &v109[v165];
          v168 = type metadata accessor for Locale(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v168))
          {
            v169 = sub_1000BA294(&qword_100BC3340);
            memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v166, v167, v168);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v166, 0, 1, v168);
          }
          v187 = v605[6];
          __dstc = (char *)v599 + v187;
          v188 = &v109[v187];
          v189 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(__dstc, v188, v189);
          v190 = v605[7];
          v191 = (char *)v599 + v190;
          v192 = &v109[v190];
          v193 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
          {
            v194 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
          }
          else
          {
            v663(v191, v192, v11);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
          }
          v202 = v605[8];
          v203 = (char *)v599 + v202;
          v204 = &v109[v202];
          v205 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v204) == 1)
          {
            v206 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v203, v204, v206);
            swift_storeEnumTagMultiPayload(v203, v205, 1);
          }
          else
          {
            memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
          }
          v207 = (uint64_t)v599;
          v208 = v605[9];
          v209 = (char *)v599 + v208;
          v210 = &v109[v208];
          v211 = type metadata accessor for WeatherDataOverrides(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v210, 1, v211))
          {
            v212 = sub_1000BA294(&qword_100BC3350);
            memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v210, 1, v11))
            {
              v213 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
            }
            else
            {
              v663(v209, v210, v11);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v209, 0, 1, v11);
            }
            v221 = *(int *)(v211 + 20);
            v222 = &v209[v221];
            v223 = &v210[v221];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v11))
            {
              v224 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
            }
            else
            {
              v663(v222, v223, v11);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v11);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v209, 0, 1, v211);
            v207 = (uint64_t)v599;
          }
          _s7Weather24LocationCompositionStateOwst_0(v207, 0, 1, (uint64_t)v605);
          v57 = v646;
        }
        v61 = v631;
        *(_OWORD *)&v64[v611[7]] = *(_OWORD *)&v65[v611[7]];
        v235 = v611[8];
        v635 = &v64[v235];
        v236 = &v65[v235];
        v237 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 32))(v635, v236, v237);
        v64[v611[9]] = v65[v611[9]];
        swift_storeEnumTagMultiPayload(v64, v620, 1);
        v66 = v655;
      }
      else
      {
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      v67 = v64;
      v68 = v66;
      v69 = 7;
LABEL_122:
      swift_storeEnumTagMultiPayload(v67, v68, v69);
      break;
    default:
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      break;
  }
  v238 = v57[8];
  v239 = &v55[v238];
  v240 = &v56[v238];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v56[v238], 1, v66))
  {
    v241 = sub_1000BA294(&qword_100BD3108);
    memcpy(v239, v240, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v240))
    {
      case 0u:
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v239, v240, v61);
        v242 = v239;
        v243 = v66;
        v244 = 0;
        goto LABEL_226;
      case 2u:
        v245 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v239, v240, v245);
        v242 = v239;
        v243 = v66;
        v244 = 2;
        goto LABEL_226;
      case 3u:
        v246 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 32))(v239, v240, v246);
        v242 = v239;
        v243 = v66;
        v244 = 3;
        goto LABEL_226;
      case 4u:
        v247 = *((_OWORD *)v240 + 1);
        *(_OWORD *)v239 = *(_OWORD *)v240;
        *((_OWORD *)v239 + 1) = v247;
        v248 = type metadata accessor for DetailComponentContainerViewModel(0);
        v249 = *(int *)(v248 + 20);
        v665 = &v239[v249];
        v250 = &v240[v249];
        v251 = type metadata accessor for NewsArticleComponentViewModel(0);
        v647 = v57;
        v656 = v66;
        if (swift_getEnumCaseMultiPayload(v250) == 1)
        {
          v623 = (void *)v248;
          *(_OWORD *)v665 = *(_OWORD *)v250;
          v636 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v252 = v636[5];
          v253 = &v665[v252];
          v606 = v250;
          v254 = &v250[v252];
          v255 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
          {
            v256 = sub_1000BA294(&qword_100BD4280);
            memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
            v257 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 32);
          }
          else
          {
            v271 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 32);
            v271(v253, v254, v255);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v253, 0, 1, v255);
            v257 = v271;
          }
          *(_OWORD *)&v665[v636[6]] = *(_OWORD *)&v606[v636[6]];
          v601 = v257;
          v257(&v665[v636[7]], &v606[v636[7]], v255);
          v272 = v636[8];
          v273 = &v665[v272];
          v274 = &v606[v272];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v606[v272], 1, v255))
          {
            v275 = sub_1000BA294(&qword_100BD4280);
            memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
          }
          else
          {
            v601(v273, v274, v255);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v255);
          }
          v665[v636[9]] = v606[v636[9]];
          swift_storeEnumTagMultiPayload(v665, v251, 1);
          v248 = (uint64_t)v623;
        }
        else
        {
          memcpy(v665, v250, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
        }
        v281 = *(int *)(v248 + 24);
        v282 = &v239[v281];
        v283 = &v240[v281];
        v284 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v283, 1, v284))
        {
          v285 = sub_1000BA294(&qword_100BD3100);
          memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
        }
        else
        {
          v286 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v282, v283, v286);
          v287 = sub_1000BA294(&qword_100BC5FE8);
          v282[*(int *)(v287 + 48)] = v283[*(int *)(v287 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v282, 0, 1, v284);
        }
        v66 = v656;
        swift_storeEnumTagMultiPayload(v239, v656, 4);
        v57 = v647;
        break;
      case 6u:
        v258 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 32))(v239, v240, v258);
        v242 = v239;
        v243 = v66;
        v244 = 6;
        goto LABEL_226;
      case 7u:
        v259 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v240) == 1)
        {
          v637 = v259;
          v657 = v66;
          *(_OWORD *)v239 = *(_OWORD *)v240;
          v260 = type metadata accessor for ConditionDetailMapViewModel(0);
          v261 = *(int *)(v260 + 20);
          v262 = &v239[v261];
          v263 = &v240[v261];
          v264 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v262, v263, v264);
          v624 = (int *)v260;
          v265 = *(int *)(v260 + 24);
          v266 = &v239[v265];
          v267 = &v240[v265];
          v268 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v267, 1, v268))
          {
            v269 = sub_1000BA294(&qword_100BC3460);
            memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
            v270 = v624;
          }
          else
          {
            v648 = v57;
            *(_OWORD *)v266 = *(_OWORD *)v267;
            v607 = v266;
            v614 = (int *)v268;
            v276 = *(int *)(v268 + 20);
            v277 = &v266[v276];
            v278 = &v267[v276];
            v279 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v278, 1, v279))
            {
              v280 = sub_1000BA294(&qword_100BC3340);
              memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 32))(v277, v278, v279);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v277, 0, 1, v279);
            }
            v289 = v614[6];
            v594 = (char *)v607 + v289;
            v290 = &v267[v289];
            v291 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v594, v290, v291);
            v292 = v614[7];
            v293 = (char *)v607 + v292;
            v294 = &v267[v292];
            v295 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, v295))
            {
              v296 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v293, v294, *(_QWORD *)(*(_QWORD *)(v296 - 8) + 64));
            }
            else
            {
              v663(v293, v294, v11);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v293, 0, 1, v295);
            }
            v297 = v614[8];
            v298 = (char *)v607 + v297;
            v299 = &v267[v297];
            v300 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v299) == 1)
            {
              v301 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 32))(v298, v299, v301);
              swift_storeEnumTagMultiPayload(v298, v300, 1);
            }
            else
            {
              memcpy(v298, v299, *(_QWORD *)(*(_QWORD *)(v300 - 8) + 64));
            }
            v302 = (uint64_t)v607;
            v303 = v614[9];
            v304 = (char *)v607 + v303;
            v305 = &v267[v303];
            v306 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v306))
            {
              v307 = sub_1000BA294(&qword_100BC3350);
              memcpy(v304, v305, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
              v270 = v624;
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v11))
              {
                v308 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v304, v305, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
              }
              else
              {
                v663(v304, v305, v11);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 1, v11);
              }
              v312 = *(int *)(v306 + 20);
              v313 = &v304[v312];
              v314 = &v305[v312];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v314, 1, v11))
              {
                v315 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v313, v314, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
              }
              else
              {
                v663(v313, v314, v11);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v313, 0, 1, v11);
              }
              v270 = v624;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 1, v306);
              v302 = (uint64_t)v607;
            }
            _s7Weather24LocationCompositionStateOwst_0(v302, 0, 1, (uint64_t)v614);
            v57 = v648;
          }
          *(_OWORD *)&v239[v270[7]] = *(_OWORD *)&v240[v270[7]];
          v402 = v270[8];
          v403 = &v239[v402];
          v404 = &v240[v402];
          v405 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v405 - 8) + 32))(v403, v404, v405);
          v239[v270[9]] = v240[v270[9]];
          swift_storeEnumTagMultiPayload(v239, v637, 1);
          v66 = v657;
        }
        else
        {
          memcpy(v239, v240, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
        }
        v242 = v239;
        v243 = v66;
        v244 = 7;
LABEL_226:
        swift_storeEnumTagMultiPayload(v242, v243, v244);
        break;
      default:
        memcpy(v239, v240, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v239, 0, 1, v66);
  }
  v55[v57[9]] = v56[v57[9]];
  v55[v57[10]] = v56[v57[10]];
  v407 = (uint64_t)v669;
  v406 = v672;
  *(_QWORD *)&a1[v669[12]] = *(_QWORD *)&v672[v669[12]];
  v408 = v669[13];
  v409 = &a1[v408];
  v410 = &v672[v408];
  v411 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v410, 1, v411))
  {
    v412 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v409, v410, *(_QWORD *)(*(_QWORD *)(v412 - 8) + 64));
  }
  else
  {
    v413 = *((_OWORD *)v410 + 1);
    *(_OWORD *)v409 = *(_OWORD *)v410;
    *((_OWORD *)v409 + 1) = v413;
    v414 = *(int *)(v411 + 20);
    v415 = &v409[v414];
    v416 = &v410[v414];
    v417 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v416) == 1)
    {
      v666 = (void *)v417;
      *(_OWORD *)v415 = *(_OWORD *)v416;
      v418 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v419 = v418[5];
      v420 = &v415[v419];
      v421 = &v416[v419];
      v422 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v421, 1, v422))
      {
        v423 = sub_1000BA294(&qword_100BD4280);
        memcpy(v420, v421, *(_QWORD *)(*(_QWORD *)(v423 - 8) + 64));
        v424 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 32);
      }
      else
      {
        v425 = v421;
        v424 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 32);
        v424(v420, v425, v422);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v420, 0, 1, v422);
      }
      *(_OWORD *)&v415[v418[6]] = *(_OWORD *)&v416[v418[6]];
      v660 = v424;
      v424(&v415[v418[7]], &v416[v418[7]], v422);
      v426 = v418[8];
      v427 = &v415[v426];
      v428 = &v416[v426];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v416[v426], 1, v422))
      {
        v429 = sub_1000BA294(&qword_100BD4280);
        memcpy(v427, v428, *(_QWORD *)(*(_QWORD *)(v429 - 8) + 64));
      }
      else
      {
        v660(v427, v428, v422);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v427, 0, 1, v422);
      }
      v415[v418[9]] = v416[v418[9]];
      swift_storeEnumTagMultiPayload(v415, v666, 1);
      v407 = (uint64_t)v669;
    }
    else
    {
      memcpy(v415, v416, *(_QWORD *)(*(_QWORD *)(v417 - 8) + 64));
    }
    v430 = *(int *)(v411 + 24);
    v431 = &v409[v430];
    v432 = &v410[v430];
    v433 = type metadata accessor for DetailComponentAction(0);
    v406 = v672;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v432, 1, v433))
    {
      v434 = sub_1000BA294(&qword_100BD3100);
      memcpy(v431, v432, *(_QWORD *)(*(_QWORD *)(v434 - 8) + 64));
    }
    else
    {
      v435 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v435 - 8) + 32))(v431, v432, v435);
      v436 = sub_1000BA294(&qword_100BC5FE8);
      v431[*(int *)(v436 + 48)] = v432[*(int *)(v436 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v431, 0, 1, v433);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v409, 0, 1, v411);
  }
  v437 = *(int *)(v407 + 56);
  v438 = &a1[v437];
  v439 = &v406[v437];
  v440 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v440 - 8) + 32))(v438, v439, v440);
  a1[*(int *)(v407 + 60)] = v406[*(int *)(v407 + 60)];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v407);
  return a1;
}

uint64_t sub_100471B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100471BA0);
}

uint64_t sub_100471BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000DF648();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_100471BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100471BEC);
}

uint64_t sub_100471BEC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1000DF648();
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_100471C28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoonDetailViewModel.Model(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100471C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonDetailViewModel.Model(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for MoonDetailViewModel(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BE42F8, (uint64_t)&nominal type descriptor for MoonDetailViewModel);
}

uint64_t sub_100471CA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for MoonDetailViewModel.Model(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t sub_100471CF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t EnumCaseMultiPayload;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t, __n128);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  void (*v71)(char *, char *, void *, __n128);
  void *__dst;
  int *v73;
  _QWORD *v74;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v9 = type metadata accessor for Date(0);
    v10 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v9 - 8) + 16);
    ((void (*)(_QWORD *, _QWORD *, uint64_t))v10)(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, v7, EnumCaseMultiPayload);
    v11 = a3[5];
    v12 = a3[6];
    v13 = (_QWORD *)((char *)a1 + v11);
    v14 = (_QWORD *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (_QWORD *)((char *)a1 + v12);
    v17 = (_QWORD *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v73 = a3;
    v74 = a2;
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain(v15);
    v22 = swift_bridgeObjectRetain(v18);
    v10(v20, v21, v9, v22);
    v23 = (int *)type metadata accessor for MoonViewModel(0);
    *(_QWORD *)&v20[v23[5]] = *(_QWORD *)&v21[v23[5]];
    v24 = v23[6];
    v25 = &v20[v24];
    v26 = &v21[v24];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v21[v24], 1, v9))
    {
      v27 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v10)(v25, v26, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v9);
    }
    v30 = v23[7];
    v31 = &v20[v30];
    v32 = &v21[v30];
    v71 = (void (*)(char *, char *, void *, __n128))v10;
    __dst = (void *)v9;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v21[v30], 1, v9))
    {
      v33 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v10)(v31, v32, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v9);
    }
    v20[v23[8]] = v21[v23[8]];
    v34 = a3[8];
    v35 = a1;
    v36 = (char *)a1 + v34;
    v37 = (char *)v74 + v34;
    v38 = *(_QWORD *)((char *)v74 + v34 + 8);
    *(_QWORD *)v36 = *(_QWORD *)((char *)v74 + v34);
    *((_QWORD *)v36 + 1) = v38;
    v39 = *(_QWORD *)((char *)v74 + v34 + 24);
    *((_QWORD *)v36 + 2) = *(_QWORD *)((char *)v74 + v34 + 16);
    *((_QWORD *)v36 + 3) = v39;
    v40 = *(_QWORD *)((char *)v74 + v34 + 40);
    *((_QWORD *)v36 + 4) = *(_QWORD *)((char *)v74 + v34 + 32);
    *((_QWORD *)v36 + 5) = v40;
    v36[48] = *((_BYTE *)v74 + v34 + 48);
    v41 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
    v42 = v41[8];
    v43 = &v36[v42];
    v44 = &v37[v42];
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v39);
    v45 = swift_bridgeObjectRetain(v40);
    v71(v43, v44, __dst, v45);
    ((void (*)(char *, char *, void *))v71)(&v36[v41[9]], &v37[v41[9]], __dst);
    v36[v41[10]] = v37[v41[10]];
    v46 = v73[9];
    v47 = v73[10];
    v48 = *(_QWORD *)((char *)v74 + v46);
    *(_QWORD *)((char *)v35 + v46) = v48;
    v49 = (_QWORD *)((char *)v35 + v47);
    v50 = (char *)v74 + v47;
    v51 = *(_QWORD *)((char *)v74 + v47);
    swift_bridgeObjectRetain(v48);
    if (v51)
    {
      v52 = *((_QWORD *)v50 + 1);
      *v49 = v51;
      v49[1] = v52;
      swift_bridgeObjectRetain(v51);
      swift_bridgeObjectRetain(v52);
    }
    else
    {
      *(_OWORD *)v49 = *(_OWORD *)v50;
    }
    v53 = v73[11];
    v54 = (char *)v35 + v53;
    v55 = (char *)v74 + v53;
    v56 = *(_QWORD *)((char *)v74 + v53);
    v57 = *(_QWORD *)((char *)v74 + v53 + 8);
    v58 = *((_BYTE *)v74 + v53 + 16);
    sub_1000B2044(v56, v57, v58);
    *(_QWORD *)v54 = v56;
    *((_QWORD *)v54 + 1) = v57;
    v54[16] = v58;
    v59 = *((_QWORD *)v55 + 4);
    *((_QWORD *)v54 + 3) = *((_QWORD *)v55 + 3);
    *((_QWORD *)v54 + 4) = v59;
    v60 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    v61 = *(int *)(v60 + 24);
    v62 = &v54[v61];
    v63 = &v55[v61];
    v64 = type metadata accessor for WeatherDescription(0);
    v65 = v59;
    v66 = v64;
    swift_bridgeObjectRetain(v65);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v66))
    {
      v67 = sub_1000BA294(&qword_100BC3368);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v62, v63, v66);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v66);
    }
    v68 = &v55[*(int *)(v60 + 28)];
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v69 = (char *)&loc_1004720DC + 4 * byte_1009A1788[swift_getEnumCaseMultiPayload(v68)];
    __asm { BR              X10 }
  }
  v28 = *a2;
  *a1 = *a2;
  v29 = v28 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v29;
}

uint64_t sub_100473634(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  void (*v64)(uint64_t, uint64_t, __n128);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, __n128);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  type metadata accessor for MoonDetailSelectedDate(0);
  if (swift_getEnumCaseMultiPayload(a1) <= 2)
  {
    v4 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + a2[7];
  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = type metadata accessor for MoonViewModel(0);
  v9 = v5 + *(int *)(v8 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v6))
    v7(v9, v6);
  v10 = v5 + *(int *)(v8 + 28);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v6))
    v7(v10, v6);
  v11 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = type metadata accessor for MoonScrubberHeaderViewModel(0);
  v7(v11 + *(int *)(v12 + 32), v6);
  v7(v11 + *(int *)(v12 + 36), v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10]))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v13 = a1 + a2[11];
  sub_10006BD8C(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_BYTE *)(v13 + 16));
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v15 = v13 + v14[6];
  v16 = type metadata accessor for WeatherDescription(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = v13 + v14[7];
  v18 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v17))
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v17, v16);
      goto LABEL_48;
    case 1u:
      goto LABEL_31;
    case 2u:
      v19 = type metadata accessor for AttributedString(0);
      goto LABEL_47;
    case 3u:
      v19 = sub_1000BA294(&qword_100BD30F8);
      goto LABEL_47;
    case 4u:
      if (*(_QWORD *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v97 = type metadata accessor for DetailComponentContainerViewModel(0);
      v20 = v17 + *(int *)(v97 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v20) == 1)
      {
        swift_bridgeObjectRelease();
        v95 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v89 = v20 + v95[5];
        v93 = type metadata accessor for URL(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v89, 1, v93))
          (*(void (**)(uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v89);
        v21 = swift_bridgeObjectRelease();
        v90 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v93 - 8) + 8);
        v90(v20 + v95[7], v93, v21);
        v22 = v20 + v95[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v93))
          ((void (*)(uint64_t, uint64_t))v90)(v22, v93);
      }
      v17 += *(int *)(v97 + 24);
      v23 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v23))
        goto LABEL_48;
      v19 = type metadata accessor for URL(0);
      goto LABEL_47;
    case 5u:
      if (*(_QWORD *)(v17 + 24))
      {
        sub_1000D31B4(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_BYTE *)(v17 + 16));
        swift_bridgeObjectRelease();
      }
      sub_1002387C0(*(_QWORD *)(v17 + 32), *(_QWORD *)(v17 + 40), *(_QWORD *)(v17 + 48), *(_QWORD *)(v17 + 56), *(_QWORD *)(v17 + 64), *(_QWORD *)(v17 + 72), *(_QWORD *)(v17 + 80), *(unsigned __int8 *)(v17 + 88), *(_BYTE *)(v17 + 89));
      goto LABEL_48;
    case 6u:
      v19 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      goto LABEL_47;
    case 7u:
      type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17);
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v25 = type metadata accessor for ConditionDetailMapViewModel(0);
        v98 = v17 + *(int *)(v25 + 20);
        v26 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v98, v26);
        v96 = v25;
        v27 = v17 + *(int *)(v25 + 24);
        v28 = type metadata accessor for WeatherData(0);
        v99 = v27;
        v29 = v27;
        v30 = (int *)v28;
        if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v28))
        {
          swift_bridgeObjectRelease();
          v94 = v30;
          v31 = v99 + v30[5];
          v91 = type metadata accessor for Locale(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v31, 1, v91))
            (*(void (**)(uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v31);
          v92 = v99 + v94[6];
          v32 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v92, v32);
          v33 = v99 + v94[7];
          v34 = sub_1000BA294(&qword_100BC3348);
          if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
            v7(v33, v6);
          v35 = v99 + v94[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          v36 = swift_getEnumCaseMultiPayload(v35);
          if (v36 == 1)
          {
            v37 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v35, v37);
          }
          else if (!v36)
          {
            swift_bridgeObjectRelease();
          }
          v38 = v99 + v94[9];
          v39 = type metadata accessor for WeatherDataOverrides(0);
          v100 = v38;
          v40 = v38;
          v41 = v39;
          if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v39))
          {
            if (!_s7Weather24LocationCompositionStateOwet_0(v100, 1, v6))
              v7(v100, v6);
            v42 = v100 + *(int *)(v41 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v6))
              v7(v42, v6);
          }
        }
        swift_bridgeObjectRelease();
        v17 += *(int *)(v96 + 32);
        v19 = type metadata accessor for WeatherMapOverlayKind(0);
LABEL_47:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
LABEL_31:
        swift_bridgeObjectRelease();
      }
LABEL_48:
      v43 = v13 + v14[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v18))
      {
        switch(swift_getEnumCaseMultiPayload(v43))
        {
          case 0u:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v43, v16);
            break;
          case 1u:
            goto LABEL_71;
          case 2u:
            v44 = type metadata accessor for AttributedString(0);
            goto LABEL_66;
          case 3u:
            v44 = sub_1000BA294(&qword_100BD30F8);
            goto LABEL_66;
          case 4u:
            if (*(_QWORD *)(v43 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v45 = type metadata accessor for DetailComponentContainerViewModel(0);
            v46 = v43 + *(int *)(v45 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload(v46) == 1)
            {
              swift_bridgeObjectRelease();
              v47 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              v48 = v46 + v47[5];
              v49 = type metadata accessor for URL(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v49))
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
              v50 = swift_bridgeObjectRelease();
              v51 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v49 - 8) + 8);
              v51(v46 + v47[7], v49, v50);
              v52 = v46 + v47[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v52, 1, v49))
                ((void (*)(uint64_t, uint64_t))v51)(v52, v49);
            }
            v53 = v43 + *(int *)(v45 + 24);
            v54 = type metadata accessor for DetailComponentAction(0);
            if (_s7Weather24LocationCompositionStateOwet_0(v53, 1, v54))
              break;
            v55 = type metadata accessor for URL(0);
            goto LABEL_98;
          case 5u:
            if (*(_QWORD *)(v43 + 24))
            {
              sub_1000D31B4(*(_QWORD *)v43, *(_QWORD *)(v43 + 8), *(_BYTE *)(v43 + 16));
              swift_bridgeObjectRelease();
            }
            sub_1002387C0(*(_QWORD *)(v43 + 32), *(_QWORD *)(v43 + 40), *(_QWORD *)(v43 + 48), *(_QWORD *)(v43 + 56), *(_QWORD *)(v43 + 64), *(_QWORD *)(v43 + 72), *(_QWORD *)(v43 + 80), *(unsigned __int8 *)(v43 + 88), *(_BYTE *)(v43 + 89));
            break;
          case 6u:
            v44 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
LABEL_66:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
            break;
          case 7u:
            type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
            v56 = swift_getEnumCaseMultiPayload(v43);
            if (v56 == 1)
            {
              swift_bridgeObjectRelease();
              v72 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
              v73 = v43 + v72[5];
              v74 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
              v75 = v43 + v72[6];
              v76 = (int *)type metadata accessor for WeatherData(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v75, 1, (uint64_t)v76))
              {
                swift_bridgeObjectRelease();
                v77 = v75 + v76[5];
                v78 = type metadata accessor for Locale(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v77, 1, v78))
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
                v79 = v75 + v76[6];
                v80 = type metadata accessor for WeatherDataModel(0);
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v79, v80);
                v81 = v75 + v76[7];
                v82 = sub_1000BA294(&qword_100BC3348);
                if (!_s7Weather24LocationCompositionStateOwet_0(v81, 1, v82))
                  v7(v81, v6);
                v83 = v75 + v76[8];
                type metadata accessor for WeatherData.WeatherStatisticsState(0);
                v84 = swift_getEnumCaseMultiPayload(v83);
                if (v84 == 1)
                {
                  v85 = type metadata accessor for WeatherStatisticsModel(0);
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v83, v85);
                }
                else if (!v84)
                {
                  swift_bridgeObjectRelease();
                }
                v86 = v75 + v76[9];
                v87 = type metadata accessor for WeatherDataOverrides(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v86, 1, v87))
                {
                  if (!_s7Weather24LocationCompositionStateOwet_0(v86, 1, v6))
                    v7(v86, v6);
                  v88 = v86 + *(int *)(v87 + 20);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v88, 1, v6))
                    v7(v88, v6);
                }
              }
              swift_bridgeObjectRelease();
              v53 = v43 + v72[8];
              v55 = type metadata accessor for WeatherMapOverlayKind(0);
LABEL_98:
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v53, v55);
            }
            else if (!v56)
            {
              swift_bridgeObjectRelease();
LABEL_71:
              swift_bridgeObjectRelease();
            }
            break;
          default:
            break;
        }
      }
      swift_bridgeObjectRelease();
      v57 = a1 + a2[13];
      v58 = type metadata accessor for DetailComponentContainerViewModel(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58))
      {
        if (*(_QWORD *)(v57 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v59 = v57 + *(int *)(v58 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v59) == 1)
        {
          swift_bridgeObjectRelease();
          v60 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v61 = v59 + v60[5];
          v62 = type metadata accessor for URL(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
          v63 = swift_bridgeObjectRelease();
          v64 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v62 - 8) + 8);
          v64(v59 + v60[7], v62, v63);
          v65 = v59 + v60[8];
          if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v62))
            ((void (*)(uint64_t, uint64_t))v64)(v65, v62);
        }
        v66 = v57 + *(int *)(v58 + 24);
        v67 = type metadata accessor for DetailComponentAction(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v66, 1, v67))
        {
          v68 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v66, v68);
        }
      }
      v69 = a1 + a2[14];
      v70 = type metadata accessor for Location(0);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
    default:
      goto LABEL_48;
  }
}

void sub_10047422C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  int *v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v65;
  int *v66;
  uint64_t v67;

  v6 = type metadata accessor for MoonDetailSelectedDate(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(a1, a2, v8);
  swift_storeEnumTagMultiPayload(a1, v6, EnumCaseMultiPayload);
  v10 = a3[5];
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v10);
  v13 = (_QWORD *)(a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)(a1 + v11);
  v16 = (_QWORD *)(a2 + v11);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v66 = a3;
  v67 = a2;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  swift_bridgeObjectRetain(v14);
  v21 = swift_bridgeObjectRetain(v17);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v9)(v19, v20, v8, v21);
  v22 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)(v19 + v22[5]) = *(_QWORD *)(v20 + v22[5]);
  v23 = v22[6];
  v24 = (void *)(v19 + v23);
  v25 = (const void *)(v20 + v23);
  if (_s7Weather24LocationCompositionStateOwet_0(v20 + v23, 1, v8))
  {
    v26 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v24, (uint64_t)v25, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v8);
  }
  v27 = v22[7];
  v28 = (void *)(v19 + v27);
  v29 = (const void *)(v20 + v27);
  v64 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))v9;
  v65 = v8;
  if (_s7Weather24LocationCompositionStateOwet_0(v20 + v27, 1, v8))
  {
    v30 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v28, (uint64_t)v29, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v8);
  }
  *(_BYTE *)(v19 + v22[8]) = *(_BYTE *)(v20 + v22[8]);
  v31 = a3[8];
  v32 = a1 + v31;
  v33 = v67 + v31;
  v34 = *(_QWORD *)(v67 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(v67 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  v35 = *(_QWORD *)(v67 + v31 + 24);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v67 + v31 + 16);
  *(_QWORD *)(v32 + 24) = v35;
  v36 = *(_QWORD *)(v67 + v31 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v67 + v31 + 32);
  *(_QWORD *)(v32 + 40) = v36;
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v67 + v31 + 48);
  v37 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v38 = v37[8];
  v39 = v32 + v38;
  v40 = v33 + v38;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v35);
  v41 = swift_bridgeObjectRetain(v36);
  v64(v39, v40, v65, v41);
  ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v32 + v37[9], v33 + v37[9], v65);
  *(_BYTE *)(v32 + v37[10]) = *(_BYTE *)(v33 + v37[10]);
  v42 = v66[9];
  v43 = v66[10];
  v44 = *(_QWORD *)(v67 + v42);
  *(_QWORD *)(a1 + v42) = v44;
  v45 = (_QWORD *)(a1 + v43);
  v46 = v67 + v43;
  v47 = *(_QWORD *)(v67 + v43);
  swift_bridgeObjectRetain(v44);
  if (v47)
  {
    v48 = *(_QWORD *)(v46 + 8);
    *v45 = v47;
    v45[1] = v48;
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v48);
  }
  else
  {
    *(_OWORD *)v45 = *(_OWORD *)v46;
  }
  v49 = v66[11];
  v50 = a1 + v49;
  v51 = v67 + v49;
  v52 = *(_QWORD *)(v67 + v49);
  v53 = *(_QWORD *)(v67 + v49 + 8);
  v54 = *(_BYTE *)(v67 + v49 + 16);
  sub_1000B2044(*(_QWORD *)v51, *(_QWORD *)(v51 + 8), *(_BYTE *)(v51 + 16));
  *(_QWORD *)v50 = v52;
  *(_QWORD *)(v50 + 8) = v53;
  *(_BYTE *)(v50 + 16) = v54;
  v55 = *(_QWORD *)(v51 + 32);
  *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
  *(_QWORD *)(v50 + 32) = v55;
  v56 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  v57 = *(int *)(v56 + 24);
  v58 = (void *)(v50 + v57);
  v59 = (const void *)(v51 + v57);
  v60 = type metadata accessor for WeatherDescription(0);
  swift_bridgeObjectRetain(v55);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
  {
    v61 = sub_1000BA294(&qword_100BC3368);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
  }
  v62 = v51 + *(int *)(v56 + 28);
  type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v63 = (char *)sub_1004745E4 + 4 * byte_1009A17A8[swift_getEnumCaseMultiPayload(v62)];
  __asm { BR              X10 }
}

uint64_t sub_1004745E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t, __n128);
  __n128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v5, v7);
  swift_storeEnumTagMultiPayload(v5, v3, v0);
  v9 = *(int *)(v6 + 32);
  v10 = (void *)(v2 + v9);
  v11 = (const void *)(v1 + v9);
  if (!_s7Weather24LocationCompositionStateOwet_0(v1 + v9, 1, v3))
  {
    v16 = (char *)&loc_100474ED4 + 4 * byte_1009A17B0[swift_getEnumCaseMultiPayload(v11)];
    __asm { BR              X10 }
  }
  v12 = v6;
  v13 = sub_1000BA294(&qword_100BD3108);
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v14 = v67;
  v15 = *(_QWORD *)(v8 - 88);
  *(_BYTE *)(v2 + *(int *)(v12 + 36)) = *(_BYTE *)(v1 + *(int *)(v12 + 36));
  *(_BYTE *)(v2 + *(int *)(v12 + 40)) = *(_BYTE *)(v1 + *(int *)(v12 + 40));
  v17 = v4[12];
  v18 = v4[13];
  v19 = *(_QWORD *)(v15 + v17);
  *(_QWORD *)(v67 + v17) = v19;
  v20 = (_QWORD *)(v67 + v18);
  v21 = (_QWORD *)(v15 + v18);
  v22 = type metadata accessor for DetailComponentContainerViewModel(0);
  swift_bridgeObjectRetain(v19);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    v24 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v21[1];
    if (v25)
    {
      *v20 = *v21;
      v20[1] = v25;
      v26 = v21[3];
      v20[2] = v21[2];
      v20[3] = v26;
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v26);
    }
    else
    {
      v27 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v27;
    }
    v28 = *(int *)(v22 + 20);
    v29 = (_QWORD *)((char *)v20 + v28);
    v30 = (_QWORD *)((char *)v21 + v28);
    v31 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v30) == 1)
    {
      v66 = v31;
      v32 = v30[1];
      *v29 = *v30;
      v29[1] = v32;
      v33 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v34 = v33[5];
      v35 = (char *)v29 + v34;
      v36 = (char *)v30 + v34;
      v37 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v32);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
      {
        v38 = sub_1000BA294(&qword_100BD4280);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      }
      v39 = v33[6];
      v40 = (_QWORD *)((char *)v29 + v39);
      v41 = (_QWORD *)((char *)v30 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      v43 = v33[7];
      v44 = (char *)v29 + v43;
      v45 = (char *)v30 + v43;
      v46 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v37 - 8) + 16);
      v47 = swift_bridgeObjectRetain(v42);
      v46(v44, v45, v37, v47);
      v48 = v33[8];
      v49 = (char *)v29 + v48;
      v50 = (char *)v30 + v48;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30 + v48, 1, v37))
      {
        v51 = sub_1000BA294(&qword_100BD4280);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v46)(v49, v50, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v37);
      }
      *((_BYTE *)v29 + v33[9]) = *((_BYTE *)v30 + v33[9]);
      swift_storeEnumTagMultiPayload(v29, v66, 1);
      v14 = v67;
      v15 = *(_QWORD *)(v8 - 88);
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    v52 = *(int *)(v22 + 24);
    v53 = (char *)v20 + v52;
    v54 = (char *)v21 + v52;
    v55 = type metadata accessor for DetailComponentAction(0);
    v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55);
    v4 = *(int **)(v8 - 96);
    if (v56)
    {
      v57 = sub_1000BA294(&qword_100BD3100);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v58 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v53, v54, v58);
      v59 = sub_1000BA294(&qword_100BC5FE8);
      v53[*(int *)(v59 + 48)] = v54[*(int *)(v59 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  v60 = v4[14];
  v61 = v14 + v60;
  v62 = v15 + v60;
  v63 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
  *(_BYTE *)(v14 + v4[15]) = *(_BYTE *)(v15 + v4[15]);
  return v14;
}

uint64_t sub_100475B10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  int *v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  int v76;
  int v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  size_t v91;
  void *v92;
  const void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  void (*v118)(char *, char *, uint64_t, __n128);
  __n128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  void (*v158)(char *, char *, uint64_t, __n128);
  __n128 v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  uint64_t v183;

  v4 = a2;
  v5 = a1;
  if (a1 != a2)
  {
    sub_1000215BC(a1, type metadata accessor for MoonDetailSelectedDate);
    v6 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v4, v8);
    swift_storeEnumTagMultiPayload(v5, v6, EnumCaseMultiPayload);
  }
  v9 = a3[5];
  v10 = (_QWORD *)(v5 + v9);
  v11 = (_QWORD *)(v4 + v9);
  *v10 = *v11;
  v12 = v11[1];
  v10[1] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (_QWORD *)(v5 + v13);
  v15 = (_QWORD *)(v4 + v13);
  *v14 = *v15;
  v16 = v15[1];
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  v182 = a3;
  v17 = a3[7];
  v18 = v5 + v17;
  v19 = v4 + v17;
  v20 = type metadata accessor for Date(0);
  v176 = *(_QWORD *)(v20 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 24);
  v21(v18, v19, v20);
  v22 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)(v18 + v22[5]) = *(_QWORD *)(v19 + v22[5]);
  v23 = v22[6];
  v24 = (void *)(v18 + v23);
  v25 = (const void *)(v19 + v23);
  v26 = _s7Weather24LocationCompositionStateOwet_0(v18 + v23, 1, v20);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v20);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(v176 + 16))(v24, v25, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v20);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v176 + 8))(v24, v20);
LABEL_8:
    v28 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_9;
  }
  v21((uint64_t)v24, (uint64_t)v25, v20);
LABEL_9:
  v29 = v22[7];
  v30 = (void *)(v18 + v29);
  v31 = (const void *)(v19 + v29);
  v32 = _s7Weather24LocationCompositionStateOwet_0(v18 + v29, 1, v20);
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v20);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, const void *, uint64_t))(v176 + 16))(v30, v31, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v20);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v176 + 8))(v30, v20);
LABEL_14:
    v34 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_15;
  }
  v21((uint64_t)v30, (uint64_t)v31, v20);
LABEL_15:
  *(_BYTE *)(v18 + v22[8]) = *(_BYTE *)(v19 + v22[8]);
  v35 = v182[8];
  v36 = v5 + v35;
  v37 = v4 + v35;
  *(_QWORD *)v36 = *(_QWORD *)(v4 + v35);
  v38 = *(_QWORD *)(v4 + v35 + 8);
  *(_QWORD *)(v36 + 8) = v38;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  v39 = *(_QWORD *)(v37 + 24);
  *(_QWORD *)(v36 + 24) = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  v40 = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 40) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 48) = *(_BYTE *)(v37 + 48);
  v41 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v21(v36 + v41[8], v37 + v41[8], v20);
  v21(v36 + v41[9], v37 + v41[9], v20);
  *(_BYTE *)(v36 + v41[10]) = *(_BYTE *)(v37 + v41[10]);
  v42 = v182[9];
  v43 = *(_QWORD *)(v4 + v42);
  *(_QWORD *)(v5 + v42) = v43;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRelease();
  v44 = v182[10];
  v45 = (_QWORD *)(v5 + v44);
  v46 = v4 + v44;
  v47 = *(_QWORD *)(v4 + v44);
  v183 = v5;
  if (*(_QWORD *)(v5 + v44))
  {
    if (v47)
    {
      *v45 = v47;
      swift_bridgeObjectRetain(v47);
      swift_bridgeObjectRelease();
      v48 = *(_QWORD *)(v46 + 8);
      v45[1] = v48;
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_10046CBB0(v45);
  }
  else if (v47)
  {
    *v45 = v47;
    v49 = *(_QWORD *)(v46 + 8);
    v45[1] = v49;
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v49);
    goto LABEL_22;
  }
  *(_OWORD *)v45 = *(_OWORD *)v46;
LABEL_22:
  v50 = v182[11];
  v51 = v5 + v50;
  v52 = v4 + v50;
  v53 = *(_QWORD *)(v4 + v50);
  v54 = *(_QWORD *)(v4 + v50 + 8);
  v55 = *(_BYTE *)(v4 + v50 + 16);
  sub_1000B2044(v53, v54, v55);
  v56 = *(_QWORD *)v51;
  v57 = *(_QWORD *)(v51 + 8);
  *(_QWORD *)v51 = v53;
  *(_QWORD *)(v51 + 8) = v54;
  v58 = *(_BYTE *)(v51 + 16);
  *(_BYTE *)(v51 + 16) = v55;
  sub_10006BD8C(v56, v57, v58);
  *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
  v59 = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 32) = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease();
  v60 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v61 = v60[6];
  v62 = (void *)(v51 + v61);
  v63 = (const void *)(v52 + v61);
  v64 = type metadata accessor for WeatherDescription(0);
  LODWORD(v53) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v64);
  v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64);
  if ((_DWORD)v53)
  {
    if (!v65)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v66 = *(_QWORD *)(v64 - 8);
  if (v65)
  {
    (*(void (**)(void *, uint64_t))(v66 + 8))(v62, v64);
LABEL_27:
    v67 = sub_1000BA294(&qword_100BC3368);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, const void *, uint64_t))(v66 + 24))(v62, v63, v64);
LABEL_28:
  v68 = v182;
  v177 = v51;
  v178 = v60;
  v179 = v52;
  if (v5 != v4)
  {
    v69 = v60[7];
    v70 = v52 + v69;
    sub_1000215BC(v51 + v69, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v71 = (char *)&loc_10047607C + 4 * byte_1009A17B8[swift_getEnumCaseMultiPayload(v70)];
    __asm { BR              X10 }
  }
  v72 = v60[8];
  v73 = (void *)(v51 + v72);
  v74 = (const void *)(v52 + v72);
  v75 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v76 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v75);
  v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      v78 = (char *)&loc_100476A18 + 4 * byte_1009A17C0[swift_getEnumCaseMultiPayload(v74)];
      __asm { BR              X10 }
    }
    goto LABEL_38;
  }
  if (v77)
  {
    sub_1000215BC((uint64_t)v73, type metadata accessor for ConditionDetailPlatterViewModel.Body);
LABEL_38:
    v79 = sub_1000BA294(&qword_100BD3108);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_41;
  }
  if (v5 != v4)
  {
    sub_1000215BC((uint64_t)v73, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    v80 = (char *)&loc_100476AA0 + 4 * byte_1009A17C8[swift_getEnumCaseMultiPayload(v74)];
    __asm { BR              X10 }
  }
LABEL_41:
  *(_BYTE *)(v177 + v178[9]) = *(_BYTE *)(v179 + v178[9]);
  *(_BYTE *)(v177 + v178[10]) = *(_BYTE *)(v179 + v178[10]);
  v81 = v182[12];
  v82 = *(_QWORD *)(v4 + v81);
  *(_QWORD *)(v5 + v81) = v82;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRelease();
  v83 = v182[13];
  v84 = (_QWORD *)(v5 + v83);
  v85 = (_QWORD *)(v4 + v83);
  v86 = type metadata accessor for DetailComponentContainerViewModel(0);
  v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v86);
  v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86);
  if (v87)
  {
    if (!v88)
    {
      if (v85[1])
      {
        *v84 = *v85;
        v89 = v85[1];
        v84[1] = v89;
        v84[2] = v85[2];
        v90 = v85[3];
        v84[3] = v90;
        swift_bridgeObjectRetain(v89);
        swift_bridgeObjectRetain(v90);
      }
      else
      {
        v97 = *((_OWORD *)v85 + 1);
        *(_OWORD *)v84 = *(_OWORD *)v85;
        *((_OWORD *)v84 + 1) = v97;
      }
      v98 = *(int *)(v86 + 20);
      v99 = (_QWORD *)((char *)v84 + v98);
      v100 = (_QWORD *)((char *)v85 + v98);
      v101 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v100) == 1)
      {
        v180 = v101;
        v174 = v4;
        *v99 = *v100;
        v102 = v100[1];
        v99[1] = v102;
        v103 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v104 = v103[5];
        v105 = (char *)v99 + v104;
        v106 = (char *)v100 + v104;
        v107 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain(v102);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
        {
          v108 = sub_1000BA294(&qword_100BD4280);
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
        }
        v111 = v103[6];
        v112 = (_QWORD *)((char *)v99 + v111);
        v113 = (_QWORD *)((char *)v100 + v111);
        *v112 = *v113;
        v114 = v113[1];
        v112[1] = v114;
        v115 = v103[7];
        v116 = (char *)v99 + v115;
        v117 = (char *)v100 + v115;
        v118 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v107 - 8) + 16);
        v119 = swift_bridgeObjectRetain(v114);
        v118(v116, v117, v107, v119);
        v120 = v103[8];
        v121 = (char *)v99 + v120;
        v122 = (char *)v100 + v120;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100 + v120, 1, v107))
        {
          v123 = sub_1000BA294(&qword_100BD4280);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v118)(v121, v122, v107);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v107);
        }
        v68 = v182;
        *((_BYTE *)v99 + v103[9]) = *((_BYTE *)v100 + v103[9]);
        swift_storeEnumTagMultiPayload(v99, v180, 1);
        v5 = v183;
        v4 = v174;
      }
      else
      {
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      v124 = *(int *)(v86 + 24);
      v125 = (char *)v84 + v124;
      v126 = (char *)v85 + v124;
      v127 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127))
      {
        v128 = sub_1000BA294(&qword_100BD3100);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
      }
      else
      {
        v129 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v125, v126, v129);
        v130 = sub_1000BA294(&qword_100BC5FE8);
        v125[*(int *)(v130 + 48)] = v126[*(int *)(v130 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v127);
      }
      v131 = (uint64_t)v84;
      v132 = v86;
      goto LABEL_68;
    }
    goto LABEL_47;
  }
  if (v88)
  {
    sub_1000215BC((uint64_t)v84, type metadata accessor for DetailComponentContainerViewModel);
LABEL_47:
    v91 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC68A0) - 8) + 64);
    v92 = v84;
    v93 = v85;
    goto LABEL_48;
  }
  v94 = v85[1];
  if (v84[1])
  {
    if (v94)
    {
      *v84 = *v85;
      v95 = v85[1];
      v84[1] = v95;
      swift_bridgeObjectRetain(v95);
      swift_bridgeObjectRelease();
      v84[2] = v85[2];
      v96 = v85[3];
      v84[3] = v96;
      swift_bridgeObjectRetain(v96);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10035C44C((uint64_t)v84);
      v138 = *((_OWORD *)v85 + 1);
      *(_OWORD *)v84 = *(_OWORD *)v85;
      *((_OWORD *)v84 + 1) = v138;
    }
  }
  else if (v94)
  {
    *v84 = *v85;
    v109 = v85[1];
    v84[1] = v109;
    v84[2] = v85[2];
    v110 = v85[3];
    v84[3] = v110;
    swift_bridgeObjectRetain(v109);
    swift_bridgeObjectRetain(v110);
  }
  else
  {
    v139 = *((_OWORD *)v85 + 1);
    *(_OWORD *)v84 = *(_OWORD *)v85;
    *((_OWORD *)v84 + 1) = v139;
  }
  if (v5 != v4)
  {
    v140 = *(int *)(v86 + 20);
    v141 = (_QWORD *)((char *)v84 + v140);
    v142 = (_QWORD *)((char *)v85 + v140);
    sub_1000215BC((uint64_t)v84 + v140, type metadata accessor for NewsArticleComponentViewModel);
    v143 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v142) == 1)
    {
      v181 = v143;
      v175 = v4;
      *v141 = *v142;
      v144 = v142[1];
      v141[1] = v144;
      v145 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v146 = v145[5];
      v147 = (char *)v141 + v146;
      v148 = (char *)v142 + v146;
      v149 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v144);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149))
      {
        v150 = sub_1000BA294(&qword_100BD4280);
        memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v147, v148, v149);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v149);
      }
      v151 = v145[6];
      v152 = (_QWORD *)((char *)v141 + v151);
      v153 = (_QWORD *)((char *)v142 + v151);
      *v152 = *v153;
      v154 = v153[1];
      v152[1] = v154;
      v155 = v145[7];
      v156 = (char *)v141 + v155;
      v157 = (char *)v142 + v155;
      v158 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v149 - 8) + 16);
      v159 = swift_bridgeObjectRetain(v154);
      v158(v156, v157, v149, v159);
      v160 = v145[8];
      v161 = (char *)v141 + v160;
      v162 = (char *)v142 + v160;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v142 + v160, 1, v149))
      {
        v163 = sub_1000BA294(&qword_100BD4280);
        memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v158)(v161, v162, v149);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v149);
      }
      v68 = v182;
      v5 = v183;
      *((_BYTE *)v141 + v145[9]) = *((_BYTE *)v142 + v145[9]);
      swift_storeEnumTagMultiPayload(v141, v181, 1);
      v4 = v175;
    }
    else
    {
      memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
    }
  }
  v164 = *(int *)(v86 + 24);
  v165 = (uint64_t)v84 + v164;
  v166 = (uint64_t)v85 + v164;
  v167 = type metadata accessor for DetailComponentAction(0);
  v168 = _s7Weather24LocationCompositionStateOwet_0(v165, 1, v167);
  v169 = _s7Weather24LocationCompositionStateOwet_0(v166, 1, v167);
  if (v168)
  {
    if (!v169)
    {
      v170 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v165, v166, v170);
      v171 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v165 + *(int *)(v171 + 48)) = *(_BYTE *)(v166 + *(int *)(v171 + 48));
      v131 = v165;
      v132 = v167;
LABEL_68:
      _s7Weather24LocationCompositionStateOwst_0(v131, 0, 1, v132);
      goto LABEL_69;
    }
  }
  else
  {
    if (!v169)
    {
      v172 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 24))(v165, v166, v172);
      v173 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v165 + *(int *)(v173 + 48)) = *(_BYTE *)(v166 + *(int *)(v173 + 48));
      goto LABEL_69;
    }
    sub_1000215BC(v165, type metadata accessor for DetailComponentAction);
  }
  v91 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD3100) - 8) + 64);
  v92 = (void *)v165;
  v93 = (const void *)v166;
LABEL_48:
  memcpy(v92, v93, v91);
LABEL_69:
  v133 = v68[14];
  v134 = v5 + v133;
  v135 = v4 + v133;
  v136 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 24))(v134, v135, v136);
  *(_BYTE *)(v5 + v68[15]) = *(_BYTE *)(v4 + v68[15]);
  return v5;
}

uint64_t sub_100478414(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  int *v27;
  uint64_t v28;
  char v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  int *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  _OWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _OWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  int *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  _OWORD *v155;
  _OWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _OWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _OWORD *v209;
  _OWORD *v210;
  uint64_t v211;
  uint64_t v212;
  __int128 v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  int *v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, char *, uint64_t);
  char *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v245;
  int *v246;
  char *v247;
  char *v248;
  int *v249;
  _OWORD *v250;
  _OWORD *v251;
  uint64_t v252;
  void (*v253)(char *, char *, uint64_t);
  int *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int *v263;
  int *v264;
  int *v265;
  int *v266;
  void (*v267)(char *, char *, uint64_t);
  uint64_t v268;
  void (*v269)(char *, char *, uint64_t);
  uint64_t v270;
  uint64_t v271;
  int *v272;

  v6 = type metadata accessor for MoonDetailSelectedDate(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(a1, a2, v8);
  swift_storeEnumTagMultiPayload(a1, v6, EnumCaseMultiPayload);
  v10 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v9(a1 + v11, a2 + v11, v8);
  v14 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)(v12 + v14[5]) = *(_QWORD *)(v13 + v14[5]);
  v15 = v14[6];
  v16 = (void *)(v12 + v15);
  v17 = (const void *)(v13 + v15);
  if (_s7Weather24LocationCompositionStateOwet_0(v13 + v15, 1, v8))
  {
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v16, (uint64_t)v17, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v8);
  }
  v19 = v14[7];
  v20 = (void *)(v12 + v19);
  v21 = (const void *)(v13 + v19);
  if (_s7Weather24LocationCompositionStateOwet_0(v13 + v19, 1, v8))
  {
    v22 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v20, (uint64_t)v21, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v8);
  }
  *(_BYTE *)(v12 + v14[8]) = *(_BYTE *)(v13 + v14[8]);
  v23 = a3[8];
  v24 = a1 + v23;
  v272 = a3;
  v25 = a2 + v23;
  v26 = *(_OWORD *)(a2 + v23 + 16);
  *(_OWORD *)v24 = *(_OWORD *)(a2 + v23);
  *(_OWORD *)(v24 + 16) = v26;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(a2 + v23 + 32);
  *(_BYTE *)(v24 + 48) = *(_BYTE *)(a2 + v23 + 48);
  v27 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v9(v24 + v27[8], v25 + v27[8], v8);
  v267 = (void (*)(char *, char *, uint64_t))v9;
  v9(v24 + v27[9], v25 + v27[9], v8);
  v28 = v27[10];
  v29 = *(_BYTE *)(v25 + v28);
  v30 = v272;
  *(_BYTE *)(v24 + v28) = v29;
  v31 = v272[10];
  *(_QWORD *)(a1 + v272[9]) = *(_QWORD *)(a2 + v272[9]);
  *(_OWORD *)(a1 + v31) = *(_OWORD *)(a2 + v31);
  v32 = v272[11];
  v270 = a1;
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(a2 + v32 + 16);
  *(_OWORD *)v33 = *(_OWORD *)(a2 + v32);
  *(_OWORD *)(v33 + 24) = *(_OWORD *)(a2 + v32 + 24);
  v35 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v36 = v35[6];
  v37 = (void *)(v33 + v36);
  v38 = (const void *)(v34 + v36);
  v39 = type metadata accessor for WeatherDescription(0);
  v271 = a2;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    v40 = sub_1000BA294(&qword_100BC3368);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  v41 = v35[7];
  v42 = (_OWORD *)(v33 + v41);
  v43 = (_OWORD *)(v34 + v41);
  v44 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload(v43))
  {
    case 0u:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v42, v43, v39);
      v45 = v42;
      v46 = v44;
      v47 = 0;
      goto LABEL_54;
    case 2u:
      v48 = type metadata accessor for AttributedString(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v42, v43, v48);
      v45 = v42;
      v46 = v44;
      v47 = 2;
      goto LABEL_54;
    case 3u:
      v49 = sub_1000BA294(&qword_100BD30F8);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v42, v43, v49);
      v45 = v42;
      v46 = v44;
      v47 = 3;
      goto LABEL_54;
    case 4u:
      v263 = v35;
      v50 = v43[1];
      *v42 = *v43;
      v42[1] = v50;
      v51 = type metadata accessor for DetailComponentContainerViewModel(0);
      v52 = *(int *)(v51 + 20);
      v251 = v42;
      v53 = (char *)v42 + v52;
      v54 = (char *)v43 + v52;
      v55 = type metadata accessor for NewsArticleComponentViewModel(0);
      v259 = v39;
      if (swift_getEnumCaseMultiPayload(v54) == 1)
      {
        __dst = (void *)v55;
        v245 = v51;
        v255 = v44;
        *(_OWORD *)v53 = *(_OWORD *)v54;
        v56 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v57 = v56[5];
        v248 = v53;
        v58 = &v53[v57];
        v59 = &v54[v57];
        v60 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
        {
          v61 = sub_1000BA294(&qword_100BD4280);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32);
        }
        else
        {
          v75 = v59;
          v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32);
          v62(v58, v75, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
        }
        v76 = v56;
        *(_OWORD *)&v248[v56[6]] = *(_OWORD *)&v54[v56[6]];
        v77 = v56[7];
        v78 = v62;
        v62(&v248[v77], &v54[v77], v60);
        v79 = v76[8];
        v80 = &v248[v79];
        v81 = &v54[v79];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v54[v79], 1, v60))
        {
          v82 = sub_1000BA294(&qword_100BD4280);
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          v78(v80, v81, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v60);
        }
        v44 = v255;
        v51 = v245;
        v248[v76[9]] = v54[v76[9]];
        swift_storeEnumTagMultiPayload(v248, __dst, 1);
      }
      else
      {
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      v35 = v263;
      v88 = *(int *)(v51 + 24);
      v89 = (char *)v251 + v88;
      v90 = (char *)v43 + v88;
      v91 = type metadata accessor for DetailComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91))
      {
        v92 = sub_1000BA294(&qword_100BD3100);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        v93 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v89, v90, v93);
        v94 = sub_1000BA294(&qword_100BC5FE8);
        v89[*(int *)(v94 + 48)] = v90[*(int *)(v94 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v91);
      }
      v30 = v272;
      v39 = v259;
      v45 = v251;
      v46 = v44;
      v47 = 4;
      goto LABEL_54;
    case 6u:
      v63 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v42, v43, v63);
      v45 = v42;
      v46 = v44;
      v47 = 6;
      goto LABEL_54;
    case 7u:
      v64 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
      if (swift_getEnumCaseMultiPayload(v43) == 1)
      {
        v252 = v64;
        v256 = v44;
        v260 = v39;
        *v42 = *v43;
        v65 = type metadata accessor for ConditionDetailMapViewModel(0);
        v66 = *(int *)(v65 + 20);
        v67 = (char *)v42 + v66;
        v68 = (char *)v43 + v66;
        v69 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
        v249 = (int *)v65;
        v70 = *(int *)(v65 + 24);
        v71 = (_OWORD *)((char *)v42 + v70);
        v72 = (_OWORD *)((char *)v43 + v70);
        v73 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
        {
          v74 = sub_1000BA294(&qword_100BC3460);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          v39 = v260;
        }
        else
        {
          *v71 = *v72;
          __dsta = (char *)v71;
          v246 = (int *)v73;
          v83 = *(int *)(v73 + 20);
          v84 = (char *)v71 + v83;
          v85 = (char *)v72 + v83;
          v86 = type metadata accessor for Locale(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
          {
            v87 = sub_1000BA294(&qword_100BC3340);
            memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
          }
          v95 = v246[6];
          v96 = &__dsta[v95];
          v97 = (char *)v72 + v95;
          v98 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
          v99 = v246[7];
          v100 = &__dsta[v99];
          v101 = (char *)v72 + v99;
          v102 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
          {
            v103 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
          }
          else
          {
            v267(v100, v101, v8);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
          }
          v104 = v246[8];
          v105 = &__dsta[v104];
          v106 = (char *)v72 + v104;
          v107 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          v264 = v35;
          if (swift_getEnumCaseMultiPayload(v106) == 1)
          {
            v108 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v105, v106, v108);
            swift_storeEnumTagMultiPayload(v105, v107, 1);
          }
          else
          {
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
          }
          v109 = (uint64_t)__dsta;
          v110 = (uint64_t)v246;
          v111 = v246[9];
          v112 = &__dsta[v111];
          v113 = (char *)v72 + v111;
          v114 = type metadata accessor for WeatherDataOverrides(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v114))
          {
            v115 = sub_1000BA294(&qword_100BC3350);
            memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
            v30 = v272;
            v39 = v260;
            v35 = v264;
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v8))
            {
              v116 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
            }
            else
            {
              v267(v112, v113, v8);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v8);
            }
            v117 = *(int *)(v114 + 20);
            v118 = &v112[v117];
            v119 = &v113[v117];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v113[v117], 1, v8))
            {
              v120 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
            }
            else
            {
              v267(v118, v119, v8);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v8);
            }
            v30 = v272;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v114);
            v39 = v260;
            v35 = v264;
            v109 = (uint64_t)__dsta;
            v110 = (uint64_t)v246;
          }
          _s7Weather24LocationCompositionStateOwst_0(v109, 0, 1, v110);
        }
        *(_OWORD *)((char *)v42 + v249[7]) = *(_OWORD *)((char *)v43 + v249[7]);
        v121 = v249[8];
        v247 = (char *)v42 + v121;
        v122 = (char *)v43 + v121;
        v123 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v247, v122, v123);
        *((_BYTE *)v42 + v249[9]) = *((_BYTE *)v43 + v249[9]);
        swift_storeEnumTagMultiPayload(v42, v252, 1);
        v44 = v256;
      }
      else
      {
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      v45 = v42;
      v46 = v44;
      v47 = 7;
LABEL_54:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      break;
  }
  v124 = v35[8];
  v125 = (_OWORD *)(v33 + v124);
  v126 = (_OWORD *)(v34 + v124);
  if (_s7Weather24LocationCompositionStateOwet_0(v34 + v124, 1, v44))
  {
    v127 = sub_1000BA294(&qword_100BD3108);
    memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    v128 = v271;
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v126))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v125, v126, v39);
        v129 = v125;
        v130 = v44;
        v131 = 0;
        goto LABEL_66;
      case 2u:
        v132 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v125, v126, v132);
        v129 = v125;
        v130 = v44;
        v131 = 2;
        goto LABEL_66;
      case 3u:
        v133 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v125, v126, v133);
        v129 = v125;
        v130 = v44;
        v131 = 3;
        goto LABEL_66;
      case 4u:
        v265 = v35;
        v134 = v126[1];
        *v125 = *v126;
        v125[1] = v134;
        v135 = type metadata accessor for DetailComponentContainerViewModel(0);
        v136 = *(int *)(v135 + 20);
        v137 = (char *)v125 + v136;
        v138 = (char *)v126 + v136;
        v139 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload(v138) == 1)
        {
          v257 = v44;
          v261 = v139;
          v268 = v135;
          *(_OWORD *)v137 = *(_OWORD *)v138;
          v140 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v141 = v140[5];
          v142 = &v137[v141];
          v143 = &v138[v141];
          v144 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, v144))
          {
            v145 = sub_1000BA294(&qword_100BD4280);
            memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
            v146 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32);
          }
          else
          {
            v159 = v143;
            v146 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32);
            v146(v142, v159, v144);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v144);
          }
          *(_OWORD *)&v137[v140[6]] = *(_OWORD *)&v138[v140[6]];
          v253 = v146;
          v146(&v137[v140[7]], &v138[v140[7]], v144);
          v160 = v140[8];
          v161 = &v137[v160];
          v162 = &v138[v160];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v138[v160], 1, v144))
          {
            v163 = sub_1000BA294(&qword_100BD4280);
            memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
          }
          else
          {
            v253(v161, v162, v144);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v144);
          }
          v44 = v257;
          v135 = v268;
          v137[v140[9]] = v138[v140[9]];
          swift_storeEnumTagMultiPayload(v137, v261, 1);
        }
        else
        {
          memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
        }
        v35 = v265;
        v169 = *(int *)(v135 + 24);
        v170 = (char *)v125 + v169;
        v171 = (char *)v126 + v169;
        v172 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
        {
          v173 = sub_1000BA294(&qword_100BD3100);
          memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
        }
        else
        {
          v174 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v170, v171, v174);
          v175 = sub_1000BA294(&qword_100BC5FE8);
          v170[*(int *)(v175 + 48)] = v171[*(int *)(v175 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v172);
        }
        v128 = v271;
        v30 = v272;
        v176 = v125;
        v177 = v44;
        v178 = 4;
        goto LABEL_103;
      case 6u:
        v147 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v125, v126, v147);
        v129 = v125;
        v130 = v44;
        v131 = 6;
LABEL_66:
        swift_storeEnumTagMultiPayload(v129, v130, v131);
        goto LABEL_67;
      case 7u:
        v148 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v126) == 1)
        {
          v258 = v44;
          v262 = v148;
          v266 = v35;
          *v125 = *v126;
          v149 = (int *)type metadata accessor for ConditionDetailMapViewModel(0);
          v150 = v149[5];
          v151 = (char *)v125 + v150;
          v152 = (char *)v126 + v150;
          v153 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v151, v152, v153);
          v154 = v149[6];
          v155 = (_OWORD *)((char *)v125 + v154);
          v156 = (_OWORD *)((char *)v126 + v154);
          v157 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
          {
            v158 = sub_1000BA294(&qword_100BC3460);
            memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
          }
          else
          {
            *v155 = *v156;
            v250 = v155;
            v254 = (int *)v157;
            v164 = *(int *)(v157 + 20);
            v165 = (char *)v155 + v164;
            v166 = (char *)v156 + v164;
            v167 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, v167))
            {
              v168 = sub_1000BA294(&qword_100BC3340);
              memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(v165, v166, v167);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v167);
            }
            v179 = v254[6];
            v180 = (char *)v250 + v179;
            v181 = (char *)v156 + v179;
            v182 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v180, v181, v182);
            v183 = v254[7];
            v184 = (char *)v250 + v183;
            v185 = (char *)v156 + v183;
            v186 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v185, 1, v186))
            {
              v187 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
            }
            else
            {
              v267(v184, v185, v8);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v184, 0, 1, v186);
            }
            v188 = v254[8];
            v189 = (char *)v250 + v188;
            v190 = (char *)v156 + v188;
            v191 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v190) == 1)
            {
              v192 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v189, v190, v192);
              swift_storeEnumTagMultiPayload(v189, v191, 1);
            }
            else
            {
              memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
            }
            v193 = (uint64_t)v250;
            v194 = v254[9];
            v195 = (char *)v250 + v194;
            v196 = (char *)v156 + v194;
            v197 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v197))
            {
              v198 = sub_1000BA294(&qword_100BC3350);
              memcpy(v195, v196, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
              v30 = v272;
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v8))
              {
                v199 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v195, v196, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
              }
              else
              {
                v267(v195, v196, v8);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v8);
              }
              v200 = *(int *)(v197 + 20);
              __dstb = &v195[v200];
              v201 = &v196[v200];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v196[v200], 1, v8))
              {
                v202 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(__dstb, v201, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
              }
              else
              {
                v267(__dstb, v201, v8);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v8);
              }
              v30 = v272;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v197);
              v193 = (uint64_t)v250;
            }
            _s7Weather24LocationCompositionStateOwst_0(v193, 0, 1, (uint64_t)v254);
          }
          *(_OWORD *)((char *)v125 + v149[7]) = *(_OWORD *)((char *)v126 + v149[7]);
          v203 = v149[8];
          v204 = (char *)v125 + v203;
          v205 = (char *)v126 + v203;
          v206 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
          *((_BYTE *)v125 + v149[9]) = *((_BYTE *)v126 + v149[9]);
          swift_storeEnumTagMultiPayload(v125, v262, 1);
          v128 = v271;
          v35 = v266;
          v44 = v258;
        }
        else
        {
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
          v128 = v271;
        }
        v176 = v125;
        v177 = v44;
        v178 = 7;
LABEL_103:
        swift_storeEnumTagMultiPayload(v176, v177, v178);
        goto LABEL_104;
      default:
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_67:
        v128 = v271;
LABEL_104:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v44);
        break;
    }
  }
  *(_BYTE *)(v33 + v35[9]) = *(_BYTE *)(v34 + v35[9]);
  *(_BYTE *)(v33 + v35[10]) = *(_BYTE *)(v34 + v35[10]);
  v207 = v30[13];
  v208 = v270;
  *(_QWORD *)(v270 + v30[12]) = *(_QWORD *)(v128 + v30[12]);
  v209 = (_OWORD *)(v270 + v207);
  v210 = (_OWORD *)(v128 + v207);
  v211 = type metadata accessor for DetailComponentContainerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v210, 1, v211))
  {
    v212 = sub_1000BA294(&qword_100BC68A0);
    memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
  }
  else
  {
    v213 = v210[1];
    *v209 = *v210;
    v209[1] = v213;
    v214 = *(int *)(v211 + 20);
    v215 = (char *)v209 + v214;
    v216 = (char *)v210 + v214;
    v217 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v216) == 1)
    {
      *(_OWORD *)v215 = *(_OWORD *)v216;
      v218 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v219 = v218[5];
      v220 = &v215[v219];
      v221 = &v216[v219];
      v222 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
      {
        v223 = sub_1000BA294(&qword_100BD4280);
        memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
        v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32);
      }
      else
      {
        v225 = v221;
        v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32);
        v224(v220, v225, v222);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v222);
      }
      *(_OWORD *)&v215[v218[6]] = *(_OWORD *)&v216[v218[6]];
      v269 = v224;
      v224(&v215[v218[7]], &v216[v218[7]], v222);
      v226 = v218[8];
      v227 = &v215[v226];
      v228 = &v216[v226];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v216[v226], 1, v222))
      {
        v229 = sub_1000BA294(&qword_100BD4280);
        memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
      }
      else
      {
        v269(v227, v228, v222);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v222);
      }
      v215[v218[9]] = v216[v218[9]];
      swift_storeEnumTagMultiPayload(v215, v217, 1);
      v208 = v270;
    }
    else
    {
      memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
    }
    v128 = v271;
    v230 = *(int *)(v211 + 24);
    v231 = (char *)v209 + v230;
    v232 = (char *)v210 + v230;
    v233 = type metadata accessor for DetailComponentAction(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v233))
    {
      v234 = sub_1000BA294(&qword_100BD3100);
      memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
    }
    else
    {
      v235 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v231, v232, v235);
      v236 = sub_1000BA294(&qword_100BC5FE8);
      v231[*(int *)(v236 + 48)] = v232[*(int *)(v236 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v233);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v209, 0, 1, v211);
    v30 = v272;
  }
  v237 = v30[14];
  v238 = v208 + v237;
  v239 = v128 + v237;
  v240 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v238, v239, v240);
  *(_BYTE *)(v208 + v30[15]) = *(_BYTE *)(v128 + v30[15]);
  return v208;
}

uint64_t sub_100479A1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  _OWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _OWORD *v136;
  _OWORD *v137;
  uint64_t v138;
  int v139;
  int v140;
  _OWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _OWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(char *, char *, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD *v170;
  _OWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  _OWORD *v196;
  _OWORD *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  void (*v201)(char *, char *, uint64_t);
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  void (*v219)(char *, char *, uint64_t);
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  int *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int v298;
  int v299;
  __int128 v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  int *v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  void (*v311)(char *, char *, uint64_t);
  size_t v312;
  void *v313;
  const void *v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  void *v323;
  const void *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  __int128 v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  int *v341;
  uint64_t v342;
  char *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  void (*v347)(char *, char *, uint64_t);
  char *v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  int v357;
  int v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void (*v363)(char *, char *, uint64_t);
  char *v364;
  uint64_t v365;
  char *v366;
  char *v367;
  char *v368;
  uint64_t v369;
  int *v370;
  int *v371;
  int *v372;
  _OWORD *v373;
  _OWORD *v374;
  char *v375;
  uint64_t v376;
  void (*v377)(char *, char *, uint64_t);
  int *v378;
  void (*v379)(char *, char *, uint64_t);
  int *v380;
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;
  void *__dstc;
  int *__dstd;
  void *__dste;
  int *__dstf;
  _OWORD *v388;
  char *v389;
  _OWORD *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  int *v403;
  int *v404;
  void (*v405)(char *, char *, uint64_t);
  void (*v406)(char *, char *, uint64_t);
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  int *v410;
  uint64_t v411;

  if (a1 != a2)
  {
    sub_1000215BC(a1, type metadata accessor for MoonDetailSelectedDate);
    v6 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, v6, EnumCaseMultiPayload);
  }
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = a1 + v19;
  v411 = a2;
  v21 = a2 + v19;
  v22 = type metadata accessor for Date(0);
  v402 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v402 + 40);
  v23(v20, v21, v22);
  v24 = (int *)type metadata accessor for MoonViewModel(0);
  *(_QWORD *)(v20 + v24[5]) = *(_QWORD *)(v21 + v24[5]);
  v25 = v24[6];
  v26 = (void *)(v20 + v25);
  v27 = (const void *)(v21 + v25);
  v28 = _s7Weather24LocationCompositionStateOwet_0(v20 + v25, 1, v22);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v22);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, const void *, uint64_t))(v402 + 32))(v26, v27, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v22);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v402 + 8))(v26, v22);
LABEL_8:
    v30 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_9;
  }
  v23((uint64_t)v26, (uint64_t)v27, v22);
LABEL_9:
  v31 = v24[7];
  v32 = (void *)(v20 + v31);
  v33 = (const void *)(v21 + v31);
  v34 = _s7Weather24LocationCompositionStateOwet_0(v20 + v31, 1, v22);
  v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v22);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(v402 + 32))(v32, v33, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v22);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v402 + 8))(v32, v22);
LABEL_14:
    v36 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_15;
  }
  v23((uint64_t)v32, (uint64_t)v33, v22);
LABEL_15:
  *(_BYTE *)(v20 + v24[8]) = *(_BYTE *)(v21 + v24[8]);
  v37 = a3[8];
  v38 = a1 + v37;
  v39 = v411 + v37;
  v40 = *(_QWORD *)(v411 + v37 + 8);
  *(_QWORD *)v38 = *(_QWORD *)(v411 + v37);
  *(_QWORD *)(v38 + 8) = v40;
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 24) = v41;
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v39 + 40);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 40) = v42;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  v43 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v23(v38 + v43[8], v39 + v43[8], v22);
  v23(v38 + v43[9], v39 + v43[9], v22);
  *(_BYTE *)(v38 + v43[10]) = *(_BYTE *)(v39 + v43[10]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(v411 + a3[9]);
  swift_bridgeObjectRelease();
  v44 = a3[10];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(v411 + v44);
  if (*(_QWORD *)(a1 + v44))
  {
    if (*v46)
    {
      *v45 = *v46;
      swift_bridgeObjectRelease();
      v45[1] = v46[1];
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_10046CBB0(v45);
  }
  *(_OWORD *)v45 = *(_OWORD *)v46;
LABEL_20:
  v410 = a3;
  v47 = a3[11];
  v48 = a1 + v47;
  v49 = (_QWORD *)(v411 + v47);
  LOBYTE(v47) = *(_BYTE *)(v411 + v47 + 16);
  v50 = *(_QWORD *)v48;
  v51 = *(_QWORD *)(v48 + 8);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  v52 = *(_BYTE *)(v48 + 16);
  *(_BYTE *)(v48 + 16) = v47;
  sub_10006BD8C(v50, v51, v52);
  v53 = v49[4];
  *(_QWORD *)(v48 + 24) = v49[3];
  *(_QWORD *)(v48 + 32) = v53;
  swift_bridgeObjectRelease();
  v407 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  v54 = *(int *)(v407 + 24);
  v55 = (void *)(v48 + v54);
  v56 = (char *)v49 + v54;
  v57 = type metadata accessor for WeatherDescription(0);
  v58 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v57);
  v59 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  v60 = *(_QWORD *)(v57 - 8);
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v60 + 8))(v55, v57);
LABEL_25:
    v61 = sub_1000BA294(&qword_100BC3368);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, char *, uint64_t))(v60 + 40))(v55, v56, v57);
LABEL_26:
  v62 = (int *)v407;
  if (a1 != v411)
  {
    v63 = *(int *)(v407 + 28);
    v64 = (_OWORD *)(v48 + v63);
    v65 = (_OWORD *)((char *)v49 + v63);
    sub_1000215BC(v48 + v63, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    v66 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload(v65))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v64, v65, v57);
        v67 = v64;
        v68 = v66;
        v69 = 0;
        goto LABEL_74;
      case 2u:
        v70 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v64, v65, v70);
        v67 = v64;
        v68 = v66;
        v69 = 2;
        goto LABEL_74;
      case 3u:
        v71 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v64, v65, v71);
        v67 = v64;
        v68 = v66;
        v69 = 3;
        goto LABEL_74;
      case 4u:
        __dst = v49;
        v72 = v65[1];
        *v64 = *v65;
        v64[1] = v72;
        v73 = type metadata accessor for DetailComponentContainerViewModel(0);
        v74 = *(int *)(v73 + 20);
        v75 = (char *)v64 + v74;
        v388 = v65;
        v76 = (char *)v65 + v74;
        v77 = type metadata accessor for NewsArticleComponentViewModel(0);
        v396 = v66;
        if (swift_getEnumCaseMultiPayload(v76) == 1)
        {
          v365 = v77;
          v369 = v73;
          *(_OWORD *)v75 = *(_OWORD *)v76;
          v371 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v375 = v75;
          v78 = v371[5];
          v79 = &v75[v78];
          v80 = &v76[v78];
          v81 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
          {
            v82 = sub_1000BA294(&qword_100BD4280);
            memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
            v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32);
          }
          else
          {
            v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32);
            v94(v79, v80, v81);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
            v83 = v94;
          }
          *(_OWORD *)&v375[v371[6]] = *(_OWORD *)&v76[v371[6]];
          v363 = v83;
          v83(&v375[v371[7]], &v76[v371[7]], v81);
          v95 = v371[8];
          v96 = &v375[v95];
          v97 = &v76[v95];
          v49 = __dst;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v76[v95], 1, v81))
          {
            v98 = sub_1000BA294(&qword_100BD4280);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
          }
          else
          {
            v363(v96, v97, v81);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v81);
          }
          v375[v371[9]] = v76[v371[9]];
          swift_storeEnumTagMultiPayload(v375, v365, 1);
          v73 = v369;
        }
        else
        {
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          v49 = __dst;
        }
        v104 = *(int *)(v73 + 24);
        v105 = (char *)v64 + v104;
        v106 = (char *)v388 + v104;
        v107 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
        {
          v108 = sub_1000BA294(&qword_100BD3100);
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          v109 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v105, v106, v109);
          v110 = sub_1000BA294(&qword_100BC5FE8);
          v105[*(int *)(v110 + 48)] = v106[*(int *)(v110 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
        }
        swift_storeEnumTagMultiPayload(v64, v396, 4);
        v62 = (int *)v407;
        break;
      case 6u:
        v84 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v64, v65, v84);
        v67 = v64;
        v68 = v66;
        v69 = 6;
        goto LABEL_74;
      case 7u:
        v85 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v65) == 1)
        {
          v376 = v85;
          v397 = v66;
          *v64 = *v65;
          v86 = type metadata accessor for ConditionDetailMapViewModel(0);
          v87 = *(int *)(v86 + 20);
          v389 = (char *)v64 + v87;
          v88 = (char *)v65 + v87;
          v89 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v389, v88, v89);
          v372 = (int *)v86;
          v90 = *(int *)(v86 + 24);
          v390 = (_OWORD *)((char *)v64 + v90);
          v91 = (char *)v65 + v90;
          v92 = type metadata accessor for WeatherData(0);
          __dsta = v91;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v92))
          {
            v93 = sub_1000BA294(&qword_100BC3460);
            memcpy(v390, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
          }
          else
          {
            *v390 = *(_OWORD *)v91;
            v370 = (int *)v92;
            v99 = *(int *)(v92 + 20);
            v100 = (char *)v390 + v99;
            v101 = &v91[v99];
            v102 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
            {
              v103 = sub_1000BA294(&qword_100BC3340);
              memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
            }
            v111 = v370[6];
            v364 = &__dsta[v111];
            v366 = (char *)v390 + v111;
            v112 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v366, v364, v112);
            v113 = v370[7];
            v114 = (char *)v390 + v113;
            v115 = &__dsta[v113];
            v116 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116))
            {
              v117 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v114, v115, v22);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
            }
            v118 = v370[8];
            v119 = (char *)v390 + v118;
            v120 = &__dsta[v118];
            v121 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v120) == 1)
            {
              v122 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v119, v120, v122);
              swift_storeEnumTagMultiPayload(v119, v121, 1);
            }
            else
            {
              memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
            }
            v123 = v370[9];
            v124 = (char *)v390 + v123;
            v125 = &__dsta[v123];
            v126 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v126))
            {
              v127 = sub_1000BA294(&qword_100BC3350);
              memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v22))
              {
                v128 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v124, v125, v22);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v22);
              }
              v129 = *(int *)(v126 + 20);
              __dstb = &v124[v129];
              v130 = &v125[v129];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v22))
              {
                v131 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(__dstb, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v402 + 32))(__dstb, v130, v22);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v22);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v126);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v390, 0, 1, (uint64_t)v370);
            v62 = (int *)v407;
          }
          *(_OWORD *)((char *)v64 + v372[7]) = *(_OWORD *)((char *)v65 + v372[7]);
          v132 = v372[8];
          v391 = (char *)v64 + v132;
          v133 = (char *)v65 + v132;
          v134 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v391, v133, v134);
          *((_BYTE *)v64 + v372[9]) = *((_BYTE *)v65 + v372[9]);
          swift_storeEnumTagMultiPayload(v64, v376, 1);
          v66 = v397;
        }
        else
        {
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        v67 = v64;
        v68 = v66;
        v69 = 7;
LABEL_74:
        swift_storeEnumTagMultiPayload(v67, v68, v69);
        break;
      default:
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        break;
    }
  }
  v135 = v62[8];
  v136 = (_OWORD *)(v48 + v135);
  v137 = (_OWORD *)((char *)v49 + v135);
  v138 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v138);
  v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138);
  if (v139)
  {
    if (!v140)
    {
      switch(swift_getEnumCaseMultiPayload(v137))
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v136, v137, v57);
          v141 = v136;
          v142 = v138;
          v143 = 0;
          goto LABEL_160;
        case 2u:
          v148 = type metadata accessor for AttributedString(0);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v136, v137, v148);
          v141 = v136;
          v142 = v138;
          v143 = 2;
          goto LABEL_160;
        case 3u:
          v149 = sub_1000BA294(&qword_100BD30F8);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v136, v137, v149);
          v141 = v136;
          v142 = v138;
          v143 = 3;
          goto LABEL_160;
        case 4u:
          v150 = v137[1];
          *v136 = *v137;
          v136[1] = v150;
          v151 = type metadata accessor for DetailComponentContainerViewModel(0);
          v152 = *(int *)(v151 + 20);
          v153 = (char *)v136 + v152;
          v154 = (char *)v137 + v152;
          v155 = type metadata accessor for NewsArticleComponentViewModel(0);
          v398 = v138;
          if (swift_getEnumCaseMultiPayload(v154) == 1)
          {
            __dstc = (void *)v151;
            v392 = v155;
            *(_OWORD *)v153 = *(_OWORD *)v154;
            v403 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            v156 = v403[5];
            v157 = &v153[v156];
            v158 = &v154[v156];
            v159 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v158, 1, v159))
            {
              v160 = sub_1000BA294(&qword_100BD4280);
              memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
              v161 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32);
            }
            else
            {
              v200 = v158;
              v201 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32);
              v201(v157, v200, v159);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v159);
              v161 = v201;
            }
            *(_OWORD *)&v153[v403[6]] = *(_OWORD *)&v154[v403[6]];
            v377 = v161;
            v161(&v153[v403[7]], &v154[v403[7]], v159);
            v202 = v403[8];
            v203 = &v153[v202];
            v204 = &v154[v202];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v154[v202], 1, v159))
            {
              v205 = sub_1000BA294(&qword_100BD4280);
              memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
            }
            else
            {
              v377(v203, v204, v159);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v159);
            }
            v151 = (uint64_t)__dstc;
            v153[v403[9]] = v154[v403[9]];
            swift_storeEnumTagMultiPayload(v153, v392, 1);
          }
          else
          {
            memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
          }
          v211 = *(int *)(v151 + 24);
          v212 = (char *)v136 + v211;
          v213 = (char *)v137 + v211;
          v214 = type metadata accessor for DetailComponentAction(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v214))
          {
            v215 = sub_1000BA294(&qword_100BD3100);
            memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
          }
          else
          {
            v216 = type metadata accessor for URL(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v212, v213, v216);
            v217 = sub_1000BA294(&qword_100BC5FE8);
            v212[*(int *)(v217 + 48)] = v213[*(int *)(v217 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v214);
          }
          v138 = v398;
          swift_storeEnumTagMultiPayload(v136, v398, 4);
          v62 = (int *)v407;
          break;
        case 6u:
          v162 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v136, v137, v162);
          v141 = v136;
          v142 = v138;
          v143 = 6;
          goto LABEL_160;
        case 7u:
          v163 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
          if (swift_getEnumCaseMultiPayload(v137) == 1)
          {
            v393 = v163;
            v399 = v138;
            *v136 = *v137;
            v164 = type metadata accessor for ConditionDetailMapViewModel(0);
            v165 = *(int *)(v164 + 20);
            v166 = (char *)v136 + v165;
            v167 = (char *)v137 + v165;
            v168 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v166, v167, v168);
            __dstd = (int *)v164;
            v169 = *(int *)(v164 + 24);
            v170 = (_OWORD *)((char *)v136 + v169);
            v171 = (_OWORD *)((char *)v137 + v169);
            v172 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
            {
              v173 = sub_1000BA294(&qword_100BC3460);
              memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
            }
            else
            {
              *v170 = *v171;
              v373 = v170;
              v378 = (int *)v172;
              v206 = *(int *)(v172 + 20);
              v207 = (char *)v170 + v206;
              v208 = (char *)v171 + v206;
              v209 = type metadata accessor for Locale(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v209))
              {
                v210 = sub_1000BA294(&qword_100BC3340);
                memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v207, v208, v209);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v209);
              }
              v229 = v378[6];
              v367 = (char *)v373 + v229;
              v230 = (char *)v171 + v229;
              v231 = type metadata accessor for WeatherDataModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v367, v230, v231);
              v232 = v378[7];
              v233 = (char *)v373 + v232;
              v234 = (char *)v171 + v232;
              v235 = sub_1000BA294(&qword_100BC3348);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v235))
              {
                v236 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v233, v234, v22);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v233, 0, 1, v235);
              }
              v244 = v378[8];
              v245 = (char *)v373 + v244;
              v246 = (char *)v171 + v244;
              v247 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload(v246) == 1)
              {
                v248 = type metadata accessor for WeatherStatisticsModel(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(v245, v246, v248);
                swift_storeEnumTagMultiPayload(v245, v247, 1);
              }
              else
              {
                memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
              }
              v249 = (uint64_t)v373;
              v250 = v378[9];
              v251 = (char *)v373 + v250;
              v252 = (char *)v171 + v250;
              v253 = type metadata accessor for WeatherDataOverrides(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v252, 1, v253))
              {
                v254 = sub_1000BA294(&qword_100BC3350);
                memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v252, 1, v22))
                {
                  v255 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v255 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v251, v252, v22);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v251, 0, 1, v22);
                }
                v264 = *(int *)(v253 + 20);
                v265 = &v251[v264];
                v266 = &v252[v264];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v266, 1, v22))
                {
                  v267 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v265, v266, v22);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v265, 0, 1, v22);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v251, 0, 1, v253);
                v249 = (uint64_t)v373;
              }
              _s7Weather24LocationCompositionStateOwst_0(v249, 0, 1, (uint64_t)v378);
              v62 = (int *)v407;
            }
            *(_OWORD *)((char *)v136 + __dstd[7]) = *(_OWORD *)((char *)v137 + __dstd[7]);
            v279 = __dstd[8];
            v280 = (char *)v136 + v279;
            v281 = (char *)v137 + v279;
            v282 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v280, v281, v282);
            *((_BYTE *)v136 + __dstd[9]) = *((_BYTE *)v137 + __dstd[9]);
            swift_storeEnumTagMultiPayload(v136, v393, 1);
            v138 = v399;
          }
          else
          {
            memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
          }
          v141 = v136;
          v142 = v138;
          v143 = 7;
LABEL_160:
          swift_storeEnumTagMultiPayload(v141, v142, v143);
          break;
        default:
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
      goto LABEL_173;
    }
    goto LABEL_81;
  }
  if (v140)
  {
    sub_1000215BC((uint64_t)v136, type metadata accessor for ConditionDetailPlatterViewModel.Body);
LABEL_81:
    v144 = *(_QWORD *)(sub_1000BA294(&qword_100BD3108) - 8);
LABEL_82:
    memcpy(v136, v137, *(_QWORD *)(v144 + 64));
    goto LABEL_173;
  }
  if (a1 != v411)
  {
    sub_1000215BC((uint64_t)v136, type metadata accessor for ConditionDetailPlatterViewModel.Body);
    switch(swift_getEnumCaseMultiPayload(v137))
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v136, v137, v57);
        v145 = v136;
        v146 = v138;
        v147 = 0;
        goto LABEL_172;
      case 2u:
        v174 = type metadata accessor for AttributedString(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v136, v137, v174);
        v145 = v136;
        v146 = v138;
        v147 = 2;
        goto LABEL_172;
      case 3u:
        v175 = sub_1000BA294(&qword_100BD30F8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v136, v137, v175);
        v145 = v136;
        v146 = v138;
        v147 = 3;
        goto LABEL_172;
      case 4u:
        v176 = v137[1];
        *v136 = *v137;
        v136[1] = v176;
        v177 = type metadata accessor for DetailComponentContainerViewModel(0);
        v178 = *(int *)(v177 + 20);
        v179 = (char *)v136 + v178;
        v180 = (char *)v137 + v178;
        v181 = type metadata accessor for NewsArticleComponentViewModel(0);
        v400 = v138;
        if (swift_getEnumCaseMultiPayload(v180) == 1)
        {
          __dste = (void *)v177;
          v394 = v181;
          *(_OWORD *)v179 = *(_OWORD *)v180;
          v404 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v182 = v404[5];
          v183 = &v179[v182];
          v184 = &v180[v182];
          v185 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v185))
          {
            v186 = sub_1000BA294(&qword_100BD4280);
            memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
            v187 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32);
          }
          else
          {
            v218 = v184;
            v219 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32);
            v219(v183, v218, v185);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v185);
            v187 = v219;
          }
          *(_OWORD *)&v179[v404[6]] = *(_OWORD *)&v180[v404[6]];
          v379 = v187;
          v187(&v179[v404[7]], &v180[v404[7]], v185);
          v220 = v404[8];
          v221 = &v179[v220];
          v222 = &v180[v220];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v180[v220], 1, v185))
          {
            v223 = sub_1000BA294(&qword_100BD4280);
            memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
          }
          else
          {
            v379(v221, v222, v185);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v185);
          }
          v177 = (uint64_t)__dste;
          v179[v404[9]] = v180[v404[9]];
          swift_storeEnumTagMultiPayload(v179, v394, 1);
        }
        else
        {
          memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
        }
        v237 = *(int *)(v177 + 24);
        v238 = (char *)v136 + v237;
        v239 = (char *)v137 + v237;
        v240 = type metadata accessor for DetailComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
        {
          v241 = sub_1000BA294(&qword_100BD3100);
          memcpy(v238, v239, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
        }
        else
        {
          v242 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 32))(v238, v239, v242);
          v243 = sub_1000BA294(&qword_100BC5FE8);
          v238[*(int *)(v243 + 48)] = v239[*(int *)(v243 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v238, 0, 1, v240);
        }
        swift_storeEnumTagMultiPayload(v136, v400, 4);
        v62 = (int *)v407;
        break;
      case 6u:
        v188 = type metadata accessor for PrecipitationTotalPlatterViewModel(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v136, v137, v188);
        v145 = v136;
        v146 = v138;
        v147 = 6;
        goto LABEL_172;
      case 7u:
        v189 = type metadata accessor for ConditionDetailDynamicContentIdentifier(0);
        if (swift_getEnumCaseMultiPayload(v137) == 1)
        {
          v395 = v189;
          v401 = v138;
          *v136 = *v137;
          v190 = type metadata accessor for ConditionDetailMapViewModel(0);
          v191 = *(int *)(v190 + 20);
          v192 = (char *)v136 + v191;
          v193 = (char *)v137 + v191;
          v194 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v192, v193, v194);
          __dstf = (int *)v190;
          v195 = *(int *)(v190 + 24);
          v196 = (_OWORD *)((char *)v136 + v195);
          v197 = (_OWORD *)((char *)v137 + v195);
          v198 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198))
          {
            v199 = sub_1000BA294(&qword_100BC3460);
            memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
          }
          else
          {
            *v196 = *v197;
            v374 = v196;
            v380 = (int *)v198;
            v224 = *(int *)(v198 + 20);
            v225 = (char *)v196 + v224;
            v226 = (char *)v197 + v224;
            v227 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v227))
            {
              v228 = sub_1000BA294(&qword_100BC3340);
              memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v225, v226, v227);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, v227);
            }
            v256 = v380[6];
            v368 = (char *)v374 + v256;
            v257 = (char *)v197 + v256;
            v258 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 32))(v368, v257, v258);
            v259 = v380[7];
            v260 = (char *)v374 + v259;
            v261 = (char *)v197 + v259;
            v262 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v261, 1, v262))
            {
              v263 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v260, v261, v22);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v260, 0, 1, v262);
            }
            v268 = v380[8];
            v269 = (char *)v374 + v268;
            v270 = (char *)v197 + v268;
            v271 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v270) == 1)
            {
              v272 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v269, v270, v272);
              swift_storeEnumTagMultiPayload(v269, v271, 1);
            }
            else
            {
              memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
            }
            v273 = (uint64_t)v374;
            v274 = v380[9];
            v275 = (char *)v374 + v274;
            v276 = (char *)v197 + v274;
            v277 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v276, 1, v277))
            {
              v278 = sub_1000BA294(&qword_100BC3350);
              memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v276, 1, v22))
              {
                v283 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v275, v276, v22);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v275, 0, 1, v22);
              }
              v284 = *(int *)(v277 + 20);
              v285 = &v275[v284];
              v286 = &v276[v284];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v286, 1, v22))
              {
                v287 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v285, v286, *(_QWORD *)(*(_QWORD *)(v287 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v285, v286, v22);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v22);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v275, 0, 1, v277);
              v273 = (uint64_t)v374;
            }
            _s7Weather24LocationCompositionStateOwst_0(v273, 0, 1, (uint64_t)v380);
            v62 = (int *)v407;
          }
          *(_OWORD *)((char *)v136 + __dstf[7]) = *(_OWORD *)((char *)v137 + __dstf[7]);
          v288 = __dstf[8];
          v289 = (char *)v136 + v288;
          v290 = (char *)v137 + v288;
          v291 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v289, v290, v291);
          *((_BYTE *)v136 + __dstf[9]) = *((_BYTE *)v137 + __dstf[9]);
          swift_storeEnumTagMultiPayload(v136, v395, 1);
          v138 = v401;
        }
        else
        {
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
        }
        v145 = v136;
        v146 = v138;
        v147 = 7;
LABEL_172:
        swift_storeEnumTagMultiPayload(v145, v146, v147);
        break;
      default:
        v144 = *(_QWORD *)(v138 - 8);
        goto LABEL_82;
    }
  }
LABEL_173:
  *(_BYTE *)(v48 + v62[9]) = *((_BYTE *)v49 + v62[9]);
  *(_BYTE *)(v48 + v62[10]) = *((_BYTE *)v49 + v62[10]);
  v293 = v410;
  v292 = v411;
  *(_QWORD *)(a1 + v410[12]) = *(_QWORD *)(v411 + v410[12]);
  swift_bridgeObjectRelease();
  v294 = v410[13];
  v295 = a1 + v294;
  v296 = v411 + v294;
  v297 = type metadata accessor for DetailComponentContainerViewModel(0);
  v298 = _s7Weather24LocationCompositionStateOwet_0(v295, 1, v297);
  v299 = _s7Weather24LocationCompositionStateOwet_0(v296, 1, v297);
  if (v298)
  {
    if (!v299)
    {
      v300 = *(_OWORD *)(v296 + 16);
      *(_OWORD *)v295 = *(_OWORD *)v296;
      *(_OWORD *)(v295 + 16) = v300;
      v301 = *(int *)(v297 + 20);
      v302 = (char *)(v295 + v301);
      v303 = (char *)(v296 + v301);
      v304 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v303) == 1)
      {
        v408 = v304;
        *(_OWORD *)v302 = *(_OWORD *)v303;
        v305 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v306 = v305[5];
        v307 = &v302[v306];
        v308 = &v303[v306];
        v309 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v308, 1, v309))
        {
          v310 = sub_1000BA294(&qword_100BD4280);
          memcpy(v307, v308, *(_QWORD *)(*(_QWORD *)(v310 - 8) + 64));
          v311 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 32);
        }
        else
        {
          v317 = v308;
          v311 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 32);
          v311(v307, v317, v309);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v307, 0, 1, v309);
        }
        *(_OWORD *)&v302[v305[6]] = *(_OWORD *)&v303[v305[6]];
        v405 = v311;
        v311(&v302[v305[7]], &v303[v305[7]], v309);
        v318 = v305[8];
        v319 = &v302[v318];
        v320 = &v303[v318];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v303[v318], 1, v309))
        {
          v321 = sub_1000BA294(&qword_100BD4280);
          memcpy(v319, v320, *(_QWORD *)(*(_QWORD *)(v321 - 8) + 64));
        }
        else
        {
          v405(v319, v320, v309);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v319, 0, 1, v309);
        }
        v302[v305[9]] = v303[v305[9]];
        swift_storeEnumTagMultiPayload(v302, v408, 1);
        v293 = v410;
      }
      else
      {
        memcpy(v302, v303, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
      }
      v322 = *(int *)(v297 + 24);
      v323 = (void *)(v295 + v322);
      v324 = (const void *)(v296 + v322);
      v325 = type metadata accessor for DetailComponentAction(0);
      v292 = v411;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v324, 1, v325))
      {
        v326 = sub_1000BA294(&qword_100BD3100);
        memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v326 - 8) + 64));
      }
      else
      {
        v327 = type metadata accessor for URL(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v327 - 8) + 32))(v323, v324, v327);
        v328 = sub_1000BA294(&qword_100BC5FE8);
        *((_BYTE *)v323 + *(int *)(v328 + 48)) = *((_BYTE *)v324 + *(int *)(v328 + 48));
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v323, 0, 1, v325);
      }
      v329 = v295;
      v330 = v297;
      goto LABEL_195;
    }
    goto LABEL_180;
  }
  if (v299)
  {
    sub_1000215BC(v295, type metadata accessor for DetailComponentContainerViewModel);
LABEL_180:
    v312 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC68A0) - 8) + 64);
    v313 = (void *)v295;
    v314 = (const void *)v296;
    goto LABEL_181;
  }
  if (!*(_QWORD *)(v295 + 8))
    goto LABEL_198;
  v315 = *(_QWORD *)(v296 + 8);
  if (!v315)
  {
    sub_10035C44C(v295);
LABEL_198:
    v336 = *(_OWORD *)(v296 + 16);
    *(_OWORD *)v295 = *(_OWORD *)v296;
    *(_OWORD *)(v295 + 16) = v336;
    goto LABEL_199;
  }
  *(_QWORD *)v295 = *(_QWORD *)v296;
  *(_QWORD *)(v295 + 8) = v315;
  swift_bridgeObjectRelease();
  v316 = *(_QWORD *)(v296 + 24);
  *(_QWORD *)(v295 + 16) = *(_QWORD *)(v296 + 16);
  *(_QWORD *)(v295 + 24) = v316;
  swift_bridgeObjectRelease();
LABEL_199:
  if (a1 != v411)
  {
    v337 = *(int *)(v297 + 20);
    v338 = (char *)(v295 + v337);
    v339 = (char *)(v296 + v337);
    sub_1000215BC(v295 + v337, type metadata accessor for NewsArticleComponentViewModel);
    v340 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload(v339) == 1)
    {
      v409 = v340;
      *(_OWORD *)v338 = *(_OWORD *)v339;
      v341 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v342 = v341[5];
      v343 = &v338[v342];
      v344 = &v339[v342];
      v345 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v344, 1, v345))
      {
        v346 = sub_1000BA294(&qword_100BD4280);
        memcpy(v343, v344, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
        v347 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v345 - 8) + 32);
      }
      else
      {
        v348 = v344;
        v347 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v345 - 8) + 32);
        v347(v343, v348, v345);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v343, 0, 1, v345);
      }
      *(_OWORD *)&v338[v341[6]] = *(_OWORD *)&v339[v341[6]];
      v406 = v347;
      v347(&v338[v341[7]], &v339[v341[7]], v345);
      v349 = v341[8];
      v350 = &v338[v349];
      v351 = &v339[v349];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v339[v349], 1, v345))
      {
        v352 = sub_1000BA294(&qword_100BD4280);
        memcpy(v350, v351, *(_QWORD *)(*(_QWORD *)(v352 - 8) + 64));
      }
      else
      {
        v406(v350, v351, v345);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v350, 0, 1, v345);
      }
      v338[v341[9]] = v339[v341[9]];
      swift_storeEnumTagMultiPayload(v338, v409, 1);
      v293 = v410;
      v292 = v411;
    }
    else
    {
      memcpy(v338, v339, *(_QWORD *)(*(_QWORD *)(v340 - 8) + 64));
      v292 = v411;
    }
  }
  v353 = *(int *)(v297 + 24);
  v354 = v295 + v353;
  v355 = v296 + v353;
  v356 = type metadata accessor for DetailComponentAction(0);
  v357 = _s7Weather24LocationCompositionStateOwet_0(v354, 1, v356);
  v358 = _s7Weather24LocationCompositionStateOwet_0(v355, 1, v356);
  if (v357)
  {
    if (!v358)
    {
      v359 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v359 - 8) + 32))(v354, v355, v359);
      v360 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v354 + *(int *)(v360 + 48)) = *(_BYTE *)(v355 + *(int *)(v360 + 48));
      v329 = v354;
      v330 = v356;
LABEL_195:
      _s7Weather24LocationCompositionStateOwst_0(v329, 0, 1, v330);
      goto LABEL_196;
    }
  }
  else
  {
    if (!v358)
    {
      v361 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v361 - 8) + 40))(v354, v355, v361);
      v362 = sub_1000BA294(&qword_100BC5FE8);
      *(_BYTE *)(v354 + *(int *)(v362 + 48)) = *(_BYTE *)(v355 + *(int *)(v362 + 48));
      goto LABEL_196;
    }
    sub_1000215BC(v354, type metadata accessor for DetailComponentAction);
  }
  v312 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD3100) - 8) + 64);
  v313 = (void *)v354;
  v314 = (const void *)v355;
LABEL_181:
  memcpy(v313, v314, v312);
LABEL_196:
  v331 = v293[14];
  v332 = a1 + v331;
  v333 = v292 + v331;
  v334 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v334 - 8) + 40))(v332, v333, v334);
  *(_BYTE *)(a1 + v293[15]) = *(_BYTE *)(v292 + v293[15]);
  return a1;
}

uint64_t sub_10047BD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047BD18);
}

uint64_t sub_10047BD18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  sub_1000DDAC0();
  sub_100088FF0();
  if (v13)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    type metadata accessor for MoonViewModel(0);
    sub_100088FF0();
    if (v13)
    {
      v7 = v11;
      v12 = a3[7];
    }
    else
    {
      type metadata accessor for MoonScrubberHeaderViewModel(0);
      sub_100088FF0();
      if (v13)
      {
        v7 = v14;
        v12 = a3[8];
      }
      else
      {
        type metadata accessor for ConditionDetailPlatterViewModel(0);
        sub_100088FF0();
        if (v15)
        {
          v7 = v16;
          v12 = a3[11];
        }
        else
        {
          sub_1000BA294(&qword_100BC68A0);
          sub_100088FF0();
          if (v17)
          {
            v7 = v18;
            v12 = a3[13];
          }
          else
          {
            v7 = sub_1000992C4();
            v12 = a3[14];
          }
        }
      }
    }
    v8 = v4 + v12;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + a3[5] + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10047BE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047BE20);
}

void sub_10047BE20(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  sub_1000DDAC0();
  sub_10009D2E8();
  if (v13)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + a4[5] + 8) = (v4 - 1);
      return;
    }
    type metadata accessor for MoonViewModel(0);
    sub_10009D2E8();
    if (v13)
    {
      v9 = v11;
      v12 = a4[7];
    }
    else
    {
      type metadata accessor for MoonScrubberHeaderViewModel(0);
      sub_10009D2E8();
      if (v13)
      {
        v9 = v14;
        v12 = a4[8];
      }
      else
      {
        type metadata accessor for ConditionDetailPlatterViewModel(0);
        sub_10009D2E8();
        if (v15)
        {
          v9 = v16;
          v12 = a4[11];
        }
        else
        {
          sub_1000BA294(&qword_100BC68A0);
          sub_10009D2E8();
          if (v17)
          {
            v9 = v18;
            v12 = a4[13];
          }
          else
          {
            v9 = sub_1000992C4();
            v12 = a4[14];
          }
        }
      }
    }
    v10 = v5 + v12;
  }
  sub_1000987C4(v10, v4, v4, v9);
}

void sub_10047BF10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[12];

  v2 = type metadata accessor for MoonDetailSelectedDate(319);
  if (v3 <= 0x3F)
  {
    v14[0] = *(_QWORD *)(v2 - 8) + 64;
    v14[1] = &unk_1009A1820;
    v14[2] = &unk_1009A1838;
    v4 = type metadata accessor for MoonViewModel(319);
    if (v5 <= 0x3F)
    {
      v14[3] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for MoonScrubberHeaderViewModel(319);
      if (v7 <= 0x3F)
      {
        v14[4] = *(_QWORD *)(v6 - 8) + 64;
        v14[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v14[6] = &unk_1009A1838;
        v8 = type metadata accessor for ConditionDetailPlatterViewModel(319);
        if (v9 <= 0x3F)
        {
          v14[7] = *(_QWORD *)(v8 - 8) + 64;
          v14[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
          sub_10047C038(319);
          if (v11 <= 0x3F)
          {
            v14[9] = *(_QWORD *)(v10 - 8) + 64;
            v12 = type metadata accessor for Location(319);
            if (v13 <= 0x3F)
            {
              v14[10] = *(_QWORD *)(v12 - 8) + 64;
              v14[11] = &unk_1009A1850;
              swift_initStructMetadata(a1, 256, 12, v14, a1 + 16);
            }
          }
        }
      }
    }
  }
}

void sub_10047C038(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BC9750)
  {
    v2 = type metadata accessor for DetailComponentContainerViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BC9750);
  }
}

uint64_t sub_10047C08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;

  sub_1000A15B4(a1, a9, type metadata accessor for MoonDetailSelectedDate);
  v23 = (int *)sub_1000DF648();
  v24 = (_QWORD *)(a9 + v23[5]);
  *v24 = a2;
  v24[1] = a3;
  v25 = (_QWORD *)(a9 + v23[6]);
  *v25 = a4;
  v25[1] = a5;
  sub_1000A15B4(a6, a9 + v23[7], type metadata accessor for MoonViewModel);
  sub_1000A15B4(a7, a9 + v23[8], type metadata accessor for MoonScrubberHeaderViewModel);
  *(_QWORD *)(a9 + v23[9]) = a8;
  v26 = (_QWORD *)(a9 + v23[10]);
  *v26 = a10;
  v26[1] = a11;
  sub_1000A15B4(a12, a9 + v23[11], type metadata accessor for ConditionDetailPlatterViewModel);
  *(_QWORD *)(a9 + v23[12]) = a13;
  sub_10047C954(a14, a9 + v23[13]);
  v27 = a9 + v23[14];
  v28 = sub_1000992C4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a15, v28);
  *(_BYTE *)(a9 + v23[15]) = a16;
  return result;
}

uint64_t sub_10047C1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  type metadata accessor for MoonDetailViewModel.Model(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  type metadata accessor for MoonDetailViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100099864();
  sub_1000BA294(&qword_100BE43C8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v15 = v12 - v11 + *(int *)(v14 + 48);
  sub_10047C86C(a1, v12 - v11);
  sub_10047C86C(a2, v15);
  sub_1000BBCA0(v13);
  if (!v17)
  {
    sub_10047C86C(v13, v2);
    sub_1000BBCA0(v15);
    if (!v17)
    {
      sub_1000A15B4(v15, v8, type metadata accessor for MoonDetailViewModel.Model);
      v16 = sub_10047C370(v2, v8);
      sub_10009D37C(v8);
      sub_10009D37C(v2);
      sub_1000215BC(v13, type metadata accessor for MoonDetailViewModel);
      return v16 & 1;
    }
    sub_1000215BC(v2, type metadata accessor for MoonDetailViewModel.Model);
LABEL_9:
    sub_100021A14(v13, &qword_100BE43C8);
    v16 = 0;
    return v16 & 1;
  }
  sub_1000BBCA0(v15);
  if (!v17)
    goto LABEL_9;
  sub_1000215BC(v13, type metadata accessor for MoonDetailViewModel);
  v16 = 1;
  return v16 & 1;
}

uint64_t sub_10047C370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  type metadata accessor for DetailComponentContainerViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = (uint64_t *)(v7 - v6);
  v9 = sub_1000BA294(&qword_100BCA048);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100099864();
  sub_1000BA294(&qword_100BC68A0);
  sub_1000B42B0();
  v12 = __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v65 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v65 - v18;
  if ((sub_100669320(a1, a2) & 1) == 0)
    goto LABEL_38;
  v20 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  v21 = v20[5];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  v26 = v22 == *v24 && v23 == v25;
  if (v26 || (v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, *v24, v25, 0), v28 = 0, (v27 & 1) != 0))
  {
    v29 = v20[6];
    v30 = (_QWORD *)(a1 + v29);
    v31 = *(_QWORD *)(a1 + v29 + 8);
    v32 = (_QWORD *)(a2 + v29);
    v33 = v32[1];
    if (v31)
    {
      if (!v33)
        goto LABEL_38;
      if (*v30 != *v32 || v31 != v33)
      {
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(*v30, v31, *v32, v33, 0);
        v28 = 0;
        if ((v35 & 1) == 0)
          return v28 & 1;
      }
    }
    else if (v33)
    {
      goto LABEL_38;
    }
    v36 = sub_1000D8E28(v20[7]);
    if ((sub_10092D170(v36, v37) & 1) == 0)
      goto LABEL_38;
    v38 = sub_1000D8E28(v20[8]);
    sub_10092D090(v38, v39);
    if ((v40 & 1) == 0)
      goto LABEL_38;
    sub_100947318();
    if ((v41 & 1) == 0)
      goto LABEL_38;
    v42 = v20[10];
    v43 = a1 + v42;
    v44 = *(_QWORD *)(a1 + v42);
    v45 = (uint64_t *)(a2 + v42);
    v46 = *v45;
    if (v44)
    {
      if (!v46)
        goto LABEL_38;
      v47 = *(_QWORD *)(v43 + 8);
      v69 = v44;
      v70 = v47;
      v48 = v45[1];
      v67 = v46;
      v68 = v48;
      sub_10047C8F8(v44, v47);
      sub_10047C8F8(v69, v70);
      sub_10047C8F8(v67, v68);
      HIDWORD(v66) = sub_100385A30(v69, v70, v67, v68);
      swift_bridgeObjectRelease(v69);
      swift_bridgeObjectRelease(v67);
      swift_bridgeObjectRelease(v68);
      swift_bridgeObjectRelease(v70);
      sub_10047C928(v69, v70);
      if ((v66 & 0x100000000) == 0)
        goto LABEL_38;
    }
    else if (v46)
    {
      goto LABEL_38;
    }
    v49 = sub_1000D8E28(v20[11]);
    sub_1008B5D2C(v49, v50);
    if ((v57 & 1) == 0)
      goto LABEL_38;
    sub_100946D88(*(_QWORD *)(a1 + v20[12]), *(_QWORD *)(a2 + v20[12]), v51, v52, v53, v54, v55, v56, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75,
      v76);
    if ((v58 & 1) == 0)
      goto LABEL_38;
    sub_10047C8B0(a1 + v20[13], (uint64_t)v19);
    sub_10047C8B0(a2 + v20[13], (uint64_t)v17);
    v59 = v2 + *(int *)(v9 + 48);
    sub_10047C8B0((uint64_t)v19, v2);
    sub_10047C8B0((uint64_t)v17, v59);
    sub_1000B4744(v2);
    if (v26)
    {
      sub_1000B3B4C((uint64_t)v17);
      sub_1000B3B4C((uint64_t)v19);
      sub_1000B4744(v59);
      if (v26)
      {
        sub_100021A14(v2, &qword_100BC68A0);
LABEL_36:
        v62 = sub_1000D8E28(v20[14]);
        if ((static Location.== infix(_:_:)(v62, v63) & 1) != 0)
        {
          v28 = *(_BYTE *)(a1 + v20[15]) ^ *(_BYTE *)(a2 + v20[15]) ^ 1;
          return v28 & 1;
        }
LABEL_38:
        v28 = 0;
        return v28 & 1;
      }
    }
    else
    {
      sub_10047C8B0(v2, (uint64_t)v14);
      sub_1000B4744(v59);
      if (!v60)
      {
        sub_1000A15B4(v59, (uint64_t)v8, type metadata accessor for DetailComponentContainerViewModel);
        v61 = sub_10035CD60(v14, v8);
        sub_10009D37C((uint64_t)v8);
        sub_1000B3B4C((uint64_t)v17);
        sub_1000B3B4C((uint64_t)v19);
        sub_10009D37C((uint64_t)v14);
        sub_1000B3B4C(v2);
        if ((v61 & 1) == 0)
          goto LABEL_38;
        goto LABEL_36;
      }
      sub_100021A14((uint64_t)v17, &qword_100BC68A0);
      sub_100021A14((uint64_t)v19, &qword_100BC68A0);
      sub_1000215BC((uint64_t)v14, type metadata accessor for DetailComponentContainerViewModel);
    }
    sub_100021A14(v2, &qword_100BCA048);
    goto LABEL_38;
  }
  return v28 & 1;
}

uint64_t sub_10047C760@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BE43D0);
  a1[4] = sub_10047C99C();
  sub_10005F164(a1);
  v3 = type metadata accessor for MoonDetailViewModel(0);
  return ShortDescription.init(name:_:)(0xD000000000000013, 0x80000001009A17E0, v2, v3);
}

uint64_t sub_10047C7FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_10047C760(a1);
}

uint64_t sub_10047C810(uint64_t a1)
{
  uint64_t v2;

  sub_10047C9E0(&qword_100BE43E0, (uint64_t)&unk_1009A1890);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_10047C848()
{
  sub_10047C9E0(&qword_100BE43C0, (uint64_t)&unk_1009A1868);
}

uint64_t sub_10047C86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10047C8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC68A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10047C8F8(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = result;
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(v2);
  }
  return result;
}

double sub_10047C928(uint64_t a1, uint64_t a2)
{
  double result;

  if (a1)
  {
    swift_bridgeObjectRelease(a1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  return result;
}

uint64_t sub_10047C954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC68A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10047C99C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE43D8;
  if (!qword_100BE43D8)
  {
    v1 = sub_100075EB0(&qword_100BE43D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE43D8);
  }
  return result;
}

void sub_10047C9E0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for MoonDetailViewModel(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

uint64_t sub_10047CA1C(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  if (a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease(0xE90000000000006ELL);
    v5 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F697469646E6F63, 0xE90000000000006ELL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_10047CAAC()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_10047CAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10047CA1C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10047CAF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10047CF88();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10047CB20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10047CF88();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10047CB4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BE43F0);
  a1[4] = sub_10047CF44();
  sub_10005F164(a1);
  v3 = type metadata accessor for VFXTestViewState(0);
  return ShortDescription.init(name:_:)(0xD000000000000010, 0x80000001009A19D0, v2, v3);
}

uint64_t sub_10047CBE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_1000BA294(&qword_100BE4420);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_10047CF88();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for VFXTestViewState.CodingKeys, &type metadata for VFXTestViewState.CodingKeys, v11, v9, v10);
  v12 = type metadata accessor for WeatherCondition(0);
  v13 = sub_100051B90(&qword_100BE4428, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, (uint64_t)&protocol conformance descriptor for WeatherCondition);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v2, v14, v4, v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_10047CCF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = type metadata accessor for WeatherCondition(0);
  v20 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_100098728();
  v22 = v5 - v4;
  v6 = sub_1000BA294(&qword_100BE4408);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = type metadata accessor for VFXTestViewState(0);
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_10047CF88();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VFXTestViewState.CodingKeys, &type metadata for VFXTestViewState.CodingKeys, v17, v15, v16);
  if (!v2)
  {
    sub_100051B90(&qword_100BE4418, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, (uint64_t)&protocol conformance descriptor for WeatherCondition);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v23, v18, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v14, v22, v23);
    sub_100410500(v14, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
}

uint64_t sub_10047CE9C@<X0>(_QWORD *a1@<X8>)
{
  return sub_10047CB4C(a1);
}

uint64_t sub_10047CEB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100051B90(&qword_100BE4400, type metadata accessor for VFXTestViewState, (uint64_t)&unk_1009A1994);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_10047CEF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10047CCF0(a1, a2);
}

uint64_t sub_10047CF04(_QWORD *a1)
{
  return sub_10047CBE8(a1);
}

uint64_t sub_10047CF18()
{
  return sub_100051B90(&qword_100BE43E8, type metadata accessor for VFXTestViewState, (uint64_t)&unk_1009A196C);
}

unint64_t sub_10047CF44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE43F8;
  if (!qword_100BE43F8)
  {
    v1 = sub_100075EB0(&qword_100BE43F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE43F8);
  }
  return result;
}

unint64_t sub_10047CF88()
{
  unint64_t result;

  result = qword_100BE4410;
  if (!qword_100BE4410)
  {
    result = swift_getWitnessTable(&unk_1009A1ACC, &type metadata for VFXTestViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE4410);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VFXTestViewState.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10047D004 + 4 * byte_1009A1910[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10047D024 + 4 * byte_1009A1915[v4]))();
}

_BYTE *sub_10047D004(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10047D024(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10047D02C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10047D034(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10047D03C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10047D044(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for VFXTestViewState.CodingKeys()
{
  return &type metadata for VFXTestViewState.CodingKeys;
}

uint64_t sub_10047D060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherCondition(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_10047D09C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeatherCondition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10047D0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10047D114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10047D158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10047D19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10047D1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047D1EC);
}

uint64_t sub_10047D1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BC1E8();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_10047D214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047D220);
}

uint64_t sub_10047D220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BC1E8();
  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

unint64_t sub_10047D250()
{
  unint64_t result;

  result = qword_100BE44C0;
  if (!qword_100BE44C0)
  {
    result = swift_getWitnessTable(&unk_1009A1AA4, &type metadata for VFXTestViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE44C0);
  }
  return result;
}

unint64_t sub_10047D290()
{
  unint64_t result;

  result = qword_100BE44C8;
  if (!qword_100BE44C8)
  {
    result = swift_getWitnessTable(&unk_1009A1A14, &type metadata for VFXTestViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE44C8);
  }
  return result;
}

unint64_t sub_10047D2D0()
{
  unint64_t result;

  result = qword_100BE44D0;
  if (!qword_100BE44D0)
  {
    result = swift_getWitnessTable(&unk_1009A1A3C, &type metadata for VFXTestViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE44D0);
  }
  return result;
}

void sub_10047D30C()
{
  EnvironmentValues.openURL.getter();
  sub_10004A298();
}

void sub_10047D328(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for OpenURLAction(0, a2);
  __chkstk_darwin(v4);
  sub_100099864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v2, a1);
  EnvironmentValues.openURL.setter(v2);
  sub_100079F70();
}

uint64_t sub_10047D38C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_1000BA294(&qword_100BE4938);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_10047D3E4()
{
  uint64_t v0;

  v0 = sub_1000BA294(&qword_100BE4938);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_10047D428(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100484AA4();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_10047D44C()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void sub_10047D464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1000986AC();
  v3 = type metadata accessor for InsetGroupedListStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100099864();
  v5 = sub_1000BA294(&qword_100BE4568);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098694();
  v12 = v0;
  v7 = sub_1000BA294(&qword_100BE4570);
  sub_10027248C((uint64_t)&unk_100BE4578);
  v9 = List<>.init(content:)(sub_100481E88, &v11, v7, v8);
  InsetGroupedListStyle.init()(v9);
  sub_10027248C((uint64_t)&unk_100BE4580);
  View.listStyle<A>(_:)(v1, v5, v3, v10, &protocol witness table for InsetGroupedListStyle);
  sub_1000BD208(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  sub_100098640();
}

void sub_10047D58C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[27];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  char v91;
  _QWORD v92[8];
  uint64_t v93[27];
  uint64_t v94[27];
  _QWORD v95[28];

  v55[1] = a2;
  v3 = sub_1000BA294(&qword_100BD94A8);
  __chkstk_darwin(v3);
  v57 = (uint64_t)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v56 = (char *)v55 - v6;
  v7 = sub_1000BA294(&qword_100BD94B8);
  __chkstk_darwin(v7);
  v76 = (uint64_t)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v72 = (uint64_t)v55 - v10;
  v11 = sub_1000BA294(&qword_100BDAE90);
  __chkstk_darwin(v11);
  v75 = (uint64_t)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v77 = (uint64_t)v55 - v14;
  v15 = sub_1000BA294(&qword_100BD94C8);
  __chkstk_darwin(v15);
  v73 = (uint64_t)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)v55 - v18;
  v20 = sub_1000BA294(&qword_100BD94D8);
  __chkstk_darwin(v20);
  v71 = (uint64_t)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)v55 - v23;
  v25 = sub_1000BA294(&qword_100BDAE80);
  __chkstk_darwin(v25);
  v74 = (uint64_t)v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v69 = (uint64_t)v55 - v28;
  sub_10047DD0C();
  v29.n128_f64[0] = sub_10047E81C((uint64_t)v95);
  v64 = v95[1];
  v65 = v95[0];
  v62 = v95[3];
  v63 = v95[2];
  v61 = LOBYTE(v95[4]);
  v67 = static Color.secondary.getter(v29);
  KeyPath = swift_getKeyPath(&unk_1009A1C18);
  v60 = static Font.footnote.getter(KeyPath);
  v59 = swift_getKeyPath(&unk_1009A1C48);
  v95[0] = static Color.clear.getter(v59);
  v58 = AnyView.init<A>(_:)(v95, &type metadata for Color, &protocol witness table for Color, v30);
  v94[0] = *a1;
  *(_OWORD *)&v94[1] = *(_OWORD *)(a1 + 1);
  v31 = sub_1000BA294(&qword_100BC6740);
  Binding.projectedValue.getter(v31);
  v32 = v95[0];
  v33 = v95[1];
  v34 = v95[2];
  v35 = swift_getKeyPath(&unk_1009A1C78);
  v95[0] = v32;
  v95[1] = v33;
  v95[2] = v34;
  Binding.subscript.getter(v93, v35, v31);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  memcpy(v94, v93, 0xD2uLL);
  memcpy(v95, v93, 0xD2uLL);
  v68 = v24;
  sub_10047DF14();
  v70 = v19;
  sub_10047E0F8();
  v36 = *a1;
  v37 = a1[1];
  v38 = a1[2];
  v93[0] = *a1;
  v93[1] = v37;
  v93[2] = v38;
  Binding.wrappedValue.getter(v31);
  v39 = *(_QWORD *)(v78[0] + 272);
  swift_bridgeObjectRetain(v39);
  swift_release();
  if (v39)
  {
    v93[0] = v36;
    v93[1] = v37;
    v93[2] = v38;
    Binding.wrappedValue.getter(v31);
    v40 = *(_QWORD *)(v78[0] + 288);
    swift_bridgeObjectRetain(v40);
    swift_release();
    if (v40)
    {
      sub_10047E2C4();
      swift_bridgeObjectRelease();
      v41 = 0;
    }
    else
    {
      v41 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 1;
  }
  v42 = sub_1000BA294(&qword_100BD9498);
  v43 = v77;
  _s7Weather24LocationCompositionStateOwst_0(v77, v41, 1, v42);
  v44 = v72;
  sub_10047E424();
  v45 = (uint64_t)v56;
  sub_10047E5E4();
  v46 = v74;
  sub_10003773C(v69, v74, &qword_100BDAE80);
  v48 = v64;
  v47 = v65;
  v79 = v65;
  v80 = v64;
  v81 = v63;
  v82 = v62;
  v83 = v61;
  v84 = KeyPath;
  v85 = v67;
  v86 = v59;
  v87 = v60;
  v88 = v58;
  v89 = 0u;
  v90 = 0u;
  v91 = 0;
  v92[0] = v46;
  v92[1] = &v79;
  memcpy(v78, v95, 0xD2uLL);
  v92[2] = v78;
  v49 = v71;
  sub_10003773C((uint64_t)v68, v71, &qword_100BD94D8);
  v92[3] = v49;
  v50 = v73;
  sub_10003773C((uint64_t)v70, v73, &qword_100BD94C8);
  v92[4] = v50;
  v51 = v75;
  sub_10003773C(v43, v75, &qword_100BDAE90);
  v92[5] = v51;
  v52 = v76;
  sub_10003773C(v44, v76, &qword_100BD94B8);
  v92[6] = v52;
  v53 = v57;
  sub_10003773C(v45, v57, &qword_100BD94A8);
  v92[7] = v53;
  sub_10035DE10((uint64_t)v92);
  v54 = v62;
  LOBYTE(v52) = v63;
  sub_100177CCC(v47, v48, v63, v62);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1003696DC(v94);
  sub_100021A14(v45, &qword_100BD94A8);
  sub_100021A14(v72, &qword_100BD94B8);
  sub_100021A14(v77, &qword_100BDAE90);
  sub_100021A14((uint64_t)v70, &qword_100BD94C8);
  sub_100021A14((uint64_t)v68, &qword_100BD94D8);
  sub_100483144(v94);
  sub_100177CF4(v65, v64, v52, v54);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100021A14(v69, &qword_100BDAE80);
  sub_100021A14(v53, &qword_100BD94A8);
  sub_100021A14(v76, &qword_100BD94B8);
  sub_100021A14(v75, &qword_100BDAE90);
  sub_100021A14(v73, &qword_100BD94C8);
  sub_100021A14(v71, &qword_100BD94D8);
  memcpy(v93, v78, 0xD2uLL);
  sub_100483144(v93);
  sub_100177CF4(v79, v80, v81, v82);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100021A14(v74, &qword_100BDAE80);
}

void sub_10047DD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  char v24;
  uint64_t v25;
  uint64_t v26;

  sub_1000986AC();
  v22 = v1;
  v21 = sub_1000BA294(&qword_100BE48F0);
  v2 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  sub_100079FBC();
  v3 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000053, 0x8000000100A05A10);
  v7 = Text.init(_:tableName:bundle:comment:)(v3, v5, v4 & 1, v6, 0, 0, 0, "The report weather introduction string");
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v23[0] = static Color.clear.getter(v7);
  v15 = AnyView.init<A>(_:)(v23, &type metadata for Color, &protocol witness table for Color, v14);
  v23[0] = v7;
  v23[1] = v9;
  v24 = v13;
  v25 = v11;
  v26 = v15;
  v16 = static VerticalEdge.Set.all.getter();
  v17 = sub_1000BA294(&qword_100BE48F8);
  v18 = sub_100484608();
  View.listRowSeparator(_:edges:)(2, v16, v17, v18);
  sub_1000D31B4(v7, v9, v13);
  swift_release(v15);
  v19 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 16))(v22, v0, v21, v19);
  v20 = v22 + *(int *)(sub_1000BA294(&qword_100BDAE80) + 36);
  *(_BYTE *)(v20 + 32) = 0;
  *(_OWORD *)v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v21);
  sub_100098640();
}

void *sub_10047DE90@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  _BYTE __src[200];

  sub_1001F04E8(*a1, __src);
  return memcpy(a2, __src, 0xC2uLL);
}

_QWORD *sub_10047DED0(void *__src)
{
  _QWORD __dst[25];

  memcpy(__dst, __src, 0xC2uLL);
  sub_1001F5330(__dst);
  return sub_1001F052C();
}

void sub_10047DF14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSBundle v21;

  sub_1000986AC();
  sub_1000CD770(v1);
  sub_10009D98C();
  __chkstk_darwin(v2);
  v19 = *(_QWORD *)(sub_1000BC1F8() - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100099234();
  v17 = sub_1000BA294(&qword_100BE4840);
  v18 = *(_QWORD *)(v17 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100099864();
  sub_1000BA294(&qword_100BD94D0);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_10004A2E8();
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v17);
  sub_1000989C4();
  sub_1000C29F4();
  sub_1000EAFCC(v7, v8, v9, v10, v21, v11, v12, 76);
  sub_1000C1640();
  sub_1000CDC70();
  sub_1000BA294(&qword_100BC6740);
  sub_1000C21EC();
  swift_bridgeObjectRetain(*(_QWORD *)(v20 + 224));
  sub_10009880C();
  sub_1000BA294(&qword_100BE4848);
  sub_1001102B0();
  v13 = sub_100484298();
  sub_10009D5F0(v13, (uint64_t)sub_100484290, v14, (uint64_t)&type metadata for SectionHeader);
  sub_100099AC4();
  sub_1000CF864((uint64_t)&unk_100BE4870);
  sub_100098D34(v15);
  sub_1000DA99C(v19);
  sub_1000BD208(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  v16 = sub_100099510();
  *v0 = 0;
  v0[1] = 0;
  swift_storeEnumTagMultiPayload(v0, v16, 7);
  sub_1000DF650();
  sub_1000D12B8();
  sub_1003353F4();
  sub_1000215BC((uint64_t)v0, type metadata accessor for AutomationInfo);
  sub_1000C54EC();
  sub_100098640();
}

void sub_10047E0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSBundle v22;

  sub_1000986AC();
  sub_1000CD770(v1);
  sub_10009D98C();
  __chkstk_darwin(v2);
  v20 = *(_QWORD *)(sub_1000BC1F8() - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100099234();
  v18 = sub_1000BA294(&qword_100BE4798);
  v19 = *(_QWORD *)(v18 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100099864();
  sub_1000BA294(&qword_100BD94C0);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_10004A2E8();
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v18);
  sub_1000989C4();
  sub_1000C29F4();
  sub_1000EAFCC(v7, v8, v9, v10, v22, v11, v12, 72);
  sub_1000C1640();
  sub_1000CDC70();
  sub_1000BA294(&qword_100BC6740);
  sub_1000C21EC();
  swift_bridgeObjectRetain(*(_QWORD *)(v21 + 248));
  sub_10009880C();
  sub_1000BA294(&qword_100BE47A0);
  sub_1001102B0();
  v13 = sub_100483F64();
  sub_10009D5F0(v13, (uint64_t)sub_100483F5C, v14, (uint64_t)&type metadata for SectionHeader);
  sub_100099AC4();
  sub_1000CF864((uint64_t)&unk_100BE47C8);
  sub_100098D34(v15);
  sub_1000DA99C(v20);
  sub_1000BD208(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  sub_100099510();
  v16 = sub_10009DB10();
  swift_storeEnumTagMultiPayload(v16, v17, 12);
  sub_1000DF650();
  sub_1000D12B8();
  sub_100335408();
  sub_1000215BC(v0, type metadata accessor for AutomationInfo);
  sub_1000C54EC();
  sub_100098640();
}

void sub_10047E2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1000986AC();
  v2 = v1;
  v4 = v3;
  sub_1000CD770(v5);
  sub_10009D98C();
  __chkstk_darwin(v6);
  v7 = sub_1000BC1F8();
  v8 = sub_1000DAC8C(v7);
  __chkstk_darwin(v8);
  sub_100099234();
  sub_1000BA294(&qword_100BE4588);
  sub_1000D8FD0();
  __chkstk_darwin(v9);
  sub_1000BCED8();
  sub_1000BA294(&qword_100BD9490);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_10004A2E8();
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v2);
  sub_1000BA294(&qword_100BE4590);
  sub_1001102B0();
  v11 = sub_100483260();
  sub_1000C1650(v11, (uint64_t)sub_10048321C, v12, (uint64_t)&type metadata for SectionHeader);
  sub_100099AC4();
  sub_1000CF864((uint64_t)&unk_100BE45C0);
  sub_1000C0E74(v13);
  sub_1000C1ABC();
  sub_1000D0658();
  sub_100099510();
  v14 = sub_10009DB10();
  swift_storeEnumTagMultiPayload(v14, v15, 17);
  sub_1000DF650();
  sub_1000D12B8();
  sub_10033541C();
  sub_1000215BC(v0, type metadata accessor for AutomationInfo);
  sub_1000C54EC();
  sub_100098640();
}

void sub_10047E424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;

  sub_1000986AC();
  sub_1000CD770(v2);
  sub_10009D98C();
  __chkstk_darwin(v3);
  v4 = sub_1000BC1F8();
  v5 = sub_1000DAC8C(v4);
  __chkstk_darwin(v5);
  sub_100099234();
  sub_1000BA294(&qword_100BE4730);
  sub_1000D8FD0();
  __chkstk_darwin(v6);
  sub_1000BCED8();
  sub_1000BA294(&qword_100BD94B0);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_10004A2E8();
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v0);
  sub_1000989C4();
  v9._object = (void *)0x8000000100A056B0;
  v9._countAndFlagsBits = 0xD000000000000010;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v16);

  sub_1000BA294(&qword_100BE4738);
  sub_1001102B0();
  v11 = sub_100483C28();
  sub_1000C1650(v11, (uint64_t)sub_100483C20, v12, (uint64_t)&type metadata for SectionHeader);
  sub_100099AC4();
  sub_1000CF864((uint64_t)&unk_100BE4758);
  sub_1000C0E74(v13);
  sub_1000C1ABC();
  sub_1000D0658();
  sub_100099510();
  v14 = sub_10009DB10();
  swift_storeEnumTagMultiPayload(v14, v15, 21);
  sub_1000DF650();
  sub_1000D12B8();
  sub_100335430();
  sub_1000215BC(v1, type metadata accessor for AutomationInfo);
  sub_1000C54EC();
  sub_100098640();
}

void sub_10047E5E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSBundle v41;

  sub_1000986AC();
  v31 = type metadata accessor for AutomationInfo(0);
  sub_10009D98C();
  __chkstk_darwin(v9);
  v28 = *(_QWORD *)(sub_1000BC1F8() - 8);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100099234();
  sub_1000BA294(&qword_100BE4638);
  sub_1000D8FD0();
  __chkstk_darwin(v11);
  sub_100099864();
  v12 = sub_1000BA294(&qword_100BD94A0);
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_10004A2E8();
  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000989C4();
  sub_1000C29F4();
  sub_1000EAFCC(v15, v16, v17, v18, v41, v19, v20, 61);
  sub_1000C1640();
  v37 = v3;
  v38 = v4;
  v39 = 0;
  v40 = 0;
  v34 = *v0;
  v35 = *(_OWORD *)(v0 + 1);
  v21 = sub_1000BA294(&qword_100BC6740);
  Binding.projectedValue.getter(v21);
  v33 = v0;
  sub_1000BA294(&qword_100BE4640);
  v22 = sub_1001102B0();
  v23 = sub_1004835CC();
  v24 = sub_1004836EC();
  Section<>.init(header:footer:content:)(&v37, &v36, sub_1004835C4, &v32, &type metadata for SectionHeader, v33, &type metadata for SubmitFeedbackView, v22, v23, v24);
  sub_100099AC4();
  v25 = sub_100483728();
  View.accessibilityElement(children:)(v7, v8, v25);
  sub_1000DA99C(v28);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v8);
  sub_100099510();
  v26 = sub_10009DB10();
  swift_storeEnumTagMultiPayload(v26, v27, 22);
  swift_storeEnumTagMultiPayload(v2, v31, 1);
  sub_100335444();
  sub_1000215BC(v2, type metadata accessor for AutomationInfo);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v6, v30);
  sub_100098640();
}

double sub_10047E81C@<D0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;

  *((_QWORD *)&v26 + 1) = &type metadata for AppleAccountFlags;
  v27 = sub_1004845CC();
  v2 = isFeatureEnabled(_:)(&v25);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v25);
  if ((v2 & 1) != 0)
  {
    v3 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000006ALL, 0x8000000100A05930);
    v20 = Text.init(_:tableName:bundle:comment:)(v3, v5, v4 & 1, v6, 0, 0, 0, "Describing that apple collects your feedback and location but is not associated with your Apple Account");
    v21 = v7;
    v22 = v8 & 1;
    v23 = v9;
    v24 = 0;
  }
  else
  {
    v10 = LocalizedStringKey.init(stringLiteral:)(0x1000000000000066, 0x8000000100A05850);
    v20 = Text.init(_:tableName:bundle:comment:)(v10, v12, v11 & 1, v13, 0, 0, 0, "Describing that apple collects your feedback and location but is not associated with your Apple ID");
    v21 = v15;
    v22 = v14 & 1;
    v23 = v16;
    v24 = 1;
  }
  _ConditionalContent<>.init(storage:)(&v20, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  result = *(double *)&v25;
  v18 = v26;
  v19 = v27;
  *(_OWORD *)a1 = v25;
  *(_OWORD *)(a1 + 16) = v18;
  *(_BYTE *)(a1 + 32) = v19;
  return result;
}

uint64_t sub_10047E958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  __int128 v57;

  v51 = a2;
  v45 = type metadata accessor for InlinePickerStyle(0);
  v49 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v4 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1000BA294(&qword_100BE4860);
  v44 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = sub_1000BA294(&qword_100BE4858);
  v48 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50 = sub_1000BA294(&qword_100BE4878);
  v47 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v43 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v41 = v12;
  v42 = v11;
  v39 = v13;
  v40 = v14;
  v56 = *(_QWORD *)a1;
  v57 = *(_OWORD *)(a1 + 8);
  v15 = sub_1000BA294(&qword_100BC6740);
  Binding.projectedValue.getter(v15);
  v16 = v52;
  v17 = v53;
  v18 = v54;
  KeyPath = swift_getKeyPath(&unk_1009A1D88);
  v52 = v16;
  v53 = v17;
  v54 = v18;
  Binding.subscript.getter(&v56, KeyPath, v15);
  swift_release(v18);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v16);
  v52 = v56;
  v53 = v57;
  LOBYTE(v54) = BYTE8(v57);
  v20 = sub_1000BA294(&qword_100BE4880);
  v21 = sub_100484448();
  v22 = sub_1004840F8((uint64_t)&unk_100BE4890);
  v23 = Picker<>.init(_:selection:content:)(v42, v41, v39 & 1, v40, &v52, sub_10047ECDC, 0, &unk_100B766D0, v20, v21, v22);
  InlinePickerStyle.init()(v23);
  sub_10027248C((uint64_t)&unk_100BE4868);
  v25 = v24;
  v26 = v45;
  View.pickerStyle<A>(_:)(v4, v5, v45, v24, &protocol witness table for InlinePickerStyle);
  (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v4, v26);
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v7, v5);
  v52 = v5;
  v53 = v26;
  v54 = v25;
  v55 = &protocol witness table for InlinePickerStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
  v28 = v43;
  v29 = v46;
  View.labelsHidden()(v46, OpaqueTypeConformance2);
  v30.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v48 + 8))(v9, v29);
  v31 = static Color.blue.getter(v30);
  v32 = swift_getKeyPath(&unk_1009A1CC8);
  v33 = v47;
  v35 = v50;
  v34 = v51;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v47 + 16))(v51, v28, v50);
  v36 = (uint64_t *)(v34 + *(int *)(sub_1000BA294(&qword_100BE4848) + 36));
  *v36 = v32;
  v36[1] = v31;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v28, v35);
}

uint64_t sub_10047ECDC()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _UNKNOWN **v8;

  v8 = &off_100B5A280;
  KeyPath = swift_getKeyPath(&unk_1009A1DB0);
  v1 = sub_1000BA294(&qword_100BE48D8);
  v2 = sub_1000BA294(&qword_100BE48A0);
  sub_10027248C((uint64_t)&unk_100BE48E0);
  v4 = v3;
  v5 = sub_100484448();
  v6 = sub_100484484();
  return ForEach<>.init(_:id:content:)(&v8, KeyPath, sub_10047EDA8, 0, v1, v2, v4, v5, v6);
}

void sub_10047EDA8()
{
  sub_10047F35C();
}

void sub_10047EDCC(char a1@<W0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = 0xD000000000000014;
  v5 = sub_1000BA294(&qword_100BDD818);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x656D6F6D72656874;
    else
      v4 = 0xD000000000000015;
    if (a1 == 1)
      v8 = 0xEB00000000726574;
    else
      v8 = 0x8000000100A05810;
  }
  else
  {
    v8 = 0x8000000100A05830;
  }
  v9 = Image.init(systemName:)(v4, v8);
  static Image.TemplateRenderingMode.macSafeOriginal.getter();
  v10 = type metadata accessor for Image.TemplateRenderingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
  v11 = Image.renderingMode(_:)(v7, v9);
  swift_release(v9);
  sub_100021A14((uint64_t)v7, &qword_100BDD818);
  *a2 = v11;
}

uint64_t sub_10047EEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  __int128 v57;

  v51 = a2;
  v45 = type metadata accessor for InlinePickerStyle(0);
  v49 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v4 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1000BA294(&qword_100BE47B8);
  v44 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = sub_1000BA294(&qword_100BE47B0);
  v48 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50 = sub_1000BA294(&qword_100BE47D0);
  v47 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v43 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v41 = v12;
  v42 = v11;
  v39 = v13;
  v40 = v14;
  v56 = *(_QWORD *)a1;
  v57 = *(_OWORD *)(a1 + 8);
  v15 = sub_1000BA294(&qword_100BC6740);
  Binding.projectedValue.getter(v15);
  v16 = v52;
  v17 = v53;
  v18 = v54;
  KeyPath = swift_getKeyPath(&unk_1009A1D48);
  v52 = v16;
  v53 = v17;
  v54 = v18;
  Binding.subscript.getter(&v56, KeyPath, v15);
  swift_release(v18);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v16);
  v52 = v56;
  v53 = v57;
  LOBYTE(v54) = BYTE8(v57);
  v20 = sub_1000BA294(&qword_100BE47D8);
  v21 = sub_1004840BC();
  v22 = sub_1004840F8((uint64_t)&unk_100BE47E8);
  v23 = Picker<>.init(_:selection:content:)(v42, v41, v39 & 1, v40, &v52, sub_10047F26C, 0, &unk_100B76640, v20, v21, v22);
  InlinePickerStyle.init()(v23);
  sub_10027248C((uint64_t)&unk_100BE47C0);
  v25 = v24;
  v26 = v45;
  View.pickerStyle<A>(_:)(v4, v5, v45, v24, &protocol witness table for InlinePickerStyle);
  (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v4, v26);
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v7, v5);
  v52 = v5;
  v53 = v26;
  v54 = v25;
  v55 = &protocol witness table for InlinePickerStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
  v28 = v43;
  v29 = v46;
  View.labelsHidden()(v46, OpaqueTypeConformance2);
  v30.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v48 + 8))(v9, v29);
  v31 = static Color.blue.getter(v30);
  v32 = swift_getKeyPath(&unk_1009A1CC8);
  v33 = v47;
  v35 = v50;
  v34 = v51;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v47 + 16))(v51, v28, v50);
  v36 = (uint64_t *)(v34 + *(int *)(sub_1000BA294(&qword_100BE47A0) + 36));
  *v36 = v32;
  v36[1] = v31;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v28, v35);
}

uint64_t sub_10047F26C()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _UNKNOWN **v8;

  v8 = &off_100B5A2A8;
  KeyPath = swift_getKeyPath(&unk_1009A1D70);
  v1 = sub_1000BA294(&qword_100BE4830);
  v2 = sub_1000BA294(&qword_100BE47F8);
  sub_10027248C((uint64_t)&unk_100BE4838);
  v4 = v3;
  v5 = sub_1004840BC();
  v6 = sub_100484148();
  return ForEach<>.init(_:id:content:)(&v8, KeyPath, sub_10047F338, 0, v1, v2, v4, v5, v6);
}

void sub_10047F338()
{
  sub_10047F35C();
}

void sub_10047F35C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  _BYTE v20[32];
  _BYTE v21[32];

  sub_1000986AC();
  v19 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_1000BA294(v6);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100079FBC();
  v14 = sub_1000BA294(&qword_100BCF180);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v9) = *v9;
  v21[16] = (_BYTE)v9;
  v20[16] = (_BYTE)v9;
  Label.init(title:icon:)(v5, v21, v3, v20, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v0, v17, v14);
  *(_BYTE *)(v0 + *(int *)(v12 + 36)) = (_BYTE)v9;
  sub_10003773C(v0, v11, v7);
  *(_BYTE *)(v11 + *(int *)(sub_1000BA294(v19) + 36)) = (_BYTE)v9;
  sub_100021A14(v0, v7);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_100098640();
}

void sub_10047F494(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1000BA294(&qword_100BDD818);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
      v7 = 0xD000000000000011;
    else
      v7 = 0xD000000000000014;
    if (a1 == 1)
      v8 = 0x8000000100A05780;
    else
      v8 = 0x8000000100A05760;
  }
  else
  {
    v7 = 0xD000000000000017;
    v8 = 0x8000000100A057A0;
  }
  v9 = Image.init(systemName:)(v7, v8);
  v10 = enum case for Image.TemplateRenderingMode.template(_:);
  v11 = type metadata accessor for Image.TemplateRenderingMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v6, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v11);
  v12 = Image.renderingMode(_:)(v6, v9);
  swift_release(v9);
  sub_100021A14((uint64_t)v6, &qword_100BDD818);
  *a2 = v12;
}

uint64_t sub_10047F5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  __int128 v57;

  v51 = a2;
  v45 = type metadata accessor for InlinePickerStyle(0);
  v49 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v4 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1000BA294(&qword_100BE45B0);
  v44 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = sub_1000BA294(&qword_100BE45A8);
  v48 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50 = sub_1000BA294(&qword_100BE45C8);
  v47 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v43 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v41 = v12;
  v42 = v11;
  v39 = v13;
  v40 = v14;
  v56 = *(_QWORD *)a1;
  v57 = *(_OWORD *)(a1 + 8);
  v15 = sub_1000BA294(&qword_100BC6740);
  Binding.projectedValue.getter(v15);
  v16 = v52;
  v17 = v53;
  v18 = v54;
  KeyPath = swift_getKeyPath(&unk_1009A1CA0);
  v52 = v16;
  v53 = v17;
  v54 = v18;
  Binding.subscript.getter(&v56, KeyPath, v15);
  swift_release(v18);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v16);
  v52 = v56;
  v53 = v57;
  LOBYTE(v54) = BYTE8(v57);
  v20 = sub_1000BA294(&qword_100BE45D0);
  v21 = sub_1004833B8();
  v22 = sub_1004840F8((uint64_t)&unk_100BE45E0);
  v23 = Picker<>.init(_:selection:content:)(v42, v41, v39 & 1, v40, &v52, sub_10047F954, 0, &unk_100B765B0, v20, v21, v22);
  InlinePickerStyle.init()(v23);
  sub_10027248C((uint64_t)&unk_100BE45B8);
  v25 = v24;
  v26 = v45;
  View.pickerStyle<A>(_:)(v4, v5, v45, v24, &protocol witness table for InlinePickerStyle);
  (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v4, v26);
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v7, v5);
  v52 = v5;
  v53 = v26;
  v54 = v25;
  v55 = &protocol witness table for InlinePickerStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
  v28 = v43;
  v29 = v46;
  View.labelsHidden()(v46, OpaqueTypeConformance2);
  v30.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v48 + 8))(v9, v29);
  v31 = static Color.blue.getter(v30);
  v32 = swift_getKeyPath(&unk_1009A1CC8);
  v33 = v47;
  v35 = v50;
  v34 = v51;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v47 + 16))(v51, v28, v50);
  v36 = (uint64_t *)(v34 + *(int *)(sub_1000BA294(&qword_100BE4590) + 36));
  *v36 = v32;
  v36[1] = v31;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v28, v35);
}

uint64_t sub_10047F954()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _UNKNOWN **v8;

  v8 = &off_100B5A2D0;
  KeyPath = swift_getKeyPath(&unk_1009A1D00);
  v1 = sub_1000BA294(&qword_100BE4628);
  v2 = sub_1000BA294(&qword_100BE45F0);
  sub_10027248C((uint64_t)&unk_100BE4630);
  v4 = v3;
  v5 = sub_1004833B8();
  v6 = sub_1004833F4();
  return ForEach<>.init(_:id:content:)(&v8, KeyPath, sub_10047FA20, 0, v1, v2, v4, v5, v6);
}

void sub_10047FA20()
{
  sub_10047F35C();
}

void sub_10047FA44(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1000BA294(&qword_100BDD818);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Image.init(systemName:)(*(_QWORD *)&aAqiLow[8 * a1], *(_QWORD *)&aAqiMediaqiHigh[8 * a1 + 16]);
  v8 = enum case for Image.TemplateRenderingMode.template(_:);
  v9 = type metadata accessor for Image.TemplateRenderingMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v6, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v9);
  v10 = Image.renderingMode(_:)(v6, v7);
  swift_release(v7);
  sub_100021A14((uint64_t)v6, &qword_100BDD818);
  *a2 = v10;
}

uint64_t sub_10047FB44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _UNKNOWN **v17;

  v2 = type metadata accessor for ReportWeatherContentView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v17 = sub_1004A7CAC();
  KeyPath = swift_getKeyPath(&unk_1009A1D30);
  sub_10000AB54(a1, (uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportWeatherContentView);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_100B752E8, v7 + v4, v6 | 7);
  sub_1004838A4((uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  v9 = sub_1000BA294(&qword_100BE4760);
  v10 = sub_1000BA294(&qword_100BE4750);
  sub_10027248C((uint64_t)&unk_100BE4768);
  v12 = v11;
  v13 = sub_100483D64();
  sub_10027248C((uint64_t)&unk_100BE4748);
  return ForEach<>.init(_:id:content:)(&v17, KeyPath, sub_100483D1C, v8, v9, v10, v12, v13, v14);
}

uint64_t sub_10047FCB0(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v4 = type metadata accessor for ReportWeatherContentView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *a1;
  sub_10000AB54(a2, (uint64_t)v7, v9);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = v11 + v6;
  v13 = swift_allocObject(&unk_100B75310, v12 + 1, v10 | 7);
  sub_1004838A4((uint64_t)v7, v13 + v11);
  *(_BYTE *)(v13 + v12) = v8;
  v17[16] = v8;
  v18 = a2;
  v14 = sub_1000BA294(&qword_100BE4778);
  sub_10027248C((uint64_t)&unk_100BE4780);
  return Button.init(action:label:)(sub_100483E20, v13, sub_100483E70, v17, v14, v15);
}

double sub_10047FDD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1[1];
  v5 = a1[2];
  v17 = *a1;
  v3 = v17;
  v18 = v4;
  v19 = v5;
  v6 = sub_1000BA294(&qword_100BC6740);
  Binding.wrappedValue.getter(v6);
  v7 = *(_QWORD *)(v20 + 304);
  swift_bridgeObjectRetain(v7);
  swift_release(v20);
  sub_10048B880(a2, v7);
  v9 = v8;
  swift_bridgeObjectRelease();
  v18 = v4;
  v19 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  Binding.wrappedValue.getter(v6);
  v15 = *(_QWORD *)(v20 + 304);
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRetain(v15);
    sub_100815310();
  }
  else
  {
    v10 = swift_bridgeObjectRetain(v15);
    sub_1006011F8(&v16, a2, v10);
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
  {
    sub_1001EE400();
    v11 = v20;
    v20 = v12;
    swift_release(v11);
  }
  *(_QWORD *)(v20 + 304) = v15;
  swift_bridgeObjectRelease();
  v17 = v3;
  v18 = v4;
  v19 = v5;
  v14 = v20;
  Binding.wrappedValue.setter(&v14, v6);
  swift_release(v5);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_10047FF80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  *(_QWORD *)a3 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  v6 = sub_1000BA294(&qword_100BE4788);
  return sub_10047FFDC(a1, a2, a3 + *(int *)(v6 + 44));
}

uint64_t sub_10047FFDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t, __n128);
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  double v34;
  void (*v35)(char *, uint64_t, double);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _BYTE v43[32];
  _BYTE v44[32];
  uint64_t v45;
  __int128 v46;
  uint64_t v47;

  v40 = a3;
  v5 = type metadata accessor for Font.TextStyle(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BCF180);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v44[16] = a1;
  v43[16] = a1;
  v39 = (char *)&v37 - v12;
  Label.init(title:icon:)(sub_100483E7C, v44, sub_100483E9C, v43, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
  v45 = *a2;
  v46 = *(_OWORD *)(a2 + 1);
  v13 = sub_1000BA294(&qword_100BC6740);
  Binding.wrappedValue.getter(v13);
  v14 = v47;
  v15 = *(_QWORD *)(v47 + 304);
  swift_bridgeObjectRetain(v15);
  swift_release(v14);
  sub_10048B880(a1, v15);
  v17 = v16;
  v18 = swift_bridgeObjectRelease();
  v19 = 0;
  v42 = 0;
  KeyPath = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if ((v17 & 1) != 0)
  {
    v42 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
    v25 = v37;
    v24 = v38;
    v26 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v37 + 104))(v7, enum case for Font.TextStyle.body(_:), v38);
    static Font.Weight.semibold.getter(v26);
    v21 = static Font.system(_:weight:)(v7);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v24);
    KeyPath = swift_getKeyPath(&unk_1009A1C48);
    v23 = static Color.blue.getter(v27);
    v22 = swift_getKeyPath(&unk_1009A1C18);
    v19 = 1;
  }
  v28 = *(void (**)(char *, char *, uint64_t, __n128))(v9 + 16);
  v29 = v41;
  v30 = v39;
  v28(v41, v39, v8, v18);
  v38 = v9;
  v31 = v40;
  ((void (*)(uint64_t, char *, uint64_t))v28)(v40, v29, v8);
  v32 = (_QWORD *)(v31 + *(int *)(sub_1000BA294(&qword_100BE4790) + 48));
  *v32 = 0;
  v32[1] = v19;
  v33 = v42;
  v32[2] = v42;
  v32[3] = KeyPath;
  v32[4] = v21;
  v32[5] = v22;
  v32[6] = v23;
  v34 = sub_100483EA4(0, v19, v33, KeyPath, v21, v22, v23);
  v35 = *(void (**)(char *, uint64_t, double))(v38 + 8);
  v35(v30, v8, v34);
  sub_100483F00(0, v19, v33, KeyPath, v21, v22, v23);
  return ((uint64_t (*)(char *, uint64_t))v35)(v29, v8);
}

uint64_t sub_1004802C0@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a1();
  v9[1] = v3;
  v4 = sub_100114EF8();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

void sub_100480314(unsigned __int8 a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1000BA294(&qword_100BDD818);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004A7EBC(a1);
  if ((v9 & 1) != 0)
    v10 = Image.init(_:bundle:)(v7, v8, 0);
  else
    v10 = Image.init(systemName:)(v7, v8);
  v11 = v10;
  v12 = a1;
  v13 = type metadata accessor for Image.TemplateRenderingMode(0);
  v14 = (unsigned int *)&enum case for Image.TemplateRenderingMode.template(_:);
  if (v12 >= 5)
    v14 = (unsigned int *)&enum case for Image.TemplateRenderingMode.original(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v6, *v14, v13);
  type metadata accessor for Image.TemplateRenderingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v13);
  v15 = Image.renderingMode(_:)(v6, v11);
  swift_release(v11);
  sub_100021A14((uint64_t)v6, &qword_100BDD818);
  *a2 = v15;
}

void sub_100480428(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a2;
  v41 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v41);
  v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for GridItem.Size(0);
  v4 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v6 = (_OWORD *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for GridItem(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BE4668);
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000BA294(&qword_100BE4658);
  __chkstk_darwin(v40);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DynamicTypeSize(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ReportWeatherContentView(0);
  sub_10010FD3C();
  v20 = DynamicTypeSize.isAccessibilitySize.getter(v19);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if ((v20 & 1) != 0)
    v21 = 1;
  else
    v21 = 2;
  *v6 = xmmword_100989DE0;
  (*(void (**)(_OWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for GridItem.Size.flexible(_:), v38);
  GridItem.init(_:spacing:alignment:)(v6, 0x4020000000000000, 0, 0, 0, 1);
  sub_10084B2B0((uint64_t)v9, v21);
  v23 = v22;
  v46 = v21;
  v47 = a1;
  v24 = static HorizontalAlignment.center.getter(v22);
  LODWORD(v48) = 0;
  sub_10007A100((uint64_t)&qword_100BE18E8);
  v25 = v39;
  dispatch thunk of OptionSet.init(rawValue:)(&v48, v41, v26);
  v27 = sub_1000BA294(&qword_100BE46A0);
  v28 = sub_1004837B0();
  v29 = LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v23, v24, 0x4020000000000000, 0, v25, sub_1004837A8, v45, v27, v28);
  v48 = static Color.clear.getter(v29);
  v30 = swift_retain();
  v31 = AnyView.init<A>(_:)(&v48, &type metadata for Color, &protocol witness table for Color, v30);
  v33 = v42;
  v32 = v43;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v14, v12, v43);
  v34 = swift_release();
  *(_QWORD *)&v14[*(int *)(v40 + 36)] = v31;
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v12, v32, v34);
  v35 = v44;
  sub_10003773C((uint64_t)v14, v44, &qword_100BE4658);
  v36 = v35 + *(int *)(sub_1000BA294(&qword_100BE4640) + 36);
  *(_BYTE *)(v36 + 32) = 0;
  *(_OWORD *)v36 = 0u;
  *(_OWORD *)(v36 + 16) = 0u;
  sub_100021A14((uint64_t)v14, &qword_100BE4658);
}

uint64_t sub_1004807A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v4 = type metadata accessor for ReportWeatherContentView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_1004A7FC0()[2];
  swift_bridgeObjectRelease();
  v17[0] = 0;
  v17[1] = v7;
  KeyPath = swift_getKeyPath(&unk_1009A1D18);
  sub_10000AB54(a2, (uint64_t)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportWeatherContentView);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 24) & ~v9;
  v11 = swift_allocObject(&unk_100B75298, v10 + v6, v9 | 7);
  *(_QWORD *)(v11 + 16) = a1;
  sub_1004838A4((uint64_t)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  v12 = sub_1000BA294(&qword_100BDF688);
  v13 = sub_1000BA294(&qword_100BE46B8);
  v14 = sub_100483934();
  sub_10027248C((uint64_t)&unk_100BE46B0);
  return ForEach<>.init(_:id:content:)(v17, KeyPath, sub_1004838E8, v11, v12, v13, v14, &protocol witness table for Int, v15);
}

_UNKNOWN **sub_100480908@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _UNKNOWN **result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  __n128 v41;
  char *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  char v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  __int128 v116;
  uint64_t v117;

  v105 = a2;
  v7 = type metadata accessor for PlainButtonStyle(0);
  v112 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v111 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v106);
  v110 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for AccessibilityTraits(0);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReportWeatherContentView(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1000BA294(&qword_100BE46D0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v16 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1000BA294(&qword_100BE46D8);
  __chkstk_darwin(v114);
  v113 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BE46E0);
  __chkstk_darwin(v18);
  v97 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1000BA294(&qword_100BE46E8);
  __chkstk_darwin(v101);
  v103 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BE46F0);
  v108 = *(_QWORD *)(v21 - 8);
  v109 = v21;
  __chkstk_darwin(v21);
  v107 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v98 = (char *)&v92 - v24;
  __chkstk_darwin(v25);
  v104 = (char *)&v92 - v26;
  v27 = *a1;
  result = sub_1004A7FC0();
  if ((v27 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v27 >= (unint64_t)result[2])
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v93 = v7;
  v94 = a4;
  v29 = *((unsigned __int8 *)result + v27 + 32);
  swift_bridgeObjectRelease();
  sub_10000AB54(a3, (uint64_t)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportWeatherContentView);
  v30 = *(unsigned __int8 *)(v12 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = v31 + v13;
  v33 = swift_allocObject(&unk_100B752C0, v31 + v13 + 1, v30 | 7);
  v34 = sub_1004838A4((uint64_t)v14, v33 + v31);
  *(_BYTE *)(v33 + v32) = v29;
  __chkstk_darwin(v34);
  *((_BYTE *)&v92 - 16) = v29;
  *(&v92 - 1) = a3;
  v35 = sub_1000BA294(&qword_100BE46F8);
  v36 = sub_1004839F8();
  Button.init(action:label:)(sub_1004839E0, v33, sub_1004839EC, &v92 - 4, v35, v36);
  v115 = *(_QWORD **)a3;
  v92 = a3;
  v116 = *(_OWORD *)(a3 + 8);
  v37 = sub_1000BA294(&qword_100BC6740);
  Binding.wrappedValue.getter(v37);
  v38 = *(_QWORD *)(v117 + 312);
  swift_bridgeObjectRetain(v38);
  swift_release();
  sub_10048BA34(v29, v38);
  v40 = v39;
  v41 = swift_bridgeObjectRelease();
  v42 = v16;
  if ((v40 & 1) != 0)
  {
    v43 = static Color.blue.getter(v41);
  }
  else
  {
    v44 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemGroupedBackgroundColor");
    v43 = Color.init(_:)(v44);
  }
  v45 = v43;
  v46 = v102;
  v47 = static Edge.Set.all.getter(v43);
  v48 = v95;
  v49 = v113;
  v50 = v96;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v113, v42, v96);
  v51 = &v49[*(int *)(v114 + 36)];
  *(_QWORD *)v51 = v45;
  v51[8] = v47;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v50);
  v115 = *(_QWORD **)v92;
  v116 = *(_OWORD *)(v92 + 8);
  Binding.wrappedValue.getter(v37);
  v52 = *(_QWORD *)(v117 + 312);
  swift_bridgeObjectRetain(v52);
  swift_release();
  sub_10048BA34(v29, v52);
  v54 = v53;
  v55 = swift_bridgeObjectRelease();
  v56 = v94;
  v57 = v93;
  if ((v54 & 1) != 0)
  {
    v58 = v99;
    static AccessibilityTraits.isSelected.getter(v55);
  }
  else
  {
    v115 = _swiftEmptyArrayStorage;
    sub_10007A100((uint64_t)&unk_100C0A5F0);
    v60 = v59;
    v61 = sub_1000BA294(&qword_100BD3C00);
    sub_10027248C((uint64_t)&qword_100C0A600);
    v58 = v99;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v115, v61, v62, v46, v60);
  }
  v64 = v105 == 1 && v27 != 0;
  LODWORD(v105) = v64 && (v27 & 1) == 0;
  if (v64 && (v27 & 1) == 0)
    v65 = 0x4028000000000000;
  else
    v65 = 0;
  v66 = sub_100483A7C();
  v67 = (uint64_t)v97;
  v68 = (uint64_t)v113;
  View.accessibilityAddTraits(_:)(v58, v114, v66);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v46);
  sub_100021A14(v68, &qword_100BE46D8);
  v69 = v110;
  v70 = &v110[*(int *)(v106 + 20)];
  v71 = enum case for RoundedCornerStyle.continuous(_:);
  v72 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 104))(v70, v71, v72);
  __asm { FMOV            V0.2D, #10.0 }
  *v69 = _Q0;
  v77 = v101;
  v78 = (uint64_t)v103;
  v79 = (uint64_t)&v103[*(int *)(v101 + 36)];
  sub_10000AB54((uint64_t)v69, v79, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v79 + *(int *)(sub_1000BA294(&qword_100BD3DA8) + 36)) = 256;
  sub_10003773C(v67, v78, &qword_100BE46E0);
  sub_1000215BC((uint64_t)v69, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100021A14(v67, &qword_100BE46E0);
  v80 = v111;
  PlainButtonStyle.init()(v81);
  v82 = sub_100483B18();
  sub_10007A100((uint64_t)&qword_100BD0908);
  v83 = v98;
  View.buttonStyle<A>(_:)(v80, v77, v57, v82, v84);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v80, v57);
  sub_100021A14(v78, &qword_100BE46E8);
  v86 = v108;
  v85 = v109;
  v87 = v104;
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v104, v83, v109);
  v88 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v89 = v107;
  v88(v107, v87, v85);
  *(_QWORD *)v56 = v65;
  *(_BYTE *)(v56 + 8) = 0;
  *(_BYTE *)(v56 + 9) = (v105 & 1) == 0;
  v90 = sub_1000BA294(&qword_100BE4728);
  v88((char *)(v56 + *(int *)(v90 + 48)), v89, v85);
  v91 = *(void (**)(char *, uint64_t))(v86 + 8);
  v91(v87, v85);
  return (_UNKNOWN **)((uint64_t (*)(char *, uint64_t))v91)(v89, v85);
}

double sub_1004810CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v25 = *a1;
  v26 = v4;
  v27 = v5;
  v6 = sub_1000BA294(&qword_100BC6740);
  Binding.wrappedValue.getter(v6);
  v7 = *(_QWORD *)(v28 + 312);
  swift_bridgeObjectRetain(v7);
  swift_release(v28);
  sub_10048BA34(a2, v7);
  v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v25 = v3;
    v26 = v4;
    v27 = v5;
    swift_retain();
    swift_retain();
    swift_retain();
    Binding.wrappedValue.getter(v6);
    v24 = *(_QWORD *)(v28 + 312);
    swift_bridgeObjectRetain(v24);
    sub_100815500();
    if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
    {
      sub_1001EE400();
      v10 = v28;
      v28 = v11;
      swift_release(v10);
    }
    *(_QWORD *)(v28 + 312) = v24;
    swift_bridgeObjectRelease();
    v12 = v28;
  }
  else
  {
    v25 = v3;
    v26 = v4;
    v27 = v5;
    Binding.wrappedValue.getter(v6);
    v13 = *(_QWORD *)(v28 + 312);
    swift_bridgeObjectRetain(v13);
    v14 = swift_release(v28);
    v28 = v13;
    sub_1006013C8(&v25, a2, v14);
    v25 = v3;
    v26 = v4;
    v27 = v5;
    Binding.wrappedValue.getter(v6);
    v15 = *(_QWORD *)(v24 + 312);
    swift_bridgeObjectRetain(v15);
    swift_release(v24);
    v16 = sub_1004A7FCC(a2);
    sub_10048BA34(v16, v15);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      sub_100815500();
    v19 = v28;
    v25 = v3;
    v26 = v4;
    v27 = v5;
    swift_retain();
    swift_retain();
    swift_retain();
    Binding.wrappedValue.getter(v6);
    if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
    {
      sub_1001EE400();
      v20 = v24;
      v24 = v21;
      swift_release(v20);
    }
    *(_QWORD *)(v24 + 312) = v19;
    swift_bridgeObjectRelease();
    v12 = v24;
  }
  v25 = v3;
  v26 = v4;
  v27 = v5;
  v23 = v12;
  Binding.wrappedValue.setter(&v23, v6);
  swift_release(v5);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void *sub_100481338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD __src[19];

  sub_1004A7FEC(a1);
  __src[0] = v6;
  __src[1] = v7;
  v8 = sub_100114EF8();
  v9 = Text.init<A>(_:)(__src, &type metadata for String, v8);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  __src[0] = *(_QWORD *)a2;
  *(_OWORD *)&__src[1] = *(_OWORD *)(a2 + 8);
  v16 = sub_1000BA294(&qword_100BC6740);
  Binding.wrappedValue.getter(v16);
  v17 = *(_QWORD *)(v36 + 312);
  swift_bridgeObjectRetain(v17);
  swift_release();
  sub_10048BA34(a1, v17);
  v19 = v18;
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    v21 = static Font.Weight.semibold.getter(v20);
  else
    v21 = 0.0;
  v22 = v13 & 1;
  v23 = Text.fontWeight(_:)(*(_QWORD *)&v21, (v19 & 1) == 0, v9, v11, v22, v15);
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  sub_1000D31B4(v9, v11, v22);
  swift_bridgeObjectRelease();
  v31 = static Alignment.center.getter(v30);
  LOBYTE(v35) = 1;
  LOBYTE(v34) = 1;
  sub_100945D8C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0x4049000000000000, 0, 0, v34, 0, v35, v31, v32, v23, v25, v29, v27);
  sub_1000D31B4(v23, v25, v29);
  swift_bridgeObjectRelease();
  result = memcpy(a3, __src, 0x90uLL);
  a3[144] = 0;
  return result;
}

uint64_t sub_1004814E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, double);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  void (*v131)(uint64_t *__return_ptr, double);
  uint64_t v132;
  void (*v133)(uint64_t *__return_ptr, double);
  void (*v134)(uint64_t *__return_ptr, double);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE v142[8];
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v3 = type metadata accessor for ReportWeatherView(0);
  sub_1000D09F4(a1 + *(int *)(v3 + 20));
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v154);
  sub_10009880C();
  v4 = v154;
  v141 = v155;
  v5 = v156;
  v6 = v157;
  v7 = v158;
  v8 = v160;
  v136 = v161;
  v137 = v159;
  v9 = v163;
  v135 = v162;
  v10 = v164;
  v11 = v165;
  sub_1000D09F4(a2 + *(int *)(v3 + 20));
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v154);
  sub_10009880C();
  v12 = (void (*)(uint64_t *__return_ptr, double))v154;
  v13 = v155;
  v14 = v156;
  v15 = v157;
  v16 = v158;
  v17 = v159;
  v18 = v160;
  v19 = v161;
  v20 = v162;
  v21 = v163;
  v22 = v164;
  v23 = v165;
  v138 = v5;
  v139 = v9;
  v140 = v8;
  if (v4 < 0)
  {
    v102 = v6;
    v142[0] = v4 & 1;
    v143 = v141;
    v144 = v5;
    v145 = v6;
    v146 = v7;
    v147 = v137;
    v148 = v8;
    v149 = v136;
    v150 = v135;
    v151 = v9;
    v152 = v10;
    v153 = v11;
    v60 = v137;
    v86 = v10;
    if ((v154 & 0x8000000000000000) != 0)
    {
      LOBYTE(v154) = v154 & 1;
      v134 = v12;
      v122 = v156;
      v126 = v155;
      v62 = v157;
      v114 = v160;
      v118 = v158;
      v63 = v159;
      v64 = v161;
      v106 = v164;
      v110 = v162;
      v65 = v163;
      v66 = v165;
      v67 = sub_100544468((uint64_t)v142, (uint64_t)&v154);
      v23 = v66;
      v22 = v106;
      v20 = v110;
      v21 = v65;
      v19 = v64;
      v18 = v114;
      v16 = v118;
      v17 = v63;
      v15 = v62;
      v14 = v122;
      v13 = v126;
      v129 = v67;
      v12 = v134;
    }
    else
    {
      v129 = 0;
    }
    v6 = v102;
    v58 = v139;
    v61 = v140;
    v24 = v135;
    v59 = v136;
    v41 = v86;
  }
  else
  {
    v24 = v135;
    if ((v154 & 0x8000000000000000) != 0)
    {
      v129 = 0;
      v60 = v137;
      v58 = v139;
      v61 = v8;
      v41 = v10;
      v59 = v136;
    }
    else
    {
      v131 = (void (*)(uint64_t *__return_ptr, double))v154;
      v119 = v156;
      v123 = v155;
      v96 = v159;
      v99 = v157;
      v111 = v160;
      v115 = v158;
      v90 = v163;
      v93 = v161;
      v103 = v164;
      v107 = v162;
      v87 = v165;
      v127 = type metadata accessor for ReportWeatherContentViewModel._Storage(0);
      sub_10019D33C(v4, v141, v5, v6, v7, v137, v8, v136, v135, v9, v10, v11);
      v33 = sub_1000DB9FC(v25, v26, v27, v28, v29, v30, v31, v32, v69, v73, v77, v81, v10, v87, v90, v93, v96, v99, v103,
              v107,
              v111,
              v115,
              v119,
              v123,
              v127,
              (uint64_t)v131);
      sub_10019D33C(v33, v34, v35, v36, v37, v38, v39, v40, v70, v74, v78, v82);
      sub_1001EE598();
      v41 = v85;
      LODWORD(v128) = v42;
      v50 = sub_1000DB9FC(v42, v43, v44, v45, v46, v47, v48, v49, v71, v75, v79, v83, v85, v88, v91, v94, v97, v100, v104,
              v108,
              v112,
              v116,
              v120,
              v124,
              v128,
              v132);
      sub_10019D2B8(v50, v51, v52, v53, v54, v55, v56, v57, v72, v76, v80, v84);
      v58 = v9;
      v59 = v136;
      v60 = v137;
      v61 = v140;
      sub_10019D2B8(v4, v141, v138, v6, v7, v137, v140, v136, v135, v139, v41, v11);
      v23 = v89;
      v21 = v92;
      v22 = v105;
      v20 = v109;
      v19 = v95;
      v17 = v98;
      v18 = v113;
      v16 = v117;
      v15 = v101;
      v14 = v121;
      v13 = v125;
      v12 = v133;
    }
  }
  sub_10019D2B8((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  sub_10019D2B8(v4, v141, v138, v6, v7, v60, v61, v59, v24, v58, v41, v11);
  return v129 & 1;
}

uint64_t *sub_1004817EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    swift_retain();
    v10 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v9) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_1004818E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_100481968(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  swift_retain();
  swift_retain();
  v8 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v7) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
    v10 = 1;
  }
  else
  {
    *v6 = *v7;
    swift_retain();
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v10);
  return a1;
}

_QWORD *sub_100481A30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_100021A14((uint64_t)a1 + v6, &qword_100BC2990);
    v9 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v8) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  return a1;
}

uint64_t sub_100481B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100481BE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_100021A14((uint64_t)a1 + v6, &qword_100BC2990);
    v9 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v8) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100481CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100481CE0);
}

uint64_t sub_100481CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BD8F08);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100481D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100481D64);
}

void sub_100481D64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD8F08);
    _s7Weather24LocationCompositionStateOwst_0(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata accessor for ReportWeatherContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE4530;
  if (!qword_100BE4530)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReportWeatherContentView);
  return result;
}

void sub_100481E04(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1009A1BB0;
  sub_100335124(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_100481E78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5650, 1);
}

void sub_100481E88(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10047D58C(*(uint64_t **)(v1 + 16), a1);
}

void sub_100481E90(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(_QWORD *, _QWORD);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  void (*v72)(_QWORD *, _QWORD);
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t i;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t KeyPath;
  uint64_t v97;
  _QWORD v98[5];

  v75 = sub_1000BA294(&qword_100BDAE28);
  __chkstk_darwin(v75);
  v74 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v3);
  v82 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributeContainer(0);
  v83 = *(_QWORD *)(v5 - 8);
  v84 = v5;
  v6 = __chkstk_darwin(v5);
  v86 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for AttributedString.Runs.Run(0, v6);
  v95 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v85 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BE3E18);
  v10 = __chkstk_darwin(v9);
  v94 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AttributedString.Runs.Index(0, v10);
  v92 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v91 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v93 = (char *)&v74 - v16;
  v17 = type metadata accessor for AttributedString.Runs(0, v15);
  v90 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AttributedString(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  i = sub_1000BA294(&qword_100BE3E20);
  __chkstk_darwin(i);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v74 - v27;
  v29 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000056, 0x8000000100A05AA0);
  AttributedString.init(localized:bundle:linkA:linkB:)(v31, 0, 0x6C6F686563616C70, 0xEB00000000726564, 0, 0);
  KeyPath = swift_getKeyPath(&unk_1009A1EF8);
  v32 = swift_getKeyPath(&unk_1009A1F28);
  v98[0] = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v33 = sub_100484AA4();
  AttributedString.subscript.setter(v98, v32, v33);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v76 = a1;
  v35 = v34(v23, a1, v20);
  AttributedString.runs.getter(v35);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v36 = v90;
  v88 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v88(v25, v19, v17);
  sub_10007A100((uint64_t)&unk_100BE3E30);
  v38 = v37;
  v39 = v93;
  dispatch thunk of Collection.startIndex.getter(v17, v37);
  v40 = *(void (**)(char *, uint64_t))(v36 + 8);
  v89 = v19;
  v87 = v40;
  v40(v19, v17);
  v41 = i;
  v42 = v92;
  v43 = v17;
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v25[*(int *)(i + 36)], v39, v12);
  v44 = (uint64_t)v25;
  v45 = v77;
  sub_10045E068(v44, (uint64_t)v28);
  v46 = &v28[*(int *)(v41 + 36)];
  v90 = *(_QWORD *)(v42 + 16);
  v81 = v17;
  v80 = v28;
  v79 = v38;
  for (i = (uint64_t)v46; ; v46 = (char *)i)
  {
    v47 = v93;
    ((void (*)(char *, char *, uint64_t))v90)(v93, v46, v12);
    v48 = v91;
    dispatch thunk of Collection.endIndex.getter(v43, v38);
    sub_10007A100((uint64_t)&unk_100BE3E38);
    v50 = dispatch thunk of static Equatable.== infix(_:_:)(v47, v48, v12, v49);
    v51 = *(void (**)(char *, uint64_t))(v92 + 8);
    v51(v48, v12);
    v51(v47, v12);
    if ((v50 & 1) != 0)
      break;
    v52 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v98, v46, v43, v38);
    v53 = v94;
    (*(void (**)(uint64_t))(v95 + 16))(v94);
    v52(v98, 0);
    v54 = v89;
    v88(v89, v28, v43);
    dispatch thunk of Collection.formIndex(after:)(v46, v43, v38);
    v87(v54, v43);
    _s7Weather24LocationCompositionStateOwst_0(v53, 0, 1, v45);
    if (_s7Weather24LocationCompositionStateOwet_0(v53, 1, v45) == 1)
      goto LABEL_8;
    v55 = v85;
    v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 32))(v85, v94, v45);
    v57 = v86;
    AttributedString.Runs.Run.attributes.getter(v56);
    v58 = swift_getKeyPath(&unk_1009A1F68);
    __chkstk_darwin(v58);
    *(&v74 - 2) = v59;
    v60 = swift_getKeyPath(&unk_1009A1F98);
    v61 = sub_10045E0CC();
    v62 = (uint64_t)v82;
    AttributeContainer.subscript.getter(v60, v61);
    v63 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v57, v84, v63);
    v64 = type metadata accessor for URL(0);
    v65 = _s7Weather24LocationCompositionStateOwet_0(v62, 1, v64);
    sub_100021A14(v62, &qword_100BD4280);
    if (v65 != 1)
    {
      v66 = (uint64_t)v74;
      AttributedString.Runs.Run.range.getter();
      v67 = swift_getKeyPath(&unk_1009A1FD8);
      __chkstk_darwin(v67);
      *(&v74 - 2) = v68;
      v69 = swift_getKeyPath(&unk_1009A2008);
      v97 = static Color.blue.getter(v70);
      sub_10027248C((uint64_t)&qword_100BDAE38);
      v72 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v98, v66, v75, v71);
      v73 = sub_10045E168();
      AttributedSubstring.subscript.setter(&v97, v69, v73);
      v72(v98, 0);
      v45 = v77;
      sub_100021A14(v66, &qword_100BDAE28);
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v55, v45);
    v43 = v81;
    v28 = v80;
    v38 = v79;
  }
  _s7Weather24LocationCompositionStateOwst_0(v94, 1, 1, v45);
LABEL_8:
  sub_100021A14((uint64_t)v28, &qword_100BE3E20);
}

void sub_100482680(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  __n128 v25;
  uint64_t v26;
  uint64_t KeyPath;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a1;
  v48 = a4;
  v6 = type metadata accessor for AccessibilityActionKind(0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  __chkstk_darwin(v6);
  v47 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1000BA294(&qword_100BC4F78);
  v8 = __chkstk_darwin(v46);
  v10 = (uint64_t *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for OpenURLAction(0, v8);
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  __chkstk_darwin(v11);
  v43 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1000BA294(&qword_100BE4910);
  __chkstk_darwin(v52);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  sub_100481E90((uint64_t)v15);
  v19 = Text.init(_:)(v15);
  v21 = v20;
  v40 = v22;
  v24 = v23 & 1;
  v53 = static Color.clear.getter(v19);
  v26 = AnyView.init<A>(_:)(&v53, &type metadata for Color, &protocol witness table for Color, v25);
  KeyPath = swift_getKeyPath(&unk_1009A1EC8);
  v28 = (_QWORD *)swift_allocObject(&unk_100B75438, 40, 7);
  v28[2] = v51;
  v28[3] = v18;
  v41 = a3;
  v42 = v18;
  v28[4] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  v29 = v43;
  OpenURLAction.init(handler:)(sub_100484930, v28);
  v30 = v45;
  v31 = v44;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)v10 + *(int *)(v46 + 28), v29, v45);
  *v10 = KeyPath;
  sub_10003773C((uint64_t)v10, (uint64_t)&v17[*(int *)(v52 + 36)], &qword_100BC4F78);
  *(_QWORD *)v17 = v19;
  *((_QWORD *)v17 + 1) = v21;
  v17[16] = v24;
  v32 = v40;
  *((_QWORD *)v17 + 3) = v40;
  *((_QWORD *)v17 + 4) = v26;
  *(_OWORD *)(v17 + 40) = xmmword_1009A1B20;
  *(_OWORD *)(v17 + 56) = xmmword_1009A1B30;
  v17[72] = 0;
  sub_1000D55D4(v19, v21, v24);
  swift_bridgeObjectRetain(v32);
  swift_retain();
  sub_100021A14((uint64_t)v10, &qword_100BC4F78);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  sub_1000D31B4(v19, v21, v24);
  swift_release();
  v33 = swift_bridgeObjectRelease();
  v34 = v47;
  static AccessibilityActionKind.default.getter(v33);
  v35 = (_QWORD *)swift_allocObject(&unk_100B75460, 40, 7);
  v36 = v41;
  v37 = v42;
  v35[2] = v51;
  v35[3] = v37;
  v35[4] = v36;
  v38 = sub_100484980();
  swift_retain();
  swift_retain();
  swift_retain();
  View.accessibilityAction(_:_:)(v34, sub_100484974, v35, v52, v38);
  v39 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v34, v50, v39);
  sub_100021A14((uint64_t)v17, &qword_100BE4910);
}

uint64_t sub_100482A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v12 = a2;
  v13 = a3;
  v14 = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  v7 = sub_1000BA294(&qword_100BC6740);
  Binding.wrappedValue.getter(v7);
  if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
  {
    sub_1001EE400();
    v15 = v8;
    swift_release();
  }
  *(_BYTE *)(v15 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = 1;
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v11 = v15;
  Binding.wrappedValue.setter(&v11, v7);
  swift_release();
  swift_release();
  v9 = swift_release();
  return static OpenURLAction.Result.handled.getter(v9);
}

double sub_100482B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = a1;
  v11 = a2;
  v12 = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = sub_1000BA294(&qword_100BC6740);
  Binding.wrappedValue.getter(v6);
  if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
  {
    sub_1001EE400();
    v13 = v7;
    swift_release();
  }
  *(_BYTE *)(v13 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = 1;
  v10 = a1;
  v11 = a2;
  v12 = a3;
  v9 = v13;
  Binding.wrappedValue.setter(&v9, v6);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100482BFC(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_100482680(*v1, v1[1], v1[2], a1);
}

void sub_100482C08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27[17];

  sub_1000986AC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v26 = v10;
  v11 = sub_1000BA294(&qword_100BC4F88);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100079FBC();
  sub_1000BA294(&qword_100BC4F90);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100098694();
  v15 = static HorizontalAlignment.leading.getter(v14);
  sub_100482DCC(v9, v7, v5, v3, v27);
  v16 = v27[0];
  v17 = v27[1];
  LOBYTE(v5) = v27[2];
  v18 = v27[3];
  v19 = v27[5];
  v24 = v27[6];
  v25 = v27[4];
  v20 = v27[7];
  v27[0] = v15;
  v27[1] = 0;
  LOBYTE(v27[2]) = 1;
  v27[3] = v16;
  v27[4] = v17;
  LOBYTE(v27[5]) = v5;
  v27[6] = v18;
  v27[7] = v25;
  v27[8] = v19;
  v27[9] = v24;
  v27[10] = v20;
  *(_OWORD *)&v27[11] = xmmword_1009A1B40;
  *(_OWORD *)&v27[13] = xmmword_1009A1B50;
  LOBYTE(v27[15]) = 0;
  v21 = type metadata accessor for Text.Case(0);
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v21);
  KeyPath = swift_getKeyPath(&unk_1009A1E98);
  sub_10003773C(v1, (uint64_t)v0 + *(int *)(v11 + 28), &qword_100BC4F90);
  *v0 = KeyPath;
  v23 = sub_1000BA294(&qword_100BE4908);
  sub_10003773C((uint64_t)v0, (uint64_t)v26 + *(int *)(v23 + 36), &qword_100BC4F88);
  memcpy(v26, v27, 0x79uLL);
  sub_1004848A4((uint64_t)v27);
  sub_100021A14((uint64_t)v0, &qword_100BC4F88);
  sub_100021A14(v1, &qword_100BC4F90);
  sub_1000D31B4(v16, v17, v5);
  swift_bridgeObjectRelease();
  sub_10010F9B0(v25, v19, v24, v20);
  sub_100098640();
}

double sub_100482DCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  double result;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t (*v68)(char *, _QWORD, uint64_t);
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;

  v72 = a4;
  v73 = a5;
  v70 = a3;
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = a1;
  v75 = a2;
  v11 = sub_100114EF8();
  swift_bridgeObjectRetain(a2);
  v69 = v11;
  v12 = Text.init<A>(_:)(&v74, &type metadata for String, v11);
  v14 = v13;
  v16 = v15;
  v34 = v17 & 1;
  v68 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v18 = v68(v10, enum case for Font.TextStyle.title3(_:), v7);
  static Font.Weight.bold.getter(v18);
  v19 = static Font.system(_:weight:)(v10);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v71 = v7;
  v67 = v20;
  v20(v10, v7);
  v21 = Text.font(_:)(v19, v12, v14, v34, v16);
  v23 = v22;
  LOBYTE(v7) = v24;
  v26 = v25;
  swift_release();
  v27 = v7 & 1;
  sub_1000D31B4(v12, v14, v34);
  swift_bridgeObjectRelease();
  v29 = static Color.white.getter(v28);
  v30 = Text.foregroundColor(_:)(v29, v21, v23, v27, v26);
  v32 = v31;
  LODWORD(v34) = v33;
  v36 = v35;
  swift_release();
  sub_1000D31B4(v21, v23, v27);
  swift_bridgeObjectRelease();
  if (v72)
  {
    v74 = v70;
    v75 = v72;
    swift_bridgeObjectRetain(v72);
    v37 = Text.init<A>(_:)(&v74, &type metadata for String, v69);
    v39 = v38;
    v41 = v40;
    v43 = v42 & 1;
    LODWORD(v70) = v34;
    v44 = v71;
    v45 = v68(v10, enum case for Font.TextStyle.subheadline(_:), v71);
    static Font.Weight.regular.getter(v45);
    v46 = static Font.system(_:weight:)(v10);
    v67(v10, v44);
    v34 = Text.font(_:)(v46, v37, v39, v43, v41);
    v71 = v30;
    v72 = v36;
    v48 = v47;
    v50 = v49;
    v52 = v51;
    swift_release();
    LOBYTE(v46) = v50 & 1;
    sub_1000D31B4(v37, v39, v43);
    v53 = swift_bridgeObjectRelease();
    v54 = static Color.gray.getter(v53);
    v55 = Text.foregroundColor(_:)(v54, v34, v48, v50 & 1, v52);
    v57 = v56;
    LOBYTE(v43) = v58;
    v60 = v59;
    swift_release();
    v61 = v43 & 1;
    v62 = v34;
    LOBYTE(v34) = v70;
    v63 = v48;
    v36 = v72;
    sub_1000D31B4(v62, v63, v46);
    v30 = v71;
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = 0;
    v57 = 0;
    v61 = 0;
    v60 = 0;
  }
  v64 = v73;
  *v73 = v30;
  v64[1] = v32;
  *((_BYTE *)v64 + 16) = v34 & 1;
  v64[3] = v36;
  v64[4] = v55;
  v64[5] = v57;
  v64[6] = v61;
  v64[7] = v60;
  sub_1000D55D4(v30, v32, v34 & 1);
  swift_bridgeObjectRetain(v36);
  sub_10010F980(v55, v57, v61, v60);
  sub_10010F9B0(v55, v57, v61, v60);
  sub_1000D31B4(v30, v32, v34 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100483120()
{
  sub_100482C08();
}

uint64_t *sub_100483144(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = a1[1];
  v13 = *a1;
  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  v8 = a1[18];
  v9 = a1[20];
  v10 = a1[23];
  swift_bridgeObjectRelease(a1[25]);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_release(v12);
  swift_release(v13);
  return a1;
}

uint64_t sub_10048321C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10047F5D0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100483224()
{
  unint64_t result;

  result = qword_100BE4598;
  if (!qword_100BE4598)
  {
    result = swift_getWitnessTable(&unk_1009A1E44, &type metadata for SectionHeader);
    atomic_store(result, (unint64_t *)&qword_100BE4598);
  }
  return result;
}

unint64_t sub_100483260()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  result = qword_100BE45A0;
  if (!qword_100BE45A0)
  {
    v1 = sub_100075EB0(&qword_100BE4590);
    v2 = sub_100075EB0(&qword_100BE45A8);
    v3 = sub_100075EB0(&qword_100BE45B0);
    v4 = type metadata accessor for InlinePickerStyle(255);
    sub_10027248C((uint64_t)&unk_100BE45B8);
    v7 = v3;
    v8 = v4;
    v9 = v5;
    v10 = &protocol witness table for InlinePickerStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
    v7 = v2;
    v8 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.labelsHidden()>>, 1);
    sub_10027248C((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE45A0);
  }
  return result;
}

void sub_100483374(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = sub_1001F0608(*a1);
  sub_10004A298();
}

void sub_100483398()
{
  sub_1001F0610();
  sub_10004A298();
}

unint64_t sub_1004833B8()
{
  unint64_t result;

  result = qword_100BE45D8;
  if (!qword_100BE45D8)
  {
    result = swift_getWitnessTable(&unk_1009A3C10, &unk_100B765B0);
    atomic_store(result, (unint64_t *)&qword_100BE45D8);
  }
  return result;
}

unint64_t sub_1004833F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE45E8;
  if (!qword_100BE45E8)
  {
    v1 = sub_100075EB0(&qword_100BE45F0);
    sub_100483478();
    sub_10027248C((uint64_t)&unk_100BE4618);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE45E8);
  }
  return result;
}

unint64_t sub_100483478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE45F8;
  if (!qword_100BE45F8)
  {
    v1 = sub_100075EB0(&qword_100BE4600);
    sub_10027248C((uint64_t)&qword_100BCF188);
    sub_10027248C((uint64_t)&unk_100BE4608);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE45F8);
  }
  return result;
}

void sub_100483514()
{
  EnvironmentValues.textCase.getter();
  sub_10004A298();
}

void sub_100483530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1000BA294(&qword_100BC4F90);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100079FBC();
  sub_10003773C(a1, v1, &qword_100BC4F90);
  EnvironmentValues.textCase.setter(v1);
  sub_100079F70();
}

uint64_t sub_10048359C@<X0>(uint64_t a1@<X8>)
{
  return sub_1004802C0((uint64_t (*)(void))sub_1004A7B80, a1);
}

void sub_1004835BC(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10047FA44(*(_BYTE *)(v1 + 16), a1);
}

void sub_1004835C4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100480428(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1004835CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4648;
  if (!qword_100BE4648)
  {
    v1 = sub_100075EB0(&qword_100BE4640);
    sub_100483650();
    sub_10027248C((uint64_t)&unk_100BE4680);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4648);
  }
  return result;
}

unint64_t sub_100483650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4650;
  if (!qword_100BE4650)
  {
    v1 = sub_100075EB0(&qword_100BE4658);
    sub_10027248C((uint64_t)&unk_100BE4660);
    sub_10027248C((uint64_t)&unk_100BE4670);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4650);
  }
  return result;
}

unint64_t sub_1004836EC()
{
  unint64_t result;

  result = qword_100BE4690;
  if (!qword_100BE4690)
  {
    result = swift_getWitnessTable(&unk_1009A1DF4, &type metadata for SubmitFeedbackView);
    atomic_store(result, (unint64_t *)&qword_100BE4690);
  }
  return result;
}

unint64_t sub_100483728()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4698;
  if (!qword_100BE4698)
  {
    v1 = sub_100075EB0(&qword_100BE4638);
    sub_100483224();
    sub_1004835CC();
    sub_1004836EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4698);
  }
  return result;
}

uint64_t sub_1004837A8()
{
  uint64_t v0;

  return sub_1004807A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1004837B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE46A8;
  if (!qword_100BE46A8)
  {
    v1 = sub_100075EB0(&qword_100BE46A0);
    sub_10027248C((uint64_t)&unk_100BE46B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE46A8);
  }
  return result;
}

uint64_t sub_10048382C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BD498() - 8) + 80);
  sub_1000D9DD8();
  sub_1000BEE74();
  sub_1000CDF44();
  v4 = sub_1000BA294(&qword_100BC2990);
  if (sub_10009DA58(v4) == 1)
  {
    v5 = sub_10003BC60();
    sub_10003BC44(v5);
  }
  else
  {
    sub_1000C6DD4();
  }
  return sub_100098B00(v0, v1 + v2, v3 | 7);
}

uint64_t sub_1004838A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReportWeatherContentView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_1004838E8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BD498() - 8) + 80);
  return sub_100480908(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

unint64_t sub_100483934()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE46C0;
  if (!qword_100BE46C0)
  {
    v1 = sub_100075EB0(&qword_100BDF688);
    sub_1004839A0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE46C0);
  }
  return result;
}

unint64_t sub_1004839A0()
{
  unint64_t result;

  result = qword_100BE46C8;
  if (!qword_100BE46C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_100BE46C8);
  }
  return result;
}

uint64_t sub_1004839E0()
{
  return sub_100483E2C((uint64_t (*)(unint64_t, _QWORD))sub_1004810CC);
}

void *sub_1004839EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100481338(*(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1004839F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4700;
  if (!qword_100BE4700)
  {
    v1 = sub_100075EB0(&qword_100BE46F8);
    sub_1003A3FF8();
    sub_10027248C((uint64_t)&qword_100BDFC58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4700);
  }
  return result;
}

unint64_t sub_100483A7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4708;
  if (!qword_100BE4708)
  {
    v1 = sub_100075EB0(&qword_100BE46D8);
    sub_10027248C((uint64_t)&unk_100BE4710);
    sub_10027248C((uint64_t)&qword_100BE1E58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4708);
  }
  return result;
}

unint64_t sub_100483B18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4718;
  if (!qword_100BE4718)
  {
    v1 = sub_100075EB0(&qword_100BE46E8);
    sub_100483B9C();
    sub_10027248C((uint64_t)&qword_100BD9910);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4718);
  }
  return result;
}

unint64_t sub_100483B9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4720;
  if (!qword_100BE4720)
  {
    v1 = sub_100075EB0(&qword_100BE46E0);
    sub_100483A7C();
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4720);
  }
  return result;
}

uint64_t sub_100483C20()
{
  uint64_t v0;

  return sub_10047FB44(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100483C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4740;
  if (!qword_100BE4740)
  {
    v1 = sub_100075EB0(&qword_100BE4738);
    sub_10027248C((uint64_t)&unk_100BE4748);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4740);
  }
  return result;
}

uint64_t sub_100483CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BD498() - 8) + 80);
  sub_1000D9DD8();
  sub_1000BEE74();
  sub_1000CDF44();
  v4 = sub_1000BA294(&qword_100BC2990);
  if (sub_10009DA58(v4) == 1)
  {
    v5 = sub_10003BC60();
    sub_10003BC44(v5);
  }
  else
  {
    sub_1000C6DD4();
  }
  return sub_100098B00(v0, v1 + v2, v3 | 7);
}

uint64_t sub_100483D1C(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BD498() - 8) + 80);
  return sub_10047FCB0(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_100483D64()
{
  unint64_t result;

  result = qword_100BE4770;
  if (!qword_100BE4770)
  {
    result = swift_getWitnessTable(&unk_1009A3BD0, &unk_100B76520);
    atomic_store(result, (unint64_t *)&qword_100BE4770);
  }
  return result;
}

uint64_t sub_100483DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BD498() - 8) + 80);
  sub_1000D9DD8();
  sub_1000BEE74();
  sub_1000CDF44();
  v4 = sub_1000BA294(&qword_100BC2990);
  if (sub_10009DA58(v4) == 1)
  {
    v5 = sub_10003BC60();
    sub_10003BC44(v5);
  }
  else
  {
    sub_1000C6DD4();
  }
  return sub_100098B00(v0, v2 + v1 + 1, v3 | 7);
}

uint64_t sub_100483E20()
{
  return sub_100483E2C((uint64_t (*)(unint64_t, _QWORD))sub_10047FDD4);
}

uint64_t sub_100483E2C(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(sub_1000BD498() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(unsigned __int8 *)(v1 + v3 + *(_QWORD *)(v2 + 64)));
}

uint64_t sub_100483E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10047FF80(*(unsigned __int8 *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_100483E7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1004802C0((uint64_t (*)(void))sub_1004A7CB8, a1);
}

void sub_100483E9C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100480314(*(_BYTE *)(v1 + 16), a1);
}

double sub_100483EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  double result;

  if (a3)
  {
    swift_retain(a7);
    swift_retain(a3);
    swift_retain(a4);
    swift_retain(a5);
    *(_QWORD *)&result = swift_retain(a6).n128_u64[0];
  }
  return result;
}

uint64_t sub_100483F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a3)
  {
    swift_release(a3);
    swift_release(a4);
    swift_release(a6);
    swift_release(a5);
    return swift_release(a7);
  }
  return result;
}

uint64_t sub_100483F5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10047EEE8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100483F64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  result = qword_100BE47A8;
  if (!qword_100BE47A8)
  {
    v1 = sub_100075EB0(&qword_100BE47A0);
    v2 = sub_100075EB0(&qword_100BE47B0);
    v3 = sub_100075EB0(&qword_100BE47B8);
    v4 = type metadata accessor for InlinePickerStyle(255);
    sub_10027248C((uint64_t)&unk_100BE47C0);
    v7 = v3;
    v8 = v4;
    v9 = v5;
    v10 = &protocol witness table for InlinePickerStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
    v7 = v2;
    v8 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.labelsHidden()>>, 1);
    sub_10027248C((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE47A8);
  }
  return result;
}

void sub_100484078(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = sub_1001F05D0(*a1);
  sub_10004A298();
}

void sub_10048409C()
{
  sub_1001F05D8();
  sub_10004A298();
}

unint64_t sub_1004840BC()
{
  unint64_t result;

  result = qword_100BE47E0;
  if (!qword_100BE47E0)
  {
    result = swift_getWitnessTable(&unk_1009A3C50, &unk_100B76640);
    atomic_store(result, (unint64_t *)&qword_100BE47E0);
  }
  return result;
}

unint64_t sub_1004840F8(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  unint64_t result;
  uint64_t *v4;

  result = sub_10009987C(a1);
  if (!result)
  {
    sub_1000B4444(0, v4);
    v2();
    result = sub_1000BF194((uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100484148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE47F0;
  if (!qword_100BE47F0)
  {
    v1 = sub_100075EB0(&qword_100BE47F8);
    sub_1004841CC();
    sub_10027248C((uint64_t)&unk_100BE4820);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE47F0);
  }
  return result;
}

unint64_t sub_1004841CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4800;
  if (!qword_100BE4800)
  {
    v1 = sub_100075EB0(&qword_100BE4808);
    sub_10027248C((uint64_t)&qword_100BCF188);
    sub_10027248C((uint64_t)&unk_100BE4810);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4800);
  }
  return result;
}

uint64_t sub_100484268@<X0>(uint64_t a1@<X8>)
{
  return sub_1004802C0((uint64_t (*)(void))sub_1004A7A64, a1);
}

void sub_100484288(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10047F494(*(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_100484290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10047E958(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100484298()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  result = qword_100BE4850;
  if (!qword_100BE4850)
  {
    v1 = sub_100075EB0(&qword_100BE4848);
    v2 = sub_100075EB0(&qword_100BE4858);
    v3 = sub_100075EB0(&qword_100BE4860);
    v4 = type metadata accessor for InlinePickerStyle(255);
    sub_10027248C((uint64_t)&unk_100BE4868);
    v7 = v3;
    v8 = v4;
    v9 = v5;
    v10 = &protocol witness table for InlinePickerStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
    v7 = v2;
    v8 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.labelsHidden()>>, 1);
    sub_10027248C((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4850);
  }
  return result;
}

void sub_1004843AC(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  uint64_t *v3;

  if (!sub_10009987C(a1))
  {
    sub_1000B4444(0, v3);
    sub_100483224();
    v2();
    atomic_store(sub_1000BF194((uint64_t)&protocol conformance descriptor for <> Section<A, B, C>), v1);
  }
  sub_10003BCFC();
}

void sub_100484404(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = sub_1001F0598(*a1);
  sub_10004A298();
}

void sub_100484428()
{
  sub_1001F05A0();
  sub_10004A298();
}

unint64_t sub_100484448()
{
  unint64_t result;

  result = qword_100BE4888;
  if (!qword_100BE4888)
  {
    result = swift_getWitnessTable(&unk_1009A3C90, &unk_100B766D0);
    atomic_store(result, (unint64_t *)&qword_100BE4888);
  }
  return result;
}

unint64_t sub_100484484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4898;
  if (!qword_100BE4898)
  {
    v1 = sub_100075EB0(&qword_100BE48A0);
    sub_100484508();
    sub_10027248C((uint64_t)&unk_100BE48C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4898);
  }
  return result;
}

unint64_t sub_100484508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE48A8;
  if (!qword_100BE48A8)
  {
    v1 = sub_100075EB0(&qword_100BE48B0);
    sub_10027248C((uint64_t)&qword_100BCF188);
    sub_10027248C((uint64_t)&unk_100BE48B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE48A8);
  }
  return result;
}

uint64_t sub_1004845A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1004802C0((uint64_t (*)(void))sub_1004A7840, a1);
}

void sub_1004845C4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10047EDCC(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_1004845CC()
{
  unint64_t result;

  result = qword_100BE48E8;
  if (!qword_100BE48E8)
  {
    result = swift_getWitnessTable(&unk_1009B647C, &type metadata for AppleAccountFlags);
    atomic_store(result, (unint64_t *)&qword_100BE48E8);
  }
  return result;
}

unint64_t sub_100484608()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4900;
  if (!qword_100BE4900)
  {
    v1 = sub_100075EB0(&qword_100BE48F8);
    sub_10027248C((uint64_t)&unk_100BE4670);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4900);
  }
  return result;
}

uint64_t destroy for SubmitFeedbackView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[2]);
}

uint64_t *_s7Weather18SubmitFeedbackViewVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for SubmitFeedbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for SubmitFeedbackView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for SubmitFeedbackView()
{
  return &type metadata for SubmitFeedbackView;
}

ValueMetadata *type metadata accessor for SectionHeader()
{
  return &type metadata for SectionHeader;
}

void sub_1004847EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  v0 = sub_100075EB0(&qword_100BE4568);
  v1 = type metadata accessor for InsetGroupedListStyle(255);
  sub_10027248C((uint64_t)&unk_100BE4580);
  v3[0] = v0;
  v3[1] = v1;
  v3[2] = v2;
  v3[3] = &protocol witness table for InsetGroupedListStyle;
  swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  sub_10003BCFC();
}

uint64_t sub_100484864(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB56A0, 1);
}

uint64_t sub_100484874(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB5678, 1);
}

void sub_100484884()
{
  EnvironmentValues.textCase.getter();
  sub_10004A298();
}

uint64_t sub_1004848A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  sub_1000D55D4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_10010F980(v3, v4, v5, v6);
  return a1;
}

void sub_10048490C()
{
  EnvironmentValues.openURL.getter();
  sub_10004A298();
}

uint64_t sub_100484930(uint64_t a1)
{
  uint64_t *v1;

  return sub_100482A1C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100484940()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100484974()
{
  uint64_t *v0;

  return sub_100482B14(v0[2], v0[3], v0[4]);
}

unint64_t sub_100484980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4918;
  if (!qword_100BE4918)
  {
    v1 = sub_100075EB0(&qword_100BE4910);
    sub_100484A04();
    sub_10027248C((uint64_t)&qword_100BC4F70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4918);
  }
  return result;
}

unint64_t sub_100484A04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4920;
  if (!qword_100BE4920)
  {
    v1 = sub_100075EB0(&qword_100BE4928);
    sub_100484608();
    sub_10027248C((uint64_t)&unk_100BE4680);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4920);
  }
  return result;
}

void sub_100484A88()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

unint64_t sub_100484AA4()
{
  unint64_t result;

  result = qword_100BE4930;
  if (!qword_100BE4930)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_100BE4930);
  }
  return result;
}

uint64_t sub_100484AE8(_QWORD *a1)
{
  return swift_release(*a1);
}

double sub_100484AF0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

_QWORD *sub_100484B04(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_100484B44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4940;
  if (!qword_100BE4940)
  {
    v1 = sub_100075EB0(&qword_100BE4908);
    sub_100484BC8();
    sub_10027248C((uint64_t)&qword_100BC4F80);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4940);
  }
  return result;
}

unint64_t sub_100484BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4948;
  if (!qword_100BE4948)
  {
    v1 = sub_100075EB0(&qword_100BE4950);
    sub_10027248C((uint64_t)&unk_100BE4958);
    sub_10027248C((uint64_t)&unk_100BE4680);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4948);
  }
  return result;
}

unint64_t sub_100484C68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4968;
  if (!qword_100BE4968)
  {
    v1 = sub_100075EB0(&qword_100BE4970);
    sub_100484980();
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4968);
  }
  return result;
}

void sub_100484D04()
{
  sub_100484D14(1);
}

void sub_100484D0C()
{
  sub_100484D14(2);
}

void sub_100484D14(char a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  _BYTE v8[48];

  v4 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098694();
  v6 = *(uint64_t (**)(uint64_t))(v1 + 48);
  *v2 = a1;
  v7 = sub_10009DB1C();
  sub_10009525C((uint64_t)v2, v7);
  sub_1000C1A48((uint64_t)v2, v4);
  sub_1000BA5F4();
  sub_1000B49C8((uint64_t)v2, (uint64_t)v8, v6);
  sub_100021A14((uint64_t)v8, (uint64_t *)&unk_100BFFA10);
  sub_1000215BC((uint64_t)v2, type metadata accessor for MainAction);
  sub_10009880C();
  sub_10004A2A0();
}

void sub_100484DB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = v0[16];
  v2 = v0[17];
  sub_1000DB418(v0 + 13, v1);
  v3 = swift_allocObject(&unk_100B75618, 24, 7);
  swift_weakInit(v3 + 16);
  v4 = swift_retain();
  dispatch thunk of NotificationAuthorizationManagerType.requestAuthorization(_:)(sub_100486800, v3, v1, v2, v4);
  swift_release_n(v3, 2);
  sub_10004A2A0();
}

double sub_100484E3C(char a1, uint64_t a2)
{
  double result;

  if ((a1 & 1) != 0)
  {
    swift_retain();
    asyncMain(block:)(sub_100486808, a2);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100484E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE v19[40];
  uint64_t v20;
  char v21;
  _OWORD v22[2];
  uint64_t v23;
  _BYTE v24[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = *(uint64_t (**)(uint64_t))(Strong + 48);
    swift_retain();
    swift_release();
    v5 = sub_1000BA294(&qword_100BD3370);
    v6 = type metadata accessor for MainAction(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 72);
    v9 = *(unsigned __int8 *)(v7 + 80);
    v10 = (v9 + 32) & ~v9;
    v11 = swift_allocObject(v5, v10 + 3 * v8, v9 | 7);
    *(_OWORD *)(v11 + 16) = xmmword_10098B610;
    v12 = v11 + v10;
    v13 = type metadata accessor for NotificationsOptInAction(0);
    swift_storeEnumTagMultiPayload(v12, v13, 11);
    swift_storeEnumTagMultiPayload(v12, v6, 5);
    sub_1000BA294(&qword_100BD2378);
    v15 = static NotificationSubscription.Location.current.getter(v14);
    static NotificationSubscription.Kind.all.getter(v15);
    v16 = type metadata accessor for NotificationsAction(0);
    swift_storeEnumTagMultiPayload(v12 + v8, v16, 2);
    swift_storeEnumTagMultiPayload(v12 + v8, v6, 4);
    v17 = (_BYTE *)(v12 + 2 * v8);
    *v17 = 3;
    v18 = type metadata accessor for ModalViewAction(0);
    swift_storeEnumTagMultiPayload(v17, v18, 1);
    swift_storeEnumTagMultiPayload(v17, v6, 7);
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_1000A5F84((uint64_t)v22, (uint64_t)v19);
    v20 = v11;
    v21 = 0;
    swift_bridgeObjectRetain(v11);
    sub_10009FF10((uint64_t)v19, v4);
    sub_100021A14((uint64_t)v19, &qword_100BD3378);
    swift_bridgeObjectRelease();
    sub_100021A14((uint64_t)v22, (uint64_t *)&unk_100BFFA10);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10048505C(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE v20[40];
  uint64_t v21;
  char v22;
  _OWORD v23[2];
  uint64_t v24;

  if (a1 == 2)
  {
    v2 = v1[16];
    v3 = v1[17];
    sub_1000DB418(v1 + 13, v2);
    dispatch thunk of NotificationAuthorizationManagerType.requestAuthorization()(v2, v3);
  }
  v4 = (uint64_t (*)(uint64_t))v1[6];
  v5 = sub_1000BA294(&qword_100BD3370);
  v6 = sub_100099ACC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v5, v10 + 3 * v8, v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_10098B610;
  v12 = v11 + v10;
  v13 = type metadata accessor for NotificationsOptInAction(0);
  swift_storeEnumTagMultiPayload(v12, v13, 11);
  swift_storeEnumTagMultiPayload(v12, v6, 5);
  sub_1000BA294(&qword_100BD2378);
  v14.n128_f64[0] = sub_10009D4E0();
  v15 = static NotificationSubscription.Location.current.getter(v14);
  static NotificationSubscription.Kind.severe.getter(v15);
  v16 = sub_100099AD4();
  swift_storeEnumTagMultiPayload(v12 + v8, v16, 2);
  swift_storeEnumTagMultiPayload(v12 + v8, v6, 4);
  v17 = (_BYTE *)(v12 + 2 * v8);
  *v17 = 0;
  v18 = sub_10009DB1C();
  sub_10009525C((uint64_t)v17, v18);
  sub_1000C1A48((uint64_t)v17, v6);
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  sub_1000A5F84((uint64_t)v23, (uint64_t)v20);
  v21 = v11;
  v22 = 0;
  swift_bridgeObjectRetain(v11);
  sub_10009FF10((uint64_t)v20, v4);
  sub_100021A14((uint64_t)v20, &qword_100BD3378);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v23, (uint64_t *)&unk_100BFFA10);
  return sub_10009925C();
}

void sub_10048521C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  double (*v40)();
  uint64_t v41;

  sub_1000986AC();
  v3 = v0;
  v34 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v34 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  v5 = sub_1000BA8E0();
  v6 = type metadata accessor for DispatchQoS(v5);
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100098694();
  v33 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v14 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  v19 = *(uint64_t (**)(uint64_t))(v3 + 48);
  *(_BYTE *)(v17 - v16) = 4;
  v20 = sub_10009DB1C();
  sub_10009525C(v18, v20);
  sub_1000C1A48(v18, v14);
  v40 = 0;
  v38 = 0u;
  v39 = 0u;
  swift_retain();
  sub_1000A5EBC(v18, (uint64_t)&v38, v19);
  sub_100021A14((uint64_t)&v38, (uint64_t *)&unk_100BFFA10);
  sub_1000215BC(v18, type metadata accessor for MainAction);
  swift_release();
  sub_1000C2420();
  v21 = (void *)sub_1000BBE70();
  static DispatchTime.now()(v21);
  + infix(_:_:)(v10);
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23 = v10;
  v24 = v33;
  v22(v23, v33);
  v40 = sub_100486810;
  v41 = v3;
  *(_QWORD *)&v38 = _NSConcreteStackBlock;
  *((_QWORD *)&v38 + 1) = 1107296256;
  *(_QWORD *)&v39 = sub_100121D84;
  *((_QWORD *)&v39 + 1) = &unk_100B75630;
  v25 = _Block_copy(&v38);
  v26 = v41;
  swift_retain();
  sub_10009880C();
  static DispatchQoS.unspecified.getter(v27);
  *(_QWORD *)&v38 = _swiftEmptyArrayStorage;
  sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = v28;
  sub_1000BA294(&qword_100BD4F10);
  v30 = sub_1000BEAA0();
  v31 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v26, v30, v34, v29);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v2, v1, v25);
  _Block_release(v25);

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v1, v31);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v36);
  v22(v13, v24);
  sub_100098640();
}

double sub_1004854C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  v2 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(uint64_t (**)(uint64_t))(a1 + 48);
  v6 = type metadata accessor for NotificationsOptInAction(0);
  swift_storeEnumTagMultiPayload(v4, v6, 11);
  swift_storeEnumTagMultiPayload(v4, v2, 5);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1000A5EBC((uint64_t)v4, (uint64_t)v8, v5);
  sub_100021A14((uint64_t)v8, (uint64_t *)&unk_100BFFA10);
  sub_1000215BC((uint64_t)v4, type metadata accessor for MainAction);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004855B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(_QWORD *__return_ptr);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(void *, uint64_t);
  char v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  BOOL v65;
  char v66;
  uint64_t v67;
  void (*v68)(void (*)(_QWORD *__return_ptr), uint64_t);
  void *v69;
  uint64_t v70;
  __n128 v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, _QWORD);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[6];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(void (*)(_QWORD *__return_ptr), uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[10];

  sub_1000986AC();
  v96 = v3;
  v103 = v5;
  v104 = v4;
  v97 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v90 = sub_1000C54FC(v7, v87[0]);
  v89 = *(_QWORD *)(v90 - 8);
  sub_10009D98C();
  __chkstk_darwin(v8);
  v88 = sub_1000DCED8(v9, v87[0]);
  v87[5] = *(_QWORD *)(v88 - 8);
  sub_10009D98C();
  __chkstk_darwin(v10);
  v91 = sub_1000DDAD0(v11, v87[0]);
  v87[2] = *(_QWORD *)(v91 - 8);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098D50(v13, v87[0]);
  __chkstk_darwin(v14);
  sub_1000D9DEC(v15, v16, v17, v18, v19, v20, v21, v22, v87[0]);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  v93 = sub_1000CCD70(v24, v87[0]);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_1000CFCF0(v26, v87[0]);
  sub_1000BA294(&qword_100BE4A48);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  v29 = sub_1000DBA2C(v28, v87[0]);
  v99 = *(_QWORD *)(v29 - 8);
  v100 = v29;
  sub_10009D98C();
  __chkstk_darwin(v30);
  sub_10009D384(v31, v87[0]);
  sub_1000BA294(&qword_100C0B8D0);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100098728();
  v35 = v34 - v33;
  v36 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  v38 = sub_1000992A8();
  v39 = type metadata accessor for LocationModel(v38);
  v40 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  sub_1000BD4A0(v41, v87[0]);
  __chkstk_darwin(v42);
  sub_1000B2F10();
  __chkstk_darwin(v43);
  v45 = (char *)v87 - v44;
  sub_1000C1668();
  v46 = (void (*)(_QWORD *__return_ptr))v105[0];
  sub_100084050(v105[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v2, type metadata accessor for LocationsState);
  swift_release();
  v47 = *(_QWORD *)(v2 + *(int *)(v36 + 40));
  swift_bridgeObjectRetain(v47);
  v48 = v2;
  v49 = v39;
  sub_1000215BC(v48, type metadata accessor for LocationsState);
  sub_10009BF8C();
  sub_1007D4D10(v104, (uint64_t)type metadata accessor for LocationsState, v47);
  sub_1000986E8();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v39) == 1)
  {
    v50 = &qword_100C0B8D0;
    v51 = (uint64_t (*)(uint64_t))v35;
LABEL_6:
    sub_100021A14((uint64_t)v51, v50);
    goto LABEL_23;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v45, v35, v39);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v1, v45, v39);
  sub_1000DC42C();
  v52 = v100;
  v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)type metadata accessor for LocationsState, 1, v100) == 1;
  v53 = (uint64_t)v45;
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v39);
    v50 = &qword_100BE4A48;
    v51 = type metadata accessor for LocationsState;
    goto LABEL_6;
  }
  v54 = v40;
  v104 = v53;
  v55 = v99;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v99 + 32))(v102, type metadata accessor for LocationsState, v52);
  sub_1000CF86C();
  v56 = v92;
  sub_100084050(v105[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v92, type metadata accessor for NotificationsOptInState);
  sub_10009925C();
  v57 = *(_BYTE *)(v56 + *(int *)(v93 + 56));
  sub_1000215BC(v56, type metadata accessor for NotificationsOptInState);
  if ((v57 & 1) != 0)
  {
    sub_1000DAF20();
LABEL_10:
    v61 = *(void (**)(void *, uint64_t))(v54 + 8);
    v61(v0, v49);
    goto LABEL_19;
  }
  v46(v105);
  v58 = v105[0];
  sub_1000D8FE4(OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment);
  sub_1000D12C8();
  sub_10009925C();
  sub_1000D0668();
  v59 = sub_1000DAF20();
  v60 = v95;
  if ((_DWORD)v58 == 2)
    goto LABEL_10;
  v61 = (void (*)(void *, uint64_t))v0;
  v62 = LocationModel.kind.getter(v59);
  Location.Identifier.Kind.rawValue.getter(v62 & 1);
  v63 = (uint64_t (*)(uint64_t))sub_1000E7C48();
  v65 = type metadata accessor for EnvironmentState == v63 && v58 == v64;
  if (v65)
  {
    sub_1000DC6FC();
    sub_1000C0A64();
  }
  else
  {
    v66 = sub_1000D17D0((uint64_t)v63, v64);
    sub_1000986E8();
    sub_1000986C4();
    sub_1000C0A64();
    if ((v66 & 1) == 0)
      goto LABEL_19;
  }
  v67 = *(_QWORD *)(v60 + 88);
  sub_1000DB418((_QWORD *)(v60 + 64), v67);
  sub_1000C21F8();
  sub_1000C2420();
  v94 = sub_1000BBE70();
  sub_1000DC92C();
  sub_1000D0D20();
  v103 = v49;
  sub_1000988C4();
  v101 = v68;
  sub_1000C6AE4((uint64_t (*)(uint64_t, _QWORD))v68);
  v105[4] = sub_100486818;
  v105[5] = v60;
  v105[0] = _NSConcreteStackBlock;
  v105[1] = 1107296256;
  v69 = sub_1000DC1C8((uint64_t)sub_100121D84);
  swift_retain();
  sub_10009880C();
  v70 = v87[4];
  static DispatchQoS.unspecified.getter(v71);
  v105[0] = _swiftEmptyArrayStorage;
  sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  sub_1000BA294(&qword_100BD4F10);
  v72 = sub_1000BEAA0();
  sub_1000C3AD0(v72);
  v0 = (void *)v94;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v46, v70, v67, v69);
  _Block_release(v69);

  sub_1000D1E3C();
  sub_1000988C4();
  v73 = v70;
  v55 = v99;
  sub_1000BD33C(v73, v74);
  v101(v46, v91);
  v49 = v103;
LABEL_19:
  if ((v96 & 1) != 0)
  {
    sub_1000BA294(&qword_100BD2378);
    v75 = v98;
    v76 = v102;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v98, v102, v52);
    sub_10009D4E0();
    static NotificationSubscription.Kind.precipitation.getter(v77);
    v78 = sub_100099AD4();
    sub_1000C6E58(v78);
    sub_1000DF660(v75);
    v79 = sub_1000B49A8();
    sub_1000DACA0(v79, (uint64_t *)&unk_100BFFA10);
    sub_1000215BC(v75, type metadata accessor for MainAction);
    sub_10009925C();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v76, v52);
    v80 = v104;
    v81 = v49;
  }
  else
  {
    sub_1000BA294(&qword_100BD2370);
    v82 = v49;
    v83 = v98;
    sub_10009D4E0();
    v84 = sub_1000DB2B0();
    static NotificationSubscription.Kind.precipitation.getter(v84);
    v85 = sub_100099AD4();
    sub_1000CDC84(v85);
    sub_1000DF660(v83);
    v86 = sub_1000C5ED4();
    sub_1000DACA0(v86, (uint64_t *)&unk_100BFFA10);
    sub_1000215BC(v83, type metadata accessor for MainAction);
    sub_10009925C();
    (*(void (**)(void *, uint64_t))(v55 + 8))(v0, v52);
    v80 = v104;
    v81 = v82;
  }
  v61((void *)v80, v81);
LABEL_23:
  sub_100098640();
}

void sub_100485BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  void (*v5)(void (*)(_QWORD *__return_ptr), uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(_QWORD *__return_ptr);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  void (*v65)(void (*)(_QWORD *__return_ptr), uint64_t);
  void *v66;
  uint64_t v67;
  __n128 v68;
  unint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, _QWORD);
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[6];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(void (*)(_QWORD *__return_ptr), uint64_t);
  uint64_t v101;
  _QWORD v102[10];

  sub_1000986AC();
  v93 = v3;
  v100 = v5;
  v101 = v4;
  v94 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v88 = sub_1000C54FC(v7, v85[0]);
  v87 = *(_QWORD *)(v88 - 8);
  sub_10009D98C();
  __chkstk_darwin(v8);
  v86 = sub_1000DCED8(v9, v85[0]);
  v85[5] = *(_QWORD *)(v86 - 8);
  sub_10009D98C();
  __chkstk_darwin(v10);
  v89 = sub_1000DDAD0(v11, v85[0]);
  v85[2] = *(_QWORD *)(v89 - 8);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098D50(v13, v85[0]);
  __chkstk_darwin(v14);
  sub_1000D9DEC(v15, v16, v17, v18, v19, v20, v21, v22, v85[0]);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  v91 = sub_1000CCD70(v24, v85[0]);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_1000CFCF0(v26, v85[0]);
  sub_1000BA294(&qword_100BE4A48);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  v29 = sub_1000DBA2C(v28, v85[0]);
  v96 = *(_QWORD *)(v29 - 8);
  v97 = v29;
  sub_10009D98C();
  __chkstk_darwin(v30);
  sub_10009D384(v31, v85[0]);
  sub_1000BA294(&qword_100C0B8D0);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100098728();
  v35 = v34 - v33;
  v36 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_100079F58();
  v38 = (_QWORD *)type metadata accessor for LocationModel(0);
  v39 = *(v38 - 1);
  __chkstk_darwin(v38);
  sub_1000BD4A0(v40, v85[0]);
  __chkstk_darwin(v41);
  sub_1000B2F10();
  __chkstk_darwin(v42);
  v44 = (char *)v85 - v43;
  sub_1000C1668();
  v45 = (void (*)(_QWORD *__return_ptr))v102[0];
  sub_100084050(v102[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v0, type metadata accessor for LocationsState);
  swift_release();
  v46 = *(_QWORD *)(v0 + *(int *)(v36 + 40));
  swift_bridgeObjectRetain();
  sub_1000215BC(v0, type metadata accessor for LocationsState);
  sub_10009BF8C();
  sub_1007D4D10(v101, v0, v46);
  sub_1000986E8();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, (uint64_t)v38) == 1)
  {
    v47 = &qword_100C0B8D0;
    v48 = v35;
LABEL_6:
    sub_100021A14(v48, v47);
    goto LABEL_23;
  }
  (*(void (**)(char *, uint64_t, _QWORD *))(v39 + 32))(v44, v35, v38);
  (*(void (**)(uint64_t, char *, _QWORD *))(v39 + 16))(v2, v44, v38);
  sub_1000DC42C();
  v49 = v97;
  v62 = _s7Weather24LocationCompositionStateOwet_0(v0, 1, v97) == 1;
  v50 = (uint64_t)v44;
  if (v62)
  {
    (*(void (**)(char *, _QWORD *))(v39 + 8))(v44, v38);
    v47 = &qword_100BE4A48;
    v48 = v0;
    goto LABEL_6;
  }
  v51 = v39;
  v101 = v50;
  v52 = v96;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 32))(v99, v0, v49);
  sub_1000CF86C();
  v53 = v90;
  sub_100084050(v102[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v90, type metadata accessor for NotificationsOptInState);
  sub_10009925C();
  v54 = *(_BYTE *)(v53 + *(int *)(v91 + 56));
  sub_1000215BC(v53, type metadata accessor for NotificationsOptInState);
  v85[0] = (uint64_t)v38;
  if ((v54 & 1) != 0)
  {
    sub_1000DA58C();
    v55 = v92;
LABEL_10:
    v58 = v38;
    v38 = *(_QWORD **)(v51 + 8);
    ((void (*)(uint64_t, _QWORD *))v38)(v1, v58);
    goto LABEL_19;
  }
  v45(v102);
  v56 = v102[0];
  sub_1000D8FE4(OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment);
  sub_1000D12C8();
  sub_10009925C();
  sub_1000D0668();
  v57 = sub_1000DA58C();
  v55 = v92;
  if ((_DWORD)v56 == 2)
    goto LABEL_10;
  v59 = LocationModel.kind.getter(v57);
  Location.Identifier.Kind.rawValue.getter(v59 & 1);
  v60 = (uint64_t (*)(uint64_t))sub_1000E7C48();
  v62 = type metadata accessor for EnvironmentState == v60 && v56 == v61;
  if (v62)
  {
    sub_1000DC6FC();
    sub_100099518();
  }
  else
  {
    v63 = sub_1000D17D0((uint64_t)v60, v61);
    sub_1000986E8();
    sub_1000986C4();
    sub_100099518();
    if ((v63 & 1) == 0)
      goto LABEL_19;
  }
  v64 = v55[11];
  sub_1000DB418(v55 + 8, v64);
  sub_1000C21F8();
  sub_1000C2420();
  v98 = sub_1000BBE70();
  sub_1000DC92C();
  sub_1000D0D20();
  sub_1000988C4();
  v100 = v65;
  sub_1000C6AE4((uint64_t (*)(uint64_t, _QWORD))v65);
  v102[4] = sub_100486818;
  v102[5] = v55;
  v102[0] = _NSConcreteStackBlock;
  v102[1] = 1107296256;
  v66 = sub_1000DC1C8((uint64_t)sub_100121D84);
  swift_retain();
  sub_10009880C();
  v67 = v85[4];
  static DispatchQoS.unspecified.getter(v68);
  v102[0] = _swiftEmptyArrayStorage;
  sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  sub_1000BA294(&qword_100BD4F10);
  v69 = sub_1000BEAA0();
  sub_1000C3AD0(v69);
  v70 = (void *)v98;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v45, v67, v64, v66);
  _Block_release(v66);

  sub_1000D1E3C();
  sub_1000988C4();
  v71 = v67;
  v52 = v96;
  sub_1000BD33C(v71, v72);
  v100(v45, v89);
LABEL_19:
  v73 = v55[16];
  v74 = v55[17];
  v75 = sub_1000DB418(v55 + 13, v73);
  dispatch thunk of NotificationAuthorizationManagerType.requestAuthorization()(v73, v74);
  if ((v93 & 1) != 0)
  {
    sub_1000BA294(&qword_100BD2378);
    v76 = v95;
    v77 = v99;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v95, v99, v49);
    sub_10009D4E0();
    static NotificationSubscription.Kind.severe.getter(v78);
    v79 = sub_100099AD4();
    sub_1000C6E58(v79);
    sub_1000DF660(v76);
    v80 = sub_1000B49A8();
    sub_1000DACA0(v80, (uint64_t *)&unk_100BFFA10);
    sub_1000215BC(v76, type metadata accessor for MainAction);
    sub_10009925C();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v77, v49);
  }
  else
  {
    sub_1000BA294(&qword_100BD2370);
    v81 = v95;
    sub_10009D4E0();
    v82 = sub_1000DB2B0();
    static NotificationSubscription.Kind.severe.getter(v82);
    v83 = sub_100099AD4();
    sub_1000CDC84(v83);
    sub_1000DF660(v81);
    v84 = sub_1000C5ED4();
    sub_1000DACA0(v84, (uint64_t *)&unk_100BFFA10);
    sub_1000215BC(v81, type metadata accessor for MainAction);
    sub_10009925C();
    (*(void (**)(_QWORD *, uint64_t))(v52 + 8))(v75, v49);
  }
  ((void (*)(uint64_t, uint64_t))v38)(v101, v85[0]);
LABEL_23:
  sub_100098640();
}

void sub_100486230(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _BYTE v7[48];

  v3 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100079FBC();
  v5 = *(uint64_t (**)(uint64_t))(a1 + 48);
  *v1 = 5;
  v6 = sub_10009DB1C();
  sub_10009525C((uint64_t)v1, v6);
  sub_1000C1A48((uint64_t)v1, v3);
  sub_1000BA5F4();
  sub_1000B49C8((uint64_t)v1, (uint64_t)v7, v5);
  sub_100021A14((uint64_t)v7, (uint64_t *)&unk_100BFFA10);
  sub_1000215BC((uint64_t)v1, type metadata accessor for MainAction);
  sub_10009880C();
  sub_10004A2A0();
}

void sub_1004862D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  v2 = sub_100099ACC();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100079F58();
  sub_10082FB80(1);
  if ((v4 & 1) != 0)
  {
    v5 = *(uint64_t (**)(uint64_t))(v1 + 48);
    v6 = type metadata accessor for ListViewAction(0);
    swift_storeEnumTagMultiPayload(v0, v6, 3);
    v7 = type metadata accessor for ViewAction(0);
    swift_storeEnumTagMultiPayload(v0, v7, 0);
    swift_storeEnumTagMultiPayload(v0, v2, 6);
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_retain();
    sub_1000B49C8(v0, (uint64_t)v8, v5);
    sub_100021A14((uint64_t)v8, (uint64_t *)&unk_100BFFA10);
    sub_1000215BC(v0, type metadata accessor for MainAction);
    sub_10009880C();
  }
}

void sub_1004863B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  Class isa;
  uint64_t v32;

  sub_1000986AC();
  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100079FBC();
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = sub_1000BA8E0();
  v8 = type metadata accessor for NotificationsConfiguration(v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = sub_1000992A8();
  type metadata accessor for AppConfigurationState(v10);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v32);
  sub_100084050(v32 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v14, type metadata accessor for AppConfigurationState);
  v15 = sub_10009880C();
  AppConfiguration.notifications.getter(v15);
  v16 = type metadata accessor for AppConfiguration(0);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  v18 = NotificationsConfiguration.learnMoreURL.getter(v17);
  v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v8);
  if (v20)
  {
    URL.init(string:)(v18, v20);
    sub_1000986C4();
    if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v5) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v5);
      v27 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      URL._bridgeToObjectiveC()(v28);
      v30 = v29;
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_100086DA4((unint64_t *)&qword_100BC2BE8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10097D0B4);
      Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v27, "openURL:options:completionHandler:", v30, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
      goto LABEL_10;
    }
    sub_100021A14(v2, &qword_100BD4280);
  }
  if (qword_100BC2440 != -1)
    swift_once(&qword_100BC2440, sub_1006F37F4);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_1000AECD4(v21, (uint64_t)qword_100CAF0B8);
  v23 = Logger.logObject.getter(v22);
  v25 = static os_log_type_t.error.getter(v23, v24);
  if (os_log_type_enabled(v23, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v25, "App configuration has not specified a valid notifications support page URL", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

LABEL_10:
  sub_100098640();
}

void sub_1004866C0()
{
  _QWORD *v0;

  swift_release();
  sub_10009925C();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 13);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 19);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  sub_10004A298();
}

uint64_t sub_100486718()
{
  uint64_t v0;

  sub_1004866C0();
  return swift_deallocClassInstance(v0, 232, 7);
}

uint64_t type metadata accessor for NotificationSettingsInteractor()
{
  return objc_opt_self(_TtC7Weather30NotificationSettingsInteractor);
}

void sub_100486758()
{
  sub_100484DB8();
}

void sub_100486778()
{
  sub_100484D14(4);
}

uint64_t sub_10048679C(char a1)
{
  return sub_10048505C(a1);
}

void sub_1004867BC()
{
  sub_10048521C();
}

uint64_t sub_1004867DC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100486800(char a1)
{
  uint64_t v1;

  return sub_100484E3C(a1, v1);
}

double sub_100486808()
{
  uint64_t v0;

  return sub_100484E7C(v0);
}

double sub_100486810()
{
  uint64_t v0;

  return sub_1004854C4(v0);
}

void sub_100486818()
{
  uint64_t v0;

  sub_100486230(v0);
}

uint64_t sub_100486840(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100486898 + 4 * byte_1009A2130[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_100486A78(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload(a1);
  switch((int)result)
  {
    case 0:
    case 1:
      v3 = &qword_100BE4A50;
      goto LABEL_4;
    case 2:
      swift_release();
      v3 = (uint64_t *)&unk_100BE4A58;
LABEL_4:
      v4 = *(int *)(sub_1000BA294(v3) + 48);
      goto LABEL_6;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = *(int *)(sub_1000BA294(&qword_100BE4A60) + 64);
LABEL_6:
      v5 = a1 + v4;
      v6 = type metadata accessor for Location(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void sub_100486B48(uint64_t a1, uint64_t a2)
{
  char *v2;

  v2 = (char *)sub_100486B98 + 4 * byte_1009A2138[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

_BYTE *sub_100486B98()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *v0 = *v3;
  v4 = *(int *)(sub_1000BA294(&qword_100BE4A50) + 48);
  v5 = &v0[v4];
  v6 = &v3[v4];
  v7 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_100486C98(uint64_t result, uint64_t a2)
{
  char *v3;

  if (result != a2)
  {
    sub_100486E20(result);
    v3 = (char *)&loc_100486CF8 + 4 * byte_1009A213C[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_100486E20(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AveragesDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AveragesDetailViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE4AD8;
  if (!qword_100BE4AD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AveragesDetailViewModel);
  return result;
}

void sub_100486E94(uint64_t a1, uint64_t a2)
{
  char *v2;

  v2 = (char *)sub_100486ED8 + 4 * byte_1009A2140[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

_BYTE *sub_100486ED8()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;

  *v0 = *v2;
  v3 = *(int *)(sub_1000BA294(&qword_100BE4A50) + 48);
  v4 = &v0[v3];
  v5 = &v2[v3];
  v6 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_10048703C(uint64_t result, uint64_t a2)
{
  char *v3;

  if (result != a2)
  {
    sub_100486E20(result);
    v3 = (char *)&loc_100487090 + 4 * byte_1009A2144[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1004871F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _BYTE v6[32];
  _BYTE v7[32];
  _BYTE v8[32];
  _QWORD v9[4];

  result = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v8, &unk_1009A2178, v4);
    v9[0] = v8;
    swift_getTupleTypeLayout2(v7, &unk_1009A2178, v4);
    v9[1] = v7;
    swift_getTupleTypeLayout2(v6, &unk_1009A2190, v4);
    v9[2] = v6;
    swift_getTupleTypeLayout3(v5, &unk_1009A21A8, &unk_1009A2178, v4);
    v9[3] = v5;
    swift_initEnumMetadataMultiPayload(a1, 256, 4, v9);
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AveragesDetailViewModel.Condition(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2 & 0x7FFFFFFFFFFFFFFFLL;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for AveragesDetailViewModel.Condition(_QWORD *a1)
{
  return swift_release(*a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t *assignWithCopy for AveragesDetailViewModel.Condition(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2 & 0x7FFFFFFFFFFFFFFFLL;
  v4 = *a1;
  *a1 = *a2;
  v5 = v4 & 0x7FFFFFFFFFFFFFFFLL;
  swift_retain(v3);
  swift_release(v5);
  return a1;
}

uint64_t *assignWithTake for AveragesDetailViewModel.Condition(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3 & 0x7FFFFFFFFFFFFFFFLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for AveragesDetailViewModel.Condition(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AveragesDetailViewModel.Condition(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t *sub_100487424(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for AveragesDetailViewModel.Condition()
{
  return &type metadata for AveragesDetailViewModel.Condition;
}

uint64_t sub_100487448()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._countAndFlagsBits = 0xD000000000000021;
  v5._object = (void *)0x8000000100A05B70;
  v1._object = (void *)0x8000000100A05B50;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  v2._countAndFlagsBits = 0x7365676172657641;
  v2._object = (void *)0xE800000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_100487504()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  sub_1000B49D0();
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000BCED8();
  sub_100488000(v0, v0);
  v2 = (char *)sub_10048756C + 4 * byte_1009A2148[swift_getEnumCaseMultiPayload(v0)];
  __asm { BR              X10 }
}

uint64_t sub_10048756C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;

  v1 = *v0;
  v2 = &v0[*(int *)(sub_1000BA294(&qword_100BE4A50) + 48)];
  v3 = sub_1000992C4();
  (*(void (**)(unsigned __int8 *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v1;
}

void sub_100487628()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  sub_1000B49D0();
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000BCED8();
  sub_100488000(v0, v0);
  v2 = (char *)sub_100487694 + 4 * byte_1009A214C[swift_getEnumCaseMultiPayload(v0)];
  __asm { BR              X10 }
}

uint64_t sub_100487694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(sub_1000BA294(&qword_100BE4A50) + 48);
  v3 = sub_1000992C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v0, v2, v3);
}

uint64_t sub_100487740@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int *v16;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = sub_1000992C4();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DetailType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10009883C();
  v12 = v10 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - v14;
  sub_100487504();
  v16 = (unsigned int *)&enum case for DetailType.temperatureAverages(_:);
  if (v17)
    v16 = (unsigned int *)&enum case for DetailType.precipitationAverages(_:);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v12, *v16, v8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  v18(v15, v12, v8);
  sub_100487628();
  sub_100486E20(a1);
  v19 = type metadata accessor for DetailViewVisibilityTrackerModel(0);
  v20 = &a2[*(int *)(v19 + 24)];
  v21 = enum case for DetailViewOrigin.component(_:);
  v22 = type metadata accessor for DetailViewOrigin(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v18(a2, (uint64_t)v15, v8);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(&a2[*(int *)(v19 + 20)], v7, v4);
}

void sub_1004878C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[7];
  uint64_t v21;
  uint64_t v22;

  v22 = a2;
  v21 = sub_1000992C4();
  v20[6] = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  sub_10009883C();
  sub_1000BA30C();
  __chkstk_darwin(v3);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v4);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v5);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v6);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v7);
  sub_1000860D0();
  sub_1000BA30C();
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  sub_1000B49D0();
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_10009883C();
  v12 = __chkstk_darwin(v11);
  v13 = __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  sub_1000BA294(&qword_100BE4B18);
  sub_1000B42B0();
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_100488000(a1, (uint64_t)v17);
  sub_100488000(v22, v18);
  v19 = (char *)sub_100487AC8 + 4 * byte_1009A2150[swift_getEnumCaseMultiPayload(v17)];
  __asm { BR              X10 }
}

uint64_t sub_100487AC8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, _QWORD);
  int v10;
  int v11;
  unsigned __int8 *v12;
  void (*v13)(uint64_t, unsigned __int8 *, uint64_t);
  uint64_t v14;
  char v15;

  sub_100488000(v0, (uint64_t)v3);
  v6 = *(int *)(sub_1000BA294(&qword_100BE4A50) + 48);
  v7 = &v3[v6];
  if (sub_1000BC214())
  {
    v8 = sub_1000D12E0();
    sub_1000C499C(v8, v9);
    sub_1004880AC(v0);
LABEL_6:
    v15 = 0;
    return v15 & 1;
  }
  v10 = *v3;
  v11 = *v2;
  v12 = &v2[v6];
  v13 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(_QWORD *)(v5 - 304) + 32);
  v14 = *(_QWORD *)(v5 - 296);
  v13(v4, v7, v14);
  v13(v1, v12, v14);
  if (v10 != v11)
  {
    sub_1000DBA4C();
    ((void (*)(uint64_t, uint64_t))v7)(v4, v14);
    sub_100486E20(v0);
    goto LABEL_6;
  }
  v15 = static Location.== infix(_:_:)(v4, v1);
  sub_1000DBA4C();
  ((void (*)(uint64_t, uint64_t))v7)(v4, v14);
  sub_100486E20(v0);
  return v15 & 1;
}

uint64_t sub_100487E5C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 < 0)
  {
    if (a2 < 0)
    {
      sub_100098D74();
      sub_1000C1598();
      sub_10009D4E0();
      sub_1001F2AD4();
      goto LABEL_7;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(0);
    sub_1000C1598();
    sub_10009D4E0();
    sub_1001ED69C();
LABEL_7:
    v3 = v2;
    swift_release();
    sub_10009925C();
    return v3 & 1;
  }
  v3 = 0;
  return v3 & 1;
}

uint64_t sub_100487EEC(uint64_t *a1, uint64_t *a2)
{
  return sub_100487E5C(*a1, *a2);
}

uint64_t sub_100487EF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BE4B20);
  a1[4] = sub_1004880EC();
  sub_10005F164(a1);
  v3 = sub_1000B49D0();
  return ShortDescription.init(name:_:)(0xD000000000000017, 0x80000001009A2140, v2, v3);
}

uint64_t sub_100487F90@<X0>(_QWORD *a1@<X8>)
{
  return sub_100487EF8(a1);
}

uint64_t sub_100487FA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100488130(&qword_100BE4B30, (uint64_t)&unk_1009A21F4);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_100487FDC()
{
  return sub_100488130(&qword_100BE4B10, (uint64_t)&unk_1009A21CC);
}

uint64_t sub_100488000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AveragesDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100488044(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[9];
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t sub_1004880AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BE4B18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004880EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4B28;
  if (!qword_100BE4B28)
  {
    v1 = sub_100075EB0(&qword_100BE4B20);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4B28);
  }
  return result;
}

uint64_t sub_100488130(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AveragesDetailViewModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100488174(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v22 = a1;
  v23 = a2;
  v4 = type metadata accessor for ArticlePlacementLocation(0);
  __chkstk_darwin(v4);
  sub_100098728();
  type metadata accessor for NewsComponentPosition(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = type metadata accessor for NewsArticleComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - v14;
  sub_1000BCF30(v3, v8);
  if (swift_getEnumCaseMultiPayload(v8) > 2)
  {
    sub_10007802C(v8, (uint64_t)v12, type metadata accessor for NewsArticleComponent);
    sub_1000D1800(v18, enum case for ArticlePlacementLocation.trend(_:));
    sub_1000DA5A0();
    sub_1000E708C();
    if ((type metadata accessor for NewsComponentPosition & 1) != 0)
    {
      v17 = (uint64_t)v12;
      goto LABEL_6;
    }
    v21 = (uint64_t)v12;
LABEL_9:
    sub_1000215BC(v21, type metadata accessor for NewsArticleComponent);
    v20 = 1;
    v19 = v23;
    goto LABEL_10;
  }
  sub_10007802C(v8, (uint64_t)v15, type metadata accessor for NewsArticleComponent);
  sub_1000D1800(v16, enum case for ArticlePlacementLocation.severe(_:));
  sub_1000DA5A0();
  sub_1000E708C();
  if ((type metadata accessor for NewsComponentPosition & 1) == 0)
  {
    v21 = (uint64_t)v15;
    goto LABEL_9;
  }
  v17 = (uint64_t)v15;
LABEL_6:
  v19 = v23;
  sub_10007802C(v17, v23, type metadata accessor for NewsArticleComponent);
  v20 = 0;
LABEL_10:
  _s7Weather24LocationCompositionStateOwst_0(v19, v20, 1, v9);
  sub_100098640();
}

uint64_t sub_100488334()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for AppConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[5];
  v6 = v0[6];
  sub_1000DB418(v0 + 2, v5);
  v7 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v5, v6);
  AppConfiguration.news.getter(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1004883E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD, uint64_t);
  _QWORD *v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  void (*v70)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char v75;
  void (*v76)(char *, uint64_t);
  __n128 v77;
  char *v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, __n128);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  __n128 v121;
  uint64_t v122;
  os_log_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  uint8_t *v143;
  _QWORD v145[2];
  uint64_t v146;
  char *v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  unsigned int v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t, uint64_t);
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  os_log_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;

  v170 = a1;
  v146 = a3;
  v168 = type metadata accessor for WeatherAlert.Prominence(0);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v166 = (char *)v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BE4BF0);
  __chkstk_darwin(v5);
  v7 = (char *)v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v191 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v151 = (char *)v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v189 = (char *)v145 - v11;
  __chkstk_darwin(v12);
  v192 = (char *)v145 - v13;
  v172 = type metadata accessor for NewsArticle(0);
  __chkstk_darwin(v172);
  v176 = (_QWORD *)((char *)v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Article(0);
  v174 = *(_QWORD *)(v15 - 8);
  v175 = v15;
  __chkstk_darwin(v15);
  v173 = (char *)v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BE4BD8);
  __chkstk_darwin(v17);
  v19 = (char *)v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for ArticleModel(0);
  v155 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v150 = (uint64_t)v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v149 = (uint64_t)v145 - v22;
  __chkstk_darwin(v23);
  v169 = (uint64_t)v145 - v24;
  __chkstk_darwin(v25);
  v154 = (uint64_t)v145 - v26;
  __chkstk_darwin(v27);
  v181 = (uint64_t)v145 - v28;
  __chkstk_darwin(v29);
  v186 = (uint64_t)v145 - v30;
  __chkstk_darwin(v31);
  v33 = (char *)v145 - v32;
  v34 = type metadata accessor for WeatherAlert(0);
  __chkstk_darwin(v34);
  __chkstk_darwin(v35);
  v165 = *(_QWORD *)(a2 + 16);
  if (!v165)
  {
LABEL_38:
    v128 = type metadata accessor for NewsComponentPosition(0);
    v129 = v146;
    v130 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v129, v130, 1, v128);
  }
  v188 = (char *)v145 - v36;
  v157 = v38;
  v190 = v7;
  v163 = a2 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  v162 = *(_QWORD *)(v37 + 72);
  v164 = v37;
  v171 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v161 = enum case for ArticlePlacementLocation.severe(_:);
  v160 = enum case for ArticlePlacementLocation.trend(_:);
  v156 = &v194;
  v153 = enum case for WeatherAlert.Prominence.high(_:);
  v152 = enum case for WeatherAlert.Prominence.low(_:);
  v145[1] = a2;
  swift_bridgeObjectRetain();
  v39 = 0;
  *((_QWORD *)&v40 + 1) = 4;
  v159 = xmmword_10097DA20;
  *(_QWORD *)&v40 = 136315650;
  v148 = v40;
  v147 = (char *)&type metadata for Any + 8;
  v158 = v34;
  v182 = v33;
  v180 = v19;
  while (1)
  {
    v41 = v19;
    v177 = v39;
    v171(v188, v163 + v162 * v39, v34);
    v42 = sub_1000BA294(&qword_100BE4BE8);
    v43 = type metadata accessor for ArticlePlacementLocation(0);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(_QWORD *)(v44 + 72);
    v46 = *(unsigned __int8 *)(v44 + 80);
    v47 = (v46 + 32) & ~v46;
    v48 = v34;
    v49 = swift_allocObject(v42, v47 + 2 * v45, v46 | 7);
    *(_OWORD *)(v49 + 16) = v159;
    v50 = *(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104);
    v50(v49 + v47, v161, v43);
    v50(v49 + v47 + v45, v160, v43);
    v179 = v49;
    v51 = sub_100045F7C((_QWORD *)v49);
    v183 = (os_log_t)v51[2];
    v178 = v51;
    if (v183)
    {
      v52 = 0;
      v185 = (char *)v51
           + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80));
      v184 = *(_QWORD *)(v155 + 72);
      v53 = v186;
      do
      {
        sub_100080C0C((uint64_t)&v185[v184 * (_QWORD)v52], v53, type metadata accessor for ArticleModel);
        v54 = v53;
        v55 = v181;
        sub_100080C0C(v54, v181, type metadata accessor for ArticleModel);
        if (swift_getEnumCaseMultiPayload(v55) == 1)
        {
          v56 = v55;
          v57 = (uint64_t)v176;
          sub_10007802C(v56, (uint64_t)v176, type metadata accessor for NewsArticle);
          v58 = *(_QWORD *)(v57 + *(int *)(v172 + 48));
          swift_bridgeObjectRetain();
          sub_1000215BC(v57, type metadata accessor for NewsArticle);
        }
        else
        {
          v60 = v174;
          v61 = v173;
          v62 = v55;
          v63 = v175;
          v64 = (*(double (**)(char *, uint64_t, uint64_t))(v174 + 32))(v173, v62, v175);
          v58 = Article.alertIds.getter(v64);
          v59 = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v61, v63);
        }
        WeatherAlert.id.getter(v59);
        v65 = *(_QWORD *)(v58 + 16);
        if (v65)
        {
          v66 = v191;
          v67 = v58 + ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80));
          v68 = swift_bridgeObjectRetain();
          v69 = *(_QWORD *)(v66 + 72);
          v70 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v66 + 16);
          v71 = (uint64_t)v190;
          while (1)
          {
            v70(v71, v67, v8, v68);
            _s7Weather24LocationCompositionStateOwst_0(v71, 0, 1, v8);
            if (_s7Weather24LocationCompositionStateOwet_0(v71, 1, v8) == 1)
              break;
            v72 = v191;
            v73 = v189;
            (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v189, v71, v8);
            sub_100489B4C(&qword_100BE4C00, (uint64_t)&protocol conformance descriptor for UUID);
            v75 = dispatch thunk of static Equatable.== infix(_:_:)(v73, v192, v8, v74);
            v76 = *(void (**)(char *, uint64_t))(v72 + 8);
            v76(v73, v8);
            if ((v75 & 1) != 0)
            {
              v80 = swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t, __n128))v76)(v192, v8, v80);
              swift_bridgeObjectRelease();
              v19 = v180;
              sub_10007802C(v186, (uint64_t)v180, type metadata accessor for ArticleModel);
              v79 = 0;
              v34 = v158;
              v78 = v188;
              v33 = v182;
              goto LABEL_20;
            }
            v67 += v69;
            --v65;
            v71 = (uint64_t)v190;
            if (!v65)
              goto LABEL_15;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          v71 = (uint64_t)v190;
LABEL_15:
          _s7Weather24LocationCompositionStateOwst_0(v71, 1, 1, v8);
        }
        v52 = (os_log_t)((char *)v52 + 1);
        v77 = swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v191 + 8))(v192, v8, v77);
        swift_bridgeObjectRelease();
        v53 = v186;
        sub_1000215BC(v186, type metadata accessor for ArticleModel);
        v33 = v182;
        v78 = v188;
        v19 = v180;
      }
      while (v52 != v183);
      v79 = 1;
      v34 = v158;
    }
    else
    {
      v79 = 1;
      v34 = v48;
      v19 = v41;
      v78 = v188;
    }
LABEL_20:
    v81 = v187;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, v79, 1, v187);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v81) == 1)
    {
      (*(void (**)(char *, uint64_t))(v164 + 8))(v78, v34);
      sub_100021A14((uint64_t)v19, &qword_100BE4BD8);
      goto LABEL_36;
    }
    sub_10007802C((uint64_t)v19, (uint64_t)v33, type metadata accessor for ArticleModel);
    v82 = v169;
    if (qword_100BC24D0 != -1)
      swift_once(&qword_100BC24D0, sub_100159668);
    v83 = type metadata accessor for Logger(0);
    v84 = sub_1000AECD4(v83, (uint64_t)qword_100CAF258);
    v85 = v154;
    sub_100080C0C((uint64_t)v33, v154, type metadata accessor for ArticleModel);
    sub_100080C0C((uint64_t)v33, v82, type metadata accessor for ArticleModel);
    v86 = v157;
    v87 = ((uint64_t (*)(uint64_t, char *, uint64_t))v171)(v157, v78, v34);
    v184 = v84;
    v88 = Logger.logObject.getter(v87);
    LODWORD(v185) = static os_log_type_t.default.getter(v88);
    if (os_log_type_enabled(v88, (os_log_type_t)v185))
    {
      v183 = v88;
      v89 = swift_slowAlloc(32, -1);
      v179 = swift_slowAlloc(96, -1);
      v194 = v179;
      *(_DWORD *)v89 = v148;
      v90 = v149;
      sub_100080C0C(v85, v149, type metadata accessor for ArticleModel);
      v91 = v85;
      if (swift_getEnumCaseMultiPayload(v90) == 1)
      {
        v92 = v90;
        v93 = v176;
        sub_10007802C(v92, (uint64_t)v176, type metadata accessor for NewsArticle);
        v95 = *v93;
        v94 = v93[1];
        swift_bridgeObjectRetain();
        sub_1000215BC((uint64_t)v93, type metadata accessor for NewsArticle);
      }
      else
      {
        v97 = v174;
        v98 = v173;
        v99 = v90;
        v100 = v175;
        v101.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v174 + 32))(v173, v99, v175);
        v95 = Article.id.getter(v101);
        v94 = v102;
        (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v100);
      }
      v193 = sub_1000CE1C8(v95, v94, &v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v193, v156);
      swift_bridgeObjectRelease();
      sub_1000215BC(v91, type metadata accessor for ArticleModel);
      *(_WORD *)(v89 + 12) = 2080;
      v103 = v150;
      sub_100080C0C(v169, v150, type metadata accessor for ArticleModel);
      if (swift_getEnumCaseMultiPayload(v103) == 1)
      {
        v104 = v103;
        v105 = (uint64_t)v176;
        sub_10007802C(v104, (uint64_t)v176, type metadata accessor for NewsArticle);
        v106 = *(_QWORD *)(v105 + *(int *)(v172 + 48));
        swift_bridgeObjectRetain();
        sub_1000215BC(v105, type metadata accessor for NewsArticle);
      }
      else
      {
        v107 = v174;
        v108 = v173;
        v109 = v103;
        v110 = v175;
        v111 = (*(double (**)(char *, uint64_t, uint64_t))(v174 + 32))(v173, v109, v175);
        v106 = Article.alertIds.getter(v111);
        (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v110);
      }
      v112 = Array.description.getter(v106, v8);
      v114 = v113;
      swift_bridgeObjectRelease();
      v193 = sub_1000CE1C8(v112, v114, &v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v193, v156);
      swift_bridgeObjectRelease();
      sub_1000215BC(v169, type metadata accessor for ArticleModel);
      *(_WORD *)(v89 + 22) = 2080;
      v115 = v151;
      v116 = v157;
      WeatherAlert.id.getter(v117);
      sub_100489B4C(&qword_100BE4BF8, (uint64_t)&protocol conformance descriptor for UUID);
      v118 = dispatch thunk of CustomStringConvertible.description.getter(v8);
      v120 = v119;
      (*(void (**)(char *, uint64_t))(v191 + 8))(v115, v8);
      v193 = sub_1000CE1C8(v118, v120, &v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v193, v156);
      v121 = swift_bridgeObjectRelease();
      v96 = *(void (**)(uint64_t, uint64_t, __n128))(v164 + 8);
      v122 = v158;
      v96(v116, v158, v121);
      v123 = v183;
      _os_log_impl((void *)&_mh_execute_header, v183, (os_log_type_t)v185, "NewsArticleComponentFactory - Matched article %s with article.alertIds=%s for alert %s", (uint8_t *)v89, 0x20u);
      v124 = v179;
      swift_arrayDestroy(v179, 3);
      swift_slowDealloc(v124, -1, -1);
      v125 = v89;
      v34 = v122;
      swift_slowDealloc(v125, -1, -1);

      v33 = v182;
    }
    else
    {
      sub_1000215BC(v85, type metadata accessor for ArticleModel);
      sub_1000215BC(v82, type metadata accessor for ArticleModel);
      v96 = *(void (**)(uint64_t, uint64_t, __n128))(v164 + 8);
      ((void (*)(uint64_t, uint64_t))v96)(v86, v34);

    }
    v126 = v166;
    WeatherAlert.prominence.getter();
    v127 = (*(uint64_t (**)(char *, uint64_t))(v167 + 88))(v126, v168);
    if (v127 == v153)
      break;
    if (v127 == v152)
    {
      swift_bridgeObjectRelease();
      v141 = Logger.logObject.getter(v140);
      v142 = static os_log_type_t.default.getter(v141);
      if (os_log_type_enabled(v141, v142))
      {
        v143 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v143 = 0;
        _os_log_impl((void *)&_mh_execute_header, v141, v142, "NewsArticleComponentFactory - Placing matched article above1x1s", v143, 2u);
        swift_slowDealloc(v143, -1, -1);
      }

      v135 = v146;
      sub_10007802C((uint64_t)v33, v146, type metadata accessor for ArticleModel);
      *(_BYTE *)(v135 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20)) = 0;
      ((void (*)(char *, uint64_t))v96)(v78, v34);
      v136 = type metadata accessor for NewsComponentPosition(0);
      v137 = v135;
      v138 = v136;
      v139 = 4;
      goto LABEL_45;
    }
    sub_1000215BC((uint64_t)v33, type metadata accessor for ArticleModel);
    ((void (*)(char *, uint64_t))v96)(v78, v34);
    (*(void (**)(char *, uint64_t))(v167 + 8))(v166, v168);
LABEL_36:
    v39 = v177 + 1;
    if (v177 + 1 == v165)
    {
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRelease();
  v132 = Logger.logObject.getter(v131);
  v133 = static os_log_type_t.default.getter(v132);
  if (os_log_type_enabled(v132, v133))
  {
    v134 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v134 = 0;
    _os_log_impl((void *)&_mh_execute_header, v132, v133, "NewsArticleComponentFactory - Placing matched article belowSevereAlert", v134, 2u);
    swift_slowDealloc(v134, -1, -1);
  }

  v135 = v146;
  sub_10007802C((uint64_t)v33, v146, type metadata accessor for ArticleModel);
  *(_BYTE *)(v135 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20)) = 0;
  ((void (*)(char *, uint64_t))v96)(v78, v34);
  v136 = type metadata accessor for NewsComponentPosition(0);
  v137 = v135;
  v138 = v136;
  v139 = 0;
LABEL_45:
  swift_storeEnumTagMultiPayload(v137, v138, v139);
  v129 = v135;
  v130 = 0;
  v128 = v136;
  return _s7Weather24LocationCompositionStateOwst_0(v129, v130, 1, v128);
}

void sub_10048937C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  __n128 v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v45 = a1;
  v47 = type metadata accessor for NewsConfiguration.SeverePlacement(0);
  v5 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - v8;
  v10 = type metadata accessor for NewsConfiguration(0);
  v44 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - v14;
  if (qword_100BC24D0 != -1)
    swift_once(&qword_100BC24D0, sub_100159668);
  v16 = type metadata accessor for Logger(0);
  sub_1000AECD4(v16, (uint64_t)qword_100CAF258);
  v17 = swift_retain_n(v2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v42 = v5;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v43 = a2;
    v41 = v22;
    v49 = v22;
    *(_DWORD *)v21 = 136315138;
    v40 = v21 + 4;
    v23 = sub_100488334();
    NewsConfiguration.severePlacement.getter(v23);
    v24 = v9;
    v25 = v44;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v10);
    v26 = v47;
    v27 = String.init<A>(describing:)(v24);
    v48 = sub_1000CE1C8(v27, v28, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    swift_release_n(v3, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "NewsArticleComponentFactory - Severe article with no phenomenon found, placing at newsConfiguration.severePlacement=%s", v21, 0xCu);
    v29 = v41;
    swift_arrayDestroy(v41, 1);
    a2 = v43;
    swift_slowDealloc(v29, -1, -1);
    v30 = v21;
    v5 = v42;
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
    v26 = v47;
    v25 = v44;
  }
  v31 = sub_100488334();
  v32 = v46;
  NewsConfiguration.severePlacement.getter(v31);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v32, v26);
  if (v33 == enum case for NewsConfiguration.SeverePlacement.aboveDailyForecast(_:))
  {
    sub_100080C0C(v45, a2, type metadata accessor for ArticleModel);
    *(_BYTE *)(a2 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20)) = 0;
    v34 = type metadata accessor for NewsComponentPosition(0);
    v35 = a2;
    v36 = 2;
LABEL_10:
    swift_storeEnumTagMultiPayload(v35, v34, v36);
    return;
  }
  v37 = v33;
  v38 = enum case for NewsConfiguration.SeverePlacement.belowSevereAlert(_:);
  sub_100080C0C(v45, a2, type metadata accessor for ArticleModel);
  *(_BYTE *)(a2 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20)) = 0;
  v34 = type metadata accessor for NewsComponentPosition(0);
  v35 = a2;
  if (v37 == v38)
  {
    v36 = 1;
    goto LABEL_10;
  }
  v39 = swift_storeEnumTagMultiPayload(a2, v34, 2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v32, v26, v39);
}

void sub_10048973C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  __n128 v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v45 = a1;
  v47 = type metadata accessor for NewsConfiguration.TrendingPlacement(0);
  v5 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - v8;
  v10 = type metadata accessor for NewsConfiguration(0);
  v44 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - v14;
  if (qword_100BC24D0 != -1)
    swift_once(&qword_100BC24D0, sub_100159668);
  v16 = type metadata accessor for Logger(0);
  sub_1000AECD4(v16, (uint64_t)qword_100CAF258);
  v17 = swift_retain_n(v2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v42 = v5;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v43 = a2;
    v41 = v22;
    v49 = v22;
    *(_DWORD *)v21 = 136315138;
    v40 = v21 + 4;
    v23 = sub_100488334();
    NewsConfiguration.trendingPlacement.getter(v23);
    v24 = v9;
    v25 = v44;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v10);
    v26 = v47;
    v27 = String.init<A>(describing:)(v24);
    v48 = sub_1000CE1C8(v27, v28, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    swift_release_n(v3, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "NewsArticleComponentFactory - Trend article with no phenomenon found, placing at newsConfiguration.trendPlacement=%s", v21, 0xCu);
    v29 = v41;
    swift_arrayDestroy(v41, 1);
    a2 = v43;
    swift_slowDealloc(v29, -1, -1);
    v30 = v21;
    v5 = v42;
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
    v26 = v47;
    v25 = v44;
  }
  v31 = sub_100488334();
  v32 = v46;
  NewsConfiguration.trendingPlacement.getter(v31);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v32, v26);
  if (v33 == enum case for NewsConfiguration.TrendingPlacement.aboveAirQuality(_:))
  {
    sub_100080C0C(v45, a2, type metadata accessor for ArticleModel);
    *(_BYTE *)(a2 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20)) = 0;
    v34 = type metadata accessor for NewsComponentPosition(0);
    v35 = a2;
    v36 = 3;
LABEL_12:
    swift_storeEnumTagMultiPayload(v35, v34, v36);
    return;
  }
  v37 = v33;
  if (v33 == enum case for NewsConfiguration.TrendingPlacement.belowMap(_:))
  {
    sub_100080C0C(v45, a2, type metadata accessor for ArticleModel);
    *(_BYTE *)(a2 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20)) = 0;
    v34 = type metadata accessor for NewsComponentPosition(0);
    v35 = a2;
    v36 = 4;
    goto LABEL_12;
  }
  v38 = enum case for NewsConfiguration.TrendingPlacement.belowVisibilityAndPressure(_:);
  sub_100080C0C(v45, a2, type metadata accessor for ArticleModel);
  *(_BYTE *)(a2 + *(int *)(type metadata accessor for NewsArticleComponent(0) + 20)) = 0;
  v34 = type metadata accessor for NewsComponentPosition(0);
  v35 = a2;
  if (v37 == v38)
  {
    v36 = 5;
    goto LABEL_12;
  }
  v39 = swift_storeEnumTagMultiPayload(a2, v34, 3);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v32, v26, v39);
}

void sub_100489B4C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for UUID(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

uint64_t sub_100489B88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100489BE8 + 4 * byte_1009A2280[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_10048A9F4(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      type metadata accessor for ArticleModel(0);
      if (swift_getEnumCaseMultiPayload(a1) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v2 = (int *)type metadata accessor for NewsArticle(0);
        v3 = a1 + v2[6];
        v4 = type metadata accessor for URL(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
        v5 = a1 + v2[7];
        v6 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
        v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
        v7(a1 + v2[8], v4);
        v8 = a1 + v2[9];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v8 + *(int *)(type metadata accessor for NewsChannel(0) + 24);
        if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v4))
          v7(v9, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = type metadata accessor for Article(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
      }
      break;
    default:
      return;
  }
}

void sub_10048ABA0(uint64_t a1, uint64_t a2)
{
  char *v2;

  v2 = (char *)sub_10048ABF8 + 4 * byte_1009A228C[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

char *sub_10048ABF8()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for ArticleModel(0);
  if (swift_getEnumCaseMultiPayload(v2) == 1)
  {
    v39 = v4;
    v5 = *((_QWORD *)v2 + 1);
    *(_QWORD *)v0 = *(_QWORD *)v2;
    *((_QWORD *)v0 + 1) = v5;
    v6 = *((_QWORD *)v2 + 3);
    *((_QWORD *)v0 + 2) = *((_QWORD *)v2 + 2);
    *((_QWORD *)v0 + 3) = v6;
    v7 = (int *)type metadata accessor for NewsArticle(0);
    v8 = v7[6];
    v9 = &v0[v8];
    v10 = &v2[v8];
    v11 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    v40 = v1;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BD4280);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v17 = v7[7];
    v18 = &v0[v17];
    v19 = &v2[v17];
    v20 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v21(&v0[v7[8]], &v2[v7[8]], v11);
    v22 = v7[9];
    v23 = &v0[v22];
    v24 = &v2[v22];
    v25 = *(_QWORD *)&v2[v22 + 8];
    *(_QWORD *)v23 = *(_QWORD *)&v2[v22];
    *((_QWORD *)v23 + 1) = v25;
    v26 = *(_QWORD *)&v2[v22 + 24];
    *((_QWORD *)v23 + 2) = *(_QWORD *)&v2[v22 + 16];
    *((_QWORD *)v23 + 3) = v26;
    v27 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v28 = &v23[v27];
    v29 = &v24[v27];
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v26);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v11))
    {
      v30 = sub_1000BA294(&qword_100BD4280);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v21(v28, v29, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v11);
    }
    v1 = v40;
    v31 = v7[10];
    v32 = *(_QWORD *)&v2[v31];
    *(_QWORD *)&v0[v31] = v32;
    v33 = v7[11];
    v34 = *(_QWORD *)&v2[v33];
    *(_QWORD *)&v0[v33] = v34;
    v35 = v7[12];
    v36 = *(_QWORD *)&v2[v35];
    *(_QWORD *)&v0[v35] = v36;
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v36);
    v14 = v0;
    v15 = v39;
    v16 = 1;
  }
  else
  {
    v13 = type metadata accessor for Article(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v0, v2, v13);
    v14 = v0;
    v15 = v4;
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v15, v16);
  v37 = type metadata accessor for NewsArticleComponent(0);
  v0[*(int *)(v37 + 20)] = v2[*(int *)(v37 + 20)];
  swift_storeEnumTagMultiPayload(v0, v1, v3);
  return v0;
}

uint64_t sub_10048AE70(uint64_t result, uint64_t a2)
{
  char *v3;

  if (result != a2)
  {
    sub_1000215BC(result, type metadata accessor for NewsComponentPosition);
    v3 = (char *)&loc_10048AEE0 + 4 * byte_1009A2292[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_10048B178(uint64_t a1, uint64_t a2)
{
  char *v2;

  v2 = (char *)sub_10048B1CC + 4 * byte_1009A2298[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

char *sub_10048B1CC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for ArticleModel(0);
  if (swift_getEnumCaseMultiPayload(v2) == 1)
  {
    v5 = *((_OWORD *)v2 + 1);
    *(_OWORD *)v0 = *(_OWORD *)v2;
    *((_OWORD *)v0 + 1) = v5;
    v6 = (int *)type metadata accessor for NewsArticle(0);
    v7 = v6[6];
    v8 = &v0[v7];
    v9 = &v2[v7];
    v10 = type metadata accessor for URL(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_1000BA294(&qword_100BD4280);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v16 = v6[7];
    v17 = &v0[v16];
    v18 = &v2[v16];
    v19 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v20(&v0[v6[8]], &v2[v6[8]], v10);
    v21 = v6[9];
    v22 = &v0[v21];
    v23 = &v2[v21];
    v24 = *(_OWORD *)&v2[v21 + 16];
    *(_OWORD *)v22 = *(_OWORD *)&v2[v21];
    *((_OWORD *)v22 + 1) = v24;
    v25 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
    v26 = &v22[v25];
    v27 = &v23[v25];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v10))
    {
      v28 = sub_1000BA294(&qword_100BD4280);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v20(v26, v27, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v10);
    }
    *(_QWORD *)&v0[v6[10]] = *(_QWORD *)&v2[v6[10]];
    *(_QWORD *)&v0[v6[11]] = *(_QWORD *)&v2[v6[11]];
    *(_QWORD *)&v0[v6[12]] = *(_QWORD *)&v2[v6[12]];
    v13 = v0;
    v14 = v4;
    v15 = 1;
  }
  else
  {
    v12 = type metadata accessor for Article(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v0, v2, v12);
    v13 = v0;
    v14 = v4;
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v14, v15);
  v29 = type metadata accessor for NewsArticleComponent(0);
  v0[*(int *)(v29 + 20)] = v2[*(int *)(v29 + 20)];
  swift_storeEnumTagMultiPayload(v0, v1, v3);
  return v0;
}

uint64_t sub_10048B3F0(uint64_t result, uint64_t a2)
{
  char *v3;

  if (result != a2)
  {
    sub_1000215BC(result, type metadata accessor for NewsComponentPosition);
    v3 = (char *)&loc_10048B45C + 4 * byte_1009A229E[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  return result;
}

unint64_t sub_10048B6CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BE4D68;
  if (!qword_100BE4D68)
  {
    v1 = type metadata accessor for ViewState(255);
    result = swift_getWitnessTable(&unk_1009C7420, v1);
    atomic_store(result, (unint64_t *)&qword_100BE4D68);
  }
  return result;
}

uint64_t sub_10048B70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for LocationOfInterestType(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_10048BE3C(&qword_100BC3120, (uint64_t)&protocol conformance descriptor for LocationOfInterestType),
        v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8),
        v10 = -1 << *(_BYTE *)(a2 + 32),
        v11 = v9 & ~v10,
        ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_10048BE3C(&qword_100BC3140, (uint64_t)&protocol conformance descriptor for LocationOfInterestType);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

void sub_10048B880(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1000CCDA4(a1);
    v5 = sub_1004A8B18(v3);
    sub_1000C49C4(v5, v6, v7);
    sub_1000986C4();
    sub_10007A148();
    sub_1000BC220();
    if ((v8 & 1) != 0)
      __asm { BR              X9 }
  }
  sub_1000BDA2C();
}

void sub_10048BA34(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1000CCDA4(a1);
    v5 = sub_1004A8BE0(v3);
    sub_1000C49C4(v5, v6, v7);
    sub_1000986C4();
    sub_10007A148();
    sub_1000BC220();
    if ((v8 & 1) != 0)
      __asm { BR              X9 }
  }
  sub_1000BDA2C();
}

void sub_10048BC30(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1;
    Hasher.init(_seed:)(v9);
    Hasher._combine(_:)(v3);
    v4 = sub_10007A148() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0
      && *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v4) != (_DWORD)v3)
    {
      sub_1000DCF28();
      if ((v7 & 1) != 0)
      {
        do
        {
          if (*(unsigned __int8 *)(v5 + v6) == (_DWORD)v3)
            break;
          sub_1000DCF28();
        }
        while ((v8 & 1) != 0);
      }
    }
  }
}

BOOL sub_10048BD40()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) == 0;
}

uint64_t sub_10048BD7C()
{
  uint64_t v0;

  sub_1001267BC();
  return swift_deallocClassInstance(v0, 32, 7);
}

void sub_10048BD9C()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000B2E08);
}

void sub_10048BDA8()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005FED1C);
}

void sub_10048BDB4()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005FED58);
}

void sub_10048BDC0()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005FF148);
}

void sub_10048BDCC()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005FF104);
}

void sub_10048BDD8()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005FED00);
}

void sub_10048BDE4()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005FF450);
}

void sub_10048BDF0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    *v1 = a1(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  sub_100079F70();
}

uint64_t sub_10048BE3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LocationOfInterestType(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10048BE7C@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];

  v6 = v3;
  v8 = *v3;
  v9 = sub_1000BA294(&qword_100BD4B90);
  __chkstk_darwin(v9);
  sub_10009883C();
  v12 = v10 - v11;
  __chkstk_darwin(v13);
  v15 = &v22[-v14];
  v16 = (uint64_t)v6 + *a1;
  swift_beginAccess(v16, v23, 0, 0);
  sub_10003773C(v16, (uint64_t)v15, &qword_100BD4B90);
  v17 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a3, v15, v17);
  sub_100021A14((uint64_t)v15, &qword_100BD4B90);
  v18 = static Settings.VFX.animatedBackgrounds.getter();
  v19 = a2();
  swift_release(v18);
  sub_100086DA4(&qword_100BE4F38, type metadata accessor for WeatherConditionBackgroundStoreObserver, (uint64_t)&unk_1009A24C0);
  Configurable.setting<A>(_:)(v19, v8, v20);
  swift_release(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, a3, v17);
  _s7Weather24LocationCompositionStateOwst_0(v12, 0, 1, v17);
  swift_beginAccess(v16, v22, 33, 0);
  sub_1002D6D28(v12, v16);
  return swift_endAccess(v22);
}

uint64_t sub_10048C03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5[12] = a4;
  v5[13] = a5;
  v6 = sub_1000BA294(&qword_100BC3460);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocationsState(0);
  v5[15] = v7;
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC35F8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[18] = swift_task_alloc(v9);
  v5[19] = swift_task_alloc(v9);
  v10 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for WeatherConditionBackgroundTimeData(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[20] = swift_task_alloc(v10);
  v5[21] = swift_task_alloc(v10);
  v11 = type metadata accessor for TimeState(0);
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v5[23] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[24] = v13;
  v5[25] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OSSignpostID(0);
  v5[26] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v5[27] = v15;
  v5[28] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10048C1B4, 0, 0);
}

uint64_t sub_10048C1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v55 = (_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = objc_retain(*(id *)(*(_QWORD *)(v0 + 96)
                         + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_logger));
  v9 = OSSignpostID.init(log:)(v8);
  v10 = static os_signpost_type_t.begin.getter(v9);
  v54 = v8;
  os_signpost(_:dso:log:name:signpostID:)(v10, &_mh_execute_header, v8, "Weather:prewarm_weatherConditionBackgroundTimeData", 50, 2, v1);
  v11 = *(_QWORD *)(v7 + 64);
  sub_10000AB54(v11 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v5, type metadata accessor for TimeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v5, v4);
  v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + *(int *)(v6 + 20));
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v52 = v7;
    v14 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(type metadata accessor for SavedLocation(0) - 8);
    v16 = v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v56 = *(_QWORD *)(v15 + 72);
    v57 = v14
        + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_weatherConditionBackgroundTimeDataFactory;
    swift_bridgeObjectRetain(v12);
    do
    {
      v17 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
      v18 = *(_QWORD *)(v0 + 160);
      v19 = *(_QWORD *)(v0 + 144);
      v20 = *(_QWORD *)(v0 + 112);
      sub_100043CA8(v57, v0 + 16);
      v21 = sub_1000DB418((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      SavedLocation.location.getter(v21);
      v22 = type metadata accessor for WeatherData(0);
      sub_10009D34C(v20, v23, v24, v22);
      sub_1003B4364(v19, v20, v17, v18);
      sub_100021A14(v20, &qword_100BC3460);
      sub_100021A14(v19, &qword_100BC35F8);
      sub_1000215BC(v18, type metadata accessor for WeatherConditionBackgroundTimeData);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
      v16 += v56;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v7 = v52;
  }
  v25 = *(_QWORD *)(v0 + 128);
  v26 = *(_QWORD *)(v0 + 136);
  sub_100043CA8(*(_QWORD *)(v0 + 96)+ OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_weatherConditionBackgroundTimeDataFactory, (uint64_t)v55);
  sub_1000DB418(v55, *(_QWORD *)(v0 + 80));
  sub_10000AB54(*(_QWORD *)(v7 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v25, type metadata accessor for LocationsState);
  sub_10003773C(v25, v26, (uint64_t *)&unk_100C0D170);
  sub_1000215BC(v25, type metadata accessor for LocationsState);
  v27 = type metadata accessor for CurrentLocation(0);
  v28 = _s7Weather24LocationCompositionStateOwet_0(v26, 1, v27);
  v29 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 136);
  if ((_DWORD)v28 == 1)
  {
    sub_100021A14(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_100C0D170);
    v31 = type metadata accessor for Location(0);
    sub_10009D34C(v29, v32, v33, v31);
  }
  else
  {
    CurrentLocation.location.getter(v28);
    sub_1000215BC(v30, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  v35 = *(_QWORD *)(v0 + 216);
  v34 = *(_QWORD *)(v0 + 224);
  v37 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
  v36 = *(_QWORD *)(v0 + 208);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 168);
  v48 = *(_QWORD *)(v0 + 184);
  v49 = *(_QWORD *)(v0 + 176);
  v40 = *(_QWORD *)(v0 + 152);
  v50 = *(_QWORD *)(v0 + 160);
  v51 = *(_QWORD *)(v0 + 144);
  v53 = *(_QWORD *)(v0 + 136);
  v58 = *(_QWORD *)(v0 + 128);
  v41 = *(_QWORD *)(v0 + 112);
  v42 = type metadata accessor for WeatherData(0);
  sub_10009D34C(v41, v43, v44, v42);
  sub_1003B4364(v40, v41, v37, v39);
  sub_100021A14(v41, &qword_100BC3460);
  sub_100021A14(v40, &qword_100BC35F8);
  sub_1000215BC(v39, type metadata accessor for WeatherConditionBackgroundTimeData);
  v45 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v55);
  v46 = static os_signpost_type_t.end.getter(v45);
  os_signpost(_:dso:log:name:signpostID:)(v46, &_mh_execute_header, v54, "Weather:prewarm_weatherConditionBackgroundTimeData", 50, 2, v34);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  (*(void (**)(_QWORD, uint64_t))(v38 + 8))(v37, v48);
  swift_task_dealloc(v34);
  swift_task_dealloc(v37);
  swift_task_dealloc(v49);
  swift_task_dealloc(v39);
  swift_task_dealloc(v50);
  swift_task_dealloc(v40);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v58);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10048C5D0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100021A14(v0 + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___locationAnimationKind, &qword_100BD4B90);
  sub_100021A14(v0 + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___listAnimationKind, &qword_100BD4B90);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0
                                                           + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_weatherConditionBackgroundTimeDataFactory));

  sub_10004A298();
}

uint64_t sub_10048C648()
{
  uint64_t v0;

  sub_10048C5D0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10048C66C()
{
  return type metadata accessor for WeatherConditionBackgroundStoreObserver(0);
}

_QWORD *sub_10048C674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v29 = a6;
  v30 = a9;
  v18 = sub_10005F164(v28);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v18, a3, a6);
  v19 = (_QWORD *)swift_allocObject(a4, *(unsigned int *)(a4 + 48), *(unsigned __int16 *)(a4 + 52));
  v20 = sub_100068EB4((uint64_t)v28, v29);
  v21 = __chkstk_darwin(v20);
  v23 = (_QWORD *)((char *)&v28[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
  v25 = sub_10048C790(a1, a2, *v23, v19, a5, a7, a8, a10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
  return v25;
}

_QWORD *sub_10048C790(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;

  v19 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
  v20 = &off_100B70D90;
  *(_QWORD *)&v18 = a3;
  v14 = (uint64_t)a4
      + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___locationAnimationKind;
  v15 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a4 + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___listAnimationKind, 1, 1, v15);
  v16 = OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_logger;
  sub_100120350();
  *(_QWORD *)((char *)a4 + v16) = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0x776569567473694CLL, 0xE800000000000000);
  *((_BYTE *)a4 + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_hasPrewarmDone) = 0;
  a4[2] = a1;
  a4[3] = a7;
  a4[4] = a2;
  a4[5] = a8;
  sub_10003C800(&v18, (uint64_t)a4+ OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_weatherConditionBackgroundTimeDataFactory);
  return a4;
}

uint64_t sub_10048C8B4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release();
  if (v0[8])
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10048C908(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100BE4F2C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100445EA4;
  return sub_10048C03C(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10048C984()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10048C9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  NSBundle v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  Swift::String v41;

  v2 = v0;
  v40 = *(_OWORD *)(v0 + 16);
  v38 = 6829106;
  v39 = 0xE300000000000000;
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v41._object = (void *)0x8000000100A05F80;
  sub_1000C5524();
  v41._countAndFlagsBits = 0xD000000000000021;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, v7, v8, v41);

  v37 = v9;
  v10 = sub_100114EF8();
  sub_1000C35D0((uint64_t)&v38, (uint64_t)&v37);
  sub_1000DF680();
  sub_1000B2E08();
  v12 = v11;
  v13 = *(_QWORD *)(v11 + 16);
  if (v13 >= *(_QWORD *)(v11 + 24) >> 1)
  {
    sub_1000B4A04();
    v12 = v34;
  }
  *(_QWORD *)(v12 + 16) = v13 + 1;
  v14 = v12 + 16 * v13;
  *(_QWORD *)(v14 + 32) = v1;
  *(_QWORD *)(v14 + 40) = &v40;
  v40 = *(_OWORD *)(v0 + 32);
  v38 = 6829106;
  v39 = 0xE300000000000000;
  v15 = objc_msgSend(v3, "mainBundle", &type metadata for String, v10, v10, v10);
  v16 = sub_1000C49DC();
  v18 = v17;

  v37._countAndFlagsBits = v16;
  v37._object = v18;
  sub_1000C35D0((uint64_t)&v38, (uint64_t)&v37);
  sub_1000DF680();
  v19 = *(_QWORD *)(v12 + 16);
  if (v19 >= *(_QWORD *)(v12 + 24) >> 1)
  {
    sub_1000B4A04();
    v12 = v35;
  }
  *(_QWORD *)(v12 + 16) = v19 + 1;
  v20 = v12 + 16 * v19;
  *(_QWORD *)(v20 + 32) = v16;
  *(_QWORD *)(v20 + 40) = &v40;
  v40 = *(_OWORD *)(v2 + 64);
  v38 = 6829106;
  v39 = 0xE300000000000000;
  v21 = objc_msgSend(v3, "mainBundle", &type metadata for String, v10, v10, v10);
  v22 = sub_1000C49DC();
  v24 = v23;

  v37._countAndFlagsBits = v22;
  v37._object = v24;
  v25 = sub_1000C35D0((uint64_t)&v38, (uint64_t)&v37);
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v12 + 16);
  if (v28 >= *(_QWORD *)(v12 + 24) >> 1)
  {
    sub_1000B2E08();
    v12 = v36;
  }
  *(_QWORD *)(v12 + 16) = v28 + 1;
  v29 = v12 + 16 * v28;
  *(_QWORD *)(v29 + 32) = v25;
  *(_QWORD *)(v29 + 40) = v27;
  *(_QWORD *)&v40 = v12;
  v30 = sub_1000BA294(&qword_100BF1280);
  v31 = sub_1000B2E60();
  v32 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v30, v31);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_10048CC78(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 0xD000000000000013)
  {
    v4 = 0x8000000100A05EC0;
    if (a2 == 0x8000000100A05EC0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100A05EC0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000020)
  {
    v6 = 0x8000000100A05EE0;
    if (a2 == 0x8000000100A05EE0)
      goto LABEL_10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000020, 0x8000000100A05EE0, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
LABEL_10:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if (a1 == 0xD000000000000012)
  {
    v7 = 0x8000000100A05F10;
    if (a2 == 0x8000000100A05F10)
      goto LABEL_15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100A05F10, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_15:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    v9 = 0xEB000000006E6F69;
    goto LABEL_23;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7470697263736564, 0xEB000000006E6F69, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_23:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD000000000000020)
  {
    v10 = 0x8000000100A05F30;
    if (a2 == 0x8000000100A05F30)
      goto LABEL_28;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000020, 0x8000000100A05F30, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_28:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x8000000100A05F60)
  {
    swift_bridgeObjectRelease(0x8000000100A05F60);
    return 5;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100A05F60, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_10048CED0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10048CF0C + 4 * byte_1009A2500[a1]))(0xD000000000000013, 0x8000000100A05EC0);
}

uint64_t sub_10048CF0C()
{
  uint64_t v0;

  return v0 + 14;
}

uint64_t sub_10048CF7C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BE4F50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_10048DA18();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for PrecipitationTotalComponentViewModel.CodingKeys, &type metadata for PrecipitationTotalComponentViewModel.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v31 = 0;
  sub_1000BC254(v12, v13, (uint64_t)&v31);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v30 = 1;
    sub_1000BC254(v14, v15, (uint64_t)&v30);
    v16 = v3[4];
    v17 = v3[5];
    v29 = 2;
    sub_1000BC254(v16, v17, (uint64_t)&v29);
    v18 = v3[6];
    v19 = v3[7];
    v28 = 3;
    sub_1000BC254(v18, v19, (uint64_t)&v28);
    v20 = v3[8];
    v21 = v3[9];
    v27 = 4;
    sub_1000BC254(v20, v21, (uint64_t)&v27);
    v22 = v3[10];
    v23 = v3[11];
    v26 = 5;
    sub_1000BC254(v22, v23, (uint64_t)&v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10048D0E8(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v5 = sub_1000BA294(&qword_100BE4F40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_10048DA18();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PrecipitationTotalComponentViewModel.CodingKeys, &type metadata for PrecipitationTotalComponentViewModel.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_1000B4838();
  }
  else
  {
    v44 = 0;
    v12 = sub_1000C2A0C((uint64_t)&v44);
    v43 = 1;
    sub_1000DDB48(v12, v13);
    v14 = sub_1000C2A0C((uint64_t)&v43);
    v38 = v9;
    v34 = v14;
    v35 = v12;
    v42 = 2;
    sub_1000DDB48(v14, v15);
    v16 = sub_1000C2A0C((uint64_t)&v42);
    v36 = v17;
    v37 = v9;
    v33 = v16;
    v41 = 3;
    sub_1000DDB48(v16, v17);
    v32 = sub_1000C2A0C((uint64_t)&v41);
    v40 = 4;
    sub_1000DDB48(v32, v18);
    v30 = sub_1000C2A0C((uint64_t)&v40);
    v31 = v19;
    v39 = 5;
    swift_bridgeObjectRetain(v19);
    v20 = sub_1000C2A0C((uint64_t)&v39);
    v22 = v21;
    v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24 = v20;
    v23(v8, v5);
    v25 = v38;
    swift_bridgeObjectRetain(v38);
    v26 = v37;
    swift_bridgeObjectRetain(v37);
    v27 = v36;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v22);
    sub_1000CC8C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100075DF4();
    sub_1000B4838();
    swift_bridgeObjectRelease();
    v28 = v31;
    swift_bridgeObjectRelease();
    sub_100075DF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000CC8C8();
    *a2 = v35;
    a2[1] = v25;
    a2[2] = v34;
    a2[3] = v26;
    a2[4] = v33;
    a2[5] = v27;
    a2[6] = v32;
    a2[7] = v9;
    a2[8] = v30;
    a2[9] = v28;
    a2[10] = v24;
    a2[11] = v22;
  }
}

uint64_t sub_10048D428()
{
  unsigned __int8 *v0;

  return sub_10048CED0(*v0);
}

uint64_t sub_10048D430@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10048CC78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10048D454(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10048DA18();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10048D47C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10048DA18();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10048D4A4(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4[12];

  sub_10048D0E8(a1, v4);
  if (!v2)
    memcpy(a2, v4, 0x60uLL);
}

uint64_t sub_10048D4EC(_QWORD *a1)
{
  return sub_10048CF7C(a1);
}

void sub_10048D504()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  NSBundle v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23._countAndFlagsBits = 0xD00000000000006BLL;
  v23._object = (void *)0x8000000100A05DD0;
  v1._countAndFlagsBits = 0x6F68206425206E69;
  v1._object = (void *)0xEB00000000737275;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v23);

  v4 = sub_1000BA294(&qword_100BC3C38);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v5 + 56) = &type metadata for Int;
  *(_QWORD *)(v5 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v5 + 32) = 24;
  v6 = static String.localizedStringWithFormat(_:_:)(v3._countAndFlagsBits, v3._object, v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = sub_1000DBA78();
  v10 = sub_1000DCF44();
  v12 = v11;

  v13 = sub_1000DBA78();
  v14 = sub_1000DCF44();
  v16 = v15;

  v17 = sub_1000DBA78();
  v24._object = (void *)0x8000000100A05EA0;
  sub_1000C5524();
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, v20, v21, v24);

  qword_100CAEB90 = 1835212848;
  *(_QWORD *)algn_100CAEB98 = 0xE400000000000000;
  qword_100CAEBA0 = 1835212848;
  unk_100CAEBA8 = 0xE400000000000000;
  qword_100CAEBB0 = v6;
  unk_100CAEBB8 = v8;
  qword_100CAEBC0 = v10;
  unk_100CAEBC8 = v12;
  qword_100CAEBD0 = v14;
  unk_100CAEBD8 = v16;
  xmmword_100CAEBE0 = (__int128)v22;
}

double destroy for PrecipitationTotalComponentViewModel(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[11]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for PrecipitationTotalComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

_QWORD *assignWithCopy for PrecipitationTotalComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[10] = a2[10];
  v14 = a2[11];
  v15 = a1[11];
  a1[11] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

_QWORD *assignWithTake for PrecipitationTotalComponentViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[11];
  v15 = a1[11];
  a1[10] = a2[10];
  a1[11] = v14;
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationTotalComponentViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrecipitationTotalComponentViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationTotalComponentViewModel()
{
  return &type metadata for PrecipitationTotalComponentViewModel;
}

unint64_t sub_10048DA18()
{
  unint64_t result;

  result = qword_100BE4F48;
  if (!qword_100BE4F48)
  {
    result = swift_getWitnessTable(&unk_1009A2674, &type metadata for PrecipitationTotalComponentViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE4F48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PrecipitationTotalComponentViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10048DAA0 + 4 * byte_1009A250B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10048DAD4 + 4 * byte_1009A2506[v4]))();
}

uint64_t sub_10048DAD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048DADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10048DAE4);
  return result;
}

uint64_t sub_10048DAF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10048DAF8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10048DAFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048DB04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationTotalComponentViewModel.CodingKeys()
{
  return &type metadata for PrecipitationTotalComponentViewModel.CodingKeys;
}

unint64_t sub_10048DB24()
{
  unint64_t result;

  result = qword_100BE4F58;
  if (!qword_100BE4F58)
  {
    result = swift_getWitnessTable(&unk_1009A264C, &type metadata for PrecipitationTotalComponentViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE4F58);
  }
  return result;
}

unint64_t sub_10048DB64()
{
  unint64_t result;

  result = qword_100BE4F60;
  if (!qword_100BE4F60)
  {
    result = swift_getWitnessTable(&unk_1009A25BC, &type metadata for PrecipitationTotalComponentViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE4F60);
  }
  return result;
}

unint64_t sub_10048DBA4()
{
  unint64_t result;

  result = qword_100BE4F68;
  if (!qword_100BE4F68)
  {
    result = swift_getWitnessTable(&unk_1009A25E4, &type metadata for PrecipitationTotalComponentViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE4F68);
  }
  return result;
}

_QWORD *sub_10048DBE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v51;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for CurrentLocation(0);
    v51 = a1;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
    {
      v9 = sub_1000BA294((uint64_t *)&unk_100C0D170);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_14:
      v19 = (int *)type metadata accessor for LocationsState(0);
      v20 = v19[5];
      v21 = *(_QWORD *)&v7[v20];
      *(_QWORD *)&v6[v20] = v21;
      v22 = v19[6];
      v23 = *(_QWORD *)&v7[v22];
      *(_QWORD *)&v6[v22] = v23;
      v24 = v19[7];
      v25 = *(_QWORD *)&v7[v24];
      *(_QWORD *)&v6[v24] = v25;
      v26 = v19[8];
      v27 = *(_QWORD *)&v7[v26];
      *(_QWORD *)&v6[v26] = v27;
      v28 = v19[9];
      v29 = *(_QWORD *)&v7[v28];
      *(_QWORD *)&v6[v28] = v29;
      v30 = v19[10];
      v31 = *(_QWORD *)&v7[v30];
      *(_QWORD *)&v6[v30] = v31;
      v32 = v19[11];
      v33 = *(_QWORD *)&v7[v32];
      *(_QWORD *)&v6[v32] = v33;
      v34 = v19[12];
      v35 = &v6[v34];
      v36 = &v7[v34];
      v47 = *((_QWORD *)v36 + 1);
      v48 = *(_QWORD *)v36;
      v46 = v36[16];
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v33);
      sub_100163980(v48, v47, v46);
      *(_QWORD *)v35 = v48;
      *((_QWORD *)v35 + 1) = v47;
      v35[16] = v46;
      v37 = v19[13];
      v38 = *(_QWORD *)&v7[v37];
      *(_QWORD *)&v6[v37] = v38;
      v39 = *(int *)(a3 + 24);
      v11 = v51;
      v40 = (_QWORD *)((char *)v51 + v39);
      v41 = (_QWORD *)((char *)a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      v43 = v41[2];
      v44 = v41[3];
      v40[2] = v43;
      v40[3] = v44;
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
      swift_bridgeObjectRetain(v44);
      return v11;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7);
    if (EnumCaseMultiPayload == 2)
    {
      v17 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v6, v7, v17);
      v14 = v6;
      v15 = v8;
      v16 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v18 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v6, v7, v18);
      v14 = v6;
      v15 = v8;
      v16 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        goto LABEL_13;
      }
      v13 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, v7, v13);
      v14 = v6;
      v15 = v8;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
LABEL_13:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
    goto LABEL_14;
  }
  v10 = *a2;
  *a1 = *a2;
  v11 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
  swift_retain();
  return v11;
}

double sub_10048DEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for CurrentLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v2, 1, v3)
    && swift_getEnumCaseMultiPayload(v2) <= 2)
  {
    v4 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  }
  v5 = type metadata accessor for LocationsState(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001639C8(*(_QWORD *)(v2 + *(int *)(v5 + 48)), *(_QWORD *)(v2 + *(int *)(v5 + 48) + 8), *(_BYTE *)(v2 + *(int *)(v5 + 48) + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_10048DFCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v43;
  uint64_t v44;
  char *v45;

  *a1 = *a2;
  v3 = *(int *)(a3 + 20);
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = type metadata accessor for CurrentLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v4, v5, v13);
      v10 = v4;
      v11 = v6;
      v12 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v4, v5, v14);
      v10 = v4;
      v11 = v6;
      v12 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_11;
      }
      v9 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v4, v5, v9);
      v10 = v4;
      v11 = v6;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
LABEL_11:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v6);
    goto LABEL_12;
  }
  v7 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_12:
  v15 = (int *)type metadata accessor for LocationsState(0);
  v16 = v15[5];
  v17 = *(_QWORD *)&v5[v16];
  *(_QWORD *)&v4[v16] = v17;
  v18 = v15[6];
  v19 = *(_QWORD *)&v5[v18];
  *(_QWORD *)&v4[v18] = v19;
  v20 = v15[7];
  v21 = *(_QWORD *)&v5[v20];
  *(_QWORD *)&v4[v20] = v21;
  v22 = v15[8];
  v23 = *(_QWORD *)&v5[v22];
  *(_QWORD *)&v4[v22] = v23;
  v24 = v15[9];
  v25 = *(_QWORD *)&v5[v24];
  *(_QWORD *)&v4[v24] = v25;
  v26 = v15[10];
  v27 = *(_QWORD *)&v5[v26];
  *(_QWORD *)&v4[v26] = v27;
  v28 = v15[11];
  v29 = *(_QWORD *)&v5[v28];
  *(_QWORD *)&v4[v28] = v29;
  v30 = v15[12];
  v45 = v4;
  v31 = &v4[v30];
  v32 = &v5[v30];
  v33 = *((_QWORD *)v32 + 1);
  v44 = *(_QWORD *)v32;
  v43 = v32[16];
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v29);
  sub_100163980(v44, v33, v43);
  *(_QWORD *)v31 = v44;
  *((_QWORD *)v31 + 1) = v33;
  v31[16] = v43;
  v34 = v15[13];
  v35 = *(_QWORD *)&v5[v34];
  *(_QWORD *)&v45[v34] = v35;
  v36 = *(int *)(a3 + 24);
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = v38[2];
  v41 = v38[3];
  v37[2] = v40;
  v37[3] = v41;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v41);
  return a1;
}

_QWORD *sub_10048E270(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for CurrentLocation(0);
  v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
      if (EnumCaseMultiPayload == 2)
      {
        v23 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v7, v8, v23);
        v14 = v7;
        v15 = v9;
        v16 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v24 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v7, v8, v24);
        v14 = v7;
        v15 = v9;
        v16 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_20;
        }
        v13 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, v8, v13);
        v14 = v7;
        v15 = v9;
        v16 = 0;
      }
      swift_storeEnumTagMultiPayload(v14, v15, v16);
LABEL_20:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v11)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_1000979AC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      v18 = swift_getEnumCaseMultiPayload(v8);
      if (v18 == 2)
      {
        v25 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v7, v8, v25);
        v20 = v7;
        v21 = v9;
        v22 = 2;
      }
      else if (v18 == 1)
      {
        v26 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v7, v8, v26);
        v20 = v7;
        v21 = v9;
        v22 = 1;
      }
      else
      {
        if (v18)
        {
          v17 = *(_QWORD *)(v9 - 8);
          goto LABEL_10;
        }
        v19 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v8, v19);
        v20 = v7;
        v21 = v9;
        v22 = 0;
      }
      swift_storeEnumTagMultiPayload(v20, v21, v22);
      goto LABEL_24;
    }
    sub_1000979AC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  v17 = *(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100C0D170) - 8);
LABEL_10:
  memcpy(v7, v8, *(_QWORD *)(v17 + 64));
LABEL_24:
  v27 = (int *)type metadata accessor for LocationsState(0);
  v28 = v27[5];
  v29 = *(_QWORD *)&v8[v28];
  *(_QWORD *)&v7[v28] = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease();
  v30 = v27[6];
  v31 = *(_QWORD *)&v8[v30];
  *(_QWORD *)&v7[v30] = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease();
  v32 = v27[7];
  v33 = *(_QWORD *)&v8[v32];
  *(_QWORD *)&v7[v32] = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease();
  v34 = v27[8];
  v35 = *(_QWORD *)&v8[v34];
  *(_QWORD *)&v7[v34] = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease();
  v36 = v27[9];
  v37 = *(_QWORD *)&v8[v36];
  *(_QWORD *)&v7[v36] = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease();
  v38 = v27[10];
  v39 = *(_QWORD *)&v8[v38];
  *(_QWORD *)&v7[v38] = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease();
  v40 = v27[11];
  v41 = *(_QWORD *)&v8[v40];
  *(_QWORD *)&v7[v40] = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease();
  v42 = v27[12];
  v43 = &v7[v42];
  v44 = &v8[v42];
  v45 = *(_QWORD *)v44;
  v46 = *((_QWORD *)v44 + 1);
  v47 = v44[16];
  sub_100163980(*(_QWORD *)v44, v46, v47);
  v48 = *(_QWORD *)v43;
  v49 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v43 = v45;
  *((_QWORD *)v43 + 1) = v46;
  v50 = v43[16];
  v43[16] = v47;
  sub_1001639C8(v48, v49, v50);
  v51 = v27[13];
  v52 = *(_QWORD *)&v8[v51];
  *(_QWORD *)&v7[v51] = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease();
  v53 = *(int *)(a3 + 24);
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (char *)a2 + v53;
  *v54 = *(_QWORD *)((char *)a2 + v53);
  v56 = *(_QWORD *)((char *)a2 + v53 + 8);
  v54[1] = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease();
  v57 = *((_QWORD *)v55 + 2);
  v54[2] = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease();
  v58 = *((_QWORD *)v55 + 3);
  v54[3] = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_10048E66C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for CurrentLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
    if (EnumCaseMultiPayload == 2)
    {
      v16 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v7, v8, v16);
      v13 = v7;
      v14 = v9;
      v15 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v7, v8, v17);
      v13 = v7;
      v14 = v9;
      v15 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        goto LABEL_11;
      }
      v12 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      v13 = v7;
      v14 = v9;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
LABEL_11:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    goto LABEL_12;
  }
  v10 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_12:
  v18 = (int *)type metadata accessor for LocationsState(0);
  *(_QWORD *)&v7[v18[5]] = *(_QWORD *)&v8[v18[5]];
  *(_QWORD *)&v7[v18[6]] = *(_QWORD *)&v8[v18[6]];
  *(_QWORD *)&v7[v18[7]] = *(_QWORD *)&v8[v18[7]];
  *(_QWORD *)&v7[v18[8]] = *(_QWORD *)&v8[v18[8]];
  *(_QWORD *)&v7[v18[9]] = *(_QWORD *)&v8[v18[9]];
  *(_QWORD *)&v7[v18[10]] = *(_QWORD *)&v8[v18[10]];
  *(_QWORD *)&v7[v18[11]] = *(_QWORD *)&v8[v18[11]];
  v19 = v18[12];
  v20 = &v7[v19];
  v21 = &v8[v19];
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v20[16] = v21[16];
  *(_QWORD *)&v7[v18[13]] = *(_QWORD *)&v8[v18[13]];
  v22 = *(int *)(a3 + 24);
  v23 = (_OWORD *)((char *)a1 + v22);
  v24 = (_OWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  return a1;
}

_QWORD *sub_10048E870(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for CurrentLocation(0);
  v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
      if (EnumCaseMultiPayload == 2)
      {
        v23 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v7, v8, v23);
        v14 = v7;
        v15 = v9;
        v16 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v24 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v7, v8, v24);
        v14 = v7;
        v15 = v9;
        v16 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_20;
        }
        v13 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
        v14 = v7;
        v15 = v9;
        v16 = 0;
      }
      swift_storeEnumTagMultiPayload(v14, v15, v16);
LABEL_20:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v11)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_1000979AC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      v18 = swift_getEnumCaseMultiPayload(v8);
      if (v18 == 2)
      {
        v25 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v7, v8, v25);
        v20 = v7;
        v21 = v9;
        v22 = 2;
      }
      else if (v18 == 1)
      {
        v26 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v7, v8, v26);
        v20 = v7;
        v21 = v9;
        v22 = 1;
      }
      else
      {
        if (v18)
        {
          v17 = *(_QWORD *)(v9 - 8);
          goto LABEL_10;
        }
        v19 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v7, v8, v19);
        v20 = v7;
        v21 = v9;
        v22 = 0;
      }
      swift_storeEnumTagMultiPayload(v20, v21, v22);
      goto LABEL_24;
    }
    sub_1000979AC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  v17 = *(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100C0D170) - 8);
LABEL_10:
  memcpy(v7, v8, *(_QWORD *)(v17 + 64));
LABEL_24:
  v27 = (int *)type metadata accessor for LocationsState(0);
  *(_QWORD *)&v7[v27[5]] = *(_QWORD *)&v8[v27[5]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v27[6]] = *(_QWORD *)&v8[v27[6]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v27[7]] = *(_QWORD *)&v8[v27[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v27[8]] = *(_QWORD *)&v8[v27[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v27[9]] = *(_QWORD *)&v8[v27[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v27[10]] = *(_QWORD *)&v8[v27[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v27[11]] = *(_QWORD *)&v8[v27[11]];
  swift_bridgeObjectRelease();
  v28 = v27[12];
  v29 = &v7[v28];
  v30 = &v8[v28];
  v31 = v30[16];
  v32 = *(_QWORD *)v29;
  v33 = *((_QWORD *)v29 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v34 = v29[16];
  v29[16] = v31;
  sub_1001639C8(v32, v33, v34);
  *(_QWORD *)&v7[v27[13]] = *(_QWORD *)&v8[v27[13]];
  swift_bridgeObjectRelease();
  v35 = *(int *)(a3 + 24);
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v36[2] = v37[2];
  swift_bridgeObjectRelease();
  v36[3] = v37[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10048EBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048EC00);
}

uint64_t sub_10048EC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for LocationsState(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_10048EC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048EC8C);
}

uint64_t sub_10048EC8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for LocationsState(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for PresetAppState(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE4FC8;
  if (!qword_100BE4FC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PresetAppState);
  return result;
}

uint64_t sub_10048ED40(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for LocationsState(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = " ";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10048EDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v16 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v6 = sub_100089108();
  v7 = type metadata accessor for PresetAppState(v6);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100079F58();
  v9 = Data.init(contentsOf:options:)(a1, 0);
  v11 = v10;
  v12 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = JSONDecoder.init()();
  sub_100086DA4(&qword_100BE5008, type metadata accessor for PresetAppState, (uint64_t)&unk_1009A2728);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v7, v9, v11, v7, v14);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v16);
  swift_release(v13);
  sub_1000DDB54();
  sub_1000A15B4(v2, a2, type metadata accessor for PresetAppState);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v7);
}

uint64_t sub_10048F144(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v9;

  if (a1 == 1701669236 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701669236, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEE00657461745373)
  {
    v8 = 0xEE00657461745373;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xEE00657461745373, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100A05FB0)
  {
    swift_bridgeObjectRelease(0x8000000100A05FB0);
    return 2;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100A05FB0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_10048F2A4(char a1)
{
  if (!a1)
    return 1701669236;
  if (a1 == 1)
    return 0x6E6F697461636F6CLL;
  return 0xD000000000000010;
}

uint64_t sub_10048F304(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100BE5020);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_10048F788();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for PresetAppState.CodingKeys, &type metadata for PresetAppState.CodingKeys, v10, v8, v9);
  LOBYTE(v20) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v20, v6);
  if (!v2)
  {
    v11 = type metadata accessor for PresetAppState(0);
    v12 = v4 + *(int *)(v11 + 20);
    LOBYTE(v20) = 1;
    v13 = type metadata accessor for LocationsState(0);
    sub_100086DA4(&qword_100BC9FE8, type metadata accessor for LocationsState, (uint64_t)&unk_1009C0EC8);
    sub_1000B4634(v12, (uint64_t)&v20, v6, v13, v14);
    v15 = (uint64_t *)(v4 + *(int *)(v11 + 24));
    v16 = v15[3];
    v20 = *v15;
    v21 = *(_OWORD *)(v15 + 1);
    v22 = v16;
    v19 = 2;
    v17 = sub_1001F57A4();
    sub_1000B4634((uint64_t)&v20, (uint64_t)&v19, v6, (uint64_t)&type metadata for WeatherDataState, v17);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

void sub_10048F494(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;

  v18 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079F58();
  v19 = sub_1000BA294(&qword_100BE5010);
  v7 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v8 = sub_100089108();
  v9 = type metadata accessor for PresetAppState(v8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100079FBC();
  v12 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v12);
  v13 = sub_10048F788();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PresetAppState.CodingKeys, &type metadata for PresetAppState.CodingKeys, v13, v12, v11);
  if (v20)
  {
    sub_1000CCDB8();
  }
  else
  {
    LOBYTE(v21) = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v21, v19);
    *v3 = v14;
    LOBYTE(v21) = 1;
    sub_100086DA4(&qword_100BCA230, type metadata accessor for LocationsState, (uint64_t)&unk_1009C0EF0);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v18, &v21, v19);
    sub_1000A15B4(v2, (uint64_t)v3 + *(int *)(v9 + 20), type metadata accessor for LocationsState);
    v24 = 2;
    sub_1001F5E70();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for WeatherDataState, &v24, v19);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v19);
    v15 = v23;
    v16 = (char *)v3 + *(int *)(v9 + 24);
    *(_QWORD *)v16 = v21;
    *(_OWORD *)(v16 + 8) = v22;
    *((_QWORD *)v16 + 3) = v15;
    sub_10048F7C4((uint64_t)v3, a2);
    sub_1000CCDB8();
    sub_1000979AC((uint64_t)v3, type metadata accessor for PresetAppState);
  }
}

uint64_t sub_10048F6E4()
{
  char *v0;

  return sub_10048F2A4(*v0);
}

uint64_t sub_10048F6EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10048F144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10048F710(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10048F788();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10048F738(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10048F788();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10048F760(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10048F494(a1, a2);
}

uint64_t sub_10048F774(_QWORD *a1)
{
  return sub_10048F304(a1);
}

unint64_t sub_10048F788()
{
  unint64_t result;

  result = qword_100BE5018;
  if (!qword_100BE5018)
  {
    result = swift_getWitnessTable(&unk_1009A2814, &type metadata for PresetAppState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5018);
  }
  return result;
}

uint64_t sub_10048F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PresetAppState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for PresetAppState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10048F854 + 4 * byte_1009A26CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10048F888 + 4 * byte_1009A26C8[v4]))();
}

uint64_t sub_10048F888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048F890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10048F898);
  return result;
}

uint64_t sub_10048F8A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10048F8ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10048F8B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048F8B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PresetAppState.CodingKeys()
{
  return &type metadata for PresetAppState.CodingKeys;
}

unint64_t sub_10048F8D8()
{
  unint64_t result;

  result = qword_100BE5028;
  if (!qword_100BE5028)
  {
    result = swift_getWitnessTable(&unk_1009A27EC, &type metadata for PresetAppState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5028);
  }
  return result;
}

unint64_t sub_10048F918()
{
  unint64_t result;

  result = qword_100BE5030;
  if (!qword_100BE5030)
  {
    result = swift_getWitnessTable(&unk_1009A275C, &type metadata for PresetAppState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5030);
  }
  return result;
}

unint64_t sub_10048F958()
{
  unint64_t result;

  result = qword_100BE5038;
  if (!qword_100BE5038)
  {
    result = swift_getWitnessTable(&unk_1009A2784, &type metadata for PresetAppState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BE5038);
  }
  return result;
}

_QWORD *assignWithCopy for WeatherConditionBackgroundBindingModifierWithVFXBackground(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v4 = a2[2];
  v5 = a2[3];
  v6 = a1[2];
  a1[2] = v4;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[3] = v5;
  sub_100094D04(a1 + 4, a2 + 4);
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WeatherConditionBackgroundBindingModifierWithVFXBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease(v6);
  *(_QWORD *)(a1 + 24) = v5;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 32));
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

id sub_10048FAA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController____lazy_storage___dateFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController____lazy_storage___dateFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    sub_1000BD398(v4, "setDateStyle:");
    sub_1000BD398(v4, "setTimeStyle:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10048FB34(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController____lazy_storage___dateFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController_notificationStore] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController_messages] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DebugIncomingMessagesViewController();
  return objc_msgSendSuper2(&v4, "initWithStyle:", 2);
}

void sub_10048FB8C()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x706F2D6F6ELL, 0xE500000000000000, "Weather/DebugIncomingMessagesViewController.swift", 49, 2);
  __break(1u);
}

void sub_10048FC04()
{
  void *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t ObjCClassFromMetadata;
  NSString v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DebugIncomingMessagesViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(v0, "tableView");
  if (v1)
  {
    v2 = v1;
    v3 = sub_1003E9A38();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
    v5 = sub_1000B4550();
    objc_msgSend(v2, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v5);

    sub_1001207F8(0xD000000000000011, 0x80000001009FF120, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10048FCFC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController_messages) + 16);
}

unint64_t sub_10048FD30()
{
  return 0xD000000000000067;
}

unint64_t sub_10048FD88(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSString v11;
  Class isa;
  id v13;
  uint64_t v14;
  __n128 v15;
  unint64_t result;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  Class v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(unint64_t *, _QWORD);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;

  v4 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for UIListContentConfiguration(0);
  v38 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100099864();
  v39 = type metadata accessor for IncomingMessageEntity(0);
  v8 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000B4550();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v11, isa);

  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController_messages);
  result = IndexPath.row.getter(v15);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (result >= *(_QWORD *)(v14 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v17 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * result, v39);
  static UIListContentConfiguration.subtitleCell()(v17);
  IncomingMessageEntity.messageID.getter(v18);
  dispatch thunk of Column.value.getter(&v40);
  sub_10009880C();
  v19 = sub_1004907AC(v40, v41);
  swift_bridgeObjectRelease();
  UIListContentConfiguration.text.setter(v19);
  UIListContentConfiguration.textProperties.modify(&v40);
  UIListContentConfiguration.TextProperties.numberOfLines.setter(1);
  sub_100098D88();
  UIListContentConfiguration.textProperties.modify(&v40);
  UIListContentConfiguration.TextProperties.lineBreakMode.setter(4);
  sub_100098D88();
  v40 = 0;
  v41 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v40 = 0x203A65746144;
  v41 = 0xE600000000000000;
  v20 = sub_10048FAA4();
  IncomingMessageEntity.date.getter(v21);
  dispatch thunk of Column.value.getter(v6);
  sub_10009880C();
  v22 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v22);
  if ((_DWORD)result != 1)
  {
    v23 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v6, v22);
    v24 = objc_msgSend(v20, "stringFromDate:", v23);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28._countAndFlagsBits = v25;
    v28._object = v27;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    v29._countAndFlagsBits = 0x656E6E6168430A20;
    v29._object = (void *)0xEB00000000203A6CLL;
    String.append(_:)(v29);
    IncomingMessageEntity.channel.getter(v30);
    dispatch thunk of Column.value.getter(&v44);
    sub_10009880C();
    v31 = v44;
    v32 = v45;
    if (v45)
    {
      if (v45 != 1)
        goto LABEL_9;
    }
    else
    {
      sub_1000EE98C(v44, 0);
    }
    v32 = 0xE700000000000000;
    v31 = 0x6E776F6E6B6E55;
LABEL_9:
    v33 = v32;
    String.append(_:)(*(Swift::String *)&v31);
    swift_bridgeObjectRelease();
    UIListContentConfiguration.secondaryText.setter(v40);
    v34 = (void (*)(unint64_t *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(&v40);
    UIListContentConfiguration.TextProperties.numberOfLines.setter(0);
    v34(&v40, 0);
    v42 = v7;
    v43 = &protocol witness table for UIListContentConfiguration;
    v35 = sub_10005F164(&v40);
    v36 = v38;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v38 + 16))(v35, v2, v7);
    UITableViewCell.contentConfiguration.setter(&v40);
    sub_1000BD398(v13, "setAccessoryType:");
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v2, v7);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v39);
    return (unint64_t)v13;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_100490240()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;

  v2 = v0;
  v3 = type metadata accessor for IncomingMessageEntity(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100099864();
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather35DebugIncomingMessagesViewController_messages];
  v7 = IndexPath.row.getter(v6);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v7 >= *(_QWORD *)(v5 + 16))
  {
LABEL_7:
    __break(1u);
    return;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v1, v5+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v7, v3);
  objc_allocWithZone((Class)type metadata accessor for DebugIncomingMessageViewController(0));
  swift_retain();
  v9 = sub_1002BB3D4(v8, v1);
  v10 = (char *)objc_msgSend(v2, "navigationController");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "pushViewController:animated:", v9, 1);

    v9 = v11;
  }

}

